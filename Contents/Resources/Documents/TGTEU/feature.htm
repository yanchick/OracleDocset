<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106831"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Teradata%20Gateway%20Features%20and%20Restrictions"></a><title>Teradata Gateway Features and Restrictions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1090"/>
<meta name="dcterms.created" content="2017-06-09T12:36:1Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Gateway for Teradata User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17934-04"/>
<meta name="dcterms.isVersionOf" content="TGTEU"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="intro.htm" title="Previous" type="text/html"/>
<link rel="Next" href="casestudies.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17934-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/12</span> <!-- End Header -->
<div id="TGTEU200" class="chapter"><a id="g1010511"></a> <a id="i1005545"></a>
<h1 class="chapter"><span class="secnum">2</span> Teradata Gateway Features and Restrictions</h1>
<p>After the gateway is installed and configured, you can use the gateway to access Teradata data, pass Teradata commands from applications to the Teradata database, perform distributed queries, and copy data.</p>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#i1005577">Using the Pass-Through Feature</a></p>
</li>
<li>
<p><a href="#CFHFDBEA">Executing Stored Procedures and Functions</a></p>
</li>
<li>
<p><a href="#CFHDJEEJ">CHAR Semantics</a></p>
</li>
<li>
<p><a href="#CFHFJHCB">Multi-byte Character Sets Ratio Suppression</a></p>
</li>
<li>
<p><a href="#CFHHJCGF">IPv6 Support</a></p>
</li>
<li>
<p><a href="#CFHBDEBB">Gateway Session IDLE Timeout</a></p>
</li>
<li>
<p><a href="#i1005620">Database Compatibility Issues for Teradata</a></p>
</li>
<li>
<p><a href="#i1005911">Known Restrictions</a></p>
</li>
<li>
<p><a href="#i1006159">Known Problems</a></p>
</li>
</ul>
<a id="i1005577"></a>
<div id="TGTEU704" class="sect1">
<h2 class="sect1">Using the Pass-Through Feature<a id="sthref4"></a></h2>
<p>The gateway can pass Teradata commands or statements from the application directly to the Teradata database using the <code dir="ltr">DBMS_HS_PASSTHROUGH</code> package.</p>
<p>Use the <code dir="ltr">DBMS_HS_PASSTHROUGH</code> package in a PL/SQL block to specify the statement to be passed to the Teradata database, as follows:</p>
<pre dir="ltr">DECLARE
    num_rows INTEGER;
BEGIN
    num_rows := DBMS_HS_PASSTHROUGH.EXECUTE_IMMEDIATE@TERA(&#39;<span class="italic">command</span>&#39;);
END;
/
</pre>
<p>Where <code dir="ltr"><span class="codeinlineitalic">command</span></code> cannot be one of the following:</p>
<ul>
<li>
<p><code dir="ltr">BEGIN TRANSACTION</code></p>
</li>
<li>
<p><code dir="ltr">BT</code></p>
</li>
<li>
<p><code dir="ltr">COMMIT</code></p>
</li>
<li>
<p><code dir="ltr">END TRANSACTION</code></p>
</li>
<li>
<p><code dir="ltr">ET</code></p>
</li>
<li>
<p><code dir="ltr">ROLLBACK</code></p>
</li>
</ul>
<p>The <code dir="ltr">DBMS_HS_PASSTHROUGH</code> package supports passing bind values and executing <code dir="ltr">SELECT</code> statements.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> and <a class="olink HETER003" href="../HETER/GUID-13FD7B76-9463-4EE3-8DDA-13C1AA7C815C.htm#HETER003">Chapter 3, Features of Oracle Database Gateways,</a> of <span class="italic">Oracle Database Heterogeneous Connectivity User&#39;s Guide</span> for more information about the <code dir="ltr">DBMS_HS_PASSTHROUGH</code> package.</div>
</div>
<!-- class="sect1" -->
<a id="CFHFDBEA"></a>
<div id="TGTEU857" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Executing Stored Procedures and Functions</h2>
<p>Using the procedural feature, the gateway can execute stored procedures that are defined in the Teradata database. It is not necessary to relink the gateway or define the procedure to the gateway, but the procedure&#39;s access privileges must permit access by the gateway.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HETER" href="../HETER/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User&#39;s Guide</span></a> for more information about executing stored procedures.</div>
<p>Standard PL/SQL statements are used to execute a stored procedure.</p>
<p>The gateway supports stored procedures in three mutually exclusive modes:</p>
<ul>
<li>
<p>Normal mode: Have access to <code dir="ltr">IN</code>/<code dir="ltr">OUT</code> arguments only</p>
</li>
<li>
<p>Return value mode: Have a return value for all stored procedures</p>
</li>
<li>
<p>Resultset mode: Out values are available as last result set</p>
</li>
</ul>
<div id="TGTEU858" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref5"></a>
<h3 class="sect2">Return Values and Stored Procedures</h3>
<p>By default, all stored procedures and functions do not return a return value to the user. To enable return values, set the <code dir="ltr">HS_FDS_PROC_IS_FUNC</code> parameter in the initialization parameter file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apd.htm#i634548">Appendix D, &#34;Initialization Parameters&#34;</a> for information about both editing the initialization parameter file and the <code dir="ltr">HS_FDS_PROC_IS_FUNC</code> parameter.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you set the <code dir="ltr">HS_FDS_PROC_IS_FUNC</code> gateway initialization parameter, you must change the syntax of the procedure execute statement for all existing stored procedures.</div>
<p>In the following example, the employee name <code dir="ltr">JOHN SMYTHE</code> is passed to the Teradata stored procedure <code dir="ltr">REVISE_SALARY</code>. The stored procedure retrieves the salary value from the Teradata database to calculate a new yearly salary for <code dir="ltr">JOHN SMYTHE</code>. The revised salary returned in <code dir="ltr">RESULT</code> is used to update <code dir="ltr">EMP</code> in a table of an Oracle database:</p>
<pre dir="ltr">DECLARE
  INPUT VARCHAR2(15);
  RESULT NUMBER(8,2);
BEGIN
  INPUT := &#39;JOHN SMYTHE&#39;;
  RESULT := REVISE_SALARY@TERA(INPUT);
  UPDATE EMP SET SAL = RESULT WHERE ENAME =: INPUT;
END;
/
</pre>
<p>The procedural feature automatically converts non-Oracle data types to and from PL/SQL data types.</p>
</div>
<!-- class="sect2" -->
<div id="TGTEU859" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref6"></a>
<h3 class="sect2">Result Sets and Stored Procedures</h3>
<p>The Oracle Database Gateway for Teradata provides support for stored procedures which return result sets.</p>
<p>By default, all stored procedures and functions do not return a result set to the user. To enable result sets, set the <code dir="ltr">HS_FDS_RESULTSET_SUPPORT</code> parameter in the initialization parameter file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apd.htm#i634548">Appendix D, &#34;Initialization Parameters&#34;</a> for information about both editing the initialization parameter file and the <code dir="ltr">HS_FDS_RESULTSET_SUPPORT</code> parameter. For further information about Oracle support for result sets in non-Oracle databases see <a class="olink HETER" href="../HETER/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User&#39;s Guide</span></a>.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you set the <code dir="ltr">HS_FDS_RESULTSET_SUPPORT</code> gateway initialization parameter, you must change the syntax of the procedure execute statement for all existing stored procedures or errors will occur.</div>
<p>When accessing stored procedures with result sets through the Oracle Database Gateway for Teradata, you will be in the sequential mode of Heterogeneous Services.</p>
<p>The Oracle Database Gateway for Teradata returns the following information to Heterogeneous Services during procedure description:</p>
<ul>
<li>
<p>All the input arguments of the remote stored procedure</p>
</li>
<li>
<p>None of the output arguments</p>
</li>
<li>
<p>One out argument of type ref cursor (corresponding to the first result set returned by the stored procedure)</p>
</li>
</ul>
<p>Client programs have to use the virtual package function <code dir="ltr">dbms_hs_result_set.get_next_result_set</code> to get the ref cursor for subsequent result sets. The last result set returned is the out argument from the procedure.</p>
<p>The limitations of accessing result sets are the following:</p>
<ul>
<li>
<p>Result sets returned by a remote stored procedure have to be retrieved in the order in which they were placed on the wire</p>
</li>
<li>
<p>On execution of a stored procedure, all result sets returned by a previously executed stored procedure will be closed (regardless of whether the data has been completely</p>
</li>
</ul>
<p>In the following example, the Teradata stored procedure is executed to fetch the contents of the <code dir="ltr">emp</code> and <code dir="ltr">dept</code> tables from Teradata:</p>
<pre dir="ltr">CREATE PROCEDURE refcurproc (@arg1 varchar(255), @arg2 varchar(255) output)
AS
SECLECT @arg2 = @arg1
SELECT * FROM EMP
SELECT * FROM DEPT
GO
</pre>
<p>This stored procedure assigns the input parameter <code dir="ltr">arg1</code> to the output parameter <code dir="ltr">arg2</code>, opens the query <code dir="ltr">SELECT * FROM EMP</code> in ref cursor <code dir="ltr">rc1</code>, and opens the query <code dir="ltr">SELECT * FROM DEPT</code> in ref cursor <code dir="ltr">rc2</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Chained mode must be set before creating the stored procedure. Issue the following command in Teradata: <code dir="ltr">set chained on</code></div>
<div id="TGTEU860" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref7"></a>
<h4 class="sect3">OCI Program Fetching from Result Sets in Sequential Mode</h4>
<p>The following example shows OCI program fetching from result sets in sequential mode:</p>
<pre dir="ltr">OCIEnv *ENVH;
OCISvcCtx *SVCH;
OCIStmt *STMH;
OCIError *ERRH;
OCIBind *BNDH[3];
OraText arg1[20];
OraText arg2[255];
OCIResult *rset;
OCIStmt *rstmt;
ub2 rcode[3];
ub2 rlens[3];
sb2 inds[3];
OraText *stmt = (OraText *) &#34;begin refcurproc@TERA(:1,:2,:3); end;&#34;;
OraText *n_rs_stm = (OraText *)
  &#34;begin :ret := DBMS_HS_RESULT_SET.GET_NEXT_RESULT_SET@TERA; end;&#34;;

/* Prepare procedure call statement */

/* Handle Initialization code skipped */
OCIStmtPrepare(STMH, ERRH, stmt, strlen(stmt), OCI_NTV_SYNTAX, OCI_DEFAULT);

/* Bind procedure arguments */
inds[0] = 0;
strcpy((char *) arg1, &#34;Hello World&#34;);
rlens[0] = strlen(arg1);
OCIBindByPos(STMH, &amp;BNDH[0], ERRH, 1, (dvoid *) arg1, 20, SQLT_CHR,
             (dvoid *) &amp;(inds[0]), &amp;(rlens[0]), &amp;(rcode[0]), 0, (ub4 *) 0, 
             OCI_DEFAULT);
inds[1] = -1;
OCIBindByPos(STMH, &amp;BNDH[1], ERRH, 1, (dvoid *) arg2, 20, SQLT_CHR,
             (dvoid *) &amp;(inds[1]), &amp;(rlens[1]), &amp;(rcode[1]), 0, (ub4 *) 0, 
             OCI_DEFAULT);

inds[2] = 0;
rlens[2] = 0;
OCIDescriptorAlloc(ENVH, (dvoid **) &amp;rset, OCI_DTYPE_RSET, 0, (dvoid **) 0);
OCIBindByPos(STMH, &amp;BNDH[2], ERRH, 2, (dvoid *) rset, 0, SQLT_RSET,
             (dvoid *) &amp;(inds[2]), &amp;(rlens[2]), &amp;(rcode[2]),
             0, (ub4 *) 0, OCI_DEFAULT);

/* Execute procedure */
OCIStmtExecute(SVCH, STMH, ERRH, 1, 0, (CONST OCISnapshot *) 0,
               (OCISnapshot *) 0, OCI_DEFAULT);

/* Convert result set to statement handle */
OCIResultSetToStmt(rset, ERRH);
rstmt = (OCIStmt *) rset;

/* After this the user can fetch from rstmt */
/* Issue get_next_result_set call to get handle to next_result set */
/* Prepare Get next result set procedure call */

OCIStmtPrepare(STMH, ERRH, n_rs_stm, strlen(n_rs_stm), OCI_NTV_SYNTAX,
               OCI_DEFAULT);

/* Bind return value */
OCIBindByPos(STMH, &amp;BNDH[1], ERRH, 1, (dvoid *) rset, 0, SQLT_RSET,
             (dvoid *) &amp;(inds[1]), &amp;(rlens[1]), &amp;(rcode[1]),
             0, (ub4 *) 0, OCI_DEFAULT);

/* Execute statement to get next result set*/
OCIStmtExecute(SVCH, STMH, ERRH, 1, 0, (CONST OCISnapshot *) 0,
               (OCISnapshot *) 0, OCI_DEFAULT);

/* Convert next result set to statement handle */
OCIResultSetToStmt(rset, ERRH);
rstmt = (OCIStmt *) rset;

/* Now rstmt will point to the second result set returned by the
remote stored procedure */

/* Repeat execution of get_next_result_set to get the output arguments */
</pre></div>
<!-- class="sect3" -->
<div id="TGTEU861" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref8"></a>
<h4 class="sect3">PL/SQL Program Fetching from Result Sets in Sequential Mode</h4>
<p>Assume that the table <code dir="ltr">loc_emp</code> is a local table exactly like the Teradata emp table. The same assumption applies for <code dir="ltr">loc_dept</code>. <code dir="ltr">outargs</code> is a table with columns corresponding to the out arguments of the Teradata stored procedure.</p>
<pre dir="ltr">create or replace package rcpackage is
  type RCTYPE is ref cursor;
end rcpackage;
/
</pre>
<pre dir="ltr">declare
  rc1 rcpackage.rctype;
  rec1 loc_emp%rowtype;
  rc2 rcpackage.rctype;
  rec2 loc_dept%rowtype;
  rc3 rcpackage.rctype;
  rec3 outargs%rowtype;
  out_arg varchar2(255);

begin

  -- Execute procedure
  out_arg := null;  refcurproc@TERA(&#39;Hello World&#39;, out_arg, rc1);

  -- Fetch 20 rows from the remote emp table and insert them into loc_emp
  for i in 1 .. 20 loop
    fetch rc1 into rec1;
    insert into loc_emp (rec1.empno, rec1.ename, rec1.job,
    rec1.mgr, rec1.hiredate, rec1.sal, rec1.comm, rec1.deptno);
  end loop;

  -- Close ref cursor
  close rc1;

  -- Get the next result set returned by the stored procedure
  rc2 := dbms_hs_result_set.get_next_result_set@TERA;

  -- Fetch 5 rows from the remote dept table and insert them into loc_dept
  for i in 1 .. 5 loop
    fetch rc2 into rec2;
    insert into loc_dept values (rec2.deptno, rec2.dname, rec2.loc);
  end loop;

  --Close ref cursor
  close rc2;

  -- Get the output arguments from the remote stored procedure
  -- Since we are in sequential mode, they will be returned in the
  -- form of a result set
  rc3 := dbms_hs_result_set.get_next_result_set@TERA;

  -- Fetch them and insert them into the outarguments table
  fetch rc3 into rec3;
  insert into outargs (rec3.outarg, rec3.retval);

  -- Close ref cursor
  close rc3;

end;
/
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CFHDJEEJ"></a>
<div id="TGTEU810" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">CHAR Semantics</h2>
<p>This feature allows the gateway to optionally run in <code dir="ltr">CHAR</code> Semantics mode. Rather than always describing Teradata <code dir="ltr">CHAR</code> columns as <code dir="ltr">CHAR(n BYTE)</code>, this feature describes them as <code dir="ltr">CHAR(n CHAR)</code> and <code dir="ltr">VARCHAR(n CHAR)</code>. The concept is similar to Oracle database <code dir="ltr">CHAR</code> Semantics. You need to specify <code dir="ltr">HS_NLS_LENGTH_SEMANTICS=CHAR</code> to activate this option. Refer to <a href="apd.htm#i634548">Appendix D</a> for more detail.</p>
</div>
<!-- class="sect1" -->
<a id="CFHFJHCB"></a>
<div id="TGTEU811" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Multi-byte Character Sets Ratio Suppression</h2>
<p>This feature optionally suppresses the ratio expansion from Teradata database to Oracle databases involving a multi-byte character set (for example, from <code dir="ltr">US7ASCII</code> to <code dir="ltr">AL32UTF8</code>, or from <code dir="ltr">KO16MSWIN949</code> to <code dir="ltr">KO16KSC5601</code>). By default, Oracle gateways assume the worst ratio to prevent data being truncated or allocation of buffer with insufficient size. However, if you have specific knowledge of your Teradata database and do not want the expansion to occur, you can specify <code dir="ltr">HS_KEEP_REMOTE_COLUMN_SIZE</code> parameter to suppress the expansion. Refer to <a href="apd.htm#i634548">Appendix D</a> for more detail.</p>
</div>
<!-- class="sect1" -->
<a id="CFHHJCGF"></a>
<div id="TGTEU812" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">IPv6 Support</h2>
<p>Besides full IPv6 support between Oracle databases and the gateway, IPv6 is also supported between this gateway and Teradata. Refer to <code dir="ltr">HS_FDS_CONNECT_INFO</code> parameter in <a href="apd.htm#i634548">Appendix D</a> for more detail.</p>
</div>
<!-- class="sect1" -->
<a id="CFHBDEBB"></a>
<div id="TGTEU813" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Gateway Session IDLE Timeout</h2>
<p>You can optionally choose to terminate long idle gateway sessions automatically with the gateway parameter <code dir="ltr">HS_IDLE_TIMEOUT</code>. Specifically, when a gateway session is idle for more than the specified time limit, the gateway session is terminated with any pending changes rolled back.</p>
</div>
<!-- class="sect1" -->
<a id="i1005620"></a>
<div id="TGTEU705" class="sect1">
<h2 class="sect1">Database Compatibility Issues for Teradata</h2>
<p>Teradata and Oracle databases function differently in some areas, causing compatibility problems. The following compatibility issues are described in this section:</p>
<ul>
<li>
<p><a href="#i1008104">Schema Considerations</a></p>
</li>
<li>
<p><a href="#CIHCFADF">Naming Rules</a></p>
</li>
<li>
<p><a href="#i1006680">Data Types</a></p>
</li>
<li>
<p><a href="#i1005849">Queries</a></p>
</li>
<li>
<p><a href="#i1005884">Locking</a></p>
</li>
</ul>
<a id="i1008104"></a>
<div id="TGTEU706" class="sect2">
<h3 class="sect2">Schema Considerations</h3>
<p>The Oracle concept of a schema does not exist in Teradata. A schema name included in a query is recognized by Teradata as a database name. In the Oracle database, the schema of an object is identical to the owner of that object. However, when one retrieves or references an <code dir="ltr">OWNER</code> field in a Data Dictionary view such as <code dir="ltr">ALL_TABLES</code>, the <code dir="ltr">OWNER</code> field really is referencing a Teradata database name.</p>
<p>When querying data dictionary tables, the following results are returned:</p>
<ul>
<li>
<p><code dir="ltr">ALL_*</code> data dictionary tables, data for every Teradata database is returned. The Teradata database name is returned in the <code dir="ltr">OWNER</code>, <code dir="ltr">INDEX_OWNER</code>, or <code dir="ltr">TABLE_OWNER</code> column depending on the data dictionary table being referenced.</p>
</li>
<li>
<p><code dir="ltr">ALL_USERS</code> data dictionary table, each Teradata database name is returned in the <code dir="ltr">USERNAME</code> column.</p>
</li>
<li>
<p><code dir="ltr">USER_*</code> data dictionary tables, data for the default Teradata database is returned for the <code dir="ltr">OWNER</code> or <code dir="ltr">TABLE_OWNER</code> column depending on the data dictionary table being referenced. If a default Teradata database is not defined, the DBC Teradata system database is used.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHCFADF"></a>
<div id="TGTEU707" class="sect2">
<h3 class="sect2">Naming Rules</h3>
<p>Naming rule issues include the following:</p>
<ul>
<li>
<p><a href="#i1005677">Rules for Naming Objects</a></p>
</li>
<li>
<p><a href="#i1005706">Case Sensitivity</a></p>
</li>
</ul>
<a id="i1005677"></a>
<div id="TGTEU708" class="sect3">
<h4 class="sect3"><a id="sthref9"></a>Rules for Naming Objects</h4>
<p>Oracle and Teradata use different database object naming rules. For example, the maximum number of characters allowed for each object name can be different. Also, the use of single and double quotation marks, case sensitivity, and the use of alphanumeric characters can all be different.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> and Teradata documentation.</div>
</div>
<!-- class="sect3" -->
<a id="i1005706"></a>
<div id="TGTEU709" class="sect3">
<h4 class="sect3"><a id="sthref10"></a>Case Sensitivity</h4>
<p>The Oracle database defaults to uppercase unless you surround identifiers with double quote characters. For example, to refer to the Teradata table called <code dir="ltr">emp</code>, enter the name with double quote characters, as follows:</p>
<pre dir="ltr">SQL&gt; SELECT * FROM &#34;emp&#34;@TERA;
</pre>
<p>However, to refer to the Teradata table called <code dir="ltr">emp</code> in the Teradata database named Scott from an Oracle application, enter the following:</p>
<pre dir="ltr">SQL&gt; SELECT * FROM &#34;Scott&#34;.&#34;emp&#34;@TERA;
</pre>
<p>If the Teradata table called <code dir="ltr">emp</code> in the Teradata database named <code dir="ltr">SCOTT</code>, a name consisting entirely of uppercase letters, you can enter the owner name without double quote characters, as follows:</p>
<pre dir="ltr">SQL&gt; SELECT * FROM SCOTT.&#34;emp&#34;@TERA;
</pre>
<p>or</p>
<pre dir="ltr">SQL&gt; SELECT * FROM scott.&#34;emp&#34;@TERA;
</pre>
<p>Oracle recommends that you surround all Teradata object names with double quote characters and use the exact letter case for the object names as they appear in the Teradata data dictionary. This convention is not required when referring to the supported Oracle data dictionary tables or views listed in <a href="apc.htm#g669215">Appendix C, &#34;Data Dictionary&#34;</a>.</p>
<p>If existing applications cannot be changed according to these conventions, create views in Oracle to associate Teradata names to the correct letter case. For example, to refer to the Teradata table <code dir="ltr">emp</code> from an existing Oracle application by using only uppercase names, define the following view:</p>
<pre dir="ltr">SQL&gt; CREATE VIEW EMP (EMPNO, ENAME, SAL, HIREDATE)
      AS SELECT &#34;empno&#34;, &#34;ename&#34;, &#34;sal&#34;, &#34;hiredate&#34;
      FROM &#34;emp&#34;@TERA;
</pre>
<p>With this view, the application can issue statements such as the following:</p>
<pre dir="ltr">SQL&gt; SELECT EMPNO, ENAME FROM EMP;
</pre>
<p>Using views is a workaround solution that duplicates data dictionary information originating in the Teradata data dictionary. You must be prepared to update the Oracle view definitions whenever the data definitions for the corresponding tables are changed in the Teradata database.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006680"></a>
<div id="TGTEU710" class="sect2">
<h3 class="sect2">Data Types</h3>
<p>Data type issues include the following:</p>
<ul>
<li>
<p><a href="#i1007594">Binary Literal Notation</a></p>
</li>
<li>
<p><a href="#i1008049">Data Type Conversion</a></p>
</li>
</ul>
<a id="i1007594"></a>
<div id="TGTEU711" class="sect3">
<h4 class="sect3">Binary Literal Notation</h4>
<p>Oracle SQL uses hexadecimal digits surrounded by single quotes to express literal values being compared or inserted into columns defined as data type <code dir="ltr">RAW</code>.</p>
<p><a id="sthref11"></a>This notation is not converted to syntax compatible with the Teradata <code dir="ltr">VARBINARY</code> and <code dir="ltr">BINARY</code> data types (a <code dir="ltr">ff</code> surrounded by single quotes followed by hexadecimal digits).</p>
<p>For example, the following statement is not supported:</p>
<pre dir="ltr">SQL&gt; INSERT INTO BINARY_TAB@TERA VALUES (&#39;ff&#39;xb)
</pre>
<p>where <code dir="ltr">BINARY_TAB</code> contains a column of data type <code dir="ltr">VARBINARY</code> or <code dir="ltr">BINARY</code>. Use bind variables when inserting into or updating <code dir="ltr">VARBINARY</code> and <code dir="ltr">BINARY</code> data types.</p>
</div>
<!-- class="sect3" -->
<a id="i1008049"></a>
<div id="TGTEU712" class="sect3">
<h4 class="sect3"><a id="sthref12"></a>Data Type Conversion</h4>
<p>Teradata does not support implicit date conversions. Such conversions must be explicit.</p>
<p>For example, the gateway issues an error for the following <code dir="ltr">SELECT</code> statement:</p>
<pre dir="ltr">SELECT DATE_COL FROM TEST@TERA WHERE DATE_COL = &#34;1-JAN-2001&#34;;
</pre>
<p>To avoid problems with implicit conversions, add explicit conversions, as in the following:</p>
<pre dir="ltr">SELECT DATE_COL FROM TEST@TERA WHERE DATE_COL = TO_DATE(&#34;1-JAN-2001&#34;)
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apa.htm#g635542">Appendix A, &#34;Data Type Conversion&#34;</a> for more information about restrictions on data types.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1005849"></a>
<div id="TGTEU713" class="sect2">
<h3 class="sect2">Queries</h3>
<p>Query issues include the following:</p>
<ul>
<li>
<p><a href="#i1007676">Row Selection</a></p>
</li>
<li>
<p><a href="#i1005878">Empty Bind Variables</a></p>
</li>
</ul>
<a id="i1007676"></a>
<div id="TGTEU714" class="sect3">
<h4 class="sect3">Row Selection</h4>
<p>Teradata evaluates a query condition for all selected rows before returning any of the rows. If there is an error in the evaluation process for one or more rows, no rows are returned even though the remaining rows satisfy the condition.</p>
<p>Oracle evaluates the query condition row-by-row and returns a row when the evaluation is successful. Rows are returned until a row fails the evaluation.</p>
</div>
<!-- class="sect3" -->
<a id="i1005878"></a>
<div id="TGTEU715" class="sect3">
<h4 class="sect3">Empty Bind Variables</h4>
<p>For <code dir="ltr">VARCHAR</code> bind variables, the gateway passes empty bind variables to the Teradata database as a <code dir="ltr">NULL</code> value.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1005884"></a>
<div id="TGTEU716" class="sect2">
<h3 class="sect2">Locking<a id="sthref13"></a></h3>
<p>The locking model for an Teradata database differs significantly from the Oracle model. The gateway depends on the underlying Teradata behavior, so the following possible scenarios can affect Oracle applications that access Teradata through the gateway:</p>
<ul>
<li>
<p>Read access might block write access.</p>
</li>
<li>
<p>Write access might block read access.</p>
</li>
<li>
<p>Statement-level read consistency is not guaranteed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Teradata documentation for information about the Teradata locking model.</div>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005911"></a>
<div id="TGTEU717" class="sect1">
<h2 class="sect1">Known Restrictions<a id="sthref14"></a></h2>
<p>If you encounter incompatibility problems not listed in this section or in <a href="#i1006159">&#34;Known Problems&#34;</a>, contact Oracle Support Services. The following section describes the known restrictions and includes suggestions for dealing with them when possible:</p>
<ul>
<li>
<p><a href="#i1006816">Transactional Integrity</a></p>
</li>
<li>
<p><a href="#i1006829">Transaction Capability</a></p>
</li>
<li>
<p><a href="#i1006844">COMMIT or ROLLBACK in PL/SQL Cursor Loops Closes Open Cursors</a></p>
</li>
<li>
<p><a href="#i1006851">Pass-Through Feature</a></p>
</li>
<li>
<p><a href="#i1008208">Bind Variables for Date Columns</a></p>
</li>
<li>
<p><a href="#i1006889">SQL Syntax</a></p>
</li>
<li>
<p><a href="#i1006961">SQL*Plus</a></p>
</li>
<li>
<p><a href="#i1006964">Database Links</a></p>
</li>
</ul>
<a id="i1006816"></a>
<div id="TGTEU718" class="sect2">
<h3 class="sect2">Transactional Integrity <a id="sthref15"></a></h3>
<p>The gateway cannot guarantee transactional integrity in the following cases:</p>
<ul>
<li>
<p>When a statement that is processed by the gateway causes an implicit commit in the target database</p>
</li>
<li>
<p>When the target database is configured to work in autocommit mode</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle strongly recommends the following:
<ul>
<li>
<p>If you know that executing a particular statement causes an implicit commit in the target database, then ensure that this statement is executed in its own transaction.</p>
</li>
<li>
<p>Do not configure the target database to work in autocommit mode.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006829"></a>
<div id="TGTEU719" class="sect2">
<h3 class="sect2">Transaction Capability <a id="sthref16"></a></h3>
<p><a id="sthref17"></a>The gateway does not support savepoints. If a distributed update transaction is under way involving the gateway and a user attempts to create a savepoint, the following error occurs:</p>
<pre dir="ltr"><a id="sthref18"></a>ORA-02070: database <span class="italic">dblink</span> does not support savepoint in this context<a id="sthref19"></a>
</pre>
<p><a id="sthref20"></a>By default, the gateway is configured as <code dir="ltr">COMMIT_CONFIRM</code> and it is always the <a id="sthref21"></a>commit point site when the Teradata database is updated by the transaction.</p>
</div>
<!-- class="sect2" -->
<a id="i1006844"></a>
<div id="TGTEU720" class="sect2">
<h3 class="sect2">COMMIT or ROLLBACK in PL/SQL Cursor Loops Closes Open Cursors <a id="sthref22"></a><a id="sthref23"></a><a id="sthref24"></a></h3>
<p>Any <code dir="ltr">COMMIT</code> or <code dir="ltr">ROLLBACK</code> issued in a PL/SQL cursor loop closes all open cursors, which can result in the following error:</p>
<pre dir="ltr">ORA-1002:  fetch out of sequence 
</pre>
<p>To prevent this error, move the <code dir="ltr">COMMIT</code> or <code dir="ltr">ROLLBACK</code> statement outside the cursor loop.</p>
</div>
<!-- class="sect2" -->
<a id="i1006851"></a>
<div id="TGTEU721" class="sect2">
<h3 class="sect2">Pass-Through Feature</h3>
<p>Oracle recommends that you place a <a id="sthref25"></a>DDL statement in its own transaction when executing such a statement with the pass-through feature. An explicit <code dir="ltr">COMMIT</code> must be issued after the DDL statement.</p>
<p><a id="sthref26"></a>If the SQL statements being passed through the gateway result in an implicit commit at the Teradata database, the Oracle transaction manager is unaware of the commit and an Oracle <code dir="ltr">ROLLBACK</code> command cannot be used to roll back the transaction.</p>
</div>
<!-- class="sect2" -->
<a id="i1008208"></a>
<div id="TGTEU722" class="sect2">
<h3 class="sect2">Bind Variables for Date Columns</h3>
<p>You cannot compare columns of data type <code dir="ltr">TIME</code> or <code dir="ltr">TIMESTAMP</code> to a bind variable.</p>
<p>The following SQL statement causes an error message:</p>
<pre dir="ltr">SQL&gt; select time_column from time_table@TERA where time_column = :a;
</pre>
<p>The following error is issued:</p>
<pre dir="ltr">Invalid operation on an ANSI Datetime or Interval value. 
</pre></div>
<!-- class="sect2" -->
<a id="i1006889"></a>
<div id="TGTEU723" class="sect2">
<h3 class="sect2">SQL Syntax</h3>
<p>This section lists restrictions on the following SQL syntax:</p>
<ul>
<li>
<p><a href="#i1007852">WHERE CURRENT OF Clause</a></p>
</li>
<li>
<p><a href="#i1007857">CONNECT BY Clause</a></p>
</li>
<li>
<p><a href="#i1007875">ROWID</a></p>
</li>
<li>
<p><a href="#i1008379">EXPLAIN PLAN Statement</a></p>
</li>
<li>
<p><a href="#CFHBBICA">Callback Support</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apb.htm#g636614">Appendix B, &#34;Supported SQL Syntax and Functions&#34;</a> for more information about restrictions on SQL syntax.</div>
<a id="i1007852"></a>
<div id="TGTEU724" class="sect3">
<h4 class="sect3"><a id="sthref27"></a>WHERE CURRENT OF Clause</h4>
<p><code dir="ltr">UPDATE</code> and <code dir="ltr">DELETE</code> statements with the <code dir="ltr">WHERE CURRENT OF</code> clause are not supported by the gateway because they rely on the Oracle <a id="sthref28"></a><code dir="ltr">ROWID</code> implementation. To update or delete a specific row through the gateway, a condition style <code dir="ltr">WHERE</code> clause must be used.</p>
</div>
<!-- class="sect3" -->
<a id="i1007857"></a>
<div id="TGTEU725" class="sect3">
<h4 class="sect3"><a id="sthref29"></a>CONNECT BY Clause</h4>
<p>The gateway does not support the <code dir="ltr">CONNECT BY</code> clause in a <code dir="ltr">SELECT</code> statement.</p>
</div>
<!-- class="sect3" -->
<a id="i1007875"></a>
<div id="TGTEU726" class="sect3">
<h4 class="sect3">ROWID<a id="sthref30"></a></h4>
<p>The Oracle <code dir="ltr">ROWID</code> implementation is not supported.</p>
</div>
<!-- class="sect3" -->
<a id="i1008379"></a>
<div id="TGTEU727" class="sect3">
<h4 class="sect3">EXPLAIN PLAN Statement</h4>
<p>The <code dir="ltr">EXPLAIN PLAN</code> statement is not supported.</p>
</div>
<!-- class="sect3" -->
<a id="CFHBBICA"></a>
<div id="TGTEU728" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Callback Support</h4>
<p>SQL statements that require the gateway to callback to Oracle database are not supported.</p>
<p>The following categories of SQL statements will result in a callback:</p>
<ul>
<li>
<p>Any DML with a sub-select, which refers to a table in Oracle database. For example:</p>
<pre dir="ltr">INSERT INTO emp@TERA SELECT * FROM oracle_emp;
</pre></li>
<li>
<p>Any <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code> or &#34;<code dir="ltr">SELECT... FOR UPDATE...&#34;</code> SQL statement containing SQL functions or statements that needs to be executed at the originating Oracle database.</p>
<p>These SQL functions include <code dir="ltr">USER</code>, <code dir="ltr">USERENV</code>, and <code dir="ltr">SYSDATE</code>; and invovle the selection of data from the originating Oracle database. For example:</p>
<pre dir="ltr">DELETE FROM emp@TERA WHERE hiredate &gt; SYSDATE;
</pre>
<pre dir="ltr">SELECT ename FROM tkhoemp@TERA
WHERE hiredate IN (SELECT hiredate FROM oracle_emp)
FOR UPDATE OF empno;
</pre></li>
<li>
<p>Any SQL statement that involves a table in Oracle database, and a <code dir="ltr">LONG</code> or <code dir="ltr">LOB</code> column in a remote table. For example:</p>
<pre dir="ltr">SELECT a.long1, b.empno FROM scott.table@TERA a, emp b
WHERE a.id=b.empno; 
</pre>
<pre dir="ltr">SELECT a.long1, b.dummy FROM table_non@TERA a, dual b;
</pre></li>
</ul>
<p>where <code dir="ltr">a.long1</code> is a <code dir="ltr">LONG</code> column.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006961"></a>
<div id="TGTEU729" class="sect2">
<h3 class="sect2"><a id="sthref31"></a>SQL*Plus</h3>
<p>You need to use double quotes to wrap around lowercase table names.</p>
<p>For example:</p>
<pre dir="ltr">copy from tkhouser/tkhouser@inst1 insert loc_tkhodept using select * from &#34;tkhodept&#34;@TERA;
</pre></div>
<!-- class="sect2" -->
<a id="i1006964"></a>
<div id="TGTEU730" class="sect2">
<h3 class="sect2">Database Links</h3>
<p>The gateway is not a shared server process and cannot support shared database links. Each gateway session spawns a separate gateway process and connections cannot be shared.</p>
</div>
<!-- class="sect2" -->
<div id="TGTEU814" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref32"></a>
<h3 class="sect2">CALLBACK links</h3>
<p>Oracle Database Gateway for Teradata does not support <code dir="ltr">CALLBACK</code> links. Attempting to use a <code dir="ltr">CALLBACK</code> link with the gateway will return the following error message:</p>
<pre dir="ltr">ORA-02025: All tables in the SQL statement must be at the remote database
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006159"></a>
<div id="TGTEU732" class="sect1">
<h2 class="sect1">Known Problems</h2>
<p>This section describes known problems and includes suggestions for correcting them when possible. If you have any questions or concerns about the problems, contact Oracle Support Services. A current list of problems is available online. Contact your local Oracle office for information about accessing the list.</p>
<p>The following known problems are described in this section:</p>
<ul>
<li>
<p><a href="#i1008264">Teradata LONG VARCHAR Data Type</a></p>
</li>
<li>
<p><a href="#i1007102">Schema Names and PL/SQL</a></p>
</li>
<li>
<p><a href="#i1008015">Data Dictionary Views and PL/SQL</a></p>
</li>
</ul>
<a id="i1008264"></a>
<div id="TGTEU734" class="sect2">
<h3 class="sect2">Teradata LONG VARCHAR Data Type</h3>
<p>The following restrictions apply when using <code dir="ltr">LONG VARCHAR</code> data types:</p>
<ul>
<li>
<p>An unsupported SQL function cannot be used in a SQL statement that accesses a column defined as Teradata data type <code dir="ltr">LONG VARCHAR</code>.</p>
</li>
<li>
<p>You cannot use SQL*Plus to select data from a column defined as Teradata data type <code dir="ltr">LONG VARCHAR</code> when the data is greater than 80 characters in length. Oracle recommends using Pro*C or Oracle Call Interface to access such data in a Teradata database.</p>
</li>
<li>
<p><code dir="ltr">LONG VARCHAR</code> data types must be <code dir="ltr">NULLABLE</code> for <code dir="ltr">INSERT</code> or <code dir="ltr">UPDATE</code> to work.</p>
</li>
<li>
<p>A table including a <code dir="ltr">LONG VARCHAR</code> column must have a unique index defined on the table or the table must have a separate column that serves as a primary key.</p>
</li>
<li>
<p><code dir="ltr">LONG VARCHAR</code> data cannot be read through pass-through queries.</p>
</li>
</ul>
<p>The gateway does not support the PL/SQL function <code dir="ltr">COLUMN_VALUE_LONG</code> of the <code dir="ltr">DBMS_SQL</code> package.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apb.htm#g636614">Appendix B, &#34;Supported SQL Syntax and Functions&#34;</a> for more information about restrictions on SQL syntax.</div>
</div>
<!-- class="sect2" -->
<a id="i1007102"></a>
<div id="TGTEU735" class="sect2">
<h3 class="sect2">Schema Names and PL/SQL<a id="sthref33"></a></h3>
<p>If you do not prefix a Teradata database object with its schema name in a SQL statement within a PL/SQL block, the following error message occurs:</p>
<pre dir="ltr">ORA-6550 PLS-201 Identifier <span class="italic">table_name</span> must be declared.
</pre>
<p>Change the SQL statement to include the schema name of the object.</p>
</div>
<!-- class="sect2" -->
<a id="i1008015"></a>
<div id="TGTEU736" class="sect2">
<h3 class="sect2">Data Dictionary Views and PL/SQL<a id="sthref34"></a></h3>
<p>You cannot refer to data dictionary views in SQL statements that are inside a PL/SQL block.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3563">
<tr>
<td class="cellalignment3570">
<table class="cellalignment3568">
<tr>
<td class="cellalignment3567"><a href="intro.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3567"><a href="casestudies.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3572">
<table class="cellalignment3566">
<tr>
<td class="cellalignment3567"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3567"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3567"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3567"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3567"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3567"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>