<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-6023"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Dimensions"></a><title>Dimensions</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-06-07T18:07:59Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Data Warehousing Guide"/>
<meta name="dcterms.identifier" content="E41670-11"/>
<meta name="dcterms.isVersionOf" content="DWHSG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="sync.htm" title="Previous" type="text/html"/>
<link rel="Next" href="qrbasic.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41670-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-106BE703-0D67-41F1-8CAC-6432B95FBF82"></a> <span id="PAGE" style="display:none;">15/32</span> <!-- End Header -->
<h1 id="DWHSG-GUID-106BE703-0D67-41F1-8CAC-6432B95FBF82" class="sect1"><span class="enumeration_chapter">9</span> Dimensions</h1>
<div>
<p>This chapter discusses using dimensions in a data warehouse: It contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="dimen.htm#GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926">What are Dimensions?</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-C924590B-C481-4202-9243-1EEB66560C6D">Creating Dimensions</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-9B154667-0693-4944-811A-FD6AB58BB5D5">Viewing Dimensions</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-B2717E17-E229-4DFF-AA8E-B65FB97B74AE">Using Dimensions with Constraints</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-8915EF18-9DF7-43FF-B867-2B91E2606592">Validating Dimensions</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-3B85B959-5404-4FFD-92CA-1959A99EE10D">Altering Dimensions</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-D64EFB47-545A-4406-BF0B-DB74154F5210">Deleting Dimensions</a></p>
</li>
</ul>
</div>
<a id="DWHSG8257"></a><a id="DWHSG8256"></a>
<div class="props_rev_3"><a id="GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926"></a>
<h2 id="DWHSG-GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926" class="sect2">What are Dimensions?</h2>
<div>
<p><a id="d36782e77" class="indexterm-anchor"></a>A <a href="glossary.htm#GUID-51168741-F40B-41B8-83DE-F159BEB2DE75"><span class="xrefglossterm">dimension</span></a> is a structure that categorizes data in order to enable users to answer business questions. Commonly used dimensions are customers, products, and time. For example, each sales channel of a clothing retailer might gather and store data regarding sales and reclamations of their Cloth assortment. The retail chain management can build a data warehouse to analyze the sales of its products across all stores over time and help answer questions such as:</p>
<ul style="list-style-type: disc;">
<li>
<p>What is the effect of promoting one product on the sale of a related product that is not promoted?</p>
</li>
<li>
<p>What are the sales of a product before and after a promotion?</p>
</li>
<li>
<p>How does a promotion affect the various distribution channels?</p>
</li>
</ul>
<p>The data in the retailer&#39;s data warehouse system has two important components: <a id="d36782e98" class="indexterm-anchor"></a>dimensions and <a id="d36782e101" class="indexterm-anchor"></a>facts. The dimensions are products, customers, promotions, channels, and time. One approach for identifying your dimensions is to review your reference tables, such as a product table that contains everything about a product, or a promotion table containing all information about promotions. The facts are sales (units sold) and profits. A data warehouse contains facts about the sales of each product at on a daily basis.</p>
<p>A typical relational implementation for such a data warehouse is a star schema. The fact information is stored in what is called a fact table, whereas the dimensional information is stored in dimension tables. In our example, each sales transaction record is uniquely defined as for each customer, for each product, for each sales channel, for each promotion, and for each day (time).</p>
<p>In Oracle Database, the dimensional information itself is stored in a dimension table. In addition, the database object dimension helps to organize and group dimensional information into hierarchies. This represents natural <code class="codeph">1:n</code> relationships between columns or column groups (the levels of a hierarchy) that cannot be represented with constraint conditions.<a id="d36782e111" class="indexterm-anchor"></a><a id="d36782e115" class="indexterm-anchor"></a><a id="d36782e117" class="indexterm-anchor"></a><a id="d36782e119" class="indexterm-anchor"></a> Going up a level in the hierarchy is called rolling up the data and going down a level in the hierarchy is called <a id="d36782e124" class="indexterm-anchor"></a>drilling down the data. In the retailer example:</p>
<ul style="list-style-type: disc;">
<li>
<p>Within the <code class="codeph">time</code> dimension, months roll up to quarters, quarters roll up to years, and years roll up to all years.</p>
</li>
<li>
<p>Within the <code class="codeph">product</code> dimension, products roll up to subcategories, subcategories roll up to categories, and categories roll up to all products.</p>
</li>
<li>
<p>Within the <code class="codeph">customer</code> dimension, customers roll up to <code class="codeph">city</code>. Then cities roll up to <code class="codeph">state</code>. Then states roll up to <code class="codeph">country</code>. Then countries roll up to <code class="codeph">subregion</code>. Finally, subregions roll up to <code class="codeph">region</code>, as shown in <a href="dimen.htm#GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926__BABFBBEB">Figure 9-1</a>.</p>
</li>
</ul>
<div class="figure" id="GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926__BABFBBEB">
<p class="titleinfigure">Figure 9-1 Sample Rollup for a Customer Dimension</p>
<img width="112" height="350" src="img/GUID-5DCE0B5B-D315-4ACA-B014-02390CDF6538-default.gif" alt="Description of Figure 9-1 follows" title="Description of Figure 9-1 follows"/><br/>
<a href="img_text/GUID-5DCE0B5B-D315-4ACA-B014-02390CDF6538-print.htm">Description of &#34;Figure 9-1 Sample Rollup for a Customer Dimension&#34;</a></div>
<!-- class="figure" -->
<p>Data analysis typically starts at higher levels in the dimensional hierarchy and gradually drills down if the situation warrants such analysis.</p>
<p>Dimension schema objects (dimensions) do not have to be defined. However, if your application uses dimensional modeling, it is worth spending time creating them as it can yield significant benefits, because they help query rewrite perform more complex types of rewrite. Dimensions are also beneficial to certain types of materialized view refresh operations and with the SQL Access Advisor. They are only mandatory if you use the SQL Access Advisor (a GUI tool for materialized view and index management) without a workload to recommend which materialized views and indexes to create, drop, or retain.</p>
<p>In spite of the benefits of dimensions, you must not create dimensions in any schema that does not fully satisfy the dimensional relationships described in this chapter. Incorrect results can be returned from queries otherwise.</p>
<div class="infoboxnotealso" id="GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926__GUID-3396D142-2FB4-476A-97B5-B589F4EDAE25">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="schemas.htm#GUID-79C29A60-3477-448D-835D-2940D060D050">Data Warehousing Optimizations and Techniques</a> for further details about schemas</p>
</li>
<li>
<p><a href="qrbasic.htm#GUID-DB76286B-8557-446B-A6CC-BC987C378076">Basic Query Rewrite for Materialized Views</a> for further details regarding query rewrite</p>
</li>
<li>
<p><a class="olink TGSQL591" target="_blank" href="../TGSQL/tgsql_sqlaccess.htm#TGSQL591"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for further details regarding the SQL Access Advisor</p>
</li>
</ul>
</div>
</div>
<div class="sect3"><a id="GUID-8E8F2F6E-24D2-4FBE-9A47-41DD71D2300D"></a>
<h3 id="DWHSG-GUID-8E8F2F6E-24D2-4FBE-9A47-41DD71D2300D" class="sect3">Requirements for Dimensions in Data Warehouses</h3>
<div>
<ul style="list-style-type: disc;">
<li>
<p>There must be a <code class="codeph">1:n</code> relationship between a parent and children. A parent can have one or more children, but a child can have only one parent.</p>
</li>
<li>
<p>There must be a <code class="codeph">1:1</code> attribute relationship between hierarchy levels and their dependent dimension attributes. For example, if there is a column <code class="codeph">fiscal_month_desc</code>, then a possible attribute relationship would be <code class="codeph">fiscal_month_desc</code> to <code class="codeph">fiscal_month_name</code>. For skip <code class="codeph">NULL</code> levels, if a row of the relation of a skip level has a <code class="codeph">NULL</code> value for the level column, then that row must have a <code class="codeph">NULL</code> value for the attribute-relationship column, too.</p>
</li>
<li>
<p>If the columns of a parent level and child level are in different relations, then the connection between them also requires a <code class="codeph">1:n</code> join relationship. Each row of the child table must join with one and only one row of the parent table unless you use the <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause. This relationship is stronger than referential integrity alone, because it requires that the child join key must be non-null, that referential integrity must be maintained from the child join key to the parent join key, and that the parent join key must be unique.</p>
</li>
<li>
<p>You must ensure (using database constraints if necessary) that the columns of each hierarchy level are non-null unless you use the <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause and that hierarchical integrity is maintained.</p>
</li>
<li>
<p>An optional join key is a join key that connects the immediate non-skip child (if such a level exists), <code class="codeph">CHILDLEV</code>, of a skip level to the nearest non-skip ancestor (again, if such a level exists), <code class="codeph">ANCLEV</code>, of the skip level in the hierarchy. Also, this joinkey is allowed only when <code class="codeph">CHILDLEV</code> and <code class="codeph">ANCLEV</code> are defined over different relations.</p>
</li>
<li>
<p>The hierarchies of a dimension can overlap or be disconnected from each other. However, the columns of a hierarchy level cannot be associated with more than one dimension.</p>
</li>
<li>
<p>Join relationships that form cycles in the dimension graph are not supported. For example, a hierarchy level cannot be joined to itself either directly or indirectly.</p>
<div class="infobox-note" id="GUID-8E8F2F6E-24D2-4FBE-9A47-41DD71D2300D__GUID-CF10ABBC-0835-4841-A38A-2DA65F90F2D3">
<p class="notep1">Note:</p>
<p>The information stored with a dimension objects is only declarative. The previously discussed relationships are not enforced with the creation of a dimension object. You should validate any dimension definition with the <code class="codeph">DBMS_DIMENSION.VALIDATE_DIMENSION</code> procedure, as discussed in <span class="q">&#34;<a href="dimen.htm#GUID-8915EF18-9DF7-43FF-B867-2B91E2606592">Validating Dimensions</a>&#34;</span>.</p>
</div>
</li>
</ul>
</div>
</div>
</div>
<a id="DWHSG8258"></a>
<div class="props_rev_3"><a id="GUID-C924590B-C481-4202-9243-1EEB66560C6D"></a>
<h2 id="DWHSG-GUID-C924590B-C481-4202-9243-1EEB66560C6D" class="sect2">Creating Dimensions</h2>
<div>
<div class="section">
<p><a id="d36782e329" class="indexterm-anchor"></a>Before you can create a dimension object, the dimension tables must exist in the database possibly containing the dimension data. For example, if you create a customer dimension, one or more tables must exist that contain the city, state, and country information. In a star schema data warehouse, these dimension tables already exist. It is therefore a simple task to identify which ones will be used.</p>
<p>Now you can draw the hierarchies of a dimension as shown in <a href="dimen.htm#GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926__BABFBBEB">Figure 9-1</a>. For example, <code class="codeph">city</code> is a child of <code class="codeph">state</code> (because you can aggregate city-level data up to state), and <code class="codeph">country</code>. This hierarchical information will be stored in the database object dimension.</p>
<p>In the case of normalized or partially normalized dimension representation (a dimension that is stored in more than one table), identify how these tables are joined. Note whether the joins between the dimension tables can guarantee that each child-side row joins with one and only one parent-side row. In the case of denormalized dimensions, determine whether the child-side columns uniquely determine the parent-side (or attribute) columns. If you use constraints to represent these relationships, they can be enabled with the <code class="codeph">NOVALIDATE</code> and <code class="codeph">RELY</code> clauses if the relationships represented by the constraints are guaranteed by other means.</p>
<p>You <a id="d36782e357" class="indexterm-anchor"></a><a id="d36782e361" class="indexterm-anchor"></a>may <a id="d36782e364" class="indexterm-anchor"></a>want the capability to skip <code class="codeph">NULL</code> levels in a dimension. An example of this is with Puerto Rico. You may want Puerto Rico to be included within a region of North America, but not include it within the state category. If you want this capability, use the <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause. See the sample dimension later in this section for more information and <a class="olink SQLRF53901" target="_blank" href="../SQLRF/statements_5007.htm#SQLRF53901"><span class="italic">Oracle Database SQL Language Reference</span></a> for syntax and restrictions.</p>
<p>You create a dimension using either the <a id="d36782e389" class="indexterm-anchor"></a><code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement or the Dimension Wizard in Oracle Enterprise Manager. Within the <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement, use the <code class="codeph">LEVEL</code> clause to identify the names of the dimension levels.</p>
<p>This customer dimension contains a single hierarchy with a geographical rollup, with arrows drawn from the child level to the parent level, as shown in <a href="dimen.htm#GUID-73AC5D1C-F734-4F38-9DBE-4726BC726926__BABFBBEB">Figure 9-1</a>.</p>
<p>Each arrow in this graph indicates that for any child there is one and only one parent. For example, each city must be contained in exactly one state and each state must be contained in exactly one country. States that belong to more than one country violate hierarchical integrity. Also, you must use th<a id="d36782e412" class="indexterm-anchor"></a><a id="d36782e414" class="indexterm-anchor"></a>e <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause if you want to include cities that do not belong to a state, such as Washington D.C. Hierarchical integrity is necessary for the correct operation of management functions for materialized views that include aggregates.</p>
<p>For example, you can declare a dimension <code class="codeph">products_dim</code>, which contains levels <code class="codeph">product</code>, <code class="codeph">subcategory</code>, and <code class="codeph">category</code>:</p>
<pre dir="ltr">CREATE DIMENSION products_dim
       LEVEL product           IS (products.prod_id)
       LEVEL subcategory       IS (products.prod_subcategory)
       LEVEL category          IS (products.prod_category) ...
</pre>
<p>Each level in the dimension must correspond to one or more columns in a table in the database. Thus, level <code class="codeph">product</code> is identified by the column <code class="codeph">prod_id</code> in the products table and level <code class="codeph">subcategory</code> is identified by a column called <code class="codeph">prod_subcategory</code> in the same table.</p>
<p>In this example, the database tables are denormalized and all the columns exist in the same table. However, this is not a prerequisite for creating dimensions. <span class="q">&#34;<a href="dimen.htm#GUID-38896ACC-DDCD-4A36-BBBF-1E485742B0B9">Using Normalized Dimension Tables to Create Dimensions</a>&#34;</span> shows how to create a dimension <code class="codeph">customers_dim</code> that has a normalized schema design using the <code class="codeph">JOIN</code> <code class="codeph">KEY</code> clause.</p>
<p>The next step is to declare the relationship between the levels with the <code class="codeph">HIERARCHY</code> statement and give that hierarchy a name. A hierarchical relationship is a functional dependency from one level of a hierarchy to the next level in the hierarchy. Using the level names defined previously, the <code class="codeph">CHILD</code> <code class="codeph">OF</code> relationship denotes that each child&#39;s level value is associated with one and only one parent level value. The following statement declares a hierarchy <code class="codeph">prod_rollup</code> and defines the relationship between products, subcategory, and category:</p>
<pre dir="ltr">HIERARCHY prod_rollup 
 (product         CHILD OF
  subcategory     CHILD OF
  category)
</pre>
<p>In addition to the <code class="codeph">1:n</code> hierarchical relationships, dimensions also include <code class="codeph">1:1</code> attribute relationships between the hierarchy levels and their dependent, determined dimension attributes. For example, the dimension <code class="codeph">times_dim</code>, as defined in <a class="olink COMSC" target="_blank" href="../COMSC/toc.htm"><span class="italic">Oracle Database Sample Schemas</span></a>, has columns <code class="codeph">fiscal_month_desc</code>, <code class="codeph">fiscal_month_name</code>, and <code class="codeph">days_in_fiscal_month</code>. Their relationship is defined as follows:</p>
<pre dir="ltr">LEVEL fis_month IS TIMES.FISCAL_MONTH_DESC
...
ATTRIBUTE fis_month DETERMINES
      (fiscal_month_name, days_in_fiscal_month)
</pre>
<p>The <code class="codeph">ATTRIBUTE</code> ... <code class="codeph">DETERMINES</code> clause relates <code class="codeph">fis_month</code> to <code class="codeph">fiscal_month_name and days_in_fiscal_month</code>. Note that this is a unidirectional determination. It is only guaranteed, that for a specific <code class="codeph">fiscal_month</code>, for example, <code class="codeph">1999-11</code>, you will find exactly one matching values for <code class="codeph">fiscal_month_name</code>, for example, <code class="codeph">November</code> and <code class="codeph">days_in_fiscal_month</code>, for example, 28. You cannot determine a specific <code class="codeph">fiscal_month_desc</code> based on the <code class="codeph">fiscal_month_name</code>, which is <code class="codeph">November</code> for every fiscal year.</p>
<p>In this example, suppose a query were issued that queried by <code class="codeph">fiscal_month_name</code> instead of <code class="codeph">fiscal_month_desc</code>. Because this <code class="codeph">1:1</code> relationship exists between the attribute and the level, an already aggregated materialized view containing <code class="codeph">fiscal_month_desc</code> can be joined back to the dimension information and used to identify the data.</p>
<p>A sample dimension definition follows:</p>
<pre dir="ltr">CREATE DIMENSION products_dim
    LEVEL product           IS (products.prod_id)
    LEVEL subcategory       IS (products.prod_subcategory) [SKIP WHEN NULL]
    LEVEL category          IS (products.prod_category)
    HIERARCHY prod_rollup (
         product         CHILD OF
         subcategory     CHILD OF
         category)
    ATTRIBUTE product DETERMINES
     (products.prod_name, products.prod_desc,
      prod_weight_class, prod_unit_of_measure,
      prod_pack_size, prod_status, prod_list_price, prod_min_price)
    ATTRIBUTE subcategory DETERMINES
     (prod_subcategory, prod_subcategory_desc)
    ATTRIBUTE category DETERMINES
     (prod_category, prod_category_desc);
</pre>
<p>Alternatively, the <span class="italic"><code class="codeph">extended_attribute_clause</code></span> could have been used instead of the <span class="italic"><code class="codeph">attribute_clause</code></span>, as shown in the following example:</p>
<pre dir="ltr">CREATE DIMENSION products_dim
    LEVEL product           IS (products.prod_id)
    LEVEL subcategory       IS (products.prod_subcategory)
    LEVEL category          IS (products.prod_category)
    HIERARCHY prod_rollup (
         product         CHILD OF
         subcategory     CHILD OF
         category
        )
    ATTRIBUTE product_info LEVEL product DETERMINES
     (products.prod_name, products.prod_desc,
      prod_weight_class, prod_unit_of_measure,
      prod_pack_size, prod_status, prod_list_price, prod_min_price)
    ATTRIBUTE subcategory DETERMINES
     (prod_subcategory, prod_subcategory_desc)
    ATTRIBUTE category DETERMINES
     (prod_category, prod_category_desc);
</pre>
<p>The design, creation, and maintenance of dimensions is part of the design, creation, and maintenance of your data warehouse schema. Once the dimension has been created, verify that it meets the requirements described in <a href="dimen.htm#GUID-8E8F2F6E-24D2-4FBE-9A47-41DD71D2300D">Requirements for Dimensions in Data Warehouses</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-C924590B-C481-4202-9243-1EEB66560C6D__GUID-FF7B3CAE-D68B-406D-A7C5-50ABC32C3D13">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="qrbasic.htm#GUID-DB76286B-8557-446B-A6CC-BC987C378076">Basic Query Rewrite for Materialized Views</a> for further details of using dimensional information</p>
</li>
<li>
<p><a class="olink SQLRF01206" target="_blank" href="../SQLRF/statements_5007.htm#SQLRF01206"><span class="italic">Oracle Database SQL Language Reference</span></a> for a complete description of the <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement</p>
</li>
<li>
<p><a href="dimen.htm#GUID-58BFF993-7512-41FD-A55B-8FEC0CE883E9">Dropping and Creating Attributes with Columns</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-7F8BAEC8-850E-4825-8C2A-262BE5C24774">Using Multiple Hierarchies While Creating Joins</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-38896ACC-DDCD-4A36-BBBF-1E485742B0B9">Using Normalized Dimension Tables to Create Dimensions</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
<a id="DWHSG8259"></a>
<div class="props_rev_3"><a id="GUID-58BFF993-7512-41FD-A55B-8FEC0CE883E9"></a>
<h3 id="DWHSG-GUID-58BFF993-7512-41FD-A55B-8FEC0CE883E9" class="sect3">Dropping and Creating Attributes with Columns</h3>
<div>
<div class="section">
<p>You can use the attribute clause in a <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement to specify one or multiple columns that are uniquely determined by a hierarchy level.</p>
<p>If you use the <span class="italic"><code class="codeph">extended_attribute_clause</code></span> to create multiple columns determined by a hierarchy level, you can drop one attribute column without dropping them all. Alternatively, you can specify an attribute name for each attribute clause <code class="codeph">CREATE</code> or <code class="codeph">ALTER</code> <code class="codeph">DIMENSION</code> statement so that an attribute name is specified for each attribute clause where multiple level-to-column relationships can be individually specified.</p>
<p>The following statement illustrates how you can drop a single column without dropping all columns:</p>
<pre dir="ltr">CREATE DIMENSION products_dim
LEVEL product         IS (products.prod_id)
LEVEL subcategory     IS (products.prod_subcategory)
LEVEL category        IS (products.prod_category)
HIERARCHY prod_rollup (
          product        CHILD OF
          subcategory    CHILD OF category)
ATTRIBUTE product DETERMINES
         (products.prod_name, products.prod_desc,
          prod_weight_class, prod_unit_of_measure,
          prod_pack_size,prod_status, prod_list_price, prod_min_price)
ATTRIBUTE subcategory_att DETERMINES
         (prod_subcategory, prod_subcategory_desc)
ATTRIBUTE category DETERMINES
         (prod_category, prod_category_desc);

ALTER DIMENSION products_dim
DROP ATTRIBUTE subcategory_att LEVEL subcategory COLUMN prod_subcategory;
</pre>
<div class="infoboxnotealso" id="GUID-58BFF993-7512-41FD-A55B-8FEC0CE883E9__GUID-763A9A01-EC0E-4175-B843-78611F264E25">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF01206" target="_blank" href="../SQLRF/statements_5007.htm#SQLRF01206"><span class="italic">Oracle Database SQL Language Reference</span></a> for a complete description of the <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="DWHSG8261"></a><a id="DWHSG8260"></a>
<div class="props_rev_3"><a id="GUID-7F8BAEC8-850E-4825-8C2A-262BE5C24774"></a>
<h3 id="DWHSG-GUID-7F8BAEC8-850E-4825-8C2A-262BE5C24774" class="sect3">Using Multiple Hierarchies While Creating Joins</h3>
<div>
<div class="section">
<p><a id="d36782e716" class="indexterm-anchor"></a><a id="d36782e718" class="indexterm-anchor"></a>A single dimension definition can contain multiple hierarchies. Suppose our retailer wants to track the sales of certain items over time. The first step is to define the time dimension over which sales will be tracked. <a href="dimen.htm#GUID-7F8BAEC8-850E-4825-8C2A-262BE5C24774__i1006380">Figure 9-2</a> illustrates a dimension <code class="codeph">times_dim</code> with two time hierarchies.</p>
<div class="figure" id="GUID-7F8BAEC8-850E-4825-8C2A-262BE5C24774__i1006380">
<p class="titleinfigure">Figure 9-2 times_dim Dimension with Two Time Hierarchies</p>
<img width="254" height="291" src="img/GUID-115A9E5E-8DA1-49BF-89A9-C57EDC3204BD-default.gif" alt="Description of Figure 9-2 follows" title="Description of Figure 9-2 follows"/><br/>
<a href="img_text/GUID-115A9E5E-8DA1-49BF-89A9-C57EDC3204BD-print.htm">Description of &#34;Figure 9-2 times_dim Dimension with Two Time Hierarchies&#34;</a></div>
<!-- class="figure" -->
<p>From the illustration, you can construct the hierarchy of the denormalized <code class="codeph">time_dim</code> dimension&#39;s <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement as follows. The complete <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement as well as the <code class="codeph">CREATE</code> <code class="codeph">TABLE</code> statement are shown in <a class="olink COMSC" target="_blank" href="../COMSC/toc.htm"><span class="italic">Oracle Database Sample Schemas</span></a>.</p>
<pre dir="ltr">CREATE DIMENSION times_dim
   LEVEL day         IS times.time_id
   LEVEL month       IS times.calendar_month_desc
   LEVEL quarter     IS times.calendar_quarter_desc
   LEVEL year        IS times.calendar_year
   LEVEL fis_week    IS times.week_ending_day
   LEVEL fis_month   IS times.fiscal_month_desc
   LEVEL fis_quarter IS times.fiscal_quarter_desc
   LEVEL fis_year    IS times.fiscal_year
   HIERARCHY cal_rollup    (
             day     CHILD OF
             month   CHILD OF
             quarter CHILD OF
             year
   )
   HIERARCHY fis_rollup    (
             day         CHILD OF
             fis_week    CHILD OF
             fis_month   CHILD OF
             fis_quarter CHILD OF
             fis_year
   ) &lt;attribute determination clauses&gt;;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DWHSG8262"></a>
<div class="props_rev_3"><a id="GUID-38896ACC-DDCD-4A36-BBBF-1E485742B0B9"></a>
<h3 id="DWHSG-GUID-38896ACC-DDCD-4A36-BBBF-1E485742B0B9" class="sect3">Using Normalized Dimension Tables to Create Dimensions</h3>
<div>
<div class="section">
<p><a id="d36782e787" class="indexterm-anchor"></a>The tables used to define a dimension may be normalized or denormalized and the individual hierarchies can be normalized or denormalized. If the levels of a hierarchy come from the same table, it is called a fully denormalized hierarchy. For example, <code class="codeph">cal_rollup</code> in the <code class="codeph">times_dim</code> dimension is a denormalized hierarchy. If levels of a hierarchy come from different tables, such a hierarchy is either a fully or partially normalized hierarchy. This section shows how to define a normalized hierarchy.</p>
<p>Suppose the tracking of a customer&#39;s location is done by city, state, and country. This data is stored in the tables customers and countries. The customer dimension <code class="codeph">customers_dim</code> is partially normalized because the data entities <code class="codeph">cust_id</code> and <code class="codeph">country_id</code> are taken from different tables. The clause <code class="codeph">JOIN</code> <code class="codeph">KEY</code> within the dimension definition specifies how to join together the levels in the hierarchy. The dimension statement is partially shown in the following. The complete <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> statement as well as the <code class="codeph">CREATE</code> <code class="codeph">TABLE</code> statement are shown in <a class="olink COMSC" target="_blank" href="../COMSC/toc.htm"><span class="italic">Oracle Database Sample Schemas</span></a>.</p>
<pre dir="ltr">CREATE DIMENSION customers_dim
   LEVEL customer  IS (customers.cust_id)
   LEVEL city      IS (customers.cust_city)
   LEVEL state     IS (customers.cust_state_province)
   LEVEL country   IS (countries.country_id)
   LEVEL subregion IS (countries.country_subregion)
   LEVEL region IS (countries.country_region)
   HIERARCHY geog_rollup (
      customer        CHILD OF
      city            CHILD OF
      state           CHILD OF
      country         CHILD OF
      subregion       CHILD OF
      region
   JOIN KEY (customers.country_id) REFERENCES country);
</pre>
<p>If you use the <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause, you can use the <code class="codeph">JOIN</code> <code class="codeph">KEY</code> clause to link levels that have a missing level in their hierarchy. For example, the following statement enables a state level that has been declared as <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> to join city and country:</p>
<pre dir="ltr">JOIN KEY (city.country_id) REFERENCES country;
</pre>
<p>This ensures that the rows at customer and city levels can still be associated with the rows of country, subregion, and region levels.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="DWHSG8263"></a>
<div class="props_rev_3"><a id="GUID-9B154667-0693-4944-811A-FD6AB58BB5D5"></a>
<h2 id="DWHSG-GUID-9B154667-0693-4944-811A-FD6AB58BB5D5" class="sect2">Viewing Dimensions</h2>
<div>
<div class="section">
<p>Dimensions can be viewed through one of two methods:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><a href="dimen.htm#GUID-8FA0272B-3B63-42DE-AC02-BAB8B57E0D3A">Viewing Dimensions With Oracle Enterprise Manager</a></p>
</li>
<li>
<p><a href="dimen.htm#GUID-DD78923A-299C-4A51-86A1-C44E78AFDC0E">Viewing Dimensions With the DESCRIBE_DIMENSION Procedure</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="DWHSG8264"></a>
<div class="props_rev_3"><a id="GUID-8FA0272B-3B63-42DE-AC02-BAB8B57E0D3A"></a>
<h3 id="DWHSG-GUID-8FA0272B-3B63-42DE-AC02-BAB8B57E0D3A" class="sect3">Viewing Dimensions With Oracle Enterprise Manager</h3>
<div>
<div class="section">
<p>All of the dimensions that exist in the data warehouse can be viewed using Oracle Enterprise Manager. Select the <span class="bold">Dimension</span> object from within the <span class="bold">Schema</span> icon to display all of the dimensions. Select a specific dimension to graphically display its hierarchy, levels, and any attributes that have been defined.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DWHSG8265"></a>
<div class="props_rev_3"><a id="GUID-DD78923A-299C-4A51-86A1-C44E78AFDC0E"></a>
<h3 id="DWHSG-GUID-DD78923A-299C-4A51-86A1-C44E78AFDC0E" class="sect3">Viewing Dimensions With the DESCRIBE_DIMENSION Procedure</h3>
<div>
<div class="section">
<p>To view the definition of a dimension, use the <code class="codeph">DESCRIBE_DIMENSION</code> procedure in the <code class="codeph">DBMS_DIMENSION</code> package. <a id="d36782e960" class="indexterm-anchor"></a>For example, if a dimension is created in the <code class="codeph">sh</code> sample schema with the following statements:</p>
<pre dir="ltr">CREATE DIMENSION channels_dim
        LEVEL channel       IS (channels.channel_id)
        LEVEL channel_class IS (channels.channel_class)
        HIERARCHY channel_rollup (
                channel CHILD OF channel_class)
        ATTRIBUTE channel DETERMINES (channel_desc)
        ATTRIBUTE channel_class DETERMINES (channel_class);
</pre>
<p>Execute the <code class="codeph">DESCRIBE_DIMENSION</code> procedure as follows:</p>
<pre dir="ltr">SET SERVEROUTPUT ON FORMAT WRAPPED;  --to improve the display of info
EXECUTE DBMS_DIMENSION.DESCRIBE_DIMENSION(&#39;SH.CHANNELS_DIM&#39;);
</pre>
<p>You then see the following output results:</p>
<pre dir="ltr">EXECUTE DBMS_DIMENSION.DESCRIBE_DIMENSION(&#39;SH.CHANNELS_DIM&#39;); 
  DIMENSION SH.CHANNELS_DIM 
    LEVEL CHANNEL IS SH.CHANNELS.CHANNEL_ID 
    LEVEL CHANNEL_CLASS IS SH.CHANNELS.CHANNEL_CLASS 

    HIERARCHY CHANNEL_ROLLUP ( 
             CHANNEL CHILD OF 
             CHANNEL_CLASS) 

    ATTRIBUTE CHANNEL LEVEL CHANNEL DETERMINES
SH.CHANNELS.CHANNEL_DESC 
    ATTRIBUTE CHANNEL_CLASS LEVEL CHANNEL_CLASS DETERMINES
SH.CHANNELS.CHANNEL_CLASS
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="DWHSG8266"></a>
<div class="props_rev_3"><a id="GUID-B2717E17-E229-4DFF-AA8E-B65FB97B74AE"></a>
<h2 id="DWHSG-GUID-B2717E17-E229-4DFF-AA8E-B65FB97B74AE" class="sect2">Using Dimensions with Constraints</h2>
<div>
<div class="section">
<p><a id="d36782e1003" class="indexterm-anchor"></a>Constraints <a id="d36782e1006" class="indexterm-anchor"></a>play an important role with dimensions. Full referential integrity is sometimes enabled in data warehouses, but not always. This is because operational databases normally have full referential integrity and you can ensure that the data flowing into your data warehouse never violates the already established integrity rules.</p>
<p>It is recommended that constraints be enabled and, if validation time is a concern, then the <code class="codeph">NOVALIDATE</code> clause should be used as follows:</p>
<pre dir="ltr">ENABLE NOVALIDATE CONSTRAINT pk_time;
</pre>
<p>Primary and foreign keys should be implemented also. Referential integrity constraints and <code class="codeph">NOT</code> <code class="codeph">NULL</code> constraints on the fact tables provide information that query rewrite can use to extend the usefulness of materialized views.</p>
<p>In addition, you should use the <code class="codeph">RELY</code> clause to inform query rewrite that it can rely upon the constraints being correct as follows:</p>
<pre dir="ltr">ALTER TABLE time MODIFY CONSTRAINT pk_time RELY;
</pre>
<p>This information is also used for query rewrite. See <a href="qrbasic.htm#GUID-DB76286B-8557-446B-A6CC-BC987C378076">Basic Query Rewrite for Materialized Views</a> for more information.</p>
<p>If you use the <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause, at least one of the referenced level columns should not have <code class="codeph">NOT</code> <code class="codeph">NULL</code> constraints.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DWHSG8267"></a>
<div class="props_rev_3"><a id="GUID-8915EF18-9DF7-43FF-B867-2B91E2606592"></a>
<h2 id="DWHSG-GUID-8915EF18-9DF7-43FF-B867-2B91E2606592" class="sect2">Validating Dimensions</h2>
<div>
<div class="section">
<p><a id="d36782e1076" class="indexterm-anchor"></a><a id="d36782e1080" class="indexterm-anchor"></a>The information of a dimension object is declarative only and not enforced by the database. If the relationships described by the dimensions are incorrect, incorrect results could occur. Therefore, you should verify the relationships specified by <code class="codeph">CREATE</code> <code class="codeph">DIMENSION</code> using the <code class="codeph">DBMS_DIMENSION.VALIDATE_DIMENSION</code> procedure periodically.</p>
<p>This procedure is easy to use and has only four parameters:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">dimension</code>: the owner and name.</p>
</li>
<li>
<p><code class="codeph">incremental</code>: set to <code class="codeph">TRUE</code> to check only the new rows for tables of this dimension.</p>
</li>
<li>
<p><code class="codeph">check_nulls</code>: set to <code class="codeph">TRUE</code> to verify that all columns that are not in the levels containing a <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause are not null.</p>
</li>
<li>
<p><code class="codeph">statement_id</code>: a user-supplied unique identifier to identify the result of each run of the procedure.</p>
</li>
</ul>
<p>The following example validates the dimension <code class="codeph">TIME_FN</code> in the <code class="codeph">sh</code> schema:</p>
<pre dir="ltr">@utldim.sql 
EXECUTE DBMS_DIMENSION.VALIDATE_DIMENSION (&#39;SH.TIME_FN&#39;, FALSE, TRUE, 
  &#39;my first example&#39;);
</pre>
<p>Before running the <code class="codeph">VALIDATE_DIMENSION</code> procedure, you need to create a local table, <code class="codeph">DIMENSION_EXCEPTIONS</code>, by running the provided script <code class="codeph">utldim.sql</code>. If the <code class="codeph">VALIDATE_DIMENSION</code> procedure encounters any errors, they are placed in this table. Querying this table will identify the exceptions that were found. The following illustrates a sample:</p>
<pre dir="ltr">SELECT * FROM dimension_exceptions
WHERE statement_id = &#39;my first example&#39;;
</pre>
<pre dir="ltr">STATEMENT_ID       OWNER  TABLE_NAME  DIMENSION_NAME   RELATIONSHIP   BAD_ROWID
------------       -----  ----------  --------------   ------------   ---------
my first example   SH     MONTH       TIME_FN          FOREIGN KEY    AAAAuwAAJAAAARwAAA
</pre>
<p>However, rather than query this table, it may be better to query the rowid of the invalid row to retrieve the actual row that has violated the constraint. In this example, the dimension <code class="codeph">TIME_FN</code> is checking a table called <code class="codeph">month</code>. It has found a row that violates the constraints. Using the rowid, you can see exactly which row in the month table is causing the problem, as in the following:</p>
<pre dir="ltr">SELECT * FROM month
WHERE rowid IN (SELECT bad_rowid
                FROM dimension_exceptions
                WHERE statement_id = &#39;my first example&#39;);

MONTH    QUARTER   FISCAL_QTR    YEAR    FULL_MONTH_NAME    MONTH_NUMB
------   -------   ----------    ----    ---------------    ----------
199903     19981        19981    1998              March             3
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DWHSG8268"></a>
<div class="props_rev_3"><a id="GUID-3B85B959-5404-4FFD-92CA-1959A99EE10D"></a>
<h2 id="DWHSG-GUID-3B85B959-5404-4FFD-92CA-1959A99EE10D" class="sect2">Altering Dimensions</h2>
<div>
<div class="section">
<p><a id="d36782e1192" class="indexterm-anchor"></a><a id="d36782e1196" class="indexterm-anchor"></a>You can modify a dimension using the <code class="codeph">ALTER</code> <code class="codeph">DIMENSION</code> statement. You can add or drop a level, hierarchy, or attribute from the dimension using this command.</p>
<p>Referring to the time dimension in <a href="dimen.htm#GUID-7F8BAEC8-850E-4825-8C2A-262BE5C24774__i1006380">Figure 9-2</a>, you can remove the attribute <code class="codeph">fis_year</code>, drop the hierarchy <code class="codeph">fis_rollup</code>, or remove the level <code class="codeph">fiscal_year</code>. In addition, you can add a new level called <code class="codeph">f_year</code> as in the following:</p>
<pre dir="ltr">ALTER DIMENSION times_dim DROP ATTRIBUTE fis_year;
ALTER DIMENSION times_dim DROP HIERARCHY fis_rollup;
ALTER DIMENSION times_dim DROP LEVEL fis_year;
ALTER DIMENSION times_dim ADD LEVEL f_year IS times.fiscal_year;
</pre>
<p>If you used the <span class="italic"><code class="codeph">extended_attribute_clause</code></span> when creating the dimension, you can drop one attribute column without dropping all attribute columns. This is illustrated in <span class="q">&#34;<a href="dimen.htm#GUID-58BFF993-7512-41FD-A55B-8FEC0CE883E9">Dropping and Creating Attributes with Columns</a>&#34;</span>, which shows the following statement:</p>
<pre dir="ltr">ALTER DIMENSION product_dim 
DROP ATTRIBUTE size LEVEL prod_type COLUMN Prod_TypeSize;
</pre>
<p>If you try to remove anything with further dependencies inside the dimension, Oracle Database rejects the altering of the dimension. A dimension becomes invalid if you change any schema object that the dimension is referencing. For example, if the table on which the dimension is defined is altered, the dimension becomes invalid.</p>
<p>You can modify a dimension by adding a level containing a <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause, as in the following statement:</p>
<pre dir="ltr">ALTER DIMENSION times_dim
ADD LEVEL f_year IS times.fiscal_year SKIP WHEN NULL;
</pre>
<p>You cannot, however, modify a level that contains a <code class="codeph">SKIP</code> <code class="codeph">WHEN</code> <code class="codeph">NULL</code> clause. Instead, you need to drop the level and re-create it.</p>
<p>To check the status of a dimension, view the contents of the column <code class="codeph">invalid</code> in the <code class="codeph">ALL_DIMENSIONS</code> data dictionary view. To revalidate the dimension, use the <code class="codeph">COMPILE</code> option as follows:</p>
<pre dir="ltr">ALTER DIMENSION times_dim COMPILE;
</pre>
<p>Dimensions can also be modified or deleted using Oracle Enterprise Manager.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DWHSG8269"></a>
<div class="props_rev_3"><a id="GUID-D64EFB47-545A-4406-BF0B-DB74154F5210"></a>
<h2 id="DWHSG-GUID-D64EFB47-545A-4406-BF0B-DB74154F5210" class="sect2">Deleting Dimensions</h2>
<div>
<div class="section">
<p><a id="d36782e1300" class="indexterm-anchor"></a><a id="d36782e1304" class="indexterm-anchor"></a>A dimension is removed using the <code class="codeph">DROP</code> <code class="codeph">DIMENSION</code> statement. For example, you could issue the following statement:</p>
<pre dir="ltr">DROP DIMENSION times_dim;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1506">
<tr>
<td class="cellalignment1513">
<table class="cellalignment1511">
<tr>
<td class="cellalignment1510"><a href="sync.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1510"><a href="qrbasic.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1515">
<table class="cellalignment1509">
<tr>
<td class="cellalignment1510"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1510"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1510"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1510"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1510"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1510"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>