<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107826"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Migration%2C%20Backup%2C%20and%20Restoration"></a><title>Migration, Backup, and Restoration</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033"/>
<meta name="dcterms.created" content="2015-10-07T16:37:40Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database Installation Guide"/>
<meta name="dcterms.identifier" content="E21632-17"/>
<meta name="dcterms.isVersionOf" content="TTINS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="install.htm" title="Previous" type="text/html"/>
<link rel="Next" href="upgrade.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21632-17.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/9</span> <!-- End Header -->
<div id="TTINS252" class="chapter"><a id="BABGHFCB"></a>
<h1 class="chapter"><span class="secnum">2</span> Migration, Backup, and Restoration</h1>
<p>This chapter describes migration, backup and restoration for the TimesTen database, covering the following topics:</p>
<ul>
<li>
<p><a href="#BABIDJJI">Overview: copying, migrating, and restoring a database</a></p>
</li>
<li>
<p><a href="#BABBCJGC">Backing up and restoring a database</a></p>
</li>
<li>
<p><a href="#CIAIIBHH">Migrating a database</a></p>
</li>
<li>
<p><a href="#CIAGCFHJ">Altering a database</a></p>
</li>
<li>
<p><a href="#CJHFGEED">Globalization support during migration</a></p>
</li>
</ul>
<a id="BABIDJJI"></a>
<div id="TTINS253" class="sect1">
<h2 class="sect1">Over<a id="sthref199"></a><a id="sthref200"></a><a id="sthref201"></a><a id="sthref202"></a><a id="sthref203"></a><a id="sthref204"></a>view: c<a id="sthref205"></a><a id="sthref206"></a><a id="sthref207"></a><a id="sthref208"></a><a id="sthref209"></a><a id="sthref210"></a>opying, migrating, and restoring a database</h2>
<p>TimesTen utilities for copying, restoring, and migrating a database enable you to perform a variety of migration and upgrade tasks. Relevant utilities include the following:</p>
<ul>
<li>
<p>The <code dir="ltr">ttBackup</code> utility: Creates an image copy of the database that is compatible only within the same major release line and on the same platform. This is a general backup utility, but you can also use it to back up data for minor upgrades (for example, from 11.2.2.<span class="italic">x.x</span> to 11.2.2.<span class="italic">y.y</span>) or for migrations that do not require any changes to the size or structure of the database.</p>
<p>This utility saves one checkpoint file and a copy of the log files to create the image.</p>
</li>
<li>
<p>The <code dir="ltr">ttRestore</code> utility: Restores a database that was backed up using <code dir="ltr">ttBackup</code>.</p>
</li>
<li>
<p>The <code dir="ltr">ttMigrate</code> utility: Exports a database to a binary file or imports a database from a binary file created by <code dir="ltr">ttMigrate</code>. (For those familiar with Oracle Database, this is similar in nature to the Oracle Database export and import features.) This utility exports the database in a release-neutral but platform-specific format. You can use it for major upgrades (for example, from 11.2.1.<span class="italic">x.x</span> to 11.2.2.<span class="italic">y.y</span>).</p>
<p>To move between platforms, use the <code dir="ltr">ttMigrateCS -c</code> client/server version to export a remote database into a file on your target system, in order to ensure the appropriate format for the target system. Then use <code dir="ltr">ttMigrate -r</code> to restore the contents of the file into the database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">ttMigrateCS</code> version of <code dir="ltr">ttMigrate</code> is UNIX-only. On Windows systems, you can do the equivalent by using <code dir="ltr">ttMigrate</code> to connect to the source system from the target system through a defined TimesTen client DSN.</div>
</li>
<li>
<p>The <code dir="ltr">ttBulkCp</code> utility: Writes a database table to an ASCII file, or restores a table to a database from an ASCII file created by <code dir="ltr">ttBulkCp</code>.</p>
</li>
<li>
<p>The <code dir="ltr">ttSchema</code> utility: Outputs the SQL DDL statements used to create the schema of a database or selected objects (such as tables, views, or sequences) of a database. This is useful in conjunction with <code dir="ltr">ttBulkCp</code>, to give you the SQL statement to create a table before restoring its data from <code dir="ltr">ttBulkCp</code>.</p>
</li>
<li>
<p>The <code dir="ltr">ttDestroy</code> utility: If the database will be in a new location, you can optionally use this to destroy the old database once the new one is confirmed to be functioning properly.</p>
</li>
</ul>
<p>See <a class="olink TTREF316" href="../TTREF/util.htm#TTREF316">&#34;Utilities&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for details about these utilities.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can alternatively use corresponding C functions for <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code>. See <a class="olink TTCDV371" href="../TTCDV/c_ref.htm#TTCDV371">&#34;TimesTen Utility API&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database C Developer&#39;s Guide</span>.</div>
<p>Typical tasks may include the following.</p>
<p>TimesTen upgrades:</p>
<ul>
<li>
<p>For a TimesTen minor or patch upgrade: Move to a TimesTen release in the same major release line, without changing the size or structure of the database. You can do an offline upgrade using <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code>. <a href="upgrade.htm#CIAGIAJI">&#34;Moving to a different minor or patch release of TimesTen (offline upgrade)&#34;</a>.</p>
<p>You can also, more typically, perform an in-place upgrade of the TimesTen installation. See <a href="upgrade.htm#CACCFCDB">&#34;In-place upgrades&#34;</a>.</p>
</li>
<li>
<p>For a TimesTen major upgrade: Move to a new major release of TimesTen.</p>
<ul>
<li>
<p>You can do an offline upgrade using <code dir="ltr">ttMigrate -c</code> from the old release to export the data, and <code dir="ltr">ttMigrate -r</code> from the new release to import the data. See <a href="upgrade.htm#CIACDJDD">&#34;Moving to a different major release of TimesTen&#34;</a>.</p>
</li>
<li>
<p>You can do an online upgrade with replication (as applicable for your situation), using <code dir="ltr">ttMigrate</code>. See <a href="upgrade.htm#CACBCFGG">&#34;Online upgrades with replication&#34;</a>.</p>
</li>
</ul>
</li>
</ul>
<p>Database migrations:</p>
<ul>
<li>
<p>Move to a different system of the same platform type using the same major TimesTen release line. Use <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code>. See <a href="#CIAEIAIA">&#34;Moving a database to a different computer (same platform)&#34;</a>.</p>
</li>
<li>
<p>Move to a different hardware or software platform, or from a 32-bit system to a 64-bit system. Use <code dir="ltr">ttMigrateCS</code> and <code dir="ltr">ttMigrate</code>. See <a href="#CIAGEHEI">&#34;Moving a database to a different platform&#34;</a>.</p>
</li>
</ul>
<p>Database alterations:</p>
<ul>
<li>
<p>Move to a different directory on the same system. Use <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code>. See <a href="#CIAGCJEH">&#34;Moving a database to a different directory&#34;</a>.</p>
</li>
<li>
<p>Reduce database size. Use <code dir="ltr">ttMigrate</code>. See <a href="#CIADCAJC">&#34;Reducing database size&#34;</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also use this procedure to compact the database in order to reduce fragmentation.</div>
</li>
</ul>
<p>Other tasks:</p>
<ul>
<li>
<p>Take a snapshot of a database and then restore the database in the same state. Use <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code>.</p>
</li>
<li>
<p>Move selected tables of a database to a new location or platform. You can use <code dir="ltr">ttMigrate</code> if the target is the same platform. You can use <code dir="ltr">ttMigrate</code> with <code dir="ltr">ttMigrateCS</code> if the target is a different platform. (Alternatively, you can use <code dir="ltr">ttBulkCp</code> with <code dir="ltr">ttSchema</code> to move to a different platform, but <code dir="ltr">ttMigrate</code> with <code dir="ltr">ttMigrateCS</code> is generally easier and faster.)</p>
</li>
<li>
<p>Change the metadata (for example, change a column name). Use <code dir="ltr">ttBulkCp</code> and <code dir="ltr">ttSchema</code>.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Reset connection attributes to reflect the changes you made, such as <code dir="ltr">DataStore</code> when you move the database to a different directory or <code dir="ltr">PermSize</code> when you reduce database size.
<p>See <a class="olink TTREF114" href="../TTREF/attribute.htm#TTREF114">&#34;Connection Attributes&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for details about these connection attributes.</p>
</div>
</div>
<!-- class="sect1" -->
<a id="BABBCJGC"></a>
<div id="TTINS254" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Bac<a id="sthref211"></a><a id="sthref212"></a>king up and restoring a database</h2>
<p>The TimesTen backup and restore facility enables you to create a backup of any TimesTen database to restore it at a later time. The primary use for the backup and restore facility is to allow the restoration of a recent state of a database that has been lost. For details about using the TimesTen backup and restore facility, see <a class="olink TTREF323" href="../TTREF/util.htm#TTREF323">&#34;ttBackup&#34;</a> and <a class="olink TTREF363" href="../TTREF/util.htm#TTREF363">&#34;ttRestore&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot use these utilities in a client-only installation.</div>
<div id="TTINS354" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref213"></a>
<h3 class="sect2">TimesTen backup features</h3>
<p>Every database backup contains the information needed to restore the database as it existed at the <span class="italic">backup point</span>, which is the time the backup began. Restoration of a database from a given backup restores the modifications of all transactions that committed before the backup point.</p>
<p>A backup operation is atomic: If it completes successfully, it produces a backup you can use to restore a database to the state of its backup point. If it fails for any reason, it leaves the files of any existing backup intact and its backup point unchanged.</p>
<p>TimesTen writes a database backup to a location specified by a <span class="italic">backup path</span>, which consists of a <span class="italic">directory name</span> and an optional <span class="italic">basename</span>. You must specify the backup directory and basename when the backup is created. The basename defaults to the basename of the database itself if you do not specify a basename.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
<ul>
<li>
<p>Do not manually change the contents of the backup directory. The addition, removal, or modification of any file in the backup directory, except for modifications made by <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code> themselves, may compromise the integrity of the backup. In this event, restoration of the database from the backup may not be possible.</p>
</li>
<li>
<p>Databases containing cache groups can be backed up with the <code dir="ltr">ttBackup</code> utility; however, when restoring such a backup, special consideration is required. The restored data within the cache groups may be out of date or out of sync with the data in the back-end Oracle database. To restore a database that contains cache groups, see <a class="olink TTCAC460" href="../TTCAC/manage.htm#TTCAC460">&#34;Backing up and restoring a database with cache groups&#34;</a> in <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span>.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="TTINS255" class="sect2"><a id="sthref214"></a>
<h3 class="sect2">Type<a id="sthref215"></a><a id="sthref216"></a><a id="sthref217"></a><a id="sthref218"></a>s of backup provided</h3>
<p>TimesTen supports both <span class="italic">full</span> and <span class="italic">incremental</span> backups. TimesTen also allows <span class="italic">stream</span> backups.</p>
<ul>
<li>
<p><span class="italic">Stream</span>: A stream backup writes the database backup file to <code dir="ltr">stdout</code>.</p>
</li>
<li>
<p><span class="italic">Full</span>: A full backup saves the entire database. For full backups, you must have enough disk space available to hold both the existing backup and the new backup, until the new backup succeeds.</p>
</li>
<li>
<p><span class="italic">Incremental</span>: An incremental backup augments an existing <span class="italic">incremental-enabled</span> backup of the same database. An incremental backup moves the backup point of an existing backup forward in time by augmenting the backup with all of the transaction log records created since its last backup point.</p>
<p>An incremental backup typically completes much faster than a full backup, as it has less data to copy. The performance gain of incremental backups over full backups comes at the cost of increased disk usage and longer restoration times. Use incremental backups in concert with full backups to achieve a balance between backup time, disk usage, and restoration time.</p>
<p>Before you can perform an incremental backup, you must first enable your backup to allow for incremental backups by executing the <code dir="ltr">ttBackup</code> utility command with the <code dir="ltr">-fileFullEnable</code> or the <code dir="ltr">-fileIncrOrFull</code> options. In either case, if your backup was not previously enabled for incremental, a full file backup is performed before the backup is enabled for subsequent incremental backups. TimesTen supports the creation of up to eight incremental-enabled backup instances for each database. If you attempt to start a ninth incremental backup, TimesTen returns an error.</p>
<p>If you restore a database from a backup, regardless of whether the backup was enabled or disabled for incremental, the restored database is disabled for incremental backups. Thus, if you want incremental backups, you must again execute the <code dir="ltr">ttBackup</code> utility command with the <code dir="ltr">-fileFullEnable</code> or the <code dir="ltr">-fileIncrOrFull</code> option to enable incremental backups.</p>
</li>
</ul>
<p>A set of files containing backup information for a given database, residing at a given backup path, is known as a <span class="italic">backup instance</span>. A given backup instance must be explicitly enabled for incremental backups.</p>
<p>The files of the existing backup may be modified by a failed full or incremental backup, but not in a way that compromises the ability to restore from them.</p>
<p>The total list of backup types supported by TimesTen are as follows:</p>
<div class="inftblhruleinformal">
<table class="cellalignment5031" title="Backup types supported by TimesTen" summary="This table describes the backup types supported by TimesTen." dir="ltr">
<thead>
<tr class="cellalignment5025">
<th class="cellalignment5032" id="r1c1-t8">Backup type</th>
<th class="cellalignment5032" id="r1c2-t8">File or stream</th>
<th class="cellalignment5032" id="r1c3-t8">Full or incremental</th>
<th class="cellalignment5032" id="r1c4-t8">Incremental-enabled</th>
<th class="cellalignment5032" id="r1c5-t8">Comment</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r2c1-t8" headers="r1c1-t8"><code dir="ltr">fileFull</code></td>
<td class="cellalignment5033" headers="r2c1-t8 r1c2-t8">File</td>
<td class="cellalignment5033" headers="r2c1-t8 r1c3-t8">Full</td>
<td class="cellalignment5033" headers="r2c1-t8 r1c4-t8">No</td>
<td class="cellalignment5033" headers="r2c1-t8 r1c5-t8">This is the default.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r3c1-t8" headers="r1c1-t8"><code dir="ltr">fileFullEnable</code></td>
<td class="cellalignment5033" headers="r3c1-t8 r1c2-t8">File</td>
<td class="cellalignment5033" headers="r3c1-t8 r1c3-t8">Full</td>
<td class="cellalignment5033" headers="r3c1-t8 r1c4-t8">Yes</td>
<td class="cellalignment5033" headers="r3c1-t8 r1c5-t8">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r4c1-t8" headers="r1c1-t8"><code dir="ltr">fileIncremental</code></td>
<td class="cellalignment5033" headers="r4c1-t8 r1c2-t8">File</td>
<td class="cellalignment5033" headers="r4c1-t8 r1c3-t8">Incremental</td>
<td class="cellalignment5033" headers="r4c1-t8 r1c4-t8">Yes</td>
<td class="cellalignment5033" headers="r4c1-t8 r1c5-t8">Fails if incremental backup is not possible.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r5c1-t8" headers="r1c1-t8"><code dir="ltr">fileIncrOrFull</code></td>
<td class="cellalignment5033" headers="r5c1-t8 r1c2-t8">File</td>
<td class="cellalignment5033" headers="r5c1-t8 r1c3-t8">Either</td>
<td class="cellalignment5033" headers="r5c1-t8 r1c4-t8">Yes</td>
<td class="cellalignment5033" headers="r5c1-t8 r1c5-t8">Performs <code dir="ltr">fileIncremental</code> if possible, or <code dir="ltr">fileFullEnable</code> otherwise.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r6c1-t8" headers="r1c1-t8"><code dir="ltr">streamFull</code></td>
<td class="cellalignment5033" headers="r6c1-t8 r1c2-t8">Stream</td>
<td class="cellalignment5033" headers="r6c1-t8 r1c3-t8">Full</td>
<td class="cellalignment5033" headers="r6c1-t8 r1c4-t8">No</td>
<td class="cellalignment5033" headers="r6c1-t8 r1c5-t8">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r7c1-t8" headers="r1c1-t8"><code dir="ltr">incrementalStop</code></td>
<td class="cellalignment5033" headers="r7c1-t8 r1c2-t8">None</td>
<td class="cellalignment5033" headers="r7c1-t8 r1c3-t8">None</td>
<td class="cellalignment5033" headers="r7c1-t8 r1c4-t8">No</td>
<td class="cellalignment5033" headers="r7c1-t8 r1c5-t8">Takes no backup; just disables existing incremental-enabled backup.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAIIBHH"></a>
<div id="TTINS355" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Migrating a database</h2>
<p>This section discusses migration of TimesTen databases to a new location, covering the following scenarios:</p>
<ul>
<li>
<p><a href="#CIAEIAIA">Moving a database to a different computer (same platform)</a></p>
</li>
<li>
<p><a href="#CIAGEHEI">Moving a database to a different platform</a></p>
</li>
</ul>
<p>These procedures are for standalone TimesTen databases. Replication and TimesTen Cache scenarios are not considered here.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
As discussed in appropriate subsections following, when a database is moved between platforms or bit levels, <code dir="ltr">ttMigrateCS</code> (the client/server version of <code dir="ltr">ttMigrate</code>) or Windows equivalent is required. This is to remotely access the database to be saved, in order to have the data file created on the local target system, assuring proper format for the target system. The Windows equivalent is using <code dir="ltr">ttMigrate</code> to connect to the source system from the target system through a defined TimesTen client DSN.</div>
<a id="CIAEIAIA"></a>
<div id="TTINS222" class="sect2">
<h3 class="sect2">Mo<a id="sthref219"></a>ving a database to a different computer (same platform)</h3>
<p>You can use the <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code> utilities to move a database between two computers that have the same major release of TimesTen, the same CPU architecture, and the same operating system.</p>
<p>To copy a database from one system to another with the same CPU architecture and operating system:</p>
<ol>
<li>
<p>Disconnect applications from the database.</p>
</li>
<li>
<p>Back up the database on the original system using <code dir="ltr">ttBackup</code>. For example:</p>
<pre dir="ltr">ttBackup -dir /tmp/dump -fname salesdata SalesData
</pre></li>
<li>
<p>Move the backup to the new system.</p>
</li>
<li>
<p>Create a DSN for the database on the new system. See <a class="olink TTOPR139" href="../TTOPR/using.htm#TTOPR139">&#34;Creating a Data Manager DSN on UNIX&#34;</a> or <a class="olink TTOPR129" href="../TTOPR/using.htm#TTOPR129">&#34;Creating a Data Manager DSN on Windows&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span>.</p>
</li>
<li>
<p>Confirm the <code dir="ltr">DataStore</code> connection attribute is set correctly for the location on the new system.</p>
</li>
<li>
<p>Restore the backup on the new system using <code dir="ltr">ttRestore</code>. For example:</p>
<pre dir="ltr">ttRestore -dir /tmp/dump -fname salesdata NewSalesData
</pre></li>
<li>
<p>As desired, once the database is operational on the new system, use the <code dir="ltr">ttDestroy</code> utility to destroy the database on the old system, and delete the old DSN.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CIAGEHEI"></a>
<div id="TTINS356" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Mo<a id="sthref220"></a>ving a database to a different platform</h3>
<p>The internal format of a TimesTen database differs between platforms. You can use this procedure to move a database from one platform to another, such as from Solaris to Linux or from a 32-bit platform to a 64-bit platform, and reformat it for the target platform.</p>
<ol>
<li>
<p>Disconnect applications from the database.</p>
</li>
<li>
<p>From the target system, use <code dir="ltr">ttMigrateCS</code> (or Windows equivalent) to connect in client/server mode to the database on the originating system and use the <code dir="ltr">-c</code> option to create a data file for the database on the target system. For example:</p>
<pre dir="ltr">ttMigrateCS -c salesdata1 salesdata.dat
</pre></li>
<li>
<p>On the target system, create a DSN for the database. See <a class="olink TTOPR139" href="../TTOPR/using.htm#TTOPR139">&#34;Creating a Data Manager DSN on UNIX&#34;</a> or <a class="olink TTOPR129" href="../TTOPR/using.htm#TTOPR129">&#34;Creating a Data Manager DSN on Windows&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span>.</p>
</li>
<li>
<p>Recreate the database using <code dir="ltr">AutoCreate=1</code>, such as in the following example:</p>
<pre dir="ltr">ttIsql -connstr &#34;dsn=salesdata2;AutoCreate=1&#34; -e &#34;quit&#34;
</pre>
<p>The database will be empty at this point.</p>
</li>
<li>
<p>Confirm the <code dir="ltr">DataStore</code> connection attribute is set correctly for the location on the new system.</p>
</li>
<li>
<p>On the target system, import the file created by <code dir="ltr">ttMigrateCS</code> into the new database using the <code dir="ltr">ttMigrate</code> utility with the <code dir="ltr">-r</code> option and the <code dir="ltr">-relaxedUpgrade</code> option. For example:</p>
<pre dir="ltr">ttMigrate -r -relaxedUpgrade salesdata2 salesdata.dat
</pre></li>
<li>
<p>As desired, once the database is operational on the new system, use the <code dir="ltr">ttDestroy</code> utility to destroy the database on the old system, and delete the old DSN.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Notes:</p>
Be aware of the following when moving between 32-bit and 64-bit platforms.
<ul>
<li>
<p>When changing bit levels, the database cannot be involved in a replication scheme.</p>
</li>
<li>
<p>TimesTen does not support replication between a 32-bit database and a 64-bit database.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAGCFHJ"></a>
<div id="TTINS357" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Altering a database</h2>
<p>This section discusses scenarios where the database remains on the same system, covering the following topics:</p>
<ul>
<li>
<p><a href="#CIAGCJEH">Moving a database to a different directory</a></p>
</li>
<li>
<p><a href="#CIADCAJC">Reducing database size</a></p>
</li>
</ul>
<p>These procedures are for standalone TimesTen databases. Replication and TimesTen Cache scenarios are not considered here.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
As discussed in appropriate subsections following, when a database is moved between platforms or bit levels, <code dir="ltr">ttMigrateCS</code> (the client/server version of <code dir="ltr">ttMigrate</code>) or Windows equivalent is required. This is to remotely access the database to be saved, in order to have the data file created on the local target system, assuring proper format for the target system. The Windows equivalent is using <code dir="ltr">ttMigrate</code> to connect to the source system from the target system through a defined TimesTen client DSN.</div>
<a id="CIAGCJEH"></a>
<div id="TTINS221" class="sect2">
<h3 class="sect2">Mo<a id="sthref221"></a><a id="sthref222"></a><a id="sthref223"></a>ving a database to a different directory</h3>
<p>The TimesTen daemon identifies a database by the full path name of the database checkpoint files. To move a TimesTen database to a different directory, back up the database using the <code dir="ltr">ttBackup</code> utility, create a new DSN definition that specifies the new database path name, then restore the database into its new location using the <code dir="ltr">ttRestore</code> utility.</p>
<p>Examples in the following procedure move a database from <code dir="ltr">/old/SalesData/sales</code> with a database name <code dir="ltr">SalesData</code> to <code dir="ltr">/new/SalesData/sales</code> with database name <code dir="ltr">NewSalesData</code>, using the <code dir="ltr">/tmp/dump</code> directory for temporary storage. (The examples are for a UNIX system. Do the equivalent on a Windows system.)</p>
<ol>
<li>
<p>Create a temporary directory. For example:</p>
<pre dir="ltr">mkdir /tmp/dump
</pre></li>
<li>
<p>Disconnect applications from the database.</p>
</li>
<li>
<p>Back up the database to the temporary directory using <code dir="ltr">ttBackup</code>. For example:</p>
<pre dir="ltr">ttBackup -dir /tmp/dump -fname salesdata SalesData
</pre></li>
<li>
<p>Unload the database from memory. For more information, see <a href="upgrade.htm#CACHJIBD">&#34;Unloading a database from memory&#34;</a>.</p>
</li>
<li>
<p>Create a DSN definition for the new location and specify the new database path. For example: <code dir="ltr">/new/SalesData/sales/NewSalesData</code>.</p>
</li>
<li>
<p>Confirm the <code dir="ltr">DataStore</code> connection attribute is set correctly for the new location.</p>
</li>
<li>
<p>Restore the backup in the new location. For example:</p>
<pre dir="ltr">ttRestore -dir /tmp/dump -fname salesdata NewSalesData
</pre></li>
<li>
<p>Remove the temporary directory. For example:</p>
<pre dir="ltr">rm -r /tmp/dump
</pre></li>
<li>
<p>After you confirm the database is operational in the new location, optionally use the <code dir="ltr">ttDestroy</code> utility to destroy it in the old location, and delete the old DSN.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CIADCAJC"></a>
<div id="TTINS223" class="sect2">
<h3 class="sect2">Re<a id="sthref224"></a><a id="sthref225"></a><a id="sthref226"></a><a id="sthref227"></a><a id="sthref228"></a><a id="sthref229"></a><a id="sthref230"></a>ducing database size</h3>
<p>Once a database has been defined with a particular size for the permanent region (indicated by the <code dir="ltr">PermSize</code> DSN attribute), it cannot be loaded at a smaller size, even if tables or rows are deleted. A copy of the database made with <code dir="ltr">ttBackup</code> also has the permanent region size of the database embedded in it.</p>
<p>To reduce the allocated size of the permanent region of a database, you must save a copy using the <code dir="ltr">ttMigrate</code> utility then re-create the database with a smaller permanent region size and restore the data.</p>
<p>Perform these steps to reduce the permanent region size of a database:</p>
<ol>
<li>
<p>Disconnect applications from the database.</p>
</li>
<li>
<p>Use the <code dir="ltr">ttMigrate -c</code> option to create a data file for the database. For example:</p>
<pre dir="ltr">ttMigrate -c salesdata /tmp/salesbackup
</pre></li>
<li>
<p>Unload the database from memory. For more information, see <a href="upgrade.htm#CACHJIBD">&#34;Unloading a database from memory&#34;</a>.</p>
</li>
<li>
<p>To modify the original DSN rather than create a new one, you must destroy the original database files using the <code dir="ltr">ttDestroy</code> utility before restoring from the backup.</p>
</li>
<li>
<p>Create a new DSN definition for the new copy of the database with a smaller <code dir="ltr">PermSize</code> value.</p>
</li>
<li>
<p>Recreate the database using <code dir="ltr">AutoCreate=1</code>, such as in the following example:</p>
<pre dir="ltr">ttIsql -connstr &#34;dsn=salesdata;AutoCreate=1&#34; -e &#34;quit&#34;
</pre>
<p>The database will be empty at this point.</p>
</li>
<li>
<p>Restore the backup, using the <code dir="ltr">ttMigrate -r</code> and <code dir="ltr">-relaxedUpgrade</code> options. For example:</p>
<pre dir="ltr">ttMigrate -r -relaxedUpgrade salesdata /tmp/salesbackup
</pre></li>
</ol>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>The permanent region size of a database cannot be reduced below the size that is required by the data currently stored in the database. This value can be determined by querying the <code dir="ltr">perm_in_use_size</code> column of the system table <code dir="ltr">sys.monitor</code>.</p>
</li>
<li>
<p>You can also use this procedure to compact the database in order to reduce fragmentation caused by partially full table pages or fragmentation of the heap buffers that store index nodes and out-of-line values.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CJHFGEED"></a>
<div id="TTINS256" class="sect1">
<h2 class="sect1">Globalization support during migration</h2>
<p>The <code dir="ltr">ttMigrate</code> utility saves one or more migration objects from a TimesTen database into a binary data file or restores the objects from the binary data files into a TimesTen database. Migration objects include tables, cache group definitions, views, and sequences.</p>
<p>The following topics describe what occurs with globalization issues during migration:</p>
<ul>
<li>
<p><a href="#CJHJICJI">Object migration and character sets</a></p>
</li>
<li>
<p><a href="#CJHHCJJC">Migration and length semantics</a></p>
</li>
<li>
<p><a href="#CJHFGAFI">Migrating linguistic indexes</a></p>
</li>
<li>
<p><a href="#CJHHIDJJ">Migrating cache group tables</a></p>
</li>
</ul>
<p>Also see the description of <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343"><code dir="ltr">ttMigrate</code></a> in the <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
<a id="CJHJICJI"></a>
<div id="TTINS257" class="sect2">
<h3 class="sect2">Obj<a id="sthref231"></a><a id="sthref232"></a>ect migration and character sets</h3>
<p>The <code dir="ltr">ttMigrate</code> utility tags each object it saves with the object&#39;s character set. By default, <code dir="ltr">ttMigrate</code> stores object data in the database character set; however, you can select a different character set by using the <code dir="ltr">-saveAsCharset</code> option. You can specify this option in create mode (<code dir="ltr">-c</code>) or append mode (<code dir="ltr">-a</code>).</p>
<p>When you use <code dir="ltr">ttMigrate</code> to restore an object, the data is implicitly converted to the database character set of the target database, if necessary. Character set conversion may result in data loss if the database character set of the target database cannot represent all of the data that it receives.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>If you use the <code dir="ltr">-saveAsCharset</code> option when saving an object, you cannot use <code dir="ltr">ttMigrate -r -exactUpgrade</code> to restore it.</p>
</li>
<li>
<p>The <code dir="ltr">ttMigrate</code> utility issues a warning whenever there is an implicit or explicit character set conversion while saving or restoring data.</p>
</li>
<li>
<p>If character set conversion is requested when migrating databases, performance may be slower than if character set conversion is not requested.</p>
</li>
</ul>
</div>
<p>If you know that the data is encoded in the database character set of the target database, use the <code dir="ltr">-noCharsetConversion</code> option when restoring (<code dir="ltr">-r</code>). When using this option, <code dir="ltr">ttMigrate</code> assumes that the data uses the same database character set of the target database.</p>
<p>When you restore untagged character data from a database that was created before release 7.0 into a database from release 7.0 and later, <code dir="ltr">ttMigrate</code> treats the data as if it is in the database character set of the target database. All TimesTen databases from release 7.0 and earlier use the <code dir="ltr">TIMESTEN8</code> character set.</p>
<p>If you are migrating from a TimesTen database that uses <code dir="ltr">TIMESTEN8</code> to a TimesTen database that uses a different character set, the following may occur:</p>
<ul>
<li>
<p>The query result may differ in the new TimesTen database with the new character set. The user application may work on a multibyte character set and use the <code dir="ltr">TIMESTEN8</code> character set to store the character string as it is. When querying the data using the <code dir="ltr">LIKE</code> predicate (or any scalar functions) to match a substring, the query engine may match a binary pattern that does not begin or end at a character boundary under <code dir="ltr">TIMESTEN8</code> character set, since it is a single byte character set. Every byte is treated as a character even it is actually in the middle of a multibyte character.</p>
<p>Another possible issue arises if the user partitions a long character string and stores it in separate rows. The string may be reconstructed later by concatenating the values from multiple rows. This may work with the <code dir="ltr">TIMESTEN8</code> character set. However, when using a multibyte character set, if the partition is not on the character boundary, the string value can be changed. In this case, ensure that the string is partitioned on the character boundary.</p>
</li>
<li>
<p>Performance may be slower with queries that use predicates or scalar functions on character strings in databases with a character set other than <code dir="ltr">TIMESTEN8</code>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CJHHCJJC"></a>
<div id="TTINS258" class="sect2">
<h3 class="sect2">Migration and length semantics</h3>
<p>The <code dir="ltr">ttMigrate</code> utility saves length semantic information about <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> columns. It restores the length semantic information when restoring objects into databases created in TimesTen release 7.0 or later.</p>
<p>When objects are migrated back into a TimesTen release before 7.0, columns with character semantics are converted to byte semantics and the column length is adjusted to match the byte length of the original columns.</p>
<p>When objects are migrated from a release before 7.0 to release 7.0 and later, byte semantics is used.</p>
</div>
<!-- class="sect2" -->
<a id="CJHFGAFI"></a>
<div id="TTINS259" class="sect2">
<h3 class="sect2">Migrating linguistic indexes</h3>
<p>The <code dir="ltr">ttMigrate</code> utility supports migration of linguistic indexes into TimesTen releases that support them. When migrating back to a TimesTen release before 7.0, <code dir="ltr">ttMigrate</code> issues a warning indicating that the linguistic indexes cannot be restored. Migration of the table proceeds without the linguistic indexes.</p>
</div>
<!-- class="sect2" -->
<a id="CJHHIDJJ"></a>
<div id="TTINS260" class="sect2">
<h3 class="sect2">Migrating cache group tables</h3>
<p>You cannot restore cache group tables containing <code dir="ltr">NCHAR</code>/<code dir="ltr">NVARCHAR2</code> columns to a release before 7.0. Releases before 7.0 do not allow these data types in cache group tables.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5024">
<tr>
<td class="cellalignment5033">
<table class="cellalignment5029">
<tr>
<td class="cellalignment5028"><a href="install.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5028"><a href="upgrade.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5036">
<table class="cellalignment5027">
<tr>
<td class="cellalignment5028"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5028"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5028"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5028"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5028"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5028"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>