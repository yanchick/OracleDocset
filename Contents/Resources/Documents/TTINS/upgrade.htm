<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107830"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/TimesTen%20Upgrades"></a><title>TimesTen Upgrades</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033"/>
<meta name="dcterms.created" content="2015-10-07T16:37:41Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database Installation Guide"/>
<meta name="dcterms.identifier" content="E21632-17"/>
<meta name="dcterms.isVersionOf" content="TTINS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="migrate.htm" title="Previous" type="text/html"/>
<link rel="Next" href="license.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21632-17.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/9</span> <!-- End Header -->
<div id="TTINS199" class="chapter"><a id="sthref233"></a>
<h1 class="chapter"><span class="secnum">3</span> TimesTen Upgrades</h1>
<p><a id="sthref234"></a><a id="sthref235"></a>This chapter describes the process of upgrading from one release of TimesTen to a newer release of TimesTen. It includes the following topics:</p>
<ul>
<li>
<p><a href="#CACBEBJD">Preliminary considerations</a></p>
</li>
<li>
<p><a href="#CACJEGII">Upgrade modes</a></p>
</li>
<li>
<p><a href="#CACJDGHG">Performing an in-place upgrade</a></p>
</li>
<li>
<p><a href="#CACICGFA">Performing an offline upgrade</a></p>
</li>
<li>
<p><a href="#CACJCEDE">Performing an online upgrade with replication</a></p>
</li>
<li>
<p><a href="#CHDDADAE">Performing an upgrade with active standby pair replication</a></p>
</li>
<li>
<p><a href="#CIAIIDCI">Performing an offline TimesTen upgrade when using Oracle Clusterware</a></p>
</li>
<li>
<p><a href="#CCHHFAII">Performing an online TimesTen upgrade when using Oracle Clusterware</a></p>
</li>
<li>
<p><a href="#CACHGCGA">Upgrades when using parallel replication</a></p>
</li>
<li>
<p><a href="#CACHCEIB">Performing a Client/Server online upgrade</a></p>
</li>
<li>
<p><a href="#CACCFBBB">Record of upgrades with replication configured</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
For general information about TimesTen utilities to use during upgrades, refer to <a href="migrate.htm#BABIDJJI">&#34;Overview: copying, migrating, and restoring a database&#34;</a>.</div>
<a id="CACBEBJD"></a>
<div id="TTINS200" class="sect1">
<h2 class="sect1">Preliminary considerations</h2>
<p>This section covers some areas to consider before upgrading TimesTen:</p>
<ul>
<li>
<p><a href="#CIAJACHC">Data type considerations</a></p>
</li>
<li>
<p><a href="#CIABAAEA">Database character set considerations</a></p>
</li>
<li>
<p><a href="#CIABCCIG">Location of existing database files</a></p>
</li>
<li>
<p><a href="#CHDECCFH">Access control when upgrading from releases prior to 11.2.1</a></p>
</li>
<li>
<p><a href="#CIABEDAB">Replication considerations</a></p>
</li>
</ul>
<a id="CIAJACHC"></a>
<div id="TTINS337" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Data type considerations</h3>
<p>This section covers data type considerations, particularly those that are relevant if you are upgrading from a release of TimesTen earlier than 7.0. It discusses the following topics.</p>
<ul>
<li>
<p><a href="#CIAFEDIB">Data type compatibility</a></p>
</li>
<li>
<p><a href="#CACCBIBH">Data type considerations when upgrading from a TimesTen release before 7.0</a></p>
</li>
</ul>
<a id="CIAFEDIB"></a>
<div id="TTINS202" class="sect3">
<h4 class="sect3">Data type compatibility</h4>
<p><a id="sthref236"></a><a id="sthref237"></a>TimesTen supports a selection of Oracle Database data types in addition to the original TimesTen data types that are maintained for backward compatibility. For details on all data types, see <a class="olink TTSQL124" href="../TTSQL/types.htm#TTSQL124">&#34;Type specifications&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database SQL Reference</span>. Because some Oracle Database data types have the same names as the backward-compatible TimesTen data types, a set of aliases exists for addressing the data types. Which data types the aliases refer to depends on the <code dir="ltr">TypeMode</code> setting for the database. See <a class="olink TTREF134" href="../TTREF/attribute.htm#TTREF134">&#34;TypeMode&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for more information.</p>
<p>TimesTen backward-compatible data types are replication-compatible with the data types in releases of TimesTen before 7.0. However, TimesTen backward-compatible data types are not compatible with TimesTen Cache. Use only Oracle Database data types with TimesTen Cache. To use TimesTen Cache, you must convert any original TimesTen data types to the Oracle Database data types when performing a database migration with <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343"><code dir="ltr">ttMigrate</code></a>, described in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>. See <a href="#CACCFCEA">&#34;Converting TimesTen data types to Oracle Database data types&#34;</a>, following shortly, for details.</p>
<p>Oracle Database data types are not replication-compatible with releases of TimesTen before 7.0. To perform an upgrade that requires replication with a release of TimesTen from before 7.0, you must upgrade the original data types as TimesTen data types. See <a href="#CACIACCG">&#34;Preserving TimesTen data types&#34;</a> for more information.</p>
</div>
<!-- class="sect3" -->
<a id="CACCBIBH"></a>
<div id="TTINS206" class="sect3">
<h4 class="sect3">Data type considerations when upgrading from a TimesTen release before 7.0</h4>
<p><a id="sthref238"></a>When performing an upgrade from a release before TimesTen 7.0, you must choose whether to preserve the data types in your database as TimesTen data types, or convert them to Oracle Database data types. Your planned use for the database and your preferred upgrade method have an impact on this decision.</p>
<p>The following subsections cover each approach:</p>
<ul>
<li>
<p><a href="#CACCFCEA">Converting TimesTen data types to Oracle Database data types</a></p>
</li>
<li>
<p><a href="#CACIACCG">Preserving TimesTen data types</a></p>
</li>
</ul>
<a id="CACCFCEA"></a>
<div id="TTINS207" class="sect4">
<h5 class="sect4">Conv<a id="sthref239"></a>erting TimesTen data types to Oracle Database data types</h5>
<p>If you intend to use your database with TimesTen Cache, you must convert your TimesTen data types to Oracle Database data types.</p>
<p>To convert the data types from a release before TimesTen 7.0 to Oracle Database data types, you must use the <code dir="ltr">-convertTypesToOra</code> option for <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343"><code dir="ltr">ttMigrate</code></a> (described in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>) when you restore your database as part of your upgrade procedure. For example, if you restore the database <code dir="ltr">salesdata</code> as part of an upgrade procedure, you may use the following to upgrade the data types to Oracle Database data types:</p>
<pre dir="ltr">ttMigrate -r -convertTypesToOra salesdata salesdata.mig
</pre>
<p>See <a class="olink TTREF349" href="../TTREF/util.htm#TTREF349">&#34;TimesTen to Oracle Database data type conversions&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for more information.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>You cannot perform an online upgrade using replication if you are converting from TimesTen to Oracle Database data types, as data types may only replicate to like data types. (This replication restriction is not an issue when upgrading from TimesTen 7.0 or later and data types have been converted to Oracle Database data types.)</p>
</li>
<li>
<p>Because the Oracle Database and TimesTen versions of some data types behave slightly differently, you should thoroughly test any applications written for releases of TimesTen before 7.0 with the Oracle Database data types before deploying them with the new release of TimesTen.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" -->
<a id="CACIACCG"></a>
<div id="TTINS208" class="sect4">
<h5 class="sect4">Preserving Ti<a id="sthref240"></a>mesTen data types</h5>
<p>If you intend to perform an online upgrade using replication, you must preserve your data types as TimesTen data types. See <a href="#CACBCFGG">&#34;Online upgrades with replication&#34;</a> for more information.</p>
<p>If you choose to preserve the data types in a database from a release before TimesTen 7.0 as TimesTen data types, you are not required to use any special options when restoring the database with <code dir="ltr"><a id="sthref241"></a>ttMigrate</code>. The data types from a release before TimesTen 7.0 are automatically restored as TimesTen data types.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The default<a id="sthref242"></a> <code dir="ltr">TypeMode</code> setting is <code dir="ltr">0</code>, for Oracle type mode. In this mode, a data type such as <code dir="ltr">CHAR</code> has the semantics of the Oracle Database <code dir="ltr">CHAR</code> data type rather than the TimesTen <code dir="ltr">CHAR</code> data type. To guarantee compatibility with applications written for TimesTen releases before 7.0, you should configure the DSN for your database with a <code dir="ltr">TypeMode</code> setting of <code dir="ltr">1</code> before restoring the database with <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343"><code dir="ltr">ttMigrate</code></a> (described in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>) as part of the upgrade procedure.
<p>See <a class="olink TTREF134" href="../TTREF/attribute.htm#TTREF134">&#34;TypeMode&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for additional information.</p>
</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIABAAEA"></a>
<div id="TTINS338" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Database character set considerations</h3>
<p>This section covers database character set considerations, including those that are relevant if you are upgrading from a release of TimesTen earlier than 7.0. It discusses the following topics:</p>
<ul>
<li>
<p><a href="#CIAGCBGB">Database character set specification</a></p>
</li>
<li>
<p><a href="#CIAJEJCI">Character set restrictions when upgrading from a TimesTen release before 7.0</a></p>
</li>
<li>
<p><a href="#CACCFBFA">Database character set conversion</a></p>
</li>
</ul>
<a id="CIAGCBGB"></a>
<div id="TTINS203" class="sect3">
<h4 class="sect3">Database character set specification</h4>
<p><a id="sthref243"></a><a id="sthref244"></a>TimesTen requires a database to be configured to support a specific character set when it is created. The character set for the database is specified using the database attribute <a id="sthref245"></a><a class="olink TTREF129" href="../TTREF/attribute.htm#TTREF129"><code dir="ltr">DatabaseCharacterSet</code></a>, described in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>. The value of this attribute determines which characters may be input to and output from character fields, and how character data is stored and sorted. See <a class="olink TTOPR276" href="../TTOPR/globalization.htm#TTOPR276">&#34;Choosing a database character set&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span> and <a class="olink TTREF739" href="../TTREF/attribute.htm#TTREF739">&#34;Supported character sets&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for more information.</p>
<p>Be aware of the following points.</p>
<ul>
<li>
<p>If you plan to use the database with TimesTen Cache, or you plan to use the <code dir="ltr">ttLoadFromOracle</code> built-in procedure to populate TimesTen tables from an Oracle database, you must specify a value for <code dir="ltr">DatabaseCharacterSet</code> that is the same as the character set specified for the Oracle database to which the TimesTen database connects.</p>
</li>
<li>
<p>Replication is not possible between databases with different character sets.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CIAJEJCI"></a>
<div id="TTINS339" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Character set restrictions when upgrading from a TimesTen release before 7.0</h4>
<p>If you perform an upgrade from a release before TimesTen 7.0, consider the following important restrictions.</p>
<ul>
<li>
<p>Because databases created with releases of TimesTen before 7.0 do not have a database character set specified, a special database character set, <code dir="ltr">TIMESTEN8</code>, was created, which allows replication compatibility between databases created by the current release of TimesTen and those created by earlier releases. If you plan to perform the TimesTen upgrade as an online upgrade with replication (see <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a>), then you must specify a <code dir="ltr">DatabaseCharacterSet</code> of <code dir="ltr">TIMESTEN8</code> in your DSN.</p>
</li>
<li>
<p>If you use TimesTen Client/Server and intend to connect to a database in an upgraded TimesTen instance with an application linked to a Client ODBC library from a release before TimesTen 7.0, you must specify a <code dir="ltr">DatabaseCharacterSet</code> of <code dir="ltr">TIMESTEN8</code> in your DSN to ensure compatibility. See <a href="#CACHCEIB">&#34;Performing a Client/Server online upgrade&#34;</a>.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">TIMESTEN8</code> database character set is intended for use only when transitioning from a release of TimesTen before 7.0. When you no longer need your database to replicate to a pre-7.0 release of TimesTen, or to connect to a pre-7.0 client application, you should use <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343"><code dir="ltr">ttMigrate</code></a>, described in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>, to convert your database to a database character set other than <code dir="ltr">TIMESTEN8</code>. See the next section, <a href="#CACCFBFA">&#34;Database character set conversion&#34;</a>, for details.</div>
</div>
<!-- class="sect3" -->
<a id="CACCFBFA"></a>
<div id="TTINS209" class="sect3">
<h4 class="sect3">Database character set conversion</h4>
<p>In some cases, you may need to change the configured database character set as part of the upgrade process. There are two particular cases in which a database character set change is required:</p>
<ul>
<li>
<p>You must change your database character set from the one that you originally specified to a new one that fits your requirements more closely.</p>
</li>
<li>
<p>You have specified the database character set as <code dir="ltr">TIMESTEN8</code> to upgrade from a release of TimesTen before 7.0 using online upgrade with replication or Client/Server. After the upgrade is complete for all databases and client applications, you should convert each database from this special transitional character set to the national character set you prefer to use for your region.</p>
</li>
</ul>
<p>You can use <code dir="ltr">ttMigrate</code> to convert a database from any character set to any other character set by completing the following steps.</p>
<ol>
<li>
<p>Save the database to a file using <code dir="ltr">ttMigrate</code>. For example, to save the database <code dir="ltr">salesdata</code> to the file <code dir="ltr">salesdata.mig</code>, use the command.</p>
<pre dir="ltr">ttMigrate -c salesdata salesdata.mig
</pre></li>
<li>
<p>Destroy the database, using <code dir="ltr">ttDestroy</code>.</p>
<pre dir="ltr"><a id="sthref246"></a>ttDestroy salesdata
</pre></li>
<li>
<p><a id="sthref247"></a>Change the value of the DSN attribute <code dir="ltr">DatabaseCharacterSet</code> for your database to the value specifying the new character set. For example, if you want your database to use the <code dir="ltr">WE8ISO8859P1</code> character set, use the following line in your <code dir="ltr">ODBCINI</code> file.</p>
<pre dir="ltr">DatabaseCharacterSet=WE8ISO8859P1
</pre></li>
<li>
<p>Load the database from the file using <code dir="ltr">ttMigrate</code>. TimesTen automatically converts the character data from the character set the file was saved with to the character set specified in the DSN.</p>
<pre dir="ltr">ttMigrate -r salesdata salesdata.mig
</pre></li>
</ol>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>It is possible that character data is lost in the conversion process if no mapping exists from one character set to the other for a given character.</p>
</li>
<li>
<p>If you are upgrading from a release earlier than TimesTen 7.0 and converting from the <code dir="ltr">TIMESTEN8</code> character set, use the <code dir="ltr">ttMigrate -noCharsetConversion</code> option. This ensures that no character values are changed when the data is loaded into the DSN using the new character set. For example:</p>
<pre dir="ltr">ttMigrate -r -noCharsetConversion salesdata salesdata.mig
</pre></li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIABCCIG"></a>
<div id="TTINS340" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Location of existing database files</h3>
<p>As noted in <a href="install.htm#CBHJGJHB">&#34;Considerations for locations of database files and other user files&#34;</a>, it is strongly recommended that you not store any database files or user files under the TimesTen installation path, where they may be removed during upgrade or uninstallation operations.</p>
<p>If, however, you do have databases under the installation directory, you can use the following general steps to move each database elsewhere:</p>
<ol>
<li>
<p>Use the <code dir="ltr">ttBackup</code> utility to back up the database.</p>
</li>
<li>
<p>Use the <code dir="ltr">ttDestroy</code> utility to destroy the database.</p>
</li>
<li>
<p>Update the DSN definition for the database so that the <code dir="ltr">DataStore</code> and <code dir="ltr">LogDir</code> connection attributes reference a location outside of the installation path.</p>
</li>
<li>
<p>Use the <code dir="ltr">ttRestore</code> utility to restore the database to the new location.</p>
</li>
</ol>
<p>For more information about these utilities and attributes, see <a class="olink TTREF316" href="../TTREF/util.htm#TTREF316">&#34;Utilities&#34;</a> and <a class="olink TTREF114" href="../TTREF/attribute.htm#TTREF114">&#34;Connection Attributes&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
<p>Also see <a href="migrate.htm#CIAGCJEH">&#34;Moving a database to a different directory&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDECCFH"></a>
<div id="TTINS205" class="sect2">
<h3 class="sect2">Ac<a id="sthref248"></a><a id="sthref249"></a>cess control when upgrading from releases prior to 11.2.1</h3>
<p>Access control is mandatory in TimesTen beginning with release 11.2.1. If you have been using earlier releases of TimesTen without access control and you do not want to initially secure your database objects after upgrading to the current release, you can grant the <code dir="ltr">ADMIN</code> system privilege to <code dir="ltr">PUBLIC</code> using the following SQL command:</p>
<pre dir="ltr">GRANT ADMIN TO PUBLIC;
</pre>
<p>If you grant the <code dir="ltr">ADMIN</code> privilege to <code dir="ltr">PUBLIC</code>, all users have unrestricted access to all database objects and are able to perform all administrative tasks, except for those tasks that must be performed as the instance administrator. Granting the <code dir="ltr">ADMIN</code> privilege to <code dir="ltr">PUBLIC</code> should be viewed as a temporary workaround, for upgrade purposes only.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This is never recommended as a long-term approach, as it results in an inherently insecure system.</div>
</div>
<!-- class="sect2" -->
<a id="CIABEDAB"></a>
<div id="TTINS358" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Replication considerations</h3>
<p>When using the <code dir="ltr">ttMigrate</code> utility to upgrade a database that is part of a replication scheme, you must restore the replication scheme (using <code dir="ltr">ttMigrate -r</code>) to the same database from which it was originally created (using <code dir="ltr">ttMigrate -c</code>). Attempting to restore the migration file to a different database results in an error, and the replication scheme will not be restored.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJEGII"></a>
<div id="TTINS212" class="sect1">
<h2 class="sect1">Upgrade modes</h2>
<p>The type of upgrade you can perform&mdash;in-place, online, or offline&mdash;depends on the level of upgrade&mdash;major or minor&mdash;among other factors. A<a id="sthref250"></a><a id="sthref251"></a><a id="sthref252"></a><a id="sthref253"></a> <span class="italic">major upgrade</span> is one between different major releases of TimesTen, such as from 11.2.1.<span class="italic">x.x</span> to 11.2.2.<span class="italic">x.x</span>. By contrast, TimesTen databases from different patch releases of the same major release are structurally equivalent or identical, so upgrading to a new patch release, such as from 11.2.2.6.0 to 11.2.2.7.0, is considered a minor upgrade.</p>
<p>The following subsections describe the types of upgrades:</p>
<ul>
<li>
<p><a href="#CACCFCDB">In-place upgrades</a></p>
</li>
<li>
<p><a href="#CACHCCGG">Offline upgrades</a></p>
</li>
<li>
<p><a href="#CACBCFGG">Online upgrades with replication</a></p>
</li>
<li>
<p><a href="#CACDDCHH">Online upgrades with Client/Server</a></p>
</li>
</ul>
<p>For a minor upgrade, you are generally not required to migrate your existing databases and can perform an in-place upgrade (on UNIX systems only).</p>
<p>For a major upgrade, you can usually perform an online upgrade, depending on your situation.</p>
<p>Situations that require offline upgrades are noted in that section.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
There are steps you should take before performing any upgrade:
<ul>
<li>
<p>While preparing for the upgrade, ensure that all databases are unloaded from memory before upgrading TimesTen. For a description of the procedures for unloading a database from memory, see <a href="#CACHJIBD">&#34;Unloading a database from memory&#34;</a>.</p>
</li>
<li>
<p>During the installation of any new release, you should disconnect your application. The TimesTen daemon process from the prior release is stopped during uninstallation, effectively disconnecting all applications that were still connected to any databases in the instance.</p>
</li>
</ul>
</div>
<a id="CACCFCDB"></a>
<div id="TTINS213" class="sect2">
<h3 class="sect2">In-place upgrades</h3>
<p><a id="sthref254"></a><a id="sthref255"></a>In-place upgrades are available on UNIX systems for moving to a new patch release of TimesTen, such as from release 11.2.2.6.0 to release 11.2.2.7.0. There are also equivalent uninstallation and installation steps you can perform on Windows systems.</p>
<p>To perform an in-place upgrade, use the UNIX installer option to upgrade an existing instance. The uninstallation of the old release and installation of the new release take place in a single operation. New software libraries and binaries are installed in the same location as before. If you choose default responses, existing databases will be preserved (assuming they were not located under the <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code> directory) without the necessity of using the TimesTen backup and migration utilities.</p>
<p>During the in-place upgrade, all applications must disconnect from databases in the TimesTen instance being upgraded.</p>
<p>On Windows systems, you can perform equivalent steps to move between patch releases by first uninstalling TimesTen, keeping your DSNs when prompted, then installing the new release. As with an in-place upgrade on UNIX, this does not require use of the backup and migration utilities.</p>
<p>See <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
Before upgrading, ensure that you do not have any databases or important files under the TimesTen installation directory. See <a href="install.htm#CBHJGJHB">&#34;Considerations for locations of database files and other user files&#34;</a> and <a href="#CIABCCIG">&#34;Location of existing database files&#34;</a> for related information.</div>
</div>
<!-- class="sect2" -->
<a id="CACHCCGG"></a>
<div id="TTINS214" class="sect2">
<h3 class="sect2">Offline upgrades</h3>
<p><a id="sthref256"></a><a id="sthref257"></a>While an offline upgrade is in progress, databases are not available to applications. Offline upgrades usually require enough disk space for two copies of each database in the TimesTen instance being upgraded.</p>
<p>You can use offline upgrades to do the following:</p>
<ul>
<li>
<p>Move to a new major release of TimesTen, using <code dir="ltr">ttMigrate</code>.</p>
</li>
<li>
<p>Move to a new minor or patch release of TimesTen, using <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code>.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
For a minor or patch upgrade, it is more typical to use an in-place upgrade or Windows equivalent, as discussed in the preceding section, <a href="#CACCFCDB">&#34;In-place upgrades&#34;</a>.</div>
<p>Offline upgrades require all applications to disconnect from TimesTen during the upgrade procedure. Databases must also be unloaded from shared memory. Offline upgrades require you to use the TimesTen <code dir="ltr"><a id="sthref258"></a><a id="sthref259"></a>ttMigrate</code> utility (for a major upgrade) or <code dir="ltr">ttBackup</code> utility. (See <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343">&#34;ttMigrate&#34;</a> and <a class="olink TTREF323" href="../TTREF/util.htm#TTREF323">&#34;ttBackup&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.)</p>
<p>See <a href="#CACICGFA">&#34;Performing an offline upgrade&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CACBCFGG"></a>
<div id="TTINS215" class="sect2">
<h3 class="sect2">Online upgrades with replication</h3>
<p><a id="sthref260"></a><a id="sthref261"></a><a id="sthref262"></a>When upgrading to a new major release of TimesTen, you may have a mission-critical database that must remain continuously available to your applications. You can use TimesTen replication to keep two copies of a database synchronized, even when the databases are from different releases of TimesTen, allowing your applications to stay connected to one copy of the database while the TimesTen instance for the other database is being upgraded. When the upgrade is finished, any updates that have been made on the active database are transmitted immediately to the database in the upgraded TimesTen instance, and your applications can then be switched with no data loss and no downtime. For more information, see <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a>.</p>
<p>The online upgrade process supports only updates to user tables during the upgrade. Data definition changes such as <code dir="ltr">CREATE TABLE</code> or <code dir="ltr">CREATE INDEX</code> are not replicated. In addition, all tables to be replicated must have a <code dir="ltr">PRIMARY KEY</code> or a unique index on non-nullable columns.</p>
<p>Because two copies of the database (or two copies of each database, if there are more than one) are required during the upgrade, you must have available twice the memory and disk space normally required, if performing the upgrade on a single system.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>Online major upgrades for active standby pairs with cache groups are only supported for read-only cache groups.</p>
</li>
<li>
<p>Online major upgrades for active standby pairs that are managed by Oracle Clusterware are not supported.</p>
</li>
<li>
<p>Replication is not supported between 32-bit and 64-bit databases. Tables migrated using the <code dir="ltr"><a id="sthref263"></a>ttMigrate</code> <code dir="ltr">-inline</code> command should not be replicated with tables that do not have inline columns, as inline columns cannot be replicated with not inline columns.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACDDCHH"></a>
<div id="TTINS216" class="sect2">
<h3 class="sect2">Online upgrades with Client/Server</h3>
<p><a id="sthref264"></a><a id="sthref265"></a>If you are upgrading a TimesTen Client/Server installation to a new major release, you can minimize downtime by performing a Client/Server online upgrade. During this process, TimesTen clients from the previous release are able to continue to communicate with a database in a TimesTen instance that has been upgraded to the new release. See <a href="#CACHCEIB">&#34;Performing a Client/Server online upgrade&#34;</a>.</p>
<p>The Client/Server online upgrade process minimizes, but does not eliminate, the interruption of client application access to the database in the TimesTen instance being upgraded. To maintain nearly continuous availability of a database to all clients, you may use the approach discussed in the preceding section, <a href="#CACBCFGG">&#34;Online upgrades with replication&#34;</a>. This procedure keeps an identical copy of the database available to the old release of TimesTen Server, while you perform the upgrade. Once the original database is available to the new release of TimesTen Server, you may stop the old release and start the new release, listening on the same port. The only interruption in availability using this method is the very brief period after the old server is stopped and before the new server is started.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJDGHG"></a>
<div id="TTINS217" class="sect1">
<h2 class="sect1">Performing an in-place upgrade</h2>
<p><a id="sthref266"></a><a id="sthref267"></a>You can perform an in-place upgrade of a TimesTen instance on a UNIX system if you are moving between patch releases (staying within the same major TimesTen release), such as upgrading from one 11.2.2.<span class="italic">x.x</span> release to a higher 11.2.2.<span class="italic">x.x</span> release. This does not require migrating the databases.</p>
<p>On Windows systems, there is no installer option for such an upgrade. Instead, even when just moving between patch releases, you must perform a separate uninstallation and installation of TimesTen. As with an in-place upgrade on UNIX, migrating the databases is not required.</p>
<p>Before the upgrade, for each database in the instance, all applications must disconnect from the database and the database must be unloaded from shared memory.</p>
<p>The following subsections discuss the process for performing an in-place upgrade or Windows equivalent:</p>
<ul>
<li>
<p><a href="#CACHJIBD">Unloading a database from memory</a></p>
</li>
<li>
<p><a href="#CIABAJED">Performing the upgrade</a></p>
</li>
<li>
<p><a href="#CIAICHEJ">Reloading a database into memory</a></p>
</li>
</ul>
<a id="CACHJIBD"></a>
<div id="TTINS218" class="sect2">
<h3 class="sect2">Unloading a database from memory</h3>
<p><a id="sthref268"></a><a id="sthref269"></a>A TimesTen database remains loaded in shared memory if any applications or TimesTen agents, such as the cache agent or replication agent, are connected to it. A database may also be kept in shared memory for particular RAM policy configurations set using the <code dir="ltr">ttAdmin</code> utility, even when no applications or agents are connected. (See <a class="olink TTREF321" href="../TTREF/util.htm#TTREF321">&#34;ttAdmin&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.)</p>
<p>Use the following steps to unload a database from memory in a TimesTen instance being upgraded. All steps must be completed for each database in the TimesTen instance.</p>
<ol>
<li>
<p>Disconnect all applications from the database.</p>
</li>
<li>
<p><a id="sthref270"></a><a id="sthref271"></a>If the replication agent is running on the database, set the replication state to <code dir="ltr">pause</code> and stop the replication agent. This example references an active standby pair, <code dir="ltr">activedb</code> and <code dir="ltr">standbydb</code>, where <code dir="ltr">activedb</code> belongs to the TimesTen instance being upgraded. The example sets the replication state from <code dir="ltr">activedb</code> to <code dir="ltr">standbydb</code> to <code dir="ltr">pause</code>, then stops the replication agent on <code dir="ltr">activedb</code>. Assume <code dir="ltr">standbydb</code> does not belong to the TimesTen instance being upgraded.</p>
<pre dir="ltr">ttRepAdmin -receiver -name activedb -state pause standbydb
ttAdmin -repStop activedb
</pre></li>
<li>
<p>If the cache agent is running on the database, stop the cache agent. This example references a database <code dir="ltr">cachedb</code> that uses TimesTen Cache and belongs to the TimesTen instance being upgraded. (The example does not consider replication. If the cache agent is running, this step must be performed regardless of whether the database is configured for replication.)</p>
<pre dir="ltr">ttAdmin -cacheStop cachedb
</pre></li>
<li>
<p>Unload the database from memory using <code dir="ltr">ttAdmin</code>. The first example assumes RAM policy is set to <code dir="ltr">manual</code> and references a database <code dir="ltr">upgradedb</code> that belongs to the TimesTen instance being upgraded. (The example does not consider replication or cache. This step must be performed regardless of whether the database is configured for replication or cache.)</p>
<pre dir="ltr">ttAdmin -ramUnload upgradedb
</pre>
<p>Or, if the RAM policy is set to <code dir="ltr">always</code>, change it to <code dir="ltr">manual</code>, then unload the database from memory. For example:</p>
<pre dir="ltr">ttAdmin -ramPolicy manual -ramUnload upgradedb
</pre>
<p>Or, if the RAM policy is <code dir="ltr">inUse</code> and a grace period is set, set the grace period to 0 or wait for the grace period to elapse. This results in the database being unloaded. For example:</p>
<pre dir="ltr">ttAdmin -ramGrace 0 upgradedb
</pre></li>
<li>
<p><a id="sthref272"></a><a id="sthref273"></a>Use the <code dir="ltr">ttStatus</code> utility to verify that the database has been unloaded from memory. The utility will indicate &#34;There are no connections to the data store.&#34; (When a database is loaded into memory, there are automatic subdaemon connections.)</p>
<p>See <a class="olink TTREF370" href="../TTREF/util.htm#TTREF370">&#34;ttStatus&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
</li>
<li>
<p>Optionally stop the TimesTen daemon. (During an in-place upgrade, the daemon is automatically stopped.)</p>
<pre dir="ltr">ttDaemonAdmin -stop
</pre></li>
</ol>
<p>Also see <a href="#CIAICHEJ">&#34;Reloading a database into memory&#34;</a>, following shortly.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">activedb</code>, <code dir="ltr">cachedb</code> and <code dir="ltr">upgradedb</code> databases, for example, can be the same database. A TimesTen database can have both replication and cache configured, and a RAM policy other than manual.</div>
</div>
<!-- class="sect2" -->
<a id="CIABAJED"></a>
<div id="TTINS315" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Performing the upgrade</h3>
<p>To perform an in-place upgrade on a UNIX system, use the TimesTen installer option to upgrade an existing instance (not install a new instance). UNIX installer options are covered in <a href="install.htm#CBHIDBFI">&#34;Installing TimesTen&#34;</a>.</p>
<p>The uninstallation of the old release and installation of the new release take place in a single process. New software libraries and binaries are installed in the same location as before. You are prompted whether to remove files in <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/info</code> and <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/network/admin/samples</code>. Presuming you choose the default &#34;no&#34; responses, existing databases will be preserved (assuming they were not located under the <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code> directory) and their configurations will be preserved (in the <code dir="ltr">info</code> directory) without the databases having to be migrated.</p>
<p>On Windows systems, there is no installer option for such an upgrade. Instead, when moving between patch releases (staying within the same major TimesTen release), you must perform an uninstallation of TimesTen followed by an installation of the new release. Uninstallation on Windows is covered in <a href="install.htm#CBHEJCIH">&#34;Uninstalling TimesTen on Windows systems&#34;</a>. Presuming you choose to save your DSNs while uninstalling, existing databases will be preserved (assuming they were not located under the <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code> directory) and their configurations will be preserved without the databases having to be migrated. Installation on Windows is covered in <a href="install.htm#CBHFCAID">&#34;Installing TimesTen&#34;</a>.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
Before upgrading, ensure that you do not have any databases or important files under the TimesTen installation directory. See <a href="install.htm#CBHJGJHB">&#34;Considerations for locations of database files and other user files&#34;</a> and <a href="#CIABCCIG">&#34;Location of existing database files&#34;</a> for related information.</div>
</div>
<!-- class="sect2" -->
<a id="CIAICHEJ"></a>
<div id="TTINS316" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Reloading a database into memory</h3>
<p>After unloading the databases from memory (as shown in <a href="#CACHJIBD">&#34;Unloading a database from memory&#34;</a>) and upgrading the TimesTen instance, use commands such as the following to reload a database into memory. (These examples are independent of each other.) Such steps must be performed, as applicable, for each database in the instance that was upgraded.</p>
<ol>
<li>
<p>Confirm the TimesTen daemon has started. (During an in-place upgrade, the daemon should start automatically.) If necessary:</p>
<pre dir="ltr">ttDaemonAdmin -start
</pre></li>
<li>
<p>Use <code dir="ltr">ttAdmin</code> to reload the database into memory. If the RAM policy was <code dir="ltr">manual</code> for the database <code dir="ltr">upgradedb</code> before the upgrade:</p>
<pre dir="ltr">ttAdmin -ramLoad upgradedb
</pre>
<p>Or, if the RAM policy was <code dir="ltr">always</code> before the upgrade, change it back to <code dir="ltr">always</code>. This results in the database being reloaded. For example:</p>
<pre dir="ltr">ttAdmin -ramPolicy always upgradedb
</pre>
<p>Or, if the RAM policy is <code dir="ltr">inUse</code> and you changed the grace period to 0, change it back to its original setting. For example:</p>
<pre dir="ltr">ttAdmin -ramPolicy inUse -ramGrace 300 upgradedb
</pre></li>
<li>
<p>To restart replication (assuming <code dir="ltr">activedb</code> of an active standby pair was in the TimesTen instance being upgraded):</p>
<pre dir="ltr">ttRepAdmin -receiver -name activedb -state start standbydb
ttAdmin -repStart activedb
</pre></li>
<li>
<p>To restart TimesTen Cache (assuming <code dir="ltr">cachedb</code> uses cache and was in the TimesTen instance being upgraded):</p>
<pre dir="ltr">ttAdmin -cacheStart cachedb
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACICGFA"></a>
<div id="TTINS220" class="sect1">
<h2 class="sect1">Performing an offline upgrade</h2>
<p><a id="sthref274"></a><a id="sthref275"></a><a id="sthref276"></a>You can do an offline upgrade by exporting any database into an external file and then importing the database with the desired changes. These upgrade procedures require that all applications be disconnected from the database and that the database be unloaded from shared memory. For applications that require continuous availability, see <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a>.</p>
<p>This section covers the following topics:</p>
<ul>
<li>
<p><a href="#CIACDJDD">Moving to a different major release of TimesTen</a></p>
</li>
<li>
<p><a href="#CIAGIAJI">Moving to a different minor or patch release of TimesTen (offline upgrade)</a></p>
</li>
</ul>
<p>These procedures are for standalone TimesTen databases. Replication and TimesTen Cache scenarios are not considered here.</p>
<a id="CIACDJDD"></a>
<div id="TTINS225" class="sect2">
<h3 class="sect2">Moving to a different major release of TimesTen</h3>
<p><a id="sthref277"></a><a id="sthref278"></a>You can have multiple TimesTen major releases installed on a system at the same time. However, TimesTen databases created by one major release cannot be accessed directly by applications of a different major release. To migrate data between TimesTen major releases, for example from TimesTen 11.2.1 to 11.2.2, you must export the data using the <code dir="ltr">ttMigrate</code> utility from the old release and import it using the <code dir="ltr">ttMigrate</code> utility from the new release.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For additional information about particular scenarios where an offline upgrade is required for a major TimesTen upgrade, see <a href="#CIADGIJE">&#34;Offline upgrades for an active standby pair with cache groups&#34;</a> and <a href="#CIAIIDCI">&#34;Performing an offline TimesTen upgrade when using Oracle Clusterware&#34;</a>.</div>
<p>The general steps in an offline upgrade include the following. This procedure assumes you will install the new release while the old release is still installed, which is generally advisable until you are sure databases are correctly configured and fully operational on the new release.</p>
<p>On the old release, for each database:</p>
<ol>
<li>
<p>Disconnect all applications from the database.</p>
</li>
<li>
<p>Use <code dir="ltr">ttMigrate</code> with the <code dir="ltr">-c</code> option to save a copy of the database contents. For example:</p>
<pre dir="ltr">ttMigrateCS -c salesdata salesdata.dat
</pre></li>
<li>
<p>Unload the database from memory. For more information, see <a href="#CACHJIBD">&#34;Unloading a database from memory&#34;</a>. For an offline upgrade, stop the TimesTen daemon (<code dir="ltr">ttDaemonAdmin -stop</code>) after unloading the database from memory.</p>
</li>
<li>
<p>As necessary, use the <code dir="ltr">ttDestroy</code> utility to destroy the old database. This step is required if the new database will be in the same location as the old database.</p>
<p><span class="bold">Important</span>: It is advisable to first use <code dir="ltr">ttBackup</code> to back up the database, as a precaution. The backup can be deleted once the database is fully operational on the new release.</p>
</li>
</ol>
<p>Once the preceding steps have been completed for each database, install the new release of TimesTen. For more information, see <a href="install.htm#CBHJBDEJ">Chapter 1, &#34;TimesTen Installation&#34;</a>.</p>
<p>Then confirm that the <code dir="ltr">PATH</code> and <code dir="ltr">LD_LIBRARY_PATH</code> environment variables on your system are set appropriately to point to the new TimesTen release.</p>
<p>On the new release, do the following for each database.</p>
<ol>
<li>
<p>Confirm the <code dir="ltr">DataStore</code> connection attribute is set correctly after the upgrade.</p>
</li>
<li>
<p>Recreate the database using <code dir="ltr">AutoCreate=1</code>, such as in the following example:</p>
<pre dir="ltr">ttIsql -connstr &#34;dsn=salesdata;AutoCreate=1&#34; -e &#34;quit&#34;
</pre>
<p>The database will be empty at this point.</p>
</li>
<li>
<p>Use <code dir="ltr">ttMigrate</code> with the <code dir="ltr">-r</code> and (typically) <code dir="ltr">-relaxedUpgrade</code> options to restore the backed up database to the new TimesTen release. For example:</p>
<pre dir="ltr">ttMigrate -r -relaxedUpgrade salesdata salesdata.dat
</pre></li>
</ol>
<p>Once databases are correctly configured and fully operational on the new release, optionally uninstall the old release. Uninstallation is also covered in <a href="install.htm#CBHJBDEJ">Chapter 1, &#34;TimesTen Installation&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CIAGIAJI"></a>
<div id="TTINS359" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Moving to a different minor or patch release of TimesTen (offline upgrade)</h3>
<p><a id="sthref279"></a><a id="sthref280"></a>You can use the <code dir="ltr">ttBackup</code> and <code dir="ltr">ttRestore</code> utilities to move to a new minor or patch release within the same major release line.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>For a minor or patch upgrade, it is more typical to use an in-place upgrade or Windows equivalent, as discussed in <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>On Windows, you cannot have two different releases from the same major release (such as 11.2.2.6.0 and 11.2.2.7.0) installed simultaneously on the same system.</p>
</li>
</ul>
</div>
<p>The general steps in an offline upgrade to a new minor or patch release include the following.</p>
<p>On the old release, for each database:</p>
<ol>
<li>
<p>Disconnect all applications from the database.</p>
</li>
<li>
<p>Back up the database on the original system using <code dir="ltr">ttBackup</code>. For example:</p>
<pre dir="ltr">ttBackup -dir /tmp/dump -fname salesdata SalesData
</pre></li>
<li>
<p>Unload the database from memory. For more information, see <a href="#CACHJIBD">&#34;Unloading a database from memory&#34;</a>. For an offline upgrade, stop the TimesTen daemon (<code dir="ltr">ttDaemonAdmin -stop</code>) after unloading the database from memory.</p>
</li>
<li>
<p>As necessary, use the <code dir="ltr">ttDestroy</code> utility to destroy the old database. This step is required if the new database will be in the same location as the old database.</p>
</li>
</ol>
<p>Once the preceding steps have been completed for each database, uninstall the old release and install the new release of TimesTen. For more information, see <a href="install.htm#CBHJBDEJ">Chapter 1, &#34;TimesTen Installation&#34;</a>.</p>
<p>Then confirm that the <code dir="ltr">PATH</code> and <code dir="ltr">LD_LIBRARY_PATH</code> environment variables on your system are set appropriately to point to the new TimesTen release.</p>
<p>On the new release, for each database:</p>
<ol>
<li>
<p>Confirm the <code dir="ltr">DataStore</code> connection attribute is set correctly after the upgrade.</p>
</li>
<li>
<p>Restore the backup on the new system using <code dir="ltr">ttRestore</code>, such as in the following example.</p>
<pre dir="ltr">ttRestore -dir /tmp/dump -fname salesdata SalesData
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJCEDE"></a>
<div id="TTINS226" class="sect1">
<h2 class="sect1">Perfo<a id="sthref281"></a><a id="sthref282"></a><a id="sthref283"></a>rming an online upgrade with replication</h2>
<p><a href="#CACICGFA">&#34;Performing an offline upgrade&#34;</a> discussed how to perform various maintenance operations on TimesTen databases that require that all applications be stopped. This section describes how to use the TimesTen replication feature to perform online upgrades for applications that require continuous data availability.</p>
<p>Typically, applications that require high availability of their data use TimesTen replication to keep at least one extra copy of their databases up to date. An online upgrade works by keeping one of these two copies available to the application while the other is being upgraded. The procedures described in this section assume that you have a bidirectional replication scheme configured and running for two databases, as described in <a class="olink TTREP132" href="../TTREP/overview.htm#TTREP132">&#34;Unidirectional or bidirectional replication&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
<p>Be aware of the following:</p>
<ul>
<li>
<p>Replication functions across releases only if the database of the more recent release of TimesTen was upgraded from a database of the older release of TimesTen. A database created in the more recent release of TimesTen is not guaranteed to replicate correctly with the older release. For example, replication between a database created in a 7.0.6.<span class="italic">x.x</span> release of TimesTen and a database created in an 11.2.2.<span class="italic">x.x</span> release of TimesTen is not supported. However, if one database was created in the 7.0.6.<span class="italic">x.x</span> release, and the peer database was also created in the 7.0.6.<span class="italic">x.x</span> release and then migrated to a TimesTen 11.2.2.<span class="italic">x.x</span> release, replication between them is supported.</p>
</li>
<li>
<p>For active standby pairs, as applicable, see <a href="#CHDGDJAJ">&#34;Online upgrades for an active standby pair with no cache groups&#34;</a> and <a href="#CHDDIBJF">&#34;Online upgrades for an active standby pair with cache groups&#34;</a>. Online major upgrades for active standby pairs with cache groups are only supported for read-only cache groups. Instead see <a href="#CIADGIJE">&#34;Offline upgrades for an active standby pair with cache groups&#34;</a>.</p>
</li>
<li>
<p>For use of Oracle Clusterware, as applicable, see <a href="#CCHHFAII">&#34;Performing an online TimesTen upgrade when using Oracle Clusterware&#34;</a>. Online major upgrades are not supported for active standby pairs managed by Oracle Clusterware. Instead see <a href="#CCHHFAII">&#34;Performing an online TimesTen upgrade when using Oracle Clusterware&#34;</a>.</p>
</li>
</ul>
<p>The following sections describe how to perform an online upgrade with replication.</p>
<ul>
<li>
<p><a href="#CIAGJBIE">Procedural overview</a></p>
</li>
<li>
<p><a href="#CIACHFGI">Limitations</a></p>
</li>
<li>
<p><a href="#CIAGDIIH">Requirements</a></p>
</li>
<li>
<p><a href="#CIAHDICB">Upgrade steps</a></p>
</li>
<li>
<p><a href="#CIAEBGCB">Online upgrade example</a></p>
</li>
</ul>
<a id="CIAGJBIE"></a>
<div id="TTINS227" class="sect2">
<h3 class="sect2">Procedural overview</h3>
<p><a id="sthref284"></a>Upgrading a database from an older TimesTen release to a newer release is performed by disconnecting all applications from one of two replicated copies of a database, making a backup of the database with the <code dir="ltr">ttMigrate</code> utility from the older release, loading the backup into a newer release database using the <code dir="ltr">ttMigrate</code> utility from the newer release, and then reconnecting all applications to the database in the upgraded TimesTen instance.</p>
<p>The general steps in an online upgrade include the following.</p>
<ol>
<li>
<p>Disconnect all applications from the database in the TimesTen instance being upgraded.</p>
</li>
<li>
<p>Shut down replication in the TimesTen instance being upgraded.</p>
</li>
<li>
<p>Back up the database residing in the TimesTen instance being upgraded using the older release&#39;s <code dir="ltr">ttMigrate</code> with the <code dir="ltr">-c</code> option.</p>
</li>
<li>
<p>Install the newer release of TimesTen on the system being upgraded.</p>
</li>
<li>
<p>Restore the replicated database in the upgraded TimesTen instance using the newer release&#39;s <code dir="ltr">ttMigrate</code> with the <code dir="ltr">-r</code> option.</p>
</li>
<li>
<p>Restart replication on the upgraded TimesTen instance.</p>
</li>
<li>
<p>Reconnect all applications to the database in the upgraded TimesTen instance.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
After <code dir="ltr">ttMigrate</code> has been used, all autorefresh cache groups in post-upgrade database that is not part of an active standby pair have <code dir="ltr">AUTOREFRESH STATE</code> set to <code dir="ltr">OFF</code>, no matter how it was set on the database before the upgrade. Reset <code dir="ltr">AUTOREFRESH STATE</code> to <code dir="ltr">ON</code> by using the <code dir="ltr">ALTER CACHE GROUP</code> statement.</div>
<p>To maintain continuous availability, applications continue to run on one copy of the database while the upgrade is performed on the TimesTen instance of the disconnected copy of the database. TimesTen replication retains updates made to the active copy of the database during the upgrade period, and then transfers and applies the updates to the post-upgrade database when replication is restarted. When the replicated updates have been completely applied, the applications may be reconnected to the post-upgrade database.</p>
</div>
<!-- class="sect2" -->
<a id="CIACHFGI"></a>
<div id="TTINS228" class="sect2">
<h3 class="sect2">Limitations</h3>
<p><a id="sthref285"></a><a id="sthref286"></a>Online upgrades can be performed only with databases for which all the user tables meet the replication requirements. All the user tables must contain either a <code dir="ltr">PRIMARY KEY</code> declaration or have a unique index declared over non-nullable columns.</p>
</div>
<!-- class="sect2" -->
<a id="CIAGDIIH"></a>
<div id="TTINS229" class="sect2">
<h3 class="sect2">Requirements</h3>
<p>To perform online upgrades with replication, replication must be configured to use static ports. See <a class="olink TTREP203" href="../TTREP/attrib.htm#TTREP203">&#34;Port assignments&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
<p>If you are performing an online upgrade on a single system where a bidirectional replication configuration does not exist, you must ensure that enough memory and disk space are available to support two copies of the database where the upgrade is being performed. Both the original database and its copy remain active for the duration of the upgrade. To maintain the performance of your production applications, you may want to create the copy of the database on a second system.</p>
<p>Additional disk space must be allocated to hold a backup copy of the database made by the <code dir="ltr">ttMigrate</code> utility. The size of the backup copy is typically about the same as the in-use size of the database. This size may be determined by querying the <code dir="ltr">sys.monitor</code> table, using <code dir="ltr">ttIsql</code> as follows.</p>
<pre dir="ltr">Command&gt; SELECT perm_in_use_size FROM sys.monitor;
</pre></div>
<!-- class="sect2" -->
<a id="CIAHDICB"></a>
<div id="TTINS341" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Upgrade steps</h3>
<p>The following timeline illustrates the steps for performing an online upgrade while replication is running. The <span class="italic">upgrade</span> system is the system on which the database upgrade is being performed, and the <span class="italic">active</span> system is the system containing the database to which the application remains connected.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following steps are for a standard upgrade. Upgrading from a database in TimesTen 11.2.1 that has the connection attribute <code dir="ltr">ReplicationApplyOrdering</code> set to <code dir="ltr">0</code>, or from a database in TimesTen 11.2.1 or TimesTen 11.2.2 that has <code dir="ltr">ReplicationParallelism</code> set to <code dir="ltr">&lt;2</code>, requires that you re-create the database, even if the releases are from the same major release line.</div>
<div class="inftblhruleinformal">
<table class="cellalignment5031" title="Upgrade example" summary="This table shows the steps for performing an online upgrade while replication is running." dir="ltr">
<thead>
<tr class="cellalignment5025">
<th class="cellalignment5032" id="r1c1-t18">Step</th>
<th class="cellalignment5032" id="r1c2-t18">Upgrade system</th>
<th class="cellalignment5032" id="r1c3-t18">Active system</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r2c1-t18" headers="r1c1-t18">1.</td>
<td class="cellalignment5033" headers="r2c1-t18 r1c2-t18">Configure replication to replicate to the active system using static ports.</td>
<td class="cellalignment5033" headers="r2c1-t18 r1c3-t18">Configure replication to replicate to the upgrade system using static ports.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r3c1-t18" headers="r1c1-t18">2.</td>
<td class="cellalignment5033" headers="r3c1-t18 r1c2-t18">&nbsp;</td>
<td class="cellalignment5033" headers="r3c1-t18 r1c3-t18">Connect all applications to the active database, if they are not connected.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r4c1-t18" headers="r1c1-t18">3.</td>
<td class="cellalignment5033" headers="r4c1-t18 r1c2-t18">Disconnect all applications from the upgrade database.</td>
<td class="cellalignment5033" headers="r4c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r5c1-t18" headers="r1c1-t18">4.</td>
<td class="cellalignment5033" headers="r5c1-t18 r1c2-t18">&nbsp;</td>
<td class="cellalignment5033" headers="r5c1-t18 r1c3-t18">Set replication to the upgrade system to the <code dir="ltr">PAUSE</code> state.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r6c1-t18" headers="r1c1-t18">5.</td>
<td class="cellalignment5033" headers="r6c1-t18 r1c2-t18">Wait for updates to propagate to the active system.</td>
<td class="cellalignment5033" headers="r6c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r7c1-t18" headers="r1c1-t18"><a id="CACJIDIE"></a>6.</td>
<td class="cellalignment5033" headers="r7c1-t18 r1c2-t18">Stop replication.</td>
<td class="cellalignment5033" headers="r7c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r8c1-t18" headers="r1c1-t18">7.</td>
<td class="cellalignment5033" headers="r8c1-t18 r1c2-t18">Back up the database with <code dir="ltr">ttMigrate -c</code>.</td>
<td class="cellalignment5033" headers="r8c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r9c1-t18" headers="r1c1-t18">8.</td>
<td class="cellalignment5033" headers="r9c1-t18 r1c2-t18">Stop the TimesTen daemon for the old release of TimesTen.</td>
<td class="cellalignment5033" headers="r9c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r10c1-t18" headers="r1c1-t18">9.</td>
<td class="cellalignment5033" headers="r10c1-t18 r1c2-t18">Install the new release of TimesTen.</td>
<td class="cellalignment5033" headers="r10c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r11c1-t18" headers="r1c1-t18">10.</td>
<td class="cellalignment5033" headers="r11c1-t18 r1c2-t18">Create a DSN for the post-upgrade database for the new TimesTen release, using the ODBC Data Source Administrator on Windows or the <code dir="ltr">.odbc.ini</code> file on UNIX. Adjust parallelism options for the DSN.</td>
<td class="cellalignment5033" headers="r11c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r12c1-t18" headers="r1c1-t18">11.</td>
<td class="cellalignment5033" headers="r12c1-t18 r1c2-t18">Restore the database from the backup with <code dir="ltr">ttMigrate -r</code>.</td>
<td class="cellalignment5033" headers="r12c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r13c1-t18" headers="r1c1-t18">12.</td>
<td class="cellalignment5033" headers="r13c1-t18 r1c2-t18">Clear the replication bookmark and logs using <code dir="ltr">ttRepAdmin -receiver -reset</code> and by setting replication to the active system to the <code dir="ltr">stop</code> and then the <code dir="ltr">start</code> state.</td>
<td class="cellalignment5033" headers="r13c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r14c1-t18" headers="r1c1-t18">13.</td>
<td class="cellalignment5033" headers="r14c1-t18 r1c2-t18">Start replication.</td>
<td class="cellalignment5033" headers="r14c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r15c1-t18" headers="r1c1-t18">14.</td>
<td class="cellalignment5033" headers="r15c1-t18 r1c2-t18">&nbsp;</td>
<td class="cellalignment5033" headers="r15c1-t18 r1c3-t18">Set replication to the upgrade system to the <code dir="ltr">start</code> state, ensuring that the accumulated updates propagate once replication is restarted.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r16c1-t18" headers="r1c1-t18">15.</td>
<td class="cellalignment5033" headers="r16c1-t18 r1c2-t18">&nbsp;</td>
<td class="cellalignment5033" headers="r16c1-t18 r1c3-t18">Start replication.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r17c1-t18" headers="r1c1-t18">16.</td>
<td class="cellalignment5033" headers="r17c1-t18 r1c2-t18">&nbsp;</td>
<td class="cellalignment5033" headers="r17c1-t18 r1c3-t18">Wait for all of the updates to propagate to the upgrade system.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r18c1-t18" headers="r1c1-t18">17.</td>
<td class="cellalignment5033" headers="r18c1-t18 r1c2-t18">Reconnect all applications to the post-upgrade database.</td>
<td class="cellalignment5033" headers="r18c1-t18 r1c3-t18">&nbsp;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>After the above procedures are carried out on the upgrade system, the active system can be upgraded using the same steps.</p>
</div>
<!-- class="sect2" -->
<a id="CIAEBGCB"></a>
<div id="TTINS230" class="sect2">
<h3 class="sect2">Online upgrade example</h3>
<p>This section describes how to perform an online upgrade in a scenario with two bidirectionally replicated TimesTen databases, using a specific example.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
TimesTen 11.2.1 introduced the cache grid feature. By default, this feature is enabled, and requires additional configuration before cache groups may be created on a database. If you are upgrading an environment containing cache groups from a release preceding 11.2.1, you should set the <code dir="ltr">CacheGridEnable</code> attribute to <code dir="ltr">0</code> in each DSN definition before beginning. For more information, see <a class="olink TTCAC192" href="../TTCAC/prereqs.htm#TTCAC192">&#34;Create a cache grid&#34;</a> in <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span>.</div>
<p>In the following discussion, the two TimesTen systems are referred to as the <span class="italic">upgrade</span> system, on which the TimesTen instance (with its databases) is being upgraded, and the <span class="italic">active</span> system, which remains operational and connected to the application for the duration of the upgrade. After the procedure is completed, the same steps can be followed to upgrade the active system. However, you may prefer to delay conversion of the active system to first test the upgraded TimesTen instance.</p>
<p>The upgrade system in this example consists of the database <code dir="ltr">upgrade</code> on the server <code dir="ltr">upgradehost</code>. The active system consists of the database <code dir="ltr">active</code> on the server <code dir="ltr">activehost</code>.</p>
<p>Follow the steps listed here in the order they are presented. The online upgrade procedures are as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment5031" title="Upgrade example" summary="This table shows the steps for an online upgrade." dir="ltr">
<thead>
<tr class="cellalignment5025">
<th class="cellalignment5032" id="r1c1-t20">Step</th>
<th class="cellalignment5032" id="r1c2-t20">Upgrade system</th>
<th class="cellalignment5032" id="r1c3-t20">Active system</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r2c1-t20" headers="r1c1-t20">1.</td>
<td class="cellalignment5033" headers="r2c1-t20 r1c2-t20">Use <code dir="ltr">ttIsql</code> to alter the replication scheme <code dir="ltr">repscheme</code>, setting static replication port numbers so that the databases can communicate across releases:
<p><code dir="ltr">Command&gt; call ttRepStop;</code></p>
<p><code dir="ltr">Command&gt; ALTER REPLICATION repscheme ALTER STORE upgrade ON upgradehost SET PORT 40000 ALTER STORE active ON activehost SET PORT 40001;</code></p>
<p><code dir="ltr">Command&gt; call ttRepStart;</code></p>
</td>
<td class="cellalignment5033" headers="r2c1-t20 r1c3-t20">Use <code dir="ltr">ttIsql</code> to alter the replication scheme <code dir="ltr">repscheme</code>, setting static replication port numbers so that the databases can communicate across releases:
<p><code dir="ltr">Command&gt; call ttRepStop;</code></p>
<p><code dir="ltr">Command&gt; ALTER REPLICATION repscheme ALTER STORE upgrade ON upgradehost SET PORT 40000 ALTER STORE active ON activehost SET PORT 40001;</code></p>
<p><code dir="ltr">Command&gt; call ttRepStart;</code></p>
</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r3c1-t20" headers="r1c1-t20">2.</td>
<td class="cellalignment5033" headers="r3c1-t20 r1c2-t20">Disconnect all production applications connected to the database. Any workload being run on the upgrade system must start running on the active system instead.</td>
<td class="cellalignment5033" headers="r3c1-t20 r1c3-t20">Use the <code dir="ltr">ttRepAdmin</code> utility to pause replication from the database <code dir="ltr">active</code> to the database <code dir="ltr">upgrade</code>:
<pre dir="ltr">ttRepAdmin -receiver -name upgrade
 -state pause active
</pre>
<p>This command temporarily stops the replication of updates from the database <code dir="ltr">active</code> to the database <code dir="ltr">upgrade</code>, but it retains any updates made to <code dir="ltr">active</code> in the database transaction log files. The updates made to <code dir="ltr">active</code> during the upgrade procedure are applied later, when <code dir="ltr">upgrade</code> is brought back up. For details on setting the replication state, see <a class="olink TTREP436" href="../TTREP/setup.htm#TTREP436">&#34;Setting the replication state of subscribers&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r4c1-t20" headers="r1c1-t20">3.</td>
<td class="cellalignment5033" headers="r4c1-t20 r1c2-t20">Wait for all replication updates to be sent to the database <code dir="ltr">active</code>. You can verify that all updates have been sent by applying a recognizable update to a table reserved for that purpose on the database <code dir="ltr">upgrade</code>. When the update appears in the database <code dir="ltr">active</code>, you know that all previous updates have been sent.</td>
<td class="cellalignment5033" headers="r4c1-t20 r1c3-t20">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r5c1-t20" headers="r1c1-t20">4.</td>
<td class="cellalignment5033" headers="r5c1-t20 r1c2-t20">Stop the replication agent with <code dir="ltr">ttAdmin</code>:
<pre dir="ltr">ttAdmin -repStop upgrade
</pre>
<p>From this point on, no updates are sent to the database <code dir="ltr">active</code>.</p>
</td>
<td class="cellalignment5033" headers="r5c1-t20 r1c3-t20">Stop the replication agent with <code dir="ltr">ttAdmin</code>:
<pre dir="ltr">ttAdmin -repStop active
</pre>
<p>From this point on, no updates are sent to the database <code dir="ltr">upgrade</code>.</p>
<p>For details on starting and stopping replication agents, see <a class="olink TTREP428" href="../TTREP/setup.htm#TTREP428">&#34;Starting and stopping the replication agents&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r6c1-t20" headers="r1c1-t20">5.</td>
<td class="cellalignment5033" headers="r6c1-t20 r1c2-t20">Use <code dir="ltr">ttRepAdmin</code> to stop replication from the database <code dir="ltr">upgrade</code> to the database <code dir="ltr">active</code>:
<pre dir="ltr">ttRepAdmin -receiver -name active
  -state stop upgrade
</pre>
<p>This step prevents <code dir="ltr">active</code> from accumulating updates to send to <code dir="ltr">upgrade</code> and resets some replication bookmarks.</p>
</td>
<td class="cellalignment5033" headers="r6c1-t20 r1c3-t20">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r7c1-t20" headers="r1c1-t20"><a id="CACCDCGB"></a>6.</td>
<td class="cellalignment5033" headers="r7c1-t20 r1c2-t20">Use <code dir="ltr">ttMigrate</code> to back up the database <code dir="ltr">upgrade</code>. If the database is very large, this step could take a significant amount of time. If sufficient disk space is free on the <code dir="ltr">/backup</code> file system, use the following <code dir="ltr">ttMigrate</code> command:
<pre dir="ltr">ttMigrate -c upgrade /backup/upgrade.dat
</pre></td>
<td class="cellalignment5033" headers="r7c1-t20 r1c3-t20">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r8c1-t20" headers="r1c1-t20">7.</td>
<td class="cellalignment5033" headers="r8c1-t20 r1c2-t20">If the <code dir="ltr">ttMigrate</code> command is successful, destroy the database <code dir="ltr">upgrade</code>.
<p>To destroy a permanent database (<code dir="ltr">Temporary=0</code>), use <code dir="ltr">ttDestroy</code>:</p>
<pre dir="ltr">ttDestroy upgrade
</pre>
<p>To destroy a temporary database (<code dir="ltr">Temporary=1</code>), use <code dir="ltr">ttAdmin</code>:</p>
<pre dir="ltr">ttAdmin -ramUnload upgrade
</pre></td>
<td class="cellalignment5033" headers="r8c1-t20 r1c3-t20">Restart the replication agent on the database <code dir="ltr">active</code>:
<pre dir="ltr">ttAdmin -repStart active
</pre></td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r9c1-t20" headers="r1c1-t20">8.</td>
<td class="cellalignment5033" headers="r9c1-t20 r1c2-t20">Install the new release of TimesTen.</td>
<td class="cellalignment5033" headers="r9c1-t20 r1c3-t20">Resume replication from <code dir="ltr">active</code> to <code dir="ltr">upgrade</code> by setting the replication state to <code dir="ltr">start</code>:
<pre dir="ltr">ttRepAdmin -receiver -name upgrade
 -start start active
</pre></td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r10c1-t20" headers="r1c1-t20">9.</td>
<td class="cellalignment5033" headers="r10c1-t20 r1c2-t20">Use <code dir="ltr">ttMigrate</code> to load the backup created in step <a href="#CACCDCGB">6.</a> into the database <code dir="ltr">upgrade</code> for the new release of TimesTen:
<pre dir="ltr">ttMigrate -r upgrade /backup/upgrade.dat
</pre>
<p>If the database is temporary (<code dir="ltr">Temporary=1</code>), first use <code dir="ltr">ttAdmin -ramLoad</code>:</p>
<pre dir="ltr">ttAdmin -ramLoad upgrade
</pre>
<p><span class="bold">Note</span>: In this step, you must use the <code dir="ltr">ttMigrate</code> utility supplied with the new release of TimesTen to which you are upgrading.</p>
</td>
<td class="cellalignment5033" headers="r10c1-t20 r1c3-t20">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r11c1-t20" headers="r1c1-t20">10.</td>
<td class="cellalignment5033" headers="r11c1-t20 r1c2-t20">Use <code dir="ltr">ttRepAdmin</code> to clear the replication bookmark and logs by resetting the receiver state for the database <code dir="ltr">active</code> and then setting replication to the <code dir="ltr">stop</code> state and then the <code dir="ltr">start</code> state:
<pre dir="ltr">ttRepAdmin -receiver -name active
   -reset upgrade
ttRepAdmin -receiver -name active
   -state stop upgrade
sleep 10
ttRepAdmin -receiver -name active
   -state start upgrade
sleep 10
</pre>
<p><span class="bold">Note</span>: The <code dir="ltr">sleep</code> command is to ensure that each state takes effect, as the state change can take up to 10 seconds depending on the resources and operating system of the computer.</p>
</td>
<td class="cellalignment5033" headers="r11c1-t20 r1c3-t20">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r12c1-t20" headers="r1c1-t20">11.</td>
<td class="cellalignment5033" headers="r12c1-t20 r1c2-t20">Use <code dir="ltr">ttAdmin</code> to start the replication agent on the new database <code dir="ltr">upgrade</code> and to begin sending updates to the database <code dir="ltr">active</code>:
<pre dir="ltr">ttAdmin -repStart upgrade
</pre></td>
<td class="cellalignment5033" headers="r12c1-t20 r1c3-t20">&nbsp;</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r13c1-t20" headers="r1c1-t20">12.</td>
<td class="cellalignment5033" headers="r13c1-t20 r1c2-t20">Verify that the database <code dir="ltr">upgrade</code> is receiving updates from the database <code dir="ltr">active</code>. You can verify that updates are sent by applying a recognizable update to a table reserved for that purpose in the database <code dir="ltr">active</code>. When the update appears in <code dir="ltr">upgrade</code>, you know that replication is operational.</td>
<td class="cellalignment5033" headers="r13c1-t20 r1c3-t20">If the applications are still running on the database <code dir="ltr">active</code>, let them continue until the database <code dir="ltr">upgrade</code> has been successfully migrated and you have verified that the updates are being replicated correctly from <code dir="ltr">active</code> to <code dir="ltr">upgrade</code>.</td>
</tr>
<tr class="cellalignment5025">
<td class="cellalignment5033" id="r14c1-t20" headers="r1c1-t20">13.</td>
<td class="cellalignment5033" headers="r14c1-t20 r1c2-t20">&nbsp;</td>
<td class="cellalignment5033" headers="r14c1-t20 r1c3-t20">Once you are sure that updates are replicated correctly, you can disconnect all of the applications from the database <code dir="ltr">active</code> and reconnect them to the database <code dir="ltr">upgrade</code>. After verifying that the last of the updates from <code dir="ltr">active</code> are replicated to <code dir="ltr">upgrade</code>, the TimesTen instance with <code dir="ltr">active</code> is ready to be upgraded.
<p><span class="bold">Note</span>: You may choose to delay upgrading the TimesTen instance with <code dir="ltr">active</code> to the new TimesTen release until sufficient testing has been performed with the database <code dir="ltr">upgrade</code> in the new TimesTen release.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDDADAE"></a>
<div id="TTINS231" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Per<a id="sthref287"></a><a id="sthref288"></a><a id="sthref289"></a>forming an upgrade with active standby pair replication</h2>
<p>Active standby pair replication provides high availability of your data to your applications. With active standby pairs, unless you want to perform an upgrade to a new major release of TimesTen in a configuration that also uses asynchronous writethrough cache groups, you can perform an online upgrade to maintain continuous availability of your data during an upgrade of TimesTen. This section describes the following procedures:</p>
<ul>
<li>
<p><a href="#CHDGDJAJ">Online upgrades for an active standby pair with no cache groups</a></p>
</li>
<li>
<p><a href="#CHDDIBJF">Online upgrades for an active standby pair with cache groups</a></p>
</li>
<li>
<p><a href="#CIADGIJE">Offline upgrades for an active standby pair with cache groups</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Only asynchronous writethrough or read-only cache groups are supported with active standby pairs.</div>
<a id="CHDGDJAJ"></a>
<div id="TTINS232" class="sect2">
<h3 class="sect2">Online upgrades for an active standby pair with no cache groups</h3>
<p>This section includes the following topics for online upgrades in a scenario with active standby pairs and no cache groups:</p>
<ul>
<li>
<p><a href="#CHDGEDCE">Online minor upgrade for standby master and subscriber</a></p>
</li>
<li>
<p><a href="#CHDGGJFF">Online minor upgrade for active master</a></p>
</li>
<li>
<p><a href="#CHDHBCIF">Online major upgrade for active standby pair</a></p>
</li>
</ul>
<p>Also see <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a> for an overview, limitations, and requirements.</p>
<a id="CHDGEDCE"></a>
<div id="TTINS233" class="sect3">
<h4 class="sect3">Online min<a id="sthref290"></a>or upgrade for standby master and subscriber</h4>
<p>To perform an online minor upgrade to a new TimesTen patch release for the standby master database and subscriber databases, complete the following tasks on each database. For this procedure, assume there are no cache groups.</p>
<ol>
<li>
<p>Stop the replication agent on the database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent for standby database <code dir="ltr">master2</code>, you may use:</p>
<pre dir="ltr">ttAdmin -repStop master2
</pre></li>
<li>
<p>Install the new TimesTen patch release. See <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>Restart the replication agent using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -repStart master2
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CHDGGJFF"></a>
<div id="TTINS234" class="sect3">
<h4 class="sect3">Online min<a id="sthref291"></a>or upgrade for active master</h4>
<p>To perform an online minor upgrade to a new TimesTen patch release for the active master database, you must first reverse the roles of the active and standby master databases, then perform an in-place upgrade. For this procedure, assume there are no cache groups.</p>
<ol>
<li id="CHDBJDBC">
<p>Pause any applications that are generating updates on the active master database.</p>
</li>
<li>
<p>Execute the <code dir="ltr">ttRepSubscriberWait</code> built-in procedure on the active master database, using the DSN and host of the standby master database. For example, to ensure that all transactions are replicated to the standby master <code dir="ltr">master2</code> on the host <code dir="ltr">master2host</code>:</p>
<pre dir="ltr">call ttRepSubscriberWait( null, null, &#39;master2&#39;, &#39;master2host&#39;, 120 );
</pre></li>
<li>
<p>Stop the replication agent on the current active master database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent for the active master database <code dir="ltr">master1</code>:</p>
<pre dir="ltr">ttAdmin -repStop master1
</pre></li>
<li>
<p>Execute the <code dir="ltr">ttRepDeactivate</code> build-in procedure on the current active master database. This puts the database in the <code dir="ltr">IDLE</code> state:</p>
<pre dir="ltr">call ttRepDeactivate;
</pre></li>
<li>
<p>On the standby master database, set the database to the <code dir="ltr">ACTIVE</code> state using the <code dir="ltr">ttRepStateSet</code> built-in procedure. This database becomes the active master in the active standby pair:</p>
<pre dir="ltr">call ttRepStateSet( &#39;ACTIVE&#39; );
</pre></li>
<li id="CHDCBJJH">
<p>Resume any applications that were paused in step <a href="#CHDBJDBC">1</a>, connecting them to the database that is now acting as the active master (in this example, database <code dir="ltr">master2</code>).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
At this point, replication will not yet occur from the new active database to subscriber databases. Replication will resume after the host for the new standby database has been upgraded and the replication agent of the new standby database is running.</div>
</li>
<li>
<p>Upgrade the TimesTen instance of the former active master database, which is now the standby master database. See <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>Restart replication on the database in the upgraded TimesTen instance, using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -repStart master2
</pre></li>
<li>
<p>To make the database in the newly upgraded TimesTen instance the active master database again, see <a class="olink TTREP224" href="../TTREP/standby.htm#TTREP224">&#34;Reversing the roles of the active and standby databases&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CHDHBCIF"></a>
<div id="TTINS235" class="sect3">
<h4 class="sect3">Online ma<a id="sthref292"></a>jor upgrade for active standby pair</h4>
<p>When you perform an online upgrade for an active standby pair to a new major release of TimesTen, you must explicitly specify the TCP/IP port for each database. If your active standby pair replication scheme is not configured with a <code dir="ltr">PORT</code> attribute for each database, you must use the following steps to prepare for the upgrade. For this procedure, assume there are no cache groups. (Online major upgrades for active standby pairs with cache groups are only supported for read-only cache groups.)</p>
<ol>
<li>
<p>Stop the replication agent on every database using the call <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent on the database <code dir="ltr">master1</code>:</p>
<pre dir="ltr">ttAdmin -repStop master1
</pre></li>
<li>
<p>On the active master database, use the <code dir="ltr">ALTER ACTIVE STANDBY PAIR</code> statement to specify a <code dir="ltr">PORT</code> attribute for every database in the active standby pair. For example, to set a <code dir="ltr">PORT</code> attribute for the databases <code dir="ltr">master1</code> on the host <code dir="ltr">master1host</code>, <code dir="ltr">master2</code> on the host <code dir="ltr">master2host</code>, and <code dir="ltr">subscriber1</code> on the host <code dir="ltr">subscriber1host</code>:</p>
<pre dir="ltr">ALTER ACTIVE STANDBY PAIR
 ALTER STORE master1 ON &#34;master1host&#34; SET PORT 30000
 ALTER STORE master2 ON &#34;master2host&#34; SET PORT 30001
 ALTER STORE subscriber1 ON &#34;subscriber1host&#34; SET PORT 30002;
</pre></li>
<li>
<p>Destroy the standby master database and all of the subscribers using the <code dir="ltr">ttDestroy</code> utility. For example, to destroy the database <code dir="ltr">subscriber1</code>:</p>
<pre dir="ltr">ttDestroy subscriber1
</pre></li>
<li>
<p>Follow the normal procedure to start an active standby pair and duplicate the standby and subscriber databases from the active master. See <a class="olink TTREP213" href="../TTREP/standby.htm#TTREP213">&#34;Setting up an active standby pair with no cache groups&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</li>
</ol>
<p>To upgrade the TimesTen instances of the active standby pair, first upgrade the instance of the standby master. While this node is being upgraded, there is no standby master database, so updates on the active master database are propagated directly to the subscriber databases. Following the upgrade of the standby node, the active and standby roles are switched and the new standby node is created from the new active node. Finally, the subscriber nodes are upgraded.</p>
<ol>
<li>
<p>Instruct the active master database to stop replicating updates to the standby master by executing the <code dir="ltr">ttRepStateSave</code> built-in procedure on the active master database. For example, to stop replication to the standby master database <code dir="ltr">master2</code> on host <code dir="ltr">master2host</code>:</p>
<pre dir="ltr">call ttRepStateSave( &#39;FAILED&#39;, &#39;master2&#39;, &#39;master2host&#39; );
</pre></li>
<li>
<p>Stop the replication agent on the standby master database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. The following example stops the replication agent for the standby master database <code dir="ltr">master2</code>.</p>
<pre dir="ltr">ttAdmin -repStop master2
</pre></li>
<li>
<p>Use the <code dir="ltr">ttMigrate</code> utility to back up the standby master database to a binary file.</p>
<pre dir="ltr">ttMigrate -c master2 master2.bak
</pre>
<p>For information about <a class="olink TTREF343" href="../TTREF/util.htm#TTREF343"><code dir="ltr">ttMigrate</code></a>, refer to <span class="italic">Oracle TimesTen In-Memory Database Reference</span></p>
</li>
<li>
<p>Destroy the standby master database, using the <code dir="ltr">ttDestroy</code> utility.</p>
<pre dir="ltr">ttDestroy master2
</pre></li>
<li>
<p>Uninstall the old release and install the new release of TimesTen on the standby master host, <code dir="ltr">master2host</code>. See <a href="install.htm#CBHGDDAH">&#34;Installing TimesTen on UNIX systems&#34;</a> or <a href="install.htm#CIHGJHII">&#34;Installing TimesTen on Windows systems&#34;</a>.</p>
</li>
<li>
<p>In the new TimesTen instance on <code dir="ltr">master2host</code>, use <code dir="ltr">ttMigrate</code> to restore the standby master database from the binary file created earlier. (This example performs a checkpoint operation after every 20 megabytes of data has been restored.)</p>
<pre dir="ltr">ttMigrate -r -C 20 master2 master2.bak
</pre></li>
<li>
<p>Start the replication agent on the standby master database using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility.</p>
<pre dir="ltr">ttAdmin -repStart master2
</pre>
<p>When the standby master database in the upgraded TimesTen instance has become synchronized with the active master database, this standby master database moves from the <code dir="ltr">RECOVERING</code> state to the <code dir="ltr">STANDBY</code> state. The standby master database also starts sending updates to the subscribers. You can determine when the standby master database is in the <code dir="ltr">STANDBY</code> state by calling the <code dir="ltr">ttRepStateGet</code> built-in procedure.</p>
<pre dir="ltr">call ttRepStateGet;
</pre></li>
<li>
<p>Pause any applications that are generating updates on the active master database.</p>
</li>
<li>
<p>Execute the <code dir="ltr">ttRepSubscriberWait</code> built-in procedure on the active master database, using the DSN and host of the standby master database. For example, to ensure that all transactions are replicated to the standby master <code dir="ltr">master2</code> on the host <code dir="ltr">master2host</code>:</p>
<pre dir="ltr">call ttRepSubscriberWait( null, null, &#39;master2&#39;, &#39;master2host&#39;, 120 );
</pre></li>
<li>
<p>Stop the replication agent on the active master database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent for the active master database <code dir="ltr">master1</code>:</p>
<pre dir="ltr">ttAdmin -repStop master1
</pre></li>
<li>
<p>On the standby master database, set the database to the <code dir="ltr">ACTIVE</code> state using the <code dir="ltr">ttRepStateSet</code> built-in procedure. This database becomes the active master in the active standby pair.</p>
<pre dir="ltr">call ttRepStateSet( &#39;ACTIVE&#39; );
</pre></li>
<li>
<p>Instruct the new active master database (<code dir="ltr">master2</code>, in our example) to stop replicating updates to what is now the standby master (<code dir="ltr">master1</code>) by executing the <code dir="ltr">ttRepStateSave</code> built-in procedure on the active master database. For example, to stop replication to the standby master database <code dir="ltr">master1</code> on host <code dir="ltr">master1host</code>:</p>
<pre dir="ltr">call ttRepStateSave( &#39;FAILED&#39;, &#39;master1&#39;, &#39;master1host&#39; );
</pre></li>
<li>
<p>Destroy the former active master database, using the <code dir="ltr">ttDestroy</code> utility.</p>
<pre dir="ltr">ttDestroy master1
</pre></li>
<li>
<p>Uninstall the old release and install the new release of TimesTen on <code dir="ltr">master1host</code>.</p>
</li>
<li>
<p>If you are upgrading from a TimesTen release earlier than 11.2.1, when access control was introduced, you must create a user with <code dir="ltr">ADMIN</code> privileges on the new active master database to duplicate that database. (If you are upgrading from 11.2.1 or higher, you can presumably use an <code dir="ltr">ADMIN</code> user that was migrated over by <code dir="ltr">ttMigrate</code>.) For example, to create the user <code dir="ltr">pat</code> with the password <code dir="ltr">patpwd</code> on the standby master database:</p>
<pre dir="ltr">CREATE USER pat IDENTIFIED BY patpwd;
GRANT ADMIN TO pat;
</pre></li>
<li>
<p>Create a new standby master database by duplicating the new active master database, using the <code dir="ltr">ttRepAdmin</code> utility. For example, to duplicate the database <code dir="ltr">master2</code> on the host <code dir="ltr">master2host</code> to the database <code dir="ltr">master1</code>, use the following on the host containing the database <code dir="ltr">master1</code>:</p>
<pre dir="ltr">ttRepAdmin -duplicate -from master2 -host master2host -uid pat -pwd patpwd
 -setMasterRepStart master1
</pre></li>
<li>
<p>Start the replication agent on the new standby master database using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility.</p>
<pre dir="ltr">ttAdmin -repStart master1
</pre></li>
<li id="CHDEABID">
<p>Stop the replication agent on the first subscriber database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent for the subscriber database <code dir="ltr">subscriber1</code>:</p>
<pre dir="ltr">ttAdmin -repStop subscriber1
</pre></li>
<li>
<p>Destroy the subscriber database using the <code dir="ltr">ttDestroy</code> utility.</p>
<pre dir="ltr">ttDestroy subscriber1
</pre></li>
<li>
<p>Uninstall the old release and install the new release of TimesTen on the subscriber host.</p>
</li>
<li>
<p>Create the subscriber database by duplicating the new standby master database, using the <code dir="ltr">ttRepAdmin</code> utility, as follows.</p>
<pre dir="ltr">ttRepAdmin -duplicate -from master1 -host master1host -uid pat -pwd patpwd
 -setMasterRepStart subscriber1
</pre></li>
<li id="CHDFFIBH">
<p>Start the replication agent for the duplicated subscriber database using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility.</p>
<pre dir="ltr">ttAdmin -repStart subscriber1
</pre></li>
<li>
<p>Repeat step <a href="#CHDEABID">18</a> through step <a href="#CHDFFIBH">22</a> for each other subscriber database.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDDIBJF"></a>
<div id="TTINS236" class="sect2">
<h3 class="sect2">Online upgrades for an active standby pair with cache groups</h3>
<p>This section includes the following topics for online minor upgrades in a scenario with active standby pairs and cache groups:</p>
<ul>
<li>
<p><a href="#CHDFFCEA">Online minor upgrade for standby master and subscriber (cache groups)</a></p>
</li>
<li>
<p><a href="#CHDIIGFB">Online minor upgrade for active master (cache groups)</a></p>
</li>
<li>
<p><a href="#CIAIHDDE">Online major upgrade for active standby pair (read-only cache groups)</a></p>
</li>
</ul>
<p>Also see <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a> for an overview, limitations, and requirements.</p>
<a id="CHDFFCEA"></a>
<div id="TTINS237" class="sect3">
<h4 class="sect3">Online min<a id="sthref293"></a>or upgrade for standby master and subscriber (cache groups)</h4>
<p>To perform an online minor upgrade to a new TimesTen patch release for the standby master database and subscriber databases, in a configuration with cache groups, complete the following tasks on each database (with exceptions noted).</p>
<ol>
<li>
<p>Stop the replication agent on the database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent for standby database <code dir="ltr">master2</code>:</p>
<pre dir="ltr">ttAdmin -repStop master2
</pre></li>
<li>
<p><a id="sthref294"></a>Stop the cache agent on the standby database using the <code dir="ltr">ttCacheStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -cacheStop master2
</pre></li>
<li>
<p>Install the TimesTen patch. See <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>Restart the cache agent on the standby database using the <code dir="ltr">ttCacheStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -cacheStart master2
</pre></li>
<li>
<p>Restart the replication agent using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -repStart master2
</pre></li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
Steps 2 and 4, stopping and restarting the cache agent, are not applicable for subscriber databases.</div>
</div>
<!-- class="sect3" -->
<a id="CHDIIGFB"></a>
<div id="TTINS238" class="sect3">
<h4 class="sect3">Online mi<a id="sthref295"></a>nor upgrade for active master (cache groups)</h4>
<p>To perform an online minor upgrade to a new TimesTen patch release for the active master database, in a configuration with cache groups, perform the following steps. You must first reverse the roles of the active and standby master databases, then perform an in-place upgrade.</p>
<ol>
<li>
<p>Pause any applications that are generating updates on the active master database.</p>
</li>
<li>
<p>Execute the <code dir="ltr">ttRepSubscriberWait</code> built-in procedure on the active master database, using the DSN and host of the standby master database. For example, to ensure that all transactions are replicated to the standby master <code dir="ltr">master2</code> on the host <code dir="ltr">master2host</code>:</p>
<pre dir="ltr">call ttRepSubscriberWait( null, null, &#39;master2&#39;, &#39;master2host&#39;, 120 );
</pre></li>
<li>
<p>Stop the replication agent on the current active master database using the <code dir="ltr">ttRepStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility. For example, to stop the replication agent for the active master database <code dir="ltr">master1</code>:</p>
<pre dir="ltr">ttAdmin -repStop master1
</pre></li>
<li>
<p>Stop the cache agent on the current active master database using the <code dir="ltr">ttCacheStop</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -cacheStop master1
</pre></li>
<li>
<p>Execute the <code dir="ltr">ttRepDeactivate</code> build-in procedure on the current active master database. This puts the database in the <code dir="ltr">IDLE</code> state:</p>
<pre dir="ltr">call ttRepDeactivate;
</pre></li>
<li>
<p>On the standby master database, set the database to the <code dir="ltr">ACTIVE</code> state using the <code dir="ltr">ttRepStateSet</code> built-in procedure. This database becomes the active master in the active standby pair:</p>
<pre dir="ltr">call ttRepStateSet( &#39;ACTIVE&#39; );
</pre></li>
<li>
<p>Resume any applications that were paused in step <a href="#CHDBJDBC">1</a>, connecting them to the database that is now acting as the active master (in this example, database <code dir="ltr">master2</code>).</p>
</li>
<li>
<p>Upgrade the TimesTen instance for the former active master database, which is now the standby master database. See <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>Restart the cache agent on the post-upgrade database using the <code dir="ltr">ttCacheStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -cacheStart master1
</pre></li>
<li>
<p>Restart replication on the post-upgrade database using the <code dir="ltr">ttRepStart</code> built-in procedure or the <code dir="ltr">ttAdmin</code> utility:</p>
<pre dir="ltr">ttAdmin -repStart master1
</pre></li>
<li>
<p>To make the post-upgrade database the active master database again, see <a class="olink TTREP224" href="../TTREP/standby.htm#TTREP224">&#34;Reversing the roles of the active and standby databases&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CIAIHDDE"></a>
<div id="TTINS363" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Online ma<a id="sthref296"></a>jor upgrade for active standby pair (read-only cache groups)</h4>
<p>Complete the following steps to perform a TimesTen major upgrade from an 11.2.1.<span class="italic">x</span>.<span class="italic">x</span> release to an 11.2.2.<span class="italic">x</span>.<span class="italic">x</span> release in a scenario with an active standby pair with read-only cache groups.</p>
<p>These steps assume an active master database <code dir="ltr">master1</code> on host <code dir="ltr">master1host</code> and a standby master database <code dir="ltr">master2</code> on host <code dir="ltr">master2host</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For more information on the built-in procedures and utilities discussed here, see <a class="olink TTREF213" href="../TTREF/proced.htm#TTREF213">&#34;Built-in Procedures&#34;</a> and <a class="olink TTREF316" href="../TTREF/util.htm#TTREF316">&#34;Utilities&#34;</a> in the <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</div>
<ol>
<li>
<p>On the active master host, run the <code dir="ltr">ttAdmin</code> utility to stop the replication agent for the active master database.</p>
<pre dir="ltr">ttAdmin -repStop master1
</pre></li>
<li>
<p>On the active master database, use the <code dir="ltr">DROP ACTIVE STANDBY PAIR</code> statement to drop the active standby pair. For example, from the <code dir="ltr">ttIsql</code> utility:</p>
<pre dir="ltr">Command&gt; DROP ACTIVE STANDBY PAIR;
</pre></li>
<li>
<p>On the active master database, use the <code dir="ltr">CREATE ACTIVE STANDBY PAIR</code> statement to create a new active standby pair with the cache groups excluded. Ensure that you explicitly specify the TCP/IP port for each database.</p>
<pre dir="ltr">Command&gt; CREATE ACTIVE STANDBY PAIR master1 ON &#34;master1host&#34;,
           master2 ON &#34;master2host&#34;
         STORE master1 ON &#34;master1host&#34; PORT 20000
         STORE master2 ON &#34;master2host&#34; PORT 20010
         EXCLUDE CACHE GROUP cacheuser.readcache;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can use the <code dir="ltr">cachegroups</code> command within the <code dir="ltr">ttIsql</code> utility to identify all the cache groups defined in the database. In this example, <code dir="ltr">readcache</code> is a read-only cache group owned by the <code dir="ltr">cacheuser</code> user.</div>
</li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepStateSet</code> built-in procedure to set the replication state for the active master database to <code dir="ltr">ACTIVE</code>.</p>
<pre dir="ltr">Command&gt; call ttRepStateSet(&#39;ACTIVE&#39;);
</pre>
<p>To verify that the replication state for the active master database is set to <code dir="ltr">ACTIVE</code>, call the <code dir="ltr">ttRepStateGet</code> built-in procedure.</p>
<pre dir="ltr">Command&gt; call ttRepStateGet();
&lt; ACTIVE, NO GRID &gt;
1 row found.
</pre></li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepStart</code> built-in procedure to start the replication agent.</p>
<pre dir="ltr">Command&gt; call ttRepStart();
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttAdmin</code> utility to stop the replication agent for the standby master database.</p>
<pre dir="ltr">ttAdmin -repStop master2
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttAdmin</code> utility to stop the cache agent for the standby master database.</p>
<pre dir="ltr">ttAdmin -cacheStop master2
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttDestroy</code> utility to destroy the standby master database. You must either add the <code dir="ltr">-force</code> option or first drop all cache groups.</p>
<pre dir="ltr">ttDestroy -force master2
</pre></li>
<li>
<p>Create a new standby master database by duplicating the active master database with the <code dir="ltr">ttRepAdmin</code> utility. For example, to duplicate the <code dir="ltr">master1</code> database on the <code dir="ltr">master1host</code> host of the <code dir="ltr">master2</code> database, run the following on the host containing the <code dir="ltr">master2</code> database.</p>
<pre dir="ltr">ttRepAdmin -duplicate -from master1 -host master1host -UID pat -PWD patpwd 
  -keepCG -cacheUid cacheuser -cachePwd cachepwd master2
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You need a user with <code dir="ltr">ADMIN</code> privileges defined in the active master database for it to be duplicated. In this example, the <code dir="ltr">pat</code> user identified by the <code dir="ltr">patpwd</code> password has <code dir="ltr">ADMIN</code> privileges.
<p>To keep the cache group tables, you need a cache administration user while adding the <code dir="ltr">-keepCG</code> option. In this example, the <code dir="ltr">cacheuser</code> user identified by the <code dir="ltr">cachepwd</code> password is a cache administration user.</p>
</div>
</li>
<li>
<p>On the new standby master database, use the <code dir="ltr">DROP CACHE GROUP</code> statement to drop all the cache groups.</p>
<pre dir="ltr">Command&gt; DROP CACHE GROUP cacheuser.readcache;
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttMigrate</code> utility to back up the standby master database to a binary file.</p>
<pre dir="ltr">ttMigrate -c master2 master2.bak
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttDestroy</code> utility to destroy the standby master database.</p>
<pre dir="ltr">ttDestroy master2
</pre></li>
<li>
<p>Uninstall the old release and install the new release of TimesTen on the standby master host. See <a href="install.htm#CBHGDDAH">&#34;Installing TimesTen on UNIX systems&#34;</a> or <a href="install.htm#CIHGJHII">&#34;Installing TimesTen on Windows systems&#34;</a>.</p>
</li>
<li>
<p>In the new TimesTen instance on the standby master host, run the <code dir="ltr">ttMigrate</code> utility to restore the standby master database from the binary file created earlier.</p>
<pre dir="ltr">ttMigrate -r -C 20 master2 master2.bak
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
This example performs a checkpoint operation after every 20 MB of data has been restored.</div>
</li>
<li>
<p>On the standby master database, use the <code dir="ltr">CREATE USER</code> statement to create a new cache administration user.</p>
<pre dir="ltr">Command&gt; CREATE USER cacheuser2 IDENTIFIED BY cachepwd;
Command&gt; GRANT CREATE SESSION, CACHE_MANAGER, CREATE ANY TABLE, DROP ANY TABLE 
           TO cacheuser2;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must create the new cache administration user in the Oracle database and grant the user the minimum set of privileges required to perform cache grid and cache group operations. See <a class="olink TTCAC133" href="../TTCAC/gettingstarted.htm#TTCAC133">&#34;Create users in the Oracle database&#34;</a> in the <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span>.</div>
</li>
<li>
<p>Connect to the standby master database as the cache administration user, and call the <code dir="ltr">ttCacheUidPwdSet</code> built-in procedure to set the new cache administration user name and password. Ensure you specify the cache administration user password for the Oracle database in the <code dir="ltr">OraclePWD</code> connection attribute within the connection string.</p>
<pre dir="ltr">ttIsql &#34;DSN=master2;UID=cacheuser2;PWD=cachepwd;OraclePWD=oracle&#34;
Command&gt; call ttCacheUidPwdSet(&#39;cacheuser2&#39;,&#39;oracle&#39;);
</pre></li>
<li>
<p>On the standby master database, call the <code dir="ltr">ttCacheStart</code> built-in procedure to start the cache agent.</p>
<pre dir="ltr">Command&gt; call ttCacheStart();
</pre></li>
<li>
<p>On the standby master database, call the <code dir="ltr">ttRepStart</code> built-in procedure to start the replication agent.</p>
<pre dir="ltr">Command&gt; call ttRepStart();
</pre>
<p>The replication state will automatically be set to <code dir="ltr">STANDBY</code>. You can call the <code dir="ltr">ttRepStateGet</code> built-in procedure to confirm this. (This occurs asynchronously and may take a little time.)</p>
<pre dir="ltr">Command&gt; call ttRepStateGet();
&lt; STANDBY, NO GRID &gt;
1 row found.
</pre></li>
<li>
<p>On the standby master database, use the <code dir="ltr">CREATE READONLY CACHE GROUP</code> statement to create all the read-only cache groups.</p>
<pre dir="ltr">Command&gt; CREATE READONLY CACHE GROUP cacheuser2.readcache
         AUTOREFRESH INTERVAL 10 SECONDS
         FROM oratt.readtbl
           (keyval NUMBER NOT NULL PRIMARY KEY, str VARCHAR(32));
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Ensure that the cache administration user has <code dir="ltr">SELECT</code> privileges on the cache group tables in the Oracle database. In this example, the <code dir="ltr">cacheuser2</code> user has <code dir="ltr">SELECT</code> privileges on the <code dir="ltr">readtbl</code> table owned by the <code dir="ltr">oratt</code> user in the Oracle database. For more information, see <a class="olink TTCAC141" href="../TTCAC/gettingstarted.htm#TTCAC141">&#34;Create the Oracle Database tables to be cached&#34;</a> in the <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span>.</div>
</li>
<li>
<p>On the standby master database, use the <code dir="ltr">LOAD CACHE GROUP</code> statement to load the data from the Oracle database tables into the TimesTen cache groups.</p>
<pre dir="ltr">Command&gt; LOAD CACHE GROUP cacheuser2.readcache
         COMMIT EVERY 200 ROWS;
</pre></li>
<li id="CIAFFCGA">
<p>Pause any applications that are generating updates on the active master database.</p>
</li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepSubscriberWait</code> built-in procedure using the DSN and host of the standby master database. For example, to ensure that all transactions are replicated to the <code dir="ltr">master2</code> database on the <code dir="ltr">master2host</code> host:</p>
<pre dir="ltr">Command&gt; call ttRepSubscriberWait(NULL,NULL,&#39;master2&#39;,&#39;master2host&#39;,120);
</pre></li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepStop</code> built-in procedure to stop the replication agent.</p>
<pre dir="ltr">Command&gt; call ttRepStop();
</pre></li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepDeactivate</code> built-in procedure to set the replication state for the active master database to <code dir="ltr">IDLE</code>.</p>
<pre dir="ltr">Command&gt; call ttRepDeactivate();
</pre></li>
<li>
<p>On the standby master database, call the <code dir="ltr">ttRepStateSet</code> built-in procedure to set the replication state for the standby master database to <code dir="ltr">ACTIVE</code>. This database and its host become the active master in the active standby pair replication scheme.</p>
<pre dir="ltr">Command&gt; call ttRepStateSet(&#39;ACTIVE&#39;);
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
In this example, the <code dir="ltr">master2</code> database on the <code dir="ltr">master2host</code> host just became the active master in the active standby pair replication scheme. Likewise, the <code dir="ltr">master1</code> database on the <code dir="ltr">master1host</code> host is henceforth considered the standby master in the active standby pair replication scheme.</div>
</li>
<li>
<p>On the new active master database, call the <code dir="ltr">ttRepStop</code> built-in procedure to stop the replication agent.</p>
<pre dir="ltr">Command&gt; call ttRepStop();
</pre></li>
<li>
<p>On the active master database, use the <code dir="ltr">ALTER CACHE GROUP</code> statement to set the <code dir="ltr">AUTOREFRESH</code> mode of all cache groups to <code dir="ltr">PAUSED</code>.</p>
<pre dir="ltr">Command&gt; ALTER CACHE GROUP cacheuser2.readcache
         SET AUTOREFRESH STATE PAUSED;
</pre></li>
<li>
<p>On the active master database, use the <code dir="ltr">DROP ACTIVE STANDBY PAIR</code> statement to drop the active standby pair.</p>
<pre dir="ltr">Command&gt; DROP ACTIVE STANDBY PAIR;
</pre></li>
<li>
<p>On the active master database, use the <code dir="ltr">CREATE ACTIVE STANDBY PAIR</code> statement to create a new active standby pair with the cache groups included. Ensure you explicitly specify the TCP/IP port for each database.</p>
<pre dir="ltr">Command&gt; CREATE ACTIVE STANDBY PAIR master1 ON &#34;master1host&#34;,
           master2 ON &#34;master2host&#34;
         STORE master1 ON &#34;master1host&#34; PORT 20000
         STORE master2 ON &#34;master2host&#34; PORT 20010;
</pre></li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepStateSet</code> built-in procedure to set the replication state for the active master database to <code dir="ltr">ACTIVE</code>.</p>
<pre dir="ltr">Command&gt; call ttRepStateSet(&#39;ACTIVE&#39;);
</pre></li>
<li>
<p>On the active master database, call the <code dir="ltr">ttRepStart</code> built-in procedure to start the replication agent.</p>
<pre dir="ltr">Command&gt; call ttRepStart();
</pre></li>
<li>
<p>Resume any applications that were paused in step <a href="#CIAFFCGA">21</a>, connecting them to the new active master database.</p>
</li>
<li>
<p>On the new standby master host, run the <code dir="ltr">ttDestroy</code> utility to destroy the new standby master database.</p>
<pre dir="ltr">ttDestroy master1
</pre></li>
<li>
<p>Uninstall the old release and install the new release of TimesTen on the standby master host.</p>
</li>
<li>
<p>Create a new standby master database by duplicating the active master database with the <code dir="ltr">ttRepAdmin</code> utility. For example, to duplicate the <code dir="ltr">master2</code> database on the <code dir="ltr">master2host</code> host to the <code dir="ltr">master1</code> database, run the following on the host containing the <code dir="ltr">master1</code> database:</p>
<pre dir="ltr">ttRepAdmin -duplicate -from master2 -host master2host -UID pat -PWD patpwd 
  -keepCG -cacheUid cacheuser2 -cachePwd cachepwd master1
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttAdmin</code> utility to start the cache agent for the standby master database.</p>
<pre dir="ltr">ttAdmin -cacheStart master1
</pre></li>
<li>
<p>On the standby master host, run the <code dir="ltr">ttAdmin</code> utility to start the cache agent for the standby master database.</p>
<pre dir="ltr">ttAdmin -repStart master1
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIADGIJE"></a>
<div id="TTINS342" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Offline upgrades for an active standby pair with cache groups</h3>
<p>Performing a TimesTen major upgrade in a scenario with an active standby pair with asynchronous writethrough cache groups requires an offline upgrade. This is discussed in the subsection that follows.</p>
<a id="CIAIDGEC"></a>
<div id="TTINS343" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Offline ma<a id="sthref297"></a>jor upgrade for active standby pair (cache groups)</h4>
<p>Complete the following steps to perform a TimesTen major upgrade from an 11.2.1.<span class="italic">x.x</span> release to an 11.2.2.<span class="italic">x.x</span> release in a scenario with an active standby pair with cache groups. You must perform this upgrade offline.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is not supported for upgrading from a 7.0.<span class="italic">x</span> or earlier release of TimesTen. For that case, an alternative is to exclude cache groups from your replication scheme before the upgrade, use the procedure for upgrading without cache groups, then include the previously excluded cache groups into the replication scheme after the upgrade. For an upgrade without cache groups, see <a href="#CHDHBCIF">&#34;Online major upgrade for active standby pair&#34;</a>.</div>
<p>These steps assume an active master database <code dir="ltr">master1</code> on host <code dir="ltr">master1host</code> and a standby master database <code dir="ltr">master2</code> on host <code dir="ltr">master2host</code>. (For information about the built-in procedures and utilities discussed here, refer to <a class="olink TTREF213" href="../TTREF/proced.htm#TTREF213">&#34;Built-In Procedures&#34;</a> and <a class="olink TTREF316" href="../TTREF/util.htm#TTREF316">&#34;Utilities&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.)</p>
<ol>
<li>
<p>Stop any updates to the active database before you upgrade.</p>
</li>
<li>
<p>From <code dir="ltr">master1</code>, call the <code dir="ltr">ttRepSubscriberWait</code> built-in procedure to ensure that all data updates have been applied to the standby database, where <code dir="ltr"><span class="codeinlineitalic">numsec</span></code> is the desired wait time.</p>
<pre dir="ltr">call ttRepSubscriberWait(null, null, &#39;master2&#39;, &#39;master2host&#39;, <span class="italic">numsec</span>);
</pre></li>
<li>
<p>From <code dir="ltr">master2</code>, call <code dir="ltr">ttRepSubscriberWait</code> to ensure that all data updates have been applied to the Oracle database.</p>
<pre dir="ltr">call ttRepSubscriberWait(null, null, &#39;_ORACLE&#39;, null, <span class="italic">numsec</span>);
</pre></li>
<li>
<p>On <code dir="ltr">master1host</code>, use the <code dir="ltr">ttAdmin</code> utility to stop the replication agent for the active database.</p>
<pre dir="ltr">ttAdmin -repStop master1
</pre></li>
<li>
<p>On <code dir="ltr">master2host</code>, use <code dir="ltr">ttAdmin</code> to stop the replication agent for the standby database.</p>
<pre dir="ltr">ttAdmin -repStop master2
</pre></li>
<li>
<p>On <code dir="ltr">master1host</code>, call the <code dir="ltr">ttCacheStop</code> built-in procedure or use <code dir="ltr">ttAdmin</code> to stop the cache agent for the active database.</p>
<pre dir="ltr">ttAdmin -cacheStop master1
</pre></li>
<li>
<p>On <code dir="ltr">master2host</code>, call <code dir="ltr">ttCacheStop</code> or use <code dir="ltr">ttAdmin</code> to stop the cache agent for the standby database.</p>
<pre dir="ltr">ttAdmin -cacheStop master2
</pre></li>
<li>
<p>On <code dir="ltr">master1host</code>, use the <code dir="ltr">ttMigrate</code> utility to back up the active database to a binary file.</p>
<pre dir="ltr">ttMigrate -c master1 master1.bak
</pre></li>
<li>
<p>On <code dir="ltr">master1host</code>, use the <code dir="ltr">ttDestroy</code> utility to destroy the active database. You must either use the <code dir="ltr">-force</code> option or first drop all cache groups. If you use <code dir="ltr">-force</code>, run the script <code dir="ltr">cacheCleanup.sql</code> afterward.</p>
<pre dir="ltr">ttDestroy -force /<span class="italic">data_store_path</span>/master1
</pre>
<p>The <code dir="ltr">cacheCleanup.sql</code> script is a SQL*Plus script, located in the <code dir="ltr"><span class="codeinlineitalic">TimesTen_install_dir</span></code><code dir="ltr">/oraclescripts</code> directory, that you run after connecting to the Oracle database as the cache user. It takes as parameters the TimesTen host name and the TimesTen database name (with full path). For information, refer to <a class="olink TTCAC323" href="../TTCAC/manage.htm#TTCAC323">&#34;Dropping Oracle Database objects used by autorefresh cache groups&#34;</a> in <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span>.</p>
</li>
<li>
<p>Uninstall the old and install the new TimesTen major release on <code dir="ltr">master1host</code>. For details, see <a href="install.htm#CBHGDDAH">&#34;Installing TimesTen on UNIX systems&#34;</a> or <a href="install.htm#CIHGJHII">&#34;Installing TimesTen on Windows systems&#34;</a>.</p>
</li>
<li>
<p>Create a new database in 11.2.2.<span class="italic">x.x</span> using <code dir="ltr">ttIsql</code> with DSN connection attribute setting <code dir="ltr">AutoCreate=1</code>. In this new database, create a cache user. The following example is a sequence of commands to execute in <code dir="ltr">ttIsql</code> to create this cache user and give it appropriate access privileges.</p>
<p>The cache user requires <code dir="ltr">ADMIN</code> privilege to execute the next step, <code dir="ltr">ttMigrate &ndash;r</code>. Once migration is complete, you can revoke the <code dir="ltr">ADMIN</code> privilege from this user.</p>
<pre dir="ltr">Command&gt; CREATE USER cacheuser IDENTIFIED BY cachepassword;
Command&gt; GRANT CREATE SESSION, CACHE_MANAGER, CREATE ANY TABLE, DROP ANY TABLE
 TO cacheuser;
Command&gt; GRANT ADMIN TO cacheuser;
</pre></li>
<li>
<p>In the new TimesTen instance on <code dir="ltr">master1host</code>, use the <code dir="ltr">ttMigrate</code> utility as the cache user to restore <code dir="ltr">master1</code> from the binary file created earlier. (This example performs a checkpoint operation after every 20 MB of data has been restored, and assumes the password is the same in the Oracle database as in TimesTen.)</p>
<pre dir="ltr">ttMigrate -r -cacheuid cacheuser -cachepwd cachepassword -C 20 -connstr
 &#34;DSN=master1;uid=cacheuser;pwd=cachepassword;oraclepwd=cachepassword&#34;
 master1.bak
</pre></li>
<li>
<p>On <code dir="ltr">master1host</code>, use <code dir="ltr">ttAdmin</code> to start the replication agent.</p>
<pre dir="ltr">ttAdmin -repStart master1
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
This step also sets the database to the active state. You can then call the <code dir="ltr">ttRepStateGet</code> built-in procedure (which takes no parameters) to confirm the state.</div>
</li>
<li>
<p>On <code dir="ltr">master1host</code>, call the <code dir="ltr">ttCacheStart</code> built-in procedure or use <code dir="ltr">ttAdmin</code> to start the cache agent.</p>
<pre dir="ltr">ttAdmin -cacheStart master1
</pre>
<p>Then you can use the <code dir="ltr">ttStatus</code> utility to confirm the replication and cache agents have started.</p>
</li>
<li>
<p>Put each automatic refresh cache group into the <code dir="ltr">AUTOREFRESH PAUSED</code> state. This example uses <code dir="ltr">ttIsql</code>:</p>
<pre dir="ltr">Command&gt; ALTER CACHE GROUP mycachegroup SET AUTOREFRESH STATE paused;
</pre></li>
<li>
<p>From <code dir="ltr">master1</code>, reload each cache group, specifying the name of the cache group and how often to commit during the operation. This example uses <code dir="ltr">ttIsql</code>:</p>
<pre dir="ltr">Command&gt; LOAD CACHE GROUP <span class="italic">cachegroupname</span> COMMIT EVERY <span class="italic">n</span> ROWS;
</pre>
<p>You can optionally specify parallel loading as well. For information about the <a class="olink TTSQL323" href="../TTSQL/state.htm#TTSQL323"><code dir="ltr">LOAD CACHE GROUP</code></a> SQL statement, refer to <span class="italic">Oracle TimesTen In-Memory Database SQL Reference</span>.</p>
</li>
<li>
<p>On <code dir="ltr">master2host</code>, use <code dir="ltr">ttDestroy</code> to destroy the standby database. You must either use the <code dir="ltr">-force</code> option or first drop all cache groups. If you use <code dir="ltr">-force</code>, run the script <code dir="ltr">cacheCleanup.sql</code> afterward (as discussed earlier).</p>
<pre dir="ltr">ttDestroy -force /<span class="italic">data_store_path</span>/master2
</pre></li>
<li>
<p>Uninstall the old and install the new TimesTen major release on <code dir="ltr">master2host</code>.</p>
</li>
<li>
<p>In the new TimesTen instance on <code dir="ltr">master2host</code>, use the <code dir="ltr">ttRepAdmin</code> utility with the <code dir="ltr">-duplicate</code> option to create a duplicate of active database <code dir="ltr">master1</code> to use as standby database <code dir="ltr">master2</code>. Specify the appropriate administrative user on <code dir="ltr">master1</code>, the cache manager user and password, and to keep cache groups.</p>
<pre dir="ltr">ttRepAdmin -duplicate -from master1 -host master1host -uid pat -pwd patpwd 
-cacheUid orcluser -cachePwd orclpwd -keepCG master2
</pre></li>
<li>
<p>On <code dir="ltr">master2host</code>, use <code dir="ltr">ttAdmin</code> to start the replication agent. (You could optionally have used the <code dir="ltr">ttRepAdmin</code> option <code dir="ltr">-setMasterRepStart</code> in the previous step instead.)</p>
<pre dir="ltr">ttAdmin -repStart master2
</pre></li>
<li>
<p>On <code dir="ltr">master2</code>, the replication state will automatically be set to <code dir="ltr">STANDBY</code>. You can call the <code dir="ltr">ttRepStateGet</code> built-in procedure to confirm this. (This occurs asynchronously and may take a little time.)</p>
<pre dir="ltr">call ttRepStateGet();
</pre></li>
<li>
<p>On <code dir="ltr">master2host</code>, call the <code dir="ltr">ttCacheStart</code> built-in procedure or use <code dir="ltr">ttAdmin</code> to start the cache agent.</p>
<pre dir="ltr">ttAdmin -cacheStart master2
</pre>
<p>After this, you can use the <code dir="ltr">ttStatus</code> utility to confirm the replication and cache agents have started.</p>
</li>
</ol>
<p>If you want to create read-only subscriber databases, on each subscriber host you can create the subscriber by using the <code dir="ltr">ttRepAdmin</code> utility <code dir="ltr">-duplicate</code> option to duplicate the standby database. The following example creates <code dir="ltr">subscriber1</code>, using the same <code dir="ltr">ADMIN</code> user as above and the <code dir="ltr">-nokeepCG</code> option to convert the cache tables to normal TimesTen tables, as appropriate for a read-only subscriber.</p>
<pre dir="ltr">ttRepAdmin -duplicate -from master2 -host master2host -nokeepCG 
-uid pat -pwd patpwd subscriber1
</pre>
<p>For related information, refer to <a class="olink TTREP252" href="../TTREP/standbycache.htm#TTREP252">&#34;Rolling out a disaster recovery subscriber&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAIIDCI"></a>
<div id="TTINS334" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Performing an offline Tim<a id="sthref298"></a><a id="sthref299"></a>esTen upgrade when using Oracle Clusterware</h2>
<p>This section discusses the steps for an offline upgrade of TimesTen when using TimesTen with Oracle Clusterware. You have the option of also upgrading Oracle Clusterware, independently, while upgrading TimesTen. (For an online upgrade, see <a href="#CCHHFAII">&#34;Performing an online TimesTen upgrade when using Oracle Clusterware&#34;</a>.)</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>These instructions apply for either a TimesTen minor upgrade (11.2.2.<span class="italic">x.x</span> to higher 11.2.2.<span class="italic">x.x</span>) or a TimesTen major upgrade (11.2.1.<span class="italic">x.x</span> to 11.2.2.<span class="italic">x.x</span>).</p>
</li>
<li>
<p>TimesTen 11.2.2 supports Clusterware releases 11.2.0.2 and 11.2.0.3 only. (TimesTen 11.2.1 supports Clusterware releases 11.1.0.7, 11.2.0.2, and 11.2.0.3.)</p>
</li>
<li>
<p>TimesTen does not support Clusterware on Windows platforms.</p>
</li>
</ul>
</div>
<p>For this procedure, except where noted, you can execute the <code dir="ltr">ttCWAdmin</code> commands from any host in the cluster. Each command affects all hosts.</p>
<ol>
<li>
<p>Stop the replication agents on the databases in the active standby pair:</p>
<pre dir="ltr">ttCWAdmin -stop -dsn advancedDSN
</pre></li>
<li>
<p>Drop the active standby pair:</p>
<pre dir="ltr">ttCWAdmin -drop -dsn advancedDSN
</pre></li>
<li>
<p>Stop the TimesTen cluster agent. This removes the hosts from the cluster and stops the TimesTen daemon:</p>
<pre dir="ltr">ttCWAdmin -shutdown
</pre></li>
<li>
<p>Upgrade TimesTen on the desired hosts.</p>
<ul>
<li>
<p>To perform a TimesTen minor upgrade, each node in the cluster must have TimesTen from the same major release line (such as all 11.2.2.<span class="italic">x.x</span> releases). You can do an in-place upgrade as discussed in <a href="#CACJDGHG">&#34;Performing an in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>To perform a TimesTen major upgrade, you must use <code dir="ltr">ttMigrate</code> as discussed in <a href="#CACICGFA">&#34;Performing an offline upgrade&#34;</a>.</p>
</li>
</ul>
</li>
<li>
<p>Upgrade Oracle Clusterware if desired, according to instructions in Oracle Database documentation, which you can access as follows.</p>
<ol>
<li>
<p>Go go <code dir="ltr"><a href="http://www.oracle.com/pls/db112/homepage">http://www.oracle.com/pls/db112/homepage</a></code>.</p>
</li>
<li>
<p>Select the &#34;Installing and Upgrading&#34; link.</p>
</li>
<li>
<p>Refer to the <span class="italic">Grid Infrastructure Installation Guide</span> for your platform.</p>
</li>
</ol>
<p>Also see <a class="olink CWADD91498" href="../CWADD/GUID-938084B1-7CE3-4289-8DA1-1D902FB9C05D.htm#CWADD91498">&#34;Overview of Upgrading Oracle Clusterware&#34;</a> in <span class="italic">Oracle Clusterware Administration and Deployment Guide</span>.</p>
<p>For use with TimesTen, you can upgrade from Clusterware release 11.1.0.7 to 11.2.0.3 or from 11.2.0.2 to 11.2.0.3, but <span class="italic">not</span> from 11.1.0.7 to 11.2.0.2.</p>
</li>
<li>
<p>If you have upgraded Oracle Clusterware, use the <a class="olink TTREF352" href="../TTREF/util.htm#TTREF352"><code dir="ltr">ttmodinstall</code></a> utility (documented in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>) to configure TimesTen with Oracle Clusterware. On each host, enter:</p>
<pre dir="ltr">ttmodinstall -crs
</pre>
<p>When <code dir="ltr">ttmodinstall</code> asks permission to overwrite the <code dir="ltr">ttcrsagent.options</code> file, choose <code dir="ltr">yes</code> (the default).</p>
<p>See <a class="olink TTREP273" href="../TTREP/cluster.htm#TTREP273">&#34;Install TimesTen on each host&#34;</a> and <a class="olink TTREP274" href="../TTREP/cluster.htm#TTREP274">&#34;Start the TimesTen cluster agent&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for information related to <code dir="ltr">ttcrsagent.options</code>.</p>
</li>
<li>
<p>Start the TimesTen cluster agent. This includes the hosts defined in the cluster as specified in <code dir="ltr">ttcrsagent.options</code>. This also starts the TimesTen daemon.</p>
<pre dir="ltr">ttCWAdmin -init
</pre></li>
<li>
<p>Create the active standby pair replication scheme:</p>
<pre dir="ltr">ttCWAdmin -create -dsn advancedDSN
</pre>
<p><span class="bold">Important</span>: The host from which you run this command must have access to the <code dir="ltr">cluster.oracle.ini</code> file. (See <a class="olink TTREP264" href="../TTREP/cluster.htm#TTREP264">&#34;Configuring Oracle Clusterware management with the cluster.oracle.ini file&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for information about this file.)</p>
</li>
<li>
<p>Start the active standby pair replication scheme:</p>
<pre dir="ltr">ttCWAdmin -start -dsn advancedDSN
</pre></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CCHHFAII"></a>
<div id="TTINS297" class="sect1">
<h2 class="sect1">Performing an online TimesTen<a id="sthref300"></a><a id="sthref301"></a> upgrade when using Oracle Clusterware</h2>
<p>This section discusses how to perform an online rolling in-place minor upgrade for TimesTen, from one TimesTen 11.2.2.<span class="italic">x.x</span> release to a higher 11.2.2.<span class="italic">x.x</span> release, in a configuration where Oracle Clusterware manages active standby pairs. (For an offline upgrade, see <a href="#CIAIIDCI">&#34;Performing an offline TimesTen upgrade when using Oracle Clusterware&#34;</a>.)</p>
<p>The following topics are covered:</p>
<ul>
<li>
<p><a href="#CIAGFDAJ">Supported configurations</a></p>
</li>
<li>
<p><a href="#CIAGCCBG">Restrictions and assumptions</a></p>
</li>
<li>
<p><a href="#CIABCCJA">Upgrade tasks for one active standby pair</a></p>
</li>
<li>
<p><a href="#CIAEIBIB">Upgrades for multiple active standby pairs on many pairs of hosts</a></p>
</li>
<li>
<p><a href="#CIADFGIA">Upgrades for multiple active standby pairs on a pair of hosts</a></p>
</li>
<li>
<p><a href="#CIADIGGD">Sample in-place upgrade</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>TimesTen 11.2.2 supports Clusterware releases 11.2.0.2 and 11.2.0.3 only. (TimesTen 11.2.1 supports Clusterware releases 11.1.0.7, 11.2.0.2, and 11.2.0.3.)</p>
</li>
<li>
<p>TimesTen does not support Clusterware on Windows platforms.</p>
</li>
</ul>
</div>
<a id="CIAGFDAJ"></a>
<div id="TTINS317" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Supported configurations</h3>
<p>The following basic configurations are supported for online rolling in-place upgrades for TimesTen. In all cases, Oracle Clusterware manages the hosts.</p>
<ul>
<li>
<p>One active standby pair on two hosts.</p>
</li>
<li>
<p>Multiple active standby pairs with one TimesTen database on each host.</p>
</li>
<li>
<p>Multiple active standby pairs with one or more TimesTen database on each host.</p>
</li>
</ul>
<p>(Other scenarios, such as with additional spare systems, are effectively equivalent to one of these scenarios.)</p>
</div>
<!-- class="sect2" -->
<a id="CIAGCCBG"></a>
<div id="TTINS318" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Restrictions and assumptions</h3>
<p>Note the following assumptions for upgrading TimesTen when using Oracle Clusterware:</p>
<ul>
<li>
<p>The existing active standby pairs are configured and operating properly.</p>
</li>
<li>
<p>Oracle Clusterware commands are used correctly to stop and start the standby database.</p>
</li>
<li>
<p>The in-place upgrade does not change the TimesTen environment for the active and standby databases.</p>
</li>
<li>
<p>The in-place upgrade is from a TimesTen 11.2.2.<span class="italic">x.x</span> release to a later TimesTen 11.2.2.<span class="italic">x.x</span> release. These instructions are for TimesTen minor upgrades only. Online major upgrades are not currently supported in configurations where Oracle Clusterware manages active standby pairs.</p>
</li>
<li>
<p>Oracle Clusterware is release 11.2.0.2 or 11.2.0.3.</p>
</li>
<li>
<p>The in-place upgrade applies to one TimesTen installation on each host.</p>
</li>
<li>
<p>There are at least two hosts managed by Oracle Clusterware.</p>
<p>Multiple active or standby databases managed by Oracle Clusterware can exist on a host only if there are at least two hosts in the cluster.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Important:</p>
<ul>
<li>
<p>Upgrade Oracle Clusterware if desired, but <span class="italic">not</span> concurrently with an online TimesTen upgrade. When performing an online TimesTen minor upgrade in configurations where Oracle Clusterware manages active standby pairs, you must perform the Clusterware upgrade independently and separately, either before or after the TimesTen upgrade.</p>
<p>Be aware that for use with TimesTen, you can upgrade from Clusterware release 11.1.0.7 to 11.2.0.3 or from 11.2.0.2 to 11.2.0.3, but <span class="italic">not</span> from 11.1.0.7 to 11.2.0.2.</p>
</li>
<li>
<p>For upgrading TimesTen when using Oracle Clusterware, online rolling in-place upgrades are not supported when global cache groups are replicated by the active standby pairs.</p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Refer to Oracle Database documentation for information about upgrading Oracle Clusterware:
<ol>
<li>
<p>Go go <code dir="ltr"><a href="http://www.oracle.com/pls/db112/homepage">http://www.oracle.com/pls/db112/homepage</a></code>.</p>
</li>
<li>
<p>Select the &#34;Installing and Upgrading&#34; link.</p>
</li>
<li>
<p>Refer to the <span class="italic">Grid Infrastructure Installation Guide</span> for your platform.</p>
</li>
</ol>
<p>Also see <a class="olink CWADD91498" href="../CWADD/GUID-938084B1-7CE3-4289-8DA1-1D902FB9C05D.htm#CWADD91498">&#34;Overview of Upgrading Oracle Clusterware&#34;</a> in <span class="italic">Oracle Clusterware Administration and Deployment Guide</span>.</p>
</div>
</div>
<!-- class="sect2" -->
<a id="CIABCCJA"></a>
<div id="TTINS319" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Upgrade tasks for one active standby pair</h3>
<p>This section describes the following tasks:</p>
<ul>
<li>
<p><a href="#CIAJCABH">Verify that the active standby pair is operating properly</a></p>
</li>
<li>
<p><a href="#CIABBDFA">Shut down the standby database</a></p>
</li>
<li>
<p><a href="#CIAJHFBJ">Perform an in-place upgrade for the standby database</a></p>
</li>
<li>
<p><a href="#CIACBHCB">Start the standby database</a></p>
</li>
<li>
<p><a href="#CIACDBGA">Switch the roles of the active and standby databases</a></p>
</li>
<li>
<p><a href="#CIACBCHA">Shut down the new standby database</a></p>
</li>
<li>
<p><a href="#CIABJIAE">Perform an in-place upgrade of the new standby database</a></p>
</li>
<li>
<p><a href="#CIACEIHI">Start the new standby database</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
In examples in the following subsections, the host name is <code dir="ltr">host2</code>, the DSN is <code dir="ltr">myDSN</code>, the TimesTen instance name is <code dir="ltr">upgrade2</code>, and the instance administrator is <code dir="ltr">terry</code>.</div>
<a id="CIAJCABH"></a>
<div id="TTINS320" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Verify that the active standby pair is operating properly</h4>
<p>Complete these steps to confirm that the active standby pair is operating properly.</p>
<ol>
<li>
<p>Verify the following.</p>
<ul>
<li>
<p>The active and the standby databases run a TimesTen 11.2.2.<span class="italic">x.x</span> release.</p>
</li>
<li>
<p>The active and standby databases are on separate hosts managed by Oracle Clusterware.</p>
</li>
<li>
<p>Replication is working.</p>
</li>
<li>
<p>If the active standby pair replication scheme includes cache groups, the following are true:</p>
<ul>
<li>
<p>AWT and SWT writes from the standby TimesTen database to the Oracle database are working.</p>
</li>
<li>
<p>Refreshes from the Oracle database to the active TimesTen database are working.</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Enter the <code dir="ltr">ttCWAdmin -status -dsn</code> <code dir="ltr"><span class="codeinlineitalic">yourDSN</span></code> command to verify the following.</p>
<ul>
<li>
<p>The active database is on a different host than the standby database.</p>
</li>
<li>
<p>The state of the active database is <code dir="ltr">&#39;ACTIVE&#39;</code> and the status is <code dir="ltr">&#39;AVAILABLE&#39;</code>.</p>
</li>
<li>
<p>The state of the standby database is <code dir="ltr">&#39;STANDBY&#39;</code> and the status is <code dir="ltr">&#39;AVAILABLE&#39;</code>.</p>
</li>
</ul>
</li>
<li>
<p>Enter the <code dir="ltr">ttStatus</code> command on the active database to verify the following.</p>
<ul>
<li>
<p>The <code dir="ltr">ttCRSactiveservice</code> and <code dir="ltr">ttCRSmaster</code> processes are running.</p>
</li>
<li>
<p>The subdaemon and the replication agents are running.</p>
</li>
<li>
<p>If the active standby pair replication scheme includes cache groups, the cache agent is running.</p>
</li>
</ul>
</li>
<li>
<p>Enter the <code dir="ltr">ttStatus</code> command on the standby database to verify the following.</p>
<ul>
<li>
<p>The <code dir="ltr">ttCRSsubservice</code> and <code dir="ltr">ttCRSmaster</code> processes are running.</p>
</li>
<li>
<p>The subdaemon and the replication agents are running.</p>
</li>
<li>
<p>If the active standby pair replication scheme includes cache groups, the cache agent is running.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CIABBDFA"></a>
<div id="TTINS321" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Shut down the standby database</h4>
<p>Complete these steps to shut down the standby database.</p>
<ol>
<li>
<p>Enter an Oracle Clusterware command similar to the following to obtain the names of the Oracle Clusterware Master, Daemon, and Agent processes on the host of the standby database. It is suggested to filter the output through <code dir="ltr">grep TT</code>:</p>
<pre dir="ltr">crsctl status resource -n <span class="italic">standbyHostName</span> | grep TT
</pre></li>
<li>
<p>Use Oracle Clusterware commands to shut down the standby database. The Oracle Clusterware commands stop the Master processes for the standby database, the Daemon process for the TimesTen installation, and the Agent process for the TimesTen installation.</p>
<pre dir="ltr">crsctl stop resource TT_Master_upgrade2_terry_myDSN_1
crsctl stop resource TT_Daemon_upgrade2_terry_host2
crsctl stop resource TT_Agent_upgrade2_terry_host2
</pre></li>
<li>
<p>Stop the TimesTen main daemon.</p>
<pre dir="ltr">ttDaemonAdmin -stop
</pre>
<p>If the <code dir="ltr">ttDaemonAdmin -stop</code> command gives error 10028, retry the command.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CIAJHFBJ"></a>
<div id="TTINS322" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Perform an in-place upgrade for the standby database</h4>
<p>Complete these steps for an in-place upgrade of the TimesTen instance for the standby database.</p>
<ol>
<li>
<p>Use the <code dir="ltr">setup.sh</code> script from the installation media of your current TimesTen release to do the in-place upgrade. The in-place upgrade uninstalls the previous 11.2.2.<span class="italic">x.x</span> installation for the standby database. The new installation for the current release must be installed into the same directory structure.</p>
<p>The in-place upgrade must keep the following files on the standby database:</p>
<ul>
<li>
<p>Standby database files (such as checkpoint files, transaction log files, and so on)</p>
</li>
<li>
<p><code dir="ltr">sys.odbc.ini</code></p>
</li>
<li>
<p><code dir="ltr">ttendaemon.options</code></p>
</li>
<li>
<p><code dir="ltr">cluster.oracle.ini</code></p>
<p>See <a class="olink TTREP264" href="../TTREP/cluster.htm#TTREP264">&#34;Configuring Oracle Clusterware management with the cluster.oracle.ini file&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for information about this file.</p>
</li>
<li>
<p><code dir="ltr">ttcrsagent.options</code></p>
<p>See <a class="olink TTREP273" href="../TTREP/cluster.htm#TTREP273">&#34;Install TimesTen on each host&#34;</a> and <a class="olink TTREP274" href="../TTREP/cluster.htm#TTREP274">&#34;Start the TimesTen cluster agent&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for information related to this file.</p>
</li>
<li>
<p><code dir="ltr">tnsnames.ora</code></p>
</li>
</ul>
<p>See <a href="#CIADIGGD">&#34;Sample in-place upgrade&#34;</a>.</p>
</li>
<li>
<p>Configure the new installation for Oracle Clusterware.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CIACBHCB"></a>
<div id="TTINS323" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Start the standby database</h4>
<p>Complete these steps to start the standby database.</p>
<ol>
<li>
<p>Enter the following <code dir="ltr">ttCWAdmin</code> command to start the TimesTen main daemon, the TimesTen Oracle Clusterware agent process and the TimesTen Oracle Clusterware Daemon process:</p>
<pre dir="ltr">ttCWAdmin -init -hosts localhost
</pre></li>
<li>
<p>Start the Oracle Clusterware Master process for the standby database.</p>
<pre dir="ltr">crsctl start resource TT_Master_upgrade2_terry_MYDSN_1
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CIACDBGA"></a>
<div id="TTINS324" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Switch the roles of the active and standby databases</h4>
<p>Use the <code dir="ltr">ttCWAdmin -switch</code> command to switch the roles of the active and standby databases to enable the in-place upgrade on the other master database.</p>
<pre dir="ltr">ttCWAdmin -switch -dsn myDSN
</pre>
<p>Use the <code dir="ltr">ttCWAdmin -status</code> command to verify that the switch operation has completed before starting the next task.</p>
</div>
<!-- class="sect3" -->
<a id="CIACBCHA"></a>
<div id="TTINS325" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Shut down the new standby database</h4>
<p>Use the Oracle Clusterware <code dir="ltr">crsctl status resource</code> command to obtain the names of the Master, Daemon, and Agent processes on the host of the new standby database. The following example assumes the host <code dir="ltr">host1</code> and filters the output through <code dir="ltr">grep TT</code>.</p>
<pre dir="ltr">crsctl status resource -n host1 | grep TT
</pre>
<p>Enter commands such as those in <a href="#CIABBDFA">&#34;Shut down the standby database&#34;</a>. Use the appropriate instance name, instance administrator, DSN, and host name. For example:</p>
<pre dir="ltr">crsctl stop resource TT_Master_upgrade2_terry_MYDSN_0
crsctl stop resource TT_Daemon_upgrade2_terry_host1
crsctl stop resource TT_Agent_upgrade2_terry_host1
ttDaemonAdmin -stop
</pre></div>
<!-- class="sect3" -->
<a id="CIABJIAE"></a>
<div id="TTINS326" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Perform an in-place upgrade of the new standby database</h4>
<p>Enter commands such as those in <a href="#CIAJHFBJ">&#34;Perform an in-place upgrade for the standby database&#34;</a>.</p>
</div>
<!-- class="sect3" -->
<a id="CIACEIHI"></a>
<div id="TTINS327" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Start the new standby database</h4>
<p>See <a href="#CIACBHCB">&#34;Start the standby database&#34;</a>, but use the Master process name obtained by the <code dir="ltr">crsctl status resource</code> command from <a href="#CIACBCHA">&#34;Shut down the new standby database&#34;</a>, above.</p>
<pre dir="ltr">ttCWAdmin -init -hosts localhost
crsctl start resource TT_Master_upgrade2_terry_MYDSN_0
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIAEIBIB"></a>
<div id="TTINS328" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Upgrades for multiple active standby pairs on many pairs of hosts</h3>
<p>The process to upgrade the TimesTen instances for multiple active standby pairs on multiple pairs of hosts is essentially the same as the process to upgrade the instances for a single active standby pair on two hosts, discussed in the preceding section, <a href="#CIABCCJA">&#34;Upgrade tasks for one active standby pair&#34;</a>. The best practice is to perform the upgrades for the active standby pairs one at a time.</p>
<p>Use the <code dir="ltr">ttCWAdmin -status</code> command to determine the state of the databases managed by Oracle Clusterware.</p>
</div>
<!-- class="sect2" -->
<a id="CIADFGIA"></a>
<div id="TTINS329" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Upgrades for multiple active standby pairs on a pair of hosts</h3>
<p>Multiple active standby pairs can be on multiple pairs of hosts, as discussed in the preceding section, <a href="#CIAEIBIB">&#34;Upgrades for multiple active standby pairs on many pairs of hosts&#34;</a>. Alternatively, multiple active standby pairs can be on a single pair of hosts. One scenario is for all the active databases to be on one host and all the standby databases to be on the other. A more typical scenario, to better balance the workload, is for each host to have some active databases and some standby databases.</p>
<p><a href="#CIAGAFJC">Figure 3-1</a> shows two active standby pairs on two hosts managed by Oracle Clusterware. The active database called <code dir="ltr">active1</code> on <code dir="ltr">host1</code> replicates to <code dir="ltr">standby1</code> on <code dir="ltr">host2</code>. The active database called <code dir="ltr">active2</code> on <code dir="ltr">host2</code> replicates to <code dir="ltr">standby2</code> on <code dir="ltr">host1</code>. AWT updates from both standby databases are propagated to the Oracle database. Read-only updates from the Oracle database are propagated to the active databases.</p>
<div id="TTINS330" class="figure">
<p class="titleinfigure"><a id="CIAGAFJC"></a>Figure 3-1 Multiple active standby pairs on two hosts</p>
<img width="377" height="231" src="img/upgrade.gif" alt="Description of Figure 3-1 follows"/><br/>
<a id="sthref302" href="img_text/upgrade.htm">Description of &#34;Figure 3-1 Multiple active standby pairs on two hosts&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>This configuration can result in greater write throughput for cache groups and more balanced resource usage. See the next section, <a href="#CIAHEBBH">&#34;Sample configuration files: multiple active standby pairs on one pair of hosts&#34;</a>, for sample <code dir="ltr">sys.odbc.ini</code> entries and a sample <code dir="ltr">cluster.oracle.ini</code> file for this kind of configuration. (See <a class="olink TTREP264" href="../TTREP/cluster.htm#TTREP264">&#34;Configuring Oracle Clusterware management with the cluster.oracle.ini file&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for information about that file.)</p>
<p>The in-place rolling upgrade process for multiple active standby pairs on a single pair of hosts is similar in nature to the process of upgrading multiple active standby pairs on multiple pairs of hosts, discussed in <a href="#CIAEIBIB">&#34;Upgrades for multiple active standby pairs on many pairs of hosts&#34;</a>.</p>
<p>First, however, if the active and standby databases are mixed between the two hosts, switch all standby databases to one host and all active databases to the other host. Use the <code dir="ltr">ttCWAdmin -switch -dsn</code> <code dir="ltr"><span class="codeinlineitalic">DSN</span></code> command to switch active and standby databases between hosts. Once all the active databases are on one host and all the standby databases are on the other host, follow the steps below to perform the upgrade for the entire &#34;standby&#34; host.</p>
<p>Be aware that in-place upgrades affect the entire TimesTen installation and associated databases on one host.</p>
<ol>
<li>
<p>Verify that the standby databases run on the desired host. Use the <code dir="ltr">ttCWAdmin -status -dsn</code> <code dir="ltr"><span class="codeinlineitalic">DSN</span></code> command and the <code dir="ltr">ttCWAdmin -status</code> command.</p>
</li>
<li>
<p>Modify the Oracle Clusterware <code dir="ltr">stop</code> commands to stop all Master processes on the host where all the standby databases reside.</p>
</li>
<li>
<p>Modify the Oracle Clusterware <code dir="ltr">start</code> commands to start all Master processes on the host where all the standby databases reside.</p>
</li>
</ol>
<p>The following subsections contain related samples.</p>
<ul>
<li>
<p><a href="#CIAHEBBH">Sample configuration files: multiple active standby pairs on one pair of hosts</a></p>
</li>
<li>
<p><a href="#CIAGHJCF">Sample scripts: stopping and starting multiple standby processes on one host</a></p>
</li>
</ul>
<a id="CIAHEBBH"></a>
<div id="TTINS331" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sample configuration files: multiple active standby pairs on one pair of hosts</h4>
<p>The following are sample <code dir="ltr">sys.odbc.ini</code> entries:</p>
<pre dir="ltr">[databasea]
Driver=/scratch/terry/TimesTen/upgrade2/lib/libtten.so
DataStore=/scratch/terry/ds/databasea
PermSize=40
TempSize=32
PLSQL=1
DatabaseCharacterSet=WE8MSWIN1252
OracleNetServiceName=ORCL
 
[databaseb]
Driver=/scratch/terry/TimesTen/upgrade2/lib/libtten.so
DataStore=/scratch/terry/ds/databaseb
PermSize=40
TempSize=32
PLSQL=1
DatabaseCharacterSet=WE8MSWIN1252
OracleNetServiceName=ORCL

[databasec]
Driver=/scratch/terry/TimesTen/upgrade2/lib/libtten.so
DataStore=/scratch/terry/ds/databasec
PermSize=40
TempSize=32
PLSQL=1
DatabaseCharacterSet=WE8MSWIN1252
OracleNetServiceName=ORCL

[databased]
Driver=/scratch/terry/TimesTen/upgrade2/lib/libtten.so
DataStore=/scratch/terry/ds/databased
PermSize=40
TempSize=32
PLSQL=1
DatabaseCharacterSet=WE8MSWIN1252
OracleNetServiceName=ORCL
</pre>
<p>The following is a sample <code dir="ltr">cluster.oracle.ini</code> file:</p>
<pre dir="ltr">[databasea]
MasterHosts=host1,host2
CacheConnect=Y
 
[databaseb]
MasterHosts=host2,host1
CacheConnect=Y
 
[databasec]
MasterHosts=host2,host1
CacheConnect=Y
 
[databased]
MasterHosts=host1,host2
CacheConnect=Y
</pre>
<p>The <code dir="ltr">cluster.oracle.ini</code> file places one active database and one standby database on each host. This is accomplished by reversing the order of the host names specified for the <code dir="ltr">MasterHost</code> attribute.</p>
</div>
<!-- class="sect3" -->
<a id="CIAGHJCF"></a>
<div id="TTINS332" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sample scripts: stopping and starting multiple standby processes on one host</h4>
<p>Enter an Oracle Clusterware command similar to the following to obtain the names of the Oracle Clusterware Master, Daemon and Agent processes on the host of the standby database. It is suggested to filter the output through <code dir="ltr">grep TT</code>:</p>
<pre dir="ltr">crsctl status resource -n <span class="italic">standbyHostName</span> | grep TT
</pre>
<p>The following script is an example of a &#34;stop standby&#34; script for multiple databases on the same host that Oracle Clusterware manages. The TimesTen instance name is <code dir="ltr">upgrade2</code>. The instance administrator is <code dir="ltr">terry</code>. The host is <code dir="ltr">host2</code>. There are two standby databases: <code dir="ltr">databasea</code> and <code dir="ltr">databaseb</code>.</p>
<pre dir="ltr">crsctl stop resource TT_Master_upgrade2_terry_DATABASEA_0
crsctl stop resource TT_Master_upgrade2_terry_DATABASEB_1
crsctl stop resource TT_Daemon_upgrade2_terry_HOST2
crsctl stop resource TT_Agent_upgrade2_terry_HOST2
ttDaemonAdmin -stop
</pre>
<p>The following script is an example of a &#34;start standby&#34; script for the same configuration.</p>
<pre dir="ltr">ttCWAdmin -init -hosts localhost
crs start resource TT_Master_upgrade2_terry_DATABASEA_0
crs start resource TT_Master_upgrade2_terry_DATABASEB_1
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIADIGGD"></a>
<div id="TTINS333" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Sample in-place upgrade</h3>
<p>This section provides a sample in-place upgrade.</p>
<pre dir="ltr">% ./setup.sh
 
There is 1 TimesTen instance installed locally :
 
1) sb1122 (TimesTen11.2.2.4)
 
Of the following options :
 
  [1] Install a new instance
  [2] Upgrade an existing instance
  [3] Display information about an existing instance
  [q] Quit the installation
 
Which would you like to perform? [ 1 ] 2
 
NOTE: There is only one instance which can be upgraded.
 
Instance Name          : sb1122
Product Installed      : TimesTen11.2.2.4
Installation Directory : /scratch/sboand/TimesTen/sb1122
BitLevel               : 64
Component Installed    : Client/Server and DataManager
Daemon Port            : 33333
 
NOTE: Upgrading will remove the selected instance (and any directories or files
      under its path) and then re-install into the same directory. You will
      have the option to retain configuration files in :
      /scratch/sboand/TimesTen/sb1122/info 
 
Would you like to upgrade this instance? [ yes ]
 
NOTE: &lt;install_dir&gt;/info contains information related to the data
   stores that have been created with this release. If you remove
   /scratch/sboand/TimesTen/sb1122/info
   you will no longer be able to access your data stores,
   nor would you be able to restore nor migrate your data. 
 
   Would you also like to remove all files in &lt;install_dir&gt;/info? [ no ]
   Would you like to remove the DemoDataStore directory in    
/scratch/sboand/TimesTen/sb1122/info/DemoDataStore? [ yes ] no
   Would you also like to remove all files in &lt;install_dir&gt;/network/admin/samples? [ no ]
   /scratch/sboand/TimesTen/sb1122 Removed (retained &lt;install_dir&gt;/info)
TimesTen uninstall completed.
 
Of the three components:
  [1] Client/Server and Data Manager
  [2] Data Manager Only
  [3] Client Only
 
Which would you like to install? [ 1 ]
Upgrading installation in /scratch/sboand/TimesTen/sb1122
Where would you like to create the daemon home directory? 
[ /scratch/sboand/TimesTen/sb1122/info ]
 
The daemon logs will be located in /scratch/sboand/TimesTen/sb1122/info
Would you like to specify a different location for the daemon logs? [ no ]
Installing into /scratch/sboand/TimesTen/sb1122 ...
Uncompressing ...
 
NOTE: For security, we recommend that you restrict access to the
      TimesTen installation to members of a single OS group. Only members of
      that OS group will be allowed to perform direct mode connections to
      TimesTen, and only members of that OS group will be allowed to perform
      operations that access TimesTen data stores, TimesTen files and shared
      memory. The OS group defaults to the primary group of the instance
      administrator. You can default to this group, choose another OS group
      or you can make this instance world-accessible. If you choose to make
      this instance world-accessible, all database files and shared memory
      are readable and writable by all users.
 
Restrict access to the TimesTen installation to the group &#39;g900&#39;? [ yes ]
 
NOTE: Enabling PL/SQL will increase the size of some TimesTen libraries.
 
Would you like to enable PL/SQL for this instance? [ yes ]
 
Do you want to replace the ttendaemon.options file in
/scratch/sboand/TimesTen/sb1122/info? [ yes ] no
 
NOTE: The existing daemon options file has been retained. The default options
      file was written as
      /scratch/sboand/TimesTen/sb1122/info/ttendaemon.options.sb1122. 
 
In order to use the &#39;TimesTen Cache&#39; feature in any databases
created within this installation, you must set a value for the TNS_ADMIN
environment variable. It can be left blank, and a value can be supplied later
using &lt;install_dir&gt;/bin/ttModInstall.
 
A value for TNS_ADMIN (/scratch/sboand/TimesTen/sb1122/network/admin/samples) was
found in the previous daemon options file.
 
Please enter a value for TNS_ADMIN (s=skip)? 
[ /scratch/sboand/TimesTen/sb1122/network/admin/samples ] s
 
Installing server components ...
What is the TCP/IP port number that you want the TimesTen Server to listen on? 
[ 33334 ]
Do you want to install QuickStart and the TimesTen Documentation? [ no ]
Would you like to install the documentation (without QuickStart)? [ yes ] no
 
An existing cluster.oracle.ini file has been detected in
/scratch/sboand/TimesTen/sb1122/info.
 
Would you like to replace the existing cluster.oracle.ini file? [ no ]
 
The existing cluster.oracle.ini file will be used.
The sample cluster.oracle.ini file will be saved as
&#39;/scratch/sboand/TimesTen/sb1122/info/cluster.oracle.ini.tt1122&#39;.
 
An existing sys.odbc.ini file has been detected in
/scratch/sboand/TimesTen/sb1122/info.
 
NOTE: You may not be able to successfully run the demos if you keep your
      existing sys.odbc.ini file. If you choose to replace the existing
      file, a backup will be made automatically.
 
Would you like to replace the existing
/scratch/sboand/TimesTen/sb1122/info/sys.odbc.ini file ? [ no ]
 
The existing sys.odbc.ini file will be used.
The sample sys.odbc.ini file will be saved as
&#39;/scratch/sboand/TimesTen/sb1122/info/sys.odbc.ini.sb1122&#39;.
 
An existing tnsnames.ora file has been detected in
/scratch/sboand/TimesTen/sb1122/network/admin/samples.
 
Would you like to replace the existing
/scratch/sboand/TimesTen/sb1122/network/admin/samples/tnsnames.ora file ? [ no ]
 
The existing tnsnames.ora file will be used.
The sample tnsnames.ora file will be saved as
&#39;/scratch/sboand/TimesTen/sb1122/network/admin/samples/tnsnames.ora.tt1122&#39;.
 
Installing client components ...
 
An existing sys.ttconnect.ini file has been detected in
/scratch/sboand/TimesTen/sb1122/info.
 
NOTE: You may not be able to successfully run the Client/Server demos if you keep
      your existing sys.ttconnect.ini file. If you choose to replace the existing
      file, a backup will be made automatically.
 
Would you like to replace the existing
/scratch/sboand/TimesTen/sb1122/info/sys.ttconnect.ini file ? [ no ]
 
The existing sys.ttconnect.ini file will be used.
The sample sys.ttconnect.ini file will be saved as
&#39;/scratch/sboand/TimesTen/sb1122/info/sys.ttconnect.ini.sb1122&#39;.
 
Would you like to use TimesTen Replication with Oracle Clusterware? [ no ] yes
 
A Clusterware installation was detected in /scratch/oracle/crs/app/11.2.0/grid
 
Please provide the path to the Oracle Clusterware installation on this machine
(s=skip)? [ /scratch/oracle/crs/app/11.2.0/grid ]
 
NOTE: The TimesTen Clusterware agent port must be the same on all nodes
      of the cluster. Please refer to the TimesTen documentation for
      additional information.
 
Please enter a port number for the TimesTen Clusterware agent? [ 33339 ]
 
Executing &#39;/scratch/oracle/crs/app/11.2.0/grid/bin/olsnodes&#39; ...
Oracle Clusterware is currently configured on the following nodes :
 
1. host1
2. host2
3. host3
4. host4
5. host5
 
NOTE: By default, all of the nodes listed above will be added to the TimesTen
      Replication with Oracle Clusterware configuration. You can also
      specify your own list of nodes based on the list above.
 
Would you like to specify a node list for TimesTen Replication with Oracle
Clusterware? [ no ] yes
From the nodes above, please provide a list of nodes that you would like to add
(ex: 1,2 or skip)? [  ] 4,5
 
TimesTen Replication with Oracle Clusterware will be configured for the following nodes :
 
host4
host5
 
Are you sure? [ yes ]
Overwrite the existing TimesTen Clusterware options file? [ no ]
The new TimesTen Clusterware options file will be located here :
        /scratch/sboand/TimesTen/sb1122/info/ttcrsagent.options.tt1122.
 
NOTE: The TimesTen daemon startup/shutdown scripts have not been installed.
 
Run the &#39;setuproot&#39; script :
        cd /scratch/sboand/TimesTen/sb1122/bin
        ./setuproot -install
This will move the TimesTen startup script into its appropriate location.
 
The startup script is currently located here :
  &#39;/scratch/sboand/TimesTen/sb1122/startup/tt_sb1122&#39;.
 
The documentation was not installed.
To manually install the documentation, run the command &#39;setup.sh -installDoc&#39;
 
The 11.2.2.6 Release Notes are located here :
  &#39;/scratch/sboand/TimesTen/sb1122/README.html&#39;
 
Starting the daemon ...
TimesTen Daemon startup OK.
End of TimesTen installation.
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACHGCGA"></a>
<div id="TTINS305" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Upgrades when using parallel replication<a id="sthref303"></a><a id="sthref304"></a></h2>
<p>Automatic parallel replication is enabled by default beginning in TimesTen release 11.2.2.2.0. In previous releases of 11.2.2 and in releases of 11.2.1, user-specified replication was available, but automatic parallel replication was not available. Automatic parallel replication with disabled commit dependencies is available in TimesTen release 11.2.2.8.0.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The values for the <a class="olink TTREF750" href="../TTREF/attribute.htm#TTREF750"><code dir="ltr">ReplicationApplyOrdering</code></a> attribute, documented in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>, have changed. Beginning in release 11.2.2.2.0, a value of 0 enables automatic parallel replication. Before release 11.2.2.2.0, a value of 0 disabled user-specified parallel replication. Beginning in release 11.2.2.8.0, a value of 2 enables automatic parallel replication with disabled commit dependencies.</div>
<p>You can perform an online or offline upgrade from a database that has not enabled parallel replication to a database of this release that has enabled parallel replication (with or without disabled commit dependencies).</p>
<p>The rest of this section discusses additional considerations along with scenarios where an offline upgrade is required.</p>
<div id="TTINS311" class="sect2"><a id="sthref305"></a>
<h3 class="sect2">Considerations regarding parallel replication</h3>
<p>Be aware of the following considerations when upgrading systems that use parallel replication:</p>
<ul>
<li>
<p>Consider an active standby pair without parallel replication enabled. To upgrade the TimesTen instances to release 11.2.2.3.0 or higher and use automatic parallel replication (default value of 0 for the <code dir="ltr">ReplicationApplyOrdering</code> attribute), simply use the appropriate procedure for an active standby pair upgrade. See <a href="#CHDDADAE">&#34;Performing an upgrade with active standby pair replication&#34;</a>.</p>
</li>
<li>
<p>Consider an active standby pair with no cache groups and automatic parallel replication enabled (value of 0 for the <code dir="ltr">ReplicationApplyOrdering</code> attribute). To upgrade the TimesTen instances to release 11.2.2.8.0 or higher to use automatic parallel replication with disabled commit dependencies (value of 2 for the <code dir="ltr">ReplicationApplyOrdering</code> attribute), use the procedure for an active standby pair online major upgrade. See <a href="#CHDHBCIF">&#34;Online major upgrade for active standby pair&#34;</a>. The value for the <code dir="ltr">ReplicationApplyOrdering</code> attribute must be changed from 0 to 2 before restoring any of the databases. For example:</p>
<pre dir="ltr">ttMigrate -r &#34;DSN=master2;ReplicationApplyOrdering=2;ReplicationParallelism=2;
  LogBufParallelism=4&#34; master2.bak
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You may upgrade a TimesTen database with a replication scheme with <code dir="ltr">ReplicationApplyOrdering=2</code> to a database with <code dir="ltr">ReplicationApplyOrdering=0</code> by using the same active standby pair online major upgrade procedure.
<p>Automatic parallel replication with disabled commit dependencies supports only asynchronous active standby pairs with no cache groups. For more information, see <a class="olink TTREP423" href="../TTREP/setup.htm#TTREP423">&#34;Configuring parallel replication&#34;</a> in the <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.</p>
</div>
</li>
<li>
<p>You cannot replicate between databases that have the <code dir="ltr">ReplicationParallelism</code> attribute set to greater than 1 but have different values for the <code dir="ltr">ReplicationApplyOrdering</code> attribute.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="TTINS310" class="sect2"><a id="sthref306"></a>
<h3 class="sect2">Scenarios that require an offline upgrade</h3>
<p>You must use an offline upgrade for these scenarios:</p>
<ul>
<li>
<p>Moving from user-specified parallel replication to automatic parallel replication. For example, from a release preceding 11.2.2.3.0 to release 11.2.2.3.0 or higher with the <code dir="ltr">ReplicationApplyOrdering</code> attribute set to the default value (<code dir="ltr">0</code>).</p>
</li>
<li>
<p>Moving from an automatic parallel replication environment to another automatic parallel replication environment with a different number of tracks, as indicated by the value of the <code dir="ltr">ReplicationParallelism</code> attribute.</p>
</li>
<li>
<p>Moving between major releases (such as from 11.2.1.<span class="italic">x.x</span> to 11.2.2.<span class="italic">x.x</span>) and using asynchronous writethrough cache groups.</p>
</li>
<li>
<p>Moving from regular replication with asynchronous writethrough in 11.2.1.<span class="italic">x.x</span> to automatic parallel replication with asynchronous writethrough in 11.2.2.<span class="italic">x.x</span>.</p>
</li>
</ul>
<p>For offline upgrades, you can use the procedure described in <a href="#CACICGFA">&#34;Performing an offline upgrade&#34;</a>. Alternatively, you can upgrade one side and use the <code dir="ltr">ttRepAdmin -duplicate -recreate</code> command to create the new database.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACCFBBB"></a>
<div id="TTINS243" class="sect1">
<h2 class="sect1">Record of upgrades with replication configured</h2>
<p><a id="sthref307"></a>If replication is configured on a database, a new set of tables with the prefix <code dir="ltr">ttrep_schema_version-</code> is created each time the <code dir="ltr">ttMigrate -r</code> command is used. These tables provide a history of the replication scheme from release to release.</p>
<p>These tables do not take up much space and are helpful when debugging upgrade problems. However, you can drop these tables if you do not experience problems with replication after running <code dir="ltr">ttMigrate</code>.</p>
<p>For example, after two migrations, the database might contain tables like this:</p>
<pre dir="ltr">TTREP_SCHEMA_VERSION_004.REPELEMENTS
TTREP_SCHEMA_VERSION_004.REPLICATIONS
TTREP_SCHEMA_VERSION_004.REPPEERS
TTREP_SCHEMA_VERSION_004.REPSTORES
TTREP_SCHEMA_VERSION_004.REPSUBSCRIPTIONS
TTREP_SCHEMA_VERSION_004.REPTABLES
TTREP_SCHEMA_VERSION_004.TTSTORES
TTREP_SCHEMA_VERSION_005.REPELEMENTS
TTREP_SCHEMA_VERSION_005.REPLICATIONS
TTREP_SCHEMA_VERSION_005.REPPEERS
TTREP_SCHEMA_VERSION_005.REPSTORES
TTREP_SCHEMA_VERSION_005.REPSUBSCRIPTIONS
TTREP_SCHEMA_VERSION_005.REPTABLES
TTREP_SCHEMA_VERSION_005.TTSTORES
</pre></div>
<!-- class="sect1" -->
<a id="CACHCEIB"></a>
<div id="TTINS240" class="sect1">
<h2 class="sect1">Performing a Client/Server online upgrade</h2>
<p><a id="sthref308"></a><a id="sthref309"></a>TimesTen Server can talk directly to all user applications linked with TimesTen Client ODBC driver release 6.0 or higher. There are at least the following possible ways to upgrade a TimesTen Client/Server installation, depending on your requirements for client access to the database.</p>
<ul>
<li>
<p>If you do not need the database in the TimesTen instance being upgraded to be available continuously to your client applications, you may simply stop the old server, perform the migration of the database using <code dir="ltr">ttMigrate</code>, and then start the new release of the server, which should be configured to listen on the same server port.</p>
</li>
<li>
<p>If it is critical that the database be continuously available to the client applications, you may use the procedure outlined in <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a> to keep a second copy of the database available during the migration of the first copy.</p>
</li>
</ul>
<div id="TTINS241" class="sect2"><a id="sthref310"></a>
<h3 class="sect2">Client/Server online upgrade</h3>
<p>To perform an online upgrade of a TimesTen Client/Server system to a new major release (such as from 11.2.1.<span class="italic">x.x</span> to 11.2.2.<span class="italic">x.x</span>) with minimal reconfiguration, perform the following steps:</p>
<ol>
<li>
<p>Stop the TimesTen Server on the old release of TimesTen. From this point until the TimesTen Server for the new release is started, your client applications do not have access to the database. Any attempted updates to the database by the clients fail, and you should stop user applications if necessary.</p>
</li>
<li>
<p>Install the new release of TimesTen. At installation time, configure the server to listen on the same port as the old release of TimesTen.</p>
</li>
<li>
<p>Use <code dir="ltr">ttMigrate</code> to migrate the database from the old release to the new release. See <a href="#CIACDJDD">&#34;Moving to a different major release of TimesTen&#34;</a> for an example of this procedure.</p>
</li>
<li>
<p>Start the new release of TimesTen Server. The client applications now have access to the post-upgrade databases.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
Since both releases of TimesTen Server have been configured to listen on the same port in this procedure, to restart the server for the old release you must first configure it to listen on a different port.</div>
</div>
<!-- class="sect2" -->
<div id="TTINS242" class="sect2"><a id="sthref311"></a>
<h3 class="sect2">Client/Server online upgrade with continuous access to the database</h3>
<p>The migration of a database using <code dir="ltr">ttMigrate</code> can be a long process if your databases are very large. If it is critical that your client applications have nearly continuous access to the database during the Client/Server online upgrade procedure, you may incorporate the procedure for performing an online upgrade with replication by following these steps:</p>
<ol>
<li>
<p>Install the new release of TimesTen, making sure to configure TimesTen Server to listen on the same port as the old release. The installation script asks whether you would like to start the new server. You must answer &#34;no&#34;.</p>
</li>
<li>
<p>Follow the steps in <a href="#CACJCEDE">&#34;Performing an online upgrade with replication&#34;</a> to upgrade the TimesTen instance for one copy of the database. The client applications remain connected to the other, non-upgraded copy of the database.</p>
</li>
<li>
<p>Disconnect all clients from the old release of the database.</p>
</li>
<li>
<p>Stop the old release of TimesTen Server.</p>
</li>
<li>
<p>Wait for all updates to finish replicating from the old release of the database to the new release.</p>
</li>
<li>
<p>Start the new release of TimesTen Server. It begins listening on the same port as the old release, and client applications may now connect to the new release of the database with no change to their configurations.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5024">
<tr>
<td class="cellalignment5033">
<table class="cellalignment5029">
<tr>
<td class="cellalignment5028"><a href="migrate.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5028"><a href="license.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5036">
<table class="cellalignment5027">
<tr>
<td class="cellalignment5028"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5028"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5028"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5028"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5028"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5028"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>