<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-128"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Overview%20of%20Supplied%20LOB%20APIs"></a><title>Overview of Supplied LOB APIs</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="programmatic environments for LOBs, programmatic environments, compared, available functions, interfaces for LOBs, see programmatic environments, LOBs, interfaces, See programmatic environments, DBMS_LOB package, to work with LOBs, using, provide LOB locator before invoking, character set ID, functions/procedures to modify BLOB, CLOB, and NCLOB, BLOBs, modify using DBMS_LOB, CLOBs, NCLOBs, functions/procedures to read/examine internal and external LOBs, BFILEs, reading with DBMS_LOB, for temporary LOBs, temporary LOBs, DBMS_LOB available functions/procedures, read-only functions/procedures for BFILEs, DBMS_LOB read-only procedures, opening/closing internal and external LOBs, OCI, using to work LOBs, Oracle Call Interface, See OCI, prefetching data, CSID parameter, setting OCILobRead and OCILobWrite to OCI_UCS2ID, See CSID parameter, setting, overrides for NLS_LANG variable, setting OCILobRead2(), OCILobWrite2() to OCI_UCS2ID, character set rules, fixed-width and varying-width, OCILobFileGetLength, CLOB and NCLOB input and output length, OCILobRead2(), varying-width CLOB and NCLOB input and amount amounts, OCILobWrite2(), NCLOB parameters, functions to modify internal LOB values, functions to read or examine internal and external LOB values, OCI functions to read/examine values, functions for temporary LOBs, OCI functions, functions for BFILEs, OCI read-only functions, LOB locator functions, locators, Lob-buffering functions, LOB buffering, functions to open/close internal and external LOBs, OCCI, LOB functionality, class, offset and amount parameter rules, fixed-width character sets, OCCI Clob class, read, OCCI Blob class, write, Pro*C/C++ precompiler, modifying internal LOB values, embedded SQL statements, See Pro*C/C++ precompiler and Pro*COBOL precompiler, reading or examining internal and external LOB values, statements for temporary LOBs, Pro*C/C++ precompiler embedded SQL statements, statements for BFILEs, Pro*C/C++ precompiler statements, opening and closing internal LOBs and external LOBs (BFILEs), using Pro*C/C++ precompiler to open and close, Pro*COBOL precompiler, providing an allocated input locator, providing in Pro*COBOL precompiler, reading or examining internal and external LOBs, Pro*COBOL precompiler statements, Pro*COBOL precompiler embedded SQL statements, locators, JDBC, modifyng internal LOBs with Java using oracle.sql.BLOB/CLOB, oracle.sql.BLOB, See JDBC, oracle.sql.CLOBs, encapsulating locators, reading internal LOBs and external LOBs (BFILEs) with Java, class, See JDBC, BFILE class, See JDBC, BLOB and CLOB classes, BFILE class, calling DBMS_LOB package, LOB prefetching, Zero-copy Input/Output for SecureFiles LOBs, referencing LOBs, OracleResultSet, See JDBC, OraclePreparedStatement, See JDBC, using OracleResultSet to reference LOBs, using OUT parameter from OraclePreparedStatement to reference LOBs, syntax references, modifying BLOB values, using JDBC to modify, using oracle.sql.BLOB methods to modify, for modifying BLOB values, reading/examining BLOB values, using JDBC to read/examine BLOB values, reading/examining BLOB values, methods/properties for BLOB-buffering, BLOB-buffering with JDBC, BLOB-buffering, See JDBC, oracle.sql.BLOBs, BLOB-buffering, modifying CLOB values, oracle.sql.CLOB, reading/examining CLOB values, reading/examining with JDBC, JDBC methods to read/examine CLOB values, methods/properties for CLOBs, buffering, CLOB-buffering, See JDBC, reading/examining external LOB (BFILE) values, using JDBC to read/examine, oracle.sql.BFILE, JDBC methods to read/examine BFILEs, BFILE-buffering, BFILE-buffering, See JDBC, opening and closing LOBs, opening and closing LOBs, using JDBC, open and close, JDBC replacements for, opening and closing using JDBC, opening and closing CLOBs, opening and closing BFILEs, OpenCloseLob.java example, trimming LOBs using JDBC, trimming LOBs, streaming APIs, using JDBC and LOBs, streaming APIs for LOBs, CLOB streaming APIs, using JDBC and CLOBs, streaming APIs, BFILE streaming APIs, using JDBC and BFILEs, NewStreamLob.java, newStreamLob.java, empty LOBs, empty LOBs, creating using JDBC, JDBC and Empty LOBs, OraOLEDB, OLEDB"/>
<meta name="dcterms.created" content="2017-03-16T22:27:47Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SecureFiles and Large Objects Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17605-12"/>
<meta name="dcterms.isVersionOf" content="ADLOB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2015, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="adlob_design.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adlob_performance.htm" title="Next" type="text/html"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-54BD371D-4486-48FD-BBCE-6374D03E5697"></a> <span id="PAGE" style="display:none;">20/34</span> <!-- End Header -->
<a id="ADLOB45356"></a>
<h1 id="ADLOB-GUID-54BD371D-4486-48FD-BBCE-6374D03E5697" class="sect1"><span class="enumeration_chapter">13</span> Overview of Supplied LOB APIs</h1>
<div>
<p>There are APIs supplied to support LOBs.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="adlob_api_overview.htm#GUID-95AD6D66-6C1D-4C83-B58B-9BF608C7331E">Programmatic Environments That Support LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00">Comparing the LOB Interfaces</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-5A037264-4C0D-433A-8E0C-CCAD4DBE790A">Using PL/SQL (DBMS_LOB Package) to Work With LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-345A592B-6F3A-4704-9F1B-9C2C56C2F360">Using OCI to Work With LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-EECBCC19-422C-49B0-BF2D-18D6557B4324">Using C++ (OCCI) to Work With LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-7B44B1D4-2B43-42F0-9744-2C0AF791A9F8">Using C/C++ (Pro*C) to Work With LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-71474D94-A041-405B-B5F0-D20E4FE60637">Using COBOL (Pro*COBOL) to Work With LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-02CAA51A-FD04-4A40-8227-0B9108FAED8E">Using Java (JDBC) to Work With LOBs</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-62F1EDEE-5342-4721-84A7-872200777CB4">Oracle Provider for OLE DB (OraOLEDB)</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-A67F4001-E9B6-4905-86FF-7CC364F8EED4">Overview of Oracle Data Provider for .NET (ODP.NET)</a></p>
</li>
</ul>
</div>
<a id="ADLOB45358"></a><a id="ADLOB45357"></a>
<div class="props_rev_3"><a id="GUID-95AD6D66-6C1D-4C83-B58B-9BF608C7331E"></a>
<h2 id="ADLOB-GUID-95AD6D66-6C1D-4C83-B58B-9BF608C7331E" class="sect2">Programmatic Environments That Support LOBs</h2>
<div>
<p><a href="adlob_api_overview.htm#GUID-95AD6D66-6C1D-4C83-B58B-9BF608C7331E__g1039992" title="This table is described in the preceding text">Table 13-1</a> lists the programmatic environments that support LOB functionality.</p>
<div class="infoboxnotealso" id="GUID-95AD6D66-6C1D-4C83-B58B-9BF608C7331E__GUID-9AD9B3FB-AAB0-49DF-8303-BC10D25C893D">
<p class="notep1">See Also:</p>
<p>APIs for supported LOB operations are described in detail in the following chapters:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="adlob_creating.htm#GUID-7B3D15D3-A182-4ED1-A265-8EE15E793C46">Operations Specific to Persistent and Temporary LOBs</a></p>
</li>
<li>
<p><a href="adlob_lob_ops.htm#GUID-5BEE64AC-5528-45DC-AB57-A8EDE8E4DE65" title="You can convert a BLOB instance to a CLOB using the PL/SQL procedure DBMS_LOB.CONVERTTOCLOB.">Using LOB APIs</a></p>
</li>
<li>
<p><a href="adlob_bfile_ops.htm#GUID-043A9B91-69C8-44D4-A38A-E872B0A2B9A9" title="You can determine whether a pattern exists in a BFILE using the INSTRoperation.">LOB APIs for BFILE Operations</a></p>
</li>
</ul>
</div>
<div class="tblformalwide" id="GUID-95AD6D66-6C1D-4C83-B58B-9BF608C7331E__g1039992">
<p class="titleintable">Table 13-1 Programmatic Environments That Support LOBs</p>
<table class="cellalignment2809" title=" Programmatic Environments That Support LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2803" id="d37211e240">Language</th>
<th class="cellalignment2803" id="d37211e243">Precompiler or Interface Program</th>
<th class="cellalignment2838" id="d37211e246">Syntax Reference</th>
<th class="cellalignment2838" id="d37211e249">In This Chapter See...</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e254" headers="d37211e240">
<p><a id="d37211e256" class="indexterm-anchor"></a>PL/SQL</p>
</td>
<td class="cellalignment2806" headers="d37211e254 d37211e243">
<p>DBMS_LOB Package</p>
</td>
<td class="cellalignment2839" headers="d37211e254 d37211e246">
<p><a class="olink ARPLS" target="_blank" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e254 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-5A037264-4C0D-433A-8E0C-CCAD4DBE790A">Using PL/SQL (DBMS_LOB Package) to Work With LOBs</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e276" headers="d37211e240">
<p><a id="d37211e278" class="indexterm-anchor"></a>C</p>
</td>
<td class="cellalignment2806" headers="d37211e276 d37211e243">
<p>Oracle Call Interface for C (OCI)</p>
</td>
<td class="cellalignment2839" headers="d37211e276 d37211e246">
<p><a class="olink LNOCI" target="_blank" href="../LNOCI/toc.htm"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e276 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-345A592B-6F3A-4704-9F1B-9C2C56C2F360">Using OCI to Work With LOBs</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e298" headers="d37211e240">
<p>C++</p>
</td>
<td class="cellalignment2806" headers="d37211e298 d37211e243">
<p>Oracle Call Interface for C++ (OCCI)</p>
</td>
<td class="cellalignment2839" headers="d37211e298 d37211e246">
<p><a class="olink LNCPP" target="_blank" href="../LNCPP/toc.htm"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e298 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-EECBCC19-422C-49B0-BF2D-18D6557B4324">Using C++ (OCCI) to Work With LOBs</a>&#34;</span> .</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e320" headers="d37211e240">
<p><a id="d37211e322" class="indexterm-anchor"></a>C/C++</p>
</td>
<td class="cellalignment2806" headers="d37211e320 d37211e243">
<p>Pro*C/C++ Precompiler</p>
</td>
<td class="cellalignment2839" headers="d37211e320 d37211e246">
<p><a class="olink LNPCC" target="_blank" href="../LNPCC/toc.htm"><span class="italic">Pro*C/C++ Programmer&#39;s Guide</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e320 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-7B44B1D4-2B43-42F0-9744-2C0AF791A9F8">Using C/C++ (Pro*C) to Work With LOBs</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e342" headers="d37211e240">
<p><a id="d37211e344" class="indexterm-anchor"></a>COBOL</p>
</td>
<td class="cellalignment2806" headers="d37211e342 d37211e243">
<p>Pro*COBOL Precompiler</p>
</td>
<td class="cellalignment2839" headers="d37211e342 d37211e246">
<p><a class="olink LNPCB" target="_blank" href="../LNPCB/toc.htm"><span class="italic">Pro*COBOL Programmer&#39;s Guide</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e342 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-71474D94-A041-405B-B5F0-D20E4FE60637">Using COBOL (Pro*COBOL) to Work With LOBs</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e364" headers="d37211e240">
<p><a id="d37211e366" class="indexterm-anchor"></a>Java</p>
</td>
<td class="cellalignment2806" headers="d37211e364 d37211e243">
<p>JDBC Application Programmatic Interface (API)</p>
</td>
<td class="cellalignment2839" headers="d37211e364 d37211e246">
<p><a class="olink JJDBC" target="_blank" href="../JJDBC/toc.htm"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a>.</p>
</td>
<td class="cellalignment2839" headers="d37211e364 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-02CAA51A-FD04-4A40-8227-0B9108FAED8E">Using Java (JDBC) to Work With LOBs</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e387" headers="d37211e240">
<p>ADO/OLE DB</p>
</td>
<td class="cellalignment2806" headers="d37211e387 d37211e243">
<p>Oracle Provider for OLE DB (OraOLEDB).</p>
</td>
<td class="cellalignment2839" headers="d37211e387 d37211e246">
<p><a class="olink OLEDB" target="_blank" href="../OLEDB/toc.htm"><span class="italic">Oracle Provider for OLE DB Developer&#39;s Guide for Microsoft Windows</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e387 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-62F1EDEE-5342-4721-84A7-872200777CB4">Oracle Provider for OLE DB (OraOLEDB)</a>&#34;</span></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2806" id="d37211e406" headers="d37211e240">
<p>.NET</p>
</td>
<td class="cellalignment2806" headers="d37211e406 d37211e243">
<p>Oracle Data Provider for .NET (ODP.NET)</p>
</td>
<td class="cellalignment2839" headers="d37211e406 d37211e246">
<p><a class="olink ODPNT" target="_blank" href="../ODPNT/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer&#39;s Guide for Microsoft Windows</span></a></p>
</td>
<td class="cellalignment2839" headers="d37211e406 d37211e249">
<p><span class="q">&#34;<a href="adlob_api_overview.htm#GUID-A67F4001-E9B6-4905-86FF-7CC364F8EED4">Overview of Oracle Data Provider for .NET (ODP.NET)</a> &#34;</span></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45360"></a><a id="ADLOB45361"></a><a id="ADLOB45359"></a>
<div class="props_rev_3"><a id="GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00"></a>
<h2 id="ADLOB-GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00" class="sect2">Comparing the LOB Interfaces</h2>
<div>
<p><a href="adlob_api_overview.htm#GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00__g1038530" title="This table is described in the preceding text">Table 13-2</a> and <a href="adlob_api_overview.htm#GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00__g1038719" title="This table is described in the preceding text">Table 13-3</a> compare the eight LOB programmatic interfaces by listing their functions and methods used to operate on LOBs. The tables are split in two simply to accommodate all eight interfaces. The functionality of the interfaces, with regards to LOBs, is described in the following sections.</p>
<div class="tblformalwide" id="GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00__g1038530">
<p class="titleintable">Table 13-2 Comparing the LOB Interfaces, 1 of 2</p>
<table class="cellalignment2809" title=" Comparing the LOB Interfaces, 1 of 2 " summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2810" id="d37211e527">PL/SQL: DBMS_LOB (dbmslob.sql)</th>
<th class="cellalignment2841" id="d37211e535">C (OCI)(ociap.h)</th>
<th class="cellalignment2841" id="d37211e544">C++ (OCCI) (occiData.h). Also for Clob and Bfile classes.</th>
<th class="cellalignment2826" id="d37211e554">Pro*C/C++ and Pro*COBOL</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e572" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.COMPARE</code></p>
</td>
<td class="cellalignment2845" headers="d37211e572 d37211e535">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e572 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e572 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e586" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.INSTR</code></p>
</td>
<td class="cellalignment2845" headers="d37211e586 d37211e535">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e586 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e586 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e600" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.SUBSTR</code></p>
</td>
<td class="cellalignment2845" headers="d37211e600 d37211e535">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e600 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e600 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e614" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.APPEND</code></p>
</td>
<td class="cellalignment2845" headers="d37211e614 d37211e535">
<p><code class="codeph">OCILobAppend()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e614 d37211e544">
<p><code class="codeph">Blob.append()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e614 d37211e554">
<p><code class="codeph">APPEND</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e631" headers="d37211e527">
<p>N/A (use PL/SQL assign operator)</p>
</td>
<td class="cellalignment2845" headers="d37211e631 d37211e535">
<p><code class="codeph">OCILobAssign()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e631 d37211e544">
<p>&nbsp;</p>
</td>
<td class="cellalignment2828" headers="d37211e631 d37211e554">
<p><code class="codeph">ASSIGN</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e646" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e646 d37211e535">
<p><code class="codeph">OCILobCharSetForm()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e646 d37211e544">
<p><code class="codeph">Clob.getCharsetForm</code> (<code class="codeph">CLOB</code> only)</p>
</td>
<td class="cellalignment2828" headers="d37211e646 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e665" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e665 d37211e535">
<p><code class="codeph">OCILobCharSetId()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e665 d37211e544">
<p><code class="codeph">Clob.getCharsetId()</code></p>
<p>(<code class="codeph">CLOB</code> only)</p>
</td>
<td class="cellalignment2828" headers="d37211e665 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e685" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.CLOSE</code></p>
</td>
<td class="cellalignment2845" headers="d37211e685 d37211e535">
<p><code class="codeph">OCILobClose()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e685 d37211e544">
<p><code class="codeph">Blob.close()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e685 d37211e554">
<p><code class="codeph">CLOSE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e702" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e702 d37211e535">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e702 d37211e544">
<p><code class="codeph">Clob.closeStream()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e702 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e716" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.COPY</code></p>
</td>
<td class="cellalignment2845" headers="d37211e716 d37211e535">
<p><code class="codeph">OCILobCopy2()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e716 d37211e544">
<p><code class="codeph">Blob.copy()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e716 d37211e554">
<p><code class="codeph">COPY</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e733" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e733 d37211e535">
<p><code class="codeph">OCILobDisableBuffering()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e733 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e733 d37211e554">
<p><code class="codeph">DISABLE BUFFERING</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e749" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e749 d37211e535">
<p><code class="codeph">OCILobEnableBuffering()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e749 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e749 d37211e554">
<p><code class="codeph">ENABLE BUFFERING</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e764" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.ERASE</code></p>
</td>
<td class="cellalignment2845" headers="d37211e764 d37211e535">
<p><code class="codeph">OCILobErase2()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e764 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e764 d37211e554">
<p><code class="codeph">ERASE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e780" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FILECLOSE</code></p>
</td>
<td class="cellalignment2845" headers="d37211e780 d37211e535">
<p><code class="codeph">OCILobFileClose()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e780 d37211e544">
<p><code class="codeph">Clob.close()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e780 d37211e554">
<p><code class="codeph">CLOSE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e797" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FILECLOSEALL</code></p>
</td>
<td class="cellalignment2845" headers="d37211e797 d37211e535">
<p><code class="codeph">OCILobFileCloseAll()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e797 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e797 d37211e554">
<p><code class="codeph">FILE CLOSE ALL</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e813" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FILEEXISTS</code></p>
</td>
<td class="cellalignment2845" headers="d37211e813 d37211e535">
<p><code class="codeph">OCILobFileExist()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e813 d37211e544">
<p><code class="codeph">Bfile.fileExists()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e813 d37211e554">
<p><code class="codeph">DESCRIBE [FILEEXISTS]</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e830" headers="d37211e527">
<p>DBMS_LOB.GETCHUNKSIZE</p>
</td>
<td class="cellalignment2845" headers="d37211e830 d37211e535">
<p>OCILobGetChunkSize()</p>
</td>
<td class="cellalignment2845" headers="d37211e830 d37211e544">
<p>Blob.getChunkSize()</p>
</td>
<td class="cellalignment2828" headers="d37211e830 d37211e554">
<p>DESCRIBE [CHUNKSIZE]</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e843" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.GET_STORAGE_LIMIT</code></p>
</td>
<td class="cellalignment2845" headers="d37211e843 d37211e535">
<p><code class="codeph">OCILobGetStorageLimit()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e843 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e843 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e858" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.GETOPTIONS</code></p>
</td>
<td class="cellalignment2845" headers="d37211e858 d37211e535">
<p><code class="codeph">OCILobGetOptions()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e858 d37211e544">
<p><code class="codeph">Blob</code>/<code class="codeph">Clob</code>::<code class="codeph">getOptions</code></p>
</td>
<td class="cellalignment2828" headers="d37211e858 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e880" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FILEGETNAME</code></p>
</td>
<td class="cellalignment2845" headers="d37211e880 d37211e535">
<p><code class="codeph">OCILobFileGetName()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e880 d37211e544">
<p><code class="codeph">Bfile.getFileName()</code> and <code class="codeph">Bfile.getDirAlias()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e880 d37211e554">
<p><code class="codeph">DESCRIBE</code> <span class="italic"><code class="codeph">DIRECTORY</code></span>, <span class="italic"><code class="codeph">FILENAME</code></span></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e908" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FILEISOPEN</code></p>
</td>
<td class="cellalignment2845" headers="d37211e908 d37211e535">
<p><code class="codeph">OCILobFileIsOpen()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e908 d37211e544">
<p><code class="codeph">Bfile.isOpen()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e908 d37211e554">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">ISOPEN</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e928" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FILEOPEN</code></p>
</td>
<td class="cellalignment2845" headers="d37211e928 d37211e535">
<p><code class="codeph">OCILobFileOpen()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e928 d37211e544">
<p><code class="codeph">Bfile.open()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e928 d37211e554">
<p><code class="codeph">OPEN</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e946" headers="d37211e527">
<p>N/A (use <span>BFILENAME</span> operator)</p>
</td>
<td class="cellalignment2845" headers="d37211e946 d37211e535">
<p><code class="codeph">OCILobFileSetName()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e946 d37211e544">
<p><code class="codeph">Bfile.setName()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e946 d37211e554">
<p><code class="codeph">FILE SET</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e965" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e965 d37211e535">
<p><code class="codeph">OCILobFlushBuffer()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e965 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e965 d37211e554">
<p><code class="codeph">FLUSH BUFFER</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e980" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.GETLENGTH</code></p>
</td>
<td class="cellalignment2845" headers="d37211e980 d37211e535">
<p><code class="codeph">OCILobGetLength2()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e980 d37211e544">
<p><code class="codeph">Blob.length()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e980 d37211e554">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">LENGTH</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1000" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e1000 d37211e535">
<p><code class="codeph">OCILobIsEqual()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1000 d37211e544">
<p>Use operator = ( )=/!=</p>
</td>
<td class="cellalignment2828" headers="d37211e1000 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1014" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.ISOPEN</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1014 d37211e535">
<p><code class="codeph">OCILobIsOpen()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1014 d37211e544">
<p><code class="codeph">Blob.isOpen()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1014 d37211e554">
<p><code class="codeph">DESCRIBE ISOPEN</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1031" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.LOADFROMFILE</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1031 d37211e535">
<p><code class="codeph">OCILobLoadFromFile2()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1031 d37211e544">
<p>Use <code class="codeph">overloadedcopy()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1031 d37211e554">
<p>LOAD FROM FILE</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1049" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e1049 d37211e535">
<p><code class="codeph">OCILobLocatorIsInit()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1049 d37211e544">
<p><code class="codeph">Clob.isinitialized()</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1049 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1064" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.OPEN</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1064 d37211e535">
<p><code class="codeph">OCILobOpen()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1064 d37211e544">
<p><code class="codeph">Blob.open</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1064 d37211e554">
<p><code class="codeph">OPEN</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1081" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.READ</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1081 d37211e535">
<p><code class="codeph">OCILobRead()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1081 d37211e544">
<p><code class="codeph">Blob.read</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1081 d37211e554">
<p><code class="codeph">READ</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1098" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.SETOPTIONS</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1098 d37211e535">
<p><code class="codeph">OCILobSetOptions()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1098 d37211e544">
<p><code class="codeph">Blob</code>/<code class="codeph">Clob</code>::<code class="codeph">setOptions</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1098 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1120" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.TRIM</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1120 d37211e535">
<p><code class="codeph">OCILobTrim2()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1120 d37211e544">
<p><code class="codeph">Blob.trim</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1120 d37211e554">
<p><code class="codeph">TRIM</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1138" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.WRITE</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1138 d37211e535">
<p><code class="codeph">OCILobWrite2</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1138 d37211e544">
<p><code class="codeph">Blob.write</code></p>
</td>
<td class="cellalignment2828" headers="d37211e1138 d37211e554">
<p><code class="codeph">WRITEORALOB.</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1155" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.WRITEAPPEND</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1155 d37211e535">
<p><code class="codeph">OCILobWriteAppend2()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1155 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e1155 d37211e554">
<p><code class="codeph">WRITE APPEND</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1171" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.CREATETEMPORARY</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1171 d37211e535">
<p><code class="codeph">OCILobCreateTemporary()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1171 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e1171 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1186" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.FREETEMPORARY</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1186 d37211e535">
<p><code class="codeph">OCILobFreeTemporary()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1186 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e1186 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1201" headers="d37211e527">
<p><code class="codeph">DBMS_LOB.ISTEMPORARY</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1201 d37211e535">
<p><code class="codeph">OCILobIsTemporary()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1201 d37211e544">
<p>N/A</p>
</td>
<td class="cellalignment2828" headers="d37211e1201 d37211e554">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e1216" headers="d37211e527">
<p>N/A</p>
</td>
<td class="cellalignment2845" headers="d37211e1216 d37211e535">
<p><code class="codeph">OCILobLocatorAssign()</code></p>
</td>
<td class="cellalignment2845" headers="d37211e1216 d37211e544">
<p>use operator = ( ) or copy constructor</p>
</td>
<td class="cellalignment2828" headers="d37211e1216 d37211e554">
<p>N/A</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="tblformal" id="GUID-D635AD2F-69D8-46DC-AF45-7BDBD3844C00__g1038719">
<p class="titleintable">Table 13-3 Comparing the LOB Interfaces, 2 of 2</p>
<table class="cellalignment2789" title=" Comparing the LOB Interfaces, 2 of 2 " summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2801" id="d37211e1240">PL/SQL: DBMS_LOB (dbmslob.sql)</th>
<th class="cellalignment2790" id="d37211e1248">Java (JDBC)</th>
<th class="cellalignment2852" id="d37211e1255">ODP.NET</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1264" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.COMPARE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1264 d37211e1248">
<p>Use <code class="codeph">DBMS_LOB</code>.</p>
</td>
<td class="cellalignment2853" headers="d37211e1264 d37211e1255">
<p><code class="codeph">OracleClob.Compare</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1280" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.INSTR</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1280 d37211e1248">
<p>position</p>
</td>
<td class="cellalignment2853" headers="d37211e1280 d37211e1255">
<p><code class="codeph">OracleClob.Search</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1292" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.SUBSTR</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1292 d37211e1248">
<p><code class="codeph">getBytes</code> for <code class="codeph">BLOB</code>s or <code class="codeph">BFILE</code>s<code class="codeph">getSubString</code> for <code class="codeph">CLOB</code>s</p>
</td>
<td class="cellalignment2853" headers="d37211e1292 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1317" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.APPEND</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1317 d37211e1248">
<p>Use <code class="codeph">length</code> and then <code class="codeph">putBytes()</code> or <code class="codeph">PutString()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1317 d37211e1255">
<p><code class="codeph">OracleClob.Append</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1337" headers="d37211e1240">
<p><code class="codeph">OCILobAssign()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1337 d37211e1248">
<p>N/A [use equal sign]</p>
</td>
<td class="cellalignment2853" headers="d37211e1337 d37211e1255">
<p><code class="codeph">OracleClob.Clone</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1349" headers="d37211e1240">
<p><code class="codeph">OCILobCharSetForm()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1349 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1349 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1360" headers="d37211e1240">
<p><code class="codeph">OCILobCharSetId()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1360 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1360 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1371" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.CLOSE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1371 d37211e1248">
<p>use <code class="codeph">DBMS_LOB</code>.</p>
</td>
<td class="cellalignment2853" headers="d37211e1371 d37211e1255">
<p><code class="codeph">OracleClob.Close</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1386" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.COPY</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1386 d37211e1248">
<p>Use read and write</p>
</td>
<td class="cellalignment2853" headers="d37211e1386 d37211e1255">
<p><code class="codeph">OracleClob.CopyTo</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1398" headers="d37211e1240">
<p><code class="codeph">OCILobDisableBuffering()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1398 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1398 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1409" headers="d37211e1240">
<p><code class="codeph">OCILobEnableBuffering()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1409 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1409 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1421" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.ERASE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1421 d37211e1248">
<p>Use <code class="codeph">DBMS_LOB</code>.</p>
</td>
<td class="cellalignment2853" headers="d37211e1421 d37211e1255">
<p><code class="codeph">OracleClob.Erase</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1436" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FILECLOSE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1436 d37211e1248">
<p><code class="codeph">closeFile</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1436 d37211e1255">
<p><code class="codeph">OracleBFile.CloseFile</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1449" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FILECLOSEALL</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1449 d37211e1248">
<p>Use <code class="codeph">DBMS_LOB</code>.</p>
</td>
<td class="cellalignment2853" headers="d37211e1449 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1463" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FILEEXISTS</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1463 d37211e1248">
<p><code class="codeph">fileExists</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1463 d37211e1255">
<p><code class="codeph">OracleBFile.FileExists</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1476" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.GETCHUNKSIZE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1476 d37211e1248">
<p><code class="codeph">getChunkSize</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1476 d37211e1255">
<p><code class="codeph">OracleClob.OptimumChunkSize</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1489" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FILEGETNAME</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1489 d37211e1248">
<p><code class="codeph">getDirAlias</code></p>
<p><code class="codeph">getName</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1489 d37211e1255">
<p><code class="codeph">OracleBFile.DirectoryName</code><code class="codeph">Oracle.BFile.FileName</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1507" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FILEISOPEN</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1507 d37211e1248">
<p>Use <code class="codeph">DBMS_LOB.ISOPEN</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1507 d37211e1255">
<p><code class="codeph">OracleBFile.IsOpen</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1521" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FILEOPEN</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1521 d37211e1248">
<p><code class="codeph">openFile</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1521 d37211e1255">
<p><code class="codeph">OracleBFile.OpenFile</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1534" headers="d37211e1240">
<p><code class="codeph">OCILobFileSetName()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1534 d37211e1248">
<p>Use <code class="codeph">BFILENAME</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1534 d37211e1255">
<p><code class="codeph">OracleBFile.DirectoryName</code></p>
<p><code class="codeph">Oracle.BFile.FileName</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1551" headers="d37211e1240">
<p><code class="codeph">OCILobFlushBuffer()</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1551 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1551 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1562" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.GETLENGTH</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1562 d37211e1248">
<p><code class="codeph">length</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1562 d37211e1255">
<p><code class="codeph">OracleClob.Length</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1576" headers="d37211e1240">
<p>N/A</p>
</td>
<td class="cellalignment2792" headers="d37211e1576 d37211e1248">
<p><code class="codeph">equals()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1576 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1587" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.ISOPEN</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1587 d37211e1248">
<p>use <code class="codeph">DBMS_LOB.ISOPEN()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1587 d37211e1255">
<p><code class="codeph">OracleClob.IsInChunkWriteMode</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1601" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.LOADFROMFILE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1601 d37211e1248">
<p>Use <code class="codeph">read</code> and then <code class="codeph">write</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1601 d37211e1255">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1617" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.OPEN</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1617 d37211e1248">
<p>Use <code class="codeph">DBMS_LOB.OPEN()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1617 d37211e1255">
<p><code class="codeph">OracleClob.BeginChunkWrite</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1631" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.READ</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1631 d37211e1248">
<p><code class="codeph">BLOB</code> or <code class="codeph">BFILE</code>: <code class="codeph">getBytes()</code> and <code class="codeph">getBinaryStream()</code></p>
<p><code class="codeph">CLOB</code>: <code class="codeph">getString()</code> and <code class="codeph">getSubString()</code> and <code class="codeph">getCharacterStream()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1631 d37211e1255">
<p><code class="codeph">OracleClob.Read</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1665" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.TRIM</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1665 d37211e1248">
<p>Use <code class="codeph">DBMS_LOB.TRIM()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1665 d37211e1255">
<p><code class="codeph">OracleClob.SetLength</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1679" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.WRITE</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1679 d37211e1248">
<p><code class="codeph">BLOB</code>: <code class="codeph">setBytes()</code> and <code class="codeph">setBinaryStream()</code></p>
<p><code class="codeph">CLOB</code>: <code class="codeph">setString()</code> and <code class="codeph">setCharacterStream()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1679 d37211e1255">
<p><code class="codeph">OracleClob.Write</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1707" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.WRITEAPPEND</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1707 d37211e1248">
<p>Use <code class="codeph">length()</code> and then <code class="codeph">putString()</code> or <code class="codeph">putBytes()</code></p>
</td>
<td class="cellalignment2853" headers="d37211e1707 d37211e1255">
<p><code class="codeph">OracleClob.Append</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1727" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.CREATETEMPORARY</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1727 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1727 d37211e1255">
<p><code class="codeph">OracleClob</code> constructors</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1740" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.FREETEMPORARY</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1740 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1740 d37211e1255">
<p><code class="codeph">OracleClob.Dispose</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2804" id="d37211e1752" headers="d37211e1240">
<p><code class="codeph">DBMS_LOB.ISTEMPORARY</code></p>
</td>
<td class="cellalignment2792" headers="d37211e1752 d37211e1248">
<p>N/A</p>
</td>
<td class="cellalignment2853" headers="d37211e1752 d37211e1255">
<p><code class="codeph">OracleClob.IsTemporary</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45362"></a>
<div class="props_rev_3"><a id="GUID-5A037264-4C0D-433A-8E0C-CCAD4DBE790A"></a>
<h2 id="ADLOB-GUID-5A037264-4C0D-433A-8E0C-CCAD4DBE790A" class="sect2">Using PL/SQL (DBMS_LOB Package) to Work With LOBs</h2>
<div>
<p>The PL/SQL <code class="codeph">DBMS_LOB</code> package can be used for the following operations:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Internal persistent LOBs and Temporary LOBs</span>: Read and modify operations, either entirely or in a piece-wise manner.</p>
</li>
<li>
<p><span class="bold">BFILEs</span>: Read operations</p>
<div class="infoboxnotealso" id="GUID-5A037264-4C0D-433A-8E0C-CCAD4DBE790A__GUID-61487608-422F-4CB6-A68D-91379BB44836">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS600" target="_blank" href="../ARPLS/d_lob.htm#ARPLS600"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed documentation, including parameters, parameter types, return values, and example code.</p>
</div>
</li>
</ul>
</div>
<a id="ADLOB45363"></a>
<div class="props_rev_3"><a id="GUID-36DB3555-F065-442D-987A-BB6F0B361C91"></a>
<h3 id="ADLOB-GUID-36DB3555-F065-442D-987A-BB6F0B361C91" class="sect3">Provide a LOB Locator Before Running the DBMS_LOB Routine</h3>
<div>
<p><code class="codeph">DBMS_LOB</code> routines work based on <span class="italic">LOB</span> <span class="italic">locators</span>. For the successful completion of <code class="codeph">DBMS_LOB</code> routines, you must provide an input locator representing a LOB that exists in the database tablespaces or external file system, <span class="italic">before</span> you call the routine.</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Persistent LOBs:</span> First use SQL to define tables that contain LOB columns, and subsequently you can use SQL to initialize or populate the locators in these LOB columns.</p>
</li>
<li>
<p><span class="bold">External</span> <span class="bold">LOB</span><span class="bold">s:</span> Define a <code class="codeph">DIRECTORY</code> object that maps to a valid physical directory containing the external LOBs that you intend to access. These files must exist, and have READ permission for Oracle Server to process. If your operating system uses case-sensitive path names, then specify the directory in the correct case. See <span class="q">&#34;<a href="adlob_bfile_ops.htm#GUID-F7440C27-C7F0-4874-8C3C-F3BC1534CBE0">Directory Objects</a>&#34;</span> for more information.</p>
</li>
</ul>
<p>Once the LOBs are defined and created, you may then <code class="codeph">SELECT</code> a LOB locator into a local PL/SQL LOB variable and use this variable as an input parameter to <code class="codeph">DBMS_LOB</code> for access to the LOB value.</p>
<p>Examples provided with each <code class="codeph">DBMS_LOB</code> routine illustrate this in the following sections.</p>
</div>
</div>
<a id="ADLOB45364"></a>
<div class="props_rev_3"><a id="GUID-DF6D2120-8880-4B86-B950-21C3C5F99CB6"></a>
<h3 id="ADLOB-GUID-DF6D2120-8880-4B86-B950-21C3C5F99CB6" class="sect3">Guidelines for Offset and Amount Parameters in DBMS_LOB Operations</h3>
<div>
<p><a id="d37211e2037" class="indexterm-anchor"></a><a id="d37211e2041" class="indexterm-anchor"></a>The following guidelines apply to offset and amount parameters used in procedures in the <code class="codeph">DBMS_LOB</code> PL/SQL package: <a id="d37211e2049" class="indexterm-anchor"></a><a id="d37211e2051" class="indexterm-anchor"></a><a id="d37211e2055" class="indexterm-anchor"></a><a id="d37211e2059" class="indexterm-anchor"></a></p>
<ul style="list-style-type: disc;">
<li>
<p>For character data&mdash;in all formats, fixed-width and varying-width&mdash;the <code class="codeph">amount</code> and <code class="codeph">offset</code> parameters are in characters. This applies to operations on <code class="codeph">CLOB</code> and <code class="codeph">NCLOB</code> data types.</p>
</li>
<li>
<p>For binary data, the <code class="codeph">offset</code> and <code class="codeph">amount</code> parameters are in bytes. This applies to operations on <code class="codeph">BLOB</code> data types.</p>
</li>
<li>
<p>When using the following procedures:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_LOB.LOADFROMFILE</code></p>
</li>
<li>
<p><code class="codeph">DBMS_LOB.LOADBLOBFROMFILE</code></p>
</li>
<li>
<p><a id="d37211e2106" class="indexterm-anchor"></a><code class="codeph">DBMS_LOB.LOADCLOBFROMFILE</code></p>
</li>
</ul>
<p>you cannot specify an amount parameter with a value larger than the size of the <code class="codeph">BFILE</code> you are loading from. To load the entire <code class="codeph">BFILE</code> with these procedures, you must specify either the exact size of the <code class="codeph">BFILE</code>, or the maximum allowable storage limit.</p>
<div class="infobox-note" id="GUID-DF6D2120-8880-4B86-B950-21C3C5F99CB6__GUID-92DB7571-5415-4173-A126-3EB166AEC38B">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="adlob_lob_ops.htm#GUID-94FBC256-0F45-49CF-A01F-31701B34B586">Loading a LOB with Data from a BFILE</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="adlob_lob_ops.htm#GUID-3DCD0C11-5A7D-46A2-ABF0-1DACFDE5BCD8">About Loading a BLOB with Data from a BFILE</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="adlob_lob_ops.htm#GUID-3E8F6AB9-B07B-4C22-981E-296C86ECC125">Loading a CLOB or NCLOB with Data from a BFILE</a>&#34;</span></p>
</li>
</ul>
</div>
</li>
<li>
<p>When using <code class="codeph">DBMS_LOB.READ</code>, the <code class="codeph">amount</code> parameter can be larger than the size of the data. The amount should be less than or equal to the size of the buffer. The buffer size is limited to 32K.</p>
<div class="infoboxnotealso" id="GUID-DF6D2120-8880-4B86-B950-21C3C5F99CB6__GUID-55A475AD-41DA-4FB6-AEA9-17EE45D5524A">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="adlob_lob_ops.htm#GUID-AC5E49A1-8479-4D68-AF1A-C497AACC5495">About Reading Data from a LOB</a>&#34;</span></p>
</div>
</li>
</ul>
</div>
</div>
<a id="ADLOB45365"></a>
<div class="props_rev_3"><a id="GUID-305268DC-C38D-4BCE-9B35-26085AD2D338"></a>
<h3 id="ADLOB-GUID-305268DC-C38D-4BCE-9B35-26085AD2D338" class="sect3">Determining Character Set ID</h3>
<div>
<div class="section">
<p>To determine the character set ID, you must know the character set name.</p>
<p>A user can select from the <a id="d37211e2233" class="indexterm-anchor"></a><code class="codeph">V$NLS_VALID_VALUES</code> view, which lists the names of the character sets that are valid as database and national character sets. Then call the function <code class="codeph">NLS_CHARSET_ID</code> with the desired character set name as the one string argument. The character set ID is returned as an integer. <code class="codeph">UTF16</code> does not work because it has no character set name. Use character set ID = 1000 for <code class="codeph">UTF16</code>. Although <code class="codeph">UTF16</code> is not allowed as a database or national character set, the APIs in <code class="codeph">DBMS_LOB</code> support it for database conversion purposes. <code class="codeph">DBMS_LOB.LOADCLOBFROMFILE</code> and other procedures in <code class="codeph">DBMS_LOB</code> take character set ID, not character set name, as an input.</p>
<div class="infoboxnotealso" id="GUID-305268DC-C38D-4BCE-9B35-26085AD2D338__GUID-4959270A-CA5D-4EDC-8D63-549E2AFA87BA">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ARPLS66728" target="_blank" href="../ARPLS/d_lob.htm#ARPLS66728"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for details and supported Unicode encodings in the chapter on <code class="codeph">DBMS_LOB.LOADCLOBFROMFILE</code></p>
</li>
<li>
<p><a class="olink NLSPG014" target="_blank" href="../NLSPG/applocaledata.htm#NLSPG014"><span class="italic">Oracle Database Globalization Support Guide,</span></a> Appendix A, for supported languages</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45366"></a>
<div class="props_rev_3"><a id="GUID-0A86C670-F8AC-403D-88DF-9CDC469208EF"></a>
<h3 id="ADLOB-GUID-0A86C670-F8AC-403D-88DF-9CDC469208EF" class="sect3">PL/SQL Functions and Procedures for LOBs</h3>
<div>
<p>PL/SQL functions and procedures that operate on <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s, and <code class="codeph">BFILE</code>s are summarized in the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>To modify persistent LOB values, see <a href="adlob_api_overview.htm#GUID-9FEA24B4-2CCB-4242-B607-34AC5A083619__BABBDIEJ" title="This table is described in the preceding text">Table 13-4</a></p>
</li>
<li>
<p>To read or examine LOB values, see <a href="adlob_api_overview.htm#GUID-2CF11601-4EC2-4837-93AF-9DFE7DF7E52D__g1038935" title="This table is described in the preceding text">Table 13-5</a></p>
</li>
<li>
<p>To create, free, or check on temporary LOBs, see <a href="adlob_api_overview.htm#GUID-98845710-B795-42AC-BA94-C4E24A0BF370__g1038960" title="This table is described in the preceding text">Table 13-6</a></p>
</li>
<li>
<p>For read-only functions on external LOBs (<code class="codeph">BFILE</code>s), see <a href="adlob_api_overview.htm#GUID-B18AF788-C89F-4CEE-AB1C-5510A1E7809C__g1038976" title="This table is described in the preceding text">Table 13-7</a></p>
</li>
<li>
<p>To open or close a LOB, or check if LOB is open, see <a href="adlob_api_overview.htm#GUID-7BCB1B17-52FB-4267-B0E7-168737F11F4D__g1039001" title="This table is described in the preceding text">Table 13-8</a></p>
</li>
<li>
<p>To perform archive management on SecureFiles, see <span class="q">&#34;<a href="adlob_smart.htm#GUID-DD9F53E4-3A56-43BF-AAA0-9BE2692DC81A" title="There are PL/SQL packages that can be used with BasicFiles LOBs and SecureFiles LOBs.">PL/SQL Packages for LOBs and DBFS</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
<a id="ADLOB45368"></a><a id="ADLOB45367"></a>
<div class="props_rev_3"><a id="GUID-9FEA24B4-2CCB-4242-B607-34AC5A083619"></a>
<h3 id="ADLOB-GUID-9FEA24B4-2CCB-4242-B607-34AC5A083619" class="sect3">PL/SQL Functions and Procedures to Modify LOB Values</h3>
<div>
<p>Here is a table of <code class="codeph">DBMS_LOB</code> procedures:</p>
<div class="tblformalwide" id="GUID-9FEA24B4-2CCB-4242-B607-34AC5A083619__BABBDIEJ">
<p class="titleintable">Table 13-4 PL/SQL: DBMS_LOB Procedures to Modify LOB Values</p>
<table class="cellalignment2809" title="PL/SQL: DBMS_LOB Procedures to Modify LOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2854" id="d37211e2501">Function/Procedure</th>
<th class="cellalignment2855" id="d37211e2504">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2509" headers="d37211e2501">
<p><code class="codeph">APPEND</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2509 d37211e2504">
<p>Appends the LOB value to another LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2517" headers="d37211e2501">
<p><code class="codeph">CONVERTTOBLOB</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2517 d37211e2504">
<p>Converts a <code class="codeph">CLOB</code> to a <code class="codeph">BLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2530" headers="d37211e2501">
<p><code class="codeph">CONVERTTOCLOB</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2530 d37211e2504">
<p>Converts a <code class="codeph">BLOB</code> to a <code class="codeph">CLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2543" headers="d37211e2501">
<p><code class="codeph">COPY</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2543 d37211e2504">
<p>Copies all or part of a LOB to another LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2551" headers="d37211e2501">
<p><code class="codeph">ERASE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2551 d37211e2504">
<p>Erases part of a LOB, starting at a specified offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2559" headers="d37211e2501">
<p><code class="codeph">FRAGMENT_DELETE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2559 d37211e2504">
<p>Delete the data from the LOB at the given offset for the given length</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2567" headers="d37211e2501">
<p><code class="codeph">FRAGMENT_INSERT</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2567 d37211e2504">
<p>Insert the given data (&lt; 32KBytes) into the LOB at the given offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2575" headers="d37211e2501">
<p><code class="codeph">FRAGMENT_MOVE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2575 d37211e2504">
<p>Move the given amount of bytes from the given offset to the new given offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2583" headers="d37211e2501">
<p><code class="codeph">FRAGMENT_REPLACE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2583 d37211e2504">
<p>Replace the data at the given offset with the given data (&lt; 32kBytes)</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2591" headers="d37211e2501">
<p><code class="codeph">LOADFROMFILE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2591 d37211e2504">
<p>Load <code class="codeph">BFILE</code> data into a persistent LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2602" headers="d37211e2501">
<p><code class="codeph">LOADCLOBFROMFILE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2602 d37211e2504">
<p>Load character data from a file into a LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2611" headers="d37211e2501">
<p><code class="codeph">LOADBLOBFROMFILE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2611 d37211e2504">
<p>Load binary data from a file into a LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2619" headers="d37211e2501">
<p><code class="codeph">SETOPTIONS</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2619 d37211e2504">
<p>Sets LOB features (deduplication and compression)</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2627" headers="d37211e2501">
<p><code class="codeph">TRIM</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2627 d37211e2504">
<p>Trims the LOB value to the specified shorter length</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2635" headers="d37211e2501">
<p><code class="codeph">WRITE</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2635 d37211e2504">
<p>Writes data to the LOB at a specified offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e2643" headers="d37211e2501">
<p><code class="codeph">WRITEAPPEND</code></p>
</td>
<td class="cellalignment2857" headers="d37211e2643 d37211e2504">
<p>Writes data to the end of the LOB</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45370"></a><a id="ADLOB45369"></a>
<div class="props_rev_3"><a id="GUID-2CF11601-4EC2-4837-93AF-9DFE7DF7E52D"></a>
<h3 id="ADLOB-GUID-2CF11601-4EC2-4837-93AF-9DFE7DF7E52D" class="sect3">PL/SQL Functions and Procedures for Introspection of LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-2CF11601-4EC2-4837-93AF-9DFE7DF7E52D__g1038935">
<p class="titleintable">Table 13-5 PL/SQL: DBMS_LOB Procedures to Read or Examine Internal and External LOB values</p>
<table class="cellalignment2809" title=" PL/SQL: DBMS_LOB Procedures to Read or Examine Internal and External LOB values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2810" id="d37211e2734">Function/Procedure</th>
<th class="cellalignment2858" id="d37211e2737">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2742" headers="d37211e2734">
<p><code class="codeph">COMPARE</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2742 d37211e2737">
<p>Compares the value of two LOBs</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2750" headers="d37211e2734">
<p><code class="codeph">GETCHUNKSIZE</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2750 d37211e2737">
<p>Gets the chunk size used when reading and writing. This only works on persistent LOBs and does not apply to external LOBs (<code class="codeph">BFILE</code>s).</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2761" headers="d37211e2734">
<p><code class="codeph">GETLENGTH</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2761 d37211e2737">
<p>Gets the length of the LOB value.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2769" headers="d37211e2734">
<p><code class="codeph">GETOPTIONS</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2769 d37211e2737">
<p>Returns options (deduplication, compression, encryption) for SecureFiles.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2777" headers="d37211e2734">
<p><code class="codeph">GET_STORAGE_LIMIT</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2777 d37211e2737">
<p>Gets the LOB storage limit for the database configuration.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2785" headers="d37211e2734">
<p><code class="codeph">INSTR</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2785 d37211e2737">
<p>Returns the matching position of the nth occurrence of the pattern in the LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2793" headers="d37211e2734">
<p><code class="codeph">ISSECUREFILE</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2793 d37211e2737">
<p>Returns <code class="codeph">TRUE</code> if the <code class="codeph">BLOB</code> or <code class="codeph">CLOB</code> locator passed to it is for a SecureFiles or <code class="codeph">FALSE</code> if it is not.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2813" headers="d37211e2734">
<p><code class="codeph">READ</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2813 d37211e2737">
<p>Reads data from the LOB starting at the specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2821" headers="d37211e2734">
<p><code class="codeph">SETOPTIONS</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2821 d37211e2737">
<p>Sets options (deduplication and compression) for a SecureFiles, overriding the default LOB column settings. Incurs a server round trip.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e2829" headers="d37211e2734">
<p><code class="codeph">SUBSTR</code></p>
</td>
<td class="cellalignment2859" headers="d37211e2829 d37211e2737">
<p>Returns part of the LOB value starting at the specified offset.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45372"></a><a id="ADLOB45371"></a>
<div class="props_rev_3"><a id="GUID-98845710-B795-42AC-BA94-C4E24A0BF370"></a>
<h3 id="ADLOB-GUID-98845710-B795-42AC-BA94-C4E24A0BF370" class="sect3">PL/SQL Operations on Temporary LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-98845710-B795-42AC-BA94-C4E24A0BF370__g1038960">
<p class="titleintable">Table 13-6 PL/SQL: DBMS_LOB Procedures to Operate on Temporary LOBs</p>
<table class="cellalignment2809" title=" PL/SQL: DBMS_LOB Procedures to Operate on Temporary LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e2919">Function/Procedure</th>
<th class="cellalignment2861" id="d37211e2922">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e2927" headers="d37211e2919">
<p>CREATETEMPORARY</p>
</td>
<td class="cellalignment2863" headers="d37211e2927 d37211e2922">
<p>Creates a temporary LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e2934" headers="d37211e2919">
<p>ISTEMPORARY</p>
</td>
<td class="cellalignment2863" headers="d37211e2934 d37211e2922">
<p>Checks if a LOB locator refers to a temporary LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e2941" headers="d37211e2919">
<p>FREETEMPORARY</p>
</td>
<td class="cellalignment2863" headers="d37211e2941 d37211e2922">
<p>Frees a temporary LOB</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45374"></a><a id="ADLOB45373"></a>
<div class="props_rev_3"><a id="GUID-B18AF788-C89F-4CEE-AB1C-5510A1E7809C"></a>
<h3 id="ADLOB-GUID-B18AF788-C89F-4CEE-AB1C-5510A1E7809C" class="sect3">PL/SQL Read-Only Functions and Procedures for BFILEs</h3>
<div>
<div class="tblformalwide" id="GUID-B18AF788-C89F-4CEE-AB1C-5510A1E7809C__g1038976">
<p class="titleintable">Table 13-7 PL/SQL: DBMS_LOB Read-Only Procedures for BFILEs</p>
<table class="cellalignment2809" title=" PL/SQL: DBMS_LOB Read-Only Procedures for BFILEs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e3030">Function/Procedure</th>
<th class="cellalignment2861" id="d37211e3033">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3038" headers="d37211e3030">
<p><code class="codeph">FILECLOSE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3038 d37211e3033">
<p>Closes the file. Use <code class="codeph">CLOSE()</code> instead.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3049" headers="d37211e3030">
<p><code class="codeph">FILECLOSEALL</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3049 d37211e3033">
<p>Closes all previously opened files</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3057" headers="d37211e3030">
<p><code class="codeph">FILEEXISTS</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3057 d37211e3033">
<p>Checks if the file exists on the server</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3065" headers="d37211e3030">
<p><code class="codeph">FILEGETNAME</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3065 d37211e3033">
<p>Gets the directory object name and file name</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3073" headers="d37211e3030">
<p><code class="codeph">FILEISOPEN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3073 d37211e3033">
<p><code class="codeph">Checks if the file was opened using the input BFILE</code> locators. Use <code class="codeph">ISOPEN()</code> instead.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3086" headers="d37211e3030">
<p><code class="codeph">FILEOPEN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3086 d37211e3033">
<p>Opens a file. Use <code class="codeph">OPEN()</code> instead.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45376"></a><a id="ADLOB45375"></a>
<div class="props_rev_3"><a id="GUID-7BCB1B17-52FB-4267-B0E7-168737F11F4D"></a>
<h3 id="ADLOB-GUID-7BCB1B17-52FB-4267-B0E7-168737F11F4D" class="sect3">PL/SQL Functions and Procedures to Open and Close Internal and External LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-7BCB1B17-52FB-4267-B0E7-168737F11F4D__g1039001">
<p class="titleintable">Table 13-8 PL/SQL: DBMS_LOB Procedures to Open and Close Internal and External LOBs</p>
<table class="cellalignment2809" title=" PL/SQL: DBMS_LOB Procedures to Open and Close Internal and External LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e3176">Function/Procedure</th>
<th class="cellalignment2861" id="d37211e3179">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3184" headers="d37211e3176">
<p><code class="codeph">OPEN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3184 d37211e3179">
<p>Opens a LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3192" headers="d37211e3176">
<p><code class="codeph">ISOPEN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3192 d37211e3179">
<p>Sees if a LOB is open</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e3200" headers="d37211e3176">
<p><code class="codeph">CLOSE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e3200 d37211e3179">
<p>Closes a LOB</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>These procedures are described in detail for specific LOB operations, such as, <code class="codeph">INSERT</code> a row containing a LOB, in <span class="q">&#34;<a href="adlob_design.htm#GUID-B161D891-886D-4D53-89F0-BB42BD22C102">Opening Persistent LOBs with the OPEN and CLOSE Interfaces</a>&#34;</span>.</p>
</div>
</div>
</div>
<a id="ADLOB45377"></a>
<div class="props_rev_3"><a id="GUID-345A592B-6F3A-4704-9F1B-9C2C56C2F360"></a>
<h2 id="ADLOB-GUID-345A592B-6F3A-4704-9F1B-9C2C56C2F360" class="sect2">Using OCI to Work With LOBs</h2>
<div>
<p>Oracle Call Interface (OCI) LOB functions enable you to access and make changes to LOBs and to read data from <code class="codeph">BFILE</code>s in C.</p>
<div class="infoboxnotealso" id="GUID-345A592B-6F3A-4704-9F1B-9C2C56C2F360__GUID-8F39C8A3-C791-4091-A8B5-BE178DD82973">
<p class="notep1">See Also:</p>
<p><a class="olink LNOCI070" target="_blank" href="../LNOCI/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> chapter &#34;LOB and BFILE Operations&#34; for the details of all topics discussed in this section.</p>
</div>
</div>
<a id="ADLOB45378"></a>
<div class="props_rev_3"><a id="GUID-2DF37952-AD10-461B-8398-458EAE37BF47"></a>
<h3 id="ADLOB-GUID-2DF37952-AD10-461B-8398-458EAE37BF47" class="sect3">Prefetching of LOB Data, Length, and Chunk Size</h3>
<div>
<div class="section">
<p>To improve OCI access of smaller LOBs, LOB data can be prefetched and cached while also fetching the locator. This applies to internal LOBs, temporary LOBs, and <code class="codeph">BFILE</code>s.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45379"></a>
<div class="props_rev_3"><a id="GUID-585844EB-F7B5-400F-B9FF-74CAC08A55EF"></a>
<h3 id="ADLOB-GUID-585844EB-F7B5-400F-B9FF-74CAC08A55EF" class="sect3">Setting the CSID Parameter for OCI LOB APIs</h3>
<div>
<div class="section">
<p>If you want to read or write data in 2-byte Unicode format, then set the <code class="codeph">csid</code> (character set ID) parameter in <code class="codeph">OCILobRead2()</code> and <code class="codeph">OCILobWrite2()</code> to <code class="codeph">OCI_UTF16ID</code>.</p>
<p>The <code class="codeph">csid</code> parameter indicates the character set id for the buffer parameter. You can set the <code class="codeph">csid</code> parameter to any character set ID. If the <code class="codeph">csid</code> parameter is set, then it overrides the <code class="codeph">NLS_LANG</code> environment variable.</p>
<div class="infoboxnotealso" id="GUID-585844EB-F7B5-400F-B9FF-74CAC08A55EF__GUID-C36AE1AE-C328-4183-98EB-5501A7D85D51">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink LNOCI17689" target="_blank" href="../LNOCI/oci22glb005.htm#LNOCI17689"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for information on the <code class="codeph">OCIUnicodeToCharSet()</code> function and details on OCI syntax in general.</p>
</li>
<li>
<p><a class="olink NLSPG" target="_blank" href="../NLSPG/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a> for detailed information about implementing applications in different languages<span class="italic">.</span></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45380"></a>
<div class="props_rev_3"><a id="GUID-5FC50E86-7F9F-43B2-96C5-587048511A8B"></a>
<h3 id="ADLOB-GUID-5FC50E86-7F9F-43B2-96C5-587048511A8B" class="sect3">Fixed-Width and Varying-Width Character Set Rules for OCI</h3>
<div>
<div class="section">
<p>In OCI, for fixed-width client-side character sets, the following rules apply:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s: offset and amount parameters are always in characters</p>
</li>
<li>
<p><code class="codeph">BLOB</code>s and <code class="codeph">BFILE</code>s: offset and amount parameters are always in bytes</p>
</li>
</ul>
<p>The following rules apply only to varying-width client-side character sets:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Offset parameter</span>:</p>
<p>Regardless of whether the client-side character set is varying-width, the offset parameter is always as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s: in characters</p>
</li>
<li>
<p><code class="codeph">BLOB</code>s and <code class="codeph">BFILE</code>s: in bytes</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">Amount parameter</span>:</p>
<p>The amount parameter is always as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>When referring to a server-side LOB: in characters</p>
</li>
<li>
<p>When referring to a client-side buffer: in bytes</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">OCILobFileGetLength()</span>:</p>
<p>Regardless of whether the client-side character set is varying-width, the output length is as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s: in characters</p>
</li>
<li>
<p><code class="codeph">BLOB</code>s and <code class="codeph">BFILE</code>s: in bytes</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">OCILobRead2()</span>:</p>
<p>With client-side character set of varying-width, <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Input amount</span> is in characters. Input amount refers to the number of characters to read from the server-side <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code>.</p>
</li>
<li>
<p><span class="bold">Output amount</span> is in bytes. Output amount indicates how many bytes were read into the buffer <code class="codeph">bufp</code>.</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">OCILobWrite2()</span>: With client-side character set of varying-width, <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Input amount</span> is in bytes. The input amount refers to the number of bytes of data in the input buffer <code class="codeph">bufp</code>.</p>
</li>
<li>
<p><span class="bold">Output amount</span> is in characters. The output amount refers to the number of characters written into the server-side <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code>.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="ADLOB45381"></a>
<div class="props_rev_3"><a id="GUID-CD75946C-9D68-4D0D-8221-8C3BB0D53DB5"></a>
<h4 id="ADLOB-GUID-CD75946C-9D68-4D0D-8221-8C3BB0D53DB5" class="sect4">Other Operations</h4>
<div>
<p>For all other LOB operations, irrespective of the client-side character set, the <code class="codeph">amount</code> parameter is in characters for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s. These include <code class="codeph">OCILobCopy2()</code>, <code class="codeph">OCILobErase2()</code>, <code class="codeph">OCILobLoadFromFile2()</code>, and <code class="codeph">OCILobTrim2()</code>. All these operations refer to the amount of LOB data on the server.</p>
<div class="infoboxnotealso" id="GUID-CD75946C-9D68-4D0D-8221-8C3BB0D53DB5__GUID-D15F4089-8770-4C99-98E1-018B37FEA30D">
<p class="notep1">See Also:</p>
<p><a class="olink NLSPG" target="_blank" href="../NLSPG/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a></p>
</div>
</div>
</div>
<a id="ADLOB45382"></a>
<div class="props_rev_3"><a id="GUID-9F9F8909-1FAA-448B-90B1-F29F9549483B"></a>
<h4 id="ADLOB-GUID-9F9F8909-1FAA-448B-90B1-F29F9549483B" class="sect4">NCLOBs in OCI</h4>
<div>
<p><code class="codeph">NCLOB</code>s are allowed as parameters in methods.</p>
</div>
</div>
</div>
<a id="ADLOB45383"></a>
<div class="props_rev_3"><a id="GUID-E7E07096-9F14-4368-A677-B1E2432444C9"></a>
<h3 id="ADLOB-GUID-E7E07096-9F14-4368-A677-B1E2432444C9" class="sect3">OCILobLoadFromFile2() Amount Parameter</h3>
<div>
<p>When using <code class="codeph">OCILobLoadFromFile2()</code> you cannot specify <code class="codeph">amount</code> larger than the length of the <code class="codeph">BFILE</code>. To load the entire <code class="codeph">BFILE</code>, you can pass the value returned by <code class="codeph">OCILobGetStorageLimit()</code>.</p>
</div>
</div>
<a id="ADLOB45384"></a>
<div class="props_rev_3"><a id="GUID-8859700A-9710-4DDE-BCC0-BB8E4FBA1E79"></a>
<h3 id="ADLOB-GUID-8859700A-9710-4DDE-BCC0-BB8E4FBA1E79" class="sect3">OCILobRead2() Amount Parameter</h3>
<div>
<p>To read to the end of a LOB using <code class="codeph">OCILobRead2()</code>, you specify an amount equal to the value returned by <code class="codeph">OCILobGetStorageLimit()</code>. See <span class="q">&#34;<a href="adlob_lob_ops.htm#GUID-AC5E49A1-8479-4D68-AF1A-C497AACC5495">About Reading Data from a LOB</a>&#34;</span> for more information.</p>
</div>
</div>
<a id="ADLOB45385"></a>
<div class="props_rev_3"><a id="GUID-9EECC8F1-CF40-4FF1-828C-391381D5B5B1"></a>
<h3 id="ADLOB-GUID-9EECC8F1-CF40-4FF1-828C-391381D5B5B1" class="sect3">OCILobLocator Pointer Assignment</h3>
<div>
<p><a id="d37211e4122" class="indexterm-anchor"></a><a id="d37211e4124" class="indexterm-anchor"></a>Special care must be taken when assigning <code class="codeph">OCILobLocator</code> pointers in an OCI program&mdash;using the &#34;=&#34; assignment operator. Pointer assignments create a shallow copy of the LOB. After the pointer assignment, the source and target LOBs point to the same copy of data.</p>
<p>These semantics are different from using LOB APIs, such as <code class="codeph">OCILobAssign()</code> or <code class="codeph">OCILobLocatorAssign()</code> to perform assignments. When the these APIs are used, the locators logically point to independent copies of data after assignment.</p>
<p>For temporary LOBs, before performing pointer assignments, you must ensure that any temporary LOB in the target LOB locator is freed by calling <code class="codeph">OCIFreeTemporary()</code>. In contrast, when <code class="codeph">OCILobLocatorAssign()</code> is used, the original temporary LOB in the target LOB locator variable, if any, is freed automatically before the assignment happens.</p>
</div>
</div>
<a id="ADLOB45386"></a>
<div class="props_rev_3"><a id="GUID-17D157FF-20EB-4D5D-A740-5140A89EE9A3"></a>
<h3 id="ADLOB-GUID-17D157FF-20EB-4D5D-A740-5140A89EE9A3" class="sect3">LOB Locators in Defines and Out-Bind Variables in OCI</h3>
<div>
<p><a id="d37211e4209" class="indexterm-anchor"></a><a id="d37211e4211" class="indexterm-anchor"></a><a id="d37211e4213" class="indexterm-anchor"></a>Before you reuse a LOB locator in a define or an out-bind variable in a SQL statement, you must free any temporary LOB in the existing LOB locator buffer using <code class="codeph">OCIFreeTemporary()</code>.</p>
</div>
</div>
<a id="ADLOB45387"></a>
<div class="props_rev_3"><a id="GUID-996D8127-C6E7-47C5-AC77-A102B60C7BE2"></a>
<h3 id="ADLOB-GUID-996D8127-C6E7-47C5-AC77-A102B60C7BE2" class="sect3">OCI Functions That Operate on BLOBs, CLOBs, NCLOBs, and BFILEs</h3>
<div>
<p>OCI functions that operate on <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s, and <code class="codeph">BFILE</code>s are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>To modify persistent LOBs, see <a href="adlob_api_overview.htm#GUID-11520251-60EA-4E92-9933-1F55736B7E91__g1039025" title="This table is described in the preceding text">Table 13-9</a></p>
</li>
<li>
<p>To read or examine LOB values, see <a href="adlob_api_overview.htm#GUID-39F59639-BA4F-422E-9C75-851AEB1A9694__g1039053" title="This table is described in the preceding text">Table 13-10</a></p>
</li>
<li>
<p>To create or free temporary LOB, or check if Temporary LOB exists, see <a href="adlob_api_overview.htm#GUID-48CBAAD7-440C-4FCB-8144-B0AC73BBC307__g1039069" title="This table is described in the preceding text">Table 13-11</a></p>
</li>
<li>
<p>For read only functions on external LOBs (<code class="codeph">BFILE</code>s), see <a href="adlob_api_overview.htm#GUID-C73EFCA5-2230-426D-8351-002EFB3E4AE4__g1039085" title="This table is described in the preceding text">Table 13-12</a></p>
</li>
<li>
<p>To operate on LOB locators, see <a href="adlob_api_overview.htm#GUID-CF030024-9C99-49B2-91F4-27A39B840154__g1039110" title="This table is described in the preceding text">Table 13-13</a></p>
</li>
<li>
<p>For LOB buffering, see <a href="adlob_api_overview.htm#GUID-1FDC63CD-AFCE-4DC5-98ED-F85A1A7F9E0D__g1039135" title="This table is described in the preceding text">Table 13-14</a></p>
</li>
<li>
<p>To open and close LOBs, see <a href="adlob_api_overview.htm#GUID-393B311D-220E-49AB-8DFE-A12C4742C577__g1039151" title="This table is described in the preceding text">Table 13-15</a></p>
</li>
</ul>
</div>
</div>
<a id="ADLOB45389"></a><a id="ADLOB45388"></a>
<div class="props_rev_3"><a id="GUID-11520251-60EA-4E92-9933-1F55736B7E91"></a>
<h3 id="ADLOB-GUID-11520251-60EA-4E92-9933-1F55736B7E91" class="sect3">OCI Functions to Modify Persistent LOB (BLOB, CLOB, and NCLOB) Values</h3>
<div>
<div class="tblformalwide" id="GUID-11520251-60EA-4E92-9933-1F55736B7E91__g1039025">
<p class="titleintable">Table 13-9 OCI Functions to Modify Persistent LOB (BLOB, CLOB, and NCLOB) Values</p>
<table class="cellalignment2809" title=" OCI Functions to Modify Persistent LOB (BLOB, CLOB, and NCLOB) Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2854" id="d37211e4430">Function/Procedure</th>
<th class="cellalignment2855" id="d37211e4433">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4438" headers="d37211e4430">
<p><code class="codeph">OCILobAppend()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4438 d37211e4433">
<p>Appends LOB value to another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4446" headers="d37211e4430">
<p><code class="codeph">OCILobArrayWrite()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4446 d37211e4433">
<p>Writes data using multiple locators in one round trip.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4454" headers="d37211e4430">
<p><code class="codeph">OCILobCopy2()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4454 d37211e4433">
<p>Copies all or part of a LOB to another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4462" headers="d37211e4430">
<p><code class="codeph">OCILobErase2()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4462 d37211e4433">
<p>Erases part of a LOB, starting at a specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4470" headers="d37211e4430">
<p><code class="codeph">OCILobLoadFromFile2()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4470 d37211e4433">
<p>Loads <code class="codeph">BFILE</code> data into a persistent LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4481" headers="d37211e4430">
<p><code class="codeph">OCILobSetContentType()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4481 d37211e4433">
<p>Sets a content string in a SecureFiles.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4489" headers="d37211e4430">
<p><code class="codeph">OCILObSetOptions()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4489 d37211e4433">
<p>Enables option settings (deduplication and compression) for a SecureFiles.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4497" headers="d37211e4430">
<p><code class="codeph">OCILobTrim2()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4497 d37211e4433">
<p>Truncates a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4505" headers="d37211e4430">
<p><code class="codeph">OCILobWrite2()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4505 d37211e4433">
<p>Writes data from a buffer into a LOB, overwriting existing data.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e4513" headers="d37211e4430">
<p><code class="codeph">OCILobWriteAppend2()</code></p>
</td>
<td class="cellalignment2857" headers="d37211e4513 d37211e4433">
<p>Writes data from a buffer to the end of the LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45391"></a><a id="ADLOB45390"></a>
<div class="props_rev_3"><a id="GUID-39F59639-BA4F-422E-9C75-851AEB1A9694"></a>
<h3 id="ADLOB-GUID-39F59639-BA4F-422E-9C75-851AEB1A9694" class="sect3">OCI Functions to Read or Examine Persistent LOB and External LOB (BFILE) Values</h3>
<div>
<div class="tblformalwide" id="GUID-39F59639-BA4F-422E-9C75-851AEB1A9694__g1039053">
<p class="titleintable">Table 13-10 OCI Functions to Read or Examine persistent LOB and external LOB (BFILE) Values</p>
<table class="cellalignment2809" title=" OCI Functions to Read or Examine persistent LOB and external LOB (BFILE) Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2852" id="d37211e4603">Function/Procedure</th>
<th class="cellalignment2864" id="d37211e4606">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4611" headers="d37211e4603">
<p><code class="codeph">OCILobArrayRead()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4611 d37211e4606">
<p>Reads data using multiple locators in one round trip.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4619" headers="d37211e4603">
<p><code class="codeph">OCILobGetChunkSize()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4619 d37211e4606">
<p>Gets the chunk size used when reading and writing. This works on persistent LOBs and does not apply to external LOBs (<code class="codeph">BFILE</code>s).</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4630" headers="d37211e4603">
<p><code class="codeph">OCILobGetContentType()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4630 d37211e4606">
<p>Gets the content string for a SecureFiles.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4638" headers="d37211e4603">
<p><code class="codeph">OCILobGetLength2()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4638 d37211e4606">
<p>Returns the length of a LOB or a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4649" headers="d37211e4603">
<p><code class="codeph">OCILObGetOptions()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4649 d37211e4606">
<p>Obtains the enabled settings (deduplication, compression, encryption) for a given SecureFiles.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4657" headers="d37211e4603">
<p><code class="codeph">OCILobGetStorageLimit()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4657 d37211e4606">
<p>Gets the maximum length of an internal LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e4665" headers="d37211e4603">
<p><code class="codeph">OCILobRead2()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e4665 d37211e4606">
<p>Reads a specified portion of a non-<code class="codeph">NULL</code> LOB or a <code class="codeph">BFILE</code> into a buffer.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45393"></a><a id="ADLOB45392"></a>
<div class="sect3"><a id="GUID-48CBAAD7-440C-4FCB-8144-B0AC73BBC307"></a>
<h3 id="ADLOB-GUID-48CBAAD7-440C-4FCB-8144-B0AC73BBC307" class="sect3">OCI Functions for Temporary LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-48CBAAD7-440C-4FCB-8144-B0AC73BBC307__g1039069">
<p class="titleintable">Table 13-11 OCI Functions for Temporary LOBs</p>
<table class="cellalignment2809" title=" OCI Functions for Temporary LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2866" id="d37211e4761">Function/Procedure</th>
<th class="cellalignment2867" id="d37211e4764">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2868" id="d37211e4769" headers="d37211e4761">
<p><code class="codeph">OCILobCreateTemporary()</code></p>
</td>
<td class="cellalignment2869" headers="d37211e4769 d37211e4764">
<p>Creates a temporary LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2868" id="d37211e4777" headers="d37211e4761">
<p><code class="codeph">OCILobIsTemporary()</code></p>
</td>
<td class="cellalignment2869" headers="d37211e4777 d37211e4764">
<p>Sees if a temporary LOB exists.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2868" id="d37211e4785" headers="d37211e4761">
<p><code class="codeph">OCILobFreeTemporary()</code></p>
</td>
<td class="cellalignment2869" headers="d37211e4785 d37211e4764">
<p>Frees a temporary LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45395"></a><a id="ADLOB45394"></a>
<div class="props_rev_3"><a id="GUID-C73EFCA5-2230-426D-8351-002EFB3E4AE4"></a>
<h3 id="ADLOB-GUID-C73EFCA5-2230-426D-8351-002EFB3E4AE4" class="sect3">OCI Read-Only Functions for BFILEs</h3>
<div>
<div class="tblformalwide" id="GUID-C73EFCA5-2230-426D-8351-002EFB3E4AE4__g1039085">
<p class="titleintable">Table 13-12 OCI Read-Only Functions for BFILES</p>
<table class="cellalignment2809" title=" OCI Read-Only Functions for BFILES " summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e4876">Function/Procedure</th>
<th class="cellalignment2861" id="d37211e4879">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e4884" headers="d37211e4876">
<p><code class="codeph">OCILobFileClose()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e4884 d37211e4879">
<p>Closes an open <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e4895" headers="d37211e4876">
<p><code class="codeph">OCILobFileCloseAll()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e4895 d37211e4879">
<p>Closes all open <code class="codeph">BFILE</code>s.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e4906" headers="d37211e4876">
<p><code class="codeph">OCILobFileExists()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e4906 d37211e4879">
<p>Checks whether a <code class="codeph">BFILE</code> exists.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e4917" headers="d37211e4876">
<p><code class="codeph">OCILobFileGetName()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e4917 d37211e4879">
<p>Returns the name of a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e4928" headers="d37211e4876">
<p><code class="codeph">OCILobFileIsOpen()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e4928 d37211e4879">
<p>Checks whether a <code class="codeph">BFILE</code> is open.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e4939" headers="d37211e4876">
<p><code class="codeph">OCILobFileOpen()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e4939 d37211e4879">
<p>Opens a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45397"></a><a id="ADLOB45396"></a>
<div class="props_rev_3"><a id="GUID-CF030024-9C99-49B2-91F4-27A39B840154"></a>
<h3 id="ADLOB-GUID-CF030024-9C99-49B2-91F4-27A39B840154" class="sect3">OCI LOB Locator Functions</h3>
<div>
<div class="tblformalwide" id="GUID-CF030024-9C99-49B2-91F4-27A39B840154__g1039110">
<p class="titleintable">Table 13-13 OCI LOB-Locator Functions</p>
<table class="cellalignment2809" title=" OCI LOB-Locator Functions" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e5032">Function/Procedure</th>
<th class="cellalignment2861" id="d37211e5035">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5040" headers="d37211e5032">
<p><code class="codeph">OCILobAssign()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5040 d37211e5035">
<p>Assigns one LOB locator to another.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5048" headers="d37211e5032">
<p><code class="codeph">OCILobCharSetForm()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5048 d37211e5035">
<p>Returns the character set form of a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5056" headers="d37211e5032">
<p><code class="codeph">OCILobCharSetId()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5056 d37211e5035">
<p>Returns the character set ID of a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5064" headers="d37211e5032">
<p><code class="codeph">OCILobFileSetName()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5064 d37211e5035">
<p>Sets the name of a <code class="codeph">BFILE</code> in a locator.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5075" headers="d37211e5032">
<p><code class="codeph">OCILobIsEqual()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5075 d37211e5035">
<p>Checks whether two LOB locators refer to the same LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5083" headers="d37211e5032">
<p><code class="codeph">OCILobLocatorIsInit()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5083 d37211e5035">
<p>Checks whether a LOB locator is initialized.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45399"></a><a id="ADLOB45398"></a>
<div class="props_rev_3"><a id="GUID-1FDC63CD-AFCE-4DC5-98ED-F85A1A7F9E0D"></a>
<h3 id="ADLOB-GUID-1FDC63CD-AFCE-4DC5-98ED-F85A1A7F9E0D" class="sect3">OCI LOB-Buffering Functions</h3>
<div>
<div class="tblformalwide" id="GUID-1FDC63CD-AFCE-4DC5-98ED-F85A1A7F9E0D__g1039135">
<p class="titleintable">Table 13-14 OCI LOB-Buffering Functions</p>
<table class="cellalignment2809" title=" OCI LOB-Buffering Functions" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2810" id="d37211e5173">Function/Procedure</th>
<th class="cellalignment2858" id="d37211e5176">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e5181" headers="d37211e5173">
<p><code class="codeph">OCILobDisableBuffering()</code></p>
</td>
<td class="cellalignment2859" headers="d37211e5181 d37211e5176">
<p>Disables the buffering subsystem use.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e5189" headers="d37211e5173">
<p><code class="codeph">OCILobEnableBuffering()</code></p>
</td>
<td class="cellalignment2859" headers="d37211e5189 d37211e5176">
<p>Uses the LOB buffering subsystem for subsequent reads and writes of LOB data.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2813" id="d37211e5197" headers="d37211e5173">
<p><code class="codeph">OCILobFlushBuffer()</code></p>
</td>
<td class="cellalignment2859" headers="d37211e5197 d37211e5176">
<p>Flushes changes made to the LOB buffering subsystem to the database (server).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45401"></a><a id="ADLOB45400"></a>
<div class="props_rev_3"><a id="GUID-393B311D-220E-49AB-8DFE-A12C4742C577"></a>
<h3 id="ADLOB-GUID-393B311D-220E-49AB-8DFE-A12C4742C577" class="sect3">OCI Functions to Open and Close Internal and External LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-393B311D-220E-49AB-8DFE-A12C4742C577__g1039151">
<p class="titleintable">Table 13-15 OCI Functions to Open and Close Internal and External LOBs</p>
<table class="cellalignment2809" title=" OCI Functions to Open and Close Internal and External LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e5284">Function/Procedure</th>
<th class="cellalignment2861" id="d37211e5287">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5292" headers="d37211e5284">
<p><code class="codeph">OCILobOpen()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5292 d37211e5287">
<p>Opens a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5300" headers="d37211e5284">
<p><code class="codeph">OCILobIsOpen()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5300 d37211e5287">
<p>Sees if a LOB is open.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e5308" headers="d37211e5284">
<p><code class="codeph">OCILobClose()</code></p>
</td>
<td class="cellalignment2863" headers="d37211e5308 d37211e5287">
<p>Closes a LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45402"></a>
<div class="props_rev_3"><a id="GUID-ED63657C-805D-4000-AD41-98517F1972DC"></a>
<h3 id="ADLOB-GUID-ED63657C-805D-4000-AD41-98517F1972DC" class="sect3">OCI LOB Examples</h3>
<div>
<p>Further OCI examples are provided in:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="adlob_lob_ops.htm#GUID-5BEE64AC-5528-45DC-AB57-A8EDE8E4DE65" title="You can convert a BLOB instance to a CLOB using the PL/SQL procedure DBMS_LOB.CONVERTTOCLOB.">Using LOB APIs</a></p>
</li>
<li>
<p><a href="adlob_bfile_ops.htm#GUID-043A9B91-69C8-44D4-A38A-E872B0A2B9A9" title="You can determine whether a pattern exists in a BFILE using the INSTRoperation.">LOB APIs for BFILE Operations</a></p>
</li>
</ul>
<p>See also Appendix B, &#34;OCI Demonstration Programs&#34; in <a class="olink LNOCI280" target="_blank" href="../LNOCI/ociabdem.htm#LNOCI280"><span class="italic">Oracle Call Interface Programmer&#39;s Guide,</span></a> for further OCI demonstration script listings.</p>
</div>
</div>
<a id="ADLOB45403"></a>
<div class="props_rev_3"><a id="GUID-A9B534BB-107B-43D7-B6E3-03FB4D602DEB"></a>
<h3 id="ADLOB-GUID-A9B534BB-107B-43D7-B6E3-03FB4D602DEB" class="sect3">Further Information About OCI</h3>
<div>
<p>For further information and features of OCI, refer to the OTN Web site, <a href="http://www.oracle.com/technology/" target="_blank"><code class="codeph">http://www.oracle.com/technology/</code></a> for OCI features and frequently asked questions.</p>
</div>
</div>
</div>
<a id="ADLOB45404"></a>
<div class="props_rev_3"><a id="GUID-EECBCC19-422C-49B0-BF2D-18D6557B4324"></a>
<h2 id="ADLOB-GUID-EECBCC19-422C-49B0-BF2D-18D6557B4324" class="sect2">Using C++ (OCCI) to Work With LOBs</h2>
<div>
<div class="section">
<p>Oracle C++ Call Interface (OCCI) is a C++ API for manipulating data in an Oracle database. OCCI is organized as an easy-to-use set of C++ classes that enable a C++ program to connect to a database, run SQL statements, insert/update values in database tables, retrieve results of a query, run stored procedures in the database, and access metadata of database schema objects. OCCI also provides a seamless interface to manipulate objects of user-defined types as C++ class instances.</p>
<p>Oracle C++ Call Interface (OCCI) is designed so that you can use OCI and OCCI together to build applications.</p>
<p>The OCCI API provides the following advantages over JDBC and ODBC:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>OCCI encompasses more Oracle functionality than JDBC. OCCI provides all the functionality of OCI that JDBC does not provide.</p>
</li>
<li>
<p>OCCI provides <span class="italic">compiled</span> performance. With compiled programs, the source code is written as close to the computer as possible. Because JDBC is an <span class="italic">interpreted</span> API, it cannot provide the performance of a compiled API. With an interpreted program, performance degrades as each line of code must be interpreted individually into code that is close to the computer.</p>
</li>
<li>
<p>OCCI provides memory management with smart pointers. You do not have to be concerned about managing memory for OCCI objects. This results in robust higher performance application code.</p>
</li>
<li>
<p>Navigational access of OCCI enables you to intuitively access objects and call methods. Changes to objects persist without writing corresponding SQL statements. If you use the client side cache, then the navigational interface performs better than the object interface.</p>
</li>
<li>
<p>With respect to ODBC, the OCCI API is simpler to use. Because ODBC is built on the C language, OCCI has all the advantages C++ provides over C. Moreover, ODBC has a reputation as being difficult to learn. The OCCI, by contrast, is designed for ease of use.</p>
</li>
</ul>
<p>You can use OCCI to make changes to an entire persistent LOB, or to pieces of the beginning, middle, or end of it, as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>For reading from internal and external LOBs (<code class="codeph">BFILE</code>s)</p>
</li>
<li>
<p>For writing to persistent LOBs</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="ADLOB45405"></a>
<div class="props_rev_3"><a id="GUID-1B28552A-2159-42EE-AED8-ED5F1F4F09D9"></a>
<h3 id="ADLOB-GUID-1B28552A-2159-42EE-AED8-ED5F1F4F09D9" class="sect3">OCCI Classes for LOBs</h3>
<div>
<p>OCCI provides these classes that allow you to use different types of LOB instances as objects in your C++ application:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Clob</code> class to access and modify data stored in internal <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s</p>
</li>
<li>
<p><code class="codeph">Blob</code> class to access and modify data stored in internal <code class="codeph">BLOB</code>s</p>
</li>
<li>
<p><code class="codeph">Bfile</code> class to access and read data stored in external LOBs (<code class="codeph">BFILE</code>s)</p>
<div class="infoboxnotealso" id="GUID-1B28552A-2159-42EE-AED8-ED5F1F4F09D9__GUID-1C85AFA2-74D1-4CF7-981E-05CCAB1169F7">
<p class="notep1">See Also:</p>
<p>Syntax information on these classes and details on OCCI in general is available in the <a class="olink LNCPP007" target="_blank" href="../LNCPP/lobs.htm#LNCPP007"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a>.</p>
</div>
</li>
</ul>
</div>
<a id="ADLOB45406"></a>
<div class="props_rev_3"><a id="GUID-2E2161B6-B1A9-4926-B03A-BDA4EFB5B95D"></a>
<h4 id="ADLOB-GUID-2E2161B6-B1A9-4926-B03A-BDA4EFB5B95D" class="sect4">Clob Class</h4>
<div>
<p>The Clob driver implements a <code class="codeph">CLOB</code> object using an SQL LOB locator. This means that a CLOB object contains a logical pointer to the SQL <code class="codeph">CLOB</code> data rather than the data itself.</p>
<p>The <code class="codeph">CLOB</code> interface provides methods for getting the length of an SQL <code class="codeph">CLOB</code> value, for materializing a <code class="codeph">CLOB</code> value on the client, and getting a substring. Methods in the <code class="codeph">ResultSet</code> and <code class="codeph">Statement</code> interfaces such as <code class="codeph">getClob()</code> and <code class="codeph">setClob()</code> allow you to access SQL <code class="codeph">CLOB</code> values.</p>
<div class="infoboxnotealso" id="GUID-2E2161B6-B1A9-4926-B03A-BDA4EFB5B95D__GUID-76371F54-82C0-46D5-8E06-7060819D785A">
<p class="notep1">See Also:</p>
<p><a class="olink LNCPP1006" target="_blank" href="../LNCPP/reference009.htm#LNCPP1006"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a> for detailed information on the Clob class.</p>
</div>
</div>
</div>
<a id="ADLOB45407"></a>
<div class="props_rev_3"><a id="GUID-04B65792-1578-4E14-9A93-36C3C1259A93"></a>
<h4 id="ADLOB-GUID-04B65792-1578-4E14-9A93-36C3C1259A93" class="sect4">Blob Class</h4>
<div>
<p>Methods in the <code class="codeph">ResultSet</code> and <code class="codeph">Statement</code> interfaces, such as <code class="codeph">getBlob()</code> and <code class="codeph">setBlob()</code>, allow you to access SQL <code class="codeph">BLOB</code> values. The <code class="codeph">Blob</code> interface provides methods for getting the length of a SQL <code class="codeph">BLOB</code> value, for materializing a <code class="codeph">BLOB</code> value on the client, and for extracting a part of the <code class="codeph">BLOB</code>.</p>
<div class="infoboxnotealso" id="GUID-04B65792-1578-4E14-9A93-36C3C1259A93__GUID-29560F16-0D49-4652-A1D8-66B7D6E5135F">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink LNCPP" target="_blank" href="../LNCPP/toc.htm"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a> for detailed information on the Blob class methods and details on instantiating and initializing a Blob object in your C++ application.</p>
</li>
<li>
<p><a class="olink NLSPG" target="_blank" href="../NLSPG/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a> for detailed information about implementing applications in different languages<span class="italic">.</span></p>
</li>
</ul>
</div>
</div>
</div>
<a id="ADLOB45408"></a>
<div class="props_rev_3"><a id="GUID-D5538892-2D5B-4897-8971-8D88FD713AEF"></a>
<h4 id="ADLOB-GUID-D5538892-2D5B-4897-8971-8D88FD713AEF" class="sect4">Bfile Class</h4>
<div>
<p>The <code class="codeph">Bfile</code> class enables you to instantiate a <code class="codeph">Bfile</code> object in your C++ application. You must then use methods of the <code class="codeph">Bfile</code> class, such as the <code class="codeph">setName()</code> method, to initialize the <code class="codeph">Bfile</code> object which associates the object properties with an object of type <code class="codeph">BFILE</code> in a <code class="codeph">BFILE</code> column of the database.</p>
<div class="infoboxnotealso" id="GUID-D5538892-2D5B-4897-8971-8D88FD713AEF__GUID-75556292-D40C-4AB4-B7BA-D5CAAEDE14CA">
<p class="notep1">See Also:</p>
<p><a class="olink LNCPP" target="_blank" href="../LNCPP/toc.htm"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a> for detailed information on the <code class="codeph">Blob</code> class methods and details on instantiating and initializing an <code class="codeph">Blob</code> object in your C++ application.</p>
</div>
</div>
</div>
</div>
<a id="ADLOB45409"></a>
<div class="props_rev_3"><a id="GUID-7E097D71-C8D6-4F3C-84D0-C2D3BF9254A0"></a>
<h3 id="ADLOB-GUID-7E097D71-C8D6-4F3C-84D0-C2D3BF9254A0" class="sect3">Fixed-Width Character Set Rules</h3>
<div>
<p>In OCCI, for <span class="italic">fixed-width</span> client-side character sets, these rules apply:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Clob</code>: offset and amount parameters are always in characters</p>
</li>
<li>
<p><code class="codeph">Blob</code>: offset and amount parameters are always in bytes</p>
</li>
<li>
<p><code class="codeph">Bfile</code>: offset and amount parameters are always in bytes</p>
</li>
</ul>
</div>
</div>
<a id="ADLOB45410"></a>
<div class="props_rev_3"><a id="GUID-6091C34E-2C08-47D7-BC6F-CBB4234C97C8"></a>
<h3 id="ADLOB-GUID-6091C34E-2C08-47D7-BC6F-CBB4234C97C8" class="sect3">Varying-Width Character Set Rules</h3>
<div>
<p>The following rules apply only to <span class="italic">varying-width</span> client-side character sets:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Offset parameter</span>: Regardless of whether the client-side character set is varying-width, the offset parameter is always as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Clob()</code>: in characters</p>
</li>
<li>
<p><code class="codeph">Blob()</code>: in bytes</p>
</li>
<li>
<p><code class="codeph">Bfile()</code>: in bytes</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">Amount parameter</span>: The amount parameter is always as indicated:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Clob</code>: in characters, when referring to a server-side LOB</p>
</li>
<li>
<p><code class="codeph">Blob</code>: in bytes, when referring to a client-side buffer</p>
</li>
<li>
<p><code class="codeph">Bfile</code>: in bytes, when referring to a client-side buffer</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">length()</span>: Regardless of whether the client-side character set is varying-width, the output length is as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Clob.length()</code>: in characters</p>
</li>
<li>
<p><code class="codeph">Blob.length()</code>: in bytes</p>
</li>
<li>
<p><code class="codeph">Bfile.length()</code>: in bytes</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">Clob.read() and Blob.read()</span>: With client-side character set of varying-width, <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><span class="bold">I</span></span><span class="italic"><span class="bold">nput amount</span></span> is in characters. Input amount refers to the number of characters to read from the server-side <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code>.</p>
</li>
<li>
<p><span class="italic"><span class="bold">Output amount</span></span> is in bytes. Output amount indicates how many bytes were read into the OCCI buffer parameter, <code class="codeph">buffer</code>.</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">Clob.write() and Blob.write()</span>: With client-side character set of varying-width, <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Input amount</span> is in bytes. Input amount refers to the number of bytes of data in the OCCI input buffer, <code class="codeph">buffer</code>.</p>
</li>
<li>
<p><span class="bold">Output amount</span> is in characters. Output amount refers to the number of characters written into the server-side <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code>.</p>
</li>
</ul>
</li>
</ul>
</div>
</div>
<a id="ADLOB45411"></a>
<div class="props_rev_3"><a id="GUID-6CD3EFEC-A011-4F27-8F6A-747716B7BC91"></a>
<h3 id="ADLOB-GUID-6CD3EFEC-A011-4F27-8F6A-747716B7BC91" class="sect3">Offset and Amount Parameters for Other OCCI Operations</h3>
<div>
<p>For all other OCCI LOB operations, irrespective of the client-side character set, the <span class="italic">amount parameter</span> is in characters for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s. These include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Clob.copy()</code></p>
</li>
<li>
<p><code class="codeph">Clob.erase()</code></p>
</li>
<li>
<p><code class="codeph">Clob.trim()</code></p>
</li>
<li>
<p>For <code class="codeph">LoadFromFile</code> functionality, overloaded <code class="codeph">Clob.copy()</code></p>
</li>
</ul>
<p>All these operations refer to the amount of LOB data on the server.</p>
<div class="infobox-note" id="GUID-6CD3EFEC-A011-4F27-8F6A-747716B7BC91__GUID-59C8A82D-5F24-4FE3-8DA8-00C1C4BFE0E6">
<p class="notep1">See also:</p>
<p><a class="olink NLSPG" target="_blank" href="../NLSPG/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a></p>
</div>
</div>
<a id="ADLOB45412"></a>
<div class="props_rev_3"><a id="GUID-22E623B0-CE79-4AB4-9F87-5B2F660FC5D2"></a>
<h4 id="ADLOB-GUID-22E623B0-CE79-4AB4-9F87-5B2F660FC5D2" class="sect4">NCLOBs in OCCI</h4>
<div>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">NCLOB</code> instances are allowed as parameters in methods</p>
</li>
<li>
<p><code class="codeph">NCLOB</code> instances are allowed as attributes in object types.</p>
</li>
</ul>
</div>
</div>
</div>
<a id="ADLOB45413"></a>
<div class="props_rev_3"><a id="GUID-E15444DD-927A-44E0-838E-A32CCD04A331"></a>
<h3 id="ADLOB-GUID-E15444DD-927A-44E0-838E-A32CCD04A331" class="sect3">Amount Parameter for OCCI LOB copy() Methods</h3>
<div>
<p>The <code class="codeph">copy()</code> method on <code class="codeph">Clob</code> and <code class="codeph">Blob</code> enables you to load data from a <code class="codeph">BFILE</code>. You can pass one of the following values for the <code class="codeph">amount</code> parameter to this method:</p>
<ul style="list-style-type: disc;">
<li>
<p>An amount smaller than the size of the <code class="codeph">BFILE</code> to load a portion of the data</p>
</li>
<li>
<p>An amount equal to the size of the <code class="codeph">BFILE</code> to load all of the data</p>
</li>
<li>
<p>The <code class="codeph">UB8MAXVAL</code> constant to load all of the <code class="codeph">BFILE</code> data</p>
</li>
</ul>
<p>You cannot specify an amount larger than the length of the <code class="codeph">BFILE</code>.</p>
</div>
</div>
<a id="ADLOB45414"></a>
<div class="props_rev_3"><a id="GUID-7BE23EA5-950F-453C-ADD5-3C3DD2DC038F"></a>
<h3 id="ADLOB-GUID-7BE23EA5-950F-453C-ADD5-3C3DD2DC038F" class="sect3">Amount Parameter for OCCI read() Operations</h3>
<div>
<p>The <code class="codeph">read()</code> method on an <code class="codeph">Clob</code>, <code class="codeph">Blob</code>, or <code class="codeph">Bfile</code> object, reads data from a <code class="codeph">BFILE</code>. You can pass one of these values for the amount parameter to specify the amount of data to read:</p>
<ul style="list-style-type: disc;">
<li>
<p>An amount smaller than the size of the <code class="codeph">BFILE</code> to load a portion of the data</p>
</li>
<li>
<p>An amount equal to the size of the <code class="codeph">BFILE</code> to load all of the data</p>
</li>
<li>
<p><code class="codeph">0</code> (zero) to read until the end of the <code class="codeph">BFILE</code> in streaming mode</p>
</li>
</ul>
<p>You cannot specify an amount larger than the length of the <code class="codeph">BFILE</code>.</p>
</div>
</div>
<a id="ADLOB45415"></a>
<div class="props_rev_3"><a id="GUID-6C6D4589-5C6C-4E74-BA63-DDBA4FA1463F"></a>
<h3 id="ADLOB-GUID-6C6D4589-5C6C-4E74-BA63-DDBA4FA1463F" class="sect3">Further Information About OCCI</h3>
<div>
<div class="infoboxnotealso" id="GUID-6C6D4589-5C6C-4E74-BA63-DDBA4FA1463F__GUID-CF34243A-5311-4551-A441-3C1B6634C413">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink LNCPP" target="_blank" href="../LNCPP/toc.htm"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a href="http://www.oracle.com/" target="_blank"><code class="codeph">http://www.oracle.com/</code></a> search for articles and product information featuring OCCI.</p>
</li>
</ul>
</div>
</div>
</div>
<a id="ADLOB45416"></a>
<div class="props_rev_3"><a id="GUID-B5B191A0-2A58-4B94-BD28-5BC7D3705425"></a>
<h3 id="ADLOB-GUID-B5B191A0-2A58-4B94-BD28-5BC7D3705425" class="sect3">OCCI Methods That Operate on BLOBs, BLOBs, NCLOBs, and BFILEs</h3>
<div>
<p>OCCI methods that operate on <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s, and <code class="codeph">BFILE</code>s are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>To modify persistent LOBs, see <a href="adlob_api_overview.htm#GUID-55212C8C-3884-4DEF-A795-3F2EA7FD55CC__g1039179" title="This table is described in the preceding text">Table 13-16</a></p>
</li>
<li>
<p>To read or examine LOB values, see <a href="adlob_api_overview.htm#GUID-1A3E90DB-F15B-46E6-B1DC-F6C781261E55__g1039201" title="This table is described in the preceding text">Table 13-17</a></p>
</li>
<li>
<p>For read only methods on external LOBs (<code class="codeph">BFILE</code>s), see <a href="adlob_api_overview.htm#GUID-0D2D918B-9720-4ABA-A81F-8696B7BF6E9A__g1039217" title="This table is described in the preceding text">Table 13-18</a></p>
</li>
<li>
<p>Other LOB OCCI methods are described in <a href="adlob_api_overview.htm#GUID-A779324B-558F-42FC-BC31-6178A1A0C1B9__g1039242" title="This table is described in the preceding text">Table 13-19</a></p>
</li>
<li>
<p>To open and close LOBs, see <a href="adlob_api_overview.htm#GUID-25A5D94A-E2D4-4585-8DEC-971A35A95932__g1039267" title="This table is described in the preceding text">Table 13-20</a></p>
</li>
</ul>
</div>
</div>
<a id="ADLOB45418"></a><a id="ADLOB45417"></a>
<div class="props_rev_3"><a id="GUID-55212C8C-3884-4DEF-A795-3F2EA7FD55CC"></a>
<h3 id="ADLOB-GUID-55212C8C-3884-4DEF-A795-3F2EA7FD55CC" class="sect3">OCCI Methods to Modify Persistent LOB (BLOB, CLOB, and NCLOB) Values</h3>
<div>
<div class="tblformalwide" id="GUID-55212C8C-3884-4DEF-A795-3F2EA7FD55CC__g1039179">
<p class="titleintable">Table 13-16 OCCI Clob and Blob Methods to Modify Persistent LOB (BLOB, CLOB, and NCLOB) Values</p>
<table class="cellalignment2809" title=" OCCI Clob and Blob Methods to Modify Persistent LOB (BLOB, CLOB, and NCLOB) Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2807" id="d37211e6998">Function/Procedure</th>
<th class="cellalignment2870" id="d37211e7001">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7006" headers="d37211e6998">
<p><code class="codeph">Blob/Clob.append()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7006 d37211e7001">
<p>Appends <code class="codeph">CLOB or BLOB</code> value to another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7017" headers="d37211e6998">
<p><code class="codeph">Blob/Clob.copy()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7017 d37211e7001">
<p>Copies all or part of a <code class="codeph">CLOB</code> or <code class="codeph">BLOB</code> to another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7031" headers="d37211e6998">
<p><code class="codeph">Blob/Clob.copy()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7031 d37211e7001">
<p>Loads <code class="codeph">BFILE</code> data into a persistent LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7042" headers="d37211e6998">
<p><code class="codeph">Blob/Clob.trim()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7042 d37211e7001">
<p>Truncates a <code class="codeph">CLOB or BLOB</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7053" headers="d37211e6998">
<p><code class="codeph">Blob/Clob.write()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7053 d37211e7001">
<p>Writes data from a buffer into a LOB, overwriting existing data.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45420"></a><a id="ADLOB45419"></a>
<div class="props_rev_3"><a id="GUID-1A3E90DB-F15B-46E6-B1DC-F6C781261E55"></a>
<h3 id="ADLOB-GUID-1A3E90DB-F15B-46E6-B1DC-F6C781261E55" class="sect3">OCCI Methods to Read or Examine Persistent LOB and BFILE Values</h3>
<div>
<div class="tblformalwide" id="GUID-1A3E90DB-F15B-46E6-B1DC-F6C781261E55__g1039201">
<p class="titleintable">Table 13-17 OCCI Blob/Clob/Bfile Methods to Read or Examine persistent LOB and BFILE Values</p>
<table class="cellalignment2809" title=" OCCI Blob/Clob/Bfile Methods to Read or Examine persistent LOB and BFILE Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2872" id="d37211e7143">Function/Procedure</th>
<th class="cellalignment2873" id="d37211e7146">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2874" id="d37211e7151" headers="d37211e7143">
<p><code class="codeph">Blob/Clob.getChunkSize()</code></p>
</td>
<td class="cellalignment2875" headers="d37211e7151 d37211e7146">
<p>Gets the chunk size used when reading and writing. This works on persistent LOBs and does not apply to external LOBs (<code class="codeph">BFILE</code>s).</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2874" id="d37211e7162" headers="d37211e7143">
<p><code class="codeph">Blob/Clob.getOptions()</code></p>
</td>
<td class="cellalignment2875" headers="d37211e7162 d37211e7146">
<p>Obtains settings for existing and newly created LOBs.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2874" id="d37211e7170" headers="d37211e7143">
<p><code class="codeph">Blob/Clob.length()</code></p>
</td>
<td class="cellalignment2875" headers="d37211e7170 d37211e7146">
<p>Returns the length of a LOB or a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2874" id="d37211e7181" headers="d37211e7143">
<p><code class="codeph">Blob/Clob.read()</code></p>
</td>
<td class="cellalignment2875" headers="d37211e7181 d37211e7146">
<p>Reads a specified portion of a non-<code class="codeph">NULL</code> LOB or a <code class="codeph">BFILE</code> into a buffer.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2874" id="d37211e7195" headers="d37211e7143">
<p><code class="codeph">Blob/Clob.setOptions()</code></p>
</td>
<td class="cellalignment2875" headers="d37211e7195 d37211e7146">
<p>Enables LOB settings for existing and newly created LOBs.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45422"></a><a id="ADLOB45421"></a>
<div class="props_rev_3"><a id="GUID-0D2D918B-9720-4ABA-A81F-8696B7BF6E9A"></a>
<h3 id="ADLOB-GUID-0D2D918B-9720-4ABA-A81F-8696B7BF6E9A" class="sect3">OCCI Read-Only Methods for BFILEs</h3>
<div>
<div class="tblformalwide" id="GUID-0D2D918B-9720-4ABA-A81F-8696B7BF6E9A__g1039217">
<p class="titleintable">Table 13-18 OCCI Read-Only Methods for BFILES</p>
<table class="cellalignment2809" title=" OCCI Read-Only Methods for BFILES" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2807" id="d37211e7293">Function/Procedure</th>
<th class="cellalignment2870" id="d37211e7296">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7301" headers="d37211e7293">
<p><code class="codeph">Bfile.close()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7301 d37211e7296">
<p>Closes an open <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7312" headers="d37211e7293">
<p><code class="codeph">Bfile.fileExists()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7312 d37211e7296">
<p>Checks whether a <code class="codeph">BFILE</code> exists.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7323" headers="d37211e7293">
<p><code class="codeph">Bfile.getFileName()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7323 d37211e7296">
<p>Returns the name of a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7334" headers="d37211e7293">
<p><code class="codeph">Bfile.getDirAlias()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7334 d37211e7296">
<p>Gets the directory object name.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7342" headers="d37211e7293">
<p><code class="codeph">Bfile.isOpen()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7342 d37211e7296">
<p>Checks whether a <code class="codeph">BFILE</code> is open.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2808" id="d37211e7353" headers="d37211e7293">
<p><code class="codeph">Bfile.open()</code></p>
</td>
<td class="cellalignment2871" headers="d37211e7353 d37211e7296">
<p>Opens a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45424"></a><a id="ADLOB45423"></a>
<div class="props_rev_3"><a id="GUID-A779324B-558F-42FC-BC31-6178A1A0C1B9"></a>
<h3 id="ADLOB-GUID-A779324B-558F-42FC-BC31-6178A1A0C1B9" class="sect3">Other OCCI LOB Methods</h3>
<div>
<div class="tblformalwide" id="GUID-A779324B-558F-42FC-BC31-6178A1A0C1B9__g1039242">
<p class="titleintable">Table 13-19 Other OCCI LOB Methods</p>
<table class="cellalignment2809" title=" Other OCCI LOB Methods" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2812" id="d37211e7447">Methods</th>
<th class="cellalignment2848" id="d37211e7450">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2815" id="d37211e7455" headers="d37211e7447">
<p><code class="codeph">Clob/Blob/Bfile.operator=()</code></p>
</td>
<td class="cellalignment2849" headers="d37211e7455 d37211e7450">
<p>Assigns one LOB locator to another. Use = or the copy constructor.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2815" id="d37211e7463" headers="d37211e7447">
<p><code class="codeph">Clob.getCharSetForm()</code></p>
</td>
<td class="cellalignment2849" headers="d37211e7463 d37211e7450">
<p>Returns the character set form of a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2815" id="d37211e7471" headers="d37211e7447">
<p><code class="codeph">Clob.getCharSetId()</code></p>
</td>
<td class="cellalignment2849" headers="d37211e7471 d37211e7450">
<p>Returns the character set ID of a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2815" id="d37211e7479" headers="d37211e7447">
<p><code class="codeph">Bfile.setName()</code></p>
</td>
<td class="cellalignment2849" headers="d37211e7479 d37211e7450">
<p>Sets the name of a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2815" id="d37211e7490" headers="d37211e7447">
<p><code class="codeph">Clob/Blob/Bfile.operator==()</code></p>
</td>
<td class="cellalignment2849" headers="d37211e7490 d37211e7450">
<p>Checks whether two LOB refer to the same LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2815" id="d37211e7498" headers="d37211e7447">
<p><code class="codeph">Clob/Blob/Bfile.isInitialized()</code></p>
</td>
<td class="cellalignment2849" headers="d37211e7498 d37211e7450">
<p>Checks whether a LOB is initialized.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45426"></a><a id="ADLOB45425"></a>
<div class="props_rev_3"><a id="GUID-25A5D94A-E2D4-4585-8DEC-971A35A95932"></a>
<h3 id="ADLOB-GUID-25A5D94A-E2D4-4585-8DEC-971A35A95932" class="sect3">OCCI Methods to Open and Close Internal and External LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-25A5D94A-E2D4-4585-8DEC-971A35A95932__g1039267">
<p class="titleintable">Table 13-20 OCCI Methods to Open and Close Internal and External LOBs</p>
<table class="cellalignment2809" title=" OCCI Methods to Open and Close Internal and External LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2852" id="d37211e7584">Function/Procedure</th>
<th class="cellalignment2864" id="d37211e7587">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e7592" headers="d37211e7584">
<p><code class="codeph">Clob/Blob/Bfile.Open()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e7592 d37211e7587">
<p>Opens a LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e7600" headers="d37211e7584">
<p><code class="codeph">Clob/Blob/Bfile.isOpen()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e7600 d37211e7587">
<p>Sees if a LOB is open</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2853" id="d37211e7608" headers="d37211e7584">
<p><code class="codeph">Clob/Blob/Bfile.Close()</code></p>
</td>
<td class="cellalignment2865" headers="d37211e7608 d37211e7587">
<p>Closes a LOB</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="ADLOB45427"></a>
<div class="props_rev_3"><a id="GUID-7B44B1D4-2B43-42F0-9744-2C0AF791A9F8"></a>
<h2 id="ADLOB-GUID-7B44B1D4-2B43-42F0-9744-2C0AF791A9F8" class="sect2">Using C/C++ (Pro*C) to Work With LOBs</h2>
<div>
<div class="section">
<p>You can make changes to an entire persistent LOB, or to pieces of the beginning, middle or end of a LOB by using embedded SQL. You can access both internal and external LOBs for read purposes, and you can <span class="italic">write</span> to persistent LOBs.</p>
<p>Embedded SQL statements allow you to access data stored in <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s, and <code class="codeph">BFILE</code>s. These statements are listed in the following tables, and are discussed in greater detail later in the chapter.</p>
<div class="infoboxnotealso" id="GUID-7B44B1D4-2B43-42F0-9744-2C0AF791A9F8__GUID-92FA2115-7700-49F9-8AD8-F295EBFF792D">
<p class="notep1">See Also:</p>
<p><a class="olink LNPCC" target="_blank" href="../LNPCC/toc.htm"><span class="italic">Pro*C/C++ Programmer&#39;s Guide</span></a> for detailed documentation, including syntax, host variables, host variable types and example code.</p>
</div>
</div>
<!-- class="section" --></div>
<a id="ADLOB45428"></a>
<div class="props_rev_3"><a id="GUID-E8F8FE06-3C38-4947-817C-A5689781578B"></a>
<h3 id="ADLOB-GUID-E8F8FE06-3C38-4947-817C-A5689781578B" class="sect3">Providing an Allocated Input Locator Pointer That Represents LOB</h3>
<div>
<div class="section">
<p>Unlike locators in PL/SQL, locators in Pro*C/C++ are mapped to locator pointers which are then used to refer to the LOB or BFILE value.</p>
<p>To successfully complete an embedded SQL LOB statement you must do the following:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span><a id="d37211e7775" class="indexterm-anchor"></a>Provide an allocated input locator pointer that represents a LOB that exists in the database tablespaces or external file system <span class="italic">before</span> you run the statement.</span></li>
<li class="stepexpand"><span>SELECT a LOB locator into a LOB locator pointer variable.</span></li>
<li class="stepexpand"><span>Use this variable in the embedded SQL LOB statement to access and manipulate the LOB value.</span>
<div>
<div class="infoboxnotealso" id="GUID-E8F8FE06-3C38-4947-817C-A5689781578B__GUID-56AA325E-9A1F-4274-9540-8C6CD2FCD585">
<p class="notep1">See Also:</p>
<p>APIs for supported LOB operations are described in detail in:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="adlob_creating.htm#GUID-7B3D15D3-A182-4ED1-A265-8EE15E793C46">Operations Specific to Persistent and Temporary LOBs</a></p>
</li>
<li>
<p><a href="adlob_lob_ops.htm#GUID-5BEE64AC-5528-45DC-AB57-A8EDE8E4DE65" title="You can convert a BLOB instance to a CLOB using the PL/SQL procedure DBMS_LOB.CONVERTTOCLOB.">Using LOB APIs</a></p>
</li>
<li>
<p><a href="adlob_bfile_ops.htm#GUID-043A9B91-69C8-44D4-A38A-E872B0A2B9A9" title="You can determine whether a pattern exists in a BFILE using the INSTRoperation.">LOB APIs for BFILE Operations</a></p>
</li>
</ul>
</div>
</div>
</li>
</ol>
</div>
</div>
<a id="ADLOB45429"></a>
<div class="props_rev_3"><a id="GUID-51A31CCC-DC82-4A72-B4F7-F61F13823C30"></a>
<h3 id="ADLOB-GUID-51A31CCC-DC82-4A72-B4F7-F61F13823C30" class="sect3">Pro*C/C++ Statements That Operate on BLOBs, CLOBs, NCLOBs, and BFILEs</h3>
<div>
<p>Pro*C/C++ statements that operate on BLOBs, CLOBs, and NCLOBs are listed in the following tables:</p>
<ul style="list-style-type: disc;">
<li>
<p>To modify persistent LOBs, see <a href="adlob_api_overview.htm#GUID-0AF64F54-3CB8-4AD6-A836-9CE0C416A3F7__g1039287" title="This table is described in the preceding text">Table 13-21</a></p>
</li>
<li>
<p>To read or examine LOB values, see <a href="adlob_api_overview.htm#GUID-B19B91BE-1293-484A-AFB8-9F8BA4DC1EB6__g1039315" title="This table is described in the preceding text">Table 13-22</a></p>
</li>
<li>
<p>To create or free temporary LOB, or check if Temporary LOB exists, see <a href="adlob_api_overview.htm#GUID-4186F7EC-D78C-4FBB-A821-CE0F6364E30E__g1039331" title="This table is described in the preceding text">Table 13-23</a></p>
</li>
<li>
<p>To operate close and &#39;see if file exists&#39; functions on BFILEs, see <a href="adlob_api_overview.htm#GUID-0FFCC2B9-C1C2-4037-972C-AFF2FFC479AE__g1039347" title="This table is described in the preceding text">Table 13-24</a></p>
</li>
<li>
<p>To operate on LOB locators, see <a href="adlob_api_overview.htm#GUID-DC53C2F1-3179-46DB-BDEA-21A39C0135CC__g1039363" title="This table is described in the preceding text">Table 13-25</a></p>
</li>
<li>
<p>For LOB buffering, see <a href="adlob_api_overview.htm#GUID-5F36A4D8-FD9C-453E-A968-A1DECDE28EA6__g1039376" title="This table is described in the preceding text">Table 13-26</a></p>
</li>
<li>
<p>To open or close LOBs or <code class="codeph">BFILE</code>s, see <a href="adlob_api_overview.htm#GUID-58CA447A-EA78-402B-A010-422D14E891A2__g1039392" title="This table is described in the preceding text">Table 13-27</a></p>
</li>
</ul>
</div>
</div>
<a id="ADLOB45431"></a><a id="ADLOB45430"></a>
<div class="props_rev_3"><a id="GUID-0AF64F54-3CB8-4AD6-A836-9CE0C416A3F7"></a>
<h3 id="ADLOB-GUID-0AF64F54-3CB8-4AD6-A836-9CE0C416A3F7" class="sect3">Pro*C/C++ Embedded SQL Statements to Modify Persistent LOB Values</h3>
<div>
<div class="tblformalwide" id="GUID-0AF64F54-3CB8-4AD6-A836-9CE0C416A3F7__g1039287">
<p class="titleintable">Table 13-21 Pro*C/C++: Embedded SQL Statements to Modify Persistent LOB Values</p>
<table class="cellalignment2809" title=" Pro*C/C++: Embedded SQL Statements to Modify Persistent LOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8029">Statement</th>
<th class="cellalignment2861" id="d37211e8032">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8037" headers="d37211e8029">
<p><code class="codeph">APPEND</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8037 d37211e8032">
<p>Appends a LOB value to another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8049" headers="d37211e8029">
<p><code class="codeph">COPY</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8049 d37211e8032">
<p>Copies all or a part of a LOB into another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8057" headers="d37211e8029">
<p><code class="codeph">ERASE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8057 d37211e8032">
<p>Erases part of a LOB, starting at a specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8065" headers="d37211e8029">
<p><code class="codeph">LOAD</code> <code class="codeph">FROM</code> <code class="codeph">FILE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8065 d37211e8032">
<p>Loads <code class="codeph">BFILE</code> data into a persistent LOB at a specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8082" headers="d37211e8029">
<p><code class="codeph">TRIM</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8082 d37211e8032">
<p>Truncates a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8090" headers="d37211e8029">
<p><code class="codeph">WRITE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8090 d37211e8032">
<p>Writes data from a buffer into a LOB at a specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8098" headers="d37211e8029">
<p><code class="codeph">WRITE</code> <code class="codeph">APPEND</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8098 d37211e8032">
<p>Writes data from a buffer into a LOB at the end of the LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45433"></a><a id="ADLOB45432"></a>
<div class="props_rev_3"><a id="GUID-B19B91BE-1293-484A-AFB8-9F8BA4DC1EB6"></a>
<h3 id="ADLOB-GUID-B19B91BE-1293-484A-AFB8-9F8BA4DC1EB6" class="sect3">Pro*C/C++ Embedded SQL Statements for Introspection of LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-B19B91BE-1293-484A-AFB8-9F8BA4DC1EB6__g1039315">
<p class="titleintable">Table 13-22 Pro*C/C++: Embedded SQL Statements for Introspection of LOBs</p>
<table class="cellalignment2809" title=" Pro*C/C++: Embedded SQL Statements for Introspection of LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8187">Statement</th>
<th class="cellalignment2861" id="d37211e8190">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8195" headers="d37211e8187">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[CHUNKSIZE</code>]</p>
</td>
<td class="cellalignment2863" headers="d37211e8195 d37211e8190">
<p>Gets the chunk size used when writing. This works for persistent LOBs only. It does not apply to external LOBs (<code class="codeph">BFILE</code>s).</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8210" headers="d37211e8187">
<p><code class="codeph">DESCRIBE [LENGTH]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8210 d37211e8190">
<p>Returns the length of a LOB or a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8221" headers="d37211e8187">
<p><code class="codeph">READ</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8221 d37211e8190">
<p>reads a specified portion of a non-<code class="codeph">NULL</code> LOB or a <code class="codeph">BFILE</code> into a buffer.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45435"></a><a id="ADLOB45434"></a>
<div class="props_rev_3"><a id="GUID-4186F7EC-D78C-4FBB-A821-CE0F6364E30E"></a>
<h3 id="ADLOB-GUID-4186F7EC-D78C-4FBB-A821-CE0F6364E30E" class="sect3">Pro*C/C++ Embedded SQL Statements for Temporary LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-4186F7EC-D78C-4FBB-A821-CE0F6364E30E__g1039331">
<p class="titleintable">Table 13-23 Pro*C/C++: Embedded SQL Statements for Temporary LOBs</p>
<table class="cellalignment2809" title=" Pro*C/C++: Embedded SQL Statements for Temporary LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8317">Statement</th>
<th class="cellalignment2861" id="d37211e8320">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8325" headers="d37211e8317">
<p><code class="codeph">CREATE</code> <code class="codeph">TEMPORARY</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8325 d37211e8320">
<p>Creates a temporary LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8336" headers="d37211e8317">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[ISTEMPORARY]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8336 d37211e8320">
<p>Sees if a LOB locator refers to a temporary LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8347" headers="d37211e8317">
<p><code class="codeph">FREE</code> <code class="codeph">TEMPORARY</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8347 d37211e8320">
<p>Frees a temporary LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45437"></a><a id="ADLOB45436"></a>
<div class="props_rev_3"><a id="GUID-0FFCC2B9-C1C2-4037-972C-AFF2FFC479AE"></a>
<h3 id="ADLOB-GUID-0FFCC2B9-C1C2-4037-972C-AFF2FFC479AE" class="sect3">Pro*C/C++ Embedded SQL Statements for BFILEs</h3>
<div>
<div class="tblformalwide" id="GUID-0FFCC2B9-C1C2-4037-972C-AFF2FFC479AE__g1039347">
<p class="titleintable">Table 13-24 Pro*C/C++: Embedded SQL Statements for BFILES</p>
<table class="cellalignment2809" title=" Pro*C/C++: Embedded SQL Statements for BFILES" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8441">Statement</th>
<th class="cellalignment2861" id="d37211e8444">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8449" headers="d37211e8441">
<p><code class="codeph">FILE</code> <code class="codeph">CLOSE</code> <code class="codeph">ALL</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8449 d37211e8444">
<p>Closes all open <code class="codeph">BFILE</code>s.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8466" headers="d37211e8441">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[FILEEXISTS]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8466 d37211e8444">
<p>Checks whether a <code class="codeph">BFILE</code> exists.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8480" headers="d37211e8441">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[DIRECTORY,FILENAME]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8480 d37211e8444">
<p>Returns the directory object name and filename of a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45439"></a><a id="ADLOB45438"></a>
<div class="props_rev_3"><a id="GUID-DC53C2F1-3179-46DB-BDEA-21A39C0135CC"></a>
<h3 id="ADLOB-GUID-DC53C2F1-3179-46DB-BDEA-21A39C0135CC" class="sect3">Pro*C/C++ Embedded SQL Statements for LOB Locators</h3>
<div>
<div class="tblformalwide" id="GUID-DC53C2F1-3179-46DB-BDEA-21A39C0135CC__g1039363">
<p class="titleintable">Table 13-25 Pro*C/C++ Embedded SQL Statements for LOB Locators</p>
<table class="cellalignment2809" title=" Pro*C/C++ Embedded SQL Statements for LOB Locators" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8572">Statement</th>
<th class="cellalignment2861" id="d37211e8575">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8580" headers="d37211e8572">
<p><code class="codeph">ASSIGN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8580 d37211e8575">
<p>Assigns one LOB locator to another.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8588" headers="d37211e8572">
<p><code class="codeph">FILE</code> <code class="codeph">SET</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8588 d37211e8575">
<p>Sets the directory object name and filename of a <code class="codeph">BFILE</code> in a locator.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45441"></a><a id="ADLOB45440"></a>
<div class="props_rev_3"><a id="GUID-5F36A4D8-FD9C-453E-A968-A1DECDE28EA6"></a>
<h3 id="ADLOB-GUID-5F36A4D8-FD9C-453E-A968-A1DECDE28EA6" class="sect3">Pro*C/C++ Embedded SQL Statements for LOB Buffering</h3>
<div>
<div class="tblformalwide" id="GUID-5F36A4D8-FD9C-453E-A968-A1DECDE28EA6__g1039376">
<p class="titleintable">Table 13-26 Pro*C/C++ Embedded SQL Statements for LOB Buffering</p>
<table class="cellalignment2809" title=" Pro*C/C++ Embedded SQL Statements for LOB Buffering" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8674">Statement</th>
<th class="cellalignment2861" id="d37211e8685">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8690" headers="d37211e8674">
<p><code class="codeph">DISABLE</code> <code class="codeph">BUFFERING</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8690 d37211e8685">
<p>Disables the use of the buffering subsystem.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8701" headers="d37211e8674">
<p><code class="codeph">ENABLE</code> <code class="codeph">BUFFERING</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8701 d37211e8685">
<p>Uses the LOB buffering subsystem for subsequent reads and writes of LOB data.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8712" headers="d37211e8674">
<p><code class="codeph">FLUSH</code> <code class="codeph">BUFFER</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8712 d37211e8685">
<p>Flushes changes made to the LOB buffering subsystem to the database (server)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45443"></a><a id="ADLOB45442"></a>
<div class="props_rev_3"><a id="GUID-58CA447A-EA78-402B-A010-422D14E891A2"></a>
<h3 id="ADLOB-GUID-58CA447A-EA78-402B-A010-422D14E891A2" class="sect3">Pro*C/C++ Embedded SQL Statements to Open and Close LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-58CA447A-EA78-402B-A010-422D14E891A2__g1039392">
<p class="titleintable">Table 13-27 Pro*C/C++ Embedded SQL Statements to Open and Close Persistent LOBs and External LOBs (BFILEs)</p>
<table class="cellalignment2809" title=" Pro*C/C++ Embedded SQL Statements to Open and Close Persistent LOBs and External LOBs (BFILEs)" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e8806">Statement</th>
<th class="cellalignment2861" id="d37211e8809">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8814" headers="d37211e8806">
<p><code class="codeph">OPEN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8814 d37211e8809">
<p>Opens a LOB or <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8825" headers="d37211e8806">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[ISOPEN</code>]</p>
</td>
<td class="cellalignment2863" headers="d37211e8825 d37211e8809">
<p>Sees if a LOB or <code class="codeph">BFILE</code> is open.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e8840" headers="d37211e8806">
<p><code class="codeph">CLOSE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e8840 d37211e8809">
<p>Closes a LOB or <code class="codeph">BFILE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="ADLOB45444"></a>
<div class="props_rev_3"><a id="GUID-71474D94-A041-405B-B5F0-D20E4FE60637"></a>
<h2 id="ADLOB-GUID-71474D94-A041-405B-B5F0-D20E4FE60637" class="sect2">Using COBOL (Pro*COBOL) to Work With LOBs</h2>
<div>
<p>You can make changes to an entire persistent LOB, or to pieces of the beginning, middle or end of it by using embedded SQL. You can access both internal and external LOBs for read purposes, and you can also <span class="italic">write</span> to persistent LOBs.</p>
<p>Embedded SQL statements allow you to access data stored in <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s, and <code class="codeph">BFILE</code>s. These statements are listed in the following tables, and are discussed in greater detail later in the manual.</p>
</div>
<a id="ADLOB45445"></a>
<div class="props_rev_3"><a id="GUID-CF82FF74-794E-46B5-9C83-2930CAE3B578"></a>
<h3 id="ADLOB-GUID-CF82FF74-794E-46B5-9C83-2930CAE3B578" class="sect3">Providing an Allocated Input Locator Pointer That Represents LOB</h3>
<div>
<div class="section">
<p>Unlike locators in PL/SQL, locators in Pro*COBOL are mapped to locator pointers which are then used to refer to the LOB or BFILE value. For the successful completion of an embedded SQL LOB statement you must perform the following:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Provide an <span class="italic">allocated</span> input locator pointer that represents a LOB that exists in the database tablespaces or external file system <span class="italic">before</span> you run the statement.</span></li>
<li class="stepexpand"><span>SELECT a LOB locator into a LOB locator pointer variable</span></li>
<li class="stepexpand"><span>Use this variable in an embedded SQL LOB statement to access and manipulate the LOB value.</span>
<div>
<div class="infoboxnotealso" id="GUID-CF82FF74-794E-46B5-9C83-2930CAE3B578__GUID-7B362F2D-ED2F-44F6-AD68-8C7510424D98">
<p class="notep1">See Also:</p>
<p>APIs for supported LOB operations are described in detail in:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="adlob_creating.htm#GUID-7B3D15D3-A182-4ED1-A265-8EE15E793C46">Operations Specific to Persistent and Temporary LOBs</a></p>
</li>
<li>
<p><a href="adlob_lob_ops.htm#GUID-5BEE64AC-5528-45DC-AB57-A8EDE8E4DE65" title="You can convert a BLOB instance to a CLOB using the PL/SQL procedure DBMS_LOB.CONVERTTOCLOB.">Using LOB APIs</a></p>
</li>
<li>
<p><a href="adlob_bfile_ops.htm#GUID-043A9B91-69C8-44D4-A38A-E872B0A2B9A9" title="You can determine whether a pattern exists in a BFILE using the INSTRoperation.">LOB APIs for BFILE Operations</a></p>
</li>
</ul>
</div>
</div>
</li>
</ol>
<div class="section">
<p>Where the Pro*COBOL interface does not supply the required functionality, you can call OCI using C. Such an example is not provided here because such programs are operating system dependent.</p>
<div class="infoboxnotealso" id="GUID-CF82FF74-794E-46B5-9C83-2930CAE3B578__GUID-D7D672B7-EBB9-4778-895E-3DFD3707E44C">
<p class="notep1">See Also:</p>
<p><a class="olink LNPCB" target="_blank" href="../LNPCB/toc.htm"><span class="italic">Pro*COBOL Programmer&#39;s Guide</span></a> for detailed documentation, including syntax, host variables, host variable types, and example code.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45446"></a>
<div class="props_rev_3"><a id="GUID-D27FBCC9-A30F-4998-AB0D-5BA75A0FDBC3"></a>
<h3 id="ADLOB-GUID-D27FBCC9-A30F-4998-AB0D-5BA75A0FDBC3" class="sect3">Pro*COBOL Statements That Operate on BLOBs, CLOBs, NCLOBs, and BFILEs</h3>
<div>
<p>The following Pro*COBOL statements operate on BLOBs, CLOBs, NCLOBs, and BFILEs:</p>
<ul style="list-style-type: disc;">
<li>
<p>To modify persistent LOBs, see <a href="adlob_api_overview.htm#GUID-D5A29DC3-2AAA-4CC8-8B6D-1D1082DB4E4E__g1039412" title="This table is described in the preceding text">Table 13-28</a></p>
</li>
<li>
<p>To read or examine internal and external LOB values, see <a href="adlob_api_overview.htm#GUID-2B910BBF-B6EC-4366-A0A4-553E7CAA708D__g1039440" title="This table is described in the preceding text">Table 13-29</a></p>
</li>
<li>
<p>To create or free temporary LOB, or check LOB locator, see <a href="adlob_api_overview.htm#GUID-5277D032-D8ED-497D-965D-F4A2FFA0A557__g1039456" title="This table is described in the preceding text">Table 13-30</a></p>
</li>
<li>
<p>To operate close and &#39;see if file exists&#39; functions on <code class="codeph">BFILE</code>s, see <a href="adlob_api_overview.htm#GUID-C727C570-CC69-4470-B271-B624A398B2A8__g1039472" title="This table is described in the preceding text">Table 13-31</a></p>
</li>
<li>
<p>To operate on LOB locators, see <a href="adlob_api_overview.htm#GUID-FBC9DAAE-28CA-4CDA-8165-043DBBE520E4__g1039488" title="This table is described in the preceding text">Table 13-32</a></p>
</li>
<li>
<p>For LOB buffering, see <a href="adlob_api_overview.htm#GUID-A9BEC653-F8D7-45B2-9A47-6357EEEAD2BC__g1039501" title="This table is described in the preceding text">Table 13-33</a></p>
</li>
<li>
<p>To open or close persistent LOBs or <code class="codeph">BFILE</code>s, see <a href="adlob_api_overview.htm#GUID-D2D8C2E1-4DD6-496C-9E77-AE26DBFBFCE4__g1039517" title="This table is described in the preceding text">Table 13-34</a></p>
</li>
</ul>
</div>
</div>
<a id="ADLOB45448"></a><a id="ADLOB45447"></a>
<div class="props_rev_3"><a id="GUID-D5A29DC3-2AAA-4CC8-8B6D-1D1082DB4E4E"></a>
<h3 id="ADLOB-GUID-D5A29DC3-2AAA-4CC8-8B6D-1D1082DB4E4E" class="sect3">Pro*COBOL Embedded SQL Statements to Modify Persistent LOB Values</h3>
<div>
<div class="tblformalwide" id="GUID-D5A29DC3-2AAA-4CC8-8B6D-1D1082DB4E4E__g1039412">
<p class="titleintable">Table 13-28 Pro*COBOL Embedded SQL Statements to Modify LOB Values</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements to Modify LOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e9273">Statement</th>
<th class="cellalignment2861" id="d37211e9276">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9281" headers="d37211e9273">
<p><code class="codeph">APPEND</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9281 d37211e9276">
<p>Appends a LOB value to another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9292" headers="d37211e9273">
<p><code class="codeph">COPY</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9292 d37211e9276">
<p>Copies all or part of a LOB into another LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9300" headers="d37211e9273">
<p><code class="codeph">ERASE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9300 d37211e9276">
<p>Erases part of a LOB, starting at a specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9308" headers="d37211e9273">
<p><code class="codeph">LOAD</code> <code class="codeph">FROM</code> <code class="codeph">FILE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9308 d37211e9276">
<p>Loads <code class="codeph">BFILE</code> data into a persistent LOB at a specified offset.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9325" headers="d37211e9273">
<p><code class="codeph">TRIM</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9325 d37211e9276">
<p>Truncates a LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9333" headers="d37211e9273">
<p><code class="codeph">WRITE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9333 d37211e9276">
<p>Writes data from a buffer into a LOB at a specified offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9341" headers="d37211e9273">
<p><code class="codeph">WRITE</code> <code class="codeph">APPEND</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9341 d37211e9276">
<p>Writes data from a buffer into a LOB at the end of the LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45450"></a><a id="ADLOB45449"></a>
<div class="props_rev_3"><a id="GUID-2B910BBF-B6EC-4366-A0A4-553E7CAA708D"></a>
<h3 id="ADLOB-GUID-2B910BBF-B6EC-4366-A0A4-553E7CAA708D" class="sect3">Pro*COBOL Embedded SQL Statements for Introspection of LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-2B910BBF-B6EC-4366-A0A4-553E7CAA708D__g1039440">
<p class="titleintable">Table 13-29 Pro*COBOL Embedded SQL Statements for Introspection of LOBs</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements for Introspection of LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e9430">Statement</th>
<th class="cellalignment2861" id="d37211e9433">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9438" headers="d37211e9430">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[CHUNKSIZE]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9438 d37211e9433">
<p>Gets the Chunk size used when writing.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9449" headers="d37211e9430">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[LENGTH]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9449 d37211e9433">
<p>Returns the length of a LOB or a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9463" headers="d37211e9430">
<p><code class="codeph">READ</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9463 d37211e9433">
<p>Reads a specified portion of a non-<code class="codeph">NULL</code> LOB or a <code class="codeph">BFILE</code> into a buffer.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45452"></a><a id="ADLOB45451"></a>
<div class="props_rev_3"><a id="GUID-5277D032-D8ED-497D-965D-F4A2FFA0A557"></a>
<h3 id="ADLOB-GUID-5277D032-D8ED-497D-965D-F4A2FFA0A557" class="sect3">Pro*COBOL Embedded SQL Statements for Temporary LOBs</h3>
<div>
<div class="tblformalwide" id="GUID-5277D032-D8ED-497D-965D-F4A2FFA0A557__g1039456">
<p class="titleintable">Table 13-30 Pro*COBOL Embedded SQL Statements for Temporary LOBs</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements for Temporary LOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e9559">Statement</th>
<th class="cellalignment2861" id="d37211e9562">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9567" headers="d37211e9559">
<p><code class="codeph">CREATE</code> <code class="codeph">TEMPORARY</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9567 d37211e9562">
<p>Creates a temporary LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9578" headers="d37211e9559">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[ISTEMPORARY]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9578 d37211e9562">
<p>Sees if a LOB locator refers to a temporary LOB.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9589" headers="d37211e9559">
<p><code class="codeph">FREE</code> <code class="codeph">TEMPORARY</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9589 d37211e9562">
<p>Frees a temporary LOB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45454"></a><a id="ADLOB45453"></a>
<div class="props_rev_3"><a id="GUID-C727C570-CC69-4470-B271-B624A398B2A8"></a>
<h3 id="ADLOB-GUID-C727C570-CC69-4470-B271-B624A398B2A8" class="sect3">Pro*COBOL Embedded SQL Statements for BFILEs</h3>
<div>
<div class="tblformalwide" id="GUID-C727C570-CC69-4470-B271-B624A398B2A8__g1039472">
<p class="titleintable">Table 13-31 Pro*COBOL Embedded SQL Statements for BFILES</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements for BFILES" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e9683">Statement</th>
<th class="cellalignment2861" id="d37211e9686">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9691" headers="d37211e9683">
<p><code class="codeph">FILE</code> <code class="codeph">CLOSE</code> <code class="codeph">ALL</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9691 d37211e9686">
<p>Closes all open <code class="codeph">BFILE</code>s.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9708" headers="d37211e9683">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[FILEEXISTS]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9708 d37211e9686">
<p>Checks whether a <code class="codeph">BFILE</code> exists.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9722" headers="d37211e9683">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[DIRECTORY, FILENAME]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9722 d37211e9686">
<p>Returns the directory object name and filename of a <code class="codeph">BFILE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45456"></a><a id="ADLOB45455"></a>
<div class="props_rev_3"><a id="GUID-FBC9DAAE-28CA-4CDA-8165-043DBBE520E4"></a>
<h3 id="ADLOB-GUID-FBC9DAAE-28CA-4CDA-8165-043DBBE520E4" class="sect3">Pro*COBOL Embedded SQL Statements for LOB Locators</h3>
<div>
<div class="tblformalwide" id="GUID-FBC9DAAE-28CA-4CDA-8165-043DBBE520E4__g1039488">
<p class="titleintable">Table 13-32 Pro*COBOL Embedded SQL Statements for LOB Locator Statements</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements for LOB Locator Statements" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e9818">Statement</th>
<th class="cellalignment2861" id="d37211e9821">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9826" headers="d37211e9818">
<p><code class="codeph">ASSIGN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9826 d37211e9821">
<p>Assigns one LOB locator to another.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e9834" headers="d37211e9818">
<p><code class="codeph">FILE</code> <code class="codeph">SET</code></p>
</td>
<td class="cellalignment2863" headers="d37211e9834 d37211e9821">
<p>Sets the directory object name and filename of a <code class="codeph">BFILE</code> in a locator.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45458"></a><a id="ADLOB45457"></a>
<div class="props_rev_3"><a id="GUID-A9BEC653-F8D7-45B2-9A47-6357EEEAD2BC"></a>
<h3 id="ADLOB-GUID-A9BEC653-F8D7-45B2-9A47-6357EEEAD2BC" class="sect3">Pro*COBOL Embedded SQL Statements for LOB Buffering</h3>
<div>
<div class="tblformalwide" id="GUID-A9BEC653-F8D7-45B2-9A47-6357EEEAD2BC__g1039501">
<p class="titleintable">Table 13-33 Pro*COBOL Embedded SQL Statements for LOB Buffering</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements for LOB Buffering" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2854" id="d37211e9930">Statement</th>
<th class="cellalignment2855" id="d37211e9933">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e9938" headers="d37211e9930">
<p><code class="codeph">DISABLE</code> <code class="codeph">BUFFERING</code></p>
</td>
<td class="cellalignment2857" headers="d37211e9938 d37211e9933">
<p>Disables the use of the buffering subsystem.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e9949" headers="d37211e9930">
<p><code class="codeph">ENABLE</code> <code class="codeph">BUFFERING</code></p>
</td>
<td class="cellalignment2857" headers="d37211e9949 d37211e9933">
<p>Uses the LOB buffering subsystem for subsequent reads and writes of LOB data.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2856" id="d37211e9960" headers="d37211e9930">
<p><code class="codeph">FLUSH</code> <code class="codeph">BUFFER</code></p>
</td>
<td class="cellalignment2857" headers="d37211e9960 d37211e9933">
<p>Flushes changes made to the LOB buffering subsystem to the database (server)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45460"></a><a id="ADLOB45459"></a>
<div class="props_rev_3"><a id="GUID-D2D8C2E1-4DD6-496C-9E77-AE26DBFBFCE4"></a>
<h3 id="ADLOB-GUID-D2D8C2E1-4DD6-496C-9E77-AE26DBFBFCE4" class="sect3">Pro*COBOL Embedded SQL Statements for Opening and Closing LOBs and BFILEs</h3>
<div>
<div class="tblformalwide" id="GUID-D2D8C2E1-4DD6-496C-9E77-AE26DBFBFCE4__g1039517">
<p class="titleintable">Table 13-34 Pro*COBOL Embedded SQL Statements for Opening and Closing Persistent LOBs and BFILEs</p>
<table class="cellalignment2809" title=" Pro*COBOL Embedded SQL Statements for Opening and Closing Persistent LOBs and BFILEs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2860" id="d37211e10044">Statement</th>
<th class="cellalignment2861" id="d37211e10047">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e10052" headers="d37211e10044">
<p><code class="codeph">OPEN</code></p>
</td>
<td class="cellalignment2863" headers="d37211e10052 d37211e10047">
<p>Opens a LOB or <code class="codeph">BFILE</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e10063" headers="d37211e10044">
<p><code class="codeph">DESCRIBE</code> <code class="codeph">[ISOPEN]</code></p>
</td>
<td class="cellalignment2863" headers="d37211e10063 d37211e10047">
<p>Sees if a LOB or <code class="codeph">BFILE</code> is open.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2862" id="d37211e10077" headers="d37211e10044">
<p><code class="codeph">CLOSE</code></p>
</td>
<td class="cellalignment2863" headers="d37211e10077 d37211e10047">
<p>Closes a LOB or <code class="codeph">BFILE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="ADLOB45482"></a>
<div class="props_rev_3"><a id="GUID-02CAA51A-FD04-4A40-8227-0B9108FAED8E"></a>
<h2 id="ADLOB-GUID-02CAA51A-FD04-4A40-8227-0B9108FAED8E" class="sect2">Using Java (JDBC) to Work With LOBs</h2>
<div>
<p>You can perform the following tasks on LOBs with Java (JDBC):</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="adlob_api_overview.htm#GUID-27C7B111-B107-43A2-8BB6-1563337D7767">Modifying Internal Persistent LOBs Using Java</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-FF9E5548-903A-434C-92DC-B72B75077A2F">Reading Internal Persistent LOBs and External LOBs (BFILEs) With Java</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-CD6D70DF-3993-405B-AC6A-DE3331E5F765">Calling DBMS_LOB Package from Java (JDBC)</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#GUID-6F94EE98-481B-42B5-B286-57ABEDA4A39B">Referencing LOBs Using Java (JDBC)</a></p>
</li>
<li>
<p>Create and Manipulate Temporary LOBs and Store Them in Tables as Permanent LOBs. See <a href="adlob_api_overview.htm#GUID-57BFE1D7-2BD9-47A6-ACB2-6AF63F348CDF">JDBC Temporary LOB APIs</a></p>
</li>
</ul>
</div>
<a id="ADLOB45483"></a>
<div class="props_rev_3"><a id="GUID-27C7B111-B107-43A2-8BB6-1563337D7767"></a>
<h3 id="ADLOB-GUID-27C7B111-B107-43A2-8BB6-1563337D7767" class="sect3">Modifying Internal Persistent LOBs Using Java</h3>
<div>
<div class="section">
<p>You can make changes to an entire persistent LOB, or to pieces of the beginning, middle, or end of a persistent LOB in Java by means of the JDBC API using the classes:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">oracle</code>.<code class="codeph">sql</code>.<code class="codeph">BLOB</code></p>
</li>
<li>
<p><code class="codeph">oracle</code>.<code class="codeph">sql</code>.<code class="codeph">CLOB</code></p>
</li>
</ul>
<p>These classes implement <code class="codeph">java.sql.Blob</code> and <code class="codeph">java.sql.Clob</code> interfaces according to the <a id="d37211e10287" class="indexterm-anchor"></a>JDBC 3.0 specification, which has methods for LOB modification. They also include legacy Oracle proprietary methods for LOB modification. These legacy methods are marked as deprecated.</p>
<p>Starting in Oracle Database Release 11.1, the minimum supported version of the JDK is JDK5. To use JDK5, place <code class="codeph">ojdbc5.jar</code> in your <code class="codeph">CLASSPATH</code>. To use JDK6, place <code class="codeph">ojdbc6.jar</code> in your <code class="codeph">CLASSPATH</code>. <code class="codeph">ojdbc5.jar</code> supports the JDBC 3.0 specification and <code class="codeph">ojdbc6.jar</code> supports the JDBC4.0 specification which is new with JDK6.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45486"></a>
<div class="props_rev_3"><a id="GUID-FF9E5548-903A-434C-92DC-B72B75077A2F"></a>
<h3 id="ADLOB-GUID-FF9E5548-903A-434C-92DC-B72B75077A2F" class="sect3">Reading Internal Persistent LOBs and External LOBs (BFILEs) With Java</h3>
<div>
<div class="section">
<p>With JDBC you can use Java to read both internal persistent LOBs and external LOBs (<code class="codeph">BFILE</code>s).</p>
</div>
<!-- class="section" --></div>
<a id="ADLOB45487"></a>
<div class="props_rev_3"><a id="GUID-7815D730-788B-4306-BD22-8EA5EEBAAD69"></a>
<h4 id="ADLOB-GUID-7815D730-788B-4306-BD22-8EA5EEBAAD69" class="sect4">BLOB, CLOB, and BFILE Classes</h4>
<div>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">BLOB</code> and <code class="codeph">CLOB</code> Classes: In JDBC theses classes provide methods for performing operations on large objects in the database including <code class="codeph">BLOB</code> and <code class="codeph">CLOB</code> data types.</p>
</li>
<li>
<p><code class="codeph">BFILE</code> Class: In JDBC this class provides methods for performing operations on <code class="codeph">BFILE</code> data in the database.</p>
</li>
</ul>
<p>The <code class="codeph">BLOB</code>, <code class="codeph">CLOB</code>, and <code class="codeph">BFILE</code> classes encapsulate LOB locators, so you do not deal with locators but instead use methods and properties provided to perform operations and get state information.</p>
</div>
</div>
</div>
<a id="ADLOB45488"></a>
<div class="props_rev_3"><a id="GUID-CD6D70DF-3993-405B-AC6A-DE3331E5F765"></a>
<h3 id="ADLOB-GUID-CD6D70DF-3993-405B-AC6A-DE3331E5F765" class="sect3">Calling DBMS_LOB Package from Java (JDBC)</h3>
<div>
<div class="section">
<p>Any LOB functionality not provided by these classes can be accessed by a call to the PL/SQL <code class="codeph">DBMS_LOB</code> package. This technique is used repeatedly in the examples throughout this manual.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45489"></a>
<div class="props_rev_3"><a id="GUID-2F5DB980-31B8-4BCE-883C-C93135D8B6C7"></a>
<h3 id="ADLOB-GUID-2F5DB980-31B8-4BCE-883C-C93135D8B6C7" class="sect3">Prefetching LOBs to Improve Performance</h3>
<div>
<div class="section">
<p>The number of server round trips can be reduced by prefetching part of the data and metadata (length and chunk size) along with the LOB locator during the fetch.</p>
<p>The <code class="codeph">SELECT</code> parse, execution, and fetch occurs in one round trip. For large LOBs (larger than five times the prefetch size) less improvement is seen.</p>
<p>To configure the prefetch size, a connection property, <code class="codeph">oracle.jdbc.defaultLobPrefetchSize</code>, defined as a constant in <code class="codeph">oracle.jdbc.OracleConnection</code> can be used. Values can be -1 to disable prefetching, 0 to enable prefetching for metadata only, or any value greater than 0 which represents the number of bytes for <code class="codeph">BLOB</code>s and characters for <code class="codeph">CLOB</code>s, to be prefetched along with the locator during fetch operations.</p>
<p>You can change the prefetch size for a particular statement by using a method defined in <code class="codeph">oracle.jdbc.OracleStatement</code>:</p>
<pre dir="ltr">void setLobPrefetchSize(int size) throws SQLException;
</pre>
<p>The statement level setting overrides the setting at the connection level. This setting can also be overriden at the column level through the extended <code class="codeph">defineColumnType</code> method, where the size represents the number of bytes (or characters for <code class="codeph">CLOB</code>) to prefetch. The possible values are the same as for the connection property. The type must be set to <code class="codeph">OracleTypes.CLOB</code> for a <code class="codeph">CLOB</code> column and <code class="codeph">OracleTypes.BLOB</code> for a <code class="codeph">BLOB</code> column. This method throws <code class="codeph">SQLException</code> if the value is less than -1. To complement the statement there is in <code class="codeph">oracle.jdbc.OracleStatement</code>:</p>
<pre dir="ltr">int getLobPrefetchSize();
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45490"></a>
<div class="props_rev_3"><a id="GUID-804335B8-CD52-4AB7-B9E7-96F52CB31C72"></a>
<h3 id="ADLOB-GUID-804335B8-CD52-4AB7-B9E7-96F52CB31C72" class="sect3">Zero-Copy Input/Output for SecureFiles to Improve Performance</h3>
<div>
<p>To improve the performance of SecureFiles, there is a Zero-copy Input/Output protocol on the server that is only available to network clients that support the new Net NS Data transfer protocol.</p>
<p>To determine if a LOB is a SecureFiles or not, use the method</p>
<pre dir="ltr">public boolean isSecureFile() throws SQLException
</pre>
<p>If it is a SecureFiles, <code class="codeph">TRUE</code> is returned.</p>
<p>Use this thin connection property to disable (by setting to <code class="codeph">FALSE</code>) the Zero-copy Input/Output protocol:</p>
<pre dir="ltr">oracle.net.useZeroCopyIO
</pre></div>
<a id="ADLOB45491"></a>
<div class="props_rev_3"><a id="GUID-344610D1-80CF-456B-BBDA-18888DAFF5CE"></a>
<h4 id="ADLOB-GUID-344610D1-80CF-456B-BBDA-18888DAFF5CE" class="sect4">Zero-Copy Input/Output on the Server</h4>
<div>
<p>Oracle Net Services is now able to use data buffers provided by the users of Oracle Net Services without transferring the data into or out of its local buffers.</p>
<p>The network buffers (at the NS layer) are bypassed and internal lob buffers are directly written on the network. The same applies to buffer reads.</p>
<p>This feature is only available to network clients that support the new NS Data packet (this is negotiated during the NS handshake). The thin driver supports the new NS protocol so that the server can use the zero-copy protocol and JavaNet exposes the zero-copy IO mechanism to the upper layer so that data copies are no longer required in the thin driver code.</p>
</div>
</div>
<a id="ADLOB45492"></a>
<div class="props_rev_3"><a id="GUID-F4181C7E-6AB6-4299-BC70-40F6712F8FFE"></a>
<h4 id="ADLOB-GUID-F4181C7E-6AB6-4299-BC70-40F6712F8FFE" class="sect4">Zero-Copy Input/Output in the JDBC Thin Driver</h4>
<div>
<p>When you call the <code class="codeph">BLOB.getBytes(long pos, int length, byte[] buffer)</code> API, the buffer provided is used at the JavaNet layer to read the bytes from the socket.</p>
<p>The data is retrieved in one single round trip. Similarly, during a write operation, when you call <code class="codeph">BLOB.setBytes(long pos, byte[] bytes)</code>, the buffer is directly written on the network at the JavaNet layer. So the data is written in one single round trip. The user buffer is sent as a whole.</p>
</div>
</div>
<a id="ADLOB45493"></a>
<div class="props_rev_3"><a id="GUID-941E02BC-5A01-4DA7-A115-024C6A28F30F"></a>
<h4 id="ADLOB-GUID-941E02BC-5A01-4DA7-A115-024C6A28F30F" class="sect4">JDBC-OCI Driver Considerations</h4>
<div>
<p>The JDBC-OCI driver supports Zero-copy Input/Output in the server and in the network layer.</p>
</div>
</div>
</div>
<a id="ADLOB45494"></a>
<div class="props_rev_3"><a id="GUID-6F94EE98-481B-42B5-B286-57ABEDA4A39B"></a>
<h3 id="ADLOB-GUID-6F94EE98-481B-42B5-B286-57ABEDA4A39B" class="sect3">Referencing LOBs Using Java (JDBC)</h3>
<div>
<div class="section">
<p>You can get a reference to any of the preceding LOBs in the following two ways:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>As a column of an <code class="codeph">OracleResultSet</code></p>
</li>
<li>
<p>As an <code class="codeph">OUT</code> type PL/SQL parameter from an <code class="codeph">OraclePreparedStatement</code></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="ADLOB45495"></a>
<div class="props_rev_3"><a id="GUID-A2721F00-70A7-44E9-8066-3A6A2D759813"></a>
<h4 id="ADLOB-GUID-A2721F00-70A7-44E9-8066-3A6A2D759813" class="sect4">Using OracleResultSet: BLOB and CLOB Objects Retrieved</h4>
<div>
<div class="section">
<p>When <code class="codeph">BLOB</code> and <code class="codeph">CLOB</code> objects are retrieved as a part of an <code class="codeph">OracleResultSet</code>, these objects represent LOB locators of the currently selected row.</p>
<p>If the current row changes due to a move operation, for example, <code class="codeph">rset</code>.<code class="codeph">next</code>(), then the retrieved locator still refers to the original LOB row.</p>
<p>To retrieve the locator for the most current row, you must call <code class="codeph">getBLOB()</code>, <code class="codeph">getCLOB()</code>, or <code class="codeph">getBFILE()</code> on the <code class="codeph">OracleResultSet</code> each time a move operation is made depending on whether the instance is a <code class="codeph">BLOB</code>, <code class="codeph">CLOB</code> or <code class="codeph">BFILE</code>.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ADLOB45496"></a>
<div class="props_rev_3"><a id="GUID-8B063FB9-7499-4327-B04B-2950F0C0D3D0"></a>
<h3 id="ADLOB-GUID-8B063FB9-7499-4327-B04B-2950F0C0D3D0" class="sect3">JDBC Syntax References and Further Information</h3>
<div>
<p>For further JDBC syntax and information about using JDBC with LOBs:</p>
<div class="infoboxnotealso" id="GUID-8B063FB9-7499-4327-B04B-2950F0C0D3D0__GUID-A156CB3E-2C7E-4FF7-995C-A9FB08D8B1BA">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink JJDBC15000" target="_blank" href="../JJDBC/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer&#39;s Guide,</span></a>for detailed documentation, including parameters, parameter types, return values, and example code.</p>
</li>
<li>
<p><a href="http://www.oracle.com/technology/" target="_blank"><code class="codeph">http://www.oracle.com/technology/</code></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="ADLOB45497"></a>
<div class="props_rev_3"><a id="GUID-F5DEF3E8-0B06-4F9E-BF86-2D6B6423475A"></a>
<h3 id="ADLOB-GUID-F5DEF3E8-0B06-4F9E-BF86-2D6B6423475A" class="sect3">JDBC Methods for Operating on LOBs</h3>
<div>
<p>The following JDBC methods operate on <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, and <code class="codeph">BFILE</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">BLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p>To modify <code class="codeph">BLOB</code> values, see <a href="adlob_api_overview.htm#GUID-F6AA9CB0-B645-4221-9B80-AA5F085CD881__g1039682" title="This table is described in the preceding text">Table 13-35</a></p>
</li>
<li>
<p>To read or examine <code class="codeph">BLOB</code> values, see <a href="adlob_api_overview.htm#GUID-8EDB2ECA-BC5C-41AC-A06E-77E3CA37C873__g1039692" title="This table is described in the preceding text">Table 13-36</a></p>
</li>
<li>
<p>For <code class="codeph">BLOB</code> buffering, see <a href="adlob_api_overview.htm#GUID-2BA94E97-6460-4A7E-943F-CE8C55E8C27D__g1039717" title="This table is described in the preceding text">Table 13-37</a></p>
</li>
<li>
<p>Temporary <code class="codeph">BLOB</code>s: Creating, checking if <code class="codeph">BLOB</code> is open, and freeing. See <a href="adlob_api_overview.htm#GUID-AAF3B8DE-61A4-4D8B-BA8F-E16F25E6E43F__g1039847" title="This table is described in the preceding text">Table 13-45</a></p>
</li>
<li>
<p>Opening, closing, and checking if <code class="codeph">BLOB</code> is open, see <a href="adlob_api_overview.htm#GUID-AAF3B8DE-61A4-4D8B-BA8F-E16F25E6E43F__g1039847" title="This table is described in the preceding text">Table 13-45</a></p>
</li>
<li>
<p>Truncating <code class="codeph">BLOB</code>s, see <a href="adlob_api_overview.htm#GUID-D00DE3E9-979D-494F-9587-DFBBED279D56__g1039898" title="This table is described in the preceding text">Table 13-48</a></p>
</li>
<li>
<p><code class="codeph">BLOB</code> streaming API, see <a href="adlob_api_overview.htm#GUID-C5021214-823B-4841-A526-A3CD062F5BDC__g1039922" title="This table is described in the preceding text">Table 13-50</a></p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">CLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p>To read or examine <code class="codeph">CLOB</code> values, see <a href="adlob_api_overview.htm#GUID-94AA2274-A036-4B21-A851-52AE021F8AB5__g1039743" title="This table is described in the preceding text">Table 13-39</a></p>
</li>
<li>
<p>For <code class="codeph">CLOB</code> buffering, see <a href="adlob_api_overview.htm#GUID-64A58BB7-708F-4896-9F81-AF685D4C21B6__g1039771" title="This table is described in the preceding text">Table 13-40</a></p>
</li>
<li>
<p>To modify <code class="codeph">CLOB</code>s, see <a href="adlob_api_overview.htm#GUID-C5021214-823B-4841-A526-A3CD062F5BDC__g1039922" title="This table is described in the preceding text">Table 13-50</a></p>
</li>
</ul>
</li>
<li>
<p>Temporary <code class="codeph">CLOB</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p>Opening, closing, and checking if <code class="codeph">CLOB</code> is open, see <a href="adlob_api_overview.htm#GUID-44EE358F-8738-4B0A-B7FC-DC1CE9D6F679__g1039863" title="This table is described in the preceding text">Table 13-46</a></p>
</li>
<li>
<p>Truncating <code class="codeph">CLOB</code>s, see <a href="adlob_api_overview.htm#GUID-71A891EC-561F-4C24-9CEB-8F771C063620__g1039908" title="This table is described in the preceding text">Table 13-49</a></p>
</li>
<li>
<p><code class="codeph">CLOB</code> streaming API, see <a href="adlob_api_overview.htm#GUID-CAF648CB-7150-4CC5-A243-0B1639C5B01E__g1039935" title="This table is described in the preceding text">Table 13-51</a></p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">BFILE</code>s:</p>
<ul style="list-style-type: disc;">
<li>
<p>To read or examine <code class="codeph">BFILE</code>s, see <a href="adlob_api_overview.htm#GUID-7FFF6336-0FDD-420E-B40A-6F1B9BBA99DA__g1039790" title="This table is described in the preceding text">Table 13-41</a></p>
</li>
<li>
<p>For <code class="codeph">BFILE</code> buffering, see <a href="adlob_api_overview.htm#GUID-7C961594-D7A2-4DE1-836B-718FF3E36EEB__g1039833" title="This table is described in the preceding text">Table 13-42</a></p>
</li>
<li>
<p>Opening, closing, and checking if <code class="codeph">BFILE</code> is open, see <a href="adlob_api_overview.htm#GUID-A50DEBAA-DEDD-403C-ACF2-4F318EE754AE__g1039879" title="This table is described in the preceding text">Table 13-47</a></p>
</li>
<li>
<p>BFILE streaming API, see <a href="adlob_api_overview.htm#GUID-3AF7FB92-E9E6-4B35-8C45-2591902B3091__g1039954" title="This table is described in the preceding text">Table 13-52</a></p>
</li>
</ul>
</li>
</ul>
</div>
</div>
<a id="ADLOB45499"></a><a id="ADLOB45498"></a>
<div class="props_rev_3"><a id="GUID-F6AA9CB0-B645-4221-9B80-AA5F085CD881"></a>
<h3 id="ADLOB-GUID-F6AA9CB0-B645-4221-9B80-AA5F085CD881" class="sect3">JDBC oracle.sql.BLOB Methods to Modify BLOB Values</h3>
<div>
<div class="tblformalwide" id="GUID-F6AA9CB0-B645-4221-9B80-AA5F085CD881__g1039682">
<p class="titleintable">Table 13-35 JDBC oracle.sql.BLOB Methods To Modify BLOB Values</p>
<table class="cellalignment2809" title="JDBC oracle.sql.BLOB Methods To Modify BLOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2876" id="d37211e11648">Method</th>
<th class="cellalignment2877" id="d37211e11651">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11656" headers="d37211e11648">
<p><code class="codeph">int setBytes(long, byte[])</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11656 d37211e11651">
<p>Inserts the byte array into the <code class="codeph">BLOB</code>, starting at the given offset</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45501"></a><a id="ADLOB45500"></a>
<div class="props_rev_3"><a id="GUID-8EDB2ECA-BC5C-41AC-A06E-77E3CA37C873"></a>
<h3 id="ADLOB-GUID-8EDB2ECA-BC5C-41AC-A06E-77E3CA37C873" class="sect3">JDBC oracle.sql.BLOB Methods to Read or Examine BLOB Values</h3>
<div>
<div class="tblformalwide" id="GUID-8EDB2ECA-BC5C-41AC-A06E-77E3CA37C873__g1039692">
<p class="titleintable">Table 13-36 JDBC oracle.sql.BLOB Methods to Read or Examine BLOB Values</p>
<table class="cellalignment2809" title="JDBC oracle.sql.BLOB Methods to Read or Examine BLOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2876" id="d37211e11753">Method</th>
<th class="cellalignment2877" id="d37211e11756">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11761" headers="d37211e11753">
<p><code class="codeph">byte[] getBytes(long, int)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11761 d37211e11756">
<p>Gets the contents of the LOB as an array of bytes, given an offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11769" headers="d37211e11753">
<p><code class="codeph">long position(byte[],long)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11769 d37211e11756">
<p>Finds the given byte array within the LOB, given an offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11777" headers="d37211e11753">
<p><code class="codeph">long position(Blob,long)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11777 d37211e11756">
<p>Finds the given <code class="codeph">BLOB</code> within the LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11788" headers="d37211e11753">
<p><code class="codeph">public boolean equals(java.lang.Object)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11788 d37211e11756">
<p>Compares this LOB with another. Compares the LOB locators.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11796" headers="d37211e11753">
<p><code class="codeph">public long length()</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11796 d37211e11756">
<p>Returns the length of the LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e11804" headers="d37211e11753">
<p><code class="codeph">public int getChunkSize()</code></p>
</td>
<td class="cellalignment2879" headers="d37211e11804 d37211e11756">
<p>Returns the <code class="codeph">ChunkSize</code> of the LOB</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45503"></a><a id="ADLOB45502"></a>
<div class="props_rev_3"><a id="GUID-2BA94E97-6460-4A7E-943F-CE8C55E8C27D"></a>
<h3 id="ADLOB-GUID-2BA94E97-6460-4A7E-943F-CE8C55E8C27D" class="sect3">JDBC oracle.sql.BLOB Methods and Properties for BLOB Buffering</h3>
<div>
<div class="tblformalwide" id="GUID-2BA94E97-6460-4A7E-943F-CE8C55E8C27D__g1039717">
<p class="titleintable">Table 13-37 JDBC oracle.sql.BLOB Methods and Properties for BLOB Buffering</p>
<table class="cellalignment2809" title="JDBC oracle.sql.BLOB Methods and Properties for BLOB Buffering" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2880" id="d37211e11903">Method</th>
<th class="cellalignment2818" id="d37211e11906">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2881" id="d37211e11911" headers="d37211e11903">
<p><code class="codeph">public java.io.InputStream getBinaryStream())</code></p>
</td>
<td class="cellalignment2821" headers="d37211e11911 d37211e11906">
<p>Streams the LOB as a binary stream</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2881" id="d37211e11919" headers="d37211e11903">
<p><code class="codeph">public java.io.OutputStream setBinaryStream()</code></p>
</td>
<td class="cellalignment2821" headers="d37211e11919 d37211e11906">
<p>Retrieves a stream that can be used to write to the <code class="codeph">BLOB</code> value that this <code class="codeph">Blob</code> object represents</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45505"></a><a id="ADLOB45504"></a>
<div class="props_rev_3"><a id="GUID-E351BB9F-8FFA-45F5-825B-F225DE38FB82"></a>
<h3 id="ADLOB-GUID-E351BB9F-8FFA-45F5-825B-F225DE38FB82" class="sect3">JDBC oracle.sql.CLOB Methods to Modify CLOB Values</h3>
<div>
<div class="tblformalwide" id="GUID-E351BB9F-8FFA-45F5-825B-F225DE38FB82__GUID-18075088-FB83-4590-9F3E-21D232E941E8">
<p class="titleintable">Table 13-38 JDBC oracle.sql.CLOB Methods to Modify CLOB Values</p>
<table class="cellalignment2809" title="JDBC oracle.sql.CLOB Methods to Modify CLOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2876" id="d37211e12020">Method</th>
<th class="cellalignment2877" id="d37211e12023">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12028" headers="d37211e12020">
<p><code class="codeph">int setString(long, java.lang.String)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12028 d37211e12023">
<p>JDBC 3.0: Writes the given Java String to the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object designates at the position <code class="codeph">pos</code>.</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12045" headers="d37211e12020">
<p><code class="codeph">int putChars(long, char[])</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12045 d37211e12023">
<p>Inserts the character array into the LOB, starting at the given offset</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45507"></a><a id="ADLOB45506"></a>
<div class="props_rev_3"><a id="GUID-94AA2274-A036-4B21-A851-52AE021F8AB5"></a>
<h3 id="ADLOB-GUID-94AA2274-A036-4B21-A851-52AE021F8AB5" class="sect3">JDBC oracle.sql.CLOB Methods to Read or Examine CLOB Value</h3>
<div>
<div class="tblformalwide" id="GUID-94AA2274-A036-4B21-A851-52AE021F8AB5__g1039743">
<p class="titleintable">Table 13-39 JDBC oracle.sql.CLOB Methods to Read or Examine CLOB Values</p>
<table class="cellalignment2809" title="JDBC oracle.sql.CLOB Methods to Read or Examine CLOB Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2876" id="d37211e12139">Method</th>
<th class="cellalignment2877" id="d37211e12142">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12147" headers="d37211e12139">
<p><code class="codeph">java.lang.String getSubString(long, int)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12147 d37211e12142">
<p>Returns a substring of the LOB as a string</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12155" headers="d37211e12139">
<p><code class="codeph">int getChars(long, int, char[])</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12155 d37211e12142">
<p>Reads a subset of the LOB into a character array</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12163" headers="d37211e12139">
<p><code class="codeph">long position(java.lang.String, long)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12163 d37211e12142">
<p>Finds the given String within the LOB, given an offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12171" headers="d37211e12139">
<p><code class="codeph">long position(oracle.jdbc2.Clob, long)</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12171 d37211e12142">
<p>Finds the given <code class="codeph">CLOB</code> within the LOB, given an offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12182" headers="d37211e12139">
<p><code class="codeph">long length()</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12182 d37211e12142">
<p>Returns the length of the LOB</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2878" id="d37211e12190" headers="d37211e12139">
<p><code class="codeph">int getChunkSize()</code></p>
</td>
<td class="cellalignment2879" headers="d37211e12190 d37211e12142">
<p>R<code class="codeph">eturns the ChunkSize</code> of the LOB</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45509"></a><a id="ADLOB45508"></a>
<div class="props_rev_3"><a id="GUID-64A58BB7-708F-4896-9F81-AF685D4C21B6"></a>
<h3 id="ADLOB-GUID-64A58BB7-708F-4896-9F81-AF685D4C21B6" class="sect3">JDBC oracle.sql.CLOB Methods and Properties for CLOB Buffering</h3>
<div>
<div class="tblformalwide" id="GUID-64A58BB7-708F-4896-9F81-AF685D4C21B6__g1039771">
<p class="titleintable">Table 13-40 JDBC oracle.sql.CLOB Methods and Properties for CLOB Buffering</p>
<table class="cellalignment2809" title="JDBC oracle.sql.CLOB Methods and Properties for CLOB Buffering" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2882" id="d37211e12289">Method</th>
<th class="cellalignment2817" id="d37211e12292">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2883" id="d37211e12297" headers="d37211e12289">
<p><code class="codeph">java.io.InputStream getAsciiStream()</code></p>
</td>
<td class="cellalignment2820" headers="d37211e12297 d37211e12292">
<p>Implements the <code class="codeph">Clob</code> interface method. Gets the <code class="codeph">CLOB</code> value designated by this <code class="codeph">Clob</code> object as a stream of ASCII bytes</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2883" id="d37211e12314" headers="d37211e12289">
<p><code class="codeph">java.io.OutputStream setAsciiStream(long pos)</code></p>
</td>
<td class="cellalignment2820" headers="d37211e12314 d37211e12292">
<p>JDBC 3.0: Retrieves a stream to be used to write ASCII characters to the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2883" id="d37211e12330" headers="d37211e12289">
<p><code class="codeph">java.io.Reader getCharacterStream()</code></p>
</td>
<td class="cellalignment2820" headers="d37211e12330 d37211e12292">
<p>Reads the <code class="codeph">CLOB</code> as a character stream</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2883" id="d37211e12341" headers="d37211e12289">
<p><code class="codeph">java.io.Writer setCharacterStream(long pos)</code></p>
</td>
<td class="cellalignment2820" headers="d37211e12341 d37211e12292">
<p>JDBC 3.0: Retrieves a stream to be used to write Unicode characters to the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45511"></a><a id="ADLOB45510"></a>
<div class="props_rev_3"><a id="GUID-7FFF6336-0FDD-420E-B40A-6F1B9BBA99DA"></a>
<h3 id="ADLOB-GUID-7FFF6336-0FDD-420E-B40A-6F1B9BBA99DA" class="sect3">JDBC oracle.sql.BFILE Methods to Read or Examine External LOB (BFILE) Values</h3>
<div>
<div class="tblformalwide" id="GUID-7FFF6336-0FDD-420E-B40A-6F1B9BBA99DA__g1039790">
<p class="titleintable">Table 13-41 JDBC oracle.sql.BFILE Methods to Read or Examine External LOB (BFILE) Values</p>
<table class="cellalignment2809" title="JDBC oracle.sql.BFILE Methods to Read or Examine External LOB (BFILE) Values" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2884" id="d37211e12444">Method</th>
<th class="cellalignment2802" id="d37211e12447">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12452" headers="d37211e12444">
<p><code class="codeph">byte[] getBytes(long, int)</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12452 d37211e12447">
<p><code class="codeph">G</code>ets the contents of the <code class="codeph">BFILE</code> as an array of bytes, given an offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12465" headers="d37211e12444">
<p><code class="codeph">int getBytes(long, int, byte[])</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12465 d37211e12447">
<p>Reads a subset of the <code class="codeph">BFILE</code> into a byte array</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12476" headers="d37211e12444">
<p><code class="codeph">long position(oracle.sql.BFILE, long)</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12476 d37211e12447">
<p>Finds the first appearance of the given <code class="codeph">BFILE</code> contents within the LOB, from the given offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12487" headers="d37211e12444">
<p><code class="codeph">long position(byte[], long)</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12487 d37211e12447">
<p>Finds the first appearance of the given byte array within the <code class="codeph">BFILE</code>, from the given offset</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12498" headers="d37211e12444">
<p><code class="codeph">long length()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12498 d37211e12447">
<p>R<code class="codeph">eturns the length of the BFILE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12508" headers="d37211e12444">
<p><code class="codeph">boolean fileExists()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12508 d37211e12447">
<p>Checks if the operating system file referenced by this <code class="codeph">BFILE</code> exists</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12519" headers="d37211e12444">
<p><code class="codeph">public void openFile()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12519 d37211e12447">
<p>Opens the operating system file referenced by this <code class="codeph">BFILE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12529" headers="d37211e12444">
<p><code class="codeph">public void closeFile()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12529 d37211e12447">
<p>C<code class="codeph">loses the operating system file referenced by this BFILE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12539" headers="d37211e12444">
<p><code class="codeph">public boolean isFileOpen()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12539 d37211e12447">
<p>Checks if this <code class="codeph">BFILE</code> is open</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12550" headers="d37211e12444">
<p><code class="codeph">public java.lang.String getDirAlias()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12550 d37211e12447">
<p>G<code class="codeph">ets the directory object name for this BFILE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2885" id="d37211e12560" headers="d37211e12444">
<p><code class="codeph">public java.lang.String getName()</code></p>
</td>
<td class="cellalignment2805" headers="d37211e12560 d37211e12447">
<p>G<code class="codeph">ets the file name referenced by this BFILE</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45513"></a><a id="ADLOB45512"></a>
<div class="props_rev_3"><a id="GUID-7C961594-D7A2-4DE1-836B-718FF3E36EEB"></a>
<h3 id="ADLOB-GUID-7C961594-D7A2-4DE1-836B-718FF3E36EEB" class="sect3">JDBC oracle.sql.BFILE Methods and Properties for BFILE Buffering</h3>
<div>
<div class="tblformalwide" id="GUID-7C961594-D7A2-4DE1-836B-718FF3E36EEB__g1039833">
<p class="titleintable">Table 13-42 JDBC oracle.sql.BFILE Methods and Properties for BFILE Buffering</p>
<table class="cellalignment2809" title="JDBC oracle.sql.BFILE Methods and Properties for BFILE Buffering" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2886" id="d37211e12655">Method</th>
<th class="cellalignment2827" id="d37211e12658">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2887" id="d37211e12663" headers="d37211e12655">
<p><code class="codeph">public java.io.InputStream getBinaryStream()</code></p>
</td>
<td class="cellalignment2829" headers="d37211e12663 d37211e12658">
<p>Reads <code class="codeph">the BFILE</code> as a binary stream</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45515"></a><a id="ADLOB45516"></a><a id="ADLOB45514"></a>
<div class="props_rev_3"><a id="GUID-57BFE1D7-2BD9-47A6-ACB2-6AF63F348CDF"></a>
<h3 id="ADLOB-GUID-57BFE1D7-2BD9-47A6-ACB2-6AF63F348CDF" class="sect3">JDBC Temporary LOB APIs</h3>
<div>
<p>Oracle Database JDBC drivers contain APIs to create and close temporary LOBs. These APIs can replace workarounds that use the following procedures from the <code class="codeph">DBMS_LOB</code> PL/SQL package in prior releases:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_LOB.createTemporary()</code></p>
</li>
<li>
<p><code class="codeph">DBMS_LOB.isTemporary()</code></p>
</li>
<li>
<p><code class="codeph">DBMS_LOB.freeTemporary()</code></p>
</li>
</ul>
<div class="tblformalwide" id="GUID-57BFE1D7-2BD9-47A6-ACB2-6AF63F348CDF__GUID-31E3EE28-1CB6-49A2-9E93-6C4118906CE5">
<p class="titleintable">Table 13-43 JDBC: Temporary BLOB APIs</p>
<table class="cellalignment2809" title="JDBC: Temporary BLOB APIs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2873" id="d37211e12765">Methods</th>
<th class="cellalignment2872" id="d37211e12768">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e12773" headers="d37211e12765">
<p><code class="codeph">public static BLOB createTemporary(Connection conn,</code></p>
<p><code class="codeph">boolean cache, int duration) throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e12773 d37211e12768">
<p>Creates a temporary <code class="codeph">BLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e12786" headers="d37211e12765">
<p><code class="codeph">public static boolean isTemporary(BLOB blob)</code></p>
<p><code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e12786 d37211e12768">
<p>Checks if the specified <code class="codeph">BLOB</code> locator refers to a temporary <code class="codeph">BLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e12803" headers="d37211e12765">
<p><code class="codeph">public boolean isTemporary() throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e12803 d37211e12768">
<p>Checks if the current <code class="codeph">BLOB</code> locator refers to a temporary <code class="codeph">BLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e12816" headers="d37211e12765">
<p><code class="codeph">public static void freeTemporary(BLOB temp_blob)</code></p>
<p><code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e12816 d37211e12768">
<p>Frees the specified temporary <code class="codeph">BLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e12829" headers="d37211e12765">
<p><code class="codeph">public void freeTemporary() throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e12829 d37211e12768">
<p>Frees the temporary <code class="codeph">BLOB</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="tblformalwide" id="GUID-57BFE1D7-2BD9-47A6-ACB2-6AF63F348CDF__g1040069">
<p class="titleintable">Table 13-44 JDBC: Temporary CLOB APIs</p>
<table class="cellalignment2809" title="JDBC: Temporary CLOB APIs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2864" id="d37211e12848">Methods</th>
<th class="cellalignment2852" id="d37211e12851">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e12856" headers="d37211e12848">
<p><code class="codeph">public static CLOB createTemporary(Connection conn,</code></p>
<p><code class="codeph">boolean cache, int duration) throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e12856 d37211e12851">
<p>Creates a temporary <code class="codeph">CLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e12869" headers="d37211e12848">
<p><code class="codeph">public static boolean isTemporary(CLOB clob)</code></p>
<p><code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e12869 d37211e12851">
<p>Checks if the specified <code class="codeph">CLOB</code> locator refers to a temporary <code class="codeph">CLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e12886" headers="d37211e12848">
<p><code class="codeph">public boolean isTemporary() throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e12886 d37211e12851">
<p>Checks if the current <code class="codeph">CLOB</code> locator refers to a temporary <code class="codeph">CLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e12899" headers="d37211e12848">
<p><code class="codeph">public static void freeTemporary(CLOB temp_clob)</code></p>
<p><code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e12899 d37211e12851">
<p>Frees the specified temporary <code class="codeph">CLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e12912" headers="d37211e12848">
<p><code class="codeph">public void freeTemporary() throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e12912 d37211e12851">
<p>Frees the temporary <code class="codeph">CLOB</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="ADLOB45517"></a>
<div class="props_rev_3"><a id="GUID-C452B6F0-F287-4A8F-BA0C-1A3A525A72EE"></a>
<h3 id="ADLOB-GUID-C452B6F0-F287-4A8F-BA0C-1A3A525A72EE" class="sect3">JDBC: Opening and Closing LOBs</h3>
<div>
<p><code class="codeph">oracle.sql.CLOB</code> class is the Oracle JDBC driver implementation of standard JDBC <code class="codeph">java.sql.Clob</code> interface. <a href="adlob_api_overview.htm#GUID-57BFE1D7-2BD9-47A6-ACB2-6AF63F348CDF__g1040069" title="This table is described in the preceding text">Table 13-44</a> lists the Oracle extension APIs in <code class="codeph">oracle.sql.CLOB</code> for accessing temporary CLOBs.</p>
<p>Oracle Database JDBC drivers contain APIs to explicitly open and close LOBs. These APIs replace previous techniques that use <code class="codeph">DBMS_LOB.open()</code> and <code class="codeph">DBMS_LOB.close()</code>.</p>
</div>
</div>
<a id="ADLOB45519"></a><a id="ADLOB45518"></a>
<div class="props_rev_3"><a id="GUID-AAF3B8DE-61A4-4D8B-BA8F-E16F25E6E43F"></a>
<h3 id="ADLOB-GUID-AAF3B8DE-61A4-4D8B-BA8F-E16F25E6E43F" class="sect3">JDBC: Opening and Closing BLOBs</h3>
<div>
<p><code class="codeph">oracle.sql.BLOB</code> class is the Oracle JDBC driver implementation of standard JDBC java.sql.Blob interface. <a href="adlob_api_overview.htm#GUID-AAF3B8DE-61A4-4D8B-BA8F-E16F25E6E43F__g1039847" title="This table is described in the preceding text">Table 13-45</a> lists the Oracle extension APIs in <code class="codeph">oracle.sql.BLOB</code> that open and close BLOBs.</p>
<div class="tblformalwide" id="GUID-AAF3B8DE-61A4-4D8B-BA8F-E16F25E6E43F__g1039847">
<p class="titleintable">Table 13-45 JDBC: Opening and Closing BLOBs</p>
<table class="cellalignment2809" title="JDBC: Opening and Closing BLOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2880" id="d37211e13106">Methods</th>
<th class="cellalignment2818" id="d37211e13109">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2881" id="d37211e13114" headers="d37211e13106">
<p><code class="codeph">public void open(int mode) throws SQLException</code></p>
</td>
<td class="cellalignment2821" headers="d37211e13114 d37211e13109">
<p>Opens the <code class="codeph">BLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2881" id="d37211e13124" headers="d37211e13106">
<p><code class="codeph">public boolean isOpen() throws SQLException</code></p>
</td>
<td class="cellalignment2821" headers="d37211e13124 d37211e13109">
<p>Sees if the <code class="codeph">BLOB</code> is open</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2881" id="d37211e13135" headers="d37211e13106">
<p><code class="codeph">public void close() throws SQLException</code></p>
</td>
<td class="cellalignment2821" headers="d37211e13135 d37211e13109">
<p>Closes the <code class="codeph">BLOB</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="ADLOB45520"></a>
<div class="props_rev_3"><a id="GUID-A6031040-B6C9-4790-AEC2-8B41D0988E2A"></a>
<h4 id="ADLOB-GUID-A6031040-B6C9-4790-AEC2-8B41D0988E2A" class="sect4">Opening the BLOB Using JDBC</h4>
<div>
<div class="section">
<p>To open a <code class="codeph">BLOB</code>, your JDBC application can use the open method as defined in <code class="codeph">oracle.sql.BLOB</code> class as follows:</p>
<pre dir="ltr">/** 
 * Open a BLOB in the indicated mode. Valid modes include MODE_READONLY,
 * and MODE_READWRITE. It is an error to open the same LOB twice. 
 */ 
public void open (int mode) throws SQLException
</pre>
<p>Possible values of the mode parameter are:</p>
<pre dir="ltr">public static final int MODE_READONLY 
public static final int MODE_READWRITE 
</pre>
<p>Each call to open opens the BLOB. For example:</p>
<pre dir="ltr">BLOB blob = ... 
blob.open (BLOB.MODE_READWRITE);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45521"></a>
<div class="props_rev_3"><a id="GUID-ECB9882D-E1FD-48FF-9942-BFC2483E711D"></a>
<h4 id="ADLOB-GUID-ECB9882D-E1FD-48FF-9942-BFC2483E711D" class="sect4">Checking If the BLOB Is Open Using JDBC</h4>
<div>
<div class="section">
<p>To see if a <code class="codeph">BLOB</code> is opened, your JDBC application can use the <code class="codeph">isOpen</code> method defined in oracle.sql.BLOB. The return Boolean value indicates whether the <code class="codeph">BLOB</code> has been previously opened or not. The <code class="codeph">isOpen</code> method is defined as follows:</p>
<pre dir="ltr">/** 
 * Check whether the BLOB is opened. 
 * @return true if the LOB is opened. 
 */ 
 public boolean isOpen () throws SQLException
</pre>
<p>The usage example is:</p>
<pre dir="ltr">BLOB blob = ... 
// See if the BLOB is opened 
boolean isOpen = blob.isOpen ();
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45522"></a>
<div class="props_rev_3"><a id="GUID-77ED0849-CF35-4124-8937-E6E998EC2A5D"></a>
<h4 id="ADLOB-GUID-77ED0849-CF35-4124-8937-E6E998EC2A5D" class="sect4">Closing the BLOB Using JDBC</h4>
<div>
<div class="section">
<p>To close a BLOB, your JDBC application can use the close method defined in <code class="codeph">oracle.sql.BLOB</code>. The close API is defined as follows:</p>
<pre dir="ltr">/** 
  * Close a previously opened BLOB. 
  */ 
public void close () throws SQLException
</pre>
<p>The usage example is:</p>
<pre dir="ltr">BLOB blob = ... 
// close the BLOB 
blob.close ();
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="ADLOB45524"></a><a id="ADLOB45523"></a>
<div class="props_rev_3"><a id="GUID-44EE358F-8738-4B0A-B7FC-DC1CE9D6F679"></a>
<h3 id="ADLOB-GUID-44EE358F-8738-4B0A-B7FC-DC1CE9D6F679" class="sect3">JDBC: Opening and Closing CLOBs</h3>
<div>
<p>Class <code class="codeph">oracle.sql.CLOB</code> is the Oracle JDBC driver implementation of the standard JDBC <code class="codeph">java.sql.Clob</code> interface. <a href="adlob_api_overview.htm#GUID-44EE358F-8738-4B0A-B7FC-DC1CE9D6F679__g1039863" title="This table is described in the preceding text">Table 13-46</a> lists the Oracle extension APIs in <code class="codeph">oracle.sql.CLOB</code> to open and close <code class="codeph">CLOB</code>s.</p>
<div class="tblformalwide" id="GUID-44EE358F-8738-4B0A-B7FC-DC1CE9D6F679__g1039863">
<p class="titleintable">Table 13-46 JDBC: Opening and Closing CLOBs</p>
<table class="cellalignment2809" title="JDBC: Opening and Closing CLOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2864" id="d37211e13485">Methods</th>
<th class="cellalignment2852" id="d37211e13488">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13493" headers="d37211e13485">
<p><code class="codeph">public void open(int mode) throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e13493 d37211e13488">
<p>Open the <code class="codeph">CLOB</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13503" headers="d37211e13485">
<p><code class="codeph">public boolean isOpen() throws SQLExceptio</code>n</p>
</td>
<td class="cellalignment2853" headers="d37211e13503 d37211e13488">
<p>See if the <code class="codeph">CLOB</code> is opened</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13515" headers="d37211e13485">
<p><code class="codeph">public void close() throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e13515 d37211e13488">
<p>Close the <code class="codeph">CLOB</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="ADLOB45525"></a>
<div class="props_rev_3"><a id="GUID-DE8C841C-4A69-4934-90B1-27C03ABFE860"></a>
<h4 id="ADLOB-GUID-DE8C841C-4A69-4934-90B1-27C03ABFE860" class="sect4">Opening the CLOB Using JDBC</h4>
<div>
<div class="section">
<p>To open a <code class="codeph">CLOB</code>, your JDBC application can use the open method defined in <code class="codeph">oracle.sql.CLOB</code> class as follows:</p>
<pre dir="ltr">/** 
 * Open a CLOB in the indicated mode. Valid modes include MODE_READONLY,
 * and MODE_READWRITE. It is an error to open the same LOB twice. 
 */ 
public void open (int mode) throws SQLException
</pre>
<p>The possible values of the mode parameter are:</p>
<pre dir="ltr">public static final int MODE_READONLY 
public static final int MODE_READWRITE 
</pre>
<p>Each call to open opens the <code class="codeph">CLOB</code>. For example,</p>
<pre dir="ltr">CLOB clob = ... 
clob.open (CLOB.MODE_READWRITE);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45526"></a>
<div class="props_rev_3"><a id="GUID-47D7503D-F4B1-4753-9CC9-3D18995D8A8A"></a>
<h4 id="ADLOB-GUID-47D7503D-F4B1-4753-9CC9-3D18995D8A8A" class="sect4">Checking If the CLOB Is Open Using JDBC</h4>
<div>
<div class="section">
<p>To see if a <code class="codeph">CLOB</code> is opened, your JDBC application can use the <code class="codeph">isOpen</code> method defined in oracle.sql.CLOB. The return Boolean value indicates whether the <code class="codeph">CLOB</code> has been previously opened or not. The <code class="codeph">isOpen</code> method is defined as follows:</p>
<pre dir="ltr">/** 
  * Check whether the CLOB is opened. 
  * @return true if the LOB is opened. 
  */ 
public boolean isOpen () throws SQLException
</pre>
<p>The usage example is:</p>
<pre dir="ltr">CLOB clob = ... 
 // See if the CLOB is opened 
 boolean isOpen = clob.isOpen ();
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45527"></a>
<div class="props_rev_3"><a id="GUID-F7ADDC40-9F49-45DF-BD85-E420815366C1"></a>
<h4 id="ADLOB-GUID-F7ADDC40-9F49-45DF-BD85-E420815366C1" class="sect4">Closing the CLOB Using JDBC</h4>
<div>
<div class="section">
<p>To close a <code class="codeph">CLOB</code>, the JDBC application can use the close method defined in <code class="codeph">oracle.sql.CLOB</code>. The close API is defined as follows:</p>
<pre dir="ltr">/** 
* Close a previously opened CLOB. 
*/ 
public void close () throws SQLException
</pre>
<p>The usage example is:</p>
<pre dir="ltr">CLOB clob = ... 
// close the CLOB 
clob.close ();
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="ADLOB45529"></a><a id="ADLOB45528"></a>
<div class="props_rev_3"><a id="GUID-A50DEBAA-DEDD-403C-ACF2-4F318EE754AE"></a>
<h3 id="ADLOB-GUID-A50DEBAA-DEDD-403C-ACF2-4F318EE754AE" class="sect3">JDBC: Opening and Closing BFILEs</h3>
<div>
<p><code class="codeph">oracle.sql.BFILE</code> class wraps the database <code class="codeph">BFILE</code> object. <a href="adlob_api_overview.htm#GUID-A50DEBAA-DEDD-403C-ACF2-4F318EE754AE__g1039879" title="This table is described in the preceding text">Table 13-47</a> lists the Oracle extension APIs in <code class="codeph">oracle.sql.BFILE</code> for opening and closing <code class="codeph">BFILE</code>s.</p>
<div class="tblformalwide" id="GUID-A50DEBAA-DEDD-403C-ACF2-4F318EE754AE__g1039879">
<p class="titleintable">Table 13-47 JDBC API Extensions for Opening and Closing BFILEs</p>
<table class="cellalignment2809" title="JDBC API Extensions for Opening and Closing BFILEs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2864" id="d37211e13871">Methods</th>
<th class="cellalignment2852" id="d37211e13874">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13879" headers="d37211e13871">
<p><code class="codeph">public void open() throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e13879 d37211e13874">
<p>Opens the <code class="codeph">BFILE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13889" headers="d37211e13871">
<p><code class="codeph">public void open(int mode) throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e13889 d37211e13874">
<p>Opens the <code class="codeph">BFILE</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13899" headers="d37211e13871">
<p><code class="codeph">public boolean isOpen() throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e13899 d37211e13874">
<p>Checks if the <code class="codeph">BFILE</code> is open</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e13910" headers="d37211e13871">
<p><code class="codeph">public void close() throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e13910 d37211e13874">
<p>Closes the <code class="codeph">BFILE</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="ADLOB45530"></a>
<div class="props_rev_3"><a id="GUID-B81CD013-90A3-4BB7-84E0-E43A48EAE6AE"></a>
<h4 id="ADLOB-GUID-B81CD013-90A3-4BB7-84E0-E43A48EAE6AE" class="sect4">Opening BFILEs</h4>
<div>
<div class="section">
<p>To open a <code class="codeph">BFILE</code>, your JDBC application can use the <code class="codeph">OPEN</code> method defined in <code class="codeph">oracle.sql.BFILE</code> class as follows:</p>
<pre dir="ltr">/** 
 * Open a external LOB in the read-only mode. It is an error 
 * to open the same LOB twice. 
 */ 
public void open () throws SQLException 

/** 
 * Open a external LOB in the indicated mode. Valid modes include 
 * MODE_READONLY only. It is an error to open the same 
 * LOB twice. 
 */ 
public void open (int mode) throws SQLException
</pre>
<p>The only possible value of the mode parameter is:</p>
<pre dir="ltr">public static final int MODE_READONLY 
</pre>
<p>Each call to open opens the <code class="codeph">BFILE</code>. For example,</p>
<pre dir="ltr">BFILE bfile = ... 
bfile.open ();
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45531"></a>
<div class="props_rev_3"><a id="GUID-76AD1F57-B2CE-45C2-A20B-3002A6F23CD4"></a>
<h4 id="ADLOB-GUID-76AD1F57-B2CE-45C2-A20B-3002A6F23CD4" class="sect4">Checking If the BFILE Is Open</h4>
<div>
<div class="section">
<p>To see if a <code class="codeph">BFILE</code> is opened, your JDBC application can use the <code class="codeph">isOpen</code> method defined in <code class="codeph">oracle.sql.BFILE</code>. The return Boolean value indicates whether the BFILE has been previously opened or not. The <code class="codeph">isOpen</code> method is defined as follows:</p>
<pre dir="ltr">/** 
 * Check whether the BFILE is opened. 
 * @return true if the LOB is opened. 
 */ 
public boolean isOpen () throws SQLException
</pre>
<p>The usage example is:</p>
<pre dir="ltr">BFILE bfile = ... 
// See if the BFILE is opened 
boolean isOpen = bfile.isOpen ();
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45532"></a>
<div class="props_rev_3"><a id="GUID-7DA7CA52-692E-4884-9761-151AA52DE560"></a>
<h4 id="ADLOB-GUID-7DA7CA52-692E-4884-9761-151AA52DE560" class="sect4">Closing the BFILE</h4>
<div>
<div class="section">
<p>To close a <code class="codeph">BFILE</code>, your JDBC application can use the <code class="codeph">close</code> method defined in <code class="codeph">oracle.sql.BFILE</code>. The <code class="codeph">close</code> API is defined as follows:</p>
<pre dir="ltr">/** 
 * Close a previously opened BFILE. 
*/ 
public void close () throws SQLException
</pre>
<p>The usage example is --</p>
<pre dir="ltr">BFILE bfile = ... 
// close the BFILE 
bfile.close ();
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45533"></a>
<div class="props_rev_3"><a id="GUID-485CBA7C-9056-44BC-B6E8-42C8AE3E1DB8"></a>
<h4 id="ADLOB-GUID-485CBA7C-9056-44BC-B6E8-42C8AE3E1DB8" class="sect4">Usage Example (OpenCloseLob.java)</h4>
<div>
<pre dir="ltr">/* 
 * This sample shows how to open/close BLOB and CLOB. 
 */ 

// You must import the java.sql package to use JDBC 
import java.sql.*; 

// You must import the oracle.sql package to use oracle.sql.BLOB 
import oracle.sql.*; 

class OpenCloseLob 
{ 
  public static void main (String args []) 
       throws SQLException 
  { 
    // Load the Oracle JDBC driver 
    DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver()); 

    String url = &#34;jdbc:oracle:oci8:@&#34;; 
    try { 
      String url1 = System.getProperty(&#34;JDBC_URL&#34;); 
      if (url1 != null) 
        url = url1; 
    } catch (Exception e) { 
      // If there is any security exception, ignore it 
      // and use the default 
    } 

    // Connect to the database 
    Connection conn = 
      DriverManager.getConnection (url, &#34;scott&#34;, &#34;<span class="italic">password</span>&#34;); 
    // It is faster when auto commit is off 
    conn.setAutoCommit (false); 

    // Create a Statement 
    Statement stmt = conn.createStatement (); 

    try 
    { 
      stmt.execute (&#34;drop table basic_lob_table&#34;); 
    } 
    catch (SQLException e) 
    { 
      // An exception could be raised here if the table did not exist. 
    } 

// Create a table containing a BLOB and a CLOB 
stmt.execute (&#34;create table basic_lob_table (x varchar2 (30), b blob, c clob)&#34;); 

// Populate the table 
stmt.execute (
    &#34;insert into basic_lob_table values&#34;
    + &#34; (&#39;one&#39;, &#39;010101010101010101010101010101&#39;, &#39;onetwothreefour&#39;)&#34;); 

    // Select the lobs 
    ResultSet rset = stmt.executeQuery (&#34;select * from basic_lob_table&#34;); 
    while (rset.next ()) 
    { 
      // Get the lobs 
      BLOB blob = (BLOB) rset.getObject (2); 
      CLOB clob = (CLOB) rset.getObject (3); 

      // Open the lobs 
      System.out.println (&#34;Open the lobs&#34;); 
      blob.open (BLOB.MODE_READWRITE); 
      clob.open (CLOB.MODE_READWRITE); 

      // Check if the lobs are opened 
      System.out.println (&#34;blob.isOpen()=&#34;+blob.isOpen()); 
      System.out.println (&#34;clob.isOpen()=&#34;+clob.isOpen()); 

      // Close the lobs 
      System.out.println (&#34;Close the lobs&#34;); 
      blob.close (); 
      clob.close (); 

      // Check if the lobs are opened 
      System.out.println (&#34;blob.isOpen()=&#34;+blob.isOpen()); 
      System.out.println (&#34;clob.isOpen()=&#34;+clob.isOpen()); 
    } 

    // Close the ResultSet 
    rset.close (); 

    // Close the Statement 
    stmt.close (); 

    // Close the connection 
    conn.close (); 
  } 
} 
</pre></div>
</div>
</div>
<a id="ADLOB45534"></a>
<div class="props_rev_3"><a id="GUID-A3061856-FD7E-49BA-9A83-93A00A218F6D"></a>
<h3 id="ADLOB-GUID-A3061856-FD7E-49BA-9A83-93A00A218F6D" class="sect3">Truncating LOBs Using JDBC</h3>
<div>
<p>Oracle Database JDBC drivers contain APIs to truncate persistent LOBs. These APIs replace previous techniques that used <code class="codeph">DBMS_LOB.trim()</code>.</p>
</div>
<a id="ADLOB45536"></a><a id="ADLOB45535"></a>
<div class="props_rev_3"><a id="GUID-D00DE3E9-979D-494F-9587-DFBBED279D56"></a>
<h4 id="ADLOB-GUID-D00DE3E9-979D-494F-9587-DFBBED279D56" class="sect4">JDBC: Truncating BLOBs</h4>
<div>
<div class="section">
<p><code class="codeph">oracle.sql.BLOB</code> class is Oracle JDBC driver implementation of the standard JDBC <code class="codeph">java.sql.Blob</code> interface. <a href="adlob_api_overview.htm#GUID-D00DE3E9-979D-494F-9587-DFBBED279D56__g1039898" title="This table is described in the preceding text">Table 13-48</a> lists the Oracle extension API in <code class="codeph">oracle.sql.BLOB</code> that truncates BLOBs.</p>
<div class="tblformalwide" id="GUID-D00DE3E9-979D-494F-9587-DFBBED279D56__g1039898">
<p class="titleintable">Table 13-48 JDBC: Truncating BLOBs</p>
<table class="cellalignment2809" title="JDBC: Truncating BLOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2858" id="d37211e14408">Methods</th>
<th class="cellalignment2810" id="d37211e14411">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2859" id="d37211e14416" headers="d37211e14408">
<p><code class="codeph">public void truncate(long newlen) throws SQLException</code></p>
</td>
<td class="cellalignment2813" headers="d37211e14416 d37211e14411">
<p>Truncates the <code class="codeph">BLOB</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The truncate API is defined as follows:</p>
<pre dir="ltr">/** 
*Truncate the value of the BLOB to the length you specify in the newlen parameter. 
 * @param newlen the new length of the BLOB. 
 */ 
public void truncate (long newlen) throws SQLException
</pre>
<p>The <code class="codeph">newlen</code> parameter specifies the new length of the <code class="codeph">BLOB</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ADLOB45538"></a><a id="ADLOB45537"></a>
<div class="props_rev_3"><a id="GUID-71A891EC-561F-4C24-9CEB-8F771C063620"></a>
<h4 id="ADLOB-GUID-71A891EC-561F-4C24-9CEB-8F771C063620" class="sect4">JDBC: Truncating CLOBs</h4>
<div>
<div class="section">
<p><code class="codeph">oracle.sql.CLOB</code> class is the Oracle JDBC driver implementation of standard JDBC <code class="codeph">java.sql.Clob</code> interface. <a href="adlob_api_overview.htm#GUID-71A891EC-561F-4C24-9CEB-8F771C063620__g1039908" title="This table is described in the preceding text">Table 13-49</a> lists the Oracle extension API in <code class="codeph">oracle.sql.CLOB</code> that truncates <code class="codeph">CLOB</code>s.</p>
<div class="tblformalwide" id="GUID-71A891EC-561F-4C24-9CEB-8F771C063620__g1039908">
<p class="titleintable">Table 13-49 JDBC: Truncating CLOBs</p>
<table class="cellalignment2809" title="JDBC: Truncating CLOBs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2861" id="d37211e14529">Methods</th>
<th class="cellalignment2860" id="d37211e14532">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2863" id="d37211e14537" headers="d37211e14529">
<p><code class="codeph">public void truncate(long newlen) throws SQLException</code></p>
</td>
<td class="cellalignment2862" headers="d37211e14537 d37211e14532">
<p>Truncates the <code class="codeph">CLOB</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The truncate API is defined as follows:</p>
<pre dir="ltr">/** 
*Truncate the value of the CLOB to the length you specify in the newlen parameter.
 * @param newlen the new length of the CLOB. 
 */ 
public void truncate (long newlen) throws SQLException
</pre>
<p>The <code class="codeph">newlen</code> parameter specifies the new length of the <code class="codeph">CLOB</code>.</p>
<div class="infobox-note" id="GUID-71A891EC-561F-4C24-9CEB-8F771C063620__GUID-C4FC6A8F-01B7-4824-B021-97F08AD0037B">
<p class="notep1">See:</p>
<p><span class="q">&#34;<a href="adlob_lob_ops.htm#GUID-1F0A8155-1431-4804-81DE-D55EE5A69CB2">About Trimming LOB Data</a>&#34;</span>, for an example.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ADLOB45540"></a><a id="ADLOB45539"></a>
<div class="props_rev_3"><a id="GUID-C5021214-823B-4841-A526-A3CD062F5BDC"></a>
<h3 id="ADLOB-GUID-C5021214-823B-4841-A526-A3CD062F5BDC" class="sect3">JDBC BLOB Streaming APIs</h3>
<div>
<p>The JDBC interface provided with the database includes LOB streaming APIs that enable you to read from or write to a LOB at the requested position from a Java stream.</p>
<p>The <code class="codeph">oracle.sql.BLOB</code> class implements the standard JDBC <code class="codeph">java.sql.Blob</code> interface. <a href="adlob_api_overview.htm#GUID-C5021214-823B-4841-A526-A3CD062F5BDC__g1039922" title="This table is described in the preceding text">Table 13-50</a> lists BLOB Streaming APIs.</p>
<div class="tblformalwide" id="GUID-C5021214-823B-4841-A526-A3CD062F5BDC__g1039922">
<p class="titleintable">Table 13-50 JDBC: BLOB Streaming APIs</p>
<table class="cellalignment2809" title="JDBC: BLOB Streaming APIs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2864" id="d37211e14663">Methods</th>
<th class="cellalignment2852" id="d37211e14666">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e14671" headers="d37211e14663">
<p><code class="codeph">public java.io.OutputStream</code></p>
<p><code class="codeph">setBinaryStream (long pos)</code> <code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e14671 d37211e14666">
<p>JDBC 3.0: Retrieves a stream that can be used to write to the <code class="codeph">BLOB</code> value that this <code class="codeph">Blob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e14692" headers="d37211e14663">
<p><code class="codeph">public java.io.InputStream</code></p>
<p><code class="codeph">getBinaryStream()</code> <code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e14692 d37211e14666">
<p>JDBC 3.0: Retrieves a stream that can be used to read the <code class="codeph">BLOB</code> value that this <code class="codeph">Blob</code> object represents, starting at the beginning</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e14712" headers="d37211e14663">
<p><code class="codeph">public java.io.InputStream</code></p>
<p><code class="codeph">getBinaryStream(long pos)</code> <code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e14712 d37211e14666">
<p>Oracle extension: Retrieves a stream that can be used to read the <code class="codeph">BLOB</code> value that this <code class="codeph">Blob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>These APIs are defined as follows:</p>
<pre dir="ltr">/** 
 * Write to the BLOB from a stream at the requested position. 
 * 
 * @param pos is the position data to be put. 
 * @return a output stream to write data to the BLOB 
 */ 
public java.io.OutputStream setBinaryStream(long pos) throws SQLException

/** 
 * Read from the BLOB as a stream at the requested position. 
 * 
 * @param pos is the position data to be read. 
 * @return a output stream to write data to the BLOB 
 */ 
public java.io.InputStream getBinaryStream(long pos) throws SQLException
</pre></div>
</div>
<a id="ADLOB45542"></a><a id="ADLOB45541"></a>
<div class="props_rev_3"><a id="GUID-CAF648CB-7150-4CC5-A243-0B1639C5B01E"></a>
<h3 id="ADLOB-GUID-CAF648CB-7150-4CC5-A243-0B1639C5B01E" class="sect3">JDBC CLOB Streaming APIs</h3>
<div>
<p>The <code class="codeph">oracle.sql.CLOB</code> class is the Oracle JDBC driver implementation of standard JDBC <code class="codeph">java.sql.Clob</code> interface. <a href="adlob_api_overview.htm#GUID-CAF648CB-7150-4CC5-A243-0B1639C5B01E__g1039935" title="This table is described in the preceding text">Table 13-51</a> lists the <code class="codeph">CLOB</code> streaming APIs.</p>
<div class="tblformalwide" id="GUID-CAF648CB-7150-4CC5-A243-0B1639C5B01E__g1039935">
<p class="titleintable">Table 13-51 JDBC: CLOB Streaming APIs</p>
<table class="cellalignment2809" title="JDBC: CLOB Streaming APIs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2873" id="d37211e14837">Methods</th>
<th class="cellalignment2872" id="d37211e14840">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e14845" headers="d37211e14837">
<p><code class="codeph">public java.io.OutputStream</code></p>
<p><code class="codeph">setAsciiStream (long pos) throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e14845 d37211e14840">
<p>JDBC 3.0: Retrieves a stream to be used to write ASCII characters to the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e14864" headers="d37211e14837">
<p><code class="codeph">public java.io.Writer</code></p>
<p><code class="codeph">setCharacterStream (long pos) throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e14864 d37211e14840">
<p>JDBC 3.0: Retrieves a stream to be used to write Unicode characters to the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting, at position <code class="codeph">pos</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e14883" headers="d37211e14837">
<p><code class="codeph">public java.io.InputStream</code></p>
<p><code class="codeph">getAsciiStream() throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e14883 d37211e14840">
<p>JDBC 3.0: Retrieves a stream that can be used to read ASCII characters from the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at the beginning</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e14900" headers="d37211e14837">
<p><code class="codeph">public java.io.InputStream</code></p>
<p><code class="codeph">getAsciiStream(long pos)</code> <code class="codeph">throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e14900 d37211e14840">
<p>Oracle extension: Retrieves a stream that can be used to read ASCII characters from the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e14922" headers="d37211e14837">
<p><code class="codeph">public java.io.Reader</code></p>
<p><code class="codeph">getCharacterStream() throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e14922 d37211e14840">
<p>JDBC 3.0: Retrieves a stream that can be used to read Unicode characters from the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at the beginning</p>
</td>
</tr>
<tr class="cellalignment2783">
<td class="cellalignment2875" id="d37211e14939" headers="d37211e14837">
<p><code class="codeph">public java.io.Reader</code></p>
<p><code class="codeph">getCharacterStream(long pos) throws SQLException</code></p>
</td>
<td class="cellalignment2874" headers="d37211e14939 d37211e14840">
<p>Oracle extension: Retrieves a stream that can be used to read Unicode characters from the <code class="codeph">CLOB</code> value that this <code class="codeph">Clob</code> object represents, starting at position <code class="codeph">pos</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>These APIs are defined as follows:</p>
<pre dir="ltr">/** 
  * Write to the CLOB from a stream at the requested position. 
  * @param pos is the position data to be put. 
  * @return a output stream to write data to the CLOB 
  */ 
public java.io.OutputStream setAsciiStream(long pos) throws SQLException 

/** 
</pre>
<pre dir="ltr">     * Write to the CLOB from a stream at the requested position. 
     * @param pos is the position data to be put. 
     * @return a output stream to write data to the CLOB 
     */ 
  public java.io.Writer setCharacterStream(long pos) throws SQLException 

    /** 
     * Read from the CLOB as a stream at the requested position. 
     * @param pos is the position data to be put. 
     * @return a output stream to write data to the CLOB 
     */ 
  public java.io.InputStream getAsciiStream(long pos) throws SQLException 

   /** 
    * Read from the CLOB as a stream at the requested position. 
    * @param pos is the position data to be put. 
    * @return a output stream to write data to the CLOB 
    */ 
   public java.io.Reader getCharacterStream(long pos) throws SQLException
</pre></div>
</div>
<a id="ADLOB45544"></a><a id="ADLOB45543"></a>
<div class="props_rev_3"><a id="GUID-3AF7FB92-E9E6-4B35-8C45-2591902B3091"></a>
<h3 id="ADLOB-GUID-3AF7FB92-E9E6-4B35-8C45-2591902B3091" class="sect3">BFILE Streaming APIs</h3>
<div>
<p><code class="codeph">oracle.sql.BFILE</code> class wraps the database <code class="codeph">BFILE</code>s. <a href="adlob_api_overview.htm#GUID-3AF7FB92-E9E6-4B35-8C45-2591902B3091__g1039954" title="This table is described in the preceding text">Table 13-52</a> lists the Oracle extension APIs in <code class="codeph">oracle.sql.BFILE</code> that reads <code class="codeph">BFILE</code> content from the requested position.</p>
<div class="tblformalwide" id="GUID-3AF7FB92-E9E6-4B35-8C45-2591902B3091__g1039954">
<p class="titleintable">Table 13-52 JDBC: BFILE Streaming APIs</p>
<table class="cellalignment2809" title="JDBC: BFILE Streaming APIs" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2783">
<th class="cellalignment2864" id="d37211e15068">Methods</th>
<th class="cellalignment2852" id="d37211e15071">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2783">
<td class="cellalignment2865" id="d37211e15076" headers="d37211e15068">
<p><code class="codeph">public java.io.InputStream</code></p>
<p><code class="codeph">getBinaryStream(long pos) throws SQLException</code></p>
</td>
<td class="cellalignment2853" headers="d37211e15076 d37211e15071">
<p>Reads from the <code class="codeph">BFILE</code> as a stream</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>These APIs are defined as follows:</p>
<pre dir="ltr">/** 
 * Read from the BLOB as a stream at the requested position. 
 * 
 * @param pos is the position data to be read. 
 * @return a output stream to write data to the BLOB 
 */ 
public java.io.InputStream getBinaryStream(long pos) throws SQLException
</pre></div>
<a id="ADLOB45545"></a>
<div class="props_rev_3"><a id="GUID-DA79B714-DB5B-4617-8EF3-43403997013A"></a>
<h4 id="ADLOB-GUID-DA79B714-DB5B-4617-8EF3-43403997013A" class="sect4">JDBC BFILE Streaming Example (NewStreamLob.java)</h4>
<div>
<pre dir="ltr">/* 
 * This sample shows how to read/write BLOB and CLOB as streams. 
 */ 

import java.io.*; 

// You must import the java.sql package to use JDBC 
import java.sql.*; 

// You must import the oracle.sql package to use oracle.sql.BLOB 
import oracle.sql.*; 

class NewStreamLob 
{ 
  public static void main (String args [])  throws Exception 
  { 
    // Load the Oracle JDBC driver 
    DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver()); 

    String url = &#34;jdbc:oracle:oci8:@&#34;; 
    try { 
      String url1 = System.getProperty(&#34;JDBC_URL&#34;); 
      if (url1 != null) 
        url = url1; 
    } catch (Exception e) { 
      // If there is any security exception, ignore it 
      // and use the default 
    } 

    // Connect to the database 
    Connection conn = 
      DriverManager.getConnection (url, &#34;scott&#34;, &#34;<span class="italic">password</span>&#34;); 
    // It is faster when auto commit is off 
    conn.setAutoCommit (false); 

    // Create a Statement 
    Statement stmt = conn.createStatement (); 

    try 
    { 
      stmt.execute (&#34;drop table basic_lob_table&#34;); 
    } 
    catch (SQLException e) 
    { 
      // An exception could be raised here if the table did not exist. 
    } 

    // Create a table containing a BLOB and a CLOB 
    stmt.execute (
         &#34;create table basic_lob_table&#34;  
         + &#34;(x varchar2 (30), b blob, c clob)&#34;); 

    // Populate the table 
    stmt.execute (
         &#34;insert into basic_lob_table values&#34;
         + &#34;(&#39;one&#39;, &#39;010101010101010101010101010101&#39;, &#39;onetwothreefour&#39;)&#34;); 
  
    System.out.println (&#34;Dumping lobs&#34;); 

    // Select the lobs 
    ResultSet rset = stmt.executeQuery (&#34;select * from basic_lob_table&#34;); 
    while (rset.next ()) 
    { 
      // Get the lobs 
      BLOB blob = (BLOB) rset.getObject (2); 
      CLOB clob = (CLOB) rset.getObject (3); 

      // Print the lob contents 
      dumpBlob (conn, blob, 1); 
      dumpClob (conn, clob, 1); 

      // Change the lob contents 
      fillClob (conn, clob, 11, 50); 
      fillBlob (conn, blob, 11, 50); 
    } 
    rset.close (); 

    System.out.println (&#34;Dumping lobs again&#34;); 

    rset = stmt.executeQuery (&#34;select * from basic_lob_table&#34;); 
    while (rset.next ()) 
    { 
      // Get the lobs 
      BLOB blob = (BLOB) rset.getObject (2); 
      CLOB clob = (CLOB) rset.getObject (3); 

      // Print the lobs contents 
      dumpBlob (conn, blob, 11); 
      dumpClob (conn, clob, 11); 
    } 
    // Close all resources 
    rset.close(); 
    stmt.close(); 
    conn.close(); 
  } 

  // Utility function to dump Clob contents 
  static void dumpClob (Connection conn, CLOB clob, long offset) 
    throws Exception 
  { 
    // get character stream to retrieve clob data 
    Reader instream = clob.getCharacterStream(offset); 

    // create temporary buffer for read 
    char[] buffer = new char[10]; 

    // length of characters read 
    int length = 0; 

    // fetch data 
    while ((length = instream.read(buffer)) != -1) 
    { 
      System.out.print(&#34;Read &#34; + length + &#34; chars: &#34;); 

      for (int i=0; i&lt;length; i++) 
        System.out.print(buffer[i]); 
      System.out.println(); 
    } 

    // Close input stream 
    instream.close(); 
  } 

  // Utility function to dump Blob contents 
  static void dumpBlob (Connection conn, BLOB blob, long offset) 
    throws Exception 
  { 
    // Get binary output stream to retrieve blob data 
    InputStream instream = blob.getBinaryStream(offset); 
    // Create temporary buffer for read 
    byte[] buffer = new byte[10]; 
    // length of bytes read 
    int length = 0; 
    // Fetch data 
    while ((length = instream.read(buffer)) != -1) 
    { 
      System.out.print(&#34;Read &#34; + length + &#34; bytes: &#34;); 

      for (int i=0; i&lt;length; i++) 
        System.out.print(buffer[i]+&#34; &#34;); 
      System.out.println(); 
    } 

    // Close input stream 
    instream.close(); 
  } 

  // Utility function to put data in a Clob 
  static void fillClob (Connection conn, CLOB clob, long offset, long length) 
    throws Exception 
  { 
    Writer outstream = clob.setCharacterStream(offset); 

    int i = 0; 
    int chunk = 10; 

    while (i &lt; length) 
    { 
      outstream.write(&#34;aaaaaaaaaa&#34;, 0, chunk); 

      i += chunk; 
      if (length - i &lt; chunk) 
         chunk = (int) length - i; 
    } 
    outstream.close(); 
  } 

  // Utility function to put data in a Blob 
  static void fillBlob (Connection conn, BLOB blob, long offset, long length) 
    throws Exception 
  { 
    OutputStream outstream = blob.setBinaryStream(offset); 

    int i = 0; 
    int chunk = 10; 

    byte [] data = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }; 

    while (i &lt; length) 
    { 
      outstream.write(data, 0, chunk); 

      i += chunk; 
      if (length - i &lt; chunk) 
         chunk = (int) length - i; 
    } 
    outstream.close(); 
  } 
} 
</pre></div>
</div>
</div>
<a id="ADLOB45546"></a>
<div class="props_rev_3"><a id="GUID-E6B7D89A-0835-40FC-8B5E-125C6B433676"></a>
<h3 id="ADLOB-GUID-E6B7D89A-0835-40FC-8B5E-125C6B433676" class="sect3">JDBC and Empty LOBs</h3>
<div>
<p>An empty <code class="codeph">BLOB</code> can be created from the following API from <code class="codeph">oracle.sql.BLOB</code>:</p>
<pre dir="ltr">public static BLOB empty_lob () throws SQLException 
</pre>
<p>Similarly, the following API from <code class="codeph">oracle.sql.CLOB</code> creates an empty <code class="codeph">CLOB</code>:</p>
<pre dir="ltr">public static CLOB empty_lob () throws SQLException 
</pre>
<p>Empty LOB instances are created by JDBC drivers without making database round trips. Empty LOBs can be used in the following cases:</p>
<ul style="list-style-type: disc;">
<li>
<p>set APIs of <code class="codeph">PreparedStatement</code></p>
</li>
<li>
<p>update APIs of updatable result set</p>
</li>
<li>
<p>attribute value of STRUCTs</p>
</li>
<li>
<p>element value of ARRAYs</p>
<div class="infobox-note" id="GUID-E6B7D89A-0835-40FC-8B5E-125C6B433676__GUID-1B85DB13-26C1-4814-B4A8-CDECAD3AE997">
<p class="notep1">Note:</p>
<p>Empty LOBs are special marker LOBs but not real LOB values.</p>
</div>
</li>
</ul>
<p>JDBC applications cannot read or write to empty LOBs created from the preceding APIs. An <a id="d37211e15293" class="indexterm-anchor"></a><a id="d37211e15297" class="indexterm-anchor"></a>ORA-17098 &#34;Invalid empty lob operation&#34; results if your application attempts to read/write to an empty LOB.</p>
</div>
</div>
</div>
<a id="ADLOB45547"></a>
<div class="props_rev_3"><a id="GUID-62F1EDEE-5342-4721-84A7-872200777CB4"></a>
<h2 id="ADLOB-GUID-62F1EDEE-5342-4721-84A7-872200777CB4" class="sect2">Oracle Provider for OLE DB (OraOLEDB)</h2>
<div>
<p>Oracle Provider for OLE DB (OraOLEDB) offers high performance and efficient access to Oracle data for OLE DB and ADO developers.</p>
<p>Developers programming with COM, C++, or any COM client can use OraOLEDB to access Oracle databases.</p>
<p>OraOLEDB is an OLE DB provider for Oracle. It offers high performance and efficient access to Oracle data including LOBs, and also allows updates to certain LOB types.</p>
<p>The following LOB types are supported by OraOLEDB:</p>
<ul style="list-style-type: disc;">
<li>
<p>For Persistent LOBs:</p>
<p><code class="codeph">READ</code>/<code class="codeph">WRITE</code> through the rowset.</p>
</li>
<li>
<p>For BFILEs:</p>
<p>READ-ONLY through the rowset.</p>
</li>
<li>
<p>Temporary LOBs:</p>
<p>Are not supported through the rowset.</p>
<div class="infoboxnotealso" id="GUID-62F1EDEE-5342-4721-84A7-872200777CB4__GUID-4FB5F0E3-07B6-4559-A3C4-264E0B43902C">
<p class="notep1">See Also:</p>
<p><a class="olink OLEDB" target="_blank" href="../OLEDB/toc.htm"><span class="italic">Oracle Provider for OLE DB Developer&#39;s Guide for Microsoft Windows</span></a></p>
</div>
</li>
</ul>
</div>
</div>
<a id="ADLOB45548"></a>
<div class="props_rev_3"><a id="GUID-A67F4001-E9B6-4905-86FF-7CC364F8EED4"></a>
<h2 id="ADLOB-GUID-A67F4001-E9B6-4905-86FF-7CC364F8EED4" class="sect2">Overview of Oracle Data Provider for .NET (ODP.NET)</h2>
<div>
<p>Oracle Data Provider for .NET (ODP.NET) is an implementation of a data provider for the Oracle database.</p>
<p>ODP.NET uses Oracle native APIs to offer fast and reliable access to Oracle data and features from any .NET application. ODP.NET also uses and inherits classes and interfaces available in the Microsoft .NET Framework Class Library. The ODP.NET supports the following LOBs as native data types with .NET: <code class="codeph">BLOB</code>, <code class="codeph">CLOB</code>, <code class="codeph">NCLOB</code>, and <code class="codeph">BFILE</code>.</p>
<p>COM and .NET are complementary development technologies. Microsoft recommends that developers use the .NET Framework rather than COM for new development.</p>
<div class="infoboxnotealso" id="GUID-A67F4001-E9B6-4905-86FF-7CC364F8EED4__GUID-274EDE08-883F-40FA-8239-8F426C7BCC2E">
<p class="notep1">See Also:</p>
<p><a class="olink ODPNT" target="_blank" href="../ODPNT/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer&#39;s Guide for Microsoft Windows</span></a></p>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2782">
<tr>
<td class="cellalignment2794">
<table class="cellalignment2787">
<tr>
<td class="cellalignment2786"><a href="adlob_design.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2786"><a href="adlob_performance.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2015, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2796">
<table class="cellalignment2785">
<tr>
<td class="cellalignment2786"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2786"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2786"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2786"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2786"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2786"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>