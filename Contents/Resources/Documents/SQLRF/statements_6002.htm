<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103644"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/CREATE%20MATERIALIZED%20VIEW"></a><title>CREATE MATERIALIZED VIEW</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="statements_6001.htm" title="Previous" type="text/html"/>
<link rel="Next" href="statements_6003.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">433/555</span> <!-- End Header --><a id="i2063793"></a>
<div id="SQLRF01302" class="refsect1">
<h1 class="refsect1">CREATE MATERIALIZED VIEW <a id="sthref5022"></a></h1>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5023"></a>Purpose</p>
<p><a id="sthref5024"></a><a id="sthref5025"></a><a id="sthref5026"></a>Use the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> statement to create a <span class="bold">materialized view</span>. A materialized view is a database object that contains the results of a query. The <code dir="ltr">FROM</code> clause of the query can name tables, views, and other materialized views. Collectively these objects are called <span class="bold">master tables</span> (a replication term) or <span class="bold">detail tables</span> (a data warehousing term). This reference uses &#34;master tables&#34; for consistency. The databases containing the master tables are called the <span class="bold">master databases</span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The keyword <code dir="ltr">SNAPSHOT</code> is supported in place of <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> for backward compatibility.</div>
<p><a id="sthref5027"></a>For replication purposes, materialized views allow you to maintain copies of remote data on your local node. The copies can be updatable with the Advanced Replication feature and are read-only without this feature. You can select data from a materialized view as you would from a table or view. In replication environments, the materialized views commonly created are <span class="bold">primary key</span>, <span class="bold">rowid</span>, <span class="bold">object</span>, and <span class="bold">subquery</span> materialized views.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN003" href="../REPLN/repmview.htm#REPLN003"><span class="italic">Oracle Database Advanced Replication</span></a> for information on the types of materialized views used to support replication</div>
<p><a id="sthref5028"></a>For data warehousing purposes, the materialized views commonly created are <span class="bold">materialized aggregate views</span>, <span class="bold">single-table materialized aggregate views</span>, and <span class="bold">materialized join views</span>. All three types of materialized views can be used by query rewrite, an optimization technique that transforms a user request written in terms of master tables into a semantically equivalent request that includes one or more materialized views.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_2002.htm#CCHECCJB">ALTER MATERIALIZED VIEW</a></p>
</li>
<li>
<p><a class="olink DWHSG008" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG008"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for information on the types of materialized views used to support data warehousing</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5029"></a>Additional Topics</p>
<ul>
<li>
<p><a href="#i2162987">Prerequisites</a></p>
</li>
<li>
<p><a href="#i2145767">Syntax</a></p>
</li>
<li>
<p><a href="#i2145773">Semantics</a></p>
</li>
<li>
<p><a href="#i2106785">Examples</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2162987"></a>Prerequisites</p>
<p>The privileges required to create a materialized view should be granted directly rather than through a role.</p>
<p>To create a materialized view <span class="bold">in your own schema:</span></p>
<ul>
<li>
<p>You must have been granted the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> system privilege <span class="bold">and</span> either the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> or <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
</li>
<li>
<p>You must also have access to any master tables of the materialized view that you do not own, either through a <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> object privilege on each of the tables or through the <code dir="ltr">READ</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> or <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
</li>
</ul>
<p>To create a materialized view <span class="bold">in another user&#39;s schema:</span></p>
<ul>
<li>
<p>You must have the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> system privilege.</p>
</li>
<li>
<p>The owner of the materialized view must have the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> system privilege. The owner must also have access to any master tables of the materialized view that the schema owner does not own (for example, if the master tables are on a remote database) and to any materialized view logs defined on those master tables, either through a <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> object privilege on each of the tables or through the <code dir="ltr">READ</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> or <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
</li>
</ul>
<p>To create a refresh-on-commit materialized view (<code dir="ltr">REFRESH</code> <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> clause), in addition to the preceding privileges, you must have the <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> <code dir="ltr">REFRESH</code> object privilege on any master tables that you do not own or you must have the <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> <code dir="ltr">REFRESH</code> system privilege.</p>
<p>To create the materialized view <span class="bold">with query rewrite</span> <span class="bold">enabled</span>, in addition to the preceding privileges:</p>
<ul>
<li>
<p>If the schema owner does not own the master tables, then the schema owner must have the <code dir="ltr">GLOBAL</code> <code dir="ltr">QUERY</code> <code dir="ltr">REWRITE</code> privilege or the <code dir="ltr">QUERY</code> <code dir="ltr">REWRITE</code> object privilege on each table outside the schema.</p>
</li>
<li>
<p>If you are defining the materialized view on a prebuilt container (<code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause), then you must have the <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> privilege <code dir="ltr">WITH</code> <code dir="ltr">GRANT</code> <code dir="ltr">OPTION</code> on the container table.</p>
</li>
</ul>
<p>The user whose schema contains the materialized view must have sufficient quota in the target tablespace to store the master table and index of the materialized view or must have the <code dir="ltr">UNLIMITED</code> <code dir="ltr">TABLESPACE</code> system privilege.</p>
<p>When you create a materialized view, Oracle Database creates one internal table and at least one index, and may create one view, all in the schema of the materialized view. Oracle Database uses these objects to maintain the materialized view data. You must have the privileges necessary to create these objects.</p>
<p>You can create the following types of local materialized views (including both <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> and <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code>) on master tables with commit SCN-based materialized view logs:</p>
<ul>
<li>
<p>Materialized aggregate views, including materialized aggregate views on a single table</p>
</li>
<li>
<p>Materialized join views</p>
</li>
<li>
<p>Primary-key-based and rowid-based single table materialized views</p>
</li>
<li>
<p><code dir="ltr">UNION</code> <code dir="ltr">ALL</code> materialized views, where each <code dir="ltr">UNION</code> <code dir="ltr">ALL</code> branch is one of the above materialized view types</p>
</li>
</ul>
<p>You cannot create remote materialized views on master tables with commit SCN-based materialized view logs.</p>
<p>Creating a materialized view on master tables with different types of materialized view logs (that is, a master table with timestamp-based materialized view logs and a master table with commit SCN-based materialized view logs) is not supported and causes <code dir="ltr">ORA-32414</code>.</p>
<p>To specify an edition in the <code dir="ltr"><span class="codeinlineitalic">evaluation_edition_clause</span></code> or the <code dir="ltr"><span class="codeinlineitalic">unusable_editions_clause</span></code>, you must have the <code dir="ltr">USE</code> privilege on the edition.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#i2095331">CREATE TABLE</a>, <a href="statements_8004.htm#i2065510">CREATE VIEW</a>, and <a href="statements_5013.htm#i2062403">CREATE INDEX</a> for information on these privileges</p>
</li>
<li>
<p><a class="olink REPLN003" href="../REPLN/repmview.htm#REPLN003"><span class="italic">Oracle Database Advanced Replication</span></a> for information about the prerequisites that apply to creating replication materialized views</p>
</li>
<li>
<p><a class="olink DWHSG008" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG008"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for information about the prerequisites that apply to creating data warehousing materialized views</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2145767"></a>Syntax</p>
<p class="subhead2"><a id="SQLRF54098"></a><span class="italic">create_materialized_view</span>::=</p>
<img width="878" height="588" src="img/create_materialized_view.gif" alt="Description of create_materialized_view.gif follows"/><br/>
<a id="sthref5030" href="img_text/create_materialized_view.htm">Description of the illustration &#39;&#39;create_materialized_view.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116388"><span class="xreftitleitalic"><span class="italic">scoped_table_ref_constraint</span> ::=</span></a>, <a href="#i2147304"><span class="xreftitleitalic"><span class="italic">physical_properties</span>::=</span></a>, <a href="#i2116410"><span class="xreftitleitalic"><span class="italic">materialized_view_props</span>::=</span></a>, <a href="#i2116626"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span>::=</span></a>, <a href="#i2116443"><span class="xreftitleitalic"><span class="italic">create_mv_refresh</span>::=</span></a>, <a href="#CCHDHFBH"><span class="xreftitleitalic"><span class="italic">evaluation_edition_clause</span>::=</span></a>, <a href="#CCHGFGAI"><span class="xreftitleitalic"><span class="italic">query_rewrite_clause</span>::=</span></a>, <a href="statements_10002.htm#i2126435"><span class="xreftitleitalic"><span class="italic">subquery</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116388"></a><a id="SQLRF54101"></a><a href="#i2105345"><span class="xreftitleitalic"><span class="italic">scoped_table_ref_constraint</span></span></a> ::=</p>
<img width="643" height="64" src="img/scoped_table_ref_constraint.gif" alt="Description of scoped_table_ref_constraint.gif follows"/><br/>
<a id="sthref5031" href="img_text/scoped_table_ref_constraint.htm">Description of the illustration &#39;&#39;scoped_table_ref_constraint.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2147304"></a><a id="SQLRF54099"></a><span class="italic">physical_properties</span>::=</p>
<img width="912" height="248" src="img/physical_properties.gif" alt="Description of physical_properties.gif follows"/><br/>
<a id="sthref5032" href="img_text/physical_properties.htm">Description of the illustration &#39;&#39;physical_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CACGCCDG"><span class="xreftitleitalic"><span class="italic">deferred_segment_creation</span>::=</span></a>, <a href="#i2116465"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2116476"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CACIBHAD"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">ilm_clause</span></code>: not supported for materialized views, <a href="#CACDACJE"><span class="xreftitleitalic"><span class="italic">heap_org_table_clause</span>::=</span></a>, <a href="#i2116399"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116410"></a><a id="SQLRF54100"></a><a href="#i2105337"><span class="xreftitleitalic"><span class="italic">materialized_view_props</span></span></a>::=<a id="sthref5033"></a></p>
<img width="699" height="135" src="img/materialized_view_props.gif" alt="Description of materialized_view_props.gif follows"/><br/>
<a id="sthref5034" href="img_text/materialized_view_props.htm">Description of the illustration &#39;&#39;materialized_view_props.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116487"><span class="xreftitleitalic"><span class="italic">column_properties</span> ::=</span></a>, <a href="statements_7002.htm#i2129707"><span class="xreftitleitalic"><span class="italic">table_partitioning_clauses</span> ::=</span></a>&mdash;part of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> syntax, <a href="#i2116920"><span class="xreftitleitalic"><span class="italic">parallel_clause</span>::=</span></a>, <a href="#i2116521"><span class="xreftitleitalic"><span class="italic">build_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CACDACJE"></a><a id="SQLRF56757"></a><span class="italic">heap_org_table_clause</span>::=</p>
<img width="506" height="37" src="img/heap_org_table_clause.gif" alt="Description of heap_org_table_clause.gif follows"/><br/>
<a id="sthref5035" href="img_text/heap_org_table_clause.htm">Description of the illustration &#39;&#39;heap_org_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116476"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CACIBHAD"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">ilm_clause</span></code>: not supported for materialized views)</p>
<p class="subhead2"><a id="i2116399"></a><a id="SQLRF54102"></a><a href="#i2105365"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span></span></a>::=</p>
<img width="518" height="114" src="img/index_org_table_clause.gif" alt="Description of index_org_table_clause.gif follows"/><br/>
<a id="sthref5036" href="img_text/index_org_table_clause.htm">Description of the illustration &#39;&#39;index_org_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<code dir="ltr"><span class="codeinlineitalic">mapping_table_clause</span></code>: not supported with materialized views, <a href="#CACDAHIE"><span class="xreftitleitalic"><span class="italic">prefix_compression</span>::=</span></a>, <a href="#i2116560"><span class="xreftitleitalic"><span class="italic">index_org_overflow_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CACDAHIE"></a><a id="SQLRF56865"></a><span class="italic">prefix_compression</span>::=</p>
<img width="248" height="79" src="img/prefix_compression.gif" alt="Description of prefix_compression.gif follows"/><br/>
<a id="sthref5037" href="img_text/prefix_compression.htm">Description of the illustration &#39;&#39;prefix_compression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2116560"></a><a id="SQLRF54104"></a><span class="italic">index_org_overflow_clause</span>::=</p>
<img width="551" height="46" src="img/index_org_overflow_clause.gif" alt="Description of index_org_overflow_clause.gif follows"/><br/>
<a id="sthref5038" href="img_text/index_org_overflow_clause.htm">Description of the illustration &#39;&#39;index_org_overflow_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116465"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116443"></a><a id="SQLRF54105"></a><a href="#i2064161"><span class="xreftitleitalic"><span class="italic">create_mv_refresh</span></span></a>::=<a id="sthref5039"></a></p>
<img width="753" height="576" src="img/create_mv_refresh.gif" alt="Description of create_mv_refresh.gif follows"/><br/>
<a id="sthref5040" href="img_text/create_mv_refresh.htm">Description of the illustration &#39;&#39;create_mv_refresh.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CACGCCDG"></a><a id="SQLRF54106"></a><a href="#CACCAJIG"><span class="xreftitleitalic"><span class="italic">deferred_segment_creation</span></span></a>::=</p>
<img width="307" height="58" src="img/deferred_segment_creation.gif" alt="Description of deferred_segment_creation.gif follows"/><br/>
<a id="sthref5041" href="img_text/deferred_segment_creation.htm">Description of the illustration &#39;&#39;deferred_segment_creation.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2116465"></a><a id="SQLRF54107"></a><a href="#i2149147"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span></span></a>::=<a id="sthref5042"></a></p>
<img width="263" height="103" src="img/segment_attributes_clause.gif" alt="Description of segment_attributes_clause.gif follows"/><br/>
<a id="sthref5043" href="img_text/segment_attributes_clause.htm">Description of the illustration &#39;&#39;segment_attributes_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116626"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span>::=</span></a>, <a href="#i2116596"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116626"></a><a id="SQLRF54108"></a><span class="italic">physical_attributes_clause</span>::=</p>
<img width="268" height="147" src="img/physical_attributes_clause.gif" alt="Description of physical_attributes_clause.gif follows"/><br/>
<a id="sthref5044" href="img_text/physical_attributes_clause.htm">Description of the illustration &#39;&#39;physical_attributes_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116596"></a><a id="SQLRF54109"></a><span class="italic">logging_clause</span>::=</p>
<img width="237" height="91" src="img/logging_clause.gif" alt="Description of logging_clause.gif follows"/><br/>
<a id="sthref5045" href="img_text/logging_clause.htm">Description of the illustration &#39;&#39;logging_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2116476"></a><a id="SQLRF54110"></a><a href="#i2124284"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> ::=</p>
<img width="949" height="263" src="img/table_compression.gif" alt="Description of table_compression.gif follows"/><br/>
<a id="sthref5046" href="img_text/table_compression.htm">Description of the illustration &#39;&#39;table_compression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CACIBHAD"></a><a id="SQLRF56783"></a><a href="#CACHGBGI"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span></span></a>::=</p>
<img width="531" height="79" src="img/inmemory_table_clause.gif" alt="Description of inmemory_table_clause.gif follows"/><br/>
<a id="sthref5047" href="img_text/inmemory_table_clause.htm">Description of the illustration &#39;&#39;inmemory_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CACJDJAJ"><span class="xreftitleitalic"><span class="italic">inmemory_parameters</span>::=</span></a>, <a href="#CACIIGGA"><span class="xreftitleitalic"><span class="italic">inmemory_column_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CACJDJAJ"></a><a id="SQLRF56933"></a><span class="italic">inmemory_parameters</span>::=</p>
<img width="735" height="37" src="img/inmemory_parameters.gif" alt="Description of inmemory_parameters.gif follows"/><br/>
<a id="sthref5048" href="img_text/inmemory_parameters.htm">Description of the illustration &#39;&#39;inmemory_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CACCCGDI"><span class="xreftitleitalic"><span class="italic">inmemory_memcompress</span>::=</span></a>, <a href="#CACIFBIC"><span class="xreftitleitalic"><span class="italic">inmemory_priority</span>::=</span></a>, <a href="#CACIJEAA"><span class="xreftitleitalic"><span class="italic">inmemory_distribute</span>::=</span></a>, <a href="#CACFCBGA"><span class="xreftitleitalic"><span class="italic">inmemory_duplicate</span>::=</span></a>)</p>
<p class="subhead2"><a id="CACCCGDI"></a><a id="SQLRF56934"></a><span class="italic">inmemory_memcompress</span>::=</p>
<img width="496" height="159" src="img/inmemory_memcompress.gif" alt="Description of inmemory_memcompress.gif follows"/><br/>
<a id="sthref5049" href="img_text/inmemory_memcompress.htm">Description of the illustration &#39;&#39;inmemory_memcompress.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CACIFBIC"></a><a id="SQLRF56935"></a><span class="italic">inmemory_priority</span>::=</p>
<img width="208" height="156" src="img/inmemory_priority.gif" alt="Description of inmemory_priority.gif follows"/><br/>
<a id="sthref5050" href="img_text/inmemory_priority.htm">Description of the illustration &#39;&#39;inmemory_priority.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CACIJEAA"></a><a id="SQLRF56936"></a><span class="italic">inmemory_distribute</span>::=</p>
<img width="395" height="143" src="img/inmemory_distribute.gif" alt="Description of inmemory_distribute.gif follows"/><br/>
<a id="sthref5051" href="img_text/inmemory_distribute.htm">Description of the illustration &#39;&#39;inmemory_distribute.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CACFCBGA"></a><a id="SQLRF56937"></a><span class="italic">inmemory_duplicate</span>::=</p>
<img width="232" height="79" src="img/inmemory_duplicate.gif" alt="Description of inmemory_duplicate.gif follows"/><br/>
<a id="sthref5052" href="img_text/inmemory_duplicate.htm">Description of the illustration &#39;&#39;inmemory_duplicate.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CACIIGGA"></a><a id="SQLRF56998"></a><span class="italic">inmemory_column_clause</span>::=</p>
<img width="527" height="91" src="img/inmemory_column_clause.gif" alt="Description of inmemory_column_clause.gif follows"/><br/>
<a id="sthref5053" href="img_text/inmemory_column_clause.htm">Description of the illustration &#39;&#39;inmemory_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CACCCGDI"><span class="xreftitleitalic"><span class="italic">inmemory_memcompress</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116487"></a><a id="SQLRF54111"></a><a href="#i2064001"><span class="xreftitleitalic"><span class="italic">column_properties</span></span></a> ::=<a id="sthref5054"></a><a id="sthref5055"></a><a id="sthref5056"></a><a id="sthref5057"></a></p>
<img width="525" height="202" src="img/column_properties.gif" alt="Description of column_properties.gif follows"/><br/>
<a id="sthref5058" href="img_text/column_properties.htm">Description of the illustration &#39;&#39;column_properties.gif&#39;&#39;</a><br/>
<br/>
<p><code dir="ltr"><span class="codeinlineitalic">(</span></code><a href="#i2116642"><span class="xreftitleitalic"><span class="italic">object_type_col_properties</span>::=</span></a>, <a href="#i2116653"><span class="xreftitleitalic"><span class="italic">nested_table_col_properties</span>::=</span></a>, <a href="#i2116664"><span class="xreftitleitalic"><span class="italic">varray_col_properties</span>::=</span></a>, <a href="#i2116912"><span class="xreftitleitalic"><span class="italic">LOB_partition_storage</span>::=</span></a>, <a href="#i2116856"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">XMLType_column_properties</span></code>: not supported for materialized views)</p>
<p class="subhead2"><a id="i2116642"></a><a id="SQLRF54112"></a><span class="italic">object_type_col_properties</span>::=<a id="sthref5059"></a></p>
<img width="329" height="27" src="img/object_type_col_properties.gif" alt="Description of object_type_col_properties.gif follows"/><br/>
<a id="sthref5060" href="img_text/object_type_col_properties.htm">Description of the illustration &#39;&#39;object_type_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116730"><span class="xreftitleitalic"><span class="italic">substitutable_column_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116730"></a><a id="SQLRF54113"></a><span class="italic">substitutable_column_clause</span>::=</p>
<img width="522" height="98" src="img/substitutable_column_clause.gif" alt="Description of substitutable_column_clause.gif follows"/><br/>
<a id="sthref5061" href="img_text/substitutable_column_clause.htm">Description of the illustration &#39;&#39;substitutable_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2116653"></a><a id="SQLRF54114"></a><span class="italic">nested_table_col_properties</span>::=<a id="sthref5062"></a></p>
<img width="671" height="345" src="img/nested_table_col_properties.gif" alt="Description of nested_table_col_properties.gif follows"/><br/>
<a id="sthref5063" href="img_text/nested_table_col_properties.htm">Description of the illustration &#39;&#39;nested_table_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116730"><span class="xreftitleitalic"><span class="italic">substitutable_column_clause</span>::=</span></a>, <a href="statements_7002.htm#i2126768"><span class="xreftitleitalic"><span class="italic">object_properties</span>::=</span></a>, <a href="statements_7002.htm#i2126711"><span class="xreftitleitalic"><span class="italic">physical_properties</span>::=</span></a>&mdash;part of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> syntax, <a href="#i2116487"><span class="xreftitleitalic"><span class="italic">column_properties</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2116664"></a><a id="SQLRF54115"></a><span class="italic">varray_col_properties</span>::=<a id="sthref5064"></a></p>
<img width="569" height="79" src="img/varray_col_properties.gif" alt="Description of varray_col_properties.gif follows"/><br/>
<a id="sthref5065" href="img_text/varray_col_properties.htm">Description of the illustration &#39;&#39;varray_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116730"><span class="xreftitleitalic"><span class="italic">substitutable_column_clause</span>::=</span></a>, <a href="#BABFECCA"><span class="xreftitleitalic"><span class="italic">varray_storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABFECCA"></a><a id="SQLRF54116"></a><span class="italic">varray_storage_clause</span>::=<a id="sthref5066"></a></p>
<img width="746" height="95" src="img/varray_storage_clause.gif" alt="Description of varray_storage_clause.gif follows"/><br/>
<a id="sthref5067" href="img_text/varray_storage_clause.htm">Description of the illustration &#39;&#39;varray_storage_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2160265"><span class="xreftitleitalic"><span class="italic">LOB_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116856"></a><a id="SQLRF54117"></a><span class="italic">LOB_storage_clause</span>::=<a id="sthref5068"></a></p>
<img width="652" height="239" src="img/lob_storage_clause.gif" alt="Description of lob_storage_clause.gif follows"/><br/>
<a id="sthref5069" href="img_text/lob_storage_clause.htm">Description of the illustration &#39;&#39;lob_storage_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABCGFBH"><span class="xreftitleitalic"><span class="italic">LOB_storage_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABCGFBH"></a><a id="SQLRF54118"></a><span class="italic">LOB_storage_parameters</span>::=</p>
<img width="374" height="123" src="img/lob_storage_parameters.gif" alt="Description of lob_storage_parameters.gif follows"/><br/>
<a id="sthref5070" href="img_text/lob_storage_parameters.htm">Description of the illustration &#39;&#39;lob_storage_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2160265"><span class="xreftitleitalic"><span class="italic">LOB_parameters</span>::=</span></a>, <a href="clauses009.htm#CJACEJGB"><span class="xreftitleitalic"><span class="italic">storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2160265"></a><a id="SQLRF54119"></a><span class="italic">LOB_parameters</span>::=</p>
<img width="392" height="425" src="img/lob_parameters.gif" alt="Description of lob_parameters.gif follows"/><br/>
<a id="sthref5071" href="img_text/lob_parameters.htm">Description of the illustration &#39;&#39;lob_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses009.htm#CJACEJGB"><span class="xreftitleitalic"><span class="italic">storage_clause</span>::=</span></a>, <a href="#i2116596"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116912"></a><a id="SQLRF54120"></a><span class="italic">LOB_partition_storage</span>::=</p>
<img width="537" height="178" src="img/lob_partition_storage.gif" alt="Description of lob_partition_storage.gif follows"/><br/>
<a id="sthref5072" href="img_text/lob_partition_storage.htm">Description of the illustration &#39;&#39;lob_partition_storage.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2116856"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span>::=</span></a>, <a href="#i2116664"><span class="xreftitleitalic"><span class="italic">varray_col_properties</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2116920"></a><a id="SQLRF54121"></a><a href="#i2064063"><span class="xreftitleitalic"><span class="italic">parallel_clause</span></span></a>::=<a id="sthref5073"></a></p>
<img width="241" height="79" src="img/parallel_clause.gif" alt="Description of parallel_clause.gif follows"/><br/>
<a id="sthref5074" href="img_text/parallel_clause.htm">Description of the illustration &#39;&#39;parallel_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2116521"></a><a id="SQLRF54122"></a><a href="#i2148448"><span class="xreftitleitalic"><span class="italic">build_clause</span></span></a>::=</p>
<img width="199" height="58" src="img/build_clause.gif" alt="Description of build_clause.gif follows"/><br/>
<a id="sthref5075" href="img_text/build_clause.htm">Description of the illustration &#39;&#39;build_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CCHDHFBH"></a><a id="SQLRF56240"></a><a href="#CCHCFGHG"><span class="xreftitleitalic"><span class="italic">evaluation_edition_clause</span></span></a>::=</p>
<img width="352" height="91" src="img/evaluation_edition_clause.gif" alt="Description of evaluation_edition_clause.gif follows"/><br/>
<a id="sthref5076" href="img_text/evaluation_edition_clause.htm">Description of the illustration &#39;&#39;evaluation_edition_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CCHGFGAI"></a><a id="SQLRF56241"></a><a href="#CCHHFDIE"><span class="xreftitleitalic"><span class="italic">query_rewrite_clause</span></span></a>::=</p>
<img width="473" height="64" src="img/query_rewrite_clause.gif" alt="Description of query_rewrite_clause.gif follows"/><br/>
<a id="sthref5077" href="img_text/query_rewrite_clause.htm">Description of the illustration &#39;&#39;query_rewrite_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56333"></a><a href="#CCHICCEH"><span class="xreftitleitalic"><span class="italic">unusable_editions_clause</span></span></a>::=</p>
<img width="482" height="199" src="img/unusable_editions_clause.gif" alt="Description of unusable_editions_clause.gif follows"/><br/>
<a id="sthref5078" href="img_text/unusable_editions_clause.htm">Description of the illustration &#39;&#39;unusable_editions_clause.gif&#39;&#39;</a><br/>
<br/></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2145773"></a>Semantics</p>
<p class="subhead1"><a id="SQLRF54123"></a><span class="italic">schema</span></p>
<p>Specify the schema to contain the materialized view. If you omit <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then Oracle Database creates the materialized view in your schema.</p>
<p class="subhead1"><a id="SQLRF54124"></a><span class="italic">materialized_view</span></p>
<p>Specify the name of the materialized view to be created. The name must satisfy the requirements listed in <a href="sql_elements008.htm#i27570">&#34;Database Object Naming Rules&#34;</a>. Oracle Database generates names for the table and indexes used to maintain the materialized view by adding a prefix or suffix to the materialized view name.</p>
<p class="subhead1"><a id="SQLRF54125"></a><span class="italic">column_alias</span></p>
<p>You can specify a column alias for each column of the materialized view. The column alias list explicitly resolves any column name conflict, eliminating the need to specify aliases in the <code dir="ltr">SELECT</code> clause of the materialized view. If you specify any column alias in this clause, then you must specify an alias for each data source referenced in the <code dir="ltr">SELECT</code> clause.</p>
<p><a id="SQLRF54126"></a><span class="subhead3">ENCRYPT clause &nbsp;</span>Use this clause to encrypt this column of the materialized view. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#CEGDFHBD"><span class="xreftitleitalic"><span class="italic">encryption_spec</span></span></a> for more information on column encryption.</p>
<p class="subhead1"><a id="SQLRF54127"></a>OF <span class="italic">object_type <a id="sthref5079"></a><a id="sthref5080"></a></span></p>
<p>The <code dir="ltr">OF</code> <code dir="ltr"><span class="codeinlineitalic">object_type</span></code> clause lets you explicitly create an <span class="bold">object materialized view</span> of type <code dir="ltr"><span class="codeinlineitalic">object_type</span></code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
See <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> ... <a href="statements_7002.htm#i2159410"><span class="xreftitleitalic"><span class="italic">object_table</span></span></a> for more information on the <code dir="ltr">OF</code> <code dir="ltr"><span class="codeinlineitalic">type_name</span></code> clause</div>
<p class="subhead1"><a id="i2105345"></a><a id="SQLRF54128"></a><span class="italic">scoped_table_ref_constraint <a id="sthref5081"></a><a id="sthref5082"></a></span></p>
<p>Use the <code dir="ltr">SCOPE</code> <code dir="ltr">FOR</code> clause to restrict the scope of references to a single object table. You can refer either to the table name with <code dir="ltr"><span class="codeinlineitalic">scope_table_name</span></code> or to a column alias. The values in the <code dir="ltr">REF</code> column or attribute point to objects in <code dir="ltr"><span class="codeinlineitalic">scope_table_name</span></code> or <code dir="ltr"><span class="codeinlineitalic">c_alias</span></code>, in which object instances of the same type as the <code dir="ltr">REF</code> column are stored. If you specify aliases, then they must have a one-to-one correspondence with the columns in the <code dir="ltr">SELECT</code> list of the defining query of the materialized view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="clauses002.htm#i1002226">&#34;SCOPE REF Constraints&#34;</a> for more information</div>
<p class="subhead1"><a id="SQLRF54129"></a>ON PREBUILT TABLE Clause <a id="sthref5083"></a></p>
<p>The <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause lets you register an existing table as a preinitialized materialized view. This clause is particularly useful for registering large materialized views in a data warehousing environment. The table must have the same name and be in the same schema as the resulting materialized view.</p>
<p>If the materialized view is dropped, then the preexisting table reverts to its identity as a table.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
This clause assumes that the table object reflects the materialization of a subquery. Oracle strongly recommends that you ensure that this assumption is true in order to ensure that the materialized view correctly reflects the data in its master tables.</div>
<p>The <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause could be useful in the following scenarios:</p>
<ul>
<li>
<p>You have a table representing the result of a query. Creating the table was an expensive operation that possibly took a long time. You want to create a materialized view on the query. You can use the <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause to avoid the expense of executing the query and populating the container for the materialized view.</p>
</li>
<li>
<p>You temporarily discontinue having a materialized view, but keep its container table, using the <code dir="ltr">DROP</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> ... <code dir="ltr">PRESERVE</code> <code dir="ltr">TABLE</code> statement. You then decide to recreate the materialized view and you know that the master tables of the view have not changed. You can create the materialized view using the <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause. This avoids the expense and time of creating and populating the container table for the materialized view.</p>
</li>
</ul>
<p>If you specify <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code>, then Oracle database does not create the <code dir="ltr">I_SNAP$</code> index. This index improves fast refresh performance. If you want the benefits of this index, then you can create it manually. Refer to <a class="olink DWHSG8216" href="../DWHSG/basicmv.htm#DWHSG8216"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information.</p>
<p><a id="SQLRF54130"></a><span class="subhead3">WITH REDUCED PRECISION&nbsp;</span>Specify <code dir="ltr">WITH</code> <code dir="ltr">REDUCED</code> <code dir="ltr">PRECISION</code> to authorize the loss of precision that will result if the precision of the table or materialized view columns do not exactly match the precision returned by <code dir="ltr"><span class="codeinlineitalic">subquery</span></code>.</p>
<p><a id="SQLRF54131"></a><span class="subhead3">WITHOUT REDUCED PRECISION&nbsp;</span>Specify <code dir="ltr">WITHOUT</code> <code dir="ltr">REDUCED</code> <code dir="ltr">PRECISION</code> to require that the precision of the table or materialized view columns match exactly the precision returned by <code dir="ltr"><span class="codeinlineitalic">subquery</span></code>, or the create operation will fail. This is the default.</p>
<p><a id="SQLRF54132"></a><span class="subhead3">Restrictions on Using Prebuilt Tables&nbsp;</span>Prebuilt tables are subject to the following restrictions:</p>
<ul>
<li>
<p>Each column alias in <code dir="ltr"><span class="codeinlineitalic">subquery</span></code> must correspond to a column in the prebuilt table, and corresponding columns must have matching data types.</p>
</li>
<li>
<p>If you specify this clause, then you cannot specify a <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraint for any column that is not referenced in <code dir="ltr"><span class="codeinlineitalic">subquery</span></code> unless you also specify a default value for that column.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause when creating a rowid materialized view.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2092101">&#34;Creating Prebuilt Materialized Views: Example&#34;</a></div>
<p class="subhead1"><a id="SQLRF54133"></a><span class="italic">physical_properties_clause</span></p>
<p>The components of the <code dir="ltr"><span class="codeinlineitalic">physical_properties_clause</span></code> have the same semantics for materialized views that they have for tables, with exceptions and additions described in the sections that follow.</p>
<p><a id="SQLRF54134"></a><span class="subhead3">Restriction on the <span class="italic">physical_properties_clause</span>&nbsp;</span>You cannot specify <code dir="ltr">ORGANIZATION</code> <code dir="ltr">EXTERNAL</code> for a materialized view.</p>
<p class="subhead2"><a id="CACCAJIG"></a><a id="SQLRF54135"></a><span class="italic">deferred_segment_creation</span></p>
<p>Use this clause to determine when the segment for this materialized view should be created. See the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#CEGJHDEB"><span class="xreftitleitalic"><span class="italic">deferred_segment_creation</span></span></a> for more information.</p>
<p class="subhead2"><a id="i2149147"></a><a id="SQLRF54136"></a><span class="italic">segment_attributes_clause<a id="sthref5084"></a><a id="sthref5085"></a><a id="sthref5086"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">segment_attributes_clause</span></code> to establish values for the <code dir="ltr">PCTFREE</code>, <code dir="ltr">PCTUSED</code>, and <code dir="ltr">INITRANS</code> parameters, the storage characteristics for the materialized view, to assign a tablespace, and to specify whether logging is to occur. In the <code dir="ltr">USING</code> <code dir="ltr">INDEX</code> clause, you cannot specify <code dir="ltr">PCTFREE</code> or <code dir="ltr">PCTUSED</code>.</p>
<p><a id="SQLRF54137"></a><span class="subhead3">TABLESPACE Clause <a id="sthref5087"></a>&nbsp;</span>Specify the tablespace in which the materialized view is to be created. If you omit this clause, then Oracle Database creates the materialized view in the default tablespace of the schema containing the materialized view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="clauses007.htm#g1058547"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span></span></a> and <a href="clauses007.htm#i1026834"><span class="xreftitleitalic"><span class="italic">storage_clause</span></span></a> for a complete description of these clauses, including default values</div>
<p><a id="SQLRF54138"></a><span class="subhead3"><span class="italic">logging_clause<a id="sthref5088"></a></span>&nbsp;</span>Specify <code dir="ltr">LOGGING</code> or <code dir="ltr">NOLOGGING</code> to establish the logging characteristics for the materialized view. The logging characteristic affects the creation of the materialized view and any nonatomic refresh that is initiated by way of the <code dir="ltr">DBMS_REFRESH</code> package. The default is the logging characteristic of the tablespace in which the materialized view resides.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="clauses005.htm#i999782"><span class="xreftitleitalic"><span class="italic">logging_clause</span></span></a> for a full description of this clause and <a class="olink ARPLS043" href="../ARPLS/d_refrsh.htm#ARPLS043"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on atomic and nonatomic refresh</div>
<p class="subhead2"><a id="i2124284"></a><a id="SQLRF54139"></a><span class="italic">table_compression</span> <a id="sthref5089"></a><a id="sthref5090"></a><a id="sthref5091"></a></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">table_compression</span></code> clause to instruct the database whether to compress data segments to reduce disk and memory use. This clause has the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> and <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. Refer to the <a href="statements_7002.htm#i2128733"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> clause in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for the full semantics of this clause.</p>
<p class="subhead2"><a id="CACHGBGI"></a><a id="SQLRF56785"></a><span class="italic">inmemory_table_clause</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">inmemory_table_clause</span></code> to enable or disable the materialized view for the In-Memory Column Store (IM column store). This clause has the same semantics as the <a href="statements_7002.htm#CEGBCAAE"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span></span></a> in the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> documentation.</p>
<p class="subhead2"><a id="SQLRF57030"></a><span class="italic">inmemory_column_clause</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">inmemory_column_clause</span></code> to disable specific materialized view columns for the IM column store, and to specify the data compression method for specific columns. In order to specify this clause, the materialized view must be enabled for the IM column store. This clause has the same semantics as the <a href="statements_7002.htm#CEGJEEBB"><span class="xreftitleitalic"><span class="italic">inmemory_column_clause</span></span></a> in the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> documentation, with the following addition: If you specify the <code dir="ltr"><span class="codeinlineitalic">inmemory_column_clause</span></code>, then you must also specify a <code dir="ltr"><span class="codeinlineitalic">column_alias</span></code> for each column in the materialized view.</p>
<p class="subhead2"><a id="i2105365"></a><a id="SQLRF54140"></a><span class="italic">index_org_table_clause</span></p>
<p>The <code dir="ltr">ORGANIZATION</code> <code dir="ltr">INDEX</code> clause lets you create an index-organized materialized view. In such a materialized view, data rows are stored in an index defined on the primary key of the materialized view. You can specify index organization for the following types of materialized views:</p>
<ul>
<li>
<p>Read-only and updatable object materialized views. You must ensure that the master table has a primary key.</p>
</li>
<li>
<p>Read-only and updatable primary key materialized views.</p>
</li>
<li>
<p>Read-only rowid materialized views.</p>
</li>
</ul>
<p>The keywords and parameters of the <code dir="ltr"><span class="codeinlineitalic">index_org_table_clause</span></code> have the same semantics as described in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>, with the restrictions that follow.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <a href="statements_7002.htm#i2128766"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span></span></a> of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code></div>
<p><a id="SQLRF54141"></a><span class="subhead3">Restrictions on Index-Organized Materialized Views&nbsp;</span>Index-organized materialized views are subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify the following <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> clauses: <code dir="ltr">CACHE</code> or <code dir="ltr">NOCACHE</code>, <code dir="ltr">CLUSTER</code>, or <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code>.</p>
</li>
<li>
<p>In the <code dir="ltr"><span class="codeinlineitalic">index_org_table_clause</span></code>:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">mapping_table_clause</span></code>.</p>
</li>
<li>
<p>You can specify <code dir="ltr">COMPRESS</code> only for a materialized view based on a composite primary key. You can specify <code dir="ltr">NOCOMPRESS</code> for a materialized view based on either a simple or composite primary key.</p>
</li>
</ul>
</li>
</ul>
<p class="subhead2"><a id="SQLRF54142"></a>CLUSTER Clause</p>
<p>The <code dir="ltr">CLUSTER</code> clause lets you create the materialized view as part of the specified cluster. A cluster materialized view uses the space allocation of the cluster. Therefore, you do not specify physical attributes or the <code dir="ltr">TABLESPACE</code> clause with the <code dir="ltr">CLUSTER</code> clause.</p>
<p><a id="SQLRF54143"></a><span class="subhead3">Restriction on Cluster Materialized Views&nbsp;</span>If you specify <code dir="ltr">CLUSTER</code>, then you cannot specify the <code dir="ltr"><span class="codeinlineitalic">table_partitioning_clauses</span></code> in <code dir="ltr"><span class="codeinlineitalic">materialized_view_props</span></code>.</p>
<p class="subhead1"><a id="i2105337"></a><a id="SQLRF54144"></a><span class="italic">materialized_view_props</span></p>
<p>Use these property clauses to describe a materialized view that is not based on an existing table. To create a materialized view that is based on an existing table, use the <code dir="ltr">ON</code> <code dir="ltr">PREBUILT</code> <code dir="ltr">TABLE</code> clause.</p>
<p class="subhead2"><a id="i2064001"></a><a id="SQLRF54145"></a><span class="italic">column_properties <a id="sthref5092"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">column_properties</span></code> clause lets you specify the storage characteristics of a LOB, nested table, varray, or <code dir="ltr">XMLType</code> column. The <code dir="ltr"><span class="codeinlineitalic">object_type_col_properties</span></code> are not relevant for a materialized view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2095331">CREATE TABLE</a> for detailed information about specifying the parameters of this clause</div>
<p class="subhead2"><a id="i2124342"></a><a id="SQLRF54146"></a><span class="italic">table_partitioning_clauses<a id="sthref5093"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">table_partitioning_clauses</span></code> let you specify that the materialized view is partitioned on specified ranges of values or on a hash function. Partitioning of materialized views is the same as partitioning of tables.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2215406"><span class="xreftitleitalic"><span class="italic">table_partitioning_clauses</span></span></a> in the <code dir="ltr">CREATE TABLE</code> documentation</div>
<p class="subhead2"><a id="SQLRF54147"></a>CACHE | NOCACHE<a id="sthref5094"></a><a id="sthref5095"></a></p>
<p>For data that will be accessed frequently, <code dir="ltr">CACHE</code> specifies that the blocks retrieved for this table are placed at the most recently used end of the least recently used (LRU) list in the buffer cache when a full table scan is performed. This attribute is useful for small lookup tables. <code dir="ltr">NOCACHE</code> specifies that the blocks are placed at the least recently used end of the LRU list.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">NOCACHE</code> has no effect on materialized views for which you specify <code dir="ltr">KEEP</code> in the <code dir="ltr"><span class="codeinlineitalic">storage_clause</span></code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2095331">CREATE TABLE</a> for information about specifying <code dir="ltr">CACHE</code> or <code dir="ltr">NOCACHE</code></div>
<p class="subhead2"><a id="i2064063"></a><a id="SQLRF54148"></a><span class="italic">parallel_clause<a id="sthref5096"></a><a id="sthref5097"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> lets you indicate whether parallel operations will be supported for the materialized view and sets the default degree of parallelism for queries and DML on the materialized view after creation.</p>
<p>For complete information on this clause, refer to <a href="statements_7002.htm#i2159323"><span class="xreftitleitalic"><span class="italic">parallel_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p class="subhead2"><a id="i2148448"></a><a id="SQLRF54149"></a><span class="italic">build_clause<a id="sthref5098"></a><a id="sthref5099"></a><a id="sthref5100"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">build_clause</span></code> lets you specify when to populate the materialized view.</p>
<p><a id="SQLRF54150"></a><span class="subhead3">IMMEDIATE&nbsp;</span>Specify <code dir="ltr">IMMEDIATE</code> to indicate that the materialized view is to be populated immediately. This is the default.</p>
<p><a id="SQLRF54151"></a><span class="subhead3">DEFERRED&nbsp;</span>Specify <code dir="ltr">DEFERRED</code> to indicate that the materialized view is to be populated by the next <code dir="ltr">REFRESH</code> operation. The first (deferred) refresh must always be a complete refresh. Until then, the materialized view has a staleness value of <code dir="ltr">UNUSABLE</code>, so it cannot be used for query rewrite.</p>
<p class="subhead1"><a id="SQLRF54152"></a>USING INDEX Clause <a id="sthref5101"></a><a id="sthref5102"></a></p>
<p>The <code dir="ltr">USING</code> <code dir="ltr">INDEX</code> clause lets you establish the value of the <code dir="ltr">INITRANS</code> and <code dir="ltr">STORAGE</code> parameters for the default index Oracle Database uses to maintain the materialized view data. If <code dir="ltr">USING</code> <code dir="ltr">INDEX</code> is not specified, then default values are used for the index. Oracle Database uses the default index to speed up incremental (<code dir="ltr">FAST</code>) refresh of the materialized view.</p>
<p><a id="SQLRF54153"></a><span class="subhead3">Restriction on USING INDEX clause&nbsp;</span>You cannot specify the <code dir="ltr">PCTUSED</code> parameter in this clause.</p>
<p class="subhead1"><a id="SQLRF54154"></a>USING NO INDEX Clause <a id="sthref5103"></a><a id="sthref5104"></a><a id="sthref5105"></a><a id="sthref5106"></a></p>
<p>Specify <code dir="ltr">USING</code> <code dir="ltr">NO</code> <code dir="ltr">INDEX</code> to suppress the creation of the default index. You can create an alternative index explicitly by using the <code dir="ltr">CREATE</code> <code dir="ltr">INDEX</code> statement. You should create such an index if you specify <code dir="ltr">USING</code> <code dir="ltr">NO</code> <code dir="ltr">INDEX</code> and you are creating the materialized view with the fast refresh method (<code dir="ltr">REFRESH</code> <code dir="ltr">FAST</code>).</p>
<p class="subhead1"><a id="i2064161"></a><a id="SQLRF54155"></a><span class="italic">create_mv_refresh<a id="sthref5107"></a><a id="sthref5108"></a><a id="sthref5109"></a><a id="sthref5110"></a><a id="sthref5111"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">create_mv_refresh</span></code> clause to specify the default methods, modes, and times for the database to refresh the materialized view. If the master tables of a materialized view are modified, then the data in the materialized view must be updated to make the materialized view accurately reflect the data currently in its master tables. This clause lets you schedule the times and specify the method and mode for the database to refresh the materialized view.</p>
<p><a id="SQLRF56104"></a><span class="subhead3">Restriction on Synchronous Refresh&nbsp;</span>If you are using the synchronous refresh method, then you must specify <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code> and <code dir="ltr">USING</code> <code dir="ltr">TRUSTED</code> <code dir="ltr">CONSTRAINTS</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This clause only sets the default refresh options. For instructions on actually implementing the refresh, refer to <a class="olink REPLN109" href="../REPLN/repmview.htm#REPLN109"><span class="italic">Oracle Database Advanced Replication</span></a> and <a class="olink DWHSG015" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG015"><span class="italic">Oracle Database Data Warehousing Guide</span></a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i2098290">&#34;Periodic Refresh of Materialized Views: Example&#34;</a> and <a href="#i2119766">&#34;Automatic Refresh Times for Materialized Views: Example&#34;</a></p>
</li>
<li>
<p><a class="olink ARPLS027" href="../ARPLS/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on refresh methods</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="SQLRF54156"></a>FAST Clause<a id="sthref5112"></a></p>
<p>Specify <code dir="ltr">FAST</code> to indicate the fast refresh method, which performs the refresh according to the changes that have occurred to the master tables. The changes for conventional DML changes are stored in the materialized view log associated with the master table. The changes for direct-path <code dir="ltr">INSERT</code> operations are stored in the direct loader log.</p>
<p>If you specify <code dir="ltr">REFRESH</code> <code dir="ltr">FAST</code>, then the <code dir="ltr">CREATE</code> statement will fail unless materialized view logs already exist for the materialized view master tables. Oracle Database creates the direct loader log automatically when a direct-path <code dir="ltr">INSERT</code> takes place. No user intervention is needed.</p>
<p>For both conventional DML changes and for direct-path <code dir="ltr">INSERT</code> operations, other conditions may restrict the eligibility of a materialized view for fast refresh.</p>
<p><a id="SQLRF52896"></a><span class="subhead3">Restrictions on FAST Refresh&nbsp;</span><code dir="ltr">FAST</code> refresh is subject to the following restrictions:</p>
<ul>
<li>
<p>When you specify <code dir="ltr">FAST</code> refresh at create time, Oracle Database verifies that the materialized view you are creating is eligible for fast refresh. When you change the refresh method to <code dir="ltr">FAST</code> in an <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> statement, Oracle Database does not perform this verification. If the materialized view is not eligible for fast refresh, then Oracle Database returns an error when you attempt to refresh this view.</p>
</li>
<li>
<p>Materialized views are not eligible for fast refresh if the defining query contains an analytic function or the <code dir="ltr">XMLTable</code> function.</p>
</li>
<li>
<p>Materialized views are not eligible for fast refresh if the defining query references a table on which an <code dir="ltr">XMLIndex</code> index is defined.</p>
</li>
<li>
<p>You cannot fast refresh a materialized view if any of its columns is encrypted.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REPLN109" href="../REPLN/repmview.htm#REPLN109"><span class="italic">Oracle Database Advanced Replication</span></a> for restrictions on fast refresh in replication environments</p>
</li>
<li>
<p><a class="olink DWHSG015" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG015"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for restrictions on fast refresh in data warehousing environments</p>
</li>
<li>
<p>The <code dir="ltr">EXPLAIN_MVIEW</code> procedure of the <a class="olink ARPLS027" href="../ARPLS/d_mview.htm#ARPLS027"><code dir="ltr">DBMS_MVIEW</code></a> package for help diagnosing problems with fast refresh and the <code dir="ltr">TUNE_MVIEW</code> procedure of the <a class="olink ARPLS027" href="../ARPLS/d_mview.htm#ARPLS027"><code dir="ltr">DBMS_MVIEW</code></a> package for correction of fast refresh problems</p>
</li>
<li>
<p><a href="functions004.htm#i81407">&#34;Analytic Functions&#34;</a></p>
</li>
<li>
<p><a href="#i2080820">&#34;Creating a Fast Refreshable Materialized View: Example&#34;</a></p>
</li>
</ul>
</div>
<p class="subhead2"><a id="SQLRF54157"></a>COMPLETE Clause<a id="sthref5113"></a></p>
<p>Specify <code dir="ltr">COMPLETE</code> to indicate the complete refresh method, which is implemented by executing the defining query of the materialized view. If you request a complete refresh, then Oracle Database performs a complete refresh even if a fast refresh is possible.</p>
<p class="subhead2"><a id="SQLRF54158"></a>FORCE Clause<a id="sthref5114"></a></p>
<p>Specify <code dir="ltr">FORCE</code> to indicate that when a refresh occurs, Oracle Database will perform a fast refresh if one is possible or a complete refresh if fast refresh is not possible. If you do not specify a refresh method (<code dir="ltr">FAST</code>, <code dir="ltr">COMPLETE</code>, or <code dir="ltr">FORCE</code>), then <code dir="ltr">FORCE</code> is the default.</p>
<p class="subhead2"><a id="SQLRF54159"></a>ON COMMIT Clause<a id="sthref5115"></a></p>
<p>Specify <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> to indicate that a refresh is to occur whenever the database commits a transaction that operates on a master table of the materialized view. This clause may increase the time taken to complete the commit, because the database performs the refresh operation as part of the commit process.</p>
<p>You cannot specify both <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> and <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code>. If you specify <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code>, then you cannot also specify <code dir="ltr">START</code> <code dir="ltr">WITH</code> or <code dir="ltr">NEXT</code>.</p>
<p class="subhead2"><a id="SQLRF54160"></a>Restrictions on Refreshing ON COMMIT</p>
<ul>
<li>
<p>This clause is not supported for materialized views containing object types or Oracle-supplied types.</p>
</li>
<li>
<p>This clause is not supported for materialized views with remote tables.</p>
</li>
<li>
<p>If you specify this clause, then you cannot subsequently execute a distributed transaction on any master table of this materialized view. For example, you cannot insert into the master by selecting from a remote table. The <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code> clause does not impose this restriction on subsequent distributed transactions on master tables.</p>
</li>
</ul>
<p class="subhead2"><a id="SQLRF54161"></a>ON DEMAND Clause<a id="sthref5116"></a></p>
<p>Specify <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code> to indicate that database will not refresh the materialized view unless the user manually launches a refresh through one of the three <code dir="ltr">DBMS_MVIEW</code> refresh procedures.</p>
<p>You cannot specify both <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> and <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code>. If you omit both <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> and <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code>, then <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code> is the default. You can override this default setting by specifying the <code dir="ltr">START</code> <code dir="ltr">WITH</code> or <code dir="ltr">NEXT</code> clauses, either in the same <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> statement or a subsequent <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> statement.</p>
<p><code dir="ltr">START</code> <code dir="ltr">WITH</code> and <code dir="ltr">NEXT</code> take precedence over <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code>. Therefore, in most circumstances it is not meaningful to specify <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code> when you have specified <code dir="ltr">START</code> <code dir="ltr">WITH</code> or <code dir="ltr">NEXT</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS027" href="../ARPLS/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information on these procedures</p>
</li>
<li>
<p><a class="olink DWHSG015" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG015"><span class="italic">Oracle Database Data Warehousing Guide</span></a> on the types of materialized views you can create by specifying <code dir="ltr">REFRESH</code> <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code></p>
</li>
</ul>
</div>
<p class="subhead2"><a id="SQLRF54162"></a>START WITH Clause</p>
<p>Specify a datetime expression for the first automatic refresh time.</p>
<p class="subhead2"><a id="SQLRF54163"></a>NEXT Clause</p>
<p>Specify a datetime expression for calculating the interval between automatic refreshes.</p>
<p>Both the <code dir="ltr">START</code> <code dir="ltr">WITH</code> and <code dir="ltr">NEXT</code> values must evaluate to a time in the future. If you omit the <code dir="ltr">START</code> <code dir="ltr">WITH</code> value, then the database determines the first automatic refresh time by evaluating the <code dir="ltr">NEXT</code> expression with respect to the creation time of the materialized view. If you specify a <code dir="ltr">START</code> <code dir="ltr">WITH</code> value but omit the <code dir="ltr">NEXT</code> value, then the database refreshes the materialized view only once. If you omit both the <code dir="ltr">START</code> <code dir="ltr">WITH</code> and <code dir="ltr">NEXT</code> values, or if you omit the <code dir="ltr"><span class="codeinlineitalic">create_mv_refresh</span></code> entirely, then the database does not automatically refresh the materialized view.</p>
<p class="subhead2"><a id="SQLRF54164"></a>WITH PRIMARY KEY Clause <a id="sthref5117"></a><a id="sthref5118"></a></p>
<p>Specify <code dir="ltr">WITH PRIMARY</code> <code dir="ltr">KEY</code> to create a primary key materialized view. This is the default and should be used in all cases except those described for <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code>. Primary key materialized views allow materialized view master tables to be reorganized without affecting the eligibility of the materialized view for fast refresh. The master table must contain an enabled primary key constraint, and the defining query of the materialized view must specify all of the primary key columns directly. In the defining query, the primary key columns cannot be specified as the argument to a function such as <code dir="ltr">UPPER</code>.</p>
<p><a id="SQLRF54165"></a><span class="subhead3">Restriction on Primary Key Materialized Views&nbsp;</span>You cannot specify this clause for an object materialized view. Oracle Database implicitly refreshes objects materialized <code dir="ltr">WITH</code> <code dir="ltr">OBJECT</code> <code dir="ltr">ID</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN003" href="../REPLN/repmview.htm#REPLN003"><span class="italic">Oracle Database Advanced Replication</span></a> for detailed information about primary key materialized views and <a href="#i2119730">&#34;Creating Primary Key Materialized Views: Example&#34;</a></div>
<p class="subhead2"><a id="SQLRF54166"></a>WITH ROWID Clause<span class="italic"><a id="sthref5119"></a><a id="sthref5120"></a></span></p>
<p>Specify <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code> to create a rowid materialized view. Rowid materialized views are useful if the materialized view does not include all primary key columns of the master tables. Rowid materialized views must be based on a single table and cannot contain any of the following:</p>
<ul>
<li>
<p>Distinct or aggregate functions</p>
</li>
<li>
<p><code dir="ltr">GROUP</code> <code dir="ltr">BY</code> <code dir="ltr">or</code> <code dir="ltr">CONNECT</code> <code dir="ltr">BY</code> clauses</p>
</li>
<li>
<p>Subqueries</p>
</li>
<li>
<p>Joins</p>
</li>
<li>
<p>Set operations</p>
</li>
</ul>
<p>The <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code> clause has no effect if there are multiple master tables in the defining query.</p>
<p>Rowid materialized views are not eligible for fast refresh after a master table reorganization until a complete refresh has been performed.</p>
<p><a id="SQLRF54167"></a><span class="subhead3">Restriction on Rowid Materialized Views&nbsp;</span>You cannot specify this clause for an object materialized view. Oracle Database implicitly refreshes objects materialized <code dir="ltr">WITH</code> <code dir="ltr">OBJECT</code> <code dir="ltr">ID</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2092102">&#34;Creating Materialized Aggregate Views: Example&#34;</a> and <a href="#i2098291">&#34;Creating Rowid Materialized Views: Example&#34;</a></div>
<p class="subhead2"><a id="CCHHBCEB"></a><a id="SQLRF54168"></a>USING ROLLBACK SEGMENT Clause <a id="sthref5121"></a></p>
<p>This clause is not valid if your database is in automatic undo mode, because in that mode Oracle Database uses undo tablespaces instead of rollback segments. Oracle strongly recommends that you use automatic undo mode. This clause is supported for backward compatibility with replication environments containing older versions of Oracle Database that still use rollback segments.</p>
<p>For <code dir="ltr"><span class="codeinlineitalic">rollback_segment</span></code>, specify the remote rollback segment to be used during materialized view refresh.</p>
<p><a id="SQLRF54169"></a><span class="subhead3">DEFAULT&nbsp;</span><code dir="ltr">DEFAULT</code> specifies that Oracle Database will choose automatically which rollback segment to use. If you specify <code dir="ltr">DEFAULT</code>, then you cannot specify <code dir="ltr"><span class="codeinlineitalic">rollback_segment</span></code>. <code dir="ltr">DEFAULT</code> is most useful when modifying, rather than creating, a materialized view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_2002.htm#CCHECCJB">ALTER MATERIALIZED VIEW</a></div>
<p><a id="SQLRF54170"></a><span class="subhead3">MASTER&nbsp;</span><code dir="ltr">MASTER</code> specifies the remote rollback segment to be used at the remote master site for the individual materialized view.</p>
<p><a id="SQLRF54171"></a><span class="subhead3">LOCAL&nbsp;</span><code dir="ltr">LOCAL</code> specifies the remote rollback segment to be used for the local refresh group that contains the materialized view. This is the default.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN109" href="../REPLN/repmview.htm#REPLN109"><span class="italic">Oracle Database Advanced Replication</span></a> for information on specifying the local materialized view rollback segment using the <code dir="ltr">DBMS_REFRESH</code> package</div>
<p>If you omit <code dir="ltr"><span class="codeinlineitalic">rollback_segment</span></code>, then the database automatically chooses the rollback segment to be used. One master rollback segment is stored for each materialized view and is validated during materialized view creation and refresh. If the materialized view is complex, then the database ignores any master rollback segment you specify.</p>
<p class="subhead2"><a id="i2152121"></a><a id="SQLRF54172"></a>USING ... CONSTRAINTS Clause <a id="sthref5122"></a></p>
<p>The <code dir="ltr">USING</code> ... <code dir="ltr">CONSTRAINTS</code> clause lets Oracle Database choose more rewrite options during the refresh operation, resulting in more efficient refresh execution. The clause lets Oracle Database use unenforced constraints, such as dimension relationships or constraints in the <code dir="ltr">RELY</code> state, rather than relying only on enforced constraints during the refresh operation.</p>
<p>The <code dir="ltr">USING</code> <code dir="ltr">TRUSTED</code> <code dir="ltr">CONSTRAINTS</code> clause enables you to create a materialized view on top of a table that has a non-NULL Virtual Private Database (VPD) policy on it. In this case, you must ensure that the materialized view behaves correctly. Materialized view results are computed based on the rows and columns filtered by VPD policy. Therefore, you must coordinate the materialized view definition with the VPD policy to ensure the correct results. Without the <code dir="ltr">USING</code> <code dir="ltr">TRUSTED</code> <code dir="ltr">CONSTRAINTS</code> clause, any VPD policy on a master table will prevent a materialized view from being created.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
The <code dir="ltr">USING</code> <code dir="ltr">TRUSTED</code> <code dir="ltr">CONSTRAINTS</code> clause lets Oracle Database use dimension and constraint information that has been declared trustworthy by the database administrator but that has not been validated by the database. If the dimension and constraint information is valid, then performance may improve. However, if this information is invalid, then the refresh procedure may corrupt the materialized view even though it returns a success status.</div>
<p>If you omit this clause, then the default is <code dir="ltr">USING</code> <code dir="ltr">ENFORCED</code> <code dir="ltr">CONSTRAINTS.</code></p>
<p class="subhead2"><a id="SQLRF54173"></a>NEVER REFRESH Clause</p>
<p>Specify <code dir="ltr">NEVER</code> <code dir="ltr">REFRESH</code> to prevent the materialized view from being refreshed with any Oracle Database refresh mechanism or packaged procedure. Oracle Database will ignore any <code dir="ltr">REFRESH</code> statement on the materialized view issued from such a procedure. If you specify this clause, then you can perform DML operations on the materialized view. To reverse this clause, you must issue an <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> ... <code dir="ltr">REFRESH</code> statement.</p>
<p class="subhead1"><a id="SQLRF54174"></a>FOR UPDATE Clause <a id="sthref5123"></a><a id="sthref5124"></a></p>
<p>Specify <code dir="ltr">FOR</code> <code dir="ltr">UPDATE</code> to allow a subquery, primary key, object, or rowid materialized view to be updated. When used in conjunction with Advanced Replication, these updates will be propagated to the master.</p>
<p class="subhead1"><a id="CCHCFGHG"></a><a id="SQLRF56244"></a><span class="italic">evaluation_edition_clause</span></p>
<p>You must specify this clause if <code dir="ltr"><span class="codeinlineitalic">subquery</span></code> references an editioned object. Use this clause to specify the edition that is searched during name resolution of the editioned object&mdash;the evaluation edition.</p>
<ul>
<li>
<p>Specify <code dir="ltr">CURRENT</code> <code dir="ltr">EDITION</code> to search the edition in which this DDL statement is executed.</p>
</li>
<li>
<p>Specify <code dir="ltr">EDITION</code> <code dir="ltr"><span class="codeinlineitalic">edition</span></code> to search <code dir="ltr"><span class="codeinlineitalic">edition</span></code>.</p>
</li>
<li>
<p>Specifying <code dir="ltr">NULL</code> <code dir="ltr">EDITION</code> is equivalent to omitting the <code dir="ltr"><span class="codeinlineitalic">evaluation_edition_clause</span></code>.</p>
</li>
</ul>
<p>If you omit the <code dir="ltr"><span class="codeinlineitalic">evaluation_edition_clause</span></code>, then editioned objects are invisible during name resolution and an error will result. Dropping the evaluation edition invalidates the materialized view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS1326" href="../ADFNS/adfns_editions.htm#ADFNS1326"><span class="italic">Oracle Database Development Guide</span></a> for more information on specifying the evaluation edition for a materialized view</div>
<p class="subhead1"><a id="CCHHFDIE"></a><a id="SQLRF54175"></a><span class="italic">query_rewrite_clause</span> <a id="sthref5125"></a><a id="sthref5126"></a><a id="sthref5127"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">query_rewrite_clause</span></code> lets you specify whether the materialized view is eligible to be used for query rewrite.</p>
<p><a id="SQLRF54176"></a><span class="subhead3">ENABLE Clause&nbsp;</span>Specify <code dir="ltr">ENABLE</code> to enable the materialized view for query rewrite. If you also specify the <code dir="ltr"><span class="codeinlineitalic">unusable_editions_clause</span></code>, then the materialized view is not enabled for query rewrite in the unusable editions.</p>
<p><a id="SQLRF54177"></a><span class="subhead3">Restrictions on Enabling Query Rewrite&nbsp;</span>Enabling of query rewrite is subject to the following restrictions:</p>
<ul>
<li>
<p>You can enable query rewrite only if all user-defined functions in the materialized view are <code dir="ltr">DETERMINISTIC</code>.</p>
</li>
<li>
<p>You can enable query rewrite only if expressions in the statement are repeatable. For example, you cannot include <code dir="ltr">CURRENT_TIME</code> or <code dir="ltr">USER</code>, sequence values (such as the <code dir="ltr">CURRVAL</code> or <code dir="ltr">NEXTVAL</code> pseudocolumns), or the <code dir="ltr">SAMPLE</code> clause (which may sample different rows as the contents of the materialized view change).</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>Query rewrite is disabled by default, so you must specify this clause to make materialized views eligible for query rewrite.</p>
</li>
<li>
<p>After you create the materialized view, you must collect statistics on it using the <code dir="ltr">DBMS_STATS</code> package. Oracle Database needs the statistics generated by this package to optimize query rewrite.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DWHSG018" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG018"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on query rewrite</p>
</li>
<li>
<p><a class="olink ARPLS059" href="../ARPLS/d_stats.htm#ARPLS059"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about the <code dir="ltr">DBMS_STATS</code> package</p>
</li>
<li>
<p>The <code dir="ltr">EXPLAIN_MVIEW</code> procedure of the <a class="olink ARPLS027" href="../ARPLS/d_mview.htm#ARPLS027"><code dir="ltr">DBMS_MVIEW</code></a> package for help diagnosing problems with query rewrite and the <code dir="ltr">TUNE_MVIEW</code> procedure of the <a class="olink ARPLS027" href="../ARPLS/d_mview.htm#ARPLS027"><code dir="ltr">DBMS_MVIEW</code></a> package correction of query rewrite problems</p>
</li>
<li>
<p><a href="statements_5012.htm#i2153260">CREATE FUNCTION</a></p>
</li>
</ul>
</div>
<p><a id="SQLRF54178"></a><span class="subhead3">DISABLE Clause&nbsp;</span>Specify <code dir="ltr">DISABLE</code> to indicate that the materialized view is not eligible for use by query rewrite. A disabled materialized view can be refreshed.</p>
<p><a id="CCHICCEH"></a><a id="SQLRF56303"></a><span class="subhead3"><span class="italic">unusable_editions_clause</span>&nbsp;</span>This clause lets you specify that the materialized view is not eligible for query rewrite in one or more editions. You can specify this clause regardless of whether you specify the <code dir="ltr">ENABLE</code> or <code dir="ltr">DISABLE</code> clause. If you specify the <code dir="ltr">DISABLE</code> clause, then this clause will take effect if the materialized view is subsequently enabled for query rewrite using the <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> ... <code dir="ltr">ENABLE</code> <code dir="ltr">QUERY</code> <code dir="ltr">REWRITE</code> statement.</p>
<p><a id="CCHGDAAH"></a><a id="SQLRF56304"></a><span class="subhead3">UNUSABLE BEFORE Clause&nbsp;</span>This clause lets you specify that the materialized view is not eligible for query rewrite in the ancestors of an edition.</p>
<ul>
<li>
<p>If you specify <code dir="ltr">CURRENT</code> <code dir="ltr">EDITION</code>, then the materialized view is not eligible for query rewrite in the ancestors of the current edition.</p>
</li>
<li>
<p>If you specify <code dir="ltr">EDITION</code> <code dir="ltr"><span class="codeinlineitalic">edition</span></code>, then the materialized view is not eligible for query rewrite in the ancestors of the specified <code dir="ltr"><span class="codeinlineitalic">edition</span></code>.</p>
</li>
</ul>
<p><a id="CCHIIEGB"></a><a id="SQLRF56305"></a><span class="subhead3">UNUSABLE BEGINNING WITH Clause&nbsp;</span>This clause lets you specify that the materialized view is not eligible for query rewrite in an edition and its descendants.</p>
<ul>
<li>
<p>If you specify <code dir="ltr">CURRENT</code> <code dir="ltr">EDITION</code>, then the materialized view is not eligible for query rewrite in the current edition and its descendants.</p>
</li>
<li>
<p>If you specify <code dir="ltr">EDITION</code> <code dir="ltr"><span class="codeinlineitalic">edition</span></code>, then the materialized view is not eligible for query rewrite in the specified edition and its descendants.</p>
</li>
<li>
<p>Specifying <code dir="ltr">NULL</code> <code dir="ltr">EDITION</code> is equivalent to omitting the <code dir="ltr">UNUSABLE</code> <code dir="ltr">BEGINNING</code> <code dir="ltr">WITH</code> clause.</p>
</li>
</ul>
<p>The materialized view has a dependency on each edition in which it is not eligible for query rewrite. If such an edition is subsequently dropped, then the dependency is removed. However, the materialized view is not invalidated.</p>
<p class="subhead1"><a id="SQLRF54179"></a>AS <span class="italic">subquery</span> <span class="italic"><a id="sthref5128"></a><a id="sthref5129"></a></span></p>
<p>Specify the defining query of the materialized view. When you create the materialized view, Oracle Database executes this subquery and places the results in the materialized view. This subquery is any valid SQL subquery. However, not all subqueries are fast refreshable, nor are all subqueries eligible for query rewrite.</p>
<p><a id="SQLRF54180"></a><span class="subhead3"><span class="bold">Notes</span> on the Defining Query of a Materialized View&nbsp;</span>The following notes apply to materialized views:</p>
<ul>
<li>
<p>Oracle Database does not execute the defining query immediately if you specify <code dir="ltr">BUILD</code> <code dir="ltr">DEFERRED</code>.</p>
</li>
<li>
<p>Oracle recommends that you qualify each table and view in the <code dir="ltr">FROM</code> clause of the defining query of the materialized view with the schema containing it.</p>
</li>
<li>
<p>In order to create a materialized view whose defining query selects from a master table that has a Virtual Private Database (VPD) policy, you must specify the <code dir="ltr">REFRESH</code> <code dir="ltr">USING</code> <code dir="ltr">TRUSTED</code> <code dir="ltr">CONSTRAINTS</code> clause.</p>
</li>
</ul>
<p><a id="SQLRF54181"></a><span class="subhead3">Restrictions on the Defining Query of a Materialized View&nbsp;</span>The materialized view query is subject to the following restrictions:</p>
<ul>
<li>
<p>The defining query of a materialized view can select from tables, views, or materialized views owned by the user <code dir="ltr">SYS</code>, but you cannot enable <code dir="ltr">QUERY</code> <code dir="ltr">REWRITE</code> on such a materialized view.</p>
</li>
<li>
<p>The defining query of a materialized view cannot select from a <code dir="ltr">V$</code> view or a <code dir="ltr">GV$</code> view.</p>
</li>
<li>
<p>You cannot define a materialized view with a subquery in the select list of the defining query. You can, however, include subqueries elsewhere in the defining query, such as in the <code dir="ltr">WHERE</code> clause.</p>
</li>
<li>
<p>You cannot use the <code dir="ltr">AS</code> <code dir="ltr">OF</code> clause of the <code dir="ltr"><span class="codeinlineitalic">flashback_query_clause</span></code> in the defining query of a materialized view.</p>
</li>
<li>
<p>Materialized join views and materialized aggregate views with a <code dir="ltr">GROUP</code> <code dir="ltr">BY</code> clause cannot select from an index-organized table.</p>
</li>
<li>
<p>Materialized views cannot contain columns of data type <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>.</p>
</li>
<li>
<p>Materialized views cannot contain virtual columns.</p>
</li>
<li>
<p>You cannot create a materialized view log on a temporary table. Therefore, if the defining query references a temporary table, then this materialized view will not be eligible for <code dir="ltr">FAST</code> refresh, nor can you specify the <code dir="ltr">QUERY</code> <code dir="ltr">REWRITE</code> clause in this statement.</p>
</li>
<li>
<p>If the <code dir="ltr">FROM</code> clause of the defining query references another materialized view, then you must always refresh the materialized view referenced in the defining query before refreshing the materialized view you are creating in this statement.</p>
</li>
<li>
<p>Materialized views with join expressions in the defining query cannot have XML data type columns. The XML data types include <code dir="ltr">XMLType</code> and URI data type columns.</p>
</li>
</ul>
<p>If you are creating a materialized view enabled for query rewrite, then:</p>
<ul>
<li>
<p>The defining query cannot contain, either directly or through a view, references to <code dir="ltr">ROWNUM</code>, <code dir="ltr">USER</code>, <code dir="ltr">SYSDATE</code>, remote tables, sequences, or PL/SQL functions that write or read database or package state.</p>
</li>
<li>
<p>Neither the materialized view nor the master tables of the materialized view can be remote.</p>
</li>
</ul>
<p>If you want the materialized view to be eligible for fast refresh using a materialized view log, or synchronous refresh using a staging log, then some additional restrictions apply.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DWHSG029" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG029"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for restrictions relating to using <a class="olink DWHSG8201" href="../DWHSG/basicmv.htm#DWHSG8201">fast refresh</a> and synchronous refresh</p>
</li>
<li>
<p><a class="olink REPLN101" href="../REPLN/repplan.htm#REPLN101"><span class="italic">Oracle Database Advanced Replication</span></a> for more information on restrictions relating to replication</p>
</li>
<li>
<p><a href="#i2119687">&#34;Creating Materialized Join Views: Example&#34;</a>, <a href="#i2119713">&#34;Creating Subquery Materialized Views: Example&#34;</a>, and <a href="#i2119822">&#34;Creating a Nested Materialized View: Example&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2106785"></a>Examples <a id="sthref5130"></a></p>
<p>The following examples require the materialized logs that are created in the &#34;Examples&#34; section of <a href="statements_6003.htm#i2064649">CREATE MATERIALIZED VIEW LOG</a>.</p>
<p><a id="SQLRF54182"></a><span class="subhead3">Creating a Simple Materialized View: Example&nbsp;</span>The following statement creates a very simple materialized view based on the <code dir="ltr">employees</code> and table in the <code dir="ltr">hr</code> schema:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW mv1 AS SELECT * FROM hr.employees;
</pre>
<p>By default, Oracle Database creates a primary key materialized view with refresh on demand only. If a materialized view log exists on <code dir="ltr">employees</code>, then <code dir="ltr">mv1</code> can be altered to be capable of fast refresh. If no such log exists, then only full refresh of <code dir="ltr">mv1</code> is possible. Oracle Database uses default storage properties for <code dir="ltr">mv1</code>. The only privileges required for this operation are the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> system privilege, and the <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> object privilege on <code dir="ltr">hr</code>.<code dir="ltr">employees</code>.</p>
<p><a id="i2119713"></a><a id="SQLRF54183"></a><span class="subhead3">Creating Subquery Materialized Views: Example&nbsp;</span>The following statement creates a subquery materialized view based on the <code dir="ltr">customers</code> and <code dir="ltr">countries</code> tables in the <code dir="ltr">sh</code> schema at the <code dir="ltr">remote</code> database:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW foreign_customers FOR UPDATE
   AS SELECT * FROM sh.customers@remote cu
   WHERE EXISTS
     (SELECT * FROM sh.countries@remote co
      WHERE co.country_id = cu.country_id);
</pre>
<p><a id="i2092102"></a><a id="SQLRF54184"></a><span class="subhead3">Creating Materialized Aggregate Views: Example&nbsp;</span>The following statement creates and populates a materialized aggregate view on the sample <code dir="ltr">sh.sales</code> table and specifies the default refresh method, mode, and time. It uses the materialized view log created in <a href="statements_6003.htm#i2098404">&#34;Creating a Materialized View Log for Fast Refresh: Examples&#34;</a>, as well as the two additional logs shown here:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW LOG ON times
   WITH ROWID, SEQUENCE (time_id, calendar_year)
   INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON products
   WITH ROWID, SEQUENCE (prod_id)
   INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW sales_mv
   BUILD IMMEDIATE
   REFRESH FAST ON COMMIT
   AS SELECT t.calendar_year, p.prod_id, 
      SUM(s.amount_sold) AS sum_sales
      FROM times t, products p, sales s
      WHERE t.time_id = s.time_id AND p.prod_id = s.prod_id
      GROUP BY t.calendar_year, p.prod_id;
</pre>
<p><a id="i2119687"></a><a id="SQLRF54185"></a><span class="subhead3">Creating Materialized Join Views: Example&nbsp;</span>The following statement creates and populates the materialized aggregate view <code dir="ltr">sales_by_month_by_state</code> using tables in the sample <code dir="ltr">sh</code> schema. The materialized view will be populated with data as soon as the statement executes successfully. By default, subsequent refreshes will be accomplished by reexecuting the defining query of the materialized view:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW sales_by_month_by_state
     TABLESPACE example
     PARALLEL 4
     BUILD IMMEDIATE
     REFRESH COMPLETE
     ENABLE QUERY REWRITE
     AS SELECT t.calendar_month_desc, c.cust_state_province,
        SUM(s.amount_sold) AS sum_sales
        FROM times t, sales s, customers c
        WHERE s.time_id = t.time_id AND s.cust_id = c.cust_id
        GROUP BY t.calendar_month_desc, c.cust_state_province;
</pre>
<p><a id="i2092101"></a><a id="SQLRF54186"></a><span class="subhead3">Creating Prebuilt Materialized Views: Example&nbsp;</span>The following statement creates a materialized aggregate view for the preexisting summary table, <code dir="ltr">sales_sum_table</code>:</p>
<pre dir="ltr">CREATE TABLE sales_sum_table
   (month VARCHAR2(8), state VARCHAR2(40), sales NUMBER(10,2));

CREATE MATERIALIZED VIEW sales_sum_table
   ON PREBUILT TABLE WITH REDUCED PRECISION
   ENABLE QUERY REWRITE
   AS SELECT t.calendar_month_desc AS month, 
             c.cust_state_province AS state,
             SUM(s.amount_sold) AS sales
      FROM times t, customers c, sales s
      WHERE s.time_id = t.time_id AND s.cust_id = c.cust_id
      GROUP BY t.calendar_month_desc, c.cust_state_province;
</pre>
<p>In the preceding example, the materialized view has the same name and also has the same number of columns with the same data types as the prebuilt table. The <code dir="ltr">WITH</code> <code dir="ltr">REDUCED</code> <code dir="ltr">PRECISION</code> clause allows for differences between the precision of the materialized view columns and the precision of the values returned by the subquery.</p>
<p><a id="i2119730"></a><a id="SQLRF54187"></a><span class="subhead3">Creating Primary Key Materialized Views: Example&nbsp;</span>The following statement creates the primary key materialized view <code dir="ltr">catalog</code> on the sample table <code dir="ltr">oe.product_information</code>:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW catalog   
   REFRESH FAST START WITH SYSDATE NEXT SYSDATE + 1/4096 
   WITH PRIMARY KEY 
   AS SELECT * FROM product_information;  
</pre>
<p><a id="i2098291"></a><a id="SQLRF54188"></a><span class="subhead3">Creating Rowid Materialized Views: Example&nbsp;</span>The following statement creates a rowid materialized view on the sample table <code dir="ltr">oe.orders</code>:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW order_data REFRESH WITH ROWID 
   AS SELECT * FROM orders; 
</pre>
<p><a id="i2098290"></a><a id="SQLRF54189"></a><span class="subhead3">Periodic Refresh of Materialized Views: Example&nbsp;</span>The following statement creates the primary key materialized view <code dir="ltr">emp_data</code> and populates it with data from the sample table <code dir="ltr">hr.employees</code>:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW LOG ON employees
   WITH PRIMARY KEY
   INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW emp_data 
   PCTFREE 5 PCTUSED 60 
   TABLESPACE example 
   STORAGE (INITIAL 50K)
   REFRESH FAST NEXT sysdate + 7 
   AS SELECT * FROM employees; 
</pre>
<p>The preceding statement does not include a <code dir="ltr">START</code> <code dir="ltr">WITH</code> parameter, so Oracle Database determines the first automatic refresh time by evaluating the <code dir="ltr">NEXT</code> value using the current <code dir="ltr">SYSDATE</code>. A materialized view log was created for the employee table, so Oracle Database performs a fast refresh of the materialized view every 7 days, beginning 7 days after the materialized view is created.</p>
<p>Because the materialized view conforms to the conditions for fast refresh, the database will perform a fast refresh. The preceding statement also establishes storage characteristics that the database uses to maintain the materialized view.</p>
<p><a id="i2119766"></a><a id="SQLRF54190"></a><span class="subhead3">Automatic Refresh Times for Materialized Views: Example&nbsp;</span>The following statement creates the complex materialized view <code dir="ltr">all_customers</code> that queries the employee tables on the <code dir="ltr">remote</code> and <code dir="ltr">local</code> databases:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW all_customers
   PCTFREE 5 PCTUSED 60 
   TABLESPACE example 
   STORAGE (INITIAL 50K) 
   USING INDEX STORAGE (INITIAL 25K)
   REFRESH START WITH ROUND(SYSDATE + 1) + 11/24 
   NEXT NEXT_DAY(TRUNC(SYSDATE), &#39;MONDAY&#39;) + 15/24 
   AS SELECT * FROM sh.customers@remote 
         UNION
      SELECT * FROM sh.customers@local; 
</pre>
<p>Oracle Database automatically refreshes this materialized view tomorrow at 11:00 a.m. and subsequently every Monday at 3:00 p.m. The default refresh method is <code dir="ltr">FORCE</code>. The defining query contains a <code dir="ltr">UNION</code> operator, which is not supported for fast refresh, so the database will automatically perform a complete refresh.</p>
<p>The preceding statement also establishes storage characteristics for both the materialized view and the index that the database uses to maintain it:</p>
<ul>
<li>
<p>The first <code dir="ltr">STORAGE</code> clause establishes the sizes of the first and second extents of the materialized view as 50 kilobytes each.</p>
</li>
<li>
<p>The second <code dir="ltr">STORAGE</code> clause, appearing with the <code dir="ltr">USING</code> <code dir="ltr">INDEX</code> clause, establishes the sizes of the first and second extents of the index as 25 kilobytes each.</p>
</li>
</ul>
<p><a id="i2080820"></a><a id="SQLRF54191"></a><span class="subhead3">Creating a Fast Refreshable Materialized View: Example&nbsp;</span>The following statement creates a fast-refreshable materialized view that selects columns from the <code dir="ltr">order_items</code> table in the sample <code dir="ltr">oe</code> schema, using the <code dir="ltr">UNION</code> set operator to restrict the rows returned from the <code dir="ltr">product_information</code> and <code dir="ltr">inventories</code> tables using <code dir="ltr">WHERE</code> conditions. The materialized view logs for <code dir="ltr">order_items</code> and <code dir="ltr">product_information</code> were created in the <a href="statements_6003.htm#i2064930">&#34;Examples&#34;</a> section of <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> <code dir="ltr">LOG</code>. This example also requires a materialized view log on <code dir="ltr">oe.inventories</code>.</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW LOG ON inventories
   WITH (quantity_on_hand);

CREATE MATERIALIZED VIEW warranty_orders REFRESH FAST AS
  SELECT order_id, line_item_id, product_id FROM order_items o
    WHERE EXISTS
    (SELECT * FROM inventories i WHERE o.product_id = i.product_id
      AND i.quantity_on_hand IS NOT NULL)
  UNION
    SELECT order_id, line_item_id, product_id FROM order_items
    WHERE quantity &gt; 5; 
</pre>
<p>The materialized view <code dir="ltr">warranty_orders</code> requires that materialized view logs be defined on <code dir="ltr">order_items</code> (with <code dir="ltr">product_id</code> as a join column) and on inventories (with <code dir="ltr">quantity_on_hand</code> as a filter column). See <a href="statements_6003.htm#i2098358">&#34;Specifying Filter Columns for Materialized View Logs: Example&#34;</a> and <a href="statements_6003.htm#i2098379">&#34;Specifying Join Columns for Materialized View Logs: Example&#34;</a>.</p>
<p><a id="i2119822"></a><a id="SQLRF54192"></a><span class="subhead3">Creating a Nested Materialized View: Example&nbsp;</span>The following example uses the materialized view from the preceding example as a master table to create a materialized view tailored for a particular sales representative in the sample <code dir="ltr">oe</code> schema:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW my_warranty_orders
   AS SELECT w.order_id, w.line_item_id, o.order_date
   FROM warranty_orders w, orders o
   WHERE o.order_id = o.order_id
   AND o.sales_rep_id = 165; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="statements_6001.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="statements_6003.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>