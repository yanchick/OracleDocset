<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-102056"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Pattern-matching%20Conditions"></a><title>Pattern-matching Conditions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:10Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="conditions006.htm" title="Previous" type="text/html"/>
<link rel="Next" href="conditions008.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">64/555</span> <!-- End Header --><a id="BABGDGIH"></a>
<div id="SQLRF52141" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Pattern-matching Conditions <a id="sthref1059"></a><a id="sthref1060"></a></h1>
<p>The pattern-matching conditions compare character data.</p>
<a id="i1034153"></a>
<div id="SQLRF52142" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">LIKE Condition <a id="sthref1061"></a><a id="sthref1062"></a></h2>
<p>The <code dir="ltr">LIKE</code> conditions specify a test involving pattern matching. Whereas the equality operator (=) exactly matches one character value to another, the <code dir="ltr">LIKE</code> conditions match a portion of one character value to another by searching the first value for the pattern specified by the second. <code dir="ltr">LIKE</code> calculates strings using characters as defined by the input character set. <code dir="ltr">LIKEC</code> uses Unicode complete characters. <code dir="ltr">LIKE2</code> uses UCS2 code points. <code dir="ltr">LIKE4</code> uses UCS4 code points.</p>
<p class="subhead2"><a id="SQLRF52143"></a><span class="italic">like_condition</span>::=</p>
<img width="506" height="123" src="img/like_condition.gif" alt="Description of like_condition.gif follows"/><br/>
<a id="sthref1063" href="img_text/like_condition.htm">Description of the illustration &#39;&#39;like_condition.gif&#39;&#39;</a><br/>
<br/>
<p>In this syntax:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">char1</span></code> is a character expression, such as a character column, called the <span class="bold">search value</span>.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">char2</span></code> is a character expression, usually a literal, called the <span class="bold">pattern</span>.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">esc_char</span></code> is a character expression, usually a literal, called the <span class="bold">escape character</span>.</p>
</li>
</ul>
<p>The <code dir="ltr">LIKE</code> condition is the best choice in almost all situations. Use the following guidelines to determine whether any of the variations would be helpful in your environment:</p>
<ul>
<li>
<p>Use <code dir="ltr">LIKE2</code> to process strings using UCS-2 semantics. <code dir="ltr">LIKE2</code> treats a Unicode supplementary character as two characters.</p>
</li>
<li>
<p>Use <code dir="ltr">LIKE4</code> to process strings using UCS-4 semantics. <code dir="ltr">LIKE4</code> treats a Unicode supplementary character as one character.</p>
</li>
<li>
<p>Use <code dir="ltr">LIKEC</code> to process strings using Unicode complete character semantics. <code dir="ltr">LIKEC</code> treats a composite character as one character.</p>
</li>
</ul>
<p>If <code dir="ltr"><span class="codeinlineitalic">esc_char</span></code> is not specified, then there is no default escape character. If any of <code dir="ltr"><span class="codeinlineitalic">char1</span></code>, <code dir="ltr"><span class="codeinlineitalic">char2</span></code>, or <code dir="ltr"><span class="codeinlineitalic">esc_char</span></code> is null, then the result is unknown. Otherwise, the escape character, if specified, must be a character string of length 1.</p>
<p>All of the character expressions (<code dir="ltr"><span class="codeinlineitalic">char1</span></code>, <code dir="ltr"><span class="codeinlineitalic">char2</span></code>, and <code dir="ltr"><span class="codeinlineitalic">esc_char</span></code>) can be of any of the data types <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NCHAR</code>, or <code dir="ltr">NVARCHAR2</code>. If they differ, then Oracle converts all of them to the data type of <code dir="ltr"><span class="codeinlineitalic">char1</span></code>.</p>
<p>The pattern can contain special pattern-matching characters:</p>
<ul>
<li>
<p>An underscore (_) in the pattern matches exactly one character (as opposed to one byte in a multibyte character set) in the value.</p>
</li>
<li>
<p>A percent sign (%) in the pattern can match zero or more characters (as opposed to bytes in a multibyte character set) in the value. The pattern &#39;%&#39; cannot match a null.</p>
</li>
</ul>
<p>You can include the actual characters <code dir="ltr">%</code> or <code dir="ltr">_</code> in the pattern by using the <code dir="ltr">ESCAPE</code> clause, which identifies the escape character. If the escape character precedes the character <code dir="ltr">%</code> or <code dir="ltr">_</code> in the pattern, then Oracle interprets this character literally in the pattern rather than as a special pattern-matching character. You can also search for the escape character itself by repeating it. For example, if @ is the escape character, then you can use @@ to search for @.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Only ASCII-equivalent underscore (_) and percent (%) characters are recognized as pattern-matching characters. Their full-width variants, present in East Asian character sets and in Unicode, are treated as normal characters.</div>
<p><a href="#CJADEBJE">Table 6-8</a> describes the <code dir="ltr">LIKE</code> conditions.</p>
<div id="SQLRF52144" class="tblformal">
<p class="titleintable"><a id="sthref1064"></a><a id="CJADEBJE"></a>Table 6-8 LIKE Condition <a id="i1034705"></a><code dir="ltr"><a id="sthref1065"></a></code></p>
<table class="cellalignment5874" title="LIKE Condition " summary="The first column lists the LIKE conditions, the second column describes their operation, and the third provides an example." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t18">Type of Condition</th>
<th class="cellalignment5873" id="r1c2-t18">Operation</th>
<th class="cellalignment5873" id="r1c3-t18">Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t18" headers="r1c1-t18">
<pre dir="ltr">x [NOT] LIKE y 
[ESCAPE &#39;z&#39;] 
</pre></td>
<td class="cellalignment5869" headers="r2c1-t18 r1c2-t18">
<p><code dir="ltr">TRUE</code> if <code dir="ltr"><span class="codeinlineitalic">x</span></code> does [not] match the pattern <code dir="ltr"><span class="codeinlineitalic">y</span></code>. Within <code dir="ltr"><span class="codeinlineitalic">y</span></code>, the character <code dir="ltr">%</code> matches any string of zero or more characters except null. The character <code dir="ltr">_</code> matches any single character. Any character can follow <code dir="ltr">ESCAPE</code> except percent (%) and underbar (_). A wildcard character is treated as a literal if preceded by the escape character.</p>
</td>
<td class="cellalignment5869" headers="r2c1-t18 r1c3-t18">
<pre dir="ltr">SELECT last_name 
   FROM employees
   WHERE last_name 
   LIKE &#39;%A\_B%&#39; ESCAPE &#39;\&#39;
   ORDER BY last_name; 
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>To process the <code dir="ltr">LIKE</code> conditions, Oracle divides the pattern into subpatterns consisting of one or two characters each. The two-character subpatterns begin with the escape character and the other character is %, or _, or the escape character.</p>
<p>Let P<sub>1</sub>, P<sub>2</sub>, ..., P<sub>n</sub> be these subpatterns. The like condition is true if there is a way to partition the search value into substrings S<sub>1</sub>, S<sub>2</sub>, ..., S<sub>n</sub> so that for all <span class="italic">i</span> between 1 and <span class="italic">n</span>:</p>
<ul>
<li>
<p>If P<sub>i</sub> is _, then S<sub>i</sub> is a single character.</p>
</li>
<li>
<p>If P<sub>i</sub> is %, then S<sub>i</sub> is any string.</p>
</li>
<li>
<p>If P<sub>i</sub> is two characters beginning with an escape character, then S<sub>i</sub> is the second character of P<sub>i</sub>.</p>
</li>
<li>
<p>Otherwise, P<sub>i</sub> = S<sub>i</sub>.</p>
</li>
</ul>
<p>With the <code dir="ltr">LIKE</code> conditions, you can compare a value to a pattern rather than to a constant. The pattern must appear after the <code dir="ltr">LIKE</code> keyword. For example, you can issue the following query to find the salaries of all employees with names beginning with <code dir="ltr">R</code>:</p>
<pre dir="ltr">SELECT salary 
    FROM employees
    WHERE last_name LIKE &#39;R%&#39;
    ORDER BY salary;
</pre>
<p>The following query uses the = operator, rather than the <code dir="ltr">LIKE</code> condition, to find the salaries of all employees with the name &#39;R%&#39;:</p>
<pre dir="ltr">SELECT salary 
    FROM employees 
    WHERE last_name = &#39;R%&#39;
    ORDER BY salary;
</pre>
<p>The following query finds the salaries of all employees with the name &#39;SM%&#39;. Oracle interprets &#39;SM%&#39; as a text literal, rather than as a pattern, because it precedes the <code dir="ltr">LIKE</code> keyword:</p>
<pre dir="ltr">SELECT salary 
    FROM employees 
    WHERE &#39;SM%&#39; LIKE last_name
    ORDER BY salary;
</pre>
<p class="subhead2"><a id="i1058427"></a><a id="SQLRF52145"></a>Case Sensitivity</p>
<p>Case is significant in all conditions comparing character expressions that use the <code dir="ltr">LIKE</code> condition and the equality (=) operators. You can perform case or accent insensitive <code dir="ltr">LIKE</code> searches by setting the <code dir="ltr">NLS_SORT</code> and the <code dir="ltr">NLS_COMP</code> session parameters.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG0051" href="../NLSPG/ch5lingsort.htm#NLSPG0051"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information on this case- and accent-insensitive linguistic sorts</div>
<p class="subhead2"><a id="SQLRF52146"></a><span class="bold">Pattern Matching on Indexed Columns</span></p>
<p>When you use <code dir="ltr">LIKE</code> to search an indexed column for a pattern, Oracle can use the index to improve performance of a query if the leading character in the pattern is not <code dir="ltr">%</code> or <code dir="ltr">_</code>. In this case, Oracle can scan the index by this leading character. If the first character in the pattern is <code dir="ltr">%</code> or <code dir="ltr">_</code>, then the index cannot improve performance because Oracle cannot scan the index.</p>
<p class="subhead2"><a id="SQLRF52147"></a>LIKE Condition: General Examples</p>
<p>This condition is true for all <code dir="ltr">last_name</code> values beginning with <code dir="ltr">Ma</code>:</p>
<pre dir="ltr">last_name LIKE &#39;Ma%&#39; 
</pre>
<p>All of these <code dir="ltr">last_name</code> values make the condition true:</p>
<pre dir="ltr">Mallin, Markle, Marlow, Marvins, Mavris, Matos 
</pre>
<p>Case is significant, so <code dir="ltr">last_name</code> values beginning with <code dir="ltr">MA</code>, <code dir="ltr">ma</code>, and <code dir="ltr">mA</code> make the condition false.</p>
<p>Consider this condition:</p>
<pre dir="ltr">last_name LIKE &#39;SMITH_&#39; 
</pre>
<p>This condition is true for these <code dir="ltr">last_name</code> values:</p>
<pre dir="ltr">SMITHE, SMITHY, SMITHS 
</pre>
<p>This condition is false for <code dir="ltr">SMITH</code> because the special underscore character (<code dir="ltr">_</code>) must match exactly one character of the <code dir="ltr">last_name</code> value.</p>
<p><a id="SQLRF52148"></a><span class="subhead3"><span class="bold">ESCAPE Clause Example</span>&nbsp;</span>The following example searches for employees with the pattern <code dir="ltr">A_B</code> in their name:</p>
<pre dir="ltr">SELECT last_name 
    FROM employees
    WHERE last_name LIKE &#39;%A\_B%&#39; ESCAPE &#39;\&#39;
    ORDER BY last_name;
</pre>
<p>The <code dir="ltr">ESCAPE</code> clause identifies the backslash (\) as the escape character. In the pattern, the escape character precedes the underscore (_). This causes Oracle to interpret the underscore literally, rather than as a special pattern matching character.</p>
<p><a id="SQLRF52149"></a><span class="subhead3"><span class="bold">Patterns Without % Example</span>&nbsp;</span>If a pattern does not contain the <code dir="ltr">%</code> character, then the condition can be true only if both operands have the same length. Consider the definition of this table and the values inserted into it:</p>
<pre dir="ltr">CREATE TABLE ducks (f CHAR(6), v VARCHAR2(6));
INSERT INTO ducks VALUES (&#39;DUCK&#39;, &#39;DUCK&#39;);
SELECT &#39;*&#39;||f||&#39;*&#39; &#34;char&#34;,
   &#39;*&#39;||v||&#39;*&#39; &#34;varchar&#34;
   FROM ducks;

char     varchar
-------- --------
*DUCK  * *DUCK*
</pre>
<p>Because Oracle blank-pads <code dir="ltr">CHAR</code> values, the value of <code dir="ltr">f</code> is blank-padded to 6 bytes. <code dir="ltr">v</code> is not blank-padded and has length 4.</p>
</div>
<!-- class="sect2" -->
<a id="i1048942"></a>
<div id="SQLRF00501" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">REGEXP_LIKE Condition <a id="sthref1066"></a><a id="sthref1067"></a></h2>
<p><code dir="ltr">REGEXP_LIKE</code> is similar to the <code dir="ltr">LIKE</code> condition, except <code dir="ltr">REGEXP_LIKE</code> performs regular expression matching instead of the simple pattern matching performed by <code dir="ltr">LIKE</code>. This condition evaluates strings using characters as defined by the input character set.</p>
<p>This condition complies with the POSIX regular expression standard and the Unicode Regular Expression Guidelines. For more information, refer to <a href="ap_posix.htm#g693775">Appendix D, &#34;Oracle Regular Expression Support&#34;</a>.</p>
<p class="subhead2"><a id="SQLRF52150"></a><span class="italic">regexp_like_condition</span>::=</p>
<img width="534" height="46" src="img/regexp_like_condition.gif" alt="Description of regexp_like_condition.gif follows"/><br/>
<a id="sthref1068" href="img_text/regexp_like_condition.htm">Description of the illustration &#39;&#39;regexp_like_condition.gif&#39;&#39;</a><br/>
<br/>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">source_char</span></code> is a character expression that serves as the search value. It is commonly a character column and can be of any of the data types <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NCHAR</code>, <code dir="ltr">NVARCHAR2</code>, <code dir="ltr">CLOB</code>, or <code dir="ltr">NCLOB</code>.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">pattern</span></code> is the <span class="bold">regular expression</span>. It is usually a text literal and can be of any of the data types <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NCHAR</code>, or <code dir="ltr">NVARCHAR2</code>. It can contain up to 512 bytes. If the data type of <code dir="ltr"><span class="codeinlineitalic">pattern</span></code> is different from the data type of <code dir="ltr"><span class="codeinlineitalic">source_char</span></code>, Oracle converts <code dir="ltr"><span class="codeinlineitalic">pattern</span></code> to the data type of <code dir="ltr"><span class="codeinlineitalic">source_char</span></code>. For a listing of the operators you can specify in <code dir="ltr"><span class="codeinlineitalic">pattern</span></code>, refer to <a href="ap_posix.htm#g693775">Appendix D, &#34;Oracle Regular Expression Support&#34;</a>.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">match_parameter</span></code> is a text literal that lets you change the default matching behavior of the function. You can specify one or more of the following values for <code dir="ltr"><span class="codeinlineitalic">match_parameter</span></code>:</p>
<ul>
<li>
<p><code dir="ltr">&#39;i&#39;</code> specifies case-insensitive matching.</p>
</li>
<li>
<p><code dir="ltr">&#39;c&#39;</code> specifies case-sensitive matching.</p>
</li>
<li>
<p><code dir="ltr">&#39;n&#39;</code> allows the period (.), which is the match-any-character wildcard character, to match the newline character. If you omit this parameter, then the period does not match the newline character.</p>
</li>
<li>
<p><code dir="ltr">&#39;m&#39;</code> treats the source string as multiple lines. Oracle interprets <code dir="ltr">^</code> and <code dir="ltr">$</code> as the start and end, respectively, of any line anywhere in the source string, rather than only at the start or end of the entire source string. If you omit this parameter, then Oracle treats the source string as a single line.</p>
</li>
<li>
<p><code dir="ltr">&#39;x&#39;</code> ignores whitespace characters. By default, whitespace characters match themselves.</p>
</li>
</ul>
<p>If you specify multiple contradictory values, then Oracle uses the last value. For example, if you specify <code dir="ltr">&#39;ic&#39;</code>, then Oracle uses case-sensitive matching. If you specify a character other than those shown above, then Oracle returns an error.</p>
<p>If you omit <code dir="ltr"><span class="codeinlineitalic">match_parameter</span></code>, then:</p>
<ul>
<li>
<p>The default case sensitivity is determined by the value of the <code dir="ltr">NLS_SORT</code> parameter.</p>
</li>
<li>
<p>A period (.) does not match the newline character.</p>
</li>
<li>
<p>The source string is treated as a single line.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1034153">&#34;LIKE Condition&#34;</a></p>
</li>
<li>
<p><a href="functions162.htm#i1239887">REGEXP_INSTR</a> , <a href="functions163.htm#i1305521">REGEXP_REPLACE</a>, and <a href="functions164.htm#i1239858">REGEXP_SUBSTR</a> for functions that provide regular expression support</p>
</li>
</ul>
</div>
</li>
</ul>
</li>
</ul>
<p class="subhead2"><a id="SQLRF52151"></a>Examples</p>
<p>The following query returns the first and last names for those employees with a first name of Steven or Stephen (where <code dir="ltr">first_name</code> begins with <code dir="ltr">Ste</code> and ends with <code dir="ltr">en</code> and in between is either <code dir="ltr">v</code> or <code dir="ltr">ph)</code>:</p>
<pre dir="ltr">SELECT first_name, last_name
FROM employees
WHERE REGEXP_LIKE (first_name, &#39;^Ste(v|ph)en$&#39;)
ORDER BY first_name, last_name;

FIRST_NAME           LAST_NAME
-------------------- -------------------------
Steven               King
Steven               Markle
Stephen              Stiles
</pre>
<p>The following query returns the last name for those employees with a double vowel in their last name (where <code dir="ltr">last_name</code> contains two adjacent occurrences of either <code dir="ltr">a</code>, <code dir="ltr">e</code>, <code dir="ltr">i</code>, <code dir="ltr">o</code>, or <code dir="ltr">u</code>, regardless of case):</p>
<pre dir="ltr">SELECT last_name
FROM employees
WHERE REGEXP_LIKE (last_name, &#39;([aeiou])\1&#39;, &#39;i&#39;)
ORDER BY last_name;

LAST_NAME
-------------------------
De Haan
Greenberg
Khoo
Gee
Greene
Lee
Bloom
Feeney
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="conditions006.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="conditions008.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>