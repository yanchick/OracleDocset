<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103565"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Comments"></a><title>Comments</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:5Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="sql_elements005.htm" title="Previous" type="text/html"/>
<link rel="Next" href="sql_elements007.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/555</span> <!-- End Header --><a id="i31713"></a>
<div id="SQLRF51098" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Comments <a id="sthref443"></a></h1>
<p>You can create two types of comments:</p>
<ul>
<li>
<p>Comments within SQL statements are stored as part of the application code that executes the SQL statements.</p>
</li>
<li>
<p>Comments associated with individual schema or nonschema objects are stored in the data dictionary along with metadata on the objects themselves.</p>
</li>
</ul>
<div id="SQLRF51099" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref444"></a>
<h2 class="sect2">Comments Within SQL Statements <a id="sthref445"></a></h2>
<p>Comments can make your application easier for you to read and maintain. For example, you can include a comment in a statement that describes the purpose of the statement within your application. With the exception of hints, comments within SQL statements do not affect the statement execution. Refer to <a href="#i35922">&#34;Hints&#34;</a> on using this particular form of comment.</p>
<p><a id="sthref446"></a>A comment can appear between any keywords, parameters, or punctuation marks in a statement. You can include a comment in a statement in two ways:</p>
<ul>
<li>
<p>Begin the comment with a slash and an asterisk (/*). Proceed with the text of the comment. This text can span multiple lines. End the comment with an asterisk and a slash (*/). The opening and terminating characters need not be separated from the text by a space or a line break.</p>
</li>
<li>
<p>Begin the comment with -- (two hyphens). Proceed with the text of the comment. This text cannot extend to a new line. End the comment with a line break.</p>
</li>
</ul>
<p>Some of the tools used to enter SQL have additional restrictions. For example, if you are using SQL*Plus, by default you cannot have a blank line inside a multiline comment. For more information, refer to the documentation for the tool you use as an interface to the database.</p>
<p>A SQL statement can contain multiple comments of both styles. The text of a comment can contain any printable characters in your database character set.</p>
<p><a id="SQLRF51100"></a><span class="subhead3">Example&nbsp;</span>These statements contain many comments:</p>
<pre dir="ltr">SELECT last_name, employee_id, salary + NVL(commission_pct, 0), 
       job_id, e.department_id
  /* Select all employees whose compensation is
  greater than that of Pataballa.*/
  FROM employees e, departments d
  /*The DEPARTMENTS table is used to get the department name.*/
  WHERE e.department_id = d.department_id
    AND salary + NVL(commission_pct,0) &gt;   /* Subquery:       */
      (SELECT salary + NVL(commission_pct,0)
        /* total compensation is salary + commission_pct */
        FROM employees 
        WHERE last_name = &#39;Pataballa&#39;)
  ORDER BY last_name, employee_id;

SELECT last_name,                                   -- select the name
       employee_id                                  -- employee id
       salary + NVL(commission_pct, 0),             -- total compensation
       job_id,                                      -- job
       e.department_id                              -- and department
  FROM employees e,                                 -- of all employees
       departments d
  WHERE e.department_id = d.department_id
    AND salary + NVL(commission_pct, 0) &gt;           -- whose compensation 
                                                    -- is greater than
        (SELECT salary + NVL(commission_pct,0)      -- the compensation
          FROM employees 
          WHERE last_name = &#39;Pataballa&#39;)            -- of Pataballa
  ORDER BY last_name                                -- and order by last name
           employee_id                              -- and employee id.
;
</pre></div>
<!-- class="sect2" -->
<div id="SQLRF51101" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref447"></a>
<h2 class="sect2">Comments on Schema and Nonschema Objects <a id="sthref448"></a></h2>
<p>You can use the <code dir="ltr">COMMENT</code> command to associate a comment with a schema object (table, view, materialized view, operator, indextype, mining model) or a nonschema object (edition) using the <code dir="ltr">COMMENT</code> command. You can also create a comment on a column, which is part of a table schema object. Comments associated with schema and nonschema objects are stored in the data dictionary. Refer to <a href="statements_4010.htm#i2119719">COMMENT</a> for a description of this form of comment.</p>
</div>
<!-- class="sect2" -->
<a id="i35922"></a>
<div id="SQLRF00219" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Hints <a id="sthref449"></a></h2>
<p>Hints are comments in a SQL statement that pass instructions to the Oracle Database optimizer. The optimizer uses these hints to choose an execution plan for the statement, unless some condition exists that prevents the optimizer from doing so.</p>
<p>Hints were introduced in Oracle7, when users had little recourse if the optimizer generated suboptimal plans. Now Oracle provides a number of tools, including the SQL Tuning Advisor, SQL plan management, and SQL Performance Analyzer, to help you address performance problems that are not solved by the optimizer. Oracle strongly recommends that you use those tools rather than hints. The tools are far superior to hints, because when used on an ongoing basis, they provide fresh solutions as your data and database environment change.</p>
<p>Hints should be used sparingly, and only after you have collected statistics on the relevant tables and evaluated the optimizer plan without hints using the <code dir="ltr">EXPLAIN PLAN</code> statement. Changing database conditions as well as query performance enhancements in subsequent releases can have significant impact on how hints in your code affect performance.</p>
<p>The remainder of this section provides information on some commonly used hints. If you decide to use hints rather than the more advanced tuning tools, be aware that any short-term benefit resulting from the use of hints may not continue to result in improved performance over the long term.</p>
<p class="subhead2"><a id="SQLRF51102"></a>Using Hints</p>
<p>A statement block can have only one comment containing hints, and that comment must follow the <code dir="ltr">SELECT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">MERGE</code>, or <code dir="ltr">DELETE</code> keyword.</p>
<p>The following syntax diagram shows hints contained in both styles of comments that Oracle supports within a statement block. The hint syntax must follow immediately after an <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, <code dir="ltr">SELECT</code>, or <code dir="ltr">MERGE</code> keyword that begins the statement block.</p>
<p class="subhead2"><a id="SQLRF51103"></a><span class="italic">hint</span>::=</p>
<img width="300" height="119" src="img/hint.gif" alt="Description of hint.gif follows"/><br/>
<a id="sthref450" href="img_text/hint.htm">Description of the illustration &#39;&#39;hint.gif&#39;&#39;</a><br/>
<br/>
<p>where:</p>
<ul>
<li>
<p>The plus sign (+) causes Oracle to interpret the comment as a list of hints. The plus sign must follow immediately after the comment delimiter. No space is permitted.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">hint</span></code> is one of the hints discussed in this section. The space between the plus sign and the hint is optional. If the comment contains multiple hints, then separate the hints by at least one space.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">string</span></code> is other commenting text that can be interspersed with the hints.</p>
</li>
</ul>
<p>The <code dir="ltr">--+</code> syntax requires that the entire comment be on a single line.</p>
<p>Oracle Database ignores hints and does not return an error under the following circumstances:</p>
<ul>
<li>
<p>The hint contains misspellings or syntax errors. However, the database does consider other correctly specified hints in the same comment.</p>
</li>
<li>
<p>The comment containing the hint does not follow a <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">MERGE</code>, <code dir="ltr">SELECT</code>, or <code dir="ltr">UPDATE</code> keyword.</p>
</li>
<li>
<p>A combination of hints conflict with each other. However, the database does consider other hints in the same comment.</p>
</li>
<li>
<p>The database environment uses PL/SQL version 1, such as Forms version 3 triggers, Oracle Forms 4.5, and Oracle Reports 2.5.</p>
</li>
<li>
<p>A global hint refers to multiple query blocks. Refer to <a href="#BABEIICE">&#34;Specifying Multiple Query Blocks in a Global Hint&#34;</a> for more information.</p>
</li>
</ul>
<p class="subhead2"><a id="BABEBCAA"></a><a id="SQLRF55582"></a>Specifying a Query Block in a Hint <a id="sthref451"></a><a id="sthref452"></a></p>
<p>You can specify an optional query block name in many hints to specify the query block to which the hint applies. This syntax lets you specify in the outer query a hint that applies to an inline view.</p>
<p>The syntax of the query block argument is of the form <code dir="ltr">@</code><code dir="ltr"><span class="codeinlineitalic">queryblock</span></code>, where <code dir="ltr"><span class="codeinlineitalic">queryblock</span></code> is an identifier that specifies a query block in the query. The <code dir="ltr"><span class="codeinlineitalic">queryblock</span></code> identifier can either be system-generated or user-specified. When you specify a hint in the query block itself to which the hint applies, you omit the <code dir="ltr"><span class="codeinlineitalic">@queryblock</span></code> syntax.</p>
<ul>
<li>
<p>The system-generated identifier can be obtained by using <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> for the query. Pretransformation query block names can be determined by running <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> for the query using the <code dir="ltr">NO_QUERY_TRANSFORMATION</code> hint. See <a href="#BABGDAGI">&#34;NO_QUERY_TRANSFORMATION Hint&#34;</a>.</p>
</li>
<li>
<p>The user-specified name can be set with the <code dir="ltr">QB_NAME</code> hint. See <a href="#BABJIFFH">&#34;QB_NAME Hint&#34;</a>.</p>
</li>
</ul>
<p class="subhead2"><a id="SQLRF55583"></a>Specifying Global Hints</p>
<p>Many hints can apply both to specific tables or indexes and more globally to tables within a view or to columns that are part of indexes. The syntactic elements <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> and <code dir="ltr"><span class="codeinlineitalic">indexspec</span></code> define these <span class="bold">global hints</span>.</p>
<p class="subhead2"><a id="BABIEJEB"></a><a id="SQLRF51104"></a><span class="italic">tablespec</span>::=</p>
<img width="225" height="58" src="img/tablespec.gif" alt="Description of tablespec.gif follows"/><br/>
<a id="sthref453" href="img_text/tablespec.htm">Description of the illustration &#39;&#39;tablespec.gif&#39;&#39;</a><br/>
<br/>
<p>You must specify the table to be accessed exactly as it appears in the statement. If the statement uses an alias for the table, then use the alias rather than the table name in the hint. However, do not include the schema name with the table name within the hint, even if the schema name appears in the statement.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Specifying a global hint using the <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> clause does not work for queries that use ANSI joins, because the optimizer generates additional views during parsing. Instead, specify <code dir="ltr">@</code><code dir="ltr"><span class="codeinlineitalic">queryblock</span></code> to indicate the query block to which the hint applies.</div>
<p class="subhead2"><a id="BABGFHCH"></a><a id="SQLRF51105"></a><span class="italic">indexspec</span>::=</p>
<img width="329" height="86" src="img/indexspec.gif" alt="Description of indexspec.gif follows"/><br/>
<a id="sthref454" href="img_text/indexspec.htm">Description of the illustration &#39;&#39;indexspec.gif&#39;&#39;</a><br/>
<br/>
<p>When <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> is followed by <code dir="ltr"><span class="codeinlineitalic">indexspec</span></code> in the specification of a hint, a comma separating the table name and index name is permitted but not required. Commas are also permitted, but not required, to separate multiple occurrences of <code dir="ltr"><span class="codeinlineitalic">indexspec</span></code>.</p>
<p><a id="BABEIICE"></a><a id="SQLRF55584"></a><span class="subhead3">Specifying Multiple Query Blocks in a Global Hint&nbsp;</span>Oracle Database ignores global hints that refer to multiple query blocks. To avoid this issue, Oracle recommends that you specify the object alias in the hint instead of using <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> and <code dir="ltr"><span class="codeinlineitalic">indexspec</span></code>.</p>
<p>For example, consider the following view <code dir="ltr">v</code> and table <code dir="ltr">t</code>:</p>
<pre dir="ltr">CREATE VIEW v AS
  SELECT e.last_name, e.department_id, d.location_id
  FROM employees e, departments d
  WHERE e.department_id = d.department_id;
 
CREATE TABLE t AS
  SELECT * from employees
  WHERE employee_id &lt; 200;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following examples use the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> statement, which enables you to display the execution plan and determine if a hint is honored or ignored. Refer to <a href="statements_9010.htm#i2061796">EXPLAIN PLAN</a> for more information.</div>
<p>The <code dir="ltr">LEADING</code> hint is ignored in the following query because it refers to multiple query blocks, that is, the main query block containing table <code dir="ltr">t</code> and the view query block <code dir="ltr">v</code>:</p>
<pre dir="ltr">EXPLAIN PLAN
  SET STATEMENT_ID = &#39;Test 1&#39;
  INTO plan_table FOR
    (SELECT <span class="bold">/*+ LEADING(v.e v.d t) */</span> *
     FROM t, v
     WHERE t.department_id = v.department_id);
</pre>
<p>The following <code dir="ltr">SELECT</code> statement returns the execution plan, which shows that the <code dir="ltr">LEADING</code> hint was ignored:</p>
<pre dir="ltr">SELECT id, LPAD(&#39; &#39;,2*(LEVEL-1))||operation operation, options, object_name,  object_alias
  FROM plan_table
  START WITH id = 0 AND statement_id = &#39;Test 1&#39;
  CONNECT BY PRIOR id = parent_id AND statement_id = &#39;Test 1&#39;
  ORDER BY id;

 ID OPERATION            OPTIONS    OBJECT_NAME   OBJECT_ALIAS
--- -------------------- ---------- ------------- --------------------
  0 SELECT STATEMENT
  1   HASH JOIN
  2     HASH JOIN
  3       TABLE ACCESS   FULL       <span class="bold">DEPARTMENTS</span>   <span class="bold">D@SEL$2</span>
  4       TABLE ACCESS   FULL       <span class="bold">EMPLOYEES</span>     <span class="bold">E@SEL$2</span>
  5     TABLE ACCESS     FULL       <span class="bold">T</span>             <span class="bold">T@SEL$1</span>
</pre>
<p>The <code dir="ltr">LEADING</code> hint is honored in the following query because it refers to object aliases, which can be found in the execution plan that was returned by the previous query:</p>
<pre dir="ltr">EXPLAIN PLAN
  SET STATEMENT_ID = &#39;Test 2&#39;
  INTO plan_table FOR
    (SELECT <span class="bold">/*+ LEADING(E@SEL$2 D@SEL$2 T@SEL$1) */</span> *
     FROM t, v
     WHERE t.department_id = v.department_id);
</pre>
<p>The following <code dir="ltr">SELECT</code> statement returns the execution plan, which shows that the <code dir="ltr">LEADING</code> hint was honored:</p>
<pre dir="ltr">SELECT id, LPAD(&#39; &#39;,2*(LEVEL-1))||operation operation, options,
  object_name, object_alias
  FROM plan_table
  START WITH id = 0 AND statement_id = &#39;Test 2&#39;
  CONNECT BY PRIOR id = parent_id AND statement_id = &#39;Test 2&#39;
  ORDER BY id;

 ID OPERATION            OPTIONS    OBJECT_NAME   OBJECT_ALIAS
--- -------------------- ---------- ------------- --------------------
  0 SELECT STATEMENT
  1   HASH JOIN
  2     HASH JOIN
  3       TABLE ACCESS   FULL       <span class="bold">EMPLOYEES</span>    <span class="bold"> E@SEL$2</span>
  4       TABLE ACCESS   FULL       <span class="bold">DEPARTMENTS</span>   <span class="bold">D@SEL$2</span>
  5     TABLE ACCESS     FULL       <span class="bold">T</span>             <span class="bold">T@SEL$1</span>
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL271" href="../TGSQL/tgsql_genplan.htm#TGSQL271"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information on using <a class="olink TGSQL271" href="../TGSQL/tgsql_genplan.htm#TGSQL271"><code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code></a> to learn how the optimizer is executing a query</div>
<p class="subhead2"><a id="SQLRF55585"></a>Hints by Functional Category</p>
<p><a id="sthref455"></a><a href="#BABEAFGF">Table 2-21</a> lists the hints by functional category and contains cross-references to the syntax and semantics for each hint. An alphabetical reference of the hints follows the table.</p>
<div id="SQLRF51107" class="tblhruleformal">
<p class="titleintable"><a id="sthref456"></a><a id="BABEAFGF"></a>Table 2-21 Hints by Functional Category</p>
<table class="cellalignment5872" title="Hints by Functional Category" summary="The first column lists categories of hints. The second column lists the hints in each category and the third column contains hyperlinks to the syntax diagrams for each hint." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t78">Hint</th>
<th class="cellalignment5873" id="r1c2-t78">Link to Syntax and Semantics</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t78" headers="r1c1-t78">
<p><span class="bold">Optimization Goals and Approaches</span></p>
</td>
<td class="cellalignment5869" headers="r2c1-t78 r1c2-t78">
<p><a href="#BABHIAIG">ALL_ROWS Hint</a></p>
<p><a href="#BABGCCFG">FIRST_ROWS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t78" headers="r1c1-t78">
<p><span class="bold">Access Path Hints</span></p>
</td>
<td class="cellalignment5869" headers="r3c1-t78 r1c2-t78">
<p><a href="#BABIDJHA">CLUSTER Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r4c1-t78 r1c2-t78">
<p><a href="#CHDBJDCD">CLUSTERING Hint</a></p>
<p><a href="#CHDBHBJG">NO_CLUSTERING Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r5c1-t78 r1c2-t78">
<p><a href="#BABFEHAA">FULL Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t78 r1c2-t78">
<p><a href="#BABHEBDC">HASH Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t78 r1c2-t78">
<p><a href="#BABEFDFC">INDEX Hint</a></p>
<p><a href="#BABHJBIB">NO_INDEX Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t78 r1c2-t78">
<p><a href="#BABBBECI">INDEX_ASC Hint</a></p>
<p><a href="#BABGIHJH">INDEX_DESC Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t78 r1c2-t78">
<p><a href="#BABHJBAJ">INDEX_COMBINE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t78 r1c2-t78">
<p><a href="#BABHAIAB">INDEX_JOIN Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t78 r1c2-t78">
<p><a href="#BABDAEGJ">INDEX_FFS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t78 r1c2-t78">
<p><a href="#BABDHIDE">INDEX_SS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t78 r1c2-t78">
<p><a href="#BABJGEBC">INDEX_SS_ASC Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t78 r1c2-t78">
<p><a href="#BABHHDDF">INDEX_SS_DESC Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t78 r1c2-t78">
<p><a href="#BABDFDGH">NATIVE_FULL_OUTER_JOIN Hint</a></p>
<p><a href="#BABDGDFD">NO_NATIVE_FULL_OUTER_JOIN Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t78 r1c2-t78">
<p><a href="#BABFGEBA">NO_INDEX_FFS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r17c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r17c1-t78 r1c2-t78">
<p><a href="#BABCCFIC">NO_INDEX_SS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r18c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r18c1-t78 r1c2-t78">
<p><a href="#CHDGDJEC">NO_ZONEMAP Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r19c1-t78" headers="r1c1-t78">
<p><span class="bold">In-Memory Column Store Hints</span></p>
</td>
<td class="cellalignment5869" headers="r19c1-t78 r1c2-t78">
<p><a href="#CHDJJGAG">INMEMORY Hint</a></p>
<p><a href="#CHDDJAJD">NO_INMEMORY Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r20c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r20c1-t78 r1c2-t78">
<p><a href="#CHDEGJGB">INMEMORY_PRUNING Hint</a></p>
<p><a href="#CHDDCIBF">NO_INMEMORY_PRUNING Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r21c1-t78" headers="r1c1-t78">
<p><span class="bold">Join Order Hints</span></p>
</td>
<td class="cellalignment5869" headers="r21c1-t78 r1c2-t78">
<p><a href="#BABIJGJF">ORDERED Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r22c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r22c1-t78 r1c2-t78">
<p><a href="#BABJIHCI">LEADING Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r23c1-t78" headers="r1c1-t78">
<p><span class="bold">Join Operation Hints</span></p>
</td>
<td class="cellalignment5869" headers="r23c1-t78 r1c2-t78">
<p><a href="#CHDCDDAC">USE_CUBE Hint</a></p>
<p><a href="#CHDHBGEF">NO_USE_CUBE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r24c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r24c1-t78 r1c2-t78">
<p><a href="#BABBABGJ">USE_HASH Hint</a></p>
<p><a href="#BABDBCEG">NO_USE_HASH Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r25c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r25c1-t78 r1c2-t78">
<p><a href="#BABIAAFJ">USE_MERGE Hint</a></p>
<p><a href="#BABEGJAG">NO_USE_MERGE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r26c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r26c1-t78 r1c2-t78">
<p><a href="#BABDDFHC">USE_NL Hint</a></p>
<p><a href="#BABHJEIH">USE_NL_WITH_INDEX Hint</a></p>
<p><a href="#BABEDHIF">NO_USE_NL Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r27c1-t78" headers="r1c1-t78">
<p><span class="bold">Parallel Execution Hints</span></p>
</td>
<td class="cellalignment5869" headers="r27c1-t78 r1c2-t78">
<p><a href="#CHDIHHIG">ENABLE_PARALLEL_DML Hint</a></p>
<p><a href="#CHDHHBAA">DISABLE_PARALLEL_DML Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r28c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r28c1-t78 r1c2-t78">
<p><a href="#BABHFDDH">PARALLEL Hint</a></p>
<p><a href="#BABFGFCB">NO_PARALLEL Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r29c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r29c1-t78 r1c2-t78">
<p><a href="#BABIAFEI">PARALLEL_INDEX Hint</a></p>
<p><a href="#BABCEGBC">NO_PARALLEL_INDEX Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r30c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r30c1-t78 r1c2-t78">
<p><a href="#BABBIGEF">PQ_CONCURRENT_UNION Hint</a></p>
<p><a href="#BABHBAAG">NO_PQ_CONCURRENT_UNION Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r31c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r31c1-t78 r1c2-t78">
<p><a href="#BABCJHAF">PQ_DISTRIBUTE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r32c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r32c1-t78 r1c2-t78">
<p><a href="#BABICDJE">PQ_FILTER Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r33c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r33c1-t78 r1c2-t78">
<p><a href="#BABHFHAC">PQ_SKEW Hint</a></p>
<p><a href="#BABDFBBI">NO_PQ_SKEW Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r34c1-t78" headers="r1c1-t78">
<p><span class="bold">Online Application Upgrade Hints</span></p>
</td>
<td class="cellalignment5869" headers="r34c1-t78 r1c2-t78">
<p><a href="#CHDIFFJE">CHANGE_DUPKEY_ERROR_INDEX Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r35c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r35c1-t78 r1c2-t78">
<p><a href="#CHDEGDDG">IGNORE_ROW_ON_DUPKEY_INDEX Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r36c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r36c1-t78 r1c2-t78">
<p><a href="#CHDFBEJF">RETRY_ON_ROW_CHANGE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r37c1-t78" headers="r1c1-t78">
<p><span class="bold">Query Transformation Hints</span></p>
</td>
<td class="cellalignment5869" headers="r37c1-t78 r1c2-t78">
<p><a href="#BABCEFIJ">FACT Hint</a></p>
<p><a href="#BABFJADH">NO_FACT Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r38c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r38c1-t78 r1c2-t78">
<p><a href="#BABHIFDA">MERGE Hint</a></p>
<p><a href="#BABCGJDI">NO_MERGE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r39c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r39c1-t78 r1c2-t78">
<p><a href="#BABHBECB">NO_EXPAND Hint</a></p>
<p><a href="#BABIAFIB">USE_CONCAT Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r40c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r40c1-t78 r1c2-t78">
<p><a href="#BABCGGDD">REWRITE Hint</a></p>
<p><a href="#BABDGHCG">NO_REWRITE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r41c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r41c1-t78 r1c2-t78">
<p><a href="#BABHEGEI">UNNEST Hint</a></p>
<p><a href="#BABHJEFG">NO_UNNEST Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r42c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r42c1-t78 r1c2-t78">
<p><a href="#BABBHHGE">STAR_TRANSFORMATION Hint</a></p>
<p><a href="#BABGGEGD">NO_STAR_TRANSFORMATION Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r43c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r43c1-t78 r1c2-t78">
<p><a href="#BABGDAGI">NO_QUERY_TRANSFORMATION Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r44c1-t78" headers="r1c1-t78">
<p><span class="bold">XML Hints</span></p>
</td>
<td class="cellalignment5869" headers="r44c1-t78 r1c2-t78">
<p><a href="#BABFAHGE">NO_XMLINDEX_REWRITE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r45c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r45c1-t78 r1c2-t78">
<p><a href="#BABGDHBD">NO_XML_QUERY_REWRITE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r46c1-t78" headers="r1c1-t78">
<p><span class="bold">Other Hints</span></p>
</td>
<td class="cellalignment5869" headers="r46c1-t78 r1c2-t78">
<p><a href="#BABBBHCJ">APPEND Hint</a></p>
<p><a href="#BABFIHGA">APPEND_VALUES Hint</a></p>
<p><a href="#BABJCJFG">NOAPPEND Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r47c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r47c1-t78 r1c2-t78">
<p><a href="#BABGEDAD">CACHE Hint</a></p>
<p><a href="#BABEIBIF">NOCACHE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r48c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r48c1-t78 r1c2-t78">
<p><a href="#BABBCHEA">CURSOR_SHARING_EXACT Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r49c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r49c1-t78 r1c2-t78">
<p><a href="#BABEGIJC">DRIVING_SITE Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r50c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r50c1-t78 r1c2-t78">
<p><a href="#BABDCGAA">DYNAMIC_SAMPLING Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r51c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r51c1-t78 r1c2-t78">
<p><a href="#BABDBACG">GATHER_OPTIMIZER_STATISTICS Hint</a></p>
<p><a href="#BABCIDGG">NO_GATHER_OPTIMIZER_STATISTICS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r52c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r52c1-t78 r1c2-t78">
<p><a href="#BABIHIHH">MODEL_MIN_ANALYSIS Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r53c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r53c1-t78 r1c2-t78">
<p><a href="#BABDCEIG">MONITOR Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r54c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r54c1-t78 r1c2-t78">
<p><a href="#BABICIEC">NO_MONITOR Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r55c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r55c1-t78 r1c2-t78">
<p><a href="#BABEBAID">OPT_PARAM Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r56c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r56c1-t78 r1c2-t78">
<p><a href="#BABHAAJE">PUSH_PRED Hint</a></p>
<p><a href="#BABGJBJC">NO_PUSH_PRED Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r57c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r57c1-t78 r1c2-t78">
<p><a href="#BABBBABA">PUSH_SUBQ Hint</a></p>
<p><a href="#BABGCGBJ">NO_PUSH_SUBQ Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r58c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r58c1-t78 r1c2-t78">
<p><a href="#CHDBBAEF">PX_JOIN_FILTER Hint</a></p>
<p><a href="#CHDHJAAA">NO_PX_JOIN_FILTER Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r59c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r59c1-t78 r1c2-t78">
<p><a href="#BABJIFFH">QB_NAME Hint</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r60c1-t78" headers="r1c1-t78">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r60c1-t78 r1c2-t78">
<p><a href="#BABIFIGC">RESULT_CACHE Hint</a></p>
<p><a href="#BABGGHJH">NO_RESULT_CACHE Hint</a></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<div id="SQLRF51108" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref457"></a>
<h2 class="sect2">Alphabetical Listing of Hints</h2>
<p>This section provides syntax and semantics for all hints in alphabetical order.</p>
<a id="BABHIAIG"></a>
<div id="SQLRF50301" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">ALL_ROWS Hint <a id="sthref458"></a><a id="sthref459"></a><a id="sthref460"></a></h3>
<img width="180" height="27" src="img/all_rows_hint.gif" alt="Description of all_rows_hint.gif follows"/><br/>
<a id="sthref461" href="img_text/all_rows_hint.htm">Description of the illustration &#39;&#39;all_rows_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">ALL_ROWS</code> hint instructs the optimizer to optimize a statement block with a goal of best throughput, which is minimum total resource consumption. For example, the optimizer uses the query optimization approach to optimize this statement for best throughput:</p>
<pre dir="ltr">SELECT /*+ ALL_ROWS */ employee_id, last_name, salary, job_id
  FROM employees
  WHERE employee_id = 107;
</pre>
<p>If you specify either the <code dir="ltr">ALL_ROWS</code> or the <code dir="ltr">FIRST_ROWS</code> hint in a SQL statement, and if the data dictionary does not have statistics about tables accessed by the statement, then the optimizer uses default statistical values, such as allocated storage for such tables, to estimate the missing statistics and to subsequently choose an execution plan. These estimates might not be as accurate as those gathered by the <code dir="ltr">DBMS_STATS</code> package, so you should use the <code dir="ltr">DBMS_STATS</code> package to gather statistics.</p>
<p>If you specify hints for access paths or join operations along with either the <code dir="ltr">ALL_ROWS</code> or <code dir="ltr">FIRST_ROWS</code> hint, then the optimizer gives precedence to the access paths and join operations specified by the hints.</p>
</div>
<!-- class="sect3" -->
<a id="BABBBHCJ"></a>
<div id="SQLRF50901" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">APPEND Hint <a id="sthref462"></a><a id="sthref463"></a><a id="sthref464"></a><a id="sthref465"></a></h3>
<img width="164" height="27" src="img/append_hint.gif" alt="Description of append_hint.gif follows"/><br/>
<a id="sthref466" href="img_text/append_hint.htm">Description of the illustration &#39;&#39;append_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">APPEND</code> hint instructs the optimizer to use direct-path <code dir="ltr">INSERT</code> with the subquery syntax of the <code dir="ltr">INSERT</code> statement.</p>
<ul>
<li>
<p>Conventional <code dir="ltr">INSERT</code> is the default in serial mode. In serial mode, direct path can be used only if you include the <code dir="ltr">APPEND</code> hint.</p>
</li>
<li>
<p>Direct-path <code dir="ltr">INSERT</code> is the default in parallel mode. In parallel mode, conventional insert can be used only if you specify the <code dir="ltr">NOAPPEND</code> hint.</p>
</li>
</ul>
<p>The decision whether the <code dir="ltr">INSERT</code> will go parallel or not is independent of the <code dir="ltr">APPEND</code> hint.</p>
<p>In direct-path <code dir="ltr">INSERT</code>, data is appended to the end of the table, rather than using existing space currently allocated to the table. As a result, direct-path <code dir="ltr">INSERT</code> can be considerably faster than conventional <code dir="ltr">INSERT</code>.</p>
<p>The <code dir="ltr">APPEND</code> hint is only supported with the subquery syntax of the <code dir="ltr">INSERT</code> statement, not the <code dir="ltr">VALUES</code> clause. If you specify the <code dir="ltr">APPEND</code> hint with the <code dir="ltr">VALUES</code> clause, it is ignored and conventional insert will be used. To use direct-path <code dir="ltr">INSERT</code> with the <code dir="ltr">VALUES</code> clause, refer to <a href="#BABFIHGA">&#34;APPEND_VALUES Hint&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABJCJFG">&#34;NOAPPEND Hint &#34;</a> for information on that hint and <a class="olink ADMIN01509" href="../ADMIN/tables.htm#ADMIN01509"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information on direct-path inserts</div>
</div>
<!-- class="sect3" -->
<a id="BABFIHGA"></a>
<div id="SQLRF51109" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">APPEND_VALUES Hint <a id="sthref467"></a><a id="sthref468"></a><a id="sthref469"></a><a id="sthref470"></a></h3>
<img width="216" height="27" src="img/append_values_hint.gif" alt="Description of append_values_hint.gif follows"/><br/>
<a id="sthref471" href="img_text/append_values_hint.htm">Description of the illustration &#39;&#39;append_values_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">APPEND_VALUES</code> hint instructs the optimizer to use direct-path <code dir="ltr">INSERT</code> with the <code dir="ltr">VALUES</code> clause. If you do not specify this hint, then conventional <code dir="ltr">INSERT</code> is used.</p>
<p>In direct-path <code dir="ltr">INSERT</code>, data is appended to the end of the table, rather than using existing space currently allocated to the table. As a result, direct-path <code dir="ltr">INSERT</code> can be considerably faster than conventional <code dir="ltr">INSERT</code>.</p>
<p>The <code dir="ltr">APPEND_VALUES</code> hint can be used to greatly enhance performance. Some examples of its uses are:</p>
<ul>
<li>
<p>In an Oracle Call Interface (OCI) program, when using large array binds or array binds with row callbacks</p>
</li>
<li>
<p>In PL/SQL, when loading a large number of rows with a <code dir="ltr">FORALL</code> loop that has an <code dir="ltr">INSERT</code> statement with a <code dir="ltr">VALUES</code> clause</p>
</li>
</ul>
<p>The <code dir="ltr">APPEND_VALUES</code> hint is only supported with the <code dir="ltr">VALUES</code> clause of the <code dir="ltr">INSERT</code> statement. If you specify the <code dir="ltr">APPEND_VALUES</code> hint with the subquery syntax of the <code dir="ltr">INSERT</code> statement, it is ignored and conventional insert will be used. To use direct-path <code dir="ltr">INSERT</code> with a subquery, refer to <a href="#BABBBHCJ">&#34;APPEND Hint&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN01509" href="../ADMIN/tables.htm#ADMIN01509"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information on direct-path inserts</div>
</div>
<!-- class="sect3" -->
<a id="BABGEDAD"></a>
<div id="SQLRF50903" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">CACHE Hint <a id="sthref472"></a><a id="sthref473"></a></h3>
<img width="458" height="46" src="img/cache_hint.gif" alt="Description of cache_hint.gif follows"/><br/>
<a id="sthref474" href="img_text/cache_hint.htm">Description of the illustration &#39;&#39;cache_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">CACHE</code> hint instructs the optimizer to place the blocks retrieved for the table at the most recently used end of the LRU list in the buffer cache when a full table scan is performed. This hint is useful for small lookup tables.</p>
<p>In the following example, the <code dir="ltr">CACHE</code> hint overrides the default caching specification of the table:</p>
<pre dir="ltr">SELECT /*+ FULL (hr_emp) CACHE(hr_emp) */ last_name
  FROM employees hr_emp;
</pre>
<p>The <code dir="ltr">CACHE</code> and <code dir="ltr">NOCACHE</code> hints affect system statistics <code dir="ltr">table scans (long tables)</code> and <code dir="ltr">table scans (short tables)</code>, as shown in the <code dir="ltr">V$SYSSTAT</code> data dictionary view.</p>
</div>
<!-- class="sect3" -->
<a id="CHDIFFJE"></a>
<div id="SQLRF30053" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">CHANGE_DUPKEY_ERROR_INDEX Hint <a id="sthref475"></a></h3>
<img width="603" height="91" src="img/change_dupkey_error_index.gif" alt="Description of change_dupkey_error_index.gif follows"/><br/>
<a id="sthref476" href="img_text/change_dupkey_error_index.htm">Description of the illustration &#39;&#39;change_dupkey_error_index.gif&#39;&#39;</a><br/>
<br/>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">CHANGE_DUPKEY_ERROR_INDEX</code>, <code dir="ltr">IGNORE_ROW_ON_DUPKEY_INDEX</code>, and <code dir="ltr">RETRY_ON_ROW_CHANGE</code> hints are unlike other hints in that they have a semantic effect. The general philosophy explained in <a href="#i35922">&#34;Hints&#34;</a> does not apply for these three hints.</div>
<p>The <code dir="ltr">CHANGE_DUPKEY_ERROR_INDEX</code> hint provides a mechanism to unambiguously identify a unique key violation for a specified set of columns or for a specified index. When a unique key violation occurs for the specified index, an ORA-38911 error is reported instead of an ORA-001.</p>
<p>This hint applies to <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code> operations. If you specify an index, then the index must exist and be unique. If you specify a column list instead of an index, then a unique index whose columns match the specified columns in number and order must exist.</p>
<p>This use of this hint results in error messages if specific rules are violated. Refer to <a href="#CHDEGDDG">IGNORE_ROW_ON_DUPKEY_INDEX Hint</a> for details.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This hint disables both <code dir="ltr">APPEND</code> mode and parallel DML.</div>
</div>
<!-- class="sect3" -->
<a id="BABIDJHA"></a>
<div id="SQLRF50403" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">CLUSTER Hint <a id="sthref477"></a><a id="sthref478"></a></h3>
<img width="471" height="46" src="img/cluster_hint.gif" alt="Description of cluster_hint.gif follows"/><br/>
<a id="sthref479" href="img_text/cluster_hint.htm">Description of the illustration &#39;&#39;cluster_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">CLUSTER</code> hint instructs the optimizer to use a cluster scan to access the specified table. This hint applies only to tables in an indexed cluster.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBJDCD"></a>
<div id="SQLRF56809" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">CLUSTERING Hint<a id="sthref480"></a><a id="sthref481"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">CLUSTERING</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="192" height="27" src="img/clustering_hint.gif" alt="Description of clustering_hint.gif follows"/><br/>
<a id="sthref482" href="img_text/clustering_hint.htm">Description of the illustration &#39;&#39;clustering_hint.gif&#39;&#39;</a><br/>
<br/>
<p>This hint is valid only for <code dir="ltr">INSERT</code> and <code dir="ltr">MERGE</code> operations on tables that are enabled for attribute clustering. The <code dir="ltr">CLUSTERING</code> hint enables attribute clustering for direct-path inserts (serial or parallel). This results in partially-clustered data, that is, data that is clustered per each insert or merge operation. This hint overrides a <code dir="ltr">NO</code> <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> setting in the DDL that created or altered the table. This hint has no effect on tables that are not enabled for attribute clustering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#CEGJBIHI"><span class="xreftitleitalic"><span class="italic">clustering_when</span></span></a> clause of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information on the <code dir="ltr">NO</code> <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> setting</p>
</li>
<li>
<p><a href="#CHDBHBJG">&#34;NO_CLUSTERING Hint&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABBCHEA"></a>
<div id="SQLRF50912" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">CURSOR_SHARING_EXACT Hint <a id="sthref483"></a><a id="sthref484"></a></h3>
<img width="270" height="27" src="img/cursor_sharing_exact_hint.gif" alt="Description of cursor_sharing_exact_hint.gif follows"/><br/>
<a id="sthref485" href="img_text/cursor_sharing_exact_hint.htm">Description of the illustration &#39;&#39;cursor_sharing_exact_hint.gif&#39;&#39;</a><br/>
<br/>
<p>Oracle can replace literals in SQL statements with bind variables, when it is safe to do so. This replacement is controlled with the <code dir="ltr">CURSOR_SHARING</code> initialization parameter. The <code dir="ltr">CURSOR_SHARING_EXACT</code> hint instructs the optimizer to switch this behavior off. When you specify this hint, Oracle executes the SQL statement without any attempt to replace literals with bind variables.</p>
</div>
<!-- class="sect3" -->
<a id="CHDHHBAA"></a>
<div id="SQLRF57044" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">DISABLE_PARALLEL_DML Hint<a id="sthref486"></a><a id="sthref487"></a></h3>
<img width="260" height="27" src="img/disable_parallel_dml_hint.gif" alt="Description of disable_parallel_dml_hint.gif follows"/><br/>
<a id="sthref488" href="img_text/disable_parallel_dml_hint.htm">Description of the illustration &#39;&#39;disable_parallel_dml_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">DISABLE_PARALLEL_DML</code> hint disables parallel DML for <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">MERGE</code>, and <code dir="ltr">UPDATE</code> statements. You can use this hint to disable parallel DML for an individual statement when parallel DML is enabled for the session with the <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> <code dir="ltr">ENABLE</code> <code dir="ltr">PARALLEL</code> <code dir="ltr">DML</code> statement.</p>
</div>
<!-- class="sect3" -->
<a id="BABEGIJC"></a>
<div id="SQLRF50704" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">DRIVING_SITE Hint <code dir="ltr"><a id="sthref489"></a><a id="sthref490"></a></code></h3>
<img width="498" height="46" src="img/driving_site_hint.gif" alt="Description of driving_site_hint.gif follows"/><br/>
<a id="sthref491" href="img_text/driving_site_hint.htm">Description of the illustration &#39;&#39;driving_site_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">DRIVING_SITE</code> hint instructs the optimizer to execute the query at a different site than that selected by the database. This hint is useful if you are using distributed query optimization.</p>
<p>For example:</p>
<pre dir="ltr">SELECT /*+ DRIVING_SITE(departments) */ * 
  FROM employees, departments@rsite 
  WHERE employees.department_id = departments.department_id;
</pre>
<p>If this query is executed without the hint, then rows from <code dir="ltr">departments</code> are sent to the local site, and the join is executed there. With the hint, the rows from <code dir="ltr">employees</code> are sent to the remote site, and the query is executed there and the result set is returned to the local site.</p>
</div>
<!-- class="sect3" -->
<a id="BABDCGAA"></a>
<div id="SQLRF50913" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">DYNAMIC_SAMPLING Hint <a id="sthref492"></a><a id="sthref493"></a></h3>
<img width="643" height="46" src="img/dynamic_sampling_hint.gif" alt="Description of dynamic_sampling_hint.gif follows"/><br/>
<a id="sthref494" href="img_text/dynamic_sampling_hint.htm">Description of the illustration &#39;&#39;dynamic_sampling_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">DYNAMIC_SAMPLING</code> hint instructs the optimizer how to control dynamic sampling to improve server performance by determining more accurate predicate selectivity and statistics for tables and indexes.</p>
<p>You can set the value of <code dir="ltr">DYNAMIC_SAMPLING</code> to a value from 0 to 10. The higher the level, the more effort the compiler puts into dynamic sampling and the more broadly it is applied. Sampling defaults to cursor level unless you specify <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">integer</span></code> value is <code dir="ltr">0</code> to <code dir="ltr">10,</code> indicating the degree of sampling.</p>
<p>If a cardinality statistic already exists for the table, then the optimizer uses it. Otherwise, the optimizer enables dynamic sampling to estimate the cardinality statistic.</p>
<p>If you specify <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> and the cardinality statistic already exists, then:</p>
<ul>
<li>
<p>If there is no single-table predicate (a <code dir="ltr">WHERE</code> clause that evaluates only one table), then the optimizer trusts the existing statistics and ignores this hint. For example, the following query will not result in any dynamic sampling if <code dir="ltr">employees</code> is analyzed:</p>
<pre dir="ltr">SELECT /*+ DYNAMIC_SAMPLING(e 1) */ count(*)
  FROM employees e;
</pre></li>
<li>
<p>If there is a single-table predicate, then the optimizer uses the existing cardinality statistic and estimates the selectivity of the predicate using the existing statistics.</p>
</li>
</ul>
<p>To apply dynamic sampling to a specific table, use the following form of the hint:</p>
<pre dir="ltr">SELECT /*+ DYNAMIC_SAMPLING(employees 1) */ *
  FROM employees 
  WHERE ...
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL450" href="../TGSQL/tgsql_astat.htm#TGSQL450"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for information about dynamic sampling and the sampling levels that you can set</div>
</div>
<!-- class="sect3" -->
<a id="CHDIHHIG"></a>
<div id="SQLRF57045" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">ENABLE_PARALLEL_DML Hint<a id="sthref495"></a><a id="sthref496"></a></h3>
<img width="258" height="27" src="img/enable_parallel_dml_hint.gif" alt="Description of enable_parallel_dml_hint.gif follows"/><br/>
<a id="sthref497" href="img_text/enable_parallel_dml_hint.htm">Description of the illustration &#39;&#39;enable_parallel_dml_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">ENABLE_PARALLEL_DML</code> hint enables parallel DML for <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">MERGE</code>, and <code dir="ltr">UPDATE</code> statements. You can use this hint to enable parallel DML for an individual statement, rather than enabling parallel DML for the session with the <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> <code dir="ltr">ENABLE</code> <code dir="ltr">PARALLEL</code> <code dir="ltr">DML</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">Oracle Database VLDB and Partitioning Guide</span> for information about <a class="olink VLDBG1438" href="../VLDBG/GUID-5EB01FA8-030B-45BB-9B16-2D13881F6010.htm#VLDBG1438">enabling parallel DML</a> and <a class="olink VLDBG1455" href="../VLDBG/GUID-6626C70C-876C-47A4-8C01-9B66574062D8.htm#VLDBG1455">restrictions on parallel DML</a></div>
</div>
<!-- class="sect3" -->
<a id="BABCEFIJ"></a>
<div id="SQLRF50509" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">FACT Hint <a id="sthref498"></a><a id="sthref499"></a></h3>
<img width="447" height="46" src="img/fact_hint.gif" alt="Description of fact_hint.gif follows"/><br/>
<a id="sthref500" href="img_text/fact_hint.htm">Description of the illustration &#39;&#39;fact_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">FACT</code> hint is used in the context of the star transformation. It instructs the optimizer that the table specified in <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> should be considered as a fact table.</p>
</div>
<!-- class="sect3" -->
<a id="BABGCCFG"></a>
<div id="SQLRF50302" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">FIRST_ROWS Hint <a id="sthref501"></a><a id="sthref502"></a><a id="sthref503"></a></h3>
<img width="314" height="27" src="img/first_rows_hint.gif" alt="Description of first_rows_hint.gif follows"/><br/>
<a id="sthref504" href="img_text/first_rows_hint.htm">Description of the illustration &#39;&#39;first_rows_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">FIRST_ROWS</code> hint instructs Oracle to optimize an individual SQL statement for fast response, choosing the plan that returns the first <code dir="ltr"><span class="codeinlineitalic">n</span></code> rows most efficiently. For <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, specify the number of rows to return.</p>
<p>For example, the optimizer uses the query optimization approach to optimize the following statement for best response time:</p>
<pre dir="ltr">SELECT /*+ FIRST_ROWS(10) */ employee_id, last_name, salary, job_id
  FROM employees
  WHERE department_id = 20;
</pre>
<p>In this example each department contains many employees. The user wants the first 10 employees of department 20 to be displayed as quickly as possible.</p>
<p>The optimizer ignores this hint in <code dir="ltr">DELETE</code> and <code dir="ltr">UPDATE</code> statement blocks and in <code dir="ltr">SELECT</code> statement blocks that include any blocking operations, such as sorts or groupings. Such statements cannot be optimized for best response time, because Oracle Database must retrieve all rows accessed by the statement before returning the first row. If you specify this hint in any such statement, then the database optimizes for best throughput.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABHIAIG">&#34;ALL_ROWS Hint&#34;</a> for additional information on the <code dir="ltr">FIRST_ROWS</code> hint and statistics</div>
</div>
<!-- class="sect3" -->
<a id="BABFEHAA"></a>
<div id="SQLRF50401" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">FULL Hint <a id="sthref505"></a><a id="sthref506"></a></h3>
<img width="445" height="46" src="img/full_hint.gif" alt="Description of full_hint.gif follows"/><br/>
<a id="sthref507" href="img_text/full_hint.htm">Description of the illustration &#39;&#39;full_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">FULL</code> hint instructs the optimizer to perform a full table scan for the specified table. For example:</p>
<pre dir="ltr">SELECT /*+ FULL(e) */ employee_id, last_name
  FROM hr.employees e 
  WHERE last_name LIKE :b1;
</pre>
<p>Oracle Database performs a full table scan on the <code dir="ltr">employees</code> table to execute this statement, even if there is an index on the <code dir="ltr">last_name</code> column that is made available by the condition in the <code dir="ltr">WHERE</code> clause.</p>
<p>The <code dir="ltr">employees</code> table has alias <code dir="ltr">e</code> in the <code dir="ltr">FROM</code> clause, so the hint must refer to the table by its alias rather than by its name. Do not specify schema names in the hint even if they are specified in the <code dir="ltr">FROM</code> clause.</p>
</div>
<!-- class="sect3" -->
<a id="BABDBACG"></a>
<div id="SQLRF56406" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">GATHER_OPTIMIZER_STATISTICS Hint<a id="sthref508"></a><a id="sthref509"></a><a id="sthref510"></a></h3>
<img width="307" height="27" src="img/gather_opt_stats_hint.gif" alt="Description of gather_opt_stats_hint.gif follows"/><br/>
<a id="sthref511" href="img_text/gather_opt_stats_hint.htm">Description of the illustration &#39;&#39;gather_opt_stats_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">GATHER_OPTIMIZER_STATISTICS</code> hint instructs the optimizer to enable statistics gathering during the following types of bulk loads:</p>
<ul>
<li>
<p><code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">AS</code> <code dir="ltr">SELECT</code></p>
</li>
<li>
<p><code dir="ltr">INSERT</code> <code dir="ltr">INTO</code> ... <code dir="ltr">SELECT</code> into an empty table using a direct-path insert</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL344" href="../TGSQL/tgsql_statscon.htm#TGSQL344"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information on statistics gathering for bulk loads</div>
</div>
<!-- class="sect3" -->
<a id="BABHEBDC"></a>
<div id="SQLRF50404" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">HASH Hint <a id="sthref512"></a><a id="sthref513"></a></h3>
<img width="449" height="46" src="img/hash_hint.gif" alt="Description of hash_hint.gif follows"/><br/>
<a id="sthref514" href="img_text/hash_hint.htm">Description of the illustration &#39;&#39;hash_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">HASH</code> hint instructs the optimizer to use a hash scan to access the specified table. This hint applies only to tables in a hash cluster.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEGDDG"></a>
<div id="SQLRF30052" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">IGNORE_ROW_ON_DUPKEY_INDEX Hint <a id="sthref515"></a></h3>
<img width="610" height="91" src="img/ignore_row_on_dupkey_index.gif" alt="Description of ignore_row_on_dupkey_index.gif follows"/><br/>
<a id="sthref516" href="img_text/ignore_row_on_dupkey_index.htm">Description of the illustration &#39;&#39;ignore_row_on_dupkey_index.gif&#39;&#39;</a><br/>
<br/>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">CHANGE_DUPKEY_ERROR_INDEX</code>, <code dir="ltr">IGNORE_ROW_ON_DUPKEY_INDEX</code>, and <code dir="ltr">RETRY_ON_ROW_CHANGE</code> hints are unlike other hints in that they have a semantic effect. The general philosophy explained in <a href="#i35922">&#34;Hints&#34;</a> does not apply for these three hints.</div>
<p>The <code dir="ltr">IGNORE_ROW_ON_DUPKEY_INDEX</code> hint applies only to single-table <code dir="ltr">INSERT</code> operations. It is not supported for <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, <code dir="ltr">MERGE</code>, or multitable insert operations. <code dir="ltr">IGNORE_ROW_ON_DUPKEY_INDEX</code> causes the statement to ignore a unique key violation for a specified set of columns or for a specified index. When a unique key violation is encountered, a row-level rollback occurs and execution resumes with the next input row. If you specify this hint when inserting data with DML error logging enabled, then the unique key violation is not logged and does not cause statement termination.</p>
<p>The semantic effect of this hint results in error messages if specific rules are violated:</p>
<ul>
<li>
<p>If you specify <code dir="ltr"><span class="codeinlineitalic">index</span></code>, then the index must exist and be unique. Otherwise, the statement causes ORA-38913.</p>
</li>
<li>
<p>You must specify exactly one index. If you specify no index, then the statement causes ORA-38912. If you specify more than one index, then the statement causes ORA-38915.</p>
</li>
<li>
<p>You can specify either a <code dir="ltr">CHANGE_DUPKEY_ERROR_INDEX</code> or <code dir="ltr">IGNORE_ROW_ON_DUPKEY_INDEX</code> hint in an <code dir="ltr">INSERT</code> statement, but not both. If you specify both, then the statement causes ORA-38915.</p>
</li>
</ul>
<p>As with all hints, a syntax error in the hint causes it to be silently ignored. The result will be that ORA-00001 will be caused, just as if no hint were used.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This hint disables both <code dir="ltr">APPEND</code> mode and parallel <code dir="ltr">DML</code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDIFFJE">CHANGE_DUPKEY_ERROR_INDEX Hint</a></div>
</div>
<!-- class="sect3" -->
<a id="BABEFDFC"></a>
<div id="SQLRF50405" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX Hint <a id="sthref517"></a><a id="sthref518"></a></h3>
<img width="609" height="58" src="img/index_hint.gif" alt="Description of index_hint.gif follows"/><br/>
<a id="sthref519" href="img_text/index_hint.htm">Description of the illustration &#39;&#39;index_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX</code> hint instructs the optimizer to use an index scan for the specified table. You can use the <code dir="ltr">INDEX</code> hint for function-based, domain, B-tree, bitmap, and bitmap join indexes.</p>
<p>The behavior of the hint depends on the <code dir="ltr"><span class="codeinlineitalic">indexspec</span></code> specification:</p>
<ul>
<li>
<p>If the <code dir="ltr">INDEX</code> hint specifies a single available index, then the database performs a scan on this index. The optimizer does not consider a full table scan or a scan of another index on the table.</p>
</li>
<li>
<p>For a hint on a combination of multiple indexes, Oracle recommends using <code dir="ltr">INDEX_COMBINE</code> rather than <code dir="ltr">INDEX</code>, because it is a more versatile hint. If the <code dir="ltr">INDEX</code> hint specifies a list of available indexes, then the optimizer considers the cost of a scan on each index in the list and then performs the index scan with the lowest cost. The database can also choose to scan multiple indexes from this list and merge the results, if such an access path has the lowest cost. The database does not consider a full table scan or a scan on an index not listed in the hint.</p>
</li>
<li>
<p>If the <code dir="ltr">INDEX</code> hint specifies no indexes, then the optimizer considers the cost of a scan on each available index on the table and then performs the index scan with the lowest cost. The database can also choose to scan multiple indexes and merge the results, if such an access path has the lowest cost. The optimizer does not consider a full table scan.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">SELECT /*+ INDEX (employees emp_department_ix)*/ employee_id, department_id
  FROM employees 
  WHERE department_id &gt; 50;
</pre></div>
<!-- class="sect3" -->
<a id="BABBBECI"></a>
<div id="SQLRF50406" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_ASC Hint <a id="sthref520"></a><a id="sthref521"></a></h3>
<img width="638" height="58" src="img/index_asc_hint.gif" alt="Description of index_asc_hint.gif follows"/><br/>
<a id="sthref522" href="img_text/index_asc_hint.htm">Description of the illustration &#39;&#39;index_asc_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_ASC</code> hint instructs the optimizer to use an index scan for the specified table. If the statement uses an index range scan, then Oracle Database scans the index entries in ascending order of their indexed values. Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>.</p>
<p>The default behavior for a range scan is to scan index entries in ascending order of their indexed values, or in descending order for a descending index. This hint does not change the default order of the index, and therefore does not specify anything more than the <code dir="ltr">INDEX</code> hint. However, you can use the <code dir="ltr">INDEX_ASC</code> hint to specify ascending range scans explicitly should the default behavior change.</p>
</div>
<!-- class="sect3" -->
<a id="BABHJBAJ"></a>
<div id="SQLRF50407" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_COMBINE Hint <a id="sthref523"></a><a id="sthref524"></a></h3>
<img width="668" height="58" src="img/index_combine_hint.gif" alt="Description of index_combine_hint.gif follows"/><br/>
<a id="sthref525" href="img_text/index_combine_hint.htm">Description of the illustration &#39;&#39;index_combine_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_COMBINE</code> hint instructs the optimizer to use a bitmap access path for the table. If <code dir="ltr"><span class="codeinlineitalic">indexspec</span></code> is omitted from the <code dir="ltr">INDEX_COMBINE</code> hint, then the optimizer uses whatever Boolean combination of indexes has the best cost estimate for the table. If you specify <code dir="ltr">indexspec</code>, then the optimizer tries to use some Boolean combination of the specified indexes. Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>. For example:</p>
<pre dir="ltr">SELECT /*+ INDEX_COMBINE(e emp_manager_ix emp_department_ix) */ *
  FROM employees e
  WHERE manager_id = 108
     OR department_id = 110;
</pre></div>
<!-- class="sect3" -->
<a id="BABGIHJH"></a>
<div id="SQLRF50409" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_DESC Hint <a id="sthref526"></a><a id="sthref527"></a></h3>
<img width="647" height="58" src="img/index_desc_hint.gif" alt="Description of index_desc_hint.gif follows"/><br/>
<a id="sthref528" href="img_text/index_desc_hint.htm">Description of the illustration &#39;&#39;index_desc_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_DESC</code> hint instructs the optimizer to use a descending index scan for the specified table. If the statement uses an index range scan and the index is ascending, then Oracle scans the index entries in descending order of their indexed values. In a partitioned index, the results are in descending order within each partition. For a descending index, this hint effectively cancels out the descending order, resulting in a scan of the index entries in ascending order. Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>. For example:</p>
<pre dir="ltr">SELECT /*+ INDEX_DESC(e emp_name_ix) */ *
  FROM employees e;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL237" href="../TGSQL/tgsql_optop.htm#TGSQL237"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for information on full scans</div>
</div>
<!-- class="sect3" -->
<a id="BABDAEGJ"></a>
<div id="SQLRF50410" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_FFS Hint <a id="sthref529"></a><a id="sthref530"></a><a id="sthref531"></a></h3>
<img width="636" height="58" src="img/index_ffs_hint.gif" alt="Description of index_ffs_hint.gif follows"/><br/>
<a id="sthref532" href="img_text/index_ffs_hint.htm">Description of the illustration &#39;&#39;index_ffs_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_FFS</code> hint instructs the optimizer to perform a fast full index scan rather than a full table scan.</p>
<p>Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>. For example:</p>
<pre dir="ltr">SELECT /*+ INDEX_FFS(e emp_name_ix) */ first_name
  FROM employees e;
</pre></div>
<!-- class="sect3" -->
<a id="BABHAIAB"></a>
<div id="SQLRF50408" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_JOIN Hint <a id="sthref533"></a><a id="sthref534"></a></h3>
<img width="640" height="58" src="img/index_join_hint.gif" alt="Description of index_join_hint.gif follows"/><br/>
<a id="sthref535" href="img_text/index_join_hint.htm">Description of the illustration &#39;&#39;index_join_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_JOIN</code> hint instructs the optimizer to use an index join as an access path. For the hint to have a positive effect, a sufficiently small number of indexes must exist that contain all the columns required to resolve the query.</p>
<p>Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>. For example, the following query uses an index join to access the <code dir="ltr">manager_id</code> and <code dir="ltr">department_id</code> columns, both of which are indexed in the <code dir="ltr">employees</code> table.</p>
<pre dir="ltr">SELECT /*+ INDEX_JOIN(e emp_manager_ix emp_department_ix) */ department_id
  FROM employees e
  WHERE manager_id &lt; 110
    AND department_id &lt; 50;
</pre></div>
<!-- class="sect3" -->
<a id="BABDHIDE"></a>
<div id="SQLRF50415" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_SS Hint <a id="sthref536"></a><a id="sthref537"></a></h3>
<img width="629" height="58" src="img/index_ss_hint.gif" alt="Description of index_ss_hint.gif follows"/><br/>
<a id="sthref538" href="img_text/index_ss_hint.htm">Description of the illustration &#39;&#39;index_ss_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_SS</code> hint instructs the optimizer to perform an index skip scan for the specified table. If the statement uses an index range scan, then Oracle scans the index entries in ascending order of their indexed values. In a partitioned index, the results are in ascending order within each partition.</p>
<p>Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>. For example:</p>
<pre dir="ltr">SELECT /*+ INDEX_SS(e emp_name_ix) */ last_name
  FROM employees e
  WHERE first_name = &#39;Steven&#39;;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL238" href="../TGSQL/tgsql_optop.htm#TGSQL238"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for information on index skip scans</div>
</div>
<!-- class="sect3" -->
<a id="BABJGEBC"></a>
<div id="SQLRF50416" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_SS_ASC Hint <a id="sthref539"></a><a id="sthref540"></a></h3>
<img width="659" height="58" src="img/index_ss_asc_hint.gif" alt="Description of index_ss_asc_hint.gif follows"/><br/>
<a id="sthref541" href="img_text/index_ss_asc_hint.htm">Description of the illustration &#39;&#39;index_ss_asc_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_SS_ASC</code> hint instructs the optimizer to perform an index skip scan for the specified table. If the statement uses an index range scan, then Oracle Database scans the index entries in ascending order of their indexed values. In a partitioned index, the results are in ascending order within each partition. Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>.</p>
<p>The default behavior for a range scan is to scan index entries in ascending order of their indexed values, or in descending order for a descending index. This hint does not change the default order of the index, and therefore does not specify anything more than the <code dir="ltr">INDEX_SS</code> hint. However, you can use the <code dir="ltr">INDEX_SS_ASC</code> hint to specify ascending range scans explicitly should the default behavior change.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL238" href="../TGSQL/tgsql_optop.htm#TGSQL238"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for information on index skip scans</div>
</div>
<!-- class="sect3" -->
<a id="BABHHDDF"></a>
<div id="SQLRF50417" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INDEX_SS_DESC Hint <a id="sthref542"></a><a id="sthref543"></a></h3>
<img width="668" height="58" src="img/index_ss_desc_hint.gif" alt="Description of index_ss_desc_hint.gif follows"/><br/>
<a id="sthref544" href="img_text/index_ss_desc_hint.htm">Description of the illustration &#39;&#39;index_ss_desc_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INDEX_SS_DESC</code> hint instructs the optimizer to perform an index skip scan for the specified table. If the statement uses an index range scan and the index is ascending, then Oracle scans the index entries in descending order of their indexed values. In a partitioned index, the results are in descending order within each partition. For a descending index, this hint effectively cancels out the descending order, resulting in a scan of the index entries in ascending order.</p>
<p>Each parameter serves the same purpose as in the <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a>. For example:</p>
<pre dir="ltr">SELECT /*+ INDEX_SS_DESC(e emp_name_ix) */ last_name
  FROM employees e
  WHERE first_name = &#39;Steven&#39;;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL238" href="../TGSQL/tgsql_optop.htm#TGSQL238"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for information on index skip scans</div>
</div>
<!-- class="sect3" -->
<a id="CHDJJGAG"></a>
<div id="SQLRF56788" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INMEMORY Hint<a id="sthref545"></a><a id="sthref546"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">INMEMORY</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="480" height="46" src="img/inmemory_hint.gif" alt="Description of inmemory_hint.gif follows"/><br/>
<a id="sthref547" href="img_text/inmemory_hint.htm">Description of the illustration &#39;&#39;inmemory_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INMEMORY</code> hint enables in-memory queries.</p>
<p>This hint does not instruct the optimizer to perform a full table scan. If a full table scan is desired, then also specify the <a href="#BABFEHAA">&#34;FULL Hint&#34;</a>.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEGJGB"></a>
<div id="SQLRF56789" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">INMEMORY_PRUNING Hint<a id="sthref548"></a><a id="sthref549"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">INMEMORY_PRUNING</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="539" height="46" src="img/inmemory_pruning_hint.gif" alt="Description of inmemory_pruning_hint.gif follows"/><br/>
<a id="sthref550" href="img_text/inmemory_pruning_hint.htm">Description of the illustration &#39;&#39;inmemory_pruning_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">INMEMORY_PRUNING</code> hint enables pruning of in-memory queries.</p>
</div>
<!-- class="sect3" -->
<a id="BABJIHCI"></a>
<div id="SQLRF50705" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">LEADING Hint <a id="sthref551"></a><a id="sthref552"></a></h3>
<img width="499" height="46" src="img/leading_hint.gif" alt="Description of leading_hint.gif follows"/><br/>
<a id="sthref553" href="img_text/leading_hint.htm">Description of the illustration &#39;&#39;leading_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">LEADING</code> hint instructs the optimizer to use the specified set of tables as the prefix in the execution plan. This hint is more versatile than the <code dir="ltr">ORDERED</code> hint. For example:</p>
<pre dir="ltr">SELECT /*+ LEADING(e j) */ *
    FROM employees e, departments d, job_history j
    WHERE e.department_id = d.department_id
      AND e.hire_date = j.start_date;
</pre>
<p>The <code dir="ltr">LEADING</code> hint is ignored if the tables specified cannot be joined first in the order specified because of dependencies in the join graph. If you specify two or more conflicting <code dir="ltr">LEADING</code> hints, then all of them are ignored. If you specify the <code dir="ltr">ORDERED</code> hint, it overrides all <code dir="ltr">LEADING</code> hints.</p>
</div>
<!-- class="sect3" -->
<a id="BABHIFDA"></a>
<div id="SQLRF50706" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">MERGE Hint <a id="sthref554"></a><a id="sthref555"></a></h3>
<img width="537" height="98" src="img/merge_hint.gif" alt="Description of merge_hint.gif follows"/><br/>
<a id="sthref556" href="img_text/merge_hint.htm">Description of the illustration &#39;&#39;merge_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">MERGE</code> hint lets you merge views in a query.</p>
<p>If a view&#39;s query block contains a <code dir="ltr">GROUP</code> <code dir="ltr">BY</code> clause or <code dir="ltr">DISTINCT</code> operator in the <code dir="ltr">SELECT</code> list, then the optimizer can merge the view into the accessing statement only if complex view merging is enabled. Complex merging can also be used to merge an <code dir="ltr">IN</code> subquery into the accessing statement if the subquery is uncorrelated.</p>
<p>For example:</p>
<pre dir="ltr">SELECT /*+ MERGE(v) */ e1.last_name, e1.salary, v.avg_salary
   FROM employees e1,
        (SELECT department_id, avg(salary) avg_salary 
           FROM employees e2
           GROUP BY department_id) v 
   WHERE e1.department_id = v.department_id
     AND e1.salary &gt; v.avg_salary
   ORDER BY e1.last_name;
</pre>
<p>When the <code dir="ltr">MERGE</code> hint is used without an argument, it should be placed in the view query block. When <code dir="ltr">MERGE</code> is used with the view name as an argument, it should be placed in the surrounding query.</p>
</div>
<!-- class="sect3" -->
<a id="BABIHIHH"></a>
<div id="SQLRF50916" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">MODEL_MIN_ANALYSIS Hint <a id="sthref557"></a><a id="sthref558"></a></h3>
<img width="248" height="27" src="img/model_min_analysis_hint.gif" alt="Description of model_min_analysis_hint.gif follows"/><br/>
<a id="sthref559" href="img_text/model_min_analysis_hint.htm">Description of the illustration &#39;&#39;model_min_analysis_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">MODEL_MIN_ANALYSIS</code> hint instructs the optimizer to omit some compile-time optimizations of spreadsheet rules&mdash;primarily detailed dependency graph analysis. Other spreadsheet optimizations, such as creating filters to selectively populate spreadsheet access structures and limited rule pruning, are still used by the optimizer.</p>
<p>This hint reduces compilation time because spreadsheet analysis can be lengthy if the number of spreadsheet rules is more than several hundreds.</p>
</div>
<!-- class="sect3" -->
<a id="BABDCEIG"></a>
<div id="SQLRF51110" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">MONITOR Hint <a id="sthref560"></a><a id="sthref561"></a></h3>
<img width="171" height="27" src="img/monitor_hint.gif" alt="Description of monitor_hint.gif follows"/><br/>
<a id="sthref562" href="img_text/monitor_hint.htm">Description of the illustration &#39;&#39;monitor_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">MONITOR</code> hint forces real-time SQL monitoring for the query, even if the statement is not long running. This hint is valid only when the parameter <code dir="ltr">CONTROL_MANAGEMENT_PACK_ACCESS</code> is set to <code dir="ltr">DIAGNOSTIC+TUNING</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL790" href="../TGSQL/tgsql_monit.htm#TGSQL790"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about real-time SQL monitoring</div>
</div>
<!-- class="sect3" -->
<a id="BABDFDGH"></a>
<div id="SQLRF51111" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NATIVE_FULL_OUTER_JOIN Hint</h3>
<img width="272" height="27" src="img/native_foj_hint.gif" alt="Description of native_foj_hint.gif follows"/><br/>
<a id="sthref563" href="img_text/native_foj_hint.htm">Description of the illustration &#39;&#39;native_foj_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NATIVE_FULL_OUTER_JOIN</code> hint instructs the optimizer to use native full outer join, which is a native execution method based on a hash join.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABDGDFD">NO_NATIVE_FULL_OUTER_JOIN Hint</a></p>
</li>
<li>
<p><a class="olink TGSQL242" href="../TGSQL/tgsql_join.htm#TGSQL242"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about native full outer joins</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABJCJFG"></a>
<div id="SQLRF50902" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NOAPPEND Hint <code dir="ltr"><a id="sthref564"></a><a id="sthref565"></a></code></h3>
<img width="182" height="27" src="img/noappend_hint.gif" alt="Description of noappend_hint.gif follows"/><br/>
<a id="sthref566" href="img_text/noappend_hint.htm">Description of the illustration &#39;&#39;noappend_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NOAPPEND</code> hint instructs the optimizer to use conventional <code dir="ltr">INSERT</code> by disabling parallel mode for the duration of the <code dir="ltr">INSERT</code> statement. Conventional <code dir="ltr">INSERT</code> is the default in serial mode, and direct-path <code dir="ltr">INSERT</code> is the default in parallel mode.</p>
</div>
<!-- class="sect3" -->
<a id="BABEIBIF"></a>
<div id="SQLRF50904" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NOCACHE Hint <a id="sthref567"></a><a id="sthref568"></a></h3>
<img width="475" height="46" src="img/nocache_hint.gif" alt="Description of nocache_hint.gif follows"/><br/>
<a id="sthref569" href="img_text/nocache_hint.htm">Description of the illustration &#39;&#39;nocache_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NOCACHE</code> hint instructs the optimizer to place the blocks retrieved for the table at the least recently used end of the LRU list in the buffer cache when a full table scan is performed. This is the normal behavior of blocks in the buffer cache. For example:</p>
<pre dir="ltr">SELECT /*+ FULL(hr_emp) NOCACHE(hr_emp) */ last_name
  FROM employees hr_emp;
</pre>
<p>The <code dir="ltr">CACHE</code> and <code dir="ltr">NOCACHE</code> hints affect system statistics <code dir="ltr">table</code> <code dir="ltr">scans(long</code> <code dir="ltr">tables)</code> and <code dir="ltr">table</code> <code dir="ltr">scans(short</code> <code dir="ltr">tables)</code>, as shown in the <code dir="ltr">V$SYSSTAT</code> view.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBHBJG"></a>
<div id="SQLRF56810" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_CLUSTERING Hint<a id="sthref570"></a><a id="sthref571"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">NO_CLUSTERING</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="215" height="27" src="img/no_clustering_hint.gif" alt="Description of no_clustering_hint.gif follows"/><br/>
<a id="sthref572" href="img_text/no_clustering_hint.htm">Description of the illustration &#39;&#39;no_clustering_hint.gif&#39;&#39;</a><br/>
<br/>
<p>This hint is valid only for <code dir="ltr">INSERT</code> and <code dir="ltr">MERGE</code> operations on tables that are enabled for attribute clustering. The <code dir="ltr">NO_CLUSTERING</code> hint disables attribute clustering for direct-path inserts (serial or parallel). This hint overrides a <code dir="ltr">YES</code> <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> setting in the DDL that created or altered the table. This hint has no effect on tables that are not enabled for attribute clustering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#CEGJBIHI"><span class="xreftitleitalic"><span class="italic">clustering_when</span></span></a> clause of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information on the <code dir="ltr">YES</code> <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> setting</p>
</li>
<li>
<p><a href="#CHDBJDCD">&#34;CLUSTERING Hint&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABHBECB"></a>
<div id="SQLRF50502" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_EXPAND Hint <a id="sthref573"></a><a id="sthref574"></a></h3>
<img width="414" height="46" src="img/no_expand_hint.gif" alt="Description of no_expand_hint.gif follows"/><br/>
<a id="sthref575" href="img_text/no_expand_hint.htm">Description of the illustration &#39;&#39;no_expand_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">NO_EXPAND</code> hint instructs the optimizer not to consider <code dir="ltr">OR</code>-expansion for queries having <code dir="ltr">OR</code> conditions or <code dir="ltr">IN</code>-lists in the <code dir="ltr">WHERE</code> clause. Usually, the optimizer considers using <code dir="ltr">OR</code> expansion and uses this method if it decides that the cost is lower than not using it. For example:</p>
<pre dir="ltr">SELECT /*+ NO_EXPAND */ *
  FROM employees e, departments d
  WHERE e.manager_id = 108
     OR d.department_id = 110;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <a href="#BABIAFIB">&#34;USE_CONCAT Hint&#34;</a>, which is the opposite of this hint</div>
</div>
<!-- class="sect3" -->
<a id="BABFJADH"></a>
<div id="SQLRF50510" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_FACT Hint <a id="sthref576"></a><a id="sthref577"></a></h3>
<img width="471" height="46" src="img/no_fact_hint.gif" alt="Description of no_fact_hint.gif follows"/><br/>
<a id="sthref578" href="img_text/no_fact_hint.htm">Description of the illustration &#39;&#39;no_fact_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_FACT</code> hint is used in the context of the star transformation. It instruct the optimizer that the queried table should not be considered as a fact table.</p>
</div>
<!-- class="sect3" -->
<a id="BABCIDGG"></a>
<div id="SQLRF56407" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_GATHER_OPTIMIZER_STATISTICS Hint<a id="sthref579"></a><a id="sthref580"></a><a id="sthref581"></a></h3>
<img width="329" height="27" src="img/no_gather_opt_stats_hint.gif" alt="Description of no_gather_opt_stats_hint.gif follows"/><br/>
<a id="sthref582" href="img_text/no_gather_opt_stats_hint.htm">Description of the illustration &#39;&#39;no_gather_opt_stats_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_GATHER_OPTIMIZER_STATISTICS</code> hint instructs the optimizer to disable statistics gathering during the following types of bulk loads:</p>
<ul>
<li>
<p><code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <code dir="ltr">AS</code> <code dir="ltr">SELECT</code></p>
</li>
<li>
<p><code dir="ltr">INSERT</code> <code dir="ltr">INTO</code> ... <code dir="ltr">SELECT</code> into an empty table using a direct path insert</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL344" href="../TGSQL/tgsql_statscon.htm#TGSQL344"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information on statistics gathering for bulk loads</div>
</div>
<!-- class="sect3" -->
<a id="BABHJBIB"></a>
<div id="SQLRF50411" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_INDEX Hint <a id="sthref583"></a><a id="sthref584"></a></h3>
<img width="631" height="58" src="img/no_index_hint.gif" alt="Description of no_index_hint.gif follows"/><br/>
<a id="sthref585" href="img_text/no_index_hint.htm">Description of the illustration &#39;&#39;no_index_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_INDEX</code> hint instructs the optimizer not to use one or more indexes for the specified table. For example:</p>
<pre dir="ltr">SELECT /*+ NO_INDEX(employees emp_empid) */ employee_id 
  FROM employees 
  WHERE employee_id &gt; 200; 
</pre>
<p>Each parameter serves the same purpose as in <a href="#BABEFDFC">&#34;INDEX Hint&#34;</a> with the following modifications:</p>
<ul>
<li>
<p>If this hint specifies a single available index, then the optimizer does not consider a scan on this index. Other indexes not specified are still considered.</p>
</li>
<li>
<p>If this hint specifies a list of available indexes, then the optimizer does not consider a scan on any of the specified indexes. Other indexes not specified in the list are still considered.</p>
</li>
<li>
<p>If this hint specifies no indexes, then the optimizer does not consider a scan on any index on the table. This behavior is the same as a <code dir="ltr">NO_INDEX</code> hint that specifies a list of all available indexes for the table.</p>
</li>
</ul>
<p>The <code dir="ltr">NO_INDEX</code> hint applies to function-based, B-tree, bitmap, cluster, or domain indexes. If a <code dir="ltr">NO_INDEX</code> hint and an index hint (<code dir="ltr">INDEX</code>, <code dir="ltr">INDEX_ASC</code>, <code dir="ltr">INDEX_DESC</code>, <code dir="ltr">INDEX_COMBINE</code>, or <code dir="ltr">INDEX_FFS</code>) both specify the same indexes, then the database ignores both the <code dir="ltr">NO_INDEX</code> hint and the index hint for the specified indexes and considers those indexes for use during execution of the statement.</p>
</div>
<!-- class="sect3" -->
<a id="BABFGEBA"></a>
<div id="SQLRF50413" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_INDEX_FFS Hint <a id="sthref586"></a><a id="sthref587"></a></h3>
<img width="659" height="58" src="img/no_index_ffs_hint.gif" alt="Description of no_index_ffs_hint.gif follows"/><br/>
<a id="sthref588" href="img_text/no_index_ffs_hint.htm">Description of the illustration &#39;&#39;no_index_ffs_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_INDEX_FFS</code> hint instructs the optimizer to exclude a fast full index scan of the specified indexes on the specified table. Each parameter serves the same purpose as in the <a href="#BABHJBIB">&#34;NO_INDEX Hint&#34;</a>. For example:</p>
<pre dir="ltr">SELECT /*+ NO_INDEX_FFS(items item_order_ix) */ order_id
  FROM order_items items;
</pre></div>
<!-- class="sect3" -->
<a id="BABCCFIC"></a>
<div id="SQLRF50414" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_INDEX_SS Hint <a id="sthref589"></a><a id="sthref590"></a></h3>
<img width="654" height="58" src="img/no_index_ss_hint.gif" alt="Description of no_index_ss_hint.gif follows"/><br/>
<a id="sthref591" href="img_text/no_index_ss_hint.htm">Description of the illustration &#39;&#39;no_index_ss_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_INDEX_SS</code> hint instructs the optimizer to exclude a skip scan of the specified indexes on the specified table. Each parameter serves the same purpose as in the <a href="#BABHJBIB">&#34;NO_INDEX Hint&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL238" href="../TGSQL/tgsql_optop.htm#TGSQL238"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for information on index skip scans</div>
</div>
<!-- class="sect3" -->
<a id="CHDDJAJD"></a>
<div id="SQLRF56790" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_INMEMORY Hint<a id="sthref592"></a><a id="sthref593"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">NO_INMEMORY</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="504" height="46" src="img/no_inmemory_hint.gif" alt="Description of no_inmemory_hint.gif follows"/><br/>
<a id="sthref594" href="img_text/no_inmemory_hint.htm">Description of the illustration &#39;&#39;no_inmemory_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_INMEMORY</code> hint disables in-memory queries.</p>
</div>
<!-- class="sect3" -->
<a id="CHDDCIBF"></a>
<div id="SQLRF56791" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_INMEMORY_PRUNING Hint<a id="sthref595"></a><a id="sthref596"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">NO_INMEMORY_PRUNING</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="564" height="46" src="img/no_inmemory_pruning_hint.gif" alt="Description of no_inmemory_pruning_hint.gif follows"/><br/>
<a id="sthref597" href="img_text/no_inmemory_pruning_hint.htm">Description of the illustration &#39;&#39;no_inmemory_pruning_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_INMEMORY_PRUNING</code> hint disables pruning of in-memory queries.</p>
</div>
<!-- class="sect3" -->
<a id="BABCGJDI"></a>
<div id="SQLRF50507" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_MERGE Hint <a id="sthref598"></a><a id="sthref599"></a></h3>
<img width="562" height="98" src="img/no_merge_hint.gif" alt="Description of no_merge_hint.gif follows"/><br/>
<a id="sthref600" href="img_text/no_merge_hint.htm">Description of the illustration &#39;&#39;no_merge_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_MERGE</code> hint instructs the optimizer not to combine the outer query and any inline view queries into a single query.</p>
<p>This hint lets you have more influence over the way in which the view is accessed. For example, the following statement causes view <code dir="ltr">seattle_dept</code> not to be merged:</p>
<pre dir="ltr">SELECT /*+ NO_MERGE(seattle_dept) */ e1.last_name, seattle_dept.department_name
  FROM employees e1,
       (SELECT location_id, department_id, department_name
          FROM departments
          WHERE location_id = 1700) seattle_dept
  WHERE e1.department_id = seattle_dept.department_id;
</pre>
<p>When you use the <code dir="ltr">NO_MERGE</code> hint in the view query block, specify it without an argument. When you specify <code dir="ltr">NO_MERGE</code> in the surrounding query, specify it with the view name as an argument.</p>
</div>
<!-- class="sect3" -->
<a id="BABICIEC"></a>
<div id="SQLRF51112" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_MONITOR Hint <a id="sthref601"></a><a id="sthref602"></a></h3>
<img width="195" height="27" src="img/no_monitor_hint.gif" alt="Description of no_monitor_hint.gif follows"/><br/>
<a id="sthref603" href="img_text/no_monitor_hint.htm">Description of the illustration &#39;&#39;no_monitor_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_MONITOR</code> hint disables real-time SQL monitoring for the query, even if the query is long running.</p>
</div>
<!-- class="sect3" -->
<a id="BABDGDFD"></a>
<div id="SQLRF51113" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_NATIVE_FULL_OUTER_JOIN Hint</h3>
<img width="294" height="27" src="img/no_native_foj_hint.gif" alt="Description of no_native_foj_hint.gif follows"/><br/>
<a id="sthref604" href="img_text/no_native_foj_hint.htm">Description of the illustration &#39;&#39;no_native_foj_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_NATIVE_FULL_OUTER_JOIN</code> hint instructs the optimizer to exclude the native execution method when joining each specified table. Instead, the full outer join is executed as a union of left outer join and anti-join.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABDFDGH">NATIVE_FULL_OUTER_JOIN Hint</a></div>
</div>
<!-- class="sect3" -->
<a id="BABFGFCB"></a>
<div id="SQLRF50802" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PARALLEL Hint <a id="sthref605"></a><a id="sthref606"></a><a id="sthref607"></a><a id="sthref608"></a></h3>
<img width="499" height="46" src="img/no_parallel_hint.gif" alt="Description of no_parallel_hint.gif follows"/><br/>
<a id="sthref609" href="img_text/no_parallel_hint.htm">Description of the illustration &#39;&#39;no_parallel_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_PARALLEL</code> hint instructs the optimizer to run the statement serially. This hint overrides the value of the <code dir="ltr">PARALLEL_DEGREE_POLICY</code> initialization parameter. It also overrides a <code dir="ltr">PARALLEL</code> parameter in the DDL that created or altered the table. For example, the following <code dir="ltr">SELECT</code> statement will run serially:</p>
<pre dir="ltr">ALTER TABLE employees PARALLEL 8;
SELECT /*+ NO_PARALLEL(hr_emp) */ last_name
  FROM employees hr_emp;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CHDGEGFI">&#34;Note on Parallel Hints&#34;</a> for more information on the parallel hints</p>
</li>
<li>
<p><a class="olink REFRN10310" href="../REFRN/GUID-BF09265F-8545-40D4-BD29-E58D5F02B0E5.htm#REFRN10310"><span class="italic">Oracle Database Reference</span></a> for more information on the <code dir="ltr">PARALLEL_DEGREE_POLICY</code> initialization parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<div id="SQLRF51114" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref610"></a>
<h3 class="sect3">NOPARALLEL Hint</h3>
<p>The <code dir="ltr">NOPARALLEL</code> hint has been deprecated. Use the <code dir="ltr">NO_PARALLEL</code> hint instead.</p>
</div>
<!-- class="sect3" -->
<a id="BABCEGBC"></a>
<div id="SQLRF50805" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PARALLEL_INDEX Hint <a id="sthref611"></a><a id="sthref612"></a><a id="sthref613"></a><a id="sthref614"></a></h3>
<img width="695" height="58" src="img/no_parallel_index_hint.gif" alt="Description of no_parallel_index_hint.gif follows"/><br/>
<a id="sthref615" href="img_text/no_parallel_index_hint.htm">Description of the illustration &#39;&#39;no_parallel_index_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_PARALLEL_INDEX</code> hint overrides a <code dir="ltr">PARALLEL</code> parameter in the DDL that created or altered the index, thus avoiding a parallel index scan operation.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGEGFI">&#34;Note on Parallel Hints&#34;</a> for more information on the parallel hints</div>
</div>
<!-- class="sect3" -->
<div id="SQLRF51115" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref616"></a>
<h3 class="sect3">NOPARALLEL_INDEX Hint</h3>
<p>The <code dir="ltr">NOPARALLEL_INDEX</code> hint has been deprecated. Use the <code dir="ltr">NO_PARALLEL_INDEX</code> hint instead.</p>
</div>
<!-- class="sect3" -->
<a id="BABHBAAG"></a>
<div id="SQLRF56068" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PQ_CONCURRENT_UNION Hint<a id="sthref617"></a><a id="sthref618"></a></h3>
<img width="513" height="46" src="img/no_pq_concurrent_union_hint.gif" alt="Description of no_pq_concurrent_union_hint.gif follows"/><br/>
<a id="sthref619" href="img_text/no_pq_concurrent_union_hint.htm">Description of the illustration &#39;&#39;no_pq_concurrent_union_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">NO_PQ_CONCURRENT_UNION</code> hint instructs the optimizer to disable concurrent processing of <code dir="ltr">UNION</code> and <code dir="ltr">UNION</code> <code dir="ltr">ALL</code> operations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABBIGEF">&#34;PQ_CONCURRENT_UNION Hint&#34;</a></p>
</li>
<li>
<p><a class="olink VLDBG14131" href="../VLDBG/GUID-1F4C90F9-3EF5-423A-B55B-2593FB3F1433.htm#VLDBG14131"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for information about using this hint</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABDFBBI"></a>
<div id="SQLRF56395" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PQ_SKEW Hint<a id="sthref620"></a><a id="sthref621"></a></h3>
<img width="498" height="46" src="img/no_pq_skew_hint.gif" alt="Description of no_pq_skew_hint.gif follows"/><br/>
<a id="sthref622" href="img_text/no_pq_skew_hint.htm">Description of the illustration &#39;&#39;no_pq_skew_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_PQ_SKEW</code> hint advises the optimizer that the distribution of the values of the join keys for a parallel join is not skewed&mdash;that is, a high percentage of rows do not have the same join key values. The table specified in <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> is the probe table of the hash join.</p>
</div>
<!-- class="sect3" -->
<a id="BABGJBJC"></a>
<div id="SQLRF50908" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PUSH_PRED Hint <a id="sthref623"></a><a id="sthref624"></a></h3>
<img width="590" height="98" src="img/no_push_pred_hint.gif" alt="Description of no_push_pred_hint.gif follows"/><br/>
<a id="sthref625" href="img_text/no_push_pred_hint.htm">Description of the illustration &#39;&#39;no_push_pred_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_PUSH_PRED</code> hint instructs the optimizer not to push a join predicate into the view. For example:</p>
<pre dir="ltr">SELECT /*+ NO_MERGE(v) NO_PUSH_PRED(v) */ *
  FROM employees e,
       (SELECT manager_id
          FROM employees) v
  WHERE e.manager_id = v.manager_id(+)
    AND e.employee_id = 100;
</pre></div>
<!-- class="sect3" -->
<a id="BABGCGBJ"></a>
<div id="SQLRF50910" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PUSH_SUBQ Hint <a id="sthref626"></a><a id="sthref627"></a></h3>
<img width="437" height="46" src="img/no_push_subq_hint.gif" alt="Description of no_push_subq_hint.gif follows"/><br/>
<a id="sthref628" href="img_text/no_push_subq_hint.htm">Description of the illustration &#39;&#39;no_push_subq_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">NO_PUSH_SUBQ</code> hint instructs the optimizer to evaluate nonmerged subqueries as the last step in the execution plan. Doing so can improve performance if the subquery is relatively expensive or does not reduce the number of rows significantly.</p>
</div>
<!-- class="sect3" -->
<a id="CHDHJAAA"></a>
<div id="SQLRF50586" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_PX_JOIN_FILTER Hint <a id="sthref629"></a><a id="sthref630"></a></h3>
<img width="369" height="27" src="img/no_px_join_filter_hint.gif" alt="Description of no_px_join_filter_hint.gif follows"/><br/>
<a id="sthref631" href="img_text/no_px_join_filter_hint.htm">Description of the illustration &#39;&#39;no_px_join_filter_hint.gif&#39;&#39;</a><br/>
<br/>
<p>This hint prevents the optimizer from using parallel join bitmap filtering.</p>
</div>
<!-- class="sect3" -->
<a id="BABGDAGI"></a>
<div id="SQLRF50512" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_QUERY_TRANSFORMATION Hint <a id="sthref632"></a><a id="sthref633"></a></h3>
<img width="294" height="27" src="img/no_query_transformatn_hint.gif" alt="Description of no_query_transformatn_hint.gif follows"/><br/>
<a id="sthref634" href="img_text/no_query_transformatn_hint.htm">Description of the illustration &#39;&#39;no_query_transformatn_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_QUERY_TRANSFORMATION</code> hint instructs the optimizer to skip all query transformations, including but not limited to <code dir="ltr">OR</code>-expansion, view merging, subquery unnesting, star transformation, and materialized view rewrite. For example:</p>
<pre dir="ltr">SELECT /*+ NO_QUERY_TRANSFORMATION */ employee_id, last_name
  FROM (SELECT * FROM employees e) v
  WHERE v.last_name = &#39;Smith&#39;;
</pre></div>
<!-- class="sect3" -->
<a id="BABGGHJH"></a>
<div id="SQLRF20005" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_RESULT_CACHE Hint <a id="sthref635"></a><a id="sthref636"></a></h3>
<img width="232" height="27" src="img/no_result_cache_hint.gif" alt="Description of no_result_cache_hint.gif follows"/><br/>
<a id="sthref637" href="img_text/no_result_cache_hint.htm">Description of the illustration &#39;&#39;no_result_cache_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The optimizer caches query results in the result cache if the <code dir="ltr">RESULT_CACHE_MODE</code> initialization parameter is set to <code dir="ltr">FORCE</code>. In this case, the <code dir="ltr">NO_RESULT_CACHE</code> hint disables such caching for the current query.</p>
<p>If the query is executed from OCI client and OCI client result cache is enabled, then the <code dir="ltr">NO_RESULT_CACHE</code> hint disables caching for the current query.</p>
</div>
<!-- class="sect3" -->
<a id="BABDGHCG"></a>
<div id="SQLRF50505" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_REWRITE Hint <a id="sthref638"></a><a id="sthref639"></a><a id="sthref640"></a><a id="sthref641"></a></h3>
<img width="419" height="46" src="img/no_rewrite_hint.gif" alt="Description of no_rewrite_hint.gif follows"/><br/>
<a id="sthref642" href="img_text/no_rewrite_hint.htm">Description of the illustration &#39;&#39;no_rewrite_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">NO_REWRITE</code> hint instructs the optimizer to disable query rewrite for the query block, overriding the setting of the parameter <code dir="ltr">QUERY_REWRITE_ENABLED</code>. For example:</p>
<pre dir="ltr">SELECT /*+ NO_REWRITE */ sum(s.amount_sold) AS dollars
  FROM sales s, times t
  WHERE s.time_id = t.time_id
  GROUP BY t.calendar_month_desc;
</pre></div>
<!-- class="sect3" -->
<div id="SQLRF51116" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref643"></a>
<h3 class="sect3">NOREWRITE Hint</h3>
<p>The <code dir="ltr">NOREWRITE</code> hint has been deprecated. Use the <code dir="ltr">NO_REWRITE</code> hint instead.</p>
</div>
<!-- class="sect3" -->
<a id="BABGGEGD"></a>
<div id="SQLRF50511" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_STAR_TRANSFORMATION Hint <a id="sthref644"></a><a id="sthref645"></a></h3>
<img width="510" height="46" src="img/no_star_transformation_hint.gif" alt="Description of no_star_transformation_hint.gif follows"/><br/>
<a id="sthref646" href="img_text/no_star_transformation_hint.htm">Description of the illustration &#39;&#39;no_star_transformation_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">NO_STAR_TRANSFORMATION</code> hint instructs the optimizer not to perform star query transformation.</p>
</div>
<!-- class="sect3" -->
<a id="BABCJCEC"></a>
<div id="SQLRF55588" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_STATEMENT_QUEUING Hint<a id="sthref647"></a><a id="sthref648"></a></h3>
<img width="270" height="27" src="img/no_statement_queuing_hint.gif" alt="Description of no_statement_queuing_hint.gif follows"/><br/>
<a id="sthref649" href="img_text/no_statement_queuing_hint.htm">Description of the illustration &#39;&#39;no_statement_queuing_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_STATEMENT_QUEUING</code> hint influences whether or not a statement is queued with parallel statement queuing.</p>
<p>When <code dir="ltr">PARALLEL_DEGREE_POLICY</code> is set to <code dir="ltr">AUTO</code>, this hint enables a statement to bypass the parallel statement queue. However, a statement that bypasses the statement queue can potentially cause the system to exceed the maximum number of parallel execution servers defined by the value of the <code dir="ltr">PARALLEL_SERVERS_TARGET</code> initialization parameter, which determines the limit at which parallel statement queuing is initiated.</p>
<p>There is no guarantee that the statement that bypasses the parallel statement queue receives the number of parallel execution servers requested because only the number of parallel execution servers available on the system, up to the value of the <code dir="ltr">PARALLEL_MAX_SERVERS</code> initialization parameter, can be allocated.</p>
<p>For example:</p>
<pre dir="ltr">SELECT /*+ NO_STATEMENT_QUEUING */ emp.last_name, dpt.department_name
  FROM employees emp, departments dpt
  WHERE emp.department_id = dpt.department_id;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIBCFA">&#34;STATEMENT_QUEUING Hint&#34;</a></div>
</div>
<!-- class="sect3" -->
<a id="BABHJEFG"></a>
<div id="SQLRF50906" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_UNNEST Hint <a id="sthref650"></a><a id="sthref651"></a></h3>
<img width="414" height="46" src="img/no_unnest_hint.gif" alt="Description of no_unnest_hint.gif follows"/><br/>
<a id="sthref652" href="img_text/no_unnest_hint.htm">Description of the illustration &#39;&#39;no_unnest_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>Use of the <code dir="ltr">NO_UNNEST</code> hint turns off unnesting .</p>
</div>
<!-- class="sect3" -->
<a id="CHDHBGEF"></a>
<div id="SQLRF55589" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_USE_CUBE Hint<a id="sthref653"></a><a id="sthref654"></a></h3>
<img width="534" height="46" src="img/no_use_cube_hint.gif" alt="Description of no_use_cube_hint.gif follows"/><br/>
<a id="sthref655" href="img_text/no_use_cube_hint.htm">Description of the illustration &#39;&#39;no_use_cube_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_USE_CUBE</code> hint instructs the optimizer to exclude cube joins when joining each specified table to another row source using the specified table as the inner table.</p>
</div>
<!-- class="sect3" -->
<a id="BABDBCEG"></a>
<div id="SQLRF50711" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_USE_HASH Hint <a id="sthref656"></a><a id="sthref657"></a></h3>
<img width="534" height="46" src="img/no_use_hash_hint.gif" alt="Description of no_use_hash_hint.gif follows"/><br/>
<a id="sthref658" href="img_text/no_use_hash_hint.htm">Description of the illustration &#39;&#39;no_use_hash_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_USE_HASH</code> hint instructs the optimizer to exclude hash joins when joining each specified table to another row source using the specified table as the inner table. For example:</p>
<pre dir="ltr">SELECT /*+ NO_USE_HASH(e d) */ *
  FROM employees e, departments d
  WHERE e.department_id = d.department_id;
</pre></div>
<!-- class="sect3" -->
<a id="BABEGJAG"></a>
<div id="SQLRF50710" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_USE_MERGE Hint <a id="sthref659"></a><a id="sthref660"></a></h3>
<img width="544" height="46" src="img/no_use_merge_hint.gif" alt="Description of no_use_merge_hint.gif follows"/><br/>
<a id="sthref661" href="img_text/no_use_merge_hint.htm">Description of the illustration &#39;&#39;no_use_merge_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_USE_MERGE</code> hint instructs the optimizer to exclude sort-merge joins when joining each specified table to another row source using the specified table as the inner table. For example:</p>
<pre dir="ltr">SELECT /*+ NO_USE_MERGE(e d) */ *
   FROM employees e, departments d
   WHERE e.department_id = d.department_id
   ORDER BY d.department_id;
</pre></div>
<!-- class="sect3" -->
<a id="BABEDHIF"></a>
<div id="SQLRF50708" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_USE_NL Hint <a id="sthref662"></a><a id="sthref663"></a></h3>
<img width="517" height="46" src="img/no_use_nl_hint.gif" alt="Description of no_use_nl_hint.gif follows"/><br/>
<a id="sthref664" href="img_text/no_use_nl_hint.htm">Description of the illustration &#39;&#39;no_use_nl_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_USE_NL</code> hint instructs the optimizer to exclude nested loops joins when joining each specified table to another row source using the specified table as the inner table. For example:</p>
<pre dir="ltr">SELECT /*+ NO_USE_NL(l h) */ *
  FROM orders h, order_items l
  WHERE l.order_id = h.order_id
    AND l.order_id &gt; 2400;
</pre>
<p>When this hint is specified, only hash join and sort-merge joins are considered for the specified tables. However, in some cases tables can be joined only by using nested loops. In such cases, the optimizer ignores the hint for those tables.</p>
</div>
<!-- class="sect3" -->
<a id="BABGDHBD"></a>
<div id="SQLRF51117" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_XML_QUERY_REWRITE Hint<a id="sthref665"></a><a id="sthref666"></a></h3>
<img width="270" height="27" src="img/no_xml_query_rewrite_hint.gif" alt="Description of no_xml_query_rewrite_hint.gif follows"/><br/>
<a id="sthref667" href="img_text/no_xml_query_rewrite_hint.htm">Description of the illustration &#39;&#39;no_xml_query_rewrite_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_XML_QUERY_REWRITE</code> hint instructs the optimizer to prohibit the rewriting of XPath expressions in SQL statements. By prohibiting the rewriting of XPath expressions, this hint also prohibits the use of any XMLIndexes for the current query. For example:</p>
<pre dir="ltr">SELECT /*+NO_XML_QUERY_REWRITE*/ XMLQUERY(&#39;&lt;A/&gt;&#39; RETURNING CONTENT)
  FROM DUAL;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABFAHGE">&#34;NO_XMLINDEX_REWRITE Hint&#34;</a></div>
</div>
<!-- class="sect3" -->
<a id="BABFAHGE"></a>
<div id="SQLRF51118" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_XMLINDEX_REWRITE Hint <a id="sthref668"></a><a id="sthref669"></a></h3>
<img width="258" height="27" src="img/no_xmlindex_rewrite_hint.gif" alt="Description of no_xmlindex_rewrite_hint.gif follows"/><br/>
<a id="sthref670" href="img_text/no_xmlindex_rewrite_hint.htm">Description of the illustration &#39;&#39;no_xmlindex_rewrite_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_XMLINDEX_REWRITE</code> hint instructs the optimizer not to use any XMLIndex indexes for the current query. For example:</p>
<pre dir="ltr">SELECT /*+NO_XMLINDEX_REWRITE*/ count(*) 
  FROM warehouses
  WHERE existsNode(warehouse_spec, &#39;/Warehouse/Building&#39;) = 1;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABGDHBD">&#34;NO_XML_QUERY_REWRITE Hint&#34;</a> for another way to disable the use of XMLIndexes</div>
</div>
<!-- class="sect3" -->
<a id="CHDGDJEC"></a>
<div id="SQLRF56846" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">NO_ZONEMAP Hint<a id="sthref671"></a><a id="sthref672"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">NO_ZONEMAP</code> hint is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<img width="616" height="91" src="img/no_zonemap_hint.gif" alt="Description of no_zonemap_hint.gif follows"/><br/>
<a id="sthref673" href="img_text/no_zonemap_hint.htm">Description of the illustration &#39;&#39;no_zonemap_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">NO_ZONEMAP</code> hint disables the use of a zone map for different types of pruning. This hint overrides an <code dir="ltr">ENABLE</code> <code dir="ltr">PRUNING</code> setting in the DDL that created or altered the zone map.</p>
<p>Specify one of the following options:</p>
<ul>
<li>
<p><code dir="ltr">SCAN</code> - Disables the use of a zone map for scan pruning.</p>
</li>
<li>
<p><code dir="ltr">JOIN</code> - Disables the use of a zone map for join pruning.</p>
</li>
<li>
<p><code dir="ltr">PARTITION</code> - Disables the use of a zone map for partition pruning.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_6004.htm#CACEAADH">ENABLE | DISABLE PRUNING</a> clause of <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code></p>
</li>
<li>
<p><a class="olink DWHSG9164" href="../DWHSG/zone_maps.htm#DWHSG9164"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on pruning with zone maps</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABEBAID"></a>
<div id="SQLRF51119" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">OPT_PARAM Hint <a id="sthref674"></a><a id="sthref675"></a></h3>
<img width="548" height="48" src="img/opt_param_hint.gif" alt="Description of opt_param_hint.gif follows"/><br/>
<a id="sthref676" href="img_text/opt_param_hint.htm">Description of the illustration &#39;&#39;opt_param_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">OPT_PARAM</code> hint lets you set an initialization parameter for the duration of the current query only. This hint is valid only for the following parameters: <code dir="ltr">OPTIMIZER_DYNAMIC_SAMPLING</code>, <code dir="ltr">OPTIMIZER_INDEX_CACHING</code>, <code dir="ltr">OPTIMIZER_INDEX_COST_ADJ</code>, <code dir="ltr">OPTIMIZER_SECURE_VIEW_MERGING</code>, and <code dir="ltr">STAR_TRANSFORMATION_ENABLED</code>. For example, the following hint sets the parameter <code dir="ltr">STAR_TRANSFORMATION_ENABLED</code> to <code dir="ltr">TRUE</code> for the statement to which it is added:</p>
<pre dir="ltr">SELECT /*+ OPT_PARAM(&#39;star_transformation_enabled&#39; &#39;true&#39;) */ *
  FROM ... ;
</pre>
<p>Parameter values that are strings are enclosed in single quotation marks. Numeric parameter values are specified without quotation marks.</p>
</div>
<!-- class="sect3" -->
<a id="BABIJGJF"></a>
<div id="SQLRF50601" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">ORDERED Hint <a id="sthref677"></a><a id="sthref678"></a></h3>
<img width="175" height="27" src="img/ordered_hint.gif" alt="Description of ordered_hint.gif follows"/><br/>
<a id="sthref679" href="img_text/ordered_hint.htm">Description of the illustration &#39;&#39;ordered_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">ORDERED</code> hint instructs Oracle to join tables in the order in which they appear in the <code dir="ltr">FROM</code> clause. Oracle recommends that you use the <code dir="ltr">LEADING</code> hint, which is more versatile than the <code dir="ltr">ORDERED</code> hint.</p>
<p>When you omit the <code dir="ltr">ORDERED</code> hint from a SQL statement requiring a join, the optimizer chooses the order in which to join the tables. You might want to use the <code dir="ltr">ORDERED</code> hint to specify a join order if you know something that the optimizer does not know about the number of rows selected from each table. Such information lets you choose an inner and outer table better than the optimizer could.</p>
<p>The following query is an example of the use of the <code dir="ltr">ORDERED</code> hint:</p>
<pre dir="ltr">SELECT  /*+ ORDERED */ o.order_id, c.customer_id, l.unit_price * l.quantity
  FROM customers c, order_items l, orders o
  WHERE c.cust_last_name = &#39;Taylor&#39;
    AND o.customer_id = c.customer_id
    AND o.order_id = l.order_id;
</pre></div>
<!-- class="sect3" -->
<a id="BABHFDDH"></a>
<div id="SQLRF50801" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PARALLEL Hint <a id="sthref680"></a><a id="sthref681"></a><a id="sthref682"></a></h3>
<p><a id="CHDGEGFI"></a><a id="SQLRF51120"></a><span class="subhead3">Note on Parallel Hints&nbsp;</span>Beginning with Oracle Database 11<span class="italic">g</span> Release 2, the <code dir="ltr">PARALLEL</code> and <code dir="ltr">NO_PARALLEL</code> hints are statement-level hints and supersede the earlier object-level hints: <code dir="ltr">PARALLEL_INDEX</code>, <code dir="ltr">NO_PARALLEL_INDEX</code>, and previously specified <code dir="ltr">PARALLEL</code> and <code dir="ltr">NO_PARALLEL</code> hints. For <code dir="ltr">PARALLEL</code>, if you specify <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, then that degree of parallelism will be used for the statement. If you omit <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, then the database computes the degree of parallelism. All the access paths that can use parallelism will use the specified or computed degree of parallelism.</p>
<p>In the syntax diagrams below, <code dir="ltr"><span class="codeinlineitalic">parallel_hint_statement</span></code> shows the syntax for statement-level hints, and <code dir="ltr"><span class="codeinlineitalic">parallel_hint_object</span></code> shows the syntax for object-level hints. Object-level hints are supported for backward compatibility, and are superseded by statement-level hints.</p>
<p class="subhead2"><a id="SQLRF51121"></a><span class="italic">parallel_hint_statement</span>::=</p>
<img width="392" height="143" src="img/parallel_hint_statement.gif" alt="Description of parallel_hint_statement.gif follows"/><br/>
<a id="sthref683" href="img_text/parallel_hint_statement.htm">Description of the illustration &#39;&#39;parallel_hint_statement.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF51122"></a><span class="italic">parallel_hint_object</span>::=</p>
<img width="631" height="79" src="img/parallel_hint_object.gif" alt="Description of parallel_hint_object.gif follows"/><br/>
<a id="sthref684" href="img_text/parallel_hint_object.htm">Description of the illustration &#39;&#39;parallel_hint_object.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">PARALLEL</code> hint instructs the optimizer to use the specified number of concurrent servers for a parallel operation. This hint overrides the value of the <code dir="ltr">PARALLEL_DEGREE_POLICY</code> initialization parameter. It applies to the <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">MERGE</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> portions of a statement, as well as to the table scan portion. If any parallel restrictions are violated, then the hint is ignored.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The number of servers that can be used is twice the value in the <code dir="ltr">PARALLEL</code> hint, if sorting or grouping operations also take place.</div>
<p>For a <span class="bold">statement-level PARALLEL hint</span>:</p>
<ul>
<li>
<p><code dir="ltr">PARALLEL</code>: The statement always is run parallel, and the database computes the degree of parallelism, which can be 2 or greater.</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> (<code dir="ltr">DEFAULT</code>): The optimizer calculates a degree of parallelism equal to the number of CPUs available on all participating instances times the value of the <code dir="ltr">PARALLEL_THREADS_PER_CPU</code> initialization parameter.</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> (<code dir="ltr">AUTO</code>): The database computes the degree of parallelism, which can be 1 or greater. If the computed degree of parallelism is 1, then the statement runs serially.</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> (<code dir="ltr">MANUAL</code>): The optimizer is forced to use the parallel settings of the objects in the statement.</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> (<code dir="ltr"><span class="codeinlineitalic">integer</span></code>): The optimizer uses the degree of parallelism specified by <code dir="ltr"><span class="codeinlineitalic">integer</span></code>.</p>
</li>
</ul>
<p>In the following example, the optimizer calculates the degree of parallelism. The statement always runs in parallel.</p>
<pre dir="ltr">SELECT /*+ PARALLEL */ last_name
  FROM employees;
</pre>
<p>In the following example, the optimizer calculates the degree of parallelism, but that degree may be 1, in which case the statement will run serially.</p>
<pre dir="ltr">SELECT /*+ PARALLEL (AUTO) */ last_name
  FROM employees;
</pre>
<p>In the following example, the <code dir="ltr">PARALLEL</code> hint advises the optimizer to use the degree of parallelism currently in effect for the table itself, which is 5:</p>
<pre dir="ltr">CREATE TABLE parallel_table (col1 number, col2 VARCHAR2(10)) PARALLEL 5; 

SELECT /*+ PARALLEL (MANUAL) */ col2
  FROM parallel_table;
</pre>
<p>For an <span class="bold">object-level PARALLEL hint</span>:</p>
<ul>
<li>
<p><code dir="ltr">PARALLEL</code>: The query coordinator should examine the settings of the initialization parameters to determine the default degree of parallelism.</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> (<code dir="ltr"><span class="codeinlineitalic">integer</span></code>): The optimizer uses the degree of parallelism specified by <code dir="ltr"><span class="codeinlineitalic">integer</span></code>.</p>
</li>
<li>
<p><code dir="ltr">PARALLEL</code> (<code dir="ltr">DEFAULT</code>): The optimizer calculates a degree of parallelism equal to the number of CPUs available on all participating instances times the value of the <code dir="ltr">PARALLEL_THREADS_PER_CPU</code> initialization parameter.</p>
</li>
</ul>
<p>In the following example, the <code dir="ltr">PARALLEL</code> hint overrides the degree of parallelism specified in the <code dir="ltr">employees</code> table definition:</p>
<pre dir="ltr">SELECT /*+ FULL(hr_emp) PARALLEL(hr_emp, 5) */ last_name
  FROM employees hr_emp;
</pre>
<p>In the next example, the <code dir="ltr">PARALLEL</code> hint overrides the degree of parallelism specified in the <code dir="ltr">employees</code> table definition and instructs the optimizer to calculate a degree of parallelism equal to the number of CPUs available on all participating instances times the value of the <code dir="ltr">PARALLEL_THREADS_PER_CPU</code> initialization parameter.</p>
<pre dir="ltr">SELECT /*+ FULL(hr_emp) PARALLEL(hr_emp, DEFAULT) */ last_name
  FROM employees hr_emp;
</pre>
<p>Refer to <a href="statements_7002.htm#i2095331">CREATE TABLE</a> and <a class="olink CNCPT1475" href="../CNCPT/process.htm#CNCPT1475"><span class="italic">Oracle Database Concepts</span></a> for more information on parallel execution.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#i2095331">CREATE TABLE</a> and <a class="olink CNCPT1475" href="../CNCPT/process.htm#CNCPT1475"><span class="italic">Oracle Database Concepts</span></a> for more information on parallel execution.</p>
</li>
<li>
<p><a class="olink ARPLS233" href="../ARPLS/d_parallel_ex.htm#ARPLS233"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information on the <code dir="ltr">DBMS_PARALLEL_EXECUTE</code> package, which provides methods to apply table changes in chunks of rows. Changes to each chunk are independently committed when there are no errors.</p>
</li>
<li>
<p><a class="olink REFRN10310" href="../REFRN/GUID-BF09265F-8545-40D4-BD29-E58D5F02B0E5.htm#REFRN10310"><span class="italic">Oracle Database Reference</span></a> for more information on the <code dir="ltr">PARALLEL_DEGREE_POLICY</code> initialization parameter</p>
</li>
<li>
<p><a href="#BABFGFCB">NO_PARALLEL Hint</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABIAFEI"></a>
<div id="SQLRF50804" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PARALLEL_INDEX Hint <a id="sthref685"></a><a id="sthref686"></a></h3>
<img width="609" height="166" src="img/parallel_index_hint.gif" alt="Description of parallel_index_hint.gif follows"/><br/>
<a id="sthref687" href="img_text/parallel_index_hint.htm">Description of the illustration &#39;&#39;parallel_index_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="italic">indexspec</span>::=</a>)</p>
<p>The <code dir="ltr">PARALLEL_INDEX</code> hint instructs the optimizer to use the specified number of concurrent servers to parallelize index range scans, full scans, and fast full scans for partitioned indexes.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">integer</span></code> value indicates the degree of parallelism for the specified index. Specifying <code dir="ltr">DEFAULT</code> or no value signifies that the query coordinator should examine the settings of the initialization parameters to determine the default degree of parallelism. For example, the following hint indicates three parallel execution processes are to be used:</p>
<pre dir="ltr">SELECT /*+ PARALLEL_INDEX(table1, index1, 3) */
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGEGFI">&#34;Note on Parallel Hints&#34;</a> for more information on the parallel hints</div>
</div>
<!-- class="sect3" -->
<a id="BABBIGEF"></a>
<div id="SQLRF56069" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PQ_CONCURRENT_UNION Hint<a id="sthref688"></a><a id="sthref689"></a></h3>
<img width="491" height="46" src="img/pq_concurrent_union_hint.gif" alt="Description of pq_concurrent_union_hint.gif follows"/><br/>
<a id="sthref690" href="img_text/pq_concurrent_union_hint.htm">Description of the illustration &#39;&#39;pq_concurrent_union_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">PQ_CONCURRENT_UNION</code> hint instructs the optimizer to enable concurrent processing of <code dir="ltr">UNION</code> and <code dir="ltr">UNION</code> <code dir="ltr">ALL</code> operations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABHBAAG">&#34;NO_PQ_CONCURRENT_UNION Hint&#34;</a></p>
</li>
<li>
<p><a class="olink VLDBG14131" href="../VLDBG/GUID-1F4C90F9-3EF5-423A-B55B-2593FB3F1433.htm#VLDBG14131"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for information about using this hint</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABCJHAF"></a>
<div id="SQLRF50803" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PQ_DISTRIBUTE Hint <a id="sthref691"></a><a id="sthref692"></a><a id="sthref693"></a><a id="sthref694"></a></h3>
<img width="767" height="64" src="img/pq_distribute_hint.gif" alt="Description of pq_distribute_hint.gif follows"/><br/>
<a id="sthref695" href="img_text/pq_distribute_hint.htm">Description of the illustration &#39;&#39;pq_distribute_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">PQ_DISTRIBUTE</code> hint instructs the optimizer how to distribute rows among producer and consumer query servers. You can control the distribution of rows for either joins or for load.</p>
<p><a id="SQLRF51123"></a><span class="subhead3">Control of Distribution for Load&nbsp;</span>You can control the distribution of rows for parallel <code dir="ltr">INSERT</code> ... <code dir="ltr">SELECT</code> and parallel <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">AS</code> <code dir="ltr">SELECT</code> statements to direct how rows should be distributed between the producer (query) and the consumer (load) servers. Use the upper branch of the syntax by specifying a single distribution method. The values of the distribution methods and their semantics are described in <a href="#CHDCAGHI">Table 2-22</a>.</p>
<div id="SQLRF51124" class="tblhruleformal">
<p class="titleintable"><a id="sthref696"></a><a id="CHDCAGHI"></a>Table 2-22 Distribution Values for Load</p>
<table class="cellalignment5872" title="Distribution Values for Load" summary="This table lists the six viable distributions for load in the first column and describes the behavior of each distribution in the second column." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t120">Distribution</th>
<th class="cellalignment5873" id="r1c2-t120">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t120" headers="r1c1-t120">
<p><code dir="ltr">NONE</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t120 r1c2-t120">
<p>No distribution. That is the query and load operation are combined into each query server. All servers will load all partitions. This lack of distribution is useful to avoid the overhead of distributing rows where there is no skew. Skew can occur due to empty segments or to a predicate in the statement that filters out all rows evaluated by the query. If skew occurs due to using this method, then use either <code dir="ltr">RANDOM</code> or <code dir="ltr">RANDOM_LOCAL</code> distribution instead.</p>
<p><span class="bold">Note</span>: Use this distribution with care. Each partition loaded requires a minimum of 512 KB per process of PGA memory. If you also use compression, then approximately 1.5 MB of PGA memory is consumer per server.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t120" headers="r1c1-t120">
<p><code dir="ltr">PARTITION</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t120 r1c2-t120">
<p>This method uses the partitioning information of <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> to distribute the rows from the query servers to the load servers. Use this distribution method when it is not possible or desirable to combine the query and load operations, when the number of partitions being loaded is greater than or equal to the number of load servers, and the input data will be evenly distributed across the partitions being loaded&mdash;that is, there is no skew.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t120" headers="r1c1-t120">
<p><code dir="ltr">RANDOM</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t120 r1c2-t120">
<p>This method distributes the rows from the producers in a round-robin fashion to the consumers. Use this distribution method when the input data is highly skewed.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t120" headers="r1c1-t120">
<p><code dir="ltr">RANDOM_LOCAL</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t120 r1c2-t120">
<p>This method distributes the rows from the producers to a set of servers that are responsible for maintaining a given set of partitions. Two or more servers can be loading the same partition, but no servers are loading all partitions. Use this distribution method when the input data is skewed and combining query and load operations is not possible due to memory constraints.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p>For example, in the following direct-path insert operation, the query and load portions of the operation are combined into each query server:</p>
<pre dir="ltr">INSERT /*+ APPEND PARALLEL(target_table, 16) PQ_DISTRIBUTE(target_table, NONE) */
  INTO target_table
  SELECT * FROM source_table;
 
</pre>
<p>In the following table creation example, the optimizer uses the partitioning of target_table to distribute the rows:</p>
<pre dir="ltr">CREATE /*+ PQ_DISTRIBUTE(target_table, PARTITION) */ TABLE target_table
  NOLOGGING PARALLEL 16
  PARTITION BY HASH (l_orderkey) PARTITIONS 512
  AS SELECT * FROM source_table; 
</pre>
<p><a id="SQLRF51125"></a><span class="subhead3">Control of Distribution for Joins&nbsp;</span>You control the distribution method for joins by specifying two distribution methods, as shown in the lower branch of the syntax diagram, one distribution for the outer table and one distribution for the inner table.</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">outer_distribution</span></code> is the distribution for the outer table.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">inner_distribution</span></code> is the distribution for the inner table.</p>
</li>
</ul>
<p>The values of the distributions are <code dir="ltr">HASH</code>, <code dir="ltr">BROADCAST</code>, <code dir="ltr">PARTITION</code>, and <code dir="ltr">NONE</code>. Only six combinations table distributions are valid, as described in <a href="#BABCCEJI">Table 2-23</a>:</p>
<div id="SQLRF51126" class="tblhruleformal">
<p class="titleintable"><a id="sthref697"></a><a id="BABCCEJI"></a>Table 2-23 Distribution Values for Joins</p>
<table class="cellalignment5872" title="Distribution Values for Joins" summary="This table lists the six viable distribution combinations for joins in the first column and describes the behavior of each combination in the second column." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t121">Distribution</th>
<th class="cellalignment5873" id="r1c2-t121">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t121" headers="r1c1-t121">
<p><code dir="ltr">HASH</code>, <code dir="ltr">HASH</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t121 r1c2-t121">
<p>The rows of each table are mapped to consumer query servers, using a hash function on the join keys. When mapping is complete, each query server performs the join between a pair of resulting partitions. This distribution is recommended when the tables are comparable in size and the join operation is implemented by hash-join or sort merge join.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t121" headers="r1c1-t121">
<p><code dir="ltr">BROADCAST</code>, <code dir="ltr">NONE</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t121 r1c2-t121">
<p>All rows of the outer table are broadcast to each query server. The inner table rows are randomly partitioned. This distribution is recommended when the outer table is very small compared with the inner table. As a general rule, use this distribution when the inner table size multiplied by the number of query servers is greater than the outer table size.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t121" headers="r1c1-t121">
<p><code dir="ltr">NONE</code>, <code dir="ltr">BROADCAST</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t121 r1c2-t121">
<p>All rows of the inner table are broadcast to each consumer query server. The outer table rows are randomly partitioned. This distribution is recommended when the inner table is very small compared with the outer table. As a general rule, use this distribution when the inner table size multiplied by the number of query servers is less than the outer table size.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t121" headers="r1c1-t121">
<p><code dir="ltr">PARTITION</code>, <code dir="ltr">NONE</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t121 r1c2-t121">
<p>The rows of the outer table are mapped using the partitioning of the inner table. The inner table must be partitioned on the join keys. This distribution is recommended when the number of partitions of the outer table is equal to or nearly equal to a multiple of the number of query servers; for example, 14 partitions and 15 query servers.</p>
<p><span class="bold">Note</span>: The optimizer ignores this hint if the inner table is not partitioned or not equijoined on the partitioning key.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t121" headers="r1c1-t121">
<p><code dir="ltr">NONE</code>, <code dir="ltr">PARTITION</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t121 r1c2-t121">
<p>The rows of the inner table are mapped using the partitioning of the outer table. The outer table must be partitioned on the join keys. This distribution is recommended when the number of partitions of the outer table is equal to or nearly equal to a multiple of the number of query servers; for example, 14 partitions and 15 query servers.</p>
<p><span class="bold">Note</span>: The optimizer ignores this hint if the outer table is not partitioned or not equijoined on the partitioning key.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t121" headers="r1c1-t121">
<p><code dir="ltr">NONE</code>, <code dir="ltr">NONE</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t121 r1c2-t121">
<p>Each query server performs the join operation between a pair of matching partitions, one from each table. Both tables must be equipartitioned on the join keys.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p>For example, given two tables <code dir="ltr">r</code> and <code dir="ltr">s</code> that are joined using a hash join, the following query contains a hint to use hash distribution:</p>
<pre dir="ltr">SELECT /*+ORDERED PQ_DISTRIBUTE(s HASH, HASH) USE_HASH (s)*/ <span class="italic">column_list</span>
  FROM r,s
  WHERE r.c=s.c;
</pre>
<p>To broadcast the outer table <code dir="ltr">r</code>, the query is:</p>
<pre dir="ltr">SELECT /*+ORDERED PQ_DISTRIBUTE(s BROADCAST, NONE) USE_HASH (s) */ <span class="italic">column_list</span>
  FROM r,s
  WHERE r.c=s.c;
</pre></div>
<!-- class="sect3" -->
<a id="BABICDJE"></a>
<div id="SQLRF56396" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PQ_FILTER Hint<a id="sthref698"></a><a id="sthref699"></a></h3>
<img width="348" height="123" src="img/pq_filter_hint.gif" alt="Description of pq_filter_hint.gif follows"/><br/>
<a id="sthref700" href="img_text/pq_filter_hint.htm">Description of the illustration &#39;&#39;pq_filter_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">PQ_FILTER</code> hint instructs the optimizer on how to process rows when filtering correlated subqueries.</p>
<ul>
<li>
<p><code dir="ltr">SERIAL</code>: Process rows serially on the left and right sides of the filter. Use this option when the overhead of parallelization is too high for the query, for example, when the left side has very few rows.</p>
</li>
<li>
<p><code dir="ltr">NONE</code>: Process rows in parallel on the left and right sides of the filter. Use this option when there is no skew in the distribution of the data on the left side of the filter and you would like to avoid distribution of the left side, for example, due to the large size of the left side.</p>
</li>
<li>
<p><code dir="ltr">HASH</code>: Process rows in parallel on the left side of the filter using a hash distribution. Process rows serially on the right side of the filter. Use this option when there is no skew in the distribution of data on the left side of the filter.</p>
</li>
<li>
<p><code dir="ltr">RANDOM</code>: Process rows in parallel on the left side of the filter using a random distribution. Process rows serially on the right side of the filter. Use this option when there is skew in the distribution of data on the left side of the filter.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABHFHAC"></a>
<div id="SQLRF56397" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PQ_SKEW Hint<a id="sthref701"></a><a id="sthref702"></a></h3>
<img width="475" height="46" src="img/pq_skew_hint.gif" alt="Description of pq_skew_hint.gif follows"/><br/>
<a id="sthref703" href="img_text/pq_skew_hint.htm">Description of the illustration &#39;&#39;pq_skew_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">PQ_SKEW</code> hint advises the optimizer that the distribution of the values of the join keys for a parallel join is highly skewed&mdash;that is, a high percentage of rows have the same join key values. The table specified in <code dir="ltr"><span class="codeinlineitalic">tablespec</span></code> is the probe table of the hash join.</p>
</div>
<!-- class="sect3" -->
<a id="BABHAAJE"></a>
<div id="SQLRF50907" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PUSH_PRED Hint <a id="sthref704"></a><a id="sthref705"></a></h3>
<img width="565" height="98" src="img/push_pred_hint.gif" alt="Description of push_pred_hint.gif follows"/><br/>
<a id="sthref706" href="img_text/push_pred_hint.htm">Description of the illustration &#39;&#39;push_pred_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">PUSH_PRED</code> hint instructs the optimizer to push a join predicate into the view. For example:</p>
<pre dir="ltr">SELECT /*+ NO_MERGE(v) PUSH_PRED(v) */ *
  FROM employees e,
    (SELECT manager_id
      FROM employees) v
  WHERE e.manager_id = v.manager_id(+)
    AND e.employee_id = 100;
</pre></div>
<!-- class="sect3" -->
<a id="BABBBABA"></a>
<div id="SQLRF50909" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PUSH_SUBQ Hint <a id="sthref707"></a><a id="sthref708"></a></h3>
<img width="414" height="46" src="img/push_subq_hint.gif" alt="Description of push_subq_hint.gif follows"/><br/>
<a id="sthref709" href="img_text/push_subq_hint.htm">Description of the illustration &#39;&#39;push_subq_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">PUSH_SUBQ</code> hint instructs the optimizer to evaluate nonmerged subqueries at the earliest possible step in the execution plan. Generally, subqueries that are not merged are executed as the last step in the execution plan. If the subquery is relatively inexpensive and reduces the number of rows significantly, then evaluating the subquery earlier can improve performance.</p>
<p>This hint has no effect if the subquery is applied to a remote table or one that is joined using a merge join.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBBAEF"></a>
<div id="SQLRF50585" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">PX_JOIN_FILTER Hint <a id="sthref710"></a><a id="sthref711"></a></h3>
<img width="345" height="27" src="img/px_join_filter_hint.gif" alt="Description of px_join_filter_hint.gif follows"/><br/>
<a id="sthref712" href="img_text/px_join_filter_hint.htm">Description of the illustration &#39;&#39;px_join_filter_hint.gif&#39;&#39;</a><br/>
<br/>
<p>This hint forces the optimizer to use parallel join bitmap filtering.</p>
</div>
<!-- class="sect3" -->
<a id="BABJIFFH"></a>
<div id="SQLRF50917" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">QB_NAME Hint <a id="sthref713"></a><a id="sthref714"></a></h3>
<img width="315" height="27" src="img/qb_name_hint.gif" alt="Description of qb_name_hint.gif follows"/><br/>
<a id="sthref715" href="img_text/qb_name_hint.htm">Description of the illustration &#39;&#39;qb_name_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>Use the <code dir="ltr">QB_NAME</code> hint to define a name for a query block. This name can then be used in a hint in the outer query or even in a hint in an inline view to affect query execution on the tables appearing in the named query block.</p>
<p>If two or more query blocks have the same name, or if the same query block is hinted twice with different names, then the optimizer ignores all the names and the hints referencing that query block. Query blocks that are not named using this hint have unique system-generated names. These names can be displayed in the plan table and can also be used in hints within the query block, or in query block hints. For example:</p>
<pre dir="ltr">SELECT /*+ QB_NAME(qb) FULL(@qb e) */ employee_id, last_name
  FROM employees e
  WHERE last_name = &#39;Smith&#39;;
</pre></div>
<!-- class="sect3" -->
<a id="BABIFIGC"></a>
<div id="SQLRF20004" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">RESULT_CACHE Hint <a id="sthref716"></a></h3>
<img width="209" height="27" src="img/result_cache_hint.gif" alt="Description of result_cache_hint.gif follows"/><br/>
<a id="sthref717" href="img_text/result_cache_hint.htm">Description of the illustration &#39;&#39;result_cache_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">RESULT_CACHE</code> hint instructs the database to cache the results of the current query or query fragment in memory and then to use the cached results in future executions of the query or query fragment. The hint is recognized in the top-level query, the <code dir="ltr"><span class="codeinlineitalic">subquery_factoring_clause</span></code>, or <code dir="ltr">FROM</code> clause inline view. The cached results reside in the result cache memory portion of the shared pool.</p>
<p>A cached result is automatically invalidated whenever a database object used in its creation is successfully modified. This hint takes precedence over settings of the <code dir="ltr">RESULT_CACHE_MODE</code> initialization parameter.</p>
<p>The query is eligible for result caching only if all functions entailed in the query&mdash;for example, built-in or user-defined functions or virtual columns&mdash;are deterministic.</p>
<p>If the query is executed from OCI client and OCI client result cache is enabled, then <code dir="ltr">RESULT_CACHE</code> hint enables client caching for the current query.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGDBA616" href="../TGDBA/tune_result_cache.htm#TGDBA616"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about using this hint, <span class="italic">Oracle Database Reference</span> for information about the <a class="olink REFRN10270" href="../REFRN/GUID-DEC2BDE4-8CF4-4378-A04C-6EE50A0FA250.htm#REFRN10270"><code dir="ltr">RESULT_CACHE_MODE</code></a> initialization parameter, and <a class="olink LNOCI10103" href="../LNOCI/oci10new.htm#LNOCI10103"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for more information about the OCI result cache and usage guidelines</div>
</div>
<!-- class="sect3" -->
<a id="CHDFBEJF"></a>
<div id="SQLRF30054" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">RETRY_ON_ROW_CHANGE Hint <a id="sthref718"></a></h3>
<img width="270" height="27" src="img/retry_on_row_change.gif" alt="Description of retry_on_row_change.gif follows"/><br/>
<a id="sthref719" href="img_text/retry_on_row_change.htm">Description of the illustration &#39;&#39;retry_on_row_change.gif&#39;&#39;</a><br/>
<br/>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">CHANGE_DUPKEY_ERROR_INDEX</code>, <code dir="ltr">IGNORE_ROW_ON_DUPKEY_INDEX</code>, and <code dir="ltr">RETRY_ON_ROW_CHANGE</code> hints are unlike other hints in that they have a semantic effect. The general philosophy explained in <a href="#i35922">&#34;Hints&#34;</a> does not apply for these three hints.</div>
<p>This hint is valid only for <code dir="ltr">UPDATE</code> and <code dir="ltr">DELETE</code> operations. It is not supported for <code dir="ltr">INSERT</code> or <code dir="ltr">MERGE</code> operations. When you specify this hint, the operation is retried when the <code dir="ltr">ORA_ROWSCN</code> for one or more rows in the set has changed from the time the set of rows to be modified is determined to the time the block is actually modified.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDEGDDG">IGNORE_ROW_ON_DUPKEY_INDEX Hint</a> and <a href="#CHDIFFJE">CHANGE_DUPKEY_ERROR_INDEX Hint</a></div>
</div>
<!-- class="sect3" -->
<a id="BABCGGDD"></a>
<div id="SQLRF50503" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">REWRITE Hint <a id="sthref720"></a></h3>
<img width="524" height="67" src="img/rewrite_hint.gif" alt="Description of rewrite_hint.gif follows"/><br/>
<a id="sthref721" href="img_text/rewrite_hint.htm">Description of the illustration &#39;&#39;rewrite_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">REWRITE</code> hint instructs the optimizer to rewrite a query in terms of materialized views, when possible, without cost consideration. Use the <code dir="ltr">REWRITE</code> hint with or without a view list. If you use <code dir="ltr">REWRITE</code> with a view list and the list contains an eligible materialized view, then Oracle uses that view regardless of its cost.</p>
<p>Oracle does not consider views outside of the list. If you do not specify a view list, then Oracle searches for an eligible materialized view and always uses it regardless of the cost of the final plan.<a id="sthref722"></a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT411" href="../CNCPT/schemaob.htm#CNCPT411"><span class="italic">Oracle Database Concepts</span></a> and <a class="olink REPLN101" href="../REPLN/repplan.htm#REPLN101"><span class="italic">Oracle Database Advanced Replication</span></a> for more information on materialized views</p>
</li>
<li>
<p><a class="olink DWHSG018" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG018"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on using <code dir="ltr">REWRITE</code> with materialized views</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABBHHGE"></a>
<div id="SQLRF50508" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">STAR_TRANSFORMATION Hint <a id="sthref723"></a><a id="sthref724"></a></h3>
<img width="487" height="46" src="img/star_transformation_hint.gif" alt="Description of star_transformation_hint.gif follows"/><br/>
<a id="sthref725" href="img_text/star_transformation_hint.htm">Description of the illustration &#39;&#39;star_transformation_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">STAR_TRANSFORMATION</code> hint instructs the optimizer to use the best plan in which the transformation has been used. Without the hint, the optimizer could make a query optimization decision to use the best plan generated without the transformation, instead of the best plan for the transformed query. For example:</p>
<pre dir="ltr">SELECT /*+ STAR_TRANSFORMATION */ s.time_id, s.prod_id, s.channel_id
  FROM sales s, times t, products p, channels c
  WHERE s.time_id = t.time_id
    AND s.prod_id = p.prod_id
    AND s.channel_id = c.channel_id
    AND c.channel_desc = &#39;Tele Sales&#39;;
</pre>
<p>Even if the hint is specified, there is no guarantee that the transformation will take place. The optimizer generates the subqueries only if it seems reasonable to do so. If no subqueries are generated, then there is no transformed query, and the best plan for the untransformed query is used, regardless of the hint.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DWHSG019" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG019"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for a full discussion of star transformation.</p>
</li>
<li>
<p><a class="olink REFRN10213" href="../REFRN/GUID-B2E6145D-164A-4453-9839-0F6E6442A922.htm#REFRN10213"><span class="italic">Oracle Database Reference</span></a> for more information on the <code dir="ltr"><a id="sthref726"></a>STAR_TRANSFORMATION_ENABLED</code> initialization parameter.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABIBCFA"></a>
<div id="SQLRF55590" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">STATEMENT_QUEUING Hint<a id="sthref727"></a><a id="sthref728"></a></h3>
<img width="246" height="27" src="img/statement_queuing_hint.gif" alt="Description of statement_queuing_hint.gif follows"/><br/>
<a id="sthref729" href="img_text/statement_queuing_hint.htm">Description of the illustration &#39;&#39;statement_queuing_hint.gif&#39;&#39;</a><br/>
<br/>
<p>The <code dir="ltr">NO_STATEMENT_QUEUING</code> hint influences whether or not a statement is queued with parallel statement queuing.</p>
<p>When <code dir="ltr">PARALLEL_DEGREE_POLICY</code> is not set to <code dir="ltr">AUTO</code>, this hint enables a statement to be considered for parallel statement queuing, but to run only when enough parallel processes are available to run at the requested DOP. The number of available parallel execution servers, before queuing is enabled, is equal to the difference between the number of parallel execution servers in use and the maximum number allowed in the system, which is defined by the <code dir="ltr">PARALLEL_SERVERS_TARGET</code> initialization parameter.</p>
<p>For example:</p>
<pre dir="ltr">SELECT /*+ STATEMENT_QUEUING */ emp.last_name, dpt.department_name
  FROM employees emp, departments dpt
  WHERE emp.department_id = dpt.department_id;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABCJCEC">&#34;NO_STATEMENT_QUEUING Hint&#34;</a></div>
</div>
<!-- class="sect3" -->
<a id="BABHEGEI"></a>
<div id="SQLRF50905" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">UNNEST Hint <a id="sthref730"></a><a id="sthref731"></a></h3>
<img width="390" height="46" src="img/unnest_hint.gif" alt="Description of unnest_hint.gif follows"/><br/>
<a id="sthref732" href="img_text/unnest_hint.htm">Description of the illustration &#39;&#39;unnest_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">UNNEST</code> hint instructs the optimizer to unnest and merge the body of the subquery into the body of the query block that contains it, allowing the optimizer to consider them together when evaluating access paths and joins.</p>
<p>Before a subquery is unnested, the optimizer first verifies whether the statement is valid. The statement must then pass heuristic and query optimization tests. The <code dir="ltr">UNNEST</code> hint instructs the optimizer to check the subquery block for validity only. If the subquery block is valid, then subquery unnesting is enabled without checking the heuristics or costs.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_10002.htm#i2071637">&#34;Collection Unnesting: Examples&#34;</a> for more information on unnesting nested subqueries and the conditions that make a subquery block valid</p>
</li>
<li>
<p><a class="olink TGSQL211" href="../TGSQL/tgsql_transform.htm#TGSQL211"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for additional information on subquery unnesting</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABIAFIB"></a>
<div id="SQLRF50501" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">USE_CONCAT Hint <a id="sthref733"></a><a id="sthref734"></a></h3>
<img width="421" height="46" src="img/use_concat_hint.gif" alt="Description of use_concat_hint.gif follows"/><br/>
<a id="sthref735" href="img_text/use_concat_hint.htm">Description of the illustration &#39;&#39;use_concat_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>)</p>
<p>The <code dir="ltr">USE_CONCAT</code> hint instructs the optimizer to transform combined <code dir="ltr">OR</code>-conditions in the <code dir="ltr">WHERE</code> clause of a query into a compound query using the <code dir="ltr">UNION</code> <code dir="ltr">ALL</code> set operator. Without this hint, this transformation occurs only if the cost of the query using the concatenations is cheaper than the cost without them. The <code dir="ltr">USE_CONCAT</code> hint overrides the cost consideration. For example:</p>
<pre dir="ltr">SELECT /*+ USE_CONCAT */ *
  FROM employees e
  WHERE manager_id = 108
     OR department_id = 110;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <a href="#BABHBECB">&#34;NO_EXPAND Hint&#34;</a>, which is the opposite of this hint</div>
</div>
<!-- class="sect3" -->
<a id="CHDCDDAC"></a>
<div id="SQLRF55591" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">USE_CUBE Hint<a id="sthref736"></a><a id="sthref737"></a></h3>
<img width="511" height="46" src="img/use_cube_hint.gif" alt="Description of use_cube_hint.gif follows"/><br/>
<a id="sthref738" href="img_text/use_cube_hint.htm">Description of the illustration &#39;&#39;use_cube_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>When the right-hand side of the join is a cube, the <code dir="ltr">USE_CUBE</code> hint instructs the optimizer to join each specified table with another row source using a cube join. If the optimizer decides not to use the cube join based on statistical analysis, then you can use <code dir="ltr">USE_CUBE</code> to override that decision.</p>
</div>
<!-- class="sect3" -->
<a id="BABBABGJ"></a>
<div id="SQLRF50703" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">USE_HASH Hint <a id="sthref739"></a><a id="sthref740"></a></h3>
<img width="511" height="46" src="img/use_hash_hint.gif" alt="Description of use_hash_hint.gif follows"/><br/>
<a id="sthref741" href="img_text/use_hash_hint.htm">Description of the illustration &#39;&#39;use_hash_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">USE_HASH</code> hint instructs the optimizer to join each specified table with another row source using a hash join. For example:</p>
<pre dir="ltr">SELECT /*+ USE_HASH(l h) */ *
  FROM orders h, order_items l
  WHERE l.order_id = h.order_id
    AND l.order_id &gt; 2400;
</pre></div>
<!-- class="sect3" -->
<a id="BABIAAFJ"></a>
<div id="SQLRF50702" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">USE_MERGE Hint <a id="sthref742"></a><a id="sthref743"></a></h3>
<img width="520" height="46" src="img/use_merge_hint.gif" alt="Description of use_merge_hint.gif follows"/><br/>
<a id="sthref744" href="img_text/use_merge_hint.htm">Description of the illustration &#39;&#39;use_merge_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">USE_MERGE</code> hint instructs the optimizer to join each specified table with another row source using a sort-merge join. For example:</p>
<pre dir="ltr">SELECT /*+ USE_MERGE(employees departments) */ * 
  FROM employees, departments 
  WHERE employees.department_id = departments.department_id;
</pre>
<p>Use of the <code dir="ltr">USE_NL</code> and <code dir="ltr">USE_MERGE</code> hints is recommended with the <code dir="ltr">LEADING</code> and <code dir="ltr">ORDERED</code> hints. The optimizer uses those hints when the referenced table is forced to be the inner table of a join. The hints are ignored if the referenced table is the outer table.</p>
</div>
<!-- class="sect3" -->
<a id="BABDDFHC"></a>
<div id="SQLRF50701" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">USE_NL Hint <a id="sthref745"></a><a id="sthref746"></a></h3>
<p>The <code dir="ltr">USE_NL</code> hint instructs the optimizer to join each specified table to another row source with a nested loops join, using the specified table as the inner table.</p>
<img width="494" height="46" src="img/use_nl_hint.gif" alt="Description of use_nl_hint.gif follows"/><br/>
<a id="sthref747" href="img_text/use_nl_hint.htm">Description of the illustration &#39;&#39;use_nl_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>)</p>
<p>The <code dir="ltr">USE_NL</code> hint instructs the optimizer to join each specified table to another row source with a nested loops join, using the specified table as the inner table.</p>
<p>Use of the <code dir="ltr">USE_NL</code> and <code dir="ltr">USE_MERGE</code> hints is recommended with the <code dir="ltr">LEADING</code> and <code dir="ltr">ORDERED</code> hints. The optimizer uses those hints when the referenced table is forced to be the inner table of a join. The hints are ignored if the referenced table is the outer table.</p>
<p>In the following example, where a nested loop is forced through a hint, <code dir="ltr">orders</code> is accessed through a full table scan and the filter condition <code dir="ltr">l.order_id = h.order_id</code> is applied to every row. For every row that meets the filter condition, <code dir="ltr">order_items</code> is accessed through the index <code dir="ltr">order_id</code>.</p>
<pre dir="ltr">SELECT /*+ USE_NL(l h) */ h.customer_id, l.unit_price * l.quantity
  FROM orders h, order_items l
  WHERE l.order_id = h.order_id;
</pre>
<p>Adding an <code dir="ltr">INDEX</code> hint to the query could avoid the full table scan on <code dir="ltr">orders</code>, resulting in an execution plan similar to one used on larger systems, even though it might not be particularly efficient here.</p>
</div>
<!-- class="sect3" -->
<a id="BABHJEIH"></a>
<div id="SQLRF50709" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">USE_NL_WITH_INDEX Hint <a id="sthref748"></a><a id="sthref749"></a></h3>
<img width="694" height="58" src="img/use_nl_with_index_hint.gif" alt="Description of use_nl_with_index_hint.gif follows"/><br/>
<a id="sthref750" href="img_text/use_nl_with_index_hint.htm">Description of the illustration &#39;&#39;use_nl_with_index_hint.gif&#39;&#39;</a><br/>
<br/>
<p>(See <a href="#BABEBCAA">&#34;Specifying a Query Block in a Hint&#34;</a>, <a href="#BABIEJEB"><span class="xreftitleitalic"><span class="italic">tablespec</span>::=</span></a>, <a href="#BABGFHCH"><span class="xreftitleitalic"><span class="italic">indexspec</span>::=</span></a>)</p>
<p>The <code dir="ltr">USE_NL_WITH_INDEX</code> hint instructs the optimizer to join the specified table to another row source with a nested loops join using the specified table as the inner table. For example:</p>
<pre dir="ltr">SELECT /*+ USE_NL_WITH_INDEX(l item_product_ix) */ *
  FROM orders h, order_items l
  WHERE l.order_id = h.order_id
    AND l.order_id &gt; 2400;
</pre>
<p>The following conditions apply:</p>
<ul>
<li>
<p>If no index is specified, then the optimizer must be able to use some index with at least one join predicate as the index key.</p>
</li>
<li>
<p>If an index is specified, then the optimizer must be able to use that index with at least one join predicate as the index key.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="sql_elements005.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="sql_elements007.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>