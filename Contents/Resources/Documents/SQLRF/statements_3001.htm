<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103612"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/ALTER%20TABLE"></a><title>ALTER TABLE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:35Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="statements_3.htm" title="Previous" type="text/html"/>
<link rel="Next" href="statements_3002.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">401/555</span> <!-- End Header --><a id="CJAHHIBI"></a>
<div id="SQLRF01001" class="refsect1">
<h1 class="refsect1">ALTER TABLE <a id="sthref3695"></a></h1>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3696"></a>Purpose</p>
<p>Use the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement to alter the definition of a nonpartitioned table, a partitioned table, a table partition, or a table subpartition. For object tables or relational tables with object columns, use <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> to convert the table to the latest definition of its referenced type after the type has been altered.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you use the <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> <code dir="ltr">LOG</code> statement, rather than <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>, whenever possible for operations on materialized view log tables.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#i2095331">CREATE TABLE</a> for information on creating tables</p>
</li>
<li>
<p><a class="olink CCREF0100" href="../CCREF/csql.htm#CCREF0100"><span class="italic">Oracle Text Reference</span></a> for information on <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements in conjunction with Oracle Text</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3697"></a>Additional Topics:</p>
<ul>
<li>
<p><a href="#i2096214">Prerequisites</a></p>
</li>
<li>
<p><a href="#i2054940">Syntax</a></p>
</li>
<li>
<p><a href="#i2055366">Semantics</a></p>
</li>
<li>
<p><a href="#i2109868">Examples</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2096214"></a>Prerequisites</p>
<p>The table must be in your own schema, or you must have <code dir="ltr">ALTER</code> object privilege on the table, or you must have <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
<p><a id="i2175468"></a><a id="SQLRF53167"></a><span class="subhead3">Additional Prerequisites for Partitioning Operations&nbsp;</span>If you are not the owner of the table, then you need the <code dir="ltr">DROP</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> privilege in order to use the <code dir="ltr"><span class="codeinlineitalic">drop_table_partition</span></code> or <code dir="ltr"><span class="codeinlineitalic">truncate_table_partition</span></code> clause.</p>
<p>You must also have space quota in the tablespace in which space is to be acquired in order to use the <code dir="ltr"><span class="codeinlineitalic">add_table_partition</span></code>, <code dir="ltr"><span class="codeinlineitalic">modify_table_partition</span></code>, <code dir="ltr"><span class="codeinlineitalic">move_table_partition</span></code>, and <code dir="ltr"><span class="codeinlineitalic">split_table_partition</span></code> clauses.</p>
<p>When a partitioning operation cascades to reference-partitioned child tables, privileges are not required on the reference-partitioned child tables.</p>
<p>When using the <code dir="ltr"><span class="codeinlineitalic">exchange_partition_subpart</span></code> clause, if the table data being exchanged contains an identity column and you are not the owner of both tables involved in the exchange, then you must have the <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">SEQUENCE</code> system privilege.</p>
<p><a id="SQLRF53168"></a><span class="subhead3">Additional Prerequisites for Constraints and Triggers&nbsp;</span>To enable a unique or primary key constraint, you must have the privileges necessary to create an index on the table. You need these privileges because Oracle Database creates an index on the columns of the unique or primary key in the schema containing the table.</p>
<p>To enable or disable triggers, the triggers must be in your schema or you must have the <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">TRIGGER</code> system privilege.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_5013.htm#i2062403">CREATE INDEX</a> for information on the privileges needed to create indexes</div>
<p><a id="SQLRF53169"></a><span class="subhead3">Additional Prerequisites When Using Object Types&nbsp;</span>To use an object type in a column definition when modifying a table, either that object must belong to the same schema as the table being altered, or you must have either the <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege or the <code dir="ltr">EXECUTE</code> object privilege for the object type.</p>
<p><a id="SQLRF53170"></a><span class="subhead3">Additional Prerequisites for Flashback Data Archive Operations&nbsp;</span>To use the <code dir="ltr"><span class="codeinlineitalic">flashback_archive_clause</span></code> to <span class="italic">enable</span> historical tracking for the table, you must have the <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> object privilege on the flashback data archive that will contain the historical data. To use the <code dir="ltr"><span class="codeinlineitalic">flashback_archive_clause</span></code> to <span class="italic">disable</span> historical tracking for the table, you must have the <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> <code dir="ltr">ADMINSTER</code> system privilege or you must be logged in as <code dir="ltr">SYSDBA</code>.</p>
<p><a id="SQLRF56324"></a><span class="subhead3">Additional Prerequisite for Referring to Editioned Objects&nbsp;</span>To specify an edition in the <code dir="ltr"><span class="codeinlineitalic">evaluation_edition_clause</span></code> or the <code dir="ltr"><span class="codeinlineitalic">unusable_editions_clause</span></code>, you must have the <code dir="ltr">USE</code> privilege on the edition.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2054940"></a>Syntax</p>
<p class="subhead2"><a id="SQLRF53171"></a><span class="italic">alter_table</span>::=</p>
<img width="636" height="315" src="img/alter_table.gif" alt="Description of alter_table.gif follows"/><br/>
<a id="sthref3698" href="img_text/alter_table.htm">Description of the illustration &#39;&#39;alter_table.gif&#39;&#39;</a><br/>
<br/>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must specify some clause after <code dir="ltr"><span class="codeinlineitalic">table</span></code>. None of the clauses after <code dir="ltr"><span class="codeinlineitalic">table</span></code> are required, but you must specify at least one of them.</div>
<p><span class="bold">Groups of ALTER TABLE syntax:</span></p>
<ul>
<li>
<p><a href="#i2192749"><span class="xreftitleboldital"><span class="italic">alter_table_properties</span>::=</span></a></p>
</li>
<li>
<p><a href="#i2103924"><span class="xreftitleboldital"><span class="italic">column_clauses</span>::=</span></a></p>
</li>
<li>
<p><a href="#i2103997"><span class="xreftitleboldital"><span class="italic">constraint_clauses</span>::=</span></a></p>
</li>
<li>
<p><a href="#i2087440"><span class="xreftitleboldital"><span class="italic">alter_table_partitioning</span> ::=</span></a></p>
</li>
<li>
<p><a href="#i2104234"><span class="xreftitleboldital"><span class="italic">alter_external_table</span> ::=</span></a></p>
</li>
<li>
<p><a href="#i2081902"><span class="xreftitleboldital"><span class="italic">move_table_clause</span> ::=</span></a></p>
</li>
<li>
<p><a href="#CJACHAEB"><span class="xreftitleboldital"><span class="italic">modify_opaque_type</span>::=</span></a></p>
</li>
<li>
<p><a href="#i2183600"><span class="xreftitleboldital"><span class="italic">enable_disable_clause</span>::=</span></a></p>
</li>
</ul>
<p>After each clause you will find links to its component subclauses.</p>
<p class="subhead2"><a id="i2192749"></a><a id="SQLRF53172"></a><a href="#i2081087"><span class="xreftitleitalic"><span class="italic">alter_table_properties</span></span></a>::=</p>
<img width="853" height="881" src="img/alter_table_properties.gif" alt="Description of alter_table_properties.gif follows"/><br/>
<a id="sthref3699" href="img_text/alter_table_properties.htm">Description of the illustration &#39;&#39;alter_table_properties.gif&#39;&#39;</a><br/>
<br/>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you specify the <code dir="ltr">MODIFY</code> <code dir="ltr">CLUSTERING</code> clause, then you must specify at least one of the clauses <code dir="ltr"><span class="codeinlineitalic">clustering_when</span></code> or <code dir="ltr"><span class="codeinlineitalic">zonemap_clause</span></code>.</div>
<p>(<a href="#i2125989"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span>::=</span></a>, <a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>, <a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CIHCGDHI"><span class="xreftitleitalic"><span class="italic">inmemory_alter_table_clause</span>::=</span></a>, <a href="#CJAJEHJB"><span class="xreftitleitalic"><span class="italic">ilm_clause</span>::=</span></a>, <a href="#CJAGFCDI"><span class="xreftitleitalic"><span class="italic">supplemental_table_logging</span> ::=</span></a>, <a href="#i2082029"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span> ::=</span></a>, <a href="#i2082041"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span>::=</span></a> , <a href="#i2125849"><span class="xreftitleitalic"><span class="italic">upgrade_table_clause</span> ::=</span></a>, <a href="#i2125860"><span class="xreftitleitalic"><span class="italic">records_per_block_clause</span> ::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#i2185568"><span class="xreftitleitalic"><span class="italic">row_movement_clause</span>::=</span></a>, <a href="#BABGJGBH"><span class="xreftitleitalic"><span class="italic">flashback_archive_clause</span>::=</span></a>, <a href="#i2192658"><span class="xreftitleitalic"><span class="italic">shrink_clause</span>::=</span></a>, <a href="#CIHCFFAA"><span class="xreftitleitalic"><span class="italic">attribute_clustering_clause</span>::=</span></a>, <a href="#CIHGJGFC"><span class="xreftitleitalic"><span class="italic">clustering_when</span>::=</span></a>, <a href="#CIHDIEII"><span class="xreftitleitalic"><span class="italic">zonemap_clause</span>::=</span></a>, <a href="#i2183406"><span class="xreftitleitalic"><span class="italic">alter_iot_clauses</span>::=</span></a>, <a href="#CJAFJFJB"><span class="xreftitleitalic"><span class="italic">alter_XMLSchema_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2125989"></a><a id="SQLRF53173"></a><a href="#i2080299"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span></span></a>::=</p>
<img width="268" height="147" src="img/physical_attributes_clause.gif" alt="Description of physical_attributes_clause.gif follows"/><br/>
<a id="sthref3700" href="img_text/physical_attributes_clause.htm">Description of the illustration &#39;&#39;physical_attributes_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses009.htm#CJACEJGB"><span class="xreftitleitalic"><span class="italic">storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="SQLRF53174"></a><a href="#i2114766"><span class="xreftitleitalic"><span class="italic">logging_clause</span></span></a>::=</p>
<img width="237" height="91" src="img/logging_clause.gif" alt="Description of logging_clause.gif follows"/><br/>
<a id="sthref3701" href="img_text/logging_clause.htm">Description of the illustration &#39;&#39;logging_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2183370"></a><a id="SQLRF53175"></a><a href="#i2192353"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> ::=</p>
<img width="949" height="263" src="img/table_compression.gif" alt="Description of table_compression.gif follows"/><br/>
<a id="sthref3702" href="img_text/table_compression.htm">Description of the illustration &#39;&#39;table_compression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHCGDHI"></a><a id="SQLRF56746"></a><a href="#CIHJBAJD"><span class="xreftitleitalic"><span class="italic">inmemory_alter_table_clause</span></span></a>::=</p>
<img width="577" height="86" src="img/inmemory_alter_table_clause.gif" alt="Description of inmemory_alter_table_clause.gif follows"/><br/>
<a id="sthref3703" href="img_text/inmemory_alter_table_clause.htm">Description of the illustration &#39;&#39;inmemory_alter_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHDJFFF"><span class="xreftitleitalic"><span class="italic">inmemory_parameters</span>::=</span></a>, <a href="#CIHBIEJF"><span class="xreftitleitalic"><span class="italic">inmemory_column_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHDJFFF"></a><a id="SQLRF56928"></a><span class="italic">inmemory_parameters</span>::=</p>
<img width="735" height="37" src="img/inmemory_parameters.gif" alt="Description of inmemory_parameters.gif follows"/><br/>
<a id="sthref3704" href="img_text/inmemory_parameters.htm">Description of the illustration &#39;&#39;inmemory_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHJBHBF"><span class="xreftitleitalic"><span class="italic">inmemory_memcompress</span>::=</span></a>, <a href="#CIHICHFI"><span class="xreftitleitalic"><span class="italic">inmemory_priority</span>::=</span></a>, <a href="#CIHJFBEJ"><span class="xreftitleitalic"><span class="italic">inmemory_distribute</span>::=</span></a>, <a href="#CIHCGHEE"><span class="xreftitleitalic"><span class="italic">inmemory_duplicate</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHJBHBF"></a><a id="SQLRF56929"></a><span class="italic">inmemory_memcompress</span>::=</p>
<img width="496" height="159" src="img/inmemory_memcompress.gif" alt="Description of inmemory_memcompress.gif follows"/><br/>
<a id="sthref3705" href="img_text/inmemory_memcompress.htm">Description of the illustration &#39;&#39;inmemory_memcompress.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHICHFI"></a><a id="SQLRF56930"></a><span class="italic">inmemory_priority</span>::=</p>
<img width="208" height="156" src="img/inmemory_priority.gif" alt="Description of inmemory_priority.gif follows"/><br/>
<a id="sthref3706" href="img_text/inmemory_priority.htm">Description of the illustration &#39;&#39;inmemory_priority.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHJFBEJ"></a><a id="SQLRF56931"></a><span class="italic">inmemory_distribute</span>::=</p>
<img width="395" height="143" src="img/inmemory_distribute.gif" alt="Description of inmemory_distribute.gif follows"/><br/>
<a id="sthref3707" href="img_text/inmemory_distribute.htm">Description of the illustration &#39;&#39;inmemory_distribute.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHCGHEE"></a><a id="SQLRF56932"></a><span class="italic">inmemory_duplicate</span>::=</p>
<img width="232" height="79" src="img/inmemory_duplicate.gif" alt="Description of inmemory_duplicate.gif follows"/><br/>
<a id="sthref3708" href="img_text/inmemory_duplicate.htm">Description of the illustration &#39;&#39;inmemory_duplicate.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHBIEJF"></a><a id="SQLRF56748"></a><span class="italic">inmemory_column_clause</span>::=</p>
<img width="527" height="91" src="img/inmemory_column_clause.gif" alt="Description of inmemory_column_clause.gif follows"/><br/>
<a id="sthref3709" href="img_text/inmemory_column_clause.htm">Description of the illustration &#39;&#39;inmemory_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHJBHBF"><span class="xreftitleitalic"><span class="italic">inmemory_memcompress</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAJEHJB"></a><a id="SQLRF56565"></a><a href="#CJADBBDI"><span class="xreftitleitalic"><span class="italic">ilm_clause</span></span></a>::=</p>
<img width="378" height="220" src="img/ilm_clause.gif" alt="Description of ilm_clause.gif follows"/><br/>
<a id="sthref3710" href="img_text/ilm_clause.htm">Description of the illustration &#39;&#39;ilm_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56566"></a><a href="#CJAJGGED"><span class="xreftitleitalic"><span class="italic">ilm_policy_clause</span></span></a>::=</p>
<img width="195" height="58" src="img/ilm_policy_clause.gif" alt="Description of ilm_policy_clause.gif follows"/><br/>
<a id="sthref3711" href="img_text/ilm_policy_clause.htm">Description of the illustration &#39;&#39;ilm_policy_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHIGFFJ"><span class="xreftitleitalic"><span class="italic">ilm_compression_policy</span>::=</span></a>, <a href="#CIHCEEEI"><span class="xreftitleitalic"><span class="italic">ilm_tiering_policy</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHIGFFJ"></a><a id="SQLRF57054"></a><a href="#CIHIDGIG"><span class="xreftitleitalic"><span class="italic">ilm_compression_policy</span></span></a>::=</p>
<img width="767" height="156" src="img/ilm_compression_policy.gif" alt="Description of ilm_compression_policy.gif follows"/><br/>
<a id="sthref3712" href="img_text/ilm_compression_policy.htm">Description of the illustration &#39;&#39;ilm_compression_policy.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CIHHBJIG"><span class="xreftitleitalic"><span class="italic"><span class="italic">ilm_time_period</span></span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHCEEEI"></a><a id="SQLRF57055"></a><a href="#CJABDHAI"><span class="xreftitleitalic"><span class="italic">ilm_tiering_policy</span></span></a>::=</p>
<img width="926" height="208" src="img/ilm_tiering_policy.gif" alt="Description of ilm_tiering_policy.gif follows"/><br/>
<a id="sthref3713" href="img_text/ilm_tiering_policy.htm">Description of the illustration &#39;&#39;ilm_tiering_policy.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHHBJIG"><span class="xreftitleitalic"><span class="italic"><span class="italic">ilm_time_period</span></span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHHBJIG"></a><a id="SQLRF57056"></a><span class="italic"><a href="#CIHJCABI"><span class="xreftitleitalic"><span class="italic">ilm_time_period</span></span></a></span>::=</p>
<img width="216" height="187" src="img/ilm_time_period.gif" alt="Description of ilm_time_period.gif follows"/><br/>
<a id="sthref3714" href="img_text/ilm_time_period.htm">Description of the illustration &#39;&#39;ilm_time_period.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAGFCDI"></a><a id="SQLRF53176"></a><a href="#i2161487"><span class="xreftitleitalic"><span class="italic">supplemental_table_logging</span></span></a> ::=</p>
<img width="510" height="187" src="img/supplemental_table_logging.gif" alt="Description of supplemental_table_logging.gif follows"/><br/>
<a id="sthref3715" href="img_text/supplemental_table_logging.htm">Description of the illustration &#39;&#39;supplemental_table_logging.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2169618"></a><a id="SQLRF53177"></a><span class="italic">supplemental_log_grp_clause</span>::=</p>
<img width="577" height="79" src="img/supplemental_log_grp_clause.gif" alt="Description of supplemental_log_grp_clause.gif follows"/><br/>
<a id="sthref3716" href="img_text/supplemental_log_grp_clause.htm">Description of the illustration &#39;&#39;supplemental_log_grp_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAEJJAB"></a><a id="SQLRF53178"></a><span class="italic">supplemental_id_key_clause</span>::=</p>
<img width="407" height="156" src="img/supplemental_id_key_clause.gif" alt="Description of supplemental_id_key_clause.gif follows"/><br/>
<a id="sthref3717" href="img_text/supplemental_id_key_clause.htm">Description of the illustration &#39;&#39;supplemental_id_key_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2082029"></a><a id="SQLRF53179"></a><a href="#i2161596"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span></span></a> ::=</p>
<img width="550" height="123" src="img/allocate_extent_clause.gif" alt="Description of allocate_extent_clause.gif follows"/><br/>
<a id="sthref3718" href="img_text/allocate_extent_clause.htm">Description of the illustration &#39;&#39;allocate_extent_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses008.htm#CHDEAIID"><span class="xreftitleitalic"><span class="italic">size_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2082041"></a><a id="SQLRF53180"></a><a href="#i2080415"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span></span></a>::=</p>
<img width="383" height="46" src="img/deallocate_unused_clause.gif" alt="Description of deallocate_unused_clause.gif follows"/><br/>
<a id="sthref3719" href="img_text/deallocate_unused_clause.htm">Description of the illustration &#39;&#39;deallocate_unused_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses008.htm#CHDEAIID"><span class="xreftitleitalic"><span class="italic">size_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2125849"></a><a id="SQLRF53182"></a><a href="#i2085241"><span class="xreftitleitalic"><span class="italic">upgrade_table_clause</span></span></a> ::=</p>
<img width="557" height="67" src="img/upgrade_table_clause.gif" alt="Description of upgrade_table_clause.gif follows"/><br/>
<a id="sthref3720" href="img_text/upgrade_table_clause.htm">Description of the illustration &#39;&#39;upgrade_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2104033"><span class="xreftitleitalic"><span class="italic">column_properties</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2125860"></a><a id="SQLRF53183"></a><a href="#i2085284"><span class="xreftitleitalic"><span class="italic">records_per_block_clause</span></span></a> ::=</p>
<img width="301" height="58" src="img/records_per_block_clause.gif" alt="Description of records_per_block_clause.gif follows"/><br/>
<a id="sthref3721" href="img_text/records_per_block_clause.htm">Description of the illustration &#39;&#39;records_per_block_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2185568"></a><a id="SQLRF53185"></a><a href="#i2192391"><span class="xreftitleitalic"><span class="italic">row_movement_clause</span></span></a>::=</p>
<img width="268" height="58" src="img/row_movement_clause.gif" alt="Description of row_movement_clause.gif follows"/><br/>
<a id="sthref3722" href="img_text/row_movement_clause.htm">Description of the illustration &#39;&#39;row_movement_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="BABGJGBH"></a><a id="SQLRF53295"></a><a href="#BABHJDBJ"><span class="xreftitleitalic"><span class="italic">flashback_archive_clause</span></span></a>::=</p>
<img width="385" height="79" src="img/flashback_archive_clause.gif" alt="Description of flashback_archive_clause.gif follows"/><br/>
<a id="sthref3723" href="img_text/flashback_archive_clause.htm">Description of the illustration &#39;&#39;flashback_archive_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2183406"></a><a id="SQLRF53186"></a><a href="#i2088706"><span class="xreftitleitalic"><span class="italic">alter_iot_clauses</span></span></a>::=</p>
<img width="223" height="123" src="img/alter_iot_clauses.gif" alt="Description of alter_iot_clauses.gif follows"/><br/>
<a id="sthref3724" href="img_text/alter_iot_clauses.htm">Description of the illustration &#39;&#39;alter_iot_clauses.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2082143"><span class="xreftitleitalic"><span class="italic">alter_overflow_clause</span> ::=</span></a>, <a href="#i2082148"><span class="xreftitleitalic"><span class="italic">alter_mapping_table_clauses</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2082964"></a><a id="SQLRF53187"></a><a href="#i2088708"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span></span></a> ::=</p>
<img width="518" height="114" src="img/index_org_table_clause.gif" alt="Description of index_org_table_clause.gif follows"/><br/>
<a id="sthref3725" href="img_text/index_org_table_clause.htm">Description of the illustration &#39;&#39;index_org_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHCFBIH"><span class="xreftitleitalic"><span class="italic">mapping_table_clauses</span>::=</span></a>, <a href="#CIHECGJH"><span class="xreftitleitalic"><span class="italic">prefix_compression</span>::=</span></a>, <a href="#CIHDIICB"><span class="xreftitleitalic"><span class="italic">index_org_overflow_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHCFBIH"></a><a id="SQLRF53188"></a><span class="italic">mapping_table_clauses</span>::=</p>
<img width="190" height="58" src="img/mapping_table_clauses.gif" alt="Description of mapping_table_clauses.gif follows"/><br/>
<a id="sthref3726" href="img_text/mapping_table_clauses.htm">Description of the illustration &#39;&#39;mapping_table_clauses.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2082635"></a><a id="SQLRF53189"></a><span class="italic">index_compression</span>::=</p>
<img width="228" height="58" src="img/index_compression.gif" alt="Description of index_compression.gif follows"/><br/>
<a id="sthref3727" href="img_text/index_compression.htm">Description of the illustration &#39;&#39;index_compression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHECGJH"></a><a id="SQLRF56860"></a><span class="italic">prefix_compression</span>::=</p>
<img width="248" height="79" src="img/prefix_compression.gif" alt="Description of prefix_compression.gif follows"/><br/>
<a id="sthref3728" href="img_text/prefix_compression.htm">Description of the illustration &#39;&#39;prefix_compression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56861"></a><span class="italic">advanced_index_compression</span>::=</p>
<img width="282" height="58" src="img/advanced_index_compression.gif" alt="Description of advanced_index_compression.gif follows"/><br/>
<a id="sthref3729" href="img_text/advanced_index_compression.htm">Description of the illustration &#39;&#39;advanced_index_compression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHDIICB"></a><a id="SQLRF53190"></a><span class="italic">index_org_overflow_clause</span>::=</p>
<img width="551" height="46" src="img/index_org_overflow_clause.gif" alt="Description of index_org_overflow_clause.gif follows"/><br/>
<a id="sthref3730" href="img_text/index_org_overflow_clause.htm">Description of the illustration &#39;&#39;index_org_overflow_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABFJDCG"></a><a id="SQLRF53191"></a><span class="italic">partition_extended_name</span>::=</p>
<img width="402" height="91" src="img/partition_extended_name.gif" alt="Description of partition_extended_name.gif follows"/><br/>
<a id="sthref3731" href="img_text/partition_extended_name.htm">Description of the illustration &#39;&#39;partition_extended_name.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="BABCJHGG"></a><a id="SQLRF53192"></a><span class="italic">subpartition_extended_name</span>::=</p>
<img width="444" height="91" src="img/subpartition_extended_name.gif" alt="Description of subpartition_extended_name.gif follows"/><br/>
<a id="sthref3732" href="img_text/subpartition_extended_name.htm">Description of the illustration &#39;&#39;subpartition_extended_name.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2085649"></a><a id="SQLRF53193"></a><span class="italic">segment_attributes_clause</span>::=</p>
<img width="263" height="103" src="img/segment_attributes_clause.gif" alt="Description of segment_attributes_clause.gif follows"/><br/>
<a id="sthref3733" href="img_text/segment_attributes_clause.htm">Description of the illustration &#39;&#39;segment_attributes_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2125989"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span>::=</span></a>, <a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2082143"></a><a id="SQLRF53194"></a><a href="#i2084357"><span class="xreftitleitalic"><span class="italic">alter_overflow_clause</span></span></a> ::=</p>
<img width="366" height="162" src="img/alter_overflow_clause.gif" alt="Description of alter_overflow_clause.gif follows"/><br/>
<a id="sthref3734" href="img_text/alter_overflow_clause.htm">Description of the illustration &#39;&#39;alter_overflow_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2082029"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span> ::=</span></a>, <a href="#i2192658"><span class="xreftitleitalic"><span class="italic">shrink_clause</span>::=</span></a>, <a href="#i2082041"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="SQLRF53195"></a><a href="#i2084405"><span class="xreftitleitalic"><span class="italic">add_overflow_clause</span></span></a>::=</p>
<img width="801" height="98" src="img/add_overflow_clause.gif" alt="Description of add_overflow_clause.gif follows"/><br/>
<a id="sthref3735" href="img_text/add_overflow_clause.htm">Description of the illustration &#39;&#39;add_overflow_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2082148"></a><a id="SQLRF53196"></a><a href="#i2084416"><span class="xreftitleitalic"><span class="italic">alter_mapping_table_clauses</span></span></a> ::=</p>
<img width="352" height="58" src="img/alter_mapping_table_clauses.gif" alt="Description of alter_mapping_table_clauses.gif follows"/><br/>
<a id="sthref3736" href="img_text/alter_mapping_table_clauses.htm">Description of the illustration &#39;&#39;alter_mapping_table_clauses.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2082029"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span> ::=</span></a>, <a href="#i2082041"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2192658"></a><a id="SQLRF53181"></a><a href="#i2192484"><span class="xreftitleitalic"><span class="italic">shrink_clause</span></span></a>::=</p>
<img width="409" height="46" src="img/shrink_clause.gif" alt="Description of shrink_clause.gif follows"/><br/>
<a id="sthref3737" href="img_text/shrink_clause.htm">Description of the illustration &#39;&#39;shrink_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHCFFAA"></a><a id="SQLRF56813"></a><a href="#CIHFJJFI"><span class="xreftitleitalic"><span class="italic">attribute_clustering_clause</span></span></a>::=</p>
<img width="676" height="46" src="img/attribute_clustering_clause.gif" alt="Description of attribute_clustering_clause.gif follows"/><br/>
<a id="sthref3738" href="img_text/attribute_clustering_clause.htm">Description of the illustration &#39;&#39;attribute_clustering_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHDHAAJ"><span class="xreftitleitalic"><span class="italic">clustering_join</span>::=</span></a>, <a href="#CIHCEIGC"><span class="xreftitleitalic"><span class="italic">cluster_clause</span>::=</span></a>, <a href="#CIHGJGFC"><span class="xreftitleitalic"><span class="italic">clustering_when</span>::=</span></a>, <a href="#CIHDIEII"><span class="xreftitleitalic"><span class="italic">zonemap_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHDHAAJ"></a><a id="SQLRF56814"></a><span class="italic">clustering_join</span>::=</p>
<img width="708" height="79" src="img/clustering_join.gif" alt="Description of clustering_join.gif follows"/><br/>
<a id="sthref3739" href="img_text/clustering_join.htm">Description of the illustration &#39;&#39;clustering_join.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHCEIGC"></a><a id="SQLRF56815"></a><span class="italic">cluster_clause</span>::=</p>
<img width="433" height="79" src="img/cluster_clause.gif" alt="Description of cluster_clause.gif follows"/><br/>
<a id="sthref3740" href="img_text/cluster_clause.htm">Description of the illustration &#39;&#39;cluster_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56816"></a><span class="italic">clustering_columns</span>::=</p>
<img width="293" height="91" src="img/clustering_columns.gif" alt="Description of clustering_columns.gif follows"/><br/>
<a id="sthref3741" href="img_text/clustering_columns.htm">Description of the illustration &#39;&#39;clustering_columns.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56817"></a><span class="italic">clustering_column_group</span>::=</p>
<img width="171" height="58" src="img/clustering_column_group.gif" alt="Description of clustering_column_group.gif follows"/><br/>
<a id="sthref3742" href="img_text/clustering_column_group.htm">Description of the illustration &#39;&#39;clustering_column_group.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHGJGFC"></a><a id="SQLRF56818"></a><span class="italic">clustering_when</span>::=</p>
<img width="564" height="70" src="img/clustering_when.gif" alt="Description of clustering_when.gif follows"/><br/>
<a id="sthref3743" href="img_text/clustering_when.htm">Description of the illustration &#39;&#39;clustering_when.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHDIEII"></a><a id="SQLRF56862"></a><span class="italic">zonemap_clause</span>::=</p>
<img width="510" height="79" src="img/zonemap_clause.gif" alt="Description of zonemap_clause.gif follows"/><br/>
<a id="sthref3744" href="img_text/zonemap_clause.htm">Description of the illustration &#39;&#39;zonemap_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2103924"></a><a id="SQLRF53197"></a><a href="#i2198239"><span class="xreftitleitalic"><span class="italic">column_clauses</span></span></a>::=</p>
<img width="260" height="319" src="img/column_clauses.gif" alt="Description of column_clauses.gif follows"/><br/>
<a id="sthref3745" href="img_text/column_clauses.htm">Description of the illustration &#39;&#39;column_clauses.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2183462"><span class="xreftitleitalic"><span class="italic">add_column_clause</span> ::=</span></a>, <a href="#i2103956"><span class="xreftitleitalic"><span class="italic">modify_column_clauses</span>::=</span></a>, <a href="#i2124702"><span class="xreftitleitalic"><span class="italic">drop_column_clause</span> ::=</span></a>, <a href="#CJADCGAF"><span class="xreftitleitalic"><span class="italic">add_period_clause</span>::=</span></a>, <a href="#CJADGFFB"><span class="xreftitleitalic"><span class="italic">drop_period_clause</span>::=</span></a>, <a href="#i2183480"><span class="xreftitleitalic"><span class="italic">rename_column_clause</span> ::=</span></a>, <a href="#i2137001"><span class="xreftitleitalic"><span class="italic">modify_collection_retrieval</span> ::=</span></a>, <a href="#i2104157"><span class="xreftitleitalic"><span class="italic">modify_LOB_storage_clause</span>::=</span></a>, <a href="#i2137022"><span class="xreftitleitalic"><span class="italic">alter_varray_col_properties</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2183462"></a><a id="SQLRF53198"></a><a href="#i2198241"><span class="xreftitleitalic"><span class="italic">add_column_clause</span></span></a> ::=</p>
<img width="798" height="95" src="img/add_column_clause.gif" alt="Description of add_column_clause.gif follows"/><br/>
<a id="sthref3746" href="img_text/add_column_clause.htm">Description of the illustration &#39;&#39;add_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHCFDDJ"><span class="xreftitleitalic"><span class="italic">column_definition</span>::=</span></a>, <a href="#CJAHHDEB"><span class="xreftitleitalic"><span class="italic"><span class="italic">virtual_column_definition</span></span>::=</span></a>, <a href="#i2104033"><span class="xreftitleitalic"><span class="italic">column_properties</span>::=</span></a>, <a href="#CJAFGCEJ"><span class="xreftitleitalic"><span class="italic">out_of_line_part_storage</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHCFDDJ"></a><a id="SQLRF53199"></a><a href="#CIHGHAJG"><span class="xreftitleitalic"><span class="italic">column_definition</span></span></a>::=</p>
<img width="810" height="206" src="img/column_definition.gif" alt="Description of column_definition.gif follows"/><br/>
<a id="sthref3747" href="img_text/column_definition.htm">Description of the illustration &#39;&#39;column_definition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAGICCH"><span class="xreftitleitalic"><span class="italic">identity_clause</span>::=</span></a>, <a href="#CIHHHGCD"><span class="xreftitleitalic"><span class="italic">encryption_spec</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">inline_constraint</span></code> and <code dir="ltr"><span class="codeinlineitalic">inline_ref_constraint</span></code>: <a href="clauses002.htm#CJAEDFIB"><span class="xreftitleitalic"><span class="italic">constraint</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAGICCH"></a><a id="SQLRF55652"></a><a href="#CJADIAFJ"><span class="xreftitleitalic"><span class="italic">identity_clause</span></span></a>::=</p>
<img width="787" height="98" src="img/identity_clause.gif" alt="Description of identity_clause.gif follows"/><br/>
<a id="sthref3748" href="img_text/identity_clause.htm">Description of the illustration &#39;&#39;identity_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAFCFAG"></a><a id="SQLRF55653"></a><a href="#CJAEHCBE"><span class="xreftitleitalic"><span class="italic">identity_options</span></span></a>::=</p>
<img width="395" height="435" src="img/identity_options.gif" alt="Description of identity_options.gif follows"/><br/>
<a id="sthref3749" href="img_text/identity_options.htm">Description of the illustration &#39;&#39;identity_options.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAHHDEB"></a><a id="SQLRF53200"></a><span class="italic"><a href="#CJABIIEA"><span class="xreftitleitalic"><span class="italic">virtual_column_definition</span></span></a></span>::=</p>
<img width="798" height="154" src="img/virtual_column_definition.gif" alt="Description of virtual_column_definition.gif follows"/><br/>
<a id="sthref3750" href="img_text/virtual_column_definition.htm">Description of the illustration &#39;&#39;virtual_column_definition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAIAJBJ"><span class="xreftitleitalic"><span class="italic">evaluation_edition_clause</span>::=</span></a>, <a href="#CJAIBHGI"><span class="xreftitleitalic"><span class="italic">unusable_editions_clause</span>::=</span></a>, <a href="clauses002.htm#CJAEDFIB"><span class="xreftitleitalic"><span class="italic">constraint</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAIAJBJ"></a><a id="SQLRF56229"></a><span class="italic">evaluation_edition_clause</span>::=</p>
<img width="352" height="91" src="img/evaluation_edition_clause.gif" alt="Description of evaluation_edition_clause.gif follows"/><br/>
<a id="sthref3751" href="img_text/evaluation_edition_clause.htm">Description of the illustration &#39;&#39;evaluation_edition_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAIBHGI"></a><a id="SQLRF56383"></a><span class="italic">unusable_editions_clause</span>::=</p>
<img width="482" height="199" src="img/unusable_editions_clause.gif" alt="Description of unusable_editions_clause.gif follows"/><br/>
<a id="sthref3752" href="img_text/unusable_editions_clause.htm">Description of the illustration &#39;&#39;unusable_editions_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2103956"></a><a id="SQLRF53201"></a><a href="#i2181663"><span class="xreftitleitalic"><span class="italic">modify_column_clauses</span></span></a>::=</p>
<img width="395" height="187" src="img/modify_column_clauses.gif" alt="Description of modify_column_clauses.gif follows"/><br/>
<a id="sthref3753" href="img_text/modify_column_clauses.htm">Description of the illustration &#39;&#39;modify_column_clauses.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAIJADJ"><span class="xreftitleitalic"><span class="italic">modify_col_properties</span>::=</span></a>, <a href="#CJACIDIC"><span class="xreftitleitalic"><span class="italic">modify_virtcol_properties</span>::=</span></a>, <a href="#CJAEHGIH"><span class="xreftitleitalic"><span class="italic">modify_col_visibility</span>::=</span></a>, <a href="#CJAJBIGA"><span class="xreftitleitalic"><span class="italic">modify_col_substitutable</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAIJADJ"></a><a id="SQLRF53202"></a><a href="#i2124740"><span class="xreftitleitalic"><span class="italic">modify_col_properties</span></span></a>::=</p>
<img width="814" height="206" src="img/modify_col_properties.gif" alt="Description of modify_col_properties.gif follows"/><br/>
<a id="sthref3754" href="img_text/modify_col_properties.htm">Description of the illustration &#39;&#39;modify_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAGICCH"><span class="xreftitleitalic"><span class="italic">identity_clause</span>::=</span></a>, <a href="#CIHHHGCD"><span class="xreftitleitalic"><span class="italic">encryption_spec</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">inline_constraint</span></code>: <a href="clauses002.htm#CJAEDFIB"><span class="xreftitleitalic"><span class="italic">constraint</span>::=</span></a>, <a href="#i2104128"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span>::=</span></a>, <a href="#CJAFJFJB"><span class="xreftitleitalic"><span class="italic">alter_XMLSchema_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHHHGCD"></a><a id="SQLRF53203"></a><span class="italic">encryption_spec</span>::=</p>
<img width="553" height="121" src="img/encryption_spec.gif" alt="Description of encryption_spec.gif follows"/><br/>
<a id="sthref3755" href="img_text/encryption_spec.htm">Description of the illustration &#39;&#39;encryption_spec.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJACIDIC"></a><a id="SQLRF56403"></a><a href="#CJAJEICE"><span class="xreftitleitalic"><span class="italic">modify_virtcol_properties</span></span></a>::=</p>
<img width="761" height="123" src="img/modify_virtcol_properties.gif" alt="Description of modify_virtcol_properties.gif follows"/><br/>
<a id="sthref3756" href="img_text/modify_virtcol_properties.htm">Description of the illustration &#39;&#39;modify_virtcol_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAIAJBJ"><span class="xreftitleitalic"><span class="italic">evaluation_edition_clause</span>::=</span></a>, <a href="#CJAIBHGI"><span class="xreftitleitalic"><span class="italic">unusable_editions_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAEHGIH"></a><a id="SQLRF55883"></a><a href="#CJABCHJE"><span class="xreftitleitalic"><span class="italic">modify_col_visibility</span></span></a>::=</p>
<img width="192" height="58" src="img/modify_col_visibility.gif" alt="Description of modify_col_visibility.gif follows"/><br/>
<a id="sthref3757" href="img_text/modify_col_visibility.htm">Description of the illustration &#39;&#39;modify_col_visibility.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAJBIGA"></a><a id="SQLRF53204"></a><a href="#i2124759"><span class="xreftitleitalic"><span class="italic">modify_col_substitutable</span></span></a>::=</p>
<img width="640" height="46" src="img/modify_col_substitutable.gif" alt="Description of modify_col_substitutable.gif follows"/><br/>
<a id="sthref3758" href="img_text/modify_col_substitutable.htm">Description of the illustration &#39;&#39;modify_col_substitutable.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2124702"></a><a id="SQLRF53205"></a><a href="#i2103683"><span class="xreftitleitalic"><span class="italic">drop_column_clause</span></span></a> ::=</p>
<img width="800" height="315" src="img/drop_column_clause.gif" alt="Description of drop_column_clause.gif follows"/><br/>
<a id="sthref3759" href="img_text/drop_column_clause.htm">Description of the illustration &#39;&#39;drop_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJADCGAF"></a><a id="SQLRF56419"></a><a href="#CJAEGCFI"><span class="xreftitleitalic"><span class="italic">add_period_clause</span></span></a>::=</p>
<img width="237" height="27" src="img/add_period_clause.gif" alt="Description of add_period_clause.gif follows"/><br/>
<a id="sthref3760" href="img_text/add_period_clause.htm">Description of the illustration &#39;&#39;add_period_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56420"></a><span class="italic">period_definition</span>::=</p>
<img width="629" height="46" src="img/period_definition.gif" alt="Description of period_definition.gif follows"/><br/>
<a id="sthref3761" href="img_text/period_definition.htm">Description of the illustration &#39;&#39;period_definition.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJADGFFB"></a><a id="SQLRF56421"></a><a href="#CJAJHJEJ"><span class="xreftitleitalic"><span class="italic">drop_period_clause</span></span></a>::=</p>
<img width="376" height="27" src="img/drop_period_clause.gif" alt="Description of drop_period_clause.gif follows"/><br/>
<a id="sthref3762" href="img_text/drop_period_clause.htm">Description of the illustration &#39;&#39;drop_period_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2183480"></a><a id="SQLRF53206"></a><a href="#i2110476"><span class="xreftitleitalic"><span class="italic">rename_column_clause</span></span></a> ::=</p>
<img width="367" height="27" src="img/rename_column_clause.gif" alt="Description of rename_column_clause.gif follows"/><br/>
<a id="sthref3763" href="img_text/rename_column_clause.htm">Description of the illustration &#39;&#39;rename_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2137001"></a><a id="SQLRF53207"></a><a href="#i2103791"><span class="xreftitleitalic"><span class="italic">modify_collection_retrieval</span></span></a> ::=<a id="sthref3764"></a><a id="sthref3765"></a></p>
<img width="551" height="58" src="img/modify_collection_retrieval.gif" alt="Description of modify_collection_retrieval.gif follows"/><br/>
<a id="sthref3766" href="img_text/modify_collection_retrieval.htm">Description of the illustration &#39;&#39;modify_collection_retrieval.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2103997"></a><a id="SQLRF53208"></a><a href="#i2103817"><span class="xreftitleitalic"><span class="italic">constraint_clauses</span></span></a>::=<a id="sthref3767"></a><a id="sthref3768"></a><a id="sthref3769"></a></p>
<img width="609" height="272" src="img/constraint_clauses.gif" alt="Description of constraint_clauses.gif follows"/><br/>
<a id="sthref3770" href="img_text/constraint_clauses.htm">Description of the illustration &#39;&#39;constraint_clauses.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses002.htm#CJADJGEC"><span class="xreftitleitalic"><span class="italic">out_of_line_constraint</span>::=</span></a>, <a href="clauses002.htm#CJABCJJF"><span class="xreftitleitalic"><span class="italic">out_of_line_ref_constraint</span>::=</span></a>, <a href="clauses002.htm#CJAFFBAA"><span class="xreftitleitalic"><span class="italic">constraint_state</span>::=</span></a>, <a href="#i2104014"><span class="xreftitleitalic"><span class="italic">drop_constraint_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2104014"></a><a id="SQLRF53209"></a><a href="#i2103845"><span class="xreftitleitalic"><span class="italic">drop_constraint_clause</span></span></a>::=</p>
<img width="805" height="162" src="img/drop_constraint_clause.gif" alt="Description of drop_constraint_clause.gif follows"/><br/>
<a id="sthref3771" href="img_text/drop_constraint_clause.htm">Description of the illustration &#39;&#39;drop_constraint_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2104033"></a><a id="SQLRF53210"></a><a href="#i2103509"><span class="xreftitleitalic"><span class="italic">column_properties</span></span></a>::=<a id="sthref3772"></a></p>
<img width="525" height="202" src="img/column_properties.gif" alt="Description of column_properties.gif follows"/><br/>
<a id="sthref3773" href="img_text/column_properties.htm">Description of the illustration &#39;&#39;column_properties.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAFGCEJ"></a><a id="SQLRF53211"></a><a href="#CIHEGAFJ"><span class="xreftitleitalic"><span class="italic">out_of_line_part_storage</span></span></a>::=</p>
<img width="583" height="275" src="img/out_of_line_part_storage.gif" alt="Description of out_of_line_part_storage.gif follows"/><br/>
<a id="sthref3774" href="img_text/out_of_line_part_storage.htm">Description of the illustration &#39;&#39;out_of_line_part_storage.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53212"></a><a href="#i2103513"><span class="xreftitleitalic"><span class="italic">object_type_col_properties</span></span></a>::=<a id="sthref3775"></a></p>
<img width="329" height="27" src="img/object_type_col_properties.gif" alt="Description of object_type_col_properties.gif follows"/><br/>
<a id="sthref3776" href="img_text/object_type_col_properties.htm">Description of the illustration &#39;&#39;object_type_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2104052"></a><a id="SQLRF53213"></a><span class="italic">substitutable_column_clause</span>::=</p>
<img width="522" height="98" src="img/substitutable_column_clause.gif" alt="Description of substitutable_column_clause.gif follows"/><br/>
<a id="sthref3777" href="img_text/substitutable_column_clause.htm">Description of the illustration &#39;&#39;substitutable_column_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53214"></a><a href="#i2103531"><span class="xreftitleitalic"><span class="italic">nested_table_col_properties</span></span></a>::=<a id="sthref3778"></a><a id="sthref3779"></a></p>
<img width="671" height="345" src="img/nested_table_col_properties.gif" alt="Description of nested_table_col_properties.gif follows"/><br/>
<a id="sthref3780" href="img_text/nested_table_col_properties.htm">Description of the illustration &#39;&#39;nested_table_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53215"></a><span class="italic">object_properties</span>::=</p>
<img width="539" height="202" src="img/object_properties.gif" alt="Description of object_properties.gif follows"/><br/>
<a id="sthref3781" href="img_text/object_properties.htm">Description of the illustration &#39;&#39;object_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<code dir="ltr"><span class="codeinlineitalic">inline_constraint</span></code>, <code dir="ltr"><span class="codeinlineitalic">inline_ref_constraint</span></code>, <code dir="ltr"><span class="codeinlineitalic">out_of_line_constraint</span></code>, <code dir="ltr"><span class="codeinlineitalic">out_of_line_ref_constraint</span></code>: <a href="clauses002.htm#CJAEDFIB"><span class="xreftitleitalic"><span class="italic">constraint</span>::=</span></a>)</p>
<p class="subhead2"><a id="SQLRF53216"></a><span class="italic">supplemental_logging_props</span>::=</p>
<img width="393" height="58" src="img/supplemental_logging_props.gif" alt="Description of supplemental_logging_props.gif follows"/><br/>
<a id="sthref3782" href="img_text/supplemental_logging_props.htm">Description of the illustration &#39;&#39;supplemental_logging_props.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2169618"><span class="xreftitleitalic"><span class="italic">supplemental_log_grp_clause</span>::=</span></a>, <a href="#CJAEJJAB"><span class="xreftitleitalic"><span class="italic">supplemental_id_key_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="SQLRF53217"></a><span class="italic">physical_properties</span>::=</p>
<img width="912" height="248" src="img/physical_properties.gif" alt="Description of physical_properties.gif follows"/><br/>
<a id="sthref3783" href="img_text/physical_properties.htm">Description of the illustration &#39;&#39;physical_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJABFJEA"><span class="xreftitleitalic"><span class="italic">deferred_segment_creation</span>::=</span></a>, <a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="statements_7002.htm#CEGBJJJG"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span>::=</span></a>&mdash;part of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> syntax, <a href="#CJAJEHJB"><span class="xreftitleitalic"><span class="italic">ilm_clause</span>::=</span></a>, <a href="#CIHFJDIE"><span class="xreftitleitalic"><span class="italic">heap_org_table_clause</span>::=</span></a>, <a href="#i2082964"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span> ::=</span></a>, <a href="statements_7002.htm#i2129649"><span class="xreftitleitalic"><span class="italic">external_table_clause</span> ::=</span></a>&mdash;part of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> syntax)</p>
<p class="subhead2"><a id="CJABFJEA"></a><a id="SQLRF53218"></a><span class="italic">deferred_segment_creation</span>::=</p>
<img width="307" height="58" src="img/deferred_segment_creation.gif" alt="Description of deferred_segment_creation.gif follows"/><br/>
<a id="sthref3784" href="img_text/deferred_segment_creation.htm">Description of the illustration &#39;&#39;deferred_segment_creation.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHFJDIE"></a><a id="SQLRF56750"></a><span class="italic">heap_org_table_clause</span>::=</p>
<img width="506" height="37" src="img/heap_org_table_clause.gif" alt="Description of heap_org_table_clause.gif follows"/><br/>
<a id="sthref3785" href="img_text/heap_org_table_clause.htm">Description of the illustration &#39;&#39;heap_org_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="statements_7002.htm#CEGBJJJG"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span>::=</span></a>&mdash;part of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> syntax, <a href="#CJAJEHJB"><span class="xreftitleitalic"><span class="italic">ilm_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2104111"></a><a id="SQLRF53219"></a><a href="#i2103541"><span class="xreftitleitalic"><span class="italic">varray_col_properties</span></span></a>::=<a id="sthref3786"></a><a id="sthref3787"></a></p>
<img width="569" height="79" src="img/varray_col_properties.gif" alt="Description of varray_col_properties.gif follows"/><br/>
<a id="sthref3788" href="img_text/varray_col_properties.htm">Description of the illustration &#39;&#39;varray_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2104052"><span class="xreftitleitalic"><span class="italic">substitutable_column_clause</span>::=</span></a>, <a href="#BABECGGE"><span class="xreftitleitalic"><span class="italic">varray_storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABECGGE"></a><a id="SQLRF53220"></a><span class="italic">varray_storage_clause</span>::=<a id="sthref3789"></a><a id="sthref3790"></a></p>
<img width="746" height="95" src="img/varray_storage_clause.gif" alt="Description of varray_storage_clause.gif follows"/><br/>
<a id="sthref3791" href="img_text/varray_storage_clause.htm">Description of the illustration &#39;&#39;varray_storage_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2104137"><span class="xreftitleitalic"><span class="italic">LOB_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2104128"></a><a id="SQLRF53221"></a><a href="#i2103547"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span></span></a>::=<a id="sthref3792"></a></p>
<img width="652" height="239" src="img/lob_storage_clause.gif" alt="Description of lob_storage_clause.gif follows"/><br/>
<a id="sthref3793" href="img_text/lob_storage_clause.htm">Description of the illustration &#39;&#39;lob_storage_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABEEGAG"><span class="xreftitleitalic"><span class="italic">LOB_storage_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABEEGAG"></a><a id="SQLRF53222"></a><span class="italic">LOB_storage_parameters</span>::=</p>
<img width="374" height="123" src="img/lob_storage_parameters.gif" alt="Description of lob_storage_parameters.gif follows"/><br/>
<a id="sthref3794" href="img_text/lob_storage_parameters.htm">Description of the illustration &#39;&#39;lob_storage_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2104137"><span class="xreftitleitalic"><span class="italic">LOB_parameters</span>::=</span></a>, <a href="clauses009.htm#CJACEJGB"><span class="xreftitleitalic"><span class="italic">storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2104137"></a><a id="SQLRF53223"></a><span class="italic">LOB_parameters</span>::=</p>
<img width="392" height="425" src="img/lob_parameters.gif" alt="Description of lob_parameters.gif follows"/><br/>
<a id="sthref3795" href="img_text/lob_parameters.htm">Description of the illustration &#39;&#39;lob_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABHJAFH"><span class="xreftitleitalic"><span class="italic">LOB_retention_clause</span>::=</span></a>, <a href="#BABFCGAE"><span class="xreftitleitalic"><span class="italic">LOB_deduplicate_clause</span>::=</span></a>, <a href="#BABEJBDC"><span class="xreftitleitalic"><span class="italic">LOB_compression_clause</span>::=</span></a>, <a href="#CIHHHGCD"><span class="xreftitleitalic"><span class="italic">encryption_spec</span>::=</span></a>, <a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2104157"></a><a id="SQLRF53224"></a><a href="#i2103804"><span class="xreftitleitalic"><span class="italic">modify_LOB_storage_clause</span></span></a>::=</p>
<img width="485" height="27" src="img/modify_lob_storage_clause.gif" alt="Description of modify_lob_storage_clause.gif follows"/><br/>
<a id="sthref3796" href="img_text/modify_lob_storage_clause.htm">Description of the illustration &#39;&#39;modify_lob_storage_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2104188"></a><a id="SQLRF53225"></a><span class="italic">modify_LOB_parameters</span>::=</p>
<img width="423" height="492" src="img/modify_lob_parameters.gif" alt="Description of modify_lob_parameters.gif follows"/><br/>
<a id="sthref3797" href="img_text/modify_lob_parameters.htm">Description of the illustration &#39;&#39;modify_lob_parameters.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="clauses009.htm#CJACEJGB"><span class="xreftitleitalic"><span class="italic">storage_clause</span>::=</span></a>, <a href="#BABHJAFH"><span class="xreftitleitalic"><span class="italic">LOB_retention_clause</span>::=</span></a>, <a href="#BABEJBDC"><span class="xreftitleitalic"><span class="italic">LOB_compression_clause</span>::=</span></a>, <a href="#CIHHHGCD"><span class="xreftitleitalic"><span class="italic">encryption_spec</span>::=</span></a>, <a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>, <a href="#i2082029"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span> ::=</span></a>, <a href="#i2192658"><span class="xreftitleitalic"><span class="italic">shrink_clause</span>::=</span></a>, <a href="#i2082041"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABHJAFH"></a><a id="SQLRF53226"></a><a href="#BABBFFAJ"><span class="xreftitleitalic"><span class="italic">LOB_retention_clause</span></span></a>::=</p>
<img width="296" height="143" src="img/lob_retention_clause.gif" alt="Description of lob_retention_clause.gif follows"/><br/>
<a id="sthref3798" href="img_text/lob_retention_clause.htm">Description of the illustration &#39;&#39;lob_retention_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="BABFCGAE"></a><a id="SQLRF53227"></a><a href="#BABHDBGC"><span class="xreftitleitalic"><span class="italic">LOB_deduplicate_clause</span></span></a>::=</p>
<img width="183" height="58" src="img/lob_deduplicate_clause.gif" alt="Description of lob_deduplicate_clause.gif follows"/><br/>
<a id="sthref3799" href="img_text/lob_deduplicate_clause.htm">Description of the illustration &#39;&#39;lob_deduplicate_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="BABEJBDC"></a><a id="SQLRF53228"></a><a href="#BABJJIHG"><span class="xreftitleitalic"><span class="italic">LOB_compression_clause</span></span></a>::=</p>
<img width="291" height="143" src="img/lob_compression_clause.gif" alt="Description of lob_compression_clause.gif follows"/><br/>
<a id="sthref3800" href="img_text/lob_compression_clause.htm">Description of the illustration &#39;&#39;lob_compression_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2137022"></a><a id="SQLRF53229"></a><a href="#i2103812"><span class="xreftitleitalic"><span class="italic">alter_varray_col_properties</span></span></a>::=<a id="sthref3801"></a><a id="sthref3802"></a></p>
<img width="459" height="27" src="img/alter_varray_col_properties.gif" alt="Description of alter_varray_col_properties.gif follows"/><br/>
<a id="sthref3803" href="img_text/alter_varray_col_properties.htm">Description of the illustration &#39;&#39;alter_varray_col_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2104188"><span class="xreftitleitalic"><span class="italic">modify_LOB_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="SQLRF53230"></a><a href="#i2103908"><span class="xreftitleitalic"><span class="italic">LOB_partition_storage</span></span></a> ::=</p>
<img width="537" height="178" src="img/lob_partition_storage.gif" alt="Description of lob_partition_storage.gif follows"/><br/>
<a id="sthref3804" href="img_text/lob_partition_storage.htm">Description of the illustration &#39;&#39;lob_partition_storage.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2104128"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span>::=</span></a>, <a href="#i2104111"><span class="xreftitleitalic"><span class="italic">varray_col_properties</span>::=</span></a>, <a href="#BABGIABF"><span class="xreftitleitalic"><span class="italic">LOB_partitioning_storage</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABGIABF"></a><a id="SQLRF53231"></a><span class="italic">LOB_partitioning_storage</span>::=</p>
<img width="768" height="156" src="img/lob_partitioning_storage.gif" alt="Description of lob_partitioning_storage.gif follows"/><br/>
<a id="sthref3805" href="img_text/lob_partitioning_storage.htm">Description of the illustration &#39;&#39;lob_partitioning_storage.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53232"></a><a href="#i2122478"><span class="xreftitleitalic"><span class="italic">XMLType_column_properties</span></span></a>::=</p>
<img width="617" height="46" src="img/xmltype_column_properties.gif" alt="Description of xmltype_column_properties.gif follows"/><br/>
<a id="sthref3806" href="img_text/xmltype_column_properties.htm">Description of the illustration &#39;&#39;xmltype_column_properties.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53233"></a><span class="italic">XMLType_storage</span>::=</p>
<img width="846" height="267" src="img/xmltype_storage.gif" alt="Description of xmltype_storage.gif follows"/><br/>
<a id="sthref3807" href="img_text/xmltype_storage.htm">Description of the illustration &#39;&#39;xmltype_storage.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53234"></a><span class="italic">XMLSchema_spec</span>::=</p>
<img width="614" height="258" src="img/xmlschema_spec.gif" alt="Description of xmlschema_spec.gif follows"/><br/>
<a id="sthref3808" href="img_text/xmlschema_spec.htm">Description of the illustration &#39;&#39;xmlschema_spec.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJAFJFJB"></a><a id="SQLRF53237"></a><span class="italic">alter_XMLSchema_clause</span>::=</p>
<img width="246" height="91" src="img/alter_xmlschema_clause.gif" alt="Description of alter_xmlschema_clause.gif follows"/><br/>
<a id="sthref3809" href="img_text/alter_xmlschema_clause.htm">Description of the illustration &#39;&#39;alter_xmlschema_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2104234"></a><a id="SQLRF53238"></a><a href="#i2103884"><span class="xreftitleitalic"><span class="italic">alter_external_table</span></span></a> ::=<a id="sthref3810"></a></p>
<img width="371" height="296" src="img/alter_external_table.gif" alt="Description of alter_external_table.gif follows"/><br/>
<a id="sthref3811" href="img_text/alter_external_table.htm">Description of the illustration &#39;&#39;alter_external_table.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2183462"><span class="xreftitleitalic"><span class="italic">add_column_clause</span> ::=</span></a>, <a href="#i2103956"><span class="xreftitleitalic"><span class="italic">modify_column_clauses</span>::=</span></a>, <a href="#i2124702"><span class="xreftitleitalic"><span class="italic">drop_column_clause</span> ::=</span></a>, <a href="#i2104014"><span class="xreftitleitalic"><span class="italic">drop_constraint_clause</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2104274"></a><a id="SQLRF53239"></a><span class="italic">external_data_properties</span>::=</p>
<img width="708" height="187" src="img/external_data_properties.gif" alt="Description of external_data_properties.gif follows"/><br/>
<a id="sthref3812" href="img_text/external_data_properties.htm">Description of the illustration &#39;&#39;external_data_properties.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2087440"></a><a id="SQLRF10011"></a><a href="#i2085640"><span class="xreftitleitalic"><span class="italic">alter_table_partitioning</span></span></a> ::=</p>
<img width="216" height="572" src="img/alter_table_partitioning.gif" alt="Description of alter_table_partitioning.gif follows"/><br/>
<a id="sthref3813" href="img_text/alter_table_partitioning.htm">Description of the illustration &#39;&#39;alter_table_partitioning.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2131000"><span class="xreftitleitalic"><span class="italic">modify_table_default_attrs</span> ::=</span></a>, <a href="#BABGBCBD"><span class="xreftitleitalic"><span class="italic">alter_interval_partitioning</span>::=</span></a>, <a href="#i2183523"><span class="xreftitleitalic"><span class="italic">set_subpartition_template</span> ::=</span></a>, <a href="#i2131016"><span class="xreftitleitalic"><span class="italic">modify_table_partition</span>::=</span></a>, <a href="#i2131024"><span class="xreftitleitalic"><span class="italic">modify_table_subpartition</span>::=</span></a>, <a href="#i2131032"><span class="xreftitleitalic"><span class="italic">move_table_partition</span>::=</span></a>, <a href="#i2183556"><span class="xreftitleitalic"><span class="italic">move_table_subpartition</span>::=</span></a>, <a href="#i2131048"><span class="xreftitleitalic"><span class="italic">add_table_partition</span>::=</span></a>, <a href="#i2131056"><span class="xreftitleitalic"><span class="italic">coalesce_table_partition</span>::=</span></a>, <a href="#i2131064"><span class="xreftitleitalic"><span class="italic">drop_table_partition</span>::=</span></a>, <a href="#i2131072"><span class="xreftitleitalic"><span class="italic">drop_table_subpartition</span> ::=</span></a>, <a href="#i2131202"><span class="xreftitleitalic"><span class="italic">rename_partition_subpart</span>::=</span></a>, <a href="#i2131210"><span class="xreftitleitalic"><span class="italic">truncate_partition_subpart</span>::=</span></a>, <a href="#i2131218"><span class="xreftitleitalic"><span class="italic">split_table_partition</span>::=</span></a>, <a href="#i2131226"><span class="xreftitleitalic"><span class="italic">split_table_subpartition</span> ::=</span></a>, <a href="#i2131234"><span class="xreftitleitalic"><span class="italic">merge_table_partitions</span> ::=</span></a>, <a href="#i2131242"><span class="xreftitleitalic"><span class="italic">merge_table_subpartitions</span> ::=</span></a>, <a href="#i2131250"><span class="xreftitleitalic"><span class="italic">exchange_partition_subpart</span> ::=</span></a></p>
<p class="subhead2"><a id="i2131000"></a><a id="SQLRF53240"></a><a href="#BABHHEHB"><span class="xreftitleitalic"><span class="italic">modify_table_default_attrs</span></span></a> ::=</p>
<img width="763" height="282" src="img/modify_table_default_attrs.gif" alt="Description of modify_table_default_attrs.gif follows"/><br/>
<a id="sthref3814" href="img_text/modify_table_default_attrs.htm">Description of the illustration &#39;&#39;modify_table_default_attrs.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#CJABFJEA"><span class="xreftitleitalic"><span class="italic">deferred_segment_creation</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>, <a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CIHGCFFI"><span class="xreftitleitalic"><span class="italic">inmemory_clause</span>::=</span></a>, <a href="#CIHECGJH"><span class="xreftitleitalic"><span class="italic">prefix_compression</span>::=</span></a>, <a href="#i2082143"><span class="xreftitleitalic"><span class="italic">alter_overflow_clause</span> ::=</span></a>, <a href="#i2104137"><span class="xreftitleitalic"><span class="italic">LOB_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAIICCF"></a><a id="SQLRF55863"></a><span class="italic">indexing_clause</span>::=</p>
<img width="180" height="58" src="img/indexing_clause.gif" alt="Description of indexing_clause.gif follows"/><br/>
<a id="sthref3815" href="img_text/indexing_clause.htm">Description of the illustration &#39;&#39;indexing_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHGCFFI"></a><a id="SQLRF56781"></a><a href="#CIHECEJI"><span class="xreftitleitalic"><span class="italic">inmemory_clause</span></span></a>::=</p>
<img width="326" height="79" src="img/inmemory_clause.gif" alt="Description of inmemory_clause.gif follows"/><br/>
<a id="sthref3816" href="img_text/inmemory_clause.htm">Description of the illustration &#39;&#39;inmemory_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHDJFFF"><span class="xreftitleitalic"><span class="italic">inmemory_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABGBCBD"></a><a id="SQLRF53241"></a><a href="#BABIAAFH"><span class="xreftitleitalic"><span class="italic">alter_interval_partitioning</span></span></a>::=</p>
<img width="373" height="110" src="img/alter_interval_partitioning.gif" alt="Description of alter_interval_partitioning.gif follows"/><br/>
<a id="sthref3817" href="img_text/alter_interval_partitioning.htm">Description of the illustration &#39;&#39;alter_interval_partitioning.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2183523"></a><a id="SQLRF53242"></a><a href="#BABBGIEA"><span class="xreftitleitalic"><span class="italic">set_subpartition_template</span></span></a> ::=</p>
<img width="617" height="239" src="img/set_subpartition_template.gif" alt="Description of set_subpartition_template.gif follows"/><br/>
<a id="sthref3818" href="img_text/set_subpartition_template.htm">Description of the illustration &#39;&#39;set_subpartition_template.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>, <a href="#CJAJGCIB"><span class="xreftitleitalic"><span class="italic">individual_hash_subparts</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131016"></a><a id="SQLRF53243"></a><a href="#BABDJEEA"><span class="xreftitleitalic"><span class="italic">modify_table_partition</span></span></a>::=</p>
<img width="192" height="91" src="img/modify_table_partition.gif" alt="Description of modify_table_partition.gif follows"/><br/>
<a id="sthref3819" href="img_text/modify_table_partition.htm">Description of the illustration &#39;&#39;modify_table_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2126021"><span class="xreftitleitalic"><span class="italic">modify_range_partition</span>::=</span></a>, <a href="#i2128428"><span class="xreftitleitalic"><span class="italic">modify_hash_partition</span>::=</span></a>, <a href="#i2126043"><span class="xreftitleitalic"><span class="italic">modify_list_partition</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2126021"></a><a id="SQLRF53244"></a><a href="#BABIHCCH"><span class="xreftitleitalic"><span class="italic">modify_range_partition</span></span></a>::=</p>
<img width="623" height="272" src="img/modify_range_partition.gif" alt="Description of modify_range_partition.gif follows"/><br/>
<a id="sthref3820" href="img_text/modify_range_partition.htm">Description of the illustration &#39;&#39;modify_range_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#i2113661"><span class="xreftitleitalic"><span class="italic">partition_attributes</span>::=</span></a>, <a href="#BABDIFCC"><span class="xreftitleitalic"><span class="italic"><span class="italic">add_range_subpartition</span></span> ::=</span></a>, <a href="#i2185729"><span class="xreftitleitalic"><span class="italic">add_hash_subpartition</span> ::=</span></a>, <a href="#i2114547"><span class="xreftitleitalic"><span class="italic">add_list_subpartition</span>::=</span></a>, <a href="#BABFBAAC"><span class="xreftitleitalic"><span class="italic">coalesce_table_subpartition</span>::=</span></a>, <a href="#i2082148"><span class="xreftitleitalic"><span class="italic">alter_mapping_table_clauses</span> ::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2128428"></a><a id="SQLRF53245"></a><a href="#BABGGIFE"><span class="xreftitleitalic"><span class="italic">modify_hash_partition</span></span></a>::=</p>
<img width="623" height="175" src="img/modify_hash_partition.gif" alt="Description of modify_hash_partition.gif follows"/><br/>
<a id="sthref3821" href="img_text/modify_hash_partition.htm">Description of the illustration &#39;&#39;modify_hash_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#BABFBAAC"><span class="xreftitleitalic"><span class="italic">coalesce_table_subpartition</span>::=</span></a>, <a href="#i2113661"><span class="xreftitleitalic"><span class="italic">partition_attributes</span>::=</span></a>, <a href="#i2082148"><span class="xreftitleitalic"><span class="italic">alter_mapping_table_clauses</span> ::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2126043"></a><a id="SQLRF53246"></a><span class="italic">modify_list_partition</span>::=</p>
<img width="623" height="320" src="img/modify_list_partition.gif" alt="Description of modify_list_partition.gif follows"/><br/>
<a id="sthref3822" href="img_text/modify_list_partition.htm">Description of the illustration &#39;&#39;modify_list_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#i2113661"><span class="xreftitleitalic"><span class="italic">partition_attributes</span>::=</span></a>, <a href="#BABDIFCC"><span class="xreftitleitalic"><span class="italic"><span class="italic">add_range_subpartition</span></span> ::=</span></a>, <a href="#i2114547"><span class="xreftitleitalic"><span class="italic">add_list_subpartition</span>::=</span></a>, <a href="#i2185729"><span class="xreftitleitalic"><span class="italic">add_hash_subpartition</span> ::=</span></a>, <a href="#BABFBAAC"><span class="xreftitleitalic"><span class="italic">coalesce_table_subpartition</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131024"></a><a id="SQLRF53247"></a><a href="#BABIGIHC"><span class="xreftitleitalic"><span class="italic">modify_table_subpartition</span></span></a>::=</p>
<img width="697" height="327" src="img/modify_table_subpartition.gif" alt="Description of modify_table_subpartition.gif follows"/><br/>
<a id="sthref3823" href="img_text/modify_table_subpartition.htm">Description of the illustration &#39;&#39;modify_table_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABCJHGG"><span class="xreftitleitalic"><span class="italic">subpartition_extended_name</span>::=</span></a>, <a href="#i2082029"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span> ::=</span></a>, <a href="#i2082041"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span>::=</span></a>, <a href="#i2192658"><span class="xreftitleitalic"><span class="italic">shrink_clause</span>::=</span></a>, <a href="#i2104188"><span class="xreftitleitalic"><span class="italic">modify_LOB_parameters</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131032"></a><a id="SQLRF53248"></a><a href="#BABDIDEJ"><span class="xreftitleitalic"><span class="italic">move_table_partition</span></span></a>::=</p>
<img width="669" height="114" src="img/move_table_partition.gif" alt="Description of move_table_partition.gif follows"/><br/>
<a id="sthref3824" href="img_text/move_table_partition.htm">Description of the illustration &#39;&#39;move_table_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHGFFCJ"></a><a id="SQLRF56819"></a><a href="#CIHFCAFG"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span></span></a>::=</p>
<img width="234" height="58" src="img/allow_disallow_clustering.gif" alt="Description of allow_disallow_clustering.gif follows"/><br/>
<a id="sthref3825" href="img_text/allow_disallow_clustering.htm">Description of the illustration &#39;&#39;allow_disallow_clustering.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2183556"></a><a id="SQLRF53249"></a><a href="#BABEGIFH"><span class="xreftitleitalic"><span class="italic">move_table_subpartition</span></span></a>::=</p>
<img width="669" height="114" src="img/move_table_subpartition.gif" alt="Description of move_table_subpartition.gif follows"/><br/>
<a id="sthref3826" href="img_text/move_table_subpartition.htm">Description of the illustration &#39;&#39;move_table_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABCJHGG"><span class="xreftitleitalic"><span class="italic">subpartition_extended_name</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>, <a href="#i2113058"><span class="xreftitleitalic"><span class="italic">partitioning_storage_clause</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131048"></a><a id="SQLRF53250"></a><a href="#BABFDEBD"><span class="xreftitleitalic"><span class="italic">add_table_partition</span></span></a>::=</p>
<img width="767" height="367" src="img/add_table_partition.gif" alt="Description of add_table_partition.gif follows"/><br/>
<a id="sthref3827" href="img_text/add_table_partition.htm">Description of the illustration &#39;&#39;add_table_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABDECIJ"><span class="xreftitleitalic"><span class="italic">add_range_partition_clause</span>::=</span></a>, <a href="#BABFIDBB"><span class="xreftitleitalic"><span class="italic">add_list_partition_clause</span> ::=</span></a>, <a href="#BABIDFDH"><span class="xreftitleitalic"><span class="italic">add_system_partition_clause</span>::=</span></a>, <a href="#BABEFJDC"><span class="xreftitleitalic"><span class="italic">add_hash_partition_clause</span> ::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>)</p>
<p class="subhead2"><a id="BABDECIJ"></a><a id="SQLRF53251"></a><a href="#BABJIDDB"><span class="xreftitleitalic"><span class="italic">add_range_partition_clause</span></span></a>::=</p>
<img width="899" height="239" src="img/add_range_partition_clause.gif" alt="Description of add_range_partition_clause.gif follows"/><br/>
<a id="sthref3828" href="img_text/add_range_partition_clause.htm">Description of the illustration &#39;&#39;add_range_partition_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113516"><span class="xreftitleitalic"><span class="italic">range_values_clause</span>::=</span></a>, <a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>, <a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>, <a href="#CJAJGCIB"><span class="xreftitleitalic"><span class="italic">individual_hash_subparts</span>::=</span></a>, <a href="#i2113806"><span class="xreftitleitalic"><span class="italic">hash_subparts_by_quantity</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABEFJDC"></a><a id="SQLRF53252"></a><a href="#BABEJIIH"><span class="xreftitleitalic"><span class="italic">add_hash_partition_clause</span></span></a> ::=</p>
<img width="673" height="46" src="img/add_hash_partition_clause.gif" alt="Description of add_hash_partition_clause.gif follows"/><br/>
<a id="sthref3829" href="img_text/add_hash_partition_clause.htm">Description of the illustration &#39;&#39;add_hash_partition_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113058"><span class="xreftitleitalic"><span class="italic">partitioning_storage_clause</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABFIDBB"></a><a id="SQLRF53253"></a><a href="#BABBGIAI"><span class="xreftitleitalic"><span class="italic">add_list_partition_clause</span></span></a> ::=</p>
<img width="883" height="239" src="img/add_list_partition_clause.gif" alt="Description of add_list_partition_clause.gif follows"/><br/>
<a id="sthref3830" href="img_text/add_list_partition_clause.htm">Description of the illustration &#39;&#39;add_list_partition_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113650"><span class="xreftitleitalic"><span class="italic">list_values_clause</span>::=</span></a>, <a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>, <a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>, <a href="#CJAJGCIB"><span class="xreftitleitalic"><span class="italic">individual_hash_subparts</span>::=</span></a>, <a href="#i2113806"><span class="xreftitleitalic"><span class="italic">hash_subparts_by_quantity</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABIDFDH"></a><a id="SQLRF53254"></a><a href="#BABJDEII"><span class="xreftitleitalic"><span class="italic">add_system_partition_clause</span></span></a>::=</p>
<img width="411" height="37" src="img/add_system_partition_clause.gif" alt="Description of add_system_partition_clause.gif follows"/><br/>
<a id="sthref3831" href="img_text/add_system_partition_clause.htm">Description of the illustration &#39;&#39;add_system_partition_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABDIFCC"></a><a id="SQLRF53255"></a><span class="italic"><a href="#CJADCJAH"><span class="xreftitleitalic"><span class="italic">add_range_subpartition</span></span></a></span> ::=</p>
<img width="640" height="58" src="img/add_range_subpartition.gif" alt="Description of add_range_subpartition.gif follows"/><br/>
<a id="sthref3832" href="img_text/add_range_subpartition.htm">Description of the illustration &#39;&#39;add_range_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2185729"></a><a id="SQLRF53256"></a><a href="#BABEJBFH"><span class="xreftitleitalic"><span class="italic">add_hash_subpartition</span></span></a> ::=</p>
<img width="761" height="46" src="img/add_hash_subpartition.gif" alt="Description of add_hash_subpartition.gif follows"/><br/>
<a id="sthref3833" href="img_text/add_hash_subpartition.htm">Description of the illustration &#39;&#39;add_hash_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAJGCIB"><span class="xreftitleitalic"><span class="italic">individual_hash_subparts</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2114547"></a><a id="SQLRF53257"></a><a href="#BABJCGGB"><span class="xreftitleitalic"><span class="italic">add_list_subpartition</span></span></a>::=</p>
<img width="624" height="58" src="img/add_list_subpartition.gif" alt="Description of add_list_subpartition.gif follows"/><br/>
<a id="sthref3834" href="img_text/add_list_subpartition.htm">Description of the illustration &#39;&#39;add_list_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABDJCIH"></a><a id="SQLRF53258"></a><a href="#BABDDGBB"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span></span></a>:=</p>
<img width="513" height="91" src="img/dependent_tables_clause.gif" alt="Description of dependent_tables_clause.gif follows"/><br/>
<a id="sthref3835" href="img_text/dependent_tables_clause.htm">Description of the illustration &#39;&#39;dependent_tables_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113793"><span class="xreftitleitalic"><span class="italic">partition_spec</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131056"></a><a id="SQLRF53259"></a><a href="#BABJBADE"><span class="xreftitleitalic"><span class="italic">coalesce_table_partition</span></span></a>::=</p>
<img width="728" height="46" src="img/coalesce_table_partition.gif" alt="Description of coalesce_table_partition.gif follows"/><br/>
<a id="sthref3836" href="img_text/coalesce_table_partition.htm">Description of the illustration &#39;&#39;coalesce_table_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABFBAAC"></a><a id="SQLRF53260"></a><a href="#CIHIHBEJ"><span class="xreftitleitalic"><span class="italic">coalesce_table_subpartition</span></span></a>::=</p>
<img width="838" height="46" src="img/coalesce_table_subpartition.gif" alt="Description of coalesce_table_subpartition.gif follows"/><br/>
<a id="sthref3837" href="img_text/coalesce_table_subpartition.htm">Description of the illustration &#39;&#39;coalesce_table_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131064"></a><a id="SQLRF53261"></a><a href="#BABJGBFB"><span class="xreftitleitalic"><span class="italic">drop_table_partition</span></span></a>::=</p>
<img width="572" height="67" src="img/drop_table_partition.gif" alt="Description of drop_table_partition.gif follows"/><br/>
<a id="sthref3838" href="img_text/drop_table_partition.htm">Description of the illustration &#39;&#39;drop_table_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAIDFBB"><span class="xreftitleitalic"><span class="italic">partition_extended_names</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2131072"></a><a id="SQLRF53262"></a><a href="#BABDJAAI"><span class="xreftitleitalic"><span class="italic">drop_table_subpartition</span></span></a> ::=</p>
<img width="591" height="67" src="img/drop_table_subpartition.gif" alt="Description of drop_table_subpartition.gif follows"/><br/>
<a id="sthref3839" href="img_text/drop_table_subpartition.htm">Description of the illustration &#39;&#39;drop_table_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJABABJC"><span class="xreftitleitalic"><span class="italic">subpartition_extended_names</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2131202"></a><a id="SQLRF53263"></a><a href="#BABEDEJE"><span class="xreftitleitalic"><span class="italic">rename_partition_subpart</span></span></a>::=</p>
<img width="421" height="58" src="img/rename_partition_subpart.gif" alt="Description of rename_partition_subpart.gif follows"/><br/>
<a id="sthref3840" href="img_text/rename_partition_subpart.htm">Description of the illustration &#39;&#39;rename_partition_subpart.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#BABCJHGG"><span class="xreftitleitalic"><span class="italic">subpartition_extended_name</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2131210"></a><a id="SQLRF53264"></a><a href="#BABGFDAI"><span class="xreftitleitalic"><span class="italic">truncate_partition_subpart</span></span></a>::=</p>
<img width="793" height="178" src="img/truncate_partition_subpart.gif" alt="Description of truncate_partition_subpart.gif follows"/><br/>
<a id="sthref3841" href="img_text/truncate_partition_subpart.htm">Description of the illustration &#39;&#39;truncate_partition_subpart.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAIDFBB"><span class="xreftitleitalic"><span class="italic">partition_extended_names</span>::=</span></a>, <a href="#CJABABJC"><span class="xreftitleitalic"><span class="italic">subpartition_extended_names</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>)</p>
<p class="subhead2"><a id="CJAIDFBB"></a><a id="SQLRF56384"></a><span class="italic">partition_extended_names</span>::=</p>
<img width="471" height="123" src="img/partition_extended_names.gif" alt="Description of partition_extended_names.gif follows"/><br/>
<a id="sthref3842" href="img_text/partition_extended_names.htm">Description of the illustration &#39;&#39;partition_extended_names.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CJABABJC"></a><a id="SQLRF56385"></a><span class="italic">subpartition_extended_names</span>::=</p>
<img width="513" height="123" src="img/subpartition_extended_names.gif" alt="Description of subpartition_extended_names.gif follows"/><br/>
<a id="sthref3843" href="img_text/subpartition_extended_names.htm">Description of the illustration &#39;&#39;subpartition_extended_names.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2131218"></a><a id="SQLRF53265"></a><a href="#BABIBGDC"><span class="xreftitleitalic"><span class="italic">split_table_partition</span></span></a>::=</p>
<img width="746" height="440" src="img/split_table_partition.gif" alt="Description of split_table_partition.gif follows"/><br/>
<a id="sthref3844" href="img_text/split_table_partition.htm">Description of the illustration &#39;&#39;split_table_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#BABJFIAJ"><span class="xreftitleitalic"><span class="italic">range_partition_desc</span>::=</span></a>, <a href="#BABBAADH"><span class="xreftitleitalic"><span class="italic">list_partition_desc</span>::=</span></a>, <a href="#i2113793"><span class="xreftitleitalic"><span class="italic">partition_spec</span>::=</span></a>, <a href="#CJAHGFAH"><span class="xreftitleitalic"><span class="italic">split_nested_table_part</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAHGFAH"></a><a id="SQLRF53266"></a><span class="italic">split_nested_table_part</span>::=</p>
<img width="826" height="103" src="img/split_nested_table_part.gif" alt="Description of split_nested_table_part.gif follows"/><br/>
<a id="sthref3845" href="img_text/split_nested_table_part.htm">Description of the illustration &#39;&#39;split_nested_table_part.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF53267"></a><span class="italic">nested_table_partition_spec</span>::=</p>
<img width="381" height="46" src="img/nested_table_partition_spec.gif" alt="Description of nested_table_partition_spec.gif follows"/><br/>
<a id="sthref3846" href="img_text/nested_table_partition_spec.htm">Description of the illustration &#39;&#39;nested_table_partition_spec.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2131226"></a><a id="SQLRF53268"></a><a href="#BABDBHGE"><span class="xreftitleitalic"><span class="italic">split_table_subpartition</span></span></a> ::=</p>
<img width="758" height="407" src="img/split_table_subpartition.gif" alt="Description of split_table_subpartition.gif follows"/><br/>
<a id="sthref3847" href="img_text/split_table_subpartition.htm">Description of the illustration &#39;&#39;split_table_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABCJHGG"><span class="xreftitleitalic"><span class="italic">subpartition_extended_name</span>::=</span></a>, <a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>, <a href="#CJACDEBC"><span class="xreftitleitalic"><span class="italic">subpartition_spec</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a></p>
<p class="subhead2"><a id="CJACDEBC"></a><a id="SQLRF56325"></a><span class="italic">subpartition_spec</span>::=</p>
<img width="471" height="46" src="img/subpartition_spec.gif" alt="Description of subpartition_spec.gif follows"/><br/>
<a id="sthref3848" href="img_text/subpartition_spec.htm">Description of the illustration &#39;&#39;subpartition_spec.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2131234"></a><a id="SQLRF53269"></a><a href="#BABJECDB"><span class="xreftitleitalic"><span class="italic">merge_table_partitions</span></span></a> ::=</p>
<img width="756" height="138" src="img/merge_table_partitions.gif" alt="Description of merge_table_partitions.gif follows"/><br/>
<a id="sthref3849" href="img_text/merge_table_partitions.htm">Description of the illustration &#39;&#39;merge_table_partitions.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJABIHHJ"><span class="xreftitleitalic"><span class="italic">partition_or_key_value</span>::=</span></a>, <a href="#i2113793"><span class="xreftitleitalic"><span class="italic">partition_spec</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJABIHHJ"></a><a id="SQLRF56568"></a><span class="italic">partition_or_key_value</span>::=</p>
<img width="315" height="91" src="img/partition_or_key_value.gif" alt="Description of partition_or_key_value.gif follows"/><br/>
<a id="sthref3850" href="img_text/partition_or_key_value.htm">Description of the illustration &#39;&#39;partition_or_key_value.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2131242"></a><a id="SQLRF53270"></a><a href="#BABCGHAG"><span class="xreftitleitalic"><span class="italic">merge_table_subpartitions</span></span></a> ::=</p>
<img width="895" height="162" src="img/merge_table_subpartitions.gif" alt="Description of merge_table_subpartitions.gif follows"/><br/>
<a id="sthref3851" href="img_text/merge_table_subpartitions.htm">Description of the illustration &#39;&#39;merge_table_subpartitions.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAEFEII"><span class="xreftitleitalic"><span class="italic">subpartition_or_key_value</span>::=</span></a>, <a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>, <a href="#BABDJCIH"><span class="xreftitleitalic"><span class="italic">dependent_tables_clause</span>:=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAEFEII"></a><a id="SQLRF56569"></a><span class="italic">subpartition_or_key_value</span>::=</p>
<img width="333" height="91" src="img/subpartition_or_key_value.gif" alt="Description of subpartition_or_key_value.gif follows"/><br/>
<a id="sthref3852" href="img_text/subpartition_or_key_value.htm">Description of the illustration &#39;&#39;subpartition_or_key_value.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2131250"></a><a id="SQLRF53271"></a><a href="#BABHHAHF"><span class="xreftitleitalic"><span class="italic">exchange_partition_subpart</span></span></a> ::=<a id="sthref3853"></a><a id="sthref3854"></a><a id="sthref3855"></a><a id="sthref3856"></a></p>
<img width="649" height="246" src="img/exchange_partition_subpart.gif" alt="Description of exchange_partition_subpart.gif follows"/><br/>
<a id="sthref3857" href="img_text/exchange_partition_subpart.htm">Description of the illustration &#39;&#39;exchange_partition_subpart.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFJDCG"><span class="xreftitleitalic"><span class="italic">partition_extended_name</span>::=</span></a>, <a href="#BABCJHGG"><span class="xreftitleitalic"><span class="italic">subpartition_extended_name</span>::=</span></a>, <a href="#i2185677"><span class="xreftitleitalic"><span class="italic">exceptions_clause</span>::=</span></a>, <a href="#i2151566"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>)</p>
<p class="subhead2"><a id="i2185677"></a><a id="SQLRF53272"></a><a href="#BABEEFED"><span class="xreftitleitalic"><span class="italic">exceptions_clause</span></span></a>::=</p>
<img width="364" height="46" src="img/exceptions_clause.gif" alt="Description of exceptions_clause.gif follows"/><br/>
<a id="sthref3858" href="img_text/exceptions_clause.htm">Description of the illustration &#39;&#39;exceptions_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2113516"></a><a id="SQLRF53273"></a><span class="italic">range_values_clause</span>::=</p>
<img width="411" height="91" src="img/range_values_clause.gif" alt="Description of range_values_clause.gif follows"/><br/>
<a id="sthref3859" href="img_text/range_values_clause.htm">Description of the illustration &#39;&#39;range_values_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2113650"></a><a id="SQLRF53274"></a><span class="italic">list_values_clause</span>::=</p>
<img width="298" height="123" src="img/list_values_clause.gif" alt="Description of list_values_clause.gif follows"/><br/>
<a id="sthref3860" href="img_text/list_values_clause.htm">Description of the illustration &#39;&#39;list_values_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2113756"></a><a id="SQLRF53275"></a><span class="italic">table_partition_description</span>::=</p>
<img width="796" height="289" src="img/table_partition_description.gif" alt="Description of table_partition_description.gif follows"/><br/>
<a id="sthref3861" href="img_text/table_partition_description.htm">Description of the illustration &#39;&#39;table_partition_description.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJABFJEA"><span class="xreftitleitalic"><span class="italic">deferred_segment_creation</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>, <a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CIHECGJH"><span class="xreftitleitalic"><span class="italic">prefix_compression</span>::=</span></a>, <a href="#CIHGCFFI"><span class="xreftitleitalic"><span class="italic">inmemory_clause</span>::=</span></a>, <a href="#CJAJEHJB"><span class="xreftitleitalic"><span class="italic">ilm_clause</span>::=</span></a>, <a href="#i2104128"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span>::=</span></a>, <a href="#i2104111"><span class="xreftitleitalic"><span class="italic">varray_col_properties</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABJFIAJ"></a><a id="SQLRF53276"></a><span class="italic">range_partition_desc</span>::=</p>
<img width="866" height="239" src="img/range_partition_desc.gif" alt="Description of range_partition_desc.gif follows"/><br/>
<a id="sthref3862" href="img_text/range_partition_desc.htm">Description of the illustration &#39;&#39;range_partition_desc.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113516"><span class="xreftitleitalic"><span class="italic">range_values_clause</span>::=</span></a>, <a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>, <a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABBAADH"></a><a id="SQLRF53277"></a><span class="italic">list_partition_desc</span>::=</p>
<img width="850" height="239" src="img/list_partition_desc.gif" alt="Description of list_partition_desc.gif follows"/><br/>
<a id="sthref3863" href="img_text/list_partition_desc.htm">Description of the illustration &#39;&#39;list_partition_desc.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113650"><span class="xreftitleitalic"><span class="italic">list_values_clause</span>::=</span></a>, <a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>, <a href="#BABIBBGE"><span class="xreftitleitalic"><span class="italic">range_subpartition_desc</span>::=</span></a>, <a href="#BABDDDFE"><span class="xreftitleitalic"><span class="italic">list_subpartition_desc</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABIBBGE"></a><a id="SQLRF53278"></a><span class="italic">range_subpartition_desc</span>::=</p>
<img width="760" height="46" src="img/range_subpartition_desc.gif" alt="Description of range_subpartition_desc.gif follows"/><br/>
<a id="sthref3864" href="img_text/range_subpartition_desc.htm">Description of the illustration &#39;&#39;range_subpartition_desc.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113516"><span class="xreftitleitalic"><span class="italic">range_values_clause</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>, <a href="#i2113058"><span class="xreftitleitalic"><span class="italic">partitioning_storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABDDDFE"></a><a id="SQLRF53279"></a><span class="italic">list_subpartition_desc</span>::=</p>
<img width="746" height="46" src="img/list_subpartition_desc.gif" alt="Description of list_subpartition_desc.gif follows"/><br/>
<a id="sthref3865" href="img_text/list_subpartition_desc.htm">Description of the illustration &#39;&#39;list_subpartition_desc.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113650"><span class="xreftitleitalic"><span class="italic">list_values_clause</span>::=</span></a>, <a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>, <a href="#i2113058"><span class="xreftitleitalic"><span class="italic">partitioning_storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJAJGCIB"></a><a id="SQLRF53280"></a><span class="italic">individual_hash_subparts</span>::=</p>
<img width="628" height="46" src="img/individual_hash_subparts.gif" alt="Description of individual_hash_subparts.gif follows"/><br/>
<a id="sthref3866" href="img_text/individual_hash_subparts.htm">Description of the illustration &#39;&#39;individual_hash_subparts.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CJAIICCF"><span class="xreftitleitalic"><span class="italic">indexing_clause</span>::=</span></a>, <a href="#i2113058"><span class="xreftitleitalic"><span class="italic">partitioning_storage_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2113806"></a><a id="SQLRF53281"></a><span class="italic">hash_subparts_by_quantity</span>::=</p>
<img width="518" height="79" src="img/hash_subparts_by_quantity.gif" alt="Description of hash_subparts_by_quantity.gif follows"/><br/>
<a id="sthref3867" href="img_text/hash_subparts_by_quantity.htm">Description of the illustration &#39;&#39;hash_subparts_by_quantity.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2113058"></a><a id="SQLRF53282"></a><span class="italic">partitioning_storage_clause</span>::=</p>
<img width="720" height="346" src="img/partitioning_storage_clause.gif" alt="Description of partitioning_storage_clause.gif follows"/><br/>
<a id="sthref3868" href="img_text/partitioning_storage_clause.htm">Description of the illustration &#39;&#39;partitioning_storage_clause.gif&#39;&#39;</a><br/>
<br/>
<p><a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#i2082635"><span class="xreftitleitalic"><span class="italic">index_compression</span>::=</span></a>, <a href="#CIHGCFFI"><span class="xreftitleitalic"><span class="italic">inmemory_clause</span>::=</span></a>, <a href="#CJAJEHJB"><span class="xreftitleitalic"><span class="italic">ilm_clause</span>::=</span></a>, <a href="#BABGIABF"><span class="xreftitleitalic"><span class="italic">LOB_partitioning_storage</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2113661"></a><a id="SQLRF53284"></a><span class="italic">partition_attributes</span>::=</p>
<img width="801" height="282" src="img/partition_attributes.gif" alt="Description of partition_attributes.gif follows"/><br/>
<a id="sthref3869" href="img_text/partition_attributes.htm">Description of the illustration &#39;&#39;partition_attributes.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2125989"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span>::=</span></a>, <a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>, <a href="#i2082029"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span> ::=</span></a>, <a href="#i2082041"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span>::=</span></a>, <a href="#i2192658"><span class="xreftitleitalic"><span class="italic">shrink_clause</span>::=</span></a>, <a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#CIHGCFFI"><span class="xreftitleitalic"><span class="italic">inmemory_clause</span>::=</span></a>, <a href="#i2104188"><span class="xreftitleitalic"><span class="italic">modify_LOB_parameters</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2113793"></a><a id="SQLRF53285"></a><span class="italic">partition_spec</span>::=</p>
<img width="425" height="46" src="img/partition_spec.gif" alt="Description of partition_spec.gif follows"/><br/>
<a id="sthref3870" href="img_text/partition_spec.htm">Description of the illustration &#39;&#39;partition_spec.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2113756"><span class="xreftitleitalic"><span class="italic">table_partition_description</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2151566"></a><a id="SQLRF53286"></a><a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>::=</p>
<img width="220" height="58" src="img/update_index_clauses.gif" alt="Description of update_index_clauses.gif follows"/><br/>
<a id="sthref3871" href="img_text/update_index_clauses.htm">Description of the illustration &#39;&#39;update_index_clauses.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CIHCAAGD"><span class="xreftitleitalic"><span class="italic">update_global_index_clause</span> ::=</span></a>, <a href="#CIHCCCIE"><span class="xreftitleitalic"><span class="italic">update_all_indexes_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="CIHCAAGD"></a><a id="SQLRF53287"></a><a href="#i2149942"><span class="xreftitleitalic"><span class="italic">update_global_index_clause</span></span></a> ::=</p>
<img width="289" height="58" src="img/update_global_index_clause.gif" alt="Description of update_global_index_clause.gif follows"/><br/>
<a id="sthref3872" href="img_text/update_global_index_clause.htm">Description of the illustration &#39;&#39;update_global_index_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="CIHCCCIE"></a><a id="SQLRF53288"></a><a href="#BABEJHCA"><span class="xreftitleitalic"><span class="italic">update_all_indexes_clause</span></span></a>::=</p>
<img width="609" height="110" src="img/update_all_indexes_clause.gif" alt="Description of update_all_indexes_clause.gif follows"/><br/>
<a id="sthref3873" href="img_text/update_all_indexes_clause.htm">Description of the illustration &#39;&#39;update_all_indexes_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABIHIDE"><span class="xreftitleitalic"><span class="italic">update_index_partition</span>::=</span></a>, <a href="#BABFDFIG"><span class="xreftitleitalic"><span class="italic">update_index_subpartition</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABIHIDE"></a><a id="SQLRF53289"></a><span class="italic">update_index_partition</span>::=</p>
<img width="416" height="79" src="img/update_index_partition.gif" alt="Description of update_index_partition.gif follows"/><br/>
<a id="sthref3874" href="img_text/update_index_partition.htm">Description of the illustration &#39;&#39;update_index_partition.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABFCJCD"><span class="xreftitleitalic"><span class="italic">index_partition_description</span>::=</span></a>, <a href="#BABHGGHH"><span class="xreftitleitalic"><span class="italic">index_subpartition_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABFDFIG"></a><a id="SQLRF53290"></a><span class="italic">update_index_subpartition</span>::=</p>
<img width="520" height="79" src="img/update_index_subpartition.gif" alt="Description of update_index_subpartition.gif follows"/><br/>
<a id="sthref3875" href="img_text/update_index_subpartition.htm">Description of the illustration &#39;&#39;update_index_subpartition.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="BABFCJCD"></a><a id="SQLRF53291"></a><span class="italic">index_partition_description</span>::=</p>
<img width="801" height="143" src="img/index_partition_description.gif" alt="Description of index_partition_description.gif follows"/><br/>
<a id="sthref3876" href="img_text/index_partition_description.htm">Description of the illustration &#39;&#39;index_partition_description.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2082635"><span class="xreftitleitalic"><span class="italic">index_compression</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABHGGHH"></a><a id="SQLRF53292"></a><span class="italic">index_subpartition_clause</span>::=</p>
<img width="947" height="175" src="img/index_subpartition_clause.gif" alt="Description of index_subpartition_clause.gif follows"/><br/>
<a id="sthref3877" href="img_text/index_subpartition_clause.htm">Description of the illustration &#39;&#39;index_subpartition_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2082635"><span class="xreftitleitalic"><span class="italic">index_compression</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2089072"></a><a id="SQLRF53293"></a><a href="#i2128444"><span class="xreftitleitalic"><span class="italic">parallel_clause</span></span></a> ::=</p>
<img width="241" height="79" src="img/parallel_clause.gif" alt="Description of parallel_clause.gif follows"/><br/>
<a id="sthref3878" href="img_text/parallel_clause.htm">Description of the illustration &#39;&#39;parallel_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2081902"></a><a id="SQLRF53294"></a><a href="#i2085301"><span class="xreftitleitalic"><span class="italic">move_table_clause</span></span></a> ::=<a id="sthref3879"></a><a id="sthref3880"></a></p>
<img width="763" height="154" src="img/move_table_clause.gif" alt="Description of move_table_clause.gif follows"/><br/>
<a id="sthref3881" href="img_text/move_table_clause.htm">Description of the illustration &#39;&#39;move_table_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2085649"><span class="xreftitleitalic"><span class="italic">segment_attributes_clause</span>::=</span></a>, <a href="#i2183370"><span class="xreftitleitalic"><span class="italic">table_compression</span> ::=</span></a>, <a href="#i2082964"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span> ::=</span></a>, <a href="#i2104128"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span>::=</span></a>, <a href="#i2104111"><span class="xreftitleitalic"><span class="italic">varray_col_properties</span>::=</span></a>, <a href="#i2089072"><span class="xreftitleitalic"><span class="italic">parallel_clause</span> ::=</span></a>, <a href="#CIHGFFCJ"><span class="xreftitleitalic"><span class="italic">allow_disallow_clustering</span>::=</span></a>)</p>
<p class="subhead2"><a id="CJACHAEB"></a><a id="SQLRF55997"></a><a href="#CJADIFFB"><span class="xreftitleitalic"><span class="italic">modify_opaque_type</span></span></a>::=</p>
<img width="657" height="58" src="img/modify_opaque_type.gif" alt="Description of modify_opaque_type.gif follows"/><br/>
<a id="sthref3882" href="img_text/modify_opaque_type.htm">Description of the illustration &#39;&#39;modify_opaque_type.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2183600"></a><a id="SQLRF53296"></a><a href="#i2056917"><span class="xreftitleitalic"><span class="italic">enable_disable_clause</span></span></a>::=</p>
<img width="683" height="221" src="img/enable_disable_clause.gif" alt="Description of enable_disable_clause.gif follows"/><br/>
<a id="sthref3883" href="img_text/enable_disable_clause.htm">Description of the illustration &#39;&#39;enable_disable_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2126124"><span class="xreftitleitalic"><span class="italic">using_index_clause</span>::=</span></a>, <a href="#i2185677"><span class="xreftitleitalic"><span class="italic">exceptions_clause</span>::=</span></a>,)</p>
<p class="subhead2"><a id="i2126124"></a><a id="SQLRF53297"></a><span class="italic">using_index_clause</span>::=<a id="sthref3884"></a></p>
<img width="379" height="110" src="img/using_index_clause.gif" alt="Description of using_index_clause.gif follows"/><br/>
<a id="sthref3885" href="img_text/using_index_clause.htm">Description of the illustration &#39;&#39;using_index_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="statements_5013.htm#i2125762"><span class="xreftitleitalic"><span class="italic">create_index</span>::=</span></a>, <a href="#i2141360"><span class="xreftitleitalic"><span class="italic">index_properties</span>::=</span></a>)</p>
<p class="subhead2"><a id="i2141360"></a><a id="SQLRF53298"></a><span class="italic">index_properties</span>::=</p>
<img width="392" height="178" src="img/index_properties.gif" alt="Description of index_properties.gif follows"/><br/>
<a id="sthref3886" href="img_text/index_properties.htm">Description of the illustration &#39;&#39;index_properties.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="statements_5013.htm#i2126415"><span class="xreftitleitalic"><span class="italic">global_partitioned_index</span>::=</span></a>, <a href="statements_5013.htm#i2125897"><span class="xreftitleitalic"><span class="italic">local_partitioned_index</span> ::=</span></a>&mdash;part of <code dir="ltr">CREATE</code> <code dir="ltr">INDEX</code>, <a href="#i2141459"><span class="xreftitleitalic"><span class="italic">index_attributes</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">domain_index_clause</span></code>: not supported in <code dir="ltr"><span class="codeinlineitalic">using_index_clause</span></code>)</p>
<p class="subhead2"><a id="i2141459"></a><a id="SQLRF53299"></a><span class="italic">index_attributes</span>::=</p>
<img width="341" height="435" src="img/index_attributes.gif" alt="Description of index_attributes.gif follows"/><br/>
<a id="sthref3887" href="img_text/index_attributes.htm">Description of the illustration &#39;&#39;index_attributes.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#i2125989"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span>::=</span></a>, <a href="clauses005.htm#CJAHABGF"><span class="xreftitleitalic"><span class="italic">logging_clause</span>::=</span></a>, <a href="#i2082635"><span class="xreftitleitalic"><span class="italic">index_compression</span>::=</span></a>, <code dir="ltr"><span class="codeinlineitalic">partial_index_clause</span></code> and <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>: not supported in <code dir="ltr"><span class="codeinlineitalic">using_index_clause</span></code>)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2055366"></a>Semantics</p>
<p>Many clauses of the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement have the same functionality they have in a <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement. For more information on such clauses, see <a href="statements_7002.htm#i2095331">CREATE TABLE</a>.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
Operations performed by the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement can cause Oracle Database to invalidate procedures and stored functions that access the table. For information on how and when the database invalidates such objects, see <a class="olink ADFNS1401" href="../ADFNS/adfns_externproc.htm#ADFNS1401"><span class="italic">Oracle Database Development Guide</span></a>.</div>
<p class="subhead1"><a id="SQLRF53300"></a><span class="italic">schema</span></p>
<p>Specify the schema containing the table. If you omit <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then Oracle Database assumes the table is in your own schema.</p>
<p class="subhead1"><a id="SQLRF53301"></a><span class="italic">table</span></p>
<p>Specify the name of the table to be altered.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
If you alter a table that is a master table for one or more materialized views, then Oracle Database marks the materialized views <code dir="ltr">INVALID</code>. Invalid materialized views cannot be used by query rewrite and cannot be refreshed. For information on revalidating a materialized view, see <a href="statements_2002.htm#CCHECCJB">ALTER MATERIALIZED VIEW</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DWHSG008" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG008"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on materialized views in general</div>
<p><a id="SQLRF53302"></a><span class="subhead3">Restrictions on Altering Temporary Tables&nbsp;</span>You can modify, drop columns from, or rename a temporary table. However, for a temporary table you cannot:</p>
<ul>
<li>
<p>Add columns of nested table type. You can add columns of other types.</p>
</li>
<li>
<p>Specify referential integrity (foreign key) constraints for an added or modified column.</p>
</li>
<li>
<p>Specify the following clauses of the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> for an added or modified LOB column: <code dir="ltr">TABLESPACE</code>, <code dir="ltr"><span class="codeinlineitalic">storage_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">logging_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code>, or <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code>.</p>
</li>
<li>
<p>Specify the <code dir="ltr"><span class="codeinlineitalic">physical_attributes_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">nested_table_col_properties</span></code>, <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code>, or any of the index-organized table clauses.</p>
</li>
<li>
<p>Exchange partitions between a partition and a temporary table.</p>
</li>
<li>
<p>Specify the <code dir="ltr"><span class="codeinlineitalic">logging_clause</span></code>.</p>
</li>
<li>
<p>Specify <code dir="ltr">MOVE.</code></p>
</li>
<li>
<p>Add an <code dir="ltr">INVISIBLE</code> column or modify an existing column to be <code dir="ltr">INVISIBLE</code>.</p>
</li>
</ul>
<p><a id="SQLRF53303"></a><span class="subhead3">Restrictions on Altering External Tables&nbsp;</span>You can add, drop, or modify the columns of an external table. However, for an external table you cannot:</p>
<ul>
<li>
<p>Add a <code dir="ltr">LONG</code>, LOB, or object type column or change the data type of an external table column to any of these data types.</p>
</li>
<li>
<p>Add a constraint to an external table.</p>
</li>
<li>
<p>Modify the storage parameters of an external table.</p>
</li>
<li>
<p>Specify the <code dir="ltr"><span class="codeinlineitalic">logging_clause</span></code>.</p>
</li>
<li>
<p>Specify <code dir="ltr">MOVE</code>.</p>
</li>
<li>
<p>Add an <code dir="ltr">INVISIBLE</code> column or modify an existing column to be <code dir="ltr">INVISIBLE</code>.</p>
</li>
</ul>
<p class="subhead2"><a id="i2081087"></a><a id="SQLRF53304"></a><span class="italic">alter_table_properties</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">alter_table_clauses</span></code> to modify a database table.</p>
<p class="subhead1"><a id="i2080299"></a><a id="SQLRF53305"></a><span class="italic">physical_attributes_clau<a id="sthref3888"></a><a id="sthref3889"></a><a id="sthref3890"></a>se</span> <a id="sthref3891"></a><a id="sthref3892"></a><a id="sthref3893"></a><a id="sthref3894"></a><a id="sthref3895"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">physical_attributes_clause</span></code> lets you change the value of the <code dir="ltr">PCTFREE</code>, <code dir="ltr">PCTUSED</code>, and <code dir="ltr">INITRANS</code> parameters and storage characteristics. Refer to <a href="clauses007.htm#g1058547"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span></span></a> and <a href="clauses007.htm#i1026834"><span class="xreftitleitalic"><span class="italic">storage_clause</span></span></a> for a full description of these parameters and characteristics.</p>
<p><a id="SQLRF53306"></a><span class="subhead3">Restrictions on Altering Table Physical Attributes&nbsp;</span>Altering physical attributes is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr">PCTUSED</code> parameter for the index segment of an index-organized table.</p>
</li>
<li>
<p>If you attempt to alter the storage attributes of tables in locally managed tablespaces, then Oracle Database raises an error. However, if some segments of a partitioned table reside in a locally managed tablespace and other segments reside in a dictionary-managed tablespace, then the database alters the storage attributes of the segments in the dictionary-managed tablespace but does not alter the attributes of the segments in the locally managed tablespace, and does not raise an error.</p>
</li>
<li>
<p>For segments with automatic segment-space management, the database ignores attempts to change the <code dir="ltr">PCTUSED</code> setting. If you alter the <code dir="ltr">PCTFREE</code> setting, then you must subsequently run the <code dir="ltr">DBMS_REPAIR.SEGMENT_FIX_STATUS</code> procedure to implement the new setting on blocks already allocated to the segment.</p>
</li>
</ul>
<p><a id="SQLRF53307"></a><span class="subhead3">Cautions on Altering Tables Physical Attributes&nbsp;</span>The values you specify in this clause affect the table as follows:</p>
<ul>
<li>
<p>For a nonpartitioned table, the values you specify override any values specified for the table at create time.</p>
</li>
<li>
<p>For a range-, list-, or hash-partitioned table, the values you specify are the default values for the table and the actual values for every existing partition, overriding any values already set for the partitions. To change default table attributes without overriding existing partition values, use the <code dir="ltr"><span class="codeinlineitalic">modify_table_default_attrs</span></code> clause.</p>
</li>
<li>
<p>For a composite-partitioned table, the values you specify are the default values for the table and all partitions of the table and the actual values for all subpartitions of the table, overriding any values already set for the subpartitions. To change default partition attributes without overriding existing subpartition values, use the <code dir="ltr"><span class="codeinlineitalic">modify_table_default_attrs</span></code> clause with the <code dir="ltr">FOR</code> <code dir="ltr">PARTITION</code> clause.</p>
</li>
</ul>
<p class="subhead1"><a id="i2114766"></a><a id="SQLRF53308"></a><span class="italic">logging_clause</span> <a id="sthref3896"></a><a id="sthref3897"></a><a id="sthref3898"></a><a id="sthref3899"></a></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">logging_clause</span></code> to change the logging attribute of the table. The <code dir="ltr"><span class="codeinlineitalic">logging_clause</span></code> specifies whether subsequent <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">MOVE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">SPLIT</code> operations will be logged or not logged.</p>
<p>When used with the <code dir="ltr"><span class="codeinlineitalic">modify_table_default_attrs</span></code> clause, this clause affects the logging attribute of a partitioned table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="clauses005.htm#i999782"><span class="xreftitleitalic"><span class="italic">logging_clause</span></span></a> for a full description of this clause</p>
</li>
<li>
<p><a class="olink VLDBG010" href="../VLDBG/GUID-3E2AE088-2505-465E-A8B2-AC38813EA355.htm#VLDBG010"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for more information about the <code dir="ltr"><span class="codeinlineitalic">logging_clause</span></code> and parallel DML</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="i2192353"></a><a id="SQLRF53309"></a><span class="italic">table_compression</span> <a id="sthref3900"></a><a id="sthref3901"></a><a id="sthref3902"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">table_compression</span></code> clause is valid only for heap-organized tables. Use this clause to instruct Oracle Database whether to compress data segments to reduce disk and memory use. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#i2128733"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> for the full semantics of this clause and for information on creating objects with table compression.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The first time a table is altered in such a way that compressed data will be added, all bitmap indexes and bitmap index partitions on that table must be marked <code dir="ltr">UNUSABLE</code>.</div>
<p class="subhead1"><a id="CIHJBAJD"></a><a id="SQLRF56751"></a><span class="italic">inmemory_alter_table_clause</span></p>
<p>Use this clause to enable or disable a table or table column for the In-Memory Column Store (IM column store), or to change the in-memory parameters for a table or table column.</p>
<ul>
<li>
<p>Specify <code dir="ltr">INMEMORY</code> to enable a table for the IM column store, or to change the <code dir="ltr"><span class="codeinlineitalic">inmemory_parameters</span></code> for a table that is already enabled for the IM column store.</p>
</li>
<li>
<p>Specify the <code dir="ltr"><span class="codeinlineitalic">inmemory_column_clause</span></code> to enable or disable a table column for the IM column store, or to change the <code dir="ltr"><span class="codeinlineitalic">inmemory_memcompress</span></code> setting for a table column.</p>
</li>
<li>
<p>Specify <code dir="ltr">NO</code> <code dir="ltr">INMEMORY</code> to disable a table for the IM column store.</p>
</li>
</ul>
<p>This <code dir="ltr"><span class="codeinlineitalic">inmemory_alter_table_clause</span></code> has the same semantics as the <a href="statements_7002.htm#CEGBCAAE"><span class="xreftitleitalic"><span class="italic">inmemory_table_clause</span></span></a> of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> with the following additions:</p>
<ul>
<li>
<p>When you change the data compression method for a table that is already enabled for the IM column store, any columns that were previously assigned a specific data compression method will retain their data compression method.</p>
</li>
<li>
<p>When you disable a table for the IM column store, any column-level data compression method settings are lost. If you subsequently enable the table for the IM column store, all columns will use the table&#39;s data compression method unless you specify otherwise when enabling the table.</p>
</li>
</ul>
<p>The clauses <code dir="ltr"><span class="codeinlineitalic">inmemory_parameters</span></code> and <code dir="ltr"><span class="codeinlineitalic">inmemory_column_clause</span></code> have the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>. Refer to <a href="statements_7002.htm#CEGIDFIC"><span class="xreftitleitalic"><span class="italic">inmemory_parameters</span></span></a> and <a href="statements_7002.htm#CEGJEEBB"><span class="xreftitleitalic"><span class="italic">inmemory_column_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for the full semantics of these clauses.</p>
<p class="subhead1"><a id="CIHECEJI"></a><a id="SQLRF56782"></a><span class="italic">inmemory_clause</span></p>
<p>Use this clause to enable or disable a table partition for the IM column store, or to change the in-memory parameters for a table partition. This clause has the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>. Refer to the <a href="statements_7002.htm#CEGDHEGF"><span class="xreftitleitalic"><span class="italic">inmemory_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for the full semantics of this clause.</p>
<p class="subhead1"><a id="CJADBBDI"></a><a id="SQLRF56570"></a><span class="italic">ilm_clause</span></p>
<p>Use this clause to add, delete, enable, or disable Automatic Data Optimization policies for the table.</p>
<p><a id="SQLRF56571"></a><span class="subhead3">ADD POLICY&nbsp;</span>Specify this clause to add a policy for the table.</p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">ilm_policy_clause</span></code> to specify the policy. Refer to the <a href="#CJAJGGED"><span class="xreftitleitalic"><span class="italic">ilm_policy_clause</span></span></a> for the full semantics of this clause.</p>
<p>Oracle Database assigns a name to the policy of the form <code dir="ltr">P</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is an integer value.</p>
<p><a id="SQLRF56572"></a><span class="subhead3">{ DELETE | ENABLE | DISABLE } POLICY&nbsp;</span>Specify these clauses to delete a policy for the table, enable a policy for the table, or disable a policy for the table, respectively.</p>
<p>For <code dir="ltr"><span class="codeinlineitalic">ilm_policy_name</span></code>, specify the name of the policy. You can view policy names by querying the <code dir="ltr">POLICY_NAME</code> column of the <code dir="ltr">DBA_ILMPOLICIES</code> view.</p>
<p><a id="SQLRF56573"></a><span class="subhead3">{ DELETE_ALL, ENABLE_ALL, DISABLE_ALL }&nbsp;</span>Specify these clauses to delete all policies for the table, enable all policies for the table, or disable all policies for the table, respectively.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink VLDBG14118" href="../VLDBG/GUID-B011D86F-DCDE-4BF5-9C47-24B9650EFCA8.htm#VLDBG14118"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for more information on managing policies for Automatic Data Optimization</div>
<p class="subhead1"><a id="CJAJGGED"></a><a id="SQLRF56574"></a><span class="italic">ilm_policy_clause</span></p>
<p>This clause lets you specify an Automatic Data Optimization policy. You can use the <code dir="ltr"><span class="codeinlineitalic">ilm_compression_policy</span></code> clause to specify a compression policy or the <code dir="ltr"><span class="codeinlineitalic">ilm_tiering_policy</span></code> clause to specify a storage tiering policy.</p>
<p class="subhead2"><a id="CIHIDGIG"></a><a id="SQLRF56575"></a><span class="italic">ilm_compression_policy</span></p>
<p>Use this clause to specify a compression policy. This type of policy instructs the database to compress data when a specified condition is met. Use the <code dir="ltr">SEGMENT</code>, <code dir="ltr">GROUP</code>, or <code dir="ltr">ROW</code> clause to specify a segment-level, group-level, or row-level compression policy.</p>
<p><a id="SQLRF57057"></a><span class="subhead3"><span class="italic">table_compression</span>&nbsp;</span>Use the <code dir="ltr"><span class="codeinlineitalic">table_compression</span></code> clause to specify the compression type. This clause applies to segment-level and group-level compression policies.</p>
<p>You must specify a compression type that is higher than the current compression type. The order of compression types from lowest to highest is:</p>
<br/>
<code dir="ltr">NOCOMPRESS</code><br/>
<code dir="ltr">ROW</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">BASIC</code><br/>
<code dir="ltr">ROW</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">ADVANCED</code><br/>
<code dir="ltr">COLUMN</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">FOR</code> <code dir="ltr">QUERY</code> <code dir="ltr">LOW</code><br/>
<code dir="ltr">COLUMN</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">FOR</code> <code dir="ltr">QUERY</code> <code dir="ltr">HIGH</code><br/>
<code dir="ltr">COLUMN</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">FOR</code> <code dir="ltr">ARCHIVE</code> <code dir="ltr">LOW</code><br/>
<code dir="ltr">COLUMN</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">FOR</code> <code dir="ltr">ARCHIVE</code> <code dir="ltr">HIGH</code><br/>
<p>Refer to <a href="statements_7002.htm#i2128733"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> for the full semantics of this clause.</p>
<p><a id="SQLRF57058"></a><span class="subhead3">SEGMENT&nbsp;</span>Specify <code dir="ltr">SEGMENT</code> to create a segment-level compression policy. This type of policy instructs the database to compress table segments when the condition specified in the <code dir="ltr">AFTER</code> clause is met or when the PL/SQL function specified in the <code dir="ltr">ON</code> clause returns <code dir="ltr">TRUE</code>.</p>
<p><a id="SQLRF57059"></a><span class="subhead3">GROUP&nbsp;</span>Specify <code dir="ltr">GROUP</code> to create a group-level compression policy. This type of policy instructs the database to compress the table and its dependent objects, such as indexes and SecureFiles LOBs, when the condition specified in the <code dir="ltr">AFTER</code> clause is met or when the PL/SQL function specified in the <code dir="ltr">ON</code> clause returns <code dir="ltr">TRUE</code>.</p>
<p><a id="SQLRF57060"></a><span class="subhead3">ROW&nbsp;</span>Specify <code dir="ltr">ROW</code> to create a row-level compression policy. This type of policy instructs the database to compress database blocks in which all the rows have not been modified for a specified period of time. When creating a row-level policy, you must specify <code dir="ltr">ROW</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">ADVANCED</code> compression and you must specify <code dir="ltr">AFTER</code> <code dir="ltr"><span class="codeinlineitalic">ilm_time_period</span></code> <code dir="ltr">OF</code> <code dir="ltr">NO</code> <code dir="ltr">MODIFICATION</code>. Refer to <a href="statements_7002.htm#i2128733"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> for the full semantics of the <code dir="ltr">ROW</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">ADVANCED</code> clause.</p>
<p><a id="CIHFBHII"></a><a id="SQLRF56578"></a><span class="subhead3">AFTER&nbsp;</span>Use this clause to describe the condition that must be met in order for the policy to take effect. The condition consists of a length of time, specified with the <code dir="ltr"><span class="codeinlineitalic">ilm_time_period</span></code> clause, and one of the following condition types:</p>
<ul>
<li>
<p><code dir="ltr">OF</code> <code dir="ltr">NO</code> <code dir="ltr">ACCESS</code>: The policy will take effect after <code dir="ltr"><span class="codeinlineitalic">table</span></code> has not been accessed for the specified length of time.</p>
</li>
<li>
<p><code dir="ltr">OF</code> <code dir="ltr">NO</code> <code dir="ltr">MODIFICATION</code>: The policy will take effect after <code dir="ltr"><span class="codeinlineitalic">table</span></code> has not been modified for the specified length of time.</p>
</li>
<li>
<p><code dir="ltr">OF</code> <code dir="ltr">CREATION</code>: The policy will take effect when the specified length of time has passed since <code dir="ltr"><span class="codeinlineitalic">table</span></code> was created.</p>
</li>
</ul>
<p><a id="CIHJCABI"></a><a id="SQLRF57061"></a><span class="subhead3"><span class="italic">ilm_time_period</span>&nbsp;</span>Specify a length of time in days, months, or years after which the condition must be met. For <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, specify a positive integer. The <code dir="ltr">DAY</code> and <code dir="ltr">DAYS</code> keywords can be used interchangeably and are provided for semantic clarity. This is also the case for the <code dir="ltr">MONTH</code> and <code dir="ltr">MONTHS</code> keywords, and the <code dir="ltr">YEAR</code> and <code dir="ltr">YEARS</code> keywords.</p>
<p><a id="CIHCBJJC"></a><a id="SQLRF56579"></a><span class="subhead3">ON&nbsp;</span>Use this clause to specify a PL/SQL function that returns a boolean value. For <code dir="ltr"><span class="codeinlineitalic">function_name</span></code>, specify the name of the function. The policy will take effect when the function returns <code dir="ltr">TRUE</code>.</p>
<p class="subhead2"><a id="CJABDHAI"></a><a id="SQLRF56576"></a><span class="italic">ilm_tiering_policy</span></p>
<p>Use this clause to specify a storage tiering policy. This type of policy instructs the database to migrate data to a specified tablespace, either when a specified condition is met or when data usage reaches a specified limit. Use the <code dir="ltr">SEGMENT</code> or <code dir="ltr">GROUP</code> clause to specify a segment-level or group-level policy. You can migrate data to a read/write tablespace or a read-only tablespace.</p>
<p><a id="SQLRF57062"></a><span class="subhead3">TIER TO <span class="italic">tablespace</span>&nbsp;</span>Use this clause to migrate data to a read/write <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code>.</p>
<ul>
<li>
<p>If you specify the <code dir="ltr">ON</code> <code dir="ltr"><span class="codeinlineitalic">function</span></code> clause, then data will be migrated when <code dir="ltr"><span class="codeinlineitalic">function</span></code> returns <code dir="ltr">TRUE</code>. Refer to the <a href="#CIHCBJJC">ON</a> clause for the full semantics of this clause.</p>
</li>
<li>
<p>If you omit the <code dir="ltr">ON</code> <code dir="ltr"><span class="codeinlineitalic">function</span></code> clause, then data will be migrated when data usage of the tablespace quota reaches the percentage defined by <code dir="ltr">TBS_PERCENT_USED</code>. The database will make a best effort to migrate enough data so that the amount of free space within the tablespace quota reaches the percentage defined by <code dir="ltr">TBS_PERCENT_FREE</code>. Refer to <a class="olink ARPLS74887" href="../ARPLS/d_ilm_admin.htm#ARPLS74887"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on <code dir="ltr">TBS_PERCENT_USED</code> and <code dir="ltr">TBS_PERCENT_FREE</code>, which are constants in the <code dir="ltr">DBMS_ILM_ADMIN</code> package.</p>
</li>
</ul>
<p><a id="SQLRF57063"></a><span class="subhead3">TIER TO <span class="italic">tablespace</span> READ ONLY&nbsp;</span>Use this clause to migrate data to a read-only <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code>. When migrating data to the tablespace, the database temporarily places the tablespace in read/write mode, migrates the data, and then places the tablespace back in read-only mode.</p>
<ul>
<li>
<p>If you specify the <code dir="ltr">AFTER</code> clause, then data will be migrated when the specified condition is met. Refer to the <a href="#CIHFBHII">AFTER</a> clause for the full semantics of this clause</p>
</li>
<li>
<p>If you specify the <code dir="ltr">ON</code> <code dir="ltr"><span class="codeinlineitalic">function</span></code> clause, then data will be migrated when <code dir="ltr"><span class="codeinlineitalic">function</span></code> returns <code dir="ltr">TRUE</code>. Refer to the <a href="#CIHCBJJC">ON</a> clause for the full semantics of this clause.</p>
</li>
</ul>
<p><a id="SQLRF57064"></a><span class="subhead3">SEGMENT | GROUP&nbsp;</span>Specify <code dir="ltr">SEGMENT</code> to create a segment-level storage tiering policy. This type of policy instructs the database to migrate table segments to <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code>. Specify <code dir="ltr">GROUP</code> to create a group-level storage tiering policy. This type of policy instructs the database to migrate the table and its dependent objects, such as indexes and SecureFiles LOBs, to <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code>. The default is <code dir="ltr">SEGMENT</code>.</p>
<p class="subhead1"><a id="i2161487"></a><a id="SQLRF53310"></a><span class="italic">supplemental_table_logging <a id="sthref3903"></a><a id="sthref3904"></a><a id="sthref3905"></a></span></p>
<p><a id="sthref3906"></a><a id="sthref3907"></a><a id="sthref3908"></a><a id="sthref3909"></a>Use the <code dir="ltr"><span class="codeinlineitalic">supplemental_table_logging</span></code> clause to add or drop a redo log group or one or more supplementally logged columns in a redo log group.</p>
<ul>
<li>
<p>In the <code dir="ltr">ADD</code> clause, use <code dir="ltr"><span class="codeinlineitalic">supplemental_log_grp_clause</span></code> to create named supplemental log group. Use the <code dir="ltr"><span class="codeinlineitalic">supplemental_id_key_clause</span></code> to create a system-generated log group.</p>
</li>
<li>
<p>On the <code dir="ltr">DROP</code> clause, use <code dir="ltr">GROUP</code> <code dir="ltr"><span class="codeinlineitalic">log_group</span></code> syntax to drop a named supplemental log group and use the <code dir="ltr"><span class="codeinlineitalic">supplemental_id_key_clause</span></code> to drop a system-generated log group.</p>
</li>
</ul>
<p>The <code dir="ltr"><span class="codeinlineitalic">supplemental_log_grp_clause</span></code> and the <code dir="ltr"><span class="codeinlineitalic">supplemental_id_key_clause</span></code> have the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements. For full information on these clauses, refer to <a href="statements_7002.htm#i2209474"><span class="xreftitleitalic"><span class="italic">supplemental_log_grp_clause</span></span></a> and <a href="statements_7002.htm#i2215249"><span class="xreftitleitalic"><span class="italic">supplemental_id_key_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SBYDB00308" href="../SBYDB/create_ls.htm#SBYDB00308"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for information on supplemental redo log groups</div>
<p class="subhead1"><a id="i2161596"></a><a id="SQLRF53311"></a><span class="italic">allocate_extent_clause</span> <a id="sthref3910"></a><a id="sthref3911"></a><a id="sthref3912"></a><a id="sthref3913"></a><a id="sthref3914"></a><a id="sthref3915"></a><a id="sthref3916"></a></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code> to explicitly allocate a new extent for the table, the partition or subpartition, the overflow data segment, the LOB data segment, or the LOB index.</p>
<p><a id="SQLRF53312"></a><span class="subhead3">Restriction on Allocating Table Extents&nbsp;</span>You cannot allocate an extent for a temporary table or for a range- or composite-partitioned table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="clauses001.htm#g1053419"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span></span></a> for a full description of this clause and <a href="#i2133144">&#34;Allocating Extents: Example&#34;</a></div>
<p class="subhead1"><a id="i2080415"></a><a id="SQLRF53313"></a><span class="italic">deallocate_unused_clause</span> <a id="sthref3917"></a><a id="sthref3918"></a><a id="sthref3919"></a><a id="sthref3920"></a><a id="sthref3921"></a></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code> to explicitly deallocate unused space at the end of the table, partition or subpartition, overflow data segment, LOB data segment, or LOB index and make the space available for other segments in the tablespace.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="clauses003.htm#g1056929"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span></span></a> for a full description of this clause and <a href="#i2057055">&#34;Deallocating Unused Space: Example&#34;</a></div>
<p class="subhead1"><a id="SQLRF53318"></a>CACHE | NOCACHE</p>
<p>The <code dir="ltr">CACHE</code> and <code dir="ltr">NOCACHE</code> clauses have the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements. For complete information on these clauses, refer to <a href="statements_7002.htm#i2215507">&#34;CACHE | NOCACHE | CACHE READS&#34;</a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. If you omit both of these clauses in an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, then the existing value is unchanged.</p>
<p class="subhead1"><a id="SQLRF53319"></a>RESULT_CACHE</p>
<p>The <code dir="ltr">RESULT_CACHE</code> clause has the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements. For complete information on this clause, refer to <a href="statements_7002.htm#CEGBGJJE">&#34;RESULT_CACHE Clause&#34;</a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. If you omit this clause in an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, then the existing setting is unchanged.</p>
<p class="subhead2"><a id="i2085241"></a><a id="SQLRF53320"></a><span class="italic">upgrade_table_clause <a id="sthref3922"></a><a id="sthref3923"></a><a id="sthref3924"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">upgrade_table_clause</span></code> is relevant for object tables and for relational tables with object columns. It lets you instruct Oracle Database to convert the metadata of the target table to conform with the latest version of each referenced type. If table is already valid, then the table metadata remains unchanged.</p>
<p><a id="SQLRF53321"></a><span class="subhead3">Restriction on Upgrading Object Tables and Columns&nbsp;</span>Within this clause, you cannot specify <code dir="ltr"><span class="codeinlineitalic">object_type_col_properties</span></code> as a clause of <code dir="ltr"><span class="codeinlineitalic">column_properties</span></code>.</p>
<p><a id="SQLRF53322"></a><span class="subhead3">INCLUDING DATA&nbsp;</span>Specify <code dir="ltr">INCLUDING</code> <code dir="ltr">DATA</code> if you want Oracle Database to convert the data in the table to the latest type version format. You can define the storage for any new column while upgrading the table by using the <a href="#i2103509"><span class="xreftitleitalic"><span class="italic">column_properties</span></span></a> and the <a href="#i2103908"><span class="xreftitleitalic"><span class="italic">LOB_partition_storage</span></span></a> . This is the default.</p>
<p>You can convert data in the table at the time you upgrade the type by specifying <code dir="ltr">CASCADE</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code> in the <code dir="ltr"><span class="codeinlineitalic">dependent_handling_clause</span></code> of the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement. See <a class="olink LNPLS99987" href="../LNPLS/alter_type.htm#LNPLS99987"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information on this clause. For information on whether a table contains data based on an older type version, refer to the <code dir="ltr">DATA_UPGRADED</code> column of the <code dir="ltr">USER_TAB_COLUMNS</code> data dictionary view.</p>
<p><a id="SQLRF53323"></a><span class="subhead3">NOT INCLUDING DATA&nbsp;</span>Specify <code dir="ltr">NOT</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">DATA</code> if you want Oracle Database to leave column data unchanged.</p>
<p><a id="SQLRF53324"></a><span class="subhead3">Restriction on NOT INCLUDING DATA&nbsp;</span>You cannot specify <code dir="ltr">NOT</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">DATA</code> if the table contains columns in Oracle8 release 8.0.x image format. To determine whether the table contains such columns, refer to the <code dir="ltr">V80_FMT_IMAGE</code> column of the <code dir="ltr">USER_TAB_COLUMNS</code> data dictionary view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information on the data dictionary views</p>
</li>
<li>
<p><a href="statements_4002.htm#i2057828">ALTER TYPE</a> for information on converting dependent table data when modifying a type upon which the table depends</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="i2085284"></a><a id="SQLRF53325"></a><span class="italic">records_per_block_clause</span> <a id="sthref3925"></a><a id="sthref3926"></a><a id="sthref3927"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">records_per_block_clause</span></code> lets you specify whether Oracle Database restricts the number of records that can be stored in a block. This clause ensures that any bitmap indexes subsequently created on the table will be as compressed as possible.</p>
<p><a id="SQLRF53326"></a><span class="subhead3">Restrictions on Records in a Block&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">record_per_block_clause</span></code> is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify either <code dir="ltr">MINIMIZE</code> or <code dir="ltr">NOMINIMIZE</code> if a bitmap index has already been defined on table. You must first drop the bitmap index.</p>
</li>
<li>
<p>You cannot specify this clause for an index-organized table or a nested table.</p>
</li>
</ul>
<p><a id="SQLRF53327"></a><span class="subhead3">MINIMIZE&nbsp;</span>Specify <code dir="ltr">MINIMIZE</code> to instruct Oracle Database to calculate the largest number of records in any block in the table and to limit future inserts so that no block can contain more than that number of records.</p>
<p>Oracle recommends that a representative set of data already exist in the table before you specify <code dir="ltr">MINIMIZE</code>. If you are using table compression (see <a href="#i2192353"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> ), then a representative set of compressed data should already exist in the table.</p>
<p><a id="SQLRF53328"></a><span class="subhead3">Restriction on MINIMIZE&nbsp;</span>You cannot specify <code dir="ltr">MINIMIZE</code> for an empty table.</p>
<p><a id="SQLRF53329"></a><span class="subhead3">NOMINIMIZE&nbsp;</span>Specify <code dir="ltr">NOMINIMIZE</code> to disable the <code dir="ltr">MINIMIZE</code> feature. This is the default.</p>
<p class="subhead2"><a id="i2192391"></a><a id="SQLRF53330"></a><span class="italic"><a id="sthref3928"></a><a id="sthref3929"></a><a id="sthref3930"></a>row_movement_clause</span></p>
<p>You cannot disable row movement in a reference-partitioned table unless row movement is also disabled in the parent table. Otherwise, this clause has the same semantics in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements. For complete information on these clauses, refer to <a href="statements_7002.htm#i2159748"><span class="xreftitleitalic"><span class="italic">row_movement_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p class="subhead2"><a id="BABHJDBJ"></a><a id="SQLRF53331"></a><span class="italic">flashback_archive_clause</span> <a id="sthref3931"></a><a id="sthref3932"></a></p>
<p>You must have the <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> object privilege on the specified flashback data archive to specify this clause. Use this clause to enable or disable historical tracking for the table.</p>
<ul>
<li>
<p>Specify <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> to enable tracking for the table. You can specify <code dir="ltr"><span class="codeinlineitalic">flashback_archive</span></code> to designate a particular flashback data archive for this table. The flashback data archive you specify much already exist.</p>
<p>If you omit the archive name, then the database uses the default flashback data archive designated for the system. If no default flashback data archive has been designated for the system, then you must specify <code dir="ltr"><span class="codeinlineitalic">flashback_archive</span></code>.</p>
<p>You cannot specify <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> to <span class="italic">change</span> the flashback data archive for this table. Instead you must first issue an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement with the <code dir="ltr">NO</code> <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> clause and then issue an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement with the <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> clause.</p>
</li>
<li>
<p>Specify <code dir="ltr">NO</code> <code dir="ltr">FLASHBACK</code> <code dir="ltr">ARCHIVE</code> to disable tracking for the table.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#BABGIIIA"><span class="xreftitleitalic"><span class="italic">flashback_archive_clause</span></span></a> for information on creating a table with tracking enabled and <a href="statements_5011.htm#BABIAECC">CREATE FLASHBACK ARCHIVE</a> for information on creating default flashback data archives</div>
<p class="subhead1"><a id="SQLRF53332"></a>RENAME TO <a id="sthref3933"></a><a id="sthref3934"></a></p>
<p>Use the <code dir="ltr">RENAME</code> clause to rename <code dir="ltr"><span class="codeinlineitalic">table</span></code> to <code dir="ltr"><span class="codeinlineitalic">new_table_name</span></code>.</p>
<p>Using this clause invalidates any dependent materialized views. For more information on materialized views, see <a href="statements_6002.htm#i2063793">CREATE MATERIALIZED VIEW</a> and <a class="olink DWHSG8110" href="../DWHSG/part3.htm#DWHSG8110"><span class="italic">Oracle Database Data Warehousing Guide.</span></a></p>
<p>If a domain index is defined on the table, then the database invokes the ODCIIndexAlter() method with the <code dir="ltr">RENAME</code> option. This operation establishes correspondence between the indextype metadata and the base table.</p>
<p class="subhead1"><a id="i2192484"></a><a id="SQLRF53314"></a><span class="italic">shrink_clause</span> <a id="sthref3935"></a><a id="sthref3936"></a></p>
<p>The shrink clause lets you manually shrink space in a table, index-organized table or its overflow segment, index, partition, subpartition, LOB segment, materialized view, or materialized view log. This clause is valid only for segments in tablespaces with automatic segment management. By default, Oracle Database compacts the segment, adjusts the high water mark, and releases the recuperated space immediately.</p>
<p>Compacting the segment requires row movement. Therefore, you must enable row movement for the object you want to shrink before specifying this clause. Further, if your application has any rowid-based triggers, you should disable them before issuing this clause.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not attempt to enable row movement for an index-organized table before specifying the <code dir="ltr"><span class="codeinlineitalic">shrink_clause</span></code>. The <code dir="ltr">ROWID</code> of an index-organized table is its primary key, which never changes. Therefore, row movement is neither relevant nor valid for such tables.</div>
<p><a id="SQLRF53315"></a><span class="subhead3">COMPACT&nbsp;</span>If you specify <code dir="ltr">COMPACT</code>, then Oracle Database only defragments the segment space and compacts the table rows for subsequent release. The database does not readjust the high water mark and does not release the space immediately. You must issue another <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">SHRINK</code> <code dir="ltr">SPACE</code> statement later to complete the operation. This clause is useful if you want to accomplish the shrink operation in two shorter steps rather than one longer step.</p>
<p>For an index or index-organized table, specifying <code dir="ltr">ALTER</code> [<code dir="ltr">INDEX</code> | <code dir="ltr">TABLE</code>] ... <code dir="ltr">SHRINK</code> <code dir="ltr">SPACE</code> <code dir="ltr">COMPACT</code> is equivalent to specifying <code dir="ltr">ALTER</code> [<code dir="ltr">INDEX</code> | <code dir="ltr">TABLE</code> ... <code dir="ltr">COALESCE</code>. The <code dir="ltr"><span class="codeinlineitalic">shrink_clause</span></code> can be cascaded (refer to the <code dir="ltr">CASCADE</code> clause, which follows) and compacts the segment more densely than does a coalesce operation, which can improve performance. However, if you do not want to release the unused space, then you can use the appropriate <code dir="ltr">COALESCE</code> clause.</p>
<p><a id="SQLRF53316"></a><span class="subhead3">CASCADE&nbsp;</span>If you specify <code dir="ltr">CASCADE</code>, then Oracle Database performs the same operations on all dependent objects of <code dir="ltr"><span class="codeinlineitalic">table</span></code>, including secondary indexes on index-organized tables.</p>
<p><a id="SQLRF53317"></a><span class="subhead3">Restrictions on the <span class="italic">shrink_clause</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">shrink_clause</span></code> is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot combine this clause with any other clauses in the same <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
<p>You cannot specify this clause for a cluster, a clustered table, or any object with a <code dir="ltr">LONG</code> column.</p>
</li>
<li>
<p>Segment shrink is not supported for tables with function-based indexes, domain indexes, or bitmap join indexes.</p>
</li>
<li>
<p>This clause does not shrink mapping tables of index-organized tables, even if you specify <code dir="ltr">CASCADE</code>.</p>
</li>
<li>
<p>You can specify this clause for a table with Advanced Row Compression enabled (<code dir="ltr">ROW</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">ADVANCED</code>). You cannot specify this clause for a table with any other type of table compression enabled.</p>
</li>
<li>
<p>You cannot shrink a table that is the master table of an <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> materialized view. Rowid materialized views must be rebuilt after the shrink operation.</p>
</li>
</ul>
<p class="subhead1"><a id="BABJBAGA"></a><a id="SQLRF53333"></a>READ ONLY | READ WRITE <a id="sthref3937"></a><a id="sthref3938"></a></p>
<p>Specify <code dir="ltr">READ</code> <code dir="ltr">ONLY</code> to put the table in read-only mode. When the table is in <code dir="ltr">READ</code> <code dir="ltr">ONLY</code> mode, you cannot issue any DML statements that affect the table or any <code dir="ltr">SELECT</code> ... <code dir="ltr">FOR</code> <code dir="ltr">UPDATE</code> statements. You can issue DDL statements as long as they do not modify any table data. Operations on indexes associated with the table are allowed when the table is in <code dir="ltr">READ</code> <code dir="ltr">ONLY</code> mode.</p>
<p>Specify <code dir="ltr">READ</code> <code dir="ltr">WRITE</code> to return a read-only table to read/write mode.</p>
<p class="subhead1"><a id="CJAEGJGI"></a><a id="SQLRF53334"></a>REKEY <span class="italic">encryption_spec</span></p>
<p>Use the <code dir="ltr">REKEY</code> clause to generate a new encryption key or to switch between different algorithms. This operation returns only after all encrypted columns in the table, including LOB columns, have been reencrypted.</p>
<p class="subhead1"><a id="CJABCCEH"></a><a id="SQLRF56463"></a>[NO] ROW ARCHIVAL</p>
<p>Specify this clause to enable or disable <code dir="ltr"><span class="codeinlineitalic">table</span></code> for row archival.</p>
<ul>
<li>
<p>Specify <code dir="ltr">ROW</code> <code dir="ltr">ARCHIVAL</code> to enable <code dir="ltr"><span class="codeinlineitalic">table</span></code> for row archival. A hidden column <code dir="ltr">ORA_ARCHIVE_STATE</code> is created in the table. If the table is already populated with data, then the value of <code dir="ltr">ORA_ARCHIVE_STATE</code> is set to <code dir="ltr">0</code> for each existing row in the table. You can subsequently use the <code dir="ltr">UPDATE</code> statement to set the value of <code dir="ltr">ORA_ARCHIVE_STATE</code> to <code dir="ltr">1</code> for rows you want to archive.</p>
</li>
<li>
<p>Specify <code dir="ltr">NO</code> <code dir="ltr">ROW</code> <code dir="ltr">ARCHIVAL</code> to disable <code dir="ltr"><span class="codeinlineitalic">table</span></code> for row archival. The hidden column <code dir="ltr">ORA_ARCHIVE_STATE</code> is dropped from the table.</p>
</li>
</ul>
<p><a id="SQLRF56464"></a><span class="subhead3">Restrictions on [NO] ROW ARCHIVAL&nbsp;</span>The following restrictions apply to this clause:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr">ROW</code> <code dir="ltr">ARCHIVAL</code> clause for a table that already contains a column named <code dir="ltr">ORA_ARCHIVE_STATE</code>.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">NO</code> <code dir="ltr">ROW</code> <code dir="ltr">ARCHIVAL</code> clause for tables owned by <code dir="ltr">SYS</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#CJADBDCA">ROW ARCHIVAL</a> clause for the full semantics of this clause</p>
</li>
<li>
<p><span class="italic">Oracle Database VLDB and Partitioning Guide</span> for more information on In-Database Archiving</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="CIHFJJFI"></a><a id="SQLRF56820"></a><span class="italic">attribute_clustering_clause</span></p>
<p>Use the <code dir="ltr">ADD</code> <code dir="ltr"><span class="codeinlineitalic">attribute_clustering_clause</span></code> to enable the table for attribute clustering. The <code dir="ltr"><span class="codeinlineitalic">attribute_clustering_clause</span></code> has the same semantics for <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> and <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. Refer to the <a href="statements_7002.htm#CEGIDCDI"><span class="xreftitleitalic"><span class="italic">attribute_clustering_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p class="subhead1"><a id="CIHGEACD"></a><a id="SQLRF56821"></a>MODIFY CLUSTERING</p>
<p>Use this clause to allow or disallow attribute clustering for the table during direct-path insert operations or data movement operations. The table must be enabled for attribute clustering. The <code dir="ltr"><span class="codeinlineitalic">clustering_when</span></code> clause and the <code dir="ltr"><span class="codeinlineitalic">zonemap_clause</span></code> have the same semantics for <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> and <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. Refer to the <a href="statements_7002.htm#CEGJBIHI"><span class="xreftitleitalic"><span class="italic">clustering_when</span></span></a> clause and the <a href="statements_7002.htm#CEGDJAGF"><span class="xreftitleitalic"><span class="italic">zonemap_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p class="subhead1"><a id="SQLRF56822"></a>DROP CLUSTERING</p>
<p>Use this clause to disable the table for attribute clustering.</p>
<p>If a zone map on the table was created using the <code dir="ltr">WITH</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> clause of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> or <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>, then the zone map will be dropped. If a zone map on the table was created using the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> statement, then the zone map will not be dropped.</p>
<p class="subhead2"><a id="i2088706"></a><a id="SQLRF53335"></a><span class="italic">alter_iot_clauses</span></p>
<p class="subhead2"><a id="i2088708"></a><a id="SQLRF53336"></a><span class="italic">index_org_table_clause <a id="sthref3939"></a></span></p>
<p>This clause lets you alter some of the characteristics of an existing index-organized table. Index-organized tables keep data sorted on the primary key and are therefore best suited for primary-key-based access and manipulation. See <a href="statements_7002.htm#i2128766"><span class="xreftitleitalic"><span class="italic">index_org_table_clause</span></span></a> in the context of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2057083">&#34;Modifying Index-Organized Tables: Examples&#34;</a></div>
<p class="subhead2"><a id="SQLRF53337"></a><span class="italic">prefix_compression</span> <a id="sthref3940"></a><a id="sthref3941"></a></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">prefix_compression</span></code> clause to enable prefix compression for the table. Specify <code dir="ltr">COMPRESS</code> to instruct Oracle Database to combine the primary key index blocks of the index-organized table where possible to free blocks for reuse. You can specify this clause with the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>. Specify <code dir="ltr">NOCOMPRESS</code> to disable prefix compression for the table.</p>
<p><a id="SQLRF53338"></a><span class="subhead3">PCTTHRESHOLD <span class="italic">integer</span>&nbsp;</span>Refer to <a href="statements_7002.htm#i2218529">&#34;PCTTHRESHOLD <span class="italic">integer</span>&#34;</a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p><a id="SQLRF53339"></a><span class="subhead3">INCLUDING <span class="italic">column_name</span>&nbsp;</span>Refer to <a href="statements_7002.htm#i2209161">&#34;INCLUDING <span class="italic">column_name</span>&#34;</a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p class="subhead2"><a id="i2099740"></a><a id="SQLRF53340"></a><span class="italic">overflow_attributes<a id="sthref3942"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">overflow_attributes</span></code> let you specify the overflow data segment physical storage and logging attributes to be modified for the index-organized table. Parameter values specified in this clause apply only to the overflow data segment.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2095331">CREATE TABLE</a></div>
<p class="subhead2"><a id="i2084405"></a><a id="SQLRF53341"></a><span class="italic">add_overflow_clause<a id="sthref3943"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">add_overflow_clause</span></code> lets you add an overflow data segment to the specified index-organized table. You can also use this clause to explicitly allocate an extent to or deallocate unused space from an existing overflow segment.</p>
<p><a id="sthref3944"></a><a id="sthref3945"></a>Use the <code dir="ltr">STORE</code> <code dir="ltr">IN</code> <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code> clause to specify tablespace storage for the entire overflow segment. Use the <code dir="ltr">PARTITION</code> clause to specify tablespace storage for the segment by partition.</p>
<p>For a partitioned index-organized table:</p>
<ul>
<li>
<p>If you do not specify <code dir="ltr">PARTITION</code>, then Oracle Database automatically allocates an overflow segment for each partition. The physical attributes of these segments are inherited from the table level.</p>
</li>
<li>
<p>If you want to specify separate physical attributes for one or more partitions, then you must specify such attributes for <span class="italic">every</span> partition in the table. You need not specify the name of the partitions, but you must specify their attributes in the order in which they were created.</p>
</li>
</ul>
<p>You can find the order of the partitions by querying the <code dir="ltr">PARTITION_NAME</code> and <code dir="ltr">PARTITION_POSITION</code> columns of the <code dir="ltr">USER_IND_PARTITIONS</code> view.</p>
<p>If you do not specify <code dir="ltr">TABLESPACE</code> for a particular partition, then the database uses the tablespace specified for the table. If you do not specify <code dir="ltr">TABLESPACE</code> at the table level, then the database uses the tablespace of the partition primary key index segment.</p>
<p><a id="SQLRF53342"></a><span class="subhead3">Restrictions on Overflow Attributes&nbsp;</span>Within the <code dir="ltr"><span class="codeinlineitalic">segment_attributes_clause</span></code>:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr">OPTIMAL</code> parameter of the <code dir="ltr"><span class="codeinlineitalic">physical_attributes_clause</span></code>.</p>
</li>
<li>
<p>You cannot specify tablespace storage for the overflow segment using this clause. For a nonpartitioned table, you can use <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">MOVE</code> ... <code dir="ltr">OVERFLOW</code> to move the segment to a different tablespace. For a partitioned table, use <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">MODIFY</code> <code dir="ltr">DEFAULT</code> <code dir="ltr">ATTRIBUTES</code> ... <code dir="ltr">OVERFLOW</code> to change the default tablespace of the overflow segment.</p>
</li>
</ul>
<p>Additional restrictions apply if <code dir="ltr"><span class="codeinlineitalic">table</span></code> is in a locally managed tablespace, because in such tablespaces several segment attributes are managed automatically by the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="clauses001.htm#g1053419"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span></span></a> and <a href="clauses003.htm#g1056929"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span></span></a> for full descriptions of these clauses of the <code dir="ltr"><span class="codeinlineitalic">add_overflow_clause</span></code></div>
<p class="subhead2"><a id="i2084357"></a><a id="SQLRF53343"></a><span class="italic">alter_overflow_clause</span> <a id="sthref3946"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">alter_overflow_clause</span></code> lets you change the definition of the overflow segment of an existing index-organized table.</p>
<p>The restrictions that apply to the <code dir="ltr"><span class="codeinlineitalic">add_overflow_clause</span></code> also apply to the <code dir="ltr"><span class="codeinlineitalic">alter_overflow_clause</span></code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you add a column to an index-organized table, Oracle Database evaluates the maximum size of each column to estimate the largest possible row. If an overflow segment is needed but you have not specified <code dir="ltr">OVERFLOW</code>, then the database raises an error and does not execute the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement. This checking function guarantees that subsequent DML operations on the index-organized table will not fail because an overflow segment is lacking.</div>
<p class="subhead2"><a id="i2084416"></a><a id="SQLRF53344"></a><span class="italic">alter_mapping_table_clauses <a id="sthref3947"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">alter_mapping_table_clauses</span></code> is valid only if <code dir="ltr"><span class="codeinlineitalic">table</span></code> is index organized and has a mapping table.</p>
<p><a id="SQLRF53345"></a><span class="subhead3"><span class="italic">allocate_extent_clause</span>&nbsp;</span>Use the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code> to allocate a new extent at the end of the mapping table for the index-organized table. Refer to <a href="clauses001.htm#g1053419"><span class="xreftitleitalic"><span class="italic">allocate_extent_clause</span></span></a> for a full description of this clause.</p>
<p><a id="SQLRF53346"></a><span class="subhead3"><span class="italic">deallocate_unused_clause</span>&nbsp;</span>Specify the <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code> to deallocate unused space at the end of the mapping table of the index-organized table. Refer to <a href="clauses003.htm#g1056929"><span class="xreftitleitalic"><span class="italic">deallocate_unused_clause</span></span></a> for a full description of this clause.</p>
<p>Oracle Database automatically maintains all other attributes of the mapping table or its partitions.</p>
<p class="subhead1"><a id="CJAEDGDD"></a><a id="SQLRF53347"></a>COALESCE Clause <a id="sthref3948"></a><a id="sthref3949"></a></p>
<p>Specify <code dir="ltr">COALESCE</code> to instruct Oracle Database to merge the contents of index blocks of the index the database uses to maintain the index-organized table where possible to free blocks for reuse. Refer to the <a href="#i2192484"><span class="xreftitleitalic"><span class="italic">shrink_clause</span></span></a> for information on the relationship between these two clauses.</p>
<p class="subhead2"><a id="SQLRF53348"></a><span class="italic">alter_XMLSchema_clause</span></p>
<p>This clause is valid as part of <code dir="ltr"><span class="codeinlineitalic">alter_table_properties</span></code> only if you are modifying an <code dir="ltr">XMLType</code> table with <code dir="ltr">BINARY</code> <code dir="ltr">XML</code> storage. Refer to <a href="statements_7002.htm#i2215293"><span class="xreftitleitalic"><span class="italic">XMLSchema_spec</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information on the <code dir="ltr">ALLOW</code> and <code dir="ltr">DISALLOW</code> clauses.</p>
<p class="subhead2"><a id="i2198239"></a><a id="SQLRF53349"></a><span class="italic">column_clauses</span></p>
<p>Use these clauses to add, drop, or otherwise modify a column.</p>
<p class="subhead1"><a id="i2198241"></a><a id="SQLRF53350"></a><span class="italic">add_column_clause</span> <span class="bolditalic"><a id="sthref3950"></a><a id="sthref3951"></a><a id="sthref3952"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">add_column_clause</span></code> lets you add a column to a table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2095331">CREATE TABLE</a> for a description of the keywords and parameters of this clause and <a href="#i2133105">&#34;Adding a Table Column: Example&#34;</a></div>
<p class="subhead2"><a id="CIHGHAJG"></a><a id="SQLRF53351"></a><span class="italic">column_definition</span></p>
<p>Unless otherwise noted in this section, the elements of <code dir="ltr"><span class="codeinlineitalic">column_definition</span></code> have the same behavior when adding a column to an existing table as they do when creating a new table. Refer to <a href="statements_7002.htm#CEGBACAG"><span class="xreftitleitalic"><span class="italic">column_definition</span></span></a> for information.</p>
<p><a id="SQLRF53352"></a><span class="subhead3">Restriction on <span class="italic">column_definition</span>&nbsp;</span>The <code dir="ltr">SORT</code> parameter is valid only when creating a new table. You cannot specify <code dir="ltr">SORT</code> in the column_definition of an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">ADD</code> statement.</p>
<p>When you add a column, the initial value of each row for the new column is null, unless you specify the <code dir="ltr">DEFAULT</code> clause.</p>
<p>You can add an overflow data segment to each partition of a partitioned index-organized table.</p>
<p>You can add LOB columns to nonpartitioned and partitioned tables. You can specify LOB storage at the table and at the partition or subpartition level.</p>
<p>If you previously created a view with a query that used the <code dir="ltr">SELECT</code> <code dir="ltr">*</code> syntax to select all columns from table, and you now add a column to <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then the database does not automatically add the new column to the view. To add the new column to the view, re-create the view using the <code dir="ltr">CREATE</code> <code dir="ltr">VIEW</code> statement with the <code dir="ltr">OR</code> <code dir="ltr">REPLACE</code> clause. Refer to <a href="statements_8004.htm#i2065510">CREATE VIEW</a> for more information.</p>
<p><a id="SQLRF53354"></a><span class="subhead3">Restrictions on Adding Columns&nbsp;</span>The addition of columns is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot add a LOB column or an <code dir="ltr">INVISIBLE</code> column to a cluster table.</p>
</li>
<li>
<p>If you add a LOB column to a hash-partitioned table, then the only attribute you can specify for the new partition is <code dir="ltr">TABLESPACE</code>.</p>
</li>
<li>
<p>You cannot add a column with a <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraint if <code dir="ltr"><span class="codeinlineitalic">table</span></code> has any rows unless you also specify the <code dir="ltr">DEFAULT</code> clause.</p>
</li>
<li>
<p>If you specify this clause for an index-organized table, then you cannot specify any other clauses in the same statement.</p>
</li>
</ul>
<p class="subhead2"><a id="CJAGACCI"></a><a id="SQLRF53355"></a>DEFAULT <a id="sthref3953"></a></p>
<p>Use the <code dir="ltr">DEFAULT</code> clause to specify a default for a new column or a new default for an existing column. Oracle Database assigns this value to the column if a subsequent <code dir="ltr">INSERT</code> statement omits a value for the column.</p>
<p>The data type of the expression must match the data type specified for the column. The column must also be large enough to hold this expression.</p>
<p>The <code dir="ltr">DEFAULT</code> expression can include any SQL function as long as the function does not return a literal argument, a column reference, or a nested function invocation.</p>
<p>The <code dir="ltr">DEFAULT</code> expression can include the sequence pseudocolumns <code dir="ltr">CURRVAL</code> and <code dir="ltr">NEXTVAL</code>, as long as the sequence exists and you have the privileges necessary to access it. Users who perform subsequent inserts that use the <code dir="ltr">DEFAULT</code> expression must have the <code dir="ltr">INSERT</code> privilege on the table and the <code dir="ltr">SELECT</code> privilege on the sequence. If the sequence is later dropped, then subsequent insert statements where the <code dir="ltr">DEFAULT</code> expression is used will result in an error. If you are adding a new column to a table, then the order in which <code dir="ltr">NEXTVAL</code> is assigned to each existing row is nondeterministic. If you do not fully qualify the sequence by specifying the sequence owner, for example, <code dir="ltr">SCOTT</code>.<code dir="ltr">SEQ1</code>, then Oracle Database will default the sequence owner to be the user who issues the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement. For example, if user <code dir="ltr">MARY</code> adds a column to <code dir="ltr">SCOTT</code>.<code dir="ltr">TABLE</code> and refers to a sequence that is not fully qualified, such as <code dir="ltr">SEQ2</code>, then the column will use sequence <code dir="ltr">MARY</code>.<code dir="ltr">SEQ2</code>. Synonyms on sequences undergo a full name resolution and are stored as the fully qualified sequence in the data dictionary; this is true for public and private synonyms. For example, if user <code dir="ltr">BETH</code> adds a column referring to public or private synonym <code dir="ltr">SYN1</code> and the synonym refers to <code dir="ltr">PETER</code>.<code dir="ltr">SEQ7</code>, then the column will store <code dir="ltr">PETER</code>.<code dir="ltr">SEQ7</code> as the default.</p>
<p>If you specify the <code dir="ltr">DEFAULT</code> clause for a column, then the default value is stored as metadata but the column itself is not populated with data. However, subsequent queries that specify the new column are rewritten so that the default value is returned in the result set. This optimized behavior is subject to the following restrictions:</p>
<ul>
<li>
<p>The table cannot have any LOB columns. It cannot be index-organized, temporary, or part of a cluster. It also cannot be a queue table, an object table, or the container table of a materialized view.</p>
</li>
<li>
<p>If the table has a Virtual Private Database (VPD) policy on it, then the optimized behavior will not take place unless the user who issues the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">ADD</code> statement has the <code dir="ltr">EXEMPT</code> <code dir="ltr">ACCESS</code> <code dir="ltr">POLICY</code> system privilege.</p>
</li>
<li>
<p>The column being added cannot be encrypted, and cannot be an object column, nested table column, or a LOB column.</p>
</li>
<li>
<p>The <code dir="ltr">DEFAULT</code> expression cannot include the sequence pseudocolumns <code dir="ltr">CURRVAL</code> or <code dir="ltr">NEXTVAL</code>.</p>
</li>
</ul>
<p>If the optimized behavior cannot take place due to the preceding restrictions, then Oracle Database updates each row in the newly created column with the default value. In this case, the database does not fire any <code dir="ltr">UPDATE</code> triggers that are defined on the table.</p>
<p><a id="SQLRF53356"></a><span class="subhead3">Restrictions on Default Column Values&nbsp;</span>Default column values are subject to the following restrictions:</p>
<ul>
<li>
<p>A <code dir="ltr">DEFAULT</code> expression cannot contain references to PL/SQL functions or to other columns, the pseudocolumns <code dir="ltr">LEVEL</code>, <code dir="ltr">PRIOR</code>, and <code dir="ltr">ROWNUM</code>, or date constants that are not fully specified.</p>
</li>
<li>
<p>The expression can be of any form except a scalar subquery expression.</p>
</li>
</ul>
<p><a id="CJAJFIFC"></a><a id="SQLRF55625"></a><span class="subhead3">ON NULL&nbsp;</span>If you specify the <code dir="ltr">ON</code> <code dir="ltr">NULL</code> clause, then Oracle Database assigns the <code dir="ltr">DEFAULT</code> column value when a subsequent <code dir="ltr">INSERT</code> statement attempts to assign a value that evaluates to NULL.</p>
<p>When you specify <code dir="ltr">ON</code> <code dir="ltr">NULL</code>, the <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraint and <code dir="ltr">NOT</code> <code dir="ltr">DEFERRABLE</code> constraint state are implicitly specified. If you specify an inline constraint that conflicts with <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> and <code dir="ltr">NOT</code> <code dir="ltr">DEFERRABLE</code>, then an error is raised.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133161">&#34;Specifying a Default Column Value: Examples&#34;</a></div>
<p class="subhead2"><a id="CJADIAFJ"></a><a id="SQLRF55676"></a><span class="italic">identity_clause</span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">identity_clause</span></code> has the same semantics when you add an identity column that it has when you create an identity column. Refer to <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#CJAHJHJC"><span class="xreftitleitalic"><span class="italic">identity_clause</span></span></a> for more information.</p>
<p>When you add a new identity column to a table, all existing rows are updated using the sequence generator. The order in which a value is assigned to each existing row is nondeterministic.</p>
<p class="subhead2"><a id="CJAEHCBE"></a><a id="SQLRF55677"></a><span class="italic">identity_options</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">identity_options</span></code> clause to configure the sequence generator. The <code dir="ltr"><span class="codeinlineitalic">identity_options</span></code> clause has the same parameters as the <code dir="ltr">CREATE</code> <code dir="ltr">SEQUENCE</code> statement. Refer to <a href="statements_6017.htm#i2067093">CREATE SEQUENCE</a> for a full description of these parameters and characteristics. The exception is <code dir="ltr">START</code> <code dir="ltr">WITH</code> <code dir="ltr">LIMIT VALUE</code>, which is specific to <code dir="ltr"><span class="codeinlineitalic">identity_options</span></code> and can only be used with <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">MODIFY</code>. Refer to <a href="#CJABEJEF"><span class="xreftitleitalic"><span class="italic">identity_options</span></span></a> for more information.</p>
<p class="subhead2"><a id="SQLRF53357"></a><span class="italic">inline_constraint <a id="sthref3954"></a></span></p>
<p>Use <code dir="ltr"><span class="codeinlineitalic">inline_constraint</span></code> to add a constraint to the new column.</p>
<p class="subhead2"><a id="SQLRF53358"></a><span class="italic">inline_ref_constraint<a id="sthref3955"></a></span></p>
<p>This clause lets you describe a new column of type <code dir="ltr">REF</code>. Refer to <a href="clauses002.htm#g1053592"><span class="xreftitleitalic"><span class="italic">constraint</span></span></a> for syntax and description of this type of constraint, including restrictions.</p>
<p class="subhead2"><a id="CJABIIEA"></a><a id="SQLRF53353"></a><span class="italic">virtual_column_definition</span> <a id="sthref3956"></a><a id="sthref3957"></a><a id="sthref3958"></a><a id="sthref3959"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">virtual_column_definition</span></code> has the same semantics when you add a column that it has when you create a column.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#BABIJABG"><span class="xreftitleitalic"><span class="italic">virtual_column_definition</span></span></a> and <a href="#BABIDDJJ">&#34;Adding a Virtual Table Column: Example&#34;</a> for more information</div>
<p><a id="SQLRF56168"></a><span class="subhead3">Restriction on Adding a Virtual Column&nbsp;</span>You cannot add a virtual column when the SQL expression for the virtual column involves a column on which an Oracle Data Redaction policy is defined.</p>
<p class="subhead2"><a id="i2103509"></a><a id="SQLRF53359"></a><span class="italic">column_properties</span> <a id="sthref3960"></a><a id="sthref3961"></a></p>
<p>The clauses of <code dir="ltr"><span class="codeinlineitalic">column_properties</span></code> determine the storage characteristics of an object type, nested table, varray, or LOB column.</p>
<p><a id="i2103513"></a><a id="SQLRF53360"></a><span class="subhead3"><span class="italic">object_type_col_properties<a id="sthref3962"></a><a id="sthref3963"></a><a id="sthref3964"></a><a id="sthref3965"></a><a id="sthref3966"></a></span>&nbsp;</span>This clause is valid only when you are adding a new object type column or attribute. To modify the properties of an existing object type column, use the <code dir="ltr"><span class="codeinlineitalic">modify_column_clauses</span></code>. The semantics of this clause are the same as for <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> unless otherwise noted.</p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">object_type_col_properties</span></code> clause to specify storage characteristics for a new object column or attribute or an element of a collection column or attribute.</p>
<p>For complete information on this clause, refer to <a href="statements_7002.htm#i2128922"><span class="xreftitleitalic"><span class="italic">object_type_col_properties</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p><a id="i2103531"></a><a id="SQLRF53361"></a><span class="subhead3"><span class="italic">nested_table_col_properties<a id="sthref3967"></a><a id="sthref3968"></a><a id="sthref3969"></a></span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">nested_table_col_properties</span></code> clause lets you specify separate storage characteristics for a nested table, which in turn lets you to define the nested table as an index-organized table. You must include this clause when creating a table with columns or column attributes whose type is a nested table. (Clauses within this clause that function the same way they function for parent object tables are not repeated here. See the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#i2129048"><span class="xreftitleitalic"><span class="italic">nested_table_col_properties</span></span></a> for more information about these clauses.)</p>
<ul>
<li>
<p>For <code dir="ltr"><span class="codeinlineitalic">nested_item</span></code>, specify the name of a column (or a top-level attribute of the nested table object type) whose type is a nested table.</p>
<p>If the nested table is a multilevel collection, and the inner nested table does not have a name, then specify <code dir="ltr">COLUMN_VALUE</code> in place of the <code dir="ltr"><span class="codeinlineitalic">nested_item</span></code> name.</p>
</li>
<li>
<p>For <code dir="ltr"><span class="codeinlineitalic">storage_table</span></code>, specify the name of the table where the rows of <code dir="ltr"><span class="codeinlineitalic">nested_item</span></code> reside. The storage table is created in the same schema and the same tablespace as the parent table.</p>
</li>
</ul>
<p><a id="SQLRF53362"></a><span class="subhead3">Restrictions on Nested Table Column Properties&nbsp;</span>Nested table column properties are subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>.</p>
</li>
<li>
<p>You cannot specify <code dir="ltr">CLUSTER</code> as part of the <code dir="ltr"><span class="codeinlineitalic">physical_properties</span></code> clause.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133232">&#34;Nested Tables: Examples&#34;</a></div>
<p><a id="i2103541"></a><a id="SQLRF53363"></a><span class="subhead3"><span class="italic">varray_col_properties<a id="sthref3970"></a><a id="sthref3971"></a></span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">varray_col_properties</span></code> clause lets you specify separate storage characteristics for the LOB in which a varray will be stored. If you specify this clause, then Oracle Database will always store the varray in a LOB, even if it is small enough to be stored inline. If <code dir="ltr"><span class="codeinlineitalic">varray_item</span></code> is a multilevel collection, then the database stores all collection items nested within <code dir="ltr"><span class="codeinlineitalic">varray_item</span></code> in the same LOB in which <code dir="ltr"><span class="codeinlineitalic">varray_item</span></code> is stored.</p>
<p><a id="SQLRF53364"></a><span class="subhead3">Restriction on Varray Column Properties&nbsp;</span>You cannot specify <code dir="ltr">TABLESPACE</code> as part of <code dir="ltr"><span class="codeinlineitalic">LOB_parameters</span></code> for a varray column. The LOB tablespace for a varray defaults to the tablespace of the containing table.</p>
<p class="subhead2"><a id="CIHEGAFJ"></a><a id="SQLRF53365"></a><span class="italic">out_of_line_part_storage</span></p>
<p>This clause lets you specify storage attributes the newly added column for each partition or subpartition in a partitioned table. For any partition or subpartition you do not name in this clause, the storage attributes for the new column are the same as those specified in the <code dir="ltr"><span class="codeinlineitalic">nested_table_col_properties</span></code> at the table level.</p>
<p class="subhead2"><a id="i2103547"></a><a id="SQLRF53366"></a><span class="italic">LOB_storage_clause<a id="sthref3972"></a><a id="sthref3973"></a><a id="sthref3974"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> to specify the LOB storage characteristics for a newly added LOB column, LOB partition, or LOB subpartition, or when you are converting a <code dir="ltr">LONG</code> column into a LOB column. You cannot use this clause to modify an existing LOB. Instead, you must use the <a href="#i2103804"><span class="xreftitleitalic"><span class="italic">modify_LOB_storage_clause</span></span></a>.</p>
<p>Unless otherwise noted in this section, all LOB parameters, in both the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> and the <code dir="ltr"><span class="codeinlineitalic">modify_LOB_storage_clause</span></code>, have the same semantics in an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement that they have in a <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#i2128940"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span></span></a> for complete information on this clause.</p>
<p><a id="SQLRF53367"></a><span class="subhead3">Restriction on LOB Parameters&nbsp;</span>The only parameter of <code dir="ltr"><span class="codeinlineitalic">LOB_parameters</span></code> you can specify for a hash partition or hash subpartition is <code dir="ltr">TABLESPACE</code>.</p>
<p><a id="SQLRF53368"></a><span class="subhead3">CACHE READS Clause<a id="sthref3975"></a><a id="sthref3976"></a>&nbsp;</span>When you add a new LOB column, you can specify the logging attribute with <code dir="ltr">CACHE</code> <code dir="ltr">READS</code>, as you can when defining a LOB column at create time. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABDDAHB">CACHE READS</a> for full information on this clause.</p>
<p><a id="SQLRF53369"></a><span class="subhead3">ENABLE | DISABLE STORAGE IN ROW <a id="sthref3977"></a><a id="sthref3978"></a>&nbsp;</span>You cannot change <code dir="ltr">STORAGE</code> <code dir="ltr">IN</code> <code dir="ltr">ROW</code> once it is set. Therefore, you cannot specify this clause as part of the <code dir="ltr"><span class="codeinlineitalic">modify_col_properties</span></code> clause. However, you can change this setting when adding a new column (<a href="#i2198241"><span class="xreftitleitalic"><span class="italic">add_column_clause</span></span></a> ) or when moving the table (<a href="#i2085301"><span class="xreftitleitalic"><span class="italic">move_table_clause</span></span></a> ). Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABHDBGB">ENABLE STORAGE IN ROW</a> for complete information on this clause.</p>
<p><a id="SQLRF53370"></a><span class="subhead3">CHUNK <span class="italic">integer</span> <a id="sthref3979"></a>&nbsp;</span>You use cannot use the <code dir="ltr"><span class="codeinlineitalic">modify_col_properties</span></code> clause to change the value of <code dir="ltr">CHUNK</code> after it has been set. If you require a different <code dir="ltr">CHUNK</code> value for a column after it has been created, use <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> &hellip; <code dir="ltr">MOVE</code>. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABEJEAH">CHUNK <span class="italic">integer</span></a> for more information.</p>
<p><a id="SQLRF53371"></a><span class="subhead3">RETENTION&nbsp;</span>For BasicFiles LOBs, if the database is in automatic undo mode, then you can specify <code dir="ltr">RETENTION</code> instead of <code dir="ltr">PCTVERSION</code> to instruct Oracle Database to retain old versions of this LOB. This clause overrides any prior setting of <code dir="ltr">PCTVERSION</code>. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABHECFH"><span class="italic">LOB_retention_clause</span></a> for a full description of this parameter.</p>
<p><a id="SQLRF53372"></a><span class="subhead3">FREEPOOLS <span class="italic">integer</span>&nbsp;</span>For BasicFiles LOBs, if the database is in automatic undo mode, then you can use this clause to specify the number of freelist groups for this LOB. This clause overrides any prior setting of <code dir="ltr">FREELIST</code> <code dir="ltr">GROUPS</code>. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABHJCGF">FREEPOOLS <span class="italic">integer</span></a> for a full description of this parameter. The database ignores this parameter for SecureFiles LOBs.</p>
<p class="subhead2"><a id="i2103908"></a><a id="SQLRF53373"></a><span class="italic">LOB_partition_storage<a id="sthref3980"></a><a id="sthref3981"></a><a id="sthref3982"></a></span></p>
<p>You can specify only one list of <code dir="ltr"><span class="codeinlineitalic">LOB_partition_storage</span></code> clauses in a single <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, and all <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clauses</span></code> and <code dir="ltr"><span class="codeinlineitalic">varray_col_properties</span></code> clause must precede the list of <code dir="ltr"><span class="codeinlineitalic">LOB_partition_storage</span></code> clauses. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABEACDC"><span class="xreftitleitalic"><span class="italic">LOB_partition_storage</span></span></a> for full information on this clause, including restrictions.</p>
<p><a id="i2122478"></a><a id="SQLRF53374"></a><span class="subhead3"><span class="italic">XMLType_column_properties<a id="sthref3983"></a></span>&nbsp;</span>Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#i2129098"><span class="xreftitleitalic"><span class="italic">XMLType_column_properties</span></span></a> for a full description of this clause.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i2103547"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span></span></a> for information on the <code dir="ltr"><span class="codeinlineitalic">LOB_segname</span></code> and <code dir="ltr"><span class="codeinlineitalic">LOB_parameters</span></code> clauses</p>
</li>
<li>
<p><a href="statements_7002.htm#i2139746">&#34;XMLType Column Examples&#34;</a> for an example of <code dir="ltr">XMLType</code> columns in object-relational tables and <a href="ap_examples002.htm#i686084">&#34;Using XML in SQL Statements&#34;</a> for an example of creating an XMLSchema</p>
</li>
<li>
<p><span class="italic">Oracle XML DB Developer&#39;s Guide</span> for more information on <code dir="ltr">XMLType</code> <a class="olink ADXDB0400" href="../ADXDB/xdb04cre.htm#ADXDB0400">columns and tables</a> and on creating an <a class="olink ADXDB0800" href="../ADXDB/xdb07evo.htm#ADXDB0800">XMLSchema</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="i2181663"></a><a id="SQLRF53377"></a><span class="italic">modify_column_clauses</span> <a id="sthref3984"></a><a id="sthref3985"></a><a id="sthref3986"></a></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">modify_column_clauses</span></code> to modify the properties of an existing column, the visibility of an existing column, or the substitutability of an existing object type column.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133121">&#34;Modifying Table Columns: Examples&#34;</a></div>
<p class="subhead2"><a id="i2124740"></a><a id="SQLRF53378"></a><span class="italic">modify_col_properties</span></p>
<p>Use this clause to modify the properties of the column. Any of the optional parts of the column definition (data type, default value, or constraint) that you omit from this clause remain unchanged.</p>
<p><a id="SQLRF53379"></a><span class="subhead3"><span class="italic">datatype</span>&nbsp;</span>You can change the data type of any column if all rows of the column contain nulls. However, if you change the data type of a column in a materialized view container table, then Oracle Database invalidates the corresponding materialized view.</p>
<p>You can omit the data type only if the statement also designates the column as part of the foreign key of a referential integrity constraint. The database automatically assigns the column the same data type as the corresponding column of the referenced key of the referential integrity constraint.</p>
<p>You can always increase the size of a character or raw column or the precision of a numeric column, whether or not all the rows contain nulls. You can reduce the size of a data type of a column as long as the change does not require data to be modified. The database scans existing data and returns an error if data exists that exceeds the new length limit.</p>
<p>When you increase the size of a <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, or <code dir="ltr">RAW</code> column to exceed 4000 bytes, Oracle Database performs an in-place length extension and does not migrate the inline storage to external LOB storage. This enables uninterrupted migration of large tables, especially after migration, to leverage extended data types. However, the inline storage of the column will not be preserved during table reorganization operations, such as <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">AS</code> <code dir="ltr">SELECT</code>, export, import, or online redefinition. To migrate to the new out-of-line storage of extended data type columns, you must recreate the table using one of the aforementioned methods. The inline storage of the column will be preserved during table or partition movement operations, such as <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">MOVE</code> <code dir="ltr">[[SUB]PARTITION]</code>, and partition maintenance operations, such as <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">SPLIT</code> <code dir="ltr">[SUB]PARTITION</code>, <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">MERGE</code> <code dir="ltr">[SUB]PARTITIONS</code>, and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">COALESCE</code> <code dir="ltr">[SUB]PARTITIONS</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends against excessively increasing the size of a <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, or <code dir="ltr">RAW</code> column beyond 4000 bytes for the following reasons:
<ul>
<li>
<p>Row chaining may occur.</p>
</li>
<li>
<p>Data that is stored inline must be read in its entirety, whether a column is selected or not. Therefore, extended data type columns that are stored inline can have a negative impact on performance.</p>
</li>
</ul>
</div>
<p>You can reduce the size of a data type of a column as long as the change does not require data to be modified. The database scans existing data and returns an error if data exists that exceeds the new length limit.</p>
<p><a id="sthref3987"></a><a id="sthref3988"></a>You can change a <code dir="ltr">DATE</code> column to a <code dir="ltr">TIMESTAMP</code> or <code dir="ltr">TIMESTAMP</code> <code dir="ltr">WITH</code> <code dir="ltr">LOCAL</code> <code dir="ltr">TIME</code> <code dir="ltr">ZONE</code> column, and you can change a <code dir="ltr">TIMESTAMP</code> or <code dir="ltr">TIMESTAMP</code> <code dir="ltr">WITH</code> <code dir="ltr">LOCAL</code> <code dir="ltr">TIME</code> <code dir="ltr">ZONE</code> column to a <code dir="ltr">DATE</code> column. The following rules apply:</p>
<ul>
<li>
<p>When you change a <code dir="ltr">TIMESTAMP</code> or <code dir="ltr">TIMESTAMP</code> <code dir="ltr">WITH</code> <code dir="ltr">LOCAL</code> <code dir="ltr">TIME</code> <code dir="ltr">ZONE</code> column to a <code dir="ltr">DATE</code> column, Oracle Database updates each column value that has non-zero fractional seconds by rounding the value to the nearest second. If, while updating such a value, Oracle Database encounters a minute field greater than or equal to 60 (which can occur in a boundary case when the daylight saving rule switches), then it updates the minute field by subtracting 60 from it.</p>
</li>
<li>
<p>After you change a <code dir="ltr">TIMESTAMP</code> <code dir="ltr">WITH</code> <code dir="ltr">LOCAL</code> <code dir="ltr">TIME</code> <code dir="ltr">ZONE</code> column to a <code dir="ltr">DATE</code> column, the values in the column still represent the local time that they represented in the database time zone. However, the database time zone is no longer associated with the values. When queried in SQL*Plus, the values are no longer automatically adjusted to the session time zone. It is now the responsibility of applications processing the column values to interpret them in a particular time zone.</p>
</li>
</ul>
<p>If the table is empty, then you can increase or decrease the leading field or the fractional second value of a datetime or interval column. If the table is not empty, then you can only increase the leading field or fractional second of a datetime or interval column.</p>
<p><a id="sthref3989"></a><a id="sthref3990"></a><a id="sthref3991"></a><a id="sthref3992"></a>You can use the <code dir="ltr">TO_LOB</code> function to change a <code dir="ltr">LONG</code> column to a <code dir="ltr">CLOB</code> or <code dir="ltr">NCLOB</code> column, and a <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> column to a <code dir="ltr">BLOB</code> column. However, you cannot use the <code dir="ltr">TO_LOB</code> function from within a PL/SQL package. Instead use the <code dir="ltr">TO_CLOB</code> or <code dir="ltr">TO_BLOB</code> functions.</p>
<ul>
<li>
<p>The modified LOB column inherits all constraints and triggers that were defined on the original <code dir="ltr">LONG</code> column. If you want to change any constraints, then you must do so in a subsequent <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
</li>
<li>
<p>If any domain indexes are defined on the <code dir="ltr">LONG</code> column, then you must drop them before modifying the column to a LOB.</p>
</li>
<li>
<p>After the modification, you will have to rebuild all other indexes on all columns of the table.</p>
</li>
</ul>
<p>You can use the <code dir="ltr">TO_CLOB</code> function to convert <code dir="ltr">NCLOB</code> columns <code dir="ltr">CLOB</code> columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADLOB008" href="../ADLOB/adlob_long_lob.htm#ADLOB008"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for information on <code dir="ltr">LONG</code> to LOB migration</p>
</li>
<li>
<p><a href="statements_1012.htm#i2050158">ALTER INDEX</a> for information on dropping and rebuilding indexes</p>
</li>
</ul>
</div>
<p><a id="sthref3993"></a><a id="sthref3994"></a><a id="sthref3995"></a>For <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> columns, you can change the length semantics by specifying <code dir="ltr">CHAR</code> (to indicate character semantics for a column that was originally specified in bytes) or <code dir="ltr">BYTE</code> (to indicate byte semantics for a column that was originally specified in characters). To learn the length semantics of existing columns, query the <code dir="ltr">CHAR_USED</code> column of the <code dir="ltr">ALL_</code>, <code dir="ltr">USER_</code>, or <code dir="ltr">DBA_TAB_COLUMNS</code> data dictionary view.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink NLSPG002" href="../NLSPG/ch2charset.htm#NLSPG002"><span class="italic">Oracle Database Globalization Support Guide</span></a> for information on byte and character semantics</p>
</li>
<li>
<p><a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information on the data dictionary views</p>
</li>
</ul>
</div>
<p><a id="SQLRF55678"></a><span class="subhead3"><span class="italic">identity_clause</span>&nbsp;</span>Use <code dir="ltr"><span class="codeinlineitalic">identity_clause</span></code> to modify the properties of an identity column. You cannot specify this clause on a column that is not an identity column. If you do not specify <code dir="ltr">ALWAYS</code> or <code dir="ltr">BY</code> <code dir="ltr">DEFAULT</code>, then the current generation type is retained. Refer to <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#CJAHJHJC"><span class="xreftitleitalic"><span class="italic">identity_clause</span></span></a> for more information on <code dir="ltr">ALWAYS</code> and <code dir="ltr">BY</code> <code dir="ltr">DEFAULT</code>.</p>
<p><a id="CJABEJEF"></a><a id="SQLRF55679"></a><span class="subhead3"><span class="italic">identity_options</span>&nbsp;</span>Use the <code dir="ltr"><span class="codeinlineitalic">identity_options</span></code> clause to configure the sequence generator. The <code dir="ltr"><span class="codeinlineitalic">identity_options</span></code> clause has the same parameters as the <code dir="ltr">CREATE</code> <code dir="ltr">SEQUENCE</code> statement. Refer to <a href="statements_6017.htm#i2067093">CREATE SEQUENCE</a> for a full description of these parameters and characteristics. The exceptions are:</p>
<ul>
<li>
<p><code dir="ltr">START</code> <code dir="ltr">WITH</code> <code dir="ltr">LIMIT VALUE</code>, which is specific to <code dir="ltr"><span class="codeinlineitalic">identity_options</span></code>, can only be used with <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">MODIFY</code>. If you specify <code dir="ltr">START</code> <code dir="ltr">WITH</code> <code dir="ltr">LIMIT VALUE</code>, then Oracle Database locks the table and finds the maximum identity column value in the table (for increasing sequences) or the minimum identity column value (for decreasing sequences) and assigns the value as the sequence generator&#39;s high water mark. The next value returned by the sequence generator will be the high water mark + <code dir="ltr">INCREMENT</code> <code dir="ltr">BY</code> <code dir="ltr"><span class="codeinlineitalic">integer</span></code> for increasing sequences, or the high water mark - <code dir="ltr">INCREMENT</code> <code dir="ltr">BY</code> <code dir="ltr"><span class="codeinlineitalic">integer</span></code> for decreasing sequences.</p>
</li>
<li>
<p>If you change the value of <code dir="ltr">START</code> <code dir="ltr">WITH</code>, then the default values will be used for all other parameters in this clause unless you specify otherwise.</p>
</li>
</ul>
<p><a id="SQLRF55680"></a><span class="subhead3">DROP IDENTITY&nbsp;</span>Use this clause to remove the identity property from a column, including the sequence generator and <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> and <code dir="ltr">NOT</code> <code dir="ltr">DEFERRABLE</code> constraints. Identity column values in existing rows are not affected.</p>
<p><a id="BABDAHAH"></a><a id="SQLRF53380"></a><span class="subhead3">ENCRYPT <span class="italic">encryption_spec</span> | DECRYPT&nbsp;</span>Use this clause to decrypt an encrypted column, to encrypt an unencrypted column, or to change the integrity algorithm or the <code dir="ltr">SALT</code> option of an encrypted column.</p>
<p>When encrypting an existing column, if you specify <code dir="ltr"><span class="codeinlineitalic">encryption_spec</span></code>, it must match the encryption specification of any other encrypted columns in the same table. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#CEGDFHBD"><span class="italic">encryption_spec</span></a> for additional information and restrictions on the <code dir="ltr"><span class="codeinlineitalic">encryption_spec</span></code>.</p>
<p>If a materialized view log is defined on the table, then Oracle Database encrypts or decrypts in the materialized view log any columns you encrypt or decrypt in this clause.</p>
<p><a id="SQLRF55606"></a><span class="subhead3">Restrictions on ENCRYPT <span class="italic">encryption_spec</span> | DECRYPT:&nbsp;</span>This clause is subject to the following restrictions:</p>
<ul>
<li>
<p>If the new or existing column is a LOB column, then it must be stored as a SecureFiles LOB, and you cannot specify the <code dir="ltr">SALT</code> option.</p>
</li>
<li>
<p>You cannot encrypt or decrypt a column on which a fine-grained audit policy for the <code dir="ltr">UPDATE</code> statement is enabled. However, you can disable the fine-grained audit policy, encrypt or decrypt the column, and then enable the fine-grained audit policy.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHEJDDI">&#34;Data Encryption: Examples&#34;</a></div>
<p><a id="SQLRF53381"></a><span class="subhead3"><span class="italic">inline_constraint</span>&nbsp;</span>This clause lets you add a constraint to a column you are modifying. To change the state of existing constraints on existing columns, use the <code dir="ltr"><span class="codeinlineitalic">constraint_clauses</span></code>.</p>
<p><a id="SQLRF53382"></a><span class="subhead3"><span class="italic">LOB_storage_clause</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> is permitted within <code dir="ltr"><span class="codeinlineitalic">modify_col_properties</span></code> only if you are converting a <code dir="ltr">LONG</code> column to a LOB column. In this case only, you can specify LOB storage for the column using the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code>. However, you can specify only the single column as a <code dir="ltr"><span class="codeinlineitalic">LOB_item</span></code>. Default LOB storage attributes are used for any attributes you omit in the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code>.</p>
<p><a id="BABCGGGE"></a><a id="SQLRF53383"></a><span class="subhead3"><span class="italic">alter_XMLSchema_clause</span>&nbsp;</span>This clause is valid within <code dir="ltr"><span class="codeinlineitalic">modify_col_properties</span></code> only for <code dir="ltr">XMLType</code> tables with <code dir="ltr">BINARY</code> <code dir="ltr">XML</code> storage. Refer to <a href="statements_7002.htm#i2215293"><span class="xreftitleitalic"><span class="italic">XMLSchema_spec</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information on the <code dir="ltr">ALLOW</code> and <code dir="ltr">DISALLOW</code> clauses.</p>
<p><a id="SQLRF53384"></a><span class="subhead3">Restrictions on Modifying Column Properties&nbsp;</span>The modification of column properties is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot change the data type of a LOB column.</p>
</li>
<li>
<p>You cannot modify a column of a table if a domain index is defined on the column. You must first drop the domain index and then modify the column.</p>
</li>
<li>
<p>You cannot modify the data type or length of a column that is part of the partitioning or subpartitioning key of a table or index.</p>
</li>
<li>
<p>You can change a <code dir="ltr">CHAR</code> column to <code dir="ltr">VARCHAR2</code> (or <code dir="ltr">VARCHAR</code>) and a <code dir="ltr">VARCHAR2</code> (or <code dir="ltr">VARCHAR</code>) column to <code dir="ltr">CHAR</code> only if the <code dir="ltr">BLANK_TRIMMING</code> initialization parameter is set to <code dir="ltr">TRUE</code> and the column size stays the same or increases. If the <code dir="ltr">BLANK_TRIMMING</code> initialization parameter is set to <code dir="ltr">TRUE</code>, then you can also reduce the column size to any size greater than or equal to the maximum trimmed data value.</p>
</li>
<li>
<p>You cannot change a <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> column to a LOB if the table is part of a cluster. If you do change a <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> column to a LOB, then the only other clauses you can specify in this <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement are the <code dir="ltr">DEFAULT</code> clause and the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code>.</p>
</li>
<li>
<p>You can specify the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> as part of <code dir="ltr"><span class="codeinlineitalic">modify_col_properties</span></code> only when you are changing a <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> column to a LOB.</p>
</li>
<li>
<p>You cannot specify a column of data type <code dir="ltr">ROWID</code> for an index-organized table, but you can specify a column of type <code dir="ltr">UROWID</code>.</p>
</li>
<li>
<p>You cannot change the data type of a column to <code dir="ltr">REF</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_2002.htm#CCHECCJB">ALTER MATERIALIZED VIEW</a> for information on revalidating a materialized view</div>
<p class="subhead2"><a id="CJAJEICE"></a><a id="SQLRF56404"></a><span class="italic">modify_virtcol_properties</span></p>
<p>This clause is valid only for virtual columns that refer to editioned PL/SQL functions. You can use this clause to modify the evaluation edition or the unusable editions for the virtual column. The <code dir="ltr"><span class="codeinlineitalic">evaluation_edition_clause</span></code> and the <code dir="ltr"><span class="codeinlineitalic">unusable_editions_clause</span></code> have the same semantics when you modify a virtual column that they have when you create a virtual column. For complete information, refer to <a href="statements_7002.htm#CJAFBHGE"><span class="xreftitleitalic"><span class="italic">evaluation_edition_clause</span></span></a> and <a href="statements_7002.htm#CJAEAAJC"><span class="xreftitleitalic"><span class="italic">unusable_editions_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p><a id="SQLRF56646"></a><span class="subhead3">Restriction on Modifying Virtual Columns&nbsp;</span></p>
<p>If an index is defined on a virtual column and you modify its evaluation edition or unusable editions, then the database will invalidate all indexes on the virtual column. If you attempt to modify any other properties of the virtual column, then an error occurs.</p>
<p class="subhead2"><a id="CJABCHJE"></a><a id="SQLRF55884"></a><span class="italic">modify_col_visibility</span></p>
<p>Use this clause to change the visibility of <code dir="ltr"><span class="codeinlineitalic">column</span></code>. For complete information, refer to <a href="statements_7002.htm#CJAGDBIC">&#34;VISIBLE | INVISIBLE&#34;</a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p><a id="SQLRF57065"></a><span class="subhead3">Restriction on Modifying Column Visibility&nbsp;</span>You cannot change a <code dir="ltr">VISIBLE</code> column to <code dir="ltr">INVISIBLE</code> in a table owned by <code dir="ltr">SYS</code>.</p>
<p class="subhead2"><a id="i2124759"></a><a id="SQLRF53385"></a><span class="italic">modify_col_substitutable</span></p>
<p>Use this clause to set or change the substitutability of an existing object type column.</p>
<p>The <code dir="ltr">FORCE</code> keyword drops any hidden columns containing typeid information or data for subtype attributes. You must specify <code dir="ltr">FORCE</code> if the column or any attributes of its type are not <code dir="ltr">FINAL</code>.</p>
<p><a id="SQLRF53386"></a><span class="subhead3">Restrictions on Modifying Column Substitutability&nbsp;</span>The modification of column substitutability is subject to the following restrictions:</p>
<ul>
<li>
<p>You can specify this clause only once in any <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
</li>
<li>
<p>You cannot modify the substitutability of a column in an object table if the substitutability of the table itself has been set.</p>
</li>
<li>
<p>You cannot specify this clause if the column was created or added using the <code dir="ltr">IS</code> <code dir="ltr">OF</code> <code dir="ltr">TYPE</code> syntax, which limits the range of subtypes permitted in an object column or attribute to a particular subtype. Refer to <a href="statements_7002.htm#i2215510"><span class="xreftitleitalic"><span class="italic">substitutable_column_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for information on the <code dir="ltr">IS</code> <code dir="ltr">OF</code> <code dir="ltr">TYPE</code> syntax.</p>
</li>
<li>
<p>You cannot change a varray column to <code dir="ltr">NOT</code> <code dir="ltr">SUBSTITUTABLE</code>, even by specifying <code dir="ltr">FORCE</code>, if any of its attributes are nested object types that are not <code dir="ltr">FINAL</code>.</p>
</li>
</ul>
<p class="subhead1"><a id="i2103683"></a><a id="SQLRF53387"></a><span class="italic">drop_column_clause</span> <a id="sthref3996"></a><a id="sthref3997"></a><a id="sthref3998"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">drop_column_clause</span></code> lets you free space in the database by dropping columns you no longer need or by marking them to be dropped at a future time when the demand on system resources is less.</p>
<ul>
<li>
<p>If you drop a nested table column, then its storage table is removed.</p>
</li>
<li>
<p>If you drop a LOB column, then the LOB data and its corresponding LOB index segment are removed.</p>
</li>
<li>
<p>If you drop a <code dir="ltr">BFILE</code> column, then only the locators stored in that column are removed, not the files referenced by the locators.</p>
</li>
<li>
<p>If you drop or mark unused a column defined as an <code dir="ltr">INCLUDING</code> column, then the column stored immediately before this column will become the new <code dir="ltr">INCLUDING</code> column.</p>
</li>
</ul>
<p class="subhead2"><a id="SQLRF53388"></a>SET UNUSED Clause</p>
<p>Specify <code dir="ltr">SET</code> <code dir="ltr">UNUSED</code> to mark one or more columns as unused. For an internal heap-organized table, specifying this clause does not actually remove the target columns from each row in the table. It does not restore the disk space used by these columns. Therefore, the response time is faster than when you execute the <code dir="ltr">DROP</code> clause.</p>
<p>When you specify this clause for a column in an external table, the clause is transparently converted to an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr">DROP</code> <code dir="ltr">COLUMN</code> statement. The reason for this is that any operation on an external table is a metadata-only operation, so there is no difference in the performance of the two commands.</p>
<p>You can view all tables with columns marked <code dir="ltr">UNUSED</code> in the data dictionary views <code dir="ltr">USER_UNUSED_COL_TABS</code>, <code dir="ltr">DBA_UNUSED_COL_TABS</code>, and <code dir="ltr">ALL_UNUSED_COL_TABS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information on the data dictionary views</div>
<p>Unused columns are treated as if they were dropped, even though their column data remains in the table rows. After a column has been marked <code dir="ltr">UNUSED</code>, you have no access to that column. A <code dir="ltr">SELECT</code> <code dir="ltr">*</code> query will not retrieve data from unused columns. In addition, the names and types of columns marked <code dir="ltr">UNUSED</code> will not be displayed during a <code dir="ltr">DESCRIBE</code>, and you can add to the table a new column with the same name as an unused column.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Until you actually drop these columns, they continue to count toward the absolute limit of 1000 columns in a single table. However, as with all DDL statements, you cannot roll back the results of this clause. You cannot issue <code dir="ltr">SET</code> <code dir="ltr">USED</code> counterpart to retrieve a column that you have <code dir="ltr">SET</code> <code dir="ltr">UNUSED</code>. Refer to <a href="statements_7002.htm#i2095331">CREATE TABLE</a> for more information on the 1000-column limit.
<p>Also, if you mark a <code dir="ltr">LONG</code> column as <code dir="ltr">UNUSED</code>, then you cannot add another <code dir="ltr">LONG</code> column to the table until you actually drop the unused <code dir="ltr">LONG</code> column.</p>
</div>
<p><a id="CJAFFGDG"></a><a id="SQLRF55626"></a><span class="subhead3">ONLINE&nbsp;</span>Specify <code dir="ltr">ONLINE</code> to indicate that DML operations on the table will be allowed while marking the column or columns <code dir="ltr">UNUSED</code>.</p>
<p><a id="SQLRF55654"></a><span class="subhead3">Restrictions on Marking Columns Unused&nbsp;</span>The following restrictions apply to the <code dir="ltr">SET</code> <code dir="ltr">UNUSED</code> clause:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr">ONLINE</code> clause when marking a column with a <code dir="ltr">DEFERRABLE</code> constraint as <code dir="ltr">UNUSED</code>.</p>
</li>
<li>
<p>Columns in tables owned by <code dir="ltr">SYS</code> cannot be marked as <code dir="ltr">UNUSED</code>.</p>
</li>
</ul>
<p class="subhead2"><a id="SQLRF53389"></a>DROP Clause</p>
<p>Specify <code dir="ltr">DROP</code> to remove the column descriptor and the data associated with the target column from each row in the table. If you explicitly drop a particular column, then all columns currently marked <code dir="ltr">UNUSED</code> in the target table are dropped at the same time.</p>
<p>When the column data is dropped:</p>
<ul>
<li>
<p>All indexes defined on any of the target columns are also dropped.</p>
</li>
<li>
<p>All constraints that reference a target column are removed.</p>
</li>
<li>
<p>If any statistics types are associated with the target columns, then Oracle Database disassociates the statistics from the column with the <code dir="ltr">FORCE</code> option and drops any statistics collected using the statistics type.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the target column is a parent key of a nontarget column, or if a check constraint references both the target and nontarget columns, then Oracle Database returns an error and does not drop the column unless you have specified the <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code> clause. If you have specified that clause, then the database removes all constraints that reference any of the target columns.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_8006.htm#i2066266">DISASSOCIATE STATISTICS</a> for more information on disassociating statistics types</div>
<p class="subhead2"><a id="SQLRF53390"></a>DROP UNUSED COLUMNS Clause</p>
<p>Specify <code dir="ltr">DROP</code> <code dir="ltr">UNUSED</code> <code dir="ltr">COLUMNS</code> to remove from the table all columns currently marked as unused. Use this statement when you want to reclaim the extra disk space from unused columns in the table. If the table contains no unused columns, then the statement returns with no errors.</p>
<p><a id="SQLRF53391"></a><span class="subhead3"><span class="italic">column</span>&nbsp;</span>Specify one or more columns to be set as unused or dropped. Use the <code dir="ltr">COLUMN</code> keyword only if you are specifying only one column. If you specify a column list, then it cannot contain duplicates.</p>
<p><a id="SQLRF53392"></a><span class="subhead3">CASCADE CONSTRAINTS&nbsp;</span>Specify <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code> if you want to drop all foreign key constraints that refer to the primary and unique keys defined on the dropped columns as well as all multicolumn constraints defined on the dropped columns. If any constraint is referenced by columns from other tables or remaining columns in the target table, then you must specify <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code>. Otherwise, the statement aborts and an error is returned.</p>
<p><a id="SQLRF53393"></a><span class="subhead3">INVALIDATE&nbsp;</span>The <code dir="ltr">INVALIDATE</code> keyword is optional. Oracle Database automatically invalidates all dependent objects, such as views, triggers, and stored program units. Object invalidation is a recursive process. Therefore, all directly dependent and indirectly dependent objects are invalidated. However, only local dependencies are invalidated, because the database manages remote dependencies differently from local dependencies.</p>
<p>An object invalidated by this statement is automatically revalidated when next referenced. You must then correct any errors that exist in that object before referencing it.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT1859" href="../CNCPT/tablecls.htm#CNCPT1859"><span class="italic">Oracle Database Concepts</span></a> for more information on dependencies</div>
<p><a id="SQLRF53394"></a><span class="subhead3">CHECKPOINT&nbsp;</span>Specify <code dir="ltr">CHECKPOINT</code> if you want Oracle Database to apply a checkpoint for the <code dir="ltr">DROP</code> <code dir="ltr">COLUMN</code> operation after processing <code dir="ltr"><span class="codeinlineitalic">integer</span></code> rows; <code dir="ltr"><span class="codeinlineitalic">integer</span></code> is optional and must be greater than zero. If <code dir="ltr"><span class="codeinlineitalic">integer</span></code> is greater than the number of rows in the table, then the database applies a checkpoint after all the rows have been processed. If you do not specify <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, then the database sets the default of 512. Checkpointing cuts down the amount of undo logs accumulated during the <code dir="ltr">DROP</code> <code dir="ltr">COLUMN</code> operation to avoid running out of undo space. However, if this statement is interrupted after a checkpoint has been applied, then the table remains in an unusable state. While the table is unusable, the only operations allowed on it are <code dir="ltr">DROP</code> <code dir="ltr">TABLE</code>, <code dir="ltr">TRUNCATE</code> <code dir="ltr">TABLE</code>, and <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">DROP</code> ... <code dir="ltr">COLUMNS</code> <code dir="ltr">CONTINUE</code> (described in sections that follow).</p>
<p>You cannot use this clause with <code dir="ltr">SET</code> <code dir="ltr">UNUSED</code>, because that clause does not remove column data.</p>
<p class="subhead2"><a id="SQLRF53395"></a>DROP COLUMNS CONTINUE Clause</p>
<p>Specify <code dir="ltr">DROP</code> <code dir="ltr">COLUMNS</code> <code dir="ltr">CONTINUE</code> to continue the drop column operation from the point at which it was interrupted. Submitting this statement while the table is in an invalid state results in an error.</p>
<p><a id="SQLRF53396"></a><span class="subhead3">Restrictions on Dropping Columns&nbsp;</span>Dropping columns is subject to the following restrictions:</p>
<ul>
<li>
<p>Each of the parts of this clause can be specified only once in the statement and cannot be mixed with any other <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> clauses. For example, the following statements are not allowed:</p>
<pre dir="ltr">ALTER TABLE t1 DROP COLUMN f1 DROP (f2);
ALTER TABLE t1 DROP COLUMN f1 SET UNUSED (f2);
ALTER TABLE t1 DROP (f1) ADD (f2 NUMBER);
ALTER TABLE t1 SET UNUSED (f3) 
   ADD (CONSTRAINT ck1 CHECK (f2 &gt; 0));
</pre></li>
<li>
<p>You can drop an object type column only as an entity. To drop an attribute from an object type column, use the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> ... <code dir="ltr">DROP</code> <code dir="ltr">ATTRIBUTE</code> statement with the <code dir="ltr">CASCADE</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code> clause. Be aware that dropping an attribute affects all dependent objects. See <a class="olink LNPLS99995" href="../LNPLS/alter_type.htm#LNPLS99995"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information.</p>
</li>
<li>
<p>You can drop a column from an index-organized table only if it is not a primary key column. The primary key constraint of an index-organized table can never be dropped, so you cannot drop a primary key column even if you have specified <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code>.</p>
</li>
<li>
<p>You can export tables with dropped or unused columns. However, you can import a table only if all the columns specified in the export files are present in the table (none of those columns has been dropped or marked unused). Otherwise, Oracle Database returns an error.</p>
</li>
<li>
<p>You can set unused a column from a table that uses <code dir="ltr">COMPRESS</code> <code dir="ltr">BASIC</code>, but you cannot drop the column. However, all clauses of the <code dir="ltr"><span class="codeinlineitalic">drop_column_clause</span></code> are valid for tables that use <code dir="ltr">ROW</code> <code dir="ltr">STORE</code> <code dir="ltr">COMPRESS</code> <code dir="ltr">ADVANCED</code>. See the semantics for <a href="statements_7002.htm#i2128733"><span class="xreftitleitalic"><span class="italic">table_compression</span></span></a> for more information.</p>
</li>
<li>
<p>You cannot drop a column on which a domain index has been built.</p>
</li>
<li>
<p>You cannot drop a <code dir="ltr">SCOPE</code> table constraint or a <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code> constraint on a <code dir="ltr">REF</code> column.</p>
</li>
<li>
<p>You cannot use this clause to drop:</p>
<ul>
<li>
<p>A pseudocolumn, cluster column, or partitioning column. You can drop nonpartitioning columns from a partitioned table if all the tablespaces where the partitions were created are online and in read/write mode.</p>
</li>
<li>
<p>A column from a nested table, an object table, or a table owned by <code dir="ltr">SYS</code>.</p>
</li>
</ul>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2057060">&#34;Dropping a Column: Example&#34;</a></div>
<p class="subhead1"><a id="CJAEGCFI"></a><a id="SQLRF56422"></a><span class="italic">add_period_clause</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">add_period_clause</span></code> to add a valid time dimension to <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">period_definition</span></code> clause of <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> has the same semantics as in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>, with the following exceptions and additions:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">valid_time_column</span></code> must not already exist in <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
</li>
<li>
<p>If you specify <code dir="ltr"><span class="codeinlineitalic">start_time_column</span></code> and <code dir="ltr"><span class="codeinlineitalic">end_time_column</span></code>, then these columns must already exist in <code dir="ltr"><span class="codeinlineitalic">table</span></code> or you must specify the <code dir="ltr"><span class="codeinlineitalic">add_column_clause</span></code> for each of these columns.</p>
</li>
<li>
<p>If you specify <code dir="ltr"><span class="codeinlineitalic">start_time_column</span></code> and <code dir="ltr"><span class="codeinlineitalic">end_time_column</span></code> and these columns already exist in <code dir="ltr"><span class="codeinlineitalic">table</span></code> and are populated with data, then for all rows where both columns have non-NULL values, the value of <code dir="ltr"><span class="codeinlineitalic">start_time_column</span></code> must be earlier than the value of <code dir="ltr"><span class="codeinlineitalic">end_time_column</span></code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#CJADHJHB"><span class="xreftitleitalic"><span class="italic">period_definition</span></span></a> for the full semantics of this clause</div>
<p class="subhead1"><a id="CJAJHJEJ"></a><a id="SQLRF56423"></a><span class="italic">drop_period_clause</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">drop_period_clause</span></code> to drop a valid time dimension from <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p>For <code dir="ltr"><span class="codeinlineitalic">valid_time_column</span></code>, specify the name of the valid time dimension you want to drop.</p>
<p>This clause has the following effects:</p>
<ul>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">valid_time_column</span></code> will be dropped from <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
</li>
<li>
<p>If the start time column and end time column were automatically created by Oracle Database when the valid time dimension was created, either with <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> ... <code dir="ltr"><span class="codeinlineitalic">period_definition</span></code> or <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> ... <code dir="ltr"><span class="codeinlineitalic">add_period_clause</span></code>, then they will be dropped. Otherwise, these columns will remain in <code dir="ltr"><span class="codeinlineitalic">table</span></code> and revert to regular table columns.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#CJADHJHB"><span class="xreftitleitalic"><span class="italic">period_definition</span></span></a> for more information on the <code dir="ltr"><span class="codeinlineitalic">valid_time_column</span></code>, start time column, and end time column</div>
<p class="subhead1"><a id="i2110476"></a><a id="SQLRF53397"></a><span class="italic">rename_column_clause <a id="sthref3999"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">rename_column_clause</span></code> to rename a column of <code dir="ltr"><span class="codeinlineitalic">table</span></code>. The new column name must not be the same as any other column name in <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p>When you rename a column, Oracle Database handles dependent objects as follows:</p>
<ul>
<li>
<p>Function-based indexes and check constraints that depend on the renamed column remain valid.</p>
</li>
<li>
<p>Dependent views, triggers, functions, procedures, and packages are invalidated. Oracle Database attempts to revalidate them when they are next accessed, but you may need to alter these objects with the new column name if revalidation fails.</p>
</li>
<li>
<p>If a domain index is defined on the column being renamed, then the database invokes the ODCIIndexAlter method with the <code dir="ltr">RENAME</code> option. This operation establishes correspondence between the indextype metadata and the base table</p>
</li>
</ul>
<p><a id="SQLRF53398"></a><span class="subhead3">Restrictions on Renaming Columns&nbsp;</span>Renaming columns is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot combine this clause with any of the other <code dir="ltr"><span class="codeinlineitalic">column_clauses</span></code> in the same statement.</p>
</li>
<li>
<p>You cannot rename a column that is used to define a join index. Instead you must drop the index, rename the column, and re-create the index.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2132812">&#34;Renaming a Column: Example&#34;</a></div>
<p class="subhead2"><a id="i2103791"></a><a id="SQLRF53399"></a><span class="italic">modify_collection_retrieval <a id="sthref4000"></a><a id="sthref4001"></a><a id="sthref4002"></a><a id="sthref4003"></a><a id="sthref4004"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">modify_collection_retrieval</span></code> clause to change what Oracle Database returns when a collection item is retrieved from the database.</p>
<p><a id="SQLRF53400"></a><span class="subhead3"><span class="italic">collection_item</span>&nbsp;</span>Specify the name of a column-qualified attribute whose type is nested table or varray.</p>
<p><a id="SQLRF53401"></a><span class="subhead3">RETURN AS&nbsp;</span>Specify what Oracle Database should return as the result of a query:</p>
<ul>
<li>
<p><code dir="ltr">LOCATOR</code> specifies that a unique locator for the nested table is returned.</p>
</li>
<li>
<p><code dir="ltr">VALUE</code> specifies that a copy of the nested table itself is returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2109870">&#34;Collection Retrieval: Example&#34;</a></div>
</li>
</ul>
<p class="subhead2"><a id="i2103804"></a><a id="SQLRF53402"></a><span class="italic">modify_LOB_storage_clause<a id="sthref4005"></a><a id="sthref4006"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">modify_LOB_storage_clause</span></code> lets you change the physical attributes of <code dir="ltr"><span class="codeinlineitalic">LOB_item</span></code>. You can specify only one <code dir="ltr"><span class="codeinlineitalic">LOB_item</span></code> for each <code dir="ltr"><span class="codeinlineitalic">modify_LOB_storage_clause</span></code>.</p>
<p>The sections that follow describe the semantics of parameters specific to modify_LOB_parameters. Unless otherwise documented in this section, the remaining LOB parameters have the same semantics when altering a table that they have when you are creating a table. Refer to the restrictions at the end of this section and to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#i2128955"><span class="xreftitleitalic"><span class="italic">LOB_storage_parameters</span></span></a> for more information.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>You can modify LOB storage with an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement or with online redefinition by using the <code dir="ltr">DBMS_REDEFINITION</code> package. If you have not enabled LOB encryption, compression, or deduplication at create time, Oracle recommends that you use online redefinition to enable them after creation, as this process is more disk space efficient for changes to these three parameters. See <span class="italic">Oracle Database PL/SQL Packages and Types Reference</span> for more information on <a class="olink ARPLS042" href="../ARPLS/d_redefi.htm#ARPLS042"><code dir="ltr">DBMS_REDEFINITION</code></a>.</p>
</li>
<li>
<p>You cannot convert a LOB from one type of storage to the other. Instead you must migrate to SecureFiles or BasicFiles by using online redefinition or partition exchange.</p>
</li>
</ul>
</div>
<p><a id="SQLRF53403"></a><span class="subhead3">PCTVERSION <span class="italic">integer</span> <a id="sthref4007"></a>&nbsp;</span>Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABJEEFG">PCTVERSION <span class="italic">integer</span></a> for information on this clause.</p>
<p><a id="BABBFFAJ"></a><a id="SQLRF53404"></a><span class="subhead3"><span class="italic">LOB_retention_clause</span>&nbsp;</span>If the database is in automatic undo mode, then you can specify <code dir="ltr">RETENTION</code> instead of <code dir="ltr">PCTVERSION</code> to instruct Oracle Database to retain old versions of this LOB. This clause overrides any prior setting of <code dir="ltr">PCTVERSION</code>.</p>
<p><a id="SQLRF53405"></a><span class="subhead3">FREEPOOLS <span class="italic">integer</span>&nbsp;</span>For BasicFiles LOBs, if the database is in automatic undo mode, then you can use this clause to specify the number of freelist groups for this LOB. This clause overrides any prior setting of <code dir="ltr">FREELIST</code> <code dir="ltr">GROUPS</code>. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABHJCGF">FREEPOOLS <span class="italic">integer</span></a> for a full description of this parameter. The database ignores this parameter for SecureFiles LOBs.</p>
<p><a id="SQLRF53406"></a><span class="subhead3">REBUILD FREEPOOLS&nbsp;</span>This clause applies only to BasicFiles LOBs, not to SecureFiles LOBs. The <code dir="ltr">REBUILD</code> <code dir="ltr">FREEPOOLS</code> clause removes all the old versions of data from the LOB column. This clause is useful for removing all retained old version space in a LOB segment, freeing that space to be used immediately by new LOB data.</p>
<p><a id="BABHDBGC"></a><a id="SQLRF53407"></a><span class="subhead3"><span class="italic">LOB_deduplicate_clause</span>&nbsp;</span>This clause is valid only for SecureFiles LOBs. <code dir="ltr">KEEP_DUPLICATES</code> disables LOB deduplication. <code dir="ltr">DEDUPLICATE</code> enables LOB deduplication. All lobs in the segment are read, and any matching LOBs are deduplicated before returning.</p>
<p><a id="BABJJIHG"></a><a id="SQLRF53408"></a><span class="subhead3"><span class="italic">LOB_compression_clause</span>&nbsp;</span>This clause is valid only for SecureFiles LOBs. <code dir="ltr">COMPRESS</code> compresses all LOBs in the segment and then returns. <code dir="ltr">NOCOMPRESS</code> uncompresses all LOBs in the segment and then returns.</p>
<p><a id="SQLRF53409"></a><span class="subhead3">ENCRYPT | DECRYPT&nbsp;</span>LOB encryption has the same semantics as column encryption in general. See <a href="#BABDAHAH">&#34;ENCRYPT <span class="italic">encryption_spec</span> | DECRYPT&#34;</a> for more information.</p>
<p><a id="SQLRF53410"></a><span class="subhead3">CACHE, NOCACHE, CACHE READS&nbsp;</span>When you modify a LOB column from <code dir="ltr">CACHE</code> or <code dir="ltr">NOCACHE</code> to <code dir="ltr">CACHE</code> <code dir="ltr">READS,</code> or from <code dir="ltr">CACHE</code> <code dir="ltr">READS</code> to <code dir="ltr">CACHE</code> or <code dir="ltr">NOCACHE</code>, you can change the logging attribute. If you do not specify <code dir="ltr">LOGGING</code> or <code dir="ltr">NOLOGGING</code>, then this attribute defaults to the current logging attribute of the LOB column. If you do not specify <code dir="ltr">CACHE</code>, <code dir="ltr">NOCACHE</code>, or <code dir="ltr">CACHE</code> <code dir="ltr">READS</code>, then Oracle Database retains the existing values of the LOB attributes.</p>
<p><a id="SQLRF53411"></a><span class="subhead3">Restrictions on Modifying LOB Storage&nbsp;</span>Modifying LOB storage is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot modify the value of the <code dir="ltr">INITIAL</code> parameter in the <code dir="ltr"><span class="codeinlineitalic">storage_clause</span></code> when modifying the LOB storage attributes.</p>
</li>
<li>
<p>You cannot specify both the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code> and the <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code> in the same statement.</p>
</li>
<li>
<p>You cannot specify both the <code dir="ltr">PCTVERSION</code> and <code dir="ltr">RETENTION</code> parameters.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">shrink_clause</span></code> for SecureFiles LOBs.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2128940"><span class="xreftitleitalic"><span class="italic">LOB_storage_clause</span></span></a> (in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>) for information on setting LOB parameters and <a href="#i2133216">&#34;LOB Columns: Examples&#34;</a></div>
<p class="subhead2"><a id="i2103812"></a><a id="SQLRF53412"></a><span class="italic">alter_varray_col_properties<a id="sthref4008"></a><a id="sthref4009"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">alter_varray_col_properties</span></code> clause lets you change the storage characteristics of an existing LOB in which a varray is stored.</p>
<p><a id="SQLRF53413"></a><span class="subhead3">Restriction on Altering Varray Column Properties&nbsp;</span>You cannot specify the <code dir="ltr">TABLESPACE</code> clause of <code dir="ltr"><span class="codeinlineitalic">LOB_parameters</span></code> as part of this clause. The LOB tablespace for a varray defaults to the tablespace of the containing table.</p>
<p class="subhead2"><a id="SQLRF53414"></a>REKEY <span class="italic">encryption_spec</span></p>
<p>The <code dir="ltr">REKEY</code> clause causes the database to generate a new encryption key. All encrypted columns in the table are reencrypted using the new key and, if you specify the <code dir="ltr">USING</code> clause of the <code dir="ltr"><span class="codeinlineitalic">encryption_spec</span></code>, a new encryption algorithm. You cannot combine this clause with any other clauses in this <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ASOAG600" href="../ASOAG/asopart1.htm#ASOAG600"><span class="italic">Oracle Database Advanced Security Guide</span></a> for more information on transparent column encryption</div>
<p class="subhead2"><a id="i2103817"></a><a id="SQLRF53415"></a><span class="italic">constraint_clauses</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">constraint_clauses</span></code> to add a new constraint using out-of-line declaration, modify the state of an existing constraint, or drop a constraint. Refer to <a href="clauses002.htm#g1053592"><span class="xreftitleitalic"><span class="italic">constraint</span></span></a> for a description of all the keywords and parameters of out-of-line constraints and <code dir="ltr"><span class="codeinlineitalic">constraint_state</span></code>.</p>
<p class="subhead2"><a id="SQLRF53416"></a>Adding a Constraint <a id="sthref4010"></a><a id="sthref4011"></a><a id="sthref4012"></a></p>
<p>The <code dir="ltr">ADD</code> clause lets you add a new out-of-line constraint or out-of-line <code dir="ltr">REF</code> constraint to the table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2100100">&#34;Disabling a CHECK Constraint: Example&#34;</a>, <a href="#i2133079">&#34;Specifying Object Identifiers: Example&#34;</a>, and <a href="#i2133267">&#34;REF Columns: Examples&#34;</a></div>
<p class="subhead2"><a id="SQLRF53417"></a>Modifying a Constraint<span class="italic"><a id="sthref4013"></a><a id="sthref4014"></a></span></p>
<p>The <code dir="ltr">MODIFY</code> <code dir="ltr">CONSTRAINT</code> clause lets you change the state of an existing constraint.</p>
<p>The <code dir="ltr">CASCADE</code> keyword is valid only when you are disabling a unique or primary key constraint on which a foreign key constraint is defined. In this case, you must specify <code dir="ltr">CASCADE</code> so that the unique or primary key constraint and all of its dependent foreign key constraints are disabled.</p>
<p><a id="SQLRF53418"></a><span class="subhead3">Restrictions on Modifying Constraints <a id="sthref4015"></a><a id="sthref4016"></a>&nbsp;</span>Modifying constraints is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot change the state of a <code dir="ltr">NOT</code> <code dir="ltr">DEFERRABLE</code> constraint to <code dir="ltr">INITIALLY</code> <code dir="ltr">DEFERRED</code>.</p>
</li>
<li>
<p>If you specify this clause for an index-organized table, then you cannot specify any other clauses in the same statement.</p>
</li>
<li>
<p>You cannot change the <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraint on a foreign key column of a reference-partitioned table, and you cannot change the state of a partitioning referential constraint of a reference-partitioned table.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2057011">&#34;Changing the State of a Constraint: Examples&#34;</a></div>
<p class="subhead2"><a id="SQLRF53419"></a>Renaming a Constraint <a id="sthref4017"></a><a id="sthref4018"></a></p>
<p>The <code dir="ltr">RENAME</code> <code dir="ltr">CONSTRAINT</code> clause lets you rename any existing constraint on <code dir="ltr"><span class="codeinlineitalic">table</span></code>. The new constraint name cannot be the same as any existing constraint on any object in the same schema. All objects that are dependent on the constraint remain valid.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133183">&#34;Renaming Constraints: Example&#34;</a></div>
<p class="subhead2"><a id="i2103845"></a><a id="SQLRF53420"></a><span class="italic">drop_constraint_clause</span> <a id="sthref4019"></a><a id="sthref4020"></a><a id="sthref4021"></a><a id="sthref4022"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">drop_constraint_clause</span></code> lets you drop an integrity constraint from the database. Oracle Database stops enforcing the constraint and removes it from the data dictionary. You can specify only one constraint for each <code dir="ltr"><span class="codeinlineitalic">drop_constraint_clause</span></code>, but you can specify multiple <code dir="ltr"><span class="codeinlineitalic">drop_constraint_clause</span></code> in one statement.</p>
<p><a id="SQLRF53422"></a><span class="subhead3">PRIMARY KEY&nbsp;</span>Specify <code dir="ltr">PRIMARY</code> <code dir="ltr">KEY</code> to drop the primary key constraint of <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p><a id="SQLRF53423"></a><span class="subhead3">UNIQUE&nbsp;</span>Specify <code dir="ltr">UNIQUE</code> to drop the unique constraint on the specified columns.</p>
<p>If you drop the primary key or unique constraint from a column on which a bitmap join index is defined, then Oracle Database invalidates the index. See <a href="statements_5013.htm#i2062403">CREATE INDEX</a> for information on bitmap join indexes.</p>
<p><a id="SQLRF53424"></a><span class="subhead3">CONSTRAINT&nbsp;</span>Specify <code dir="ltr">CONSTRAINT</code> <code dir="ltr"><span class="codeinlineitalic">constraint_name</span></code> to drop an integrity constraint other than a primary key or unique constraint.</p>
<p><a id="SQLRF53425"></a><span class="subhead3">CASCADE&nbsp;</span>Specify <code dir="ltr">CASCADE</code> if you want all other integrity constraints that depend on the dropped integrity constraint to be dropped as well.</p>
<p><a id="SQLRF53426"></a><span class="subhead3">KEEP INDEX | DROP INDEX<a id="sthref4023"></a>&nbsp;</span>Specify <code dir="ltr">KEEP</code> <code dir="ltr">INDEX</code> or <code dir="ltr">DROP</code> <code dir="ltr">INDEX</code> to indicate whether Oracle Database should preserve or drop the index it has been using to enforce the <code dir="ltr">PRIMARY</code> <code dir="ltr">KEY</code> or <code dir="ltr">UNIQUE</code> constraint.</p>
<p><a id="CJABAGDI"></a><a id="SQLRF55627"></a><span class="subhead3">ONLINE&nbsp;</span>Specify <code dir="ltr">ONLINE</code> to indicate that DML operations on the table will be allowed while dropping the constraint.</p>
<p><a id="SQLRF53427"></a><span class="subhead3">Restrictions on Dropping Constraints&nbsp;</span>Dropping constraints is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot drop a primary key or unique key constraint that is part of a referential integrity constraint without also dropping the foreign key. To drop the referenced key and the foreign key together, use the <code dir="ltr">CASCADE</code> clause. If you omit <code dir="ltr">CASCADE</code>, then Oracle Database does not drop the primary key or unique constraint if any foreign key references it.</p>
</li>
<li>
<p>You cannot drop a primary key constraint (even with the <code dir="ltr">CASCADE</code> clause) on a table that uses the primary key as its object identifier (OID).</p>
</li>
<li>
<p>If you drop a referential integrity constraint on a <code dir="ltr">REF</code> column, then the <code dir="ltr">REF</code> column remains scoped to the referenced table.</p>
</li>
<li>
<p>You cannot drop the scope of a <code dir="ltr">REF</code> column.</p>
</li>
<li>
<p>You cannot drop the <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraint on a foreign key column of a reference-partitioned table, and you cannot drop a partitioning referential constraint of a reference-partitioned table.</p>
</li>
<li>
<p>You cannot drop the <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraint on a column that is defined with a default column value using the <code dir="ltr">ON</code> <code dir="ltr">NULL</code> clause.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">ONLINE</code> clause when dropping a <code dir="ltr">DEFERRABLE</code> constraint.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133199">&#34;Dropping Constraints: Examples&#34;</a></div>
<p class="subhead2"><a id="i2103884"></a><a id="SQLRF53428"></a><span class="italic">alter_external_table <a id="sthref4024"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">alter_external_table</span></code> clauses to change the characteristics of an external table. This clause has no affect on the external data itself. The syntax and semantics of the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">enable_disable_clause</span></code>, <code dir="ltr"><span class="codeinlineitalic">external_data_properties</span></code>, and <code dir="ltr">REJECT</code> <code dir="ltr">LIMIT</code> clause are the same as described for <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. See the <a href="statements_7002.htm#i2159541"><span class="xreftitleitalic"><span class="italic">external_table_clause</span></span></a> (in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>).</p>
<p><a id="CJAFACGH"></a><a id="SQLRF53429"></a><span class="subhead3">PROJECT COLUMN Clause&nbsp;</span>This clause lets you determine how the access driver validates the rows of an external table in subsequent queries. The default is <code dir="ltr">PROJECT</code> <code dir="ltr">COLUMN</code> <code dir="ltr">ALL</code>, which means that the access driver processes all column values, regardless of which columns are selected, and validates only those rows with fully valid column entries. If any column value would raise an error, such as a data type conversion error, then the row is rejected even if that column was not referenced in the select list. If you specify <code dir="ltr">PROJECT</code> <code dir="ltr">COLUMN</code> <code dir="ltr">REFERENCED</code>, then the access driver processes only those columns in the select list.</p>
<p>The <code dir="ltr">ALL</code> setting guarantees consistent result sets. The <code dir="ltr">REFERENCED</code> setting can result in different numbers of rows returned, depending on the columns referenced in subsequent queries, but is faster than the <code dir="ltr">ALL</code> setting. If a subsequent query selects all columns of the external table, then the settings behave identically.</p>
<p><a id="SQLRF53430"></a><span class="subhead3">Restrictions on Altering External Tables&nbsp;</span>Altering external tables is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot modify an external table using any clause outside of this clause.</p>
</li>
<li>
<p>You cannot add a <code dir="ltr">LONG</code>, varray, or object type column to an external table, nor can you change the data type of an external table column to any of these data types.</p>
</li>
<li>
<p>You cannot add a constraint to an external table.</p>
</li>
<li>
<p>You cannot modify the storage parameters of an external table.</p>
</li>
</ul>
<p class="subhead2"><a id="i2085640"></a><a id="SQLRF53431"></a><span class="italic">alter_table_partitioning</span> <a id="sthref4025"></a><a id="sthref4026"></a><a id="sthref4027"></a></p>
<p>The clauses in this section apply only to partitioned tables. You cannot combine partition operations with other partition operations or with operations on the base table in the same <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
<p><a id="SQLRF53432"></a><span class="subhead3">Notes on Changing Table Partitioning <a id="sthref4028"></a><a id="sthref4029"></a>&nbsp;</span>The following notes apply when changing table partitioning:</p>
<ul>
<li>
<p>If you drop, exchange, truncate, move, modify, or split a partition on a table that is a master table for one or more materialized views, then existing bulk load information about the table will be deleted. Therefore, be sure to refresh all dependent materialized views before performing any of these operations.</p>
</li>
<li>
<p>If a bitmap join index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then any operation that alters a partition of <code dir="ltr"><span class="codeinlineitalic">table</span></code> causes Oracle Database to mark the index <code dir="ltr">UNUSABLE</code>.</p>
</li>
<li>
<p>The only <code dir="ltr"><span class="codeinlineitalic">alter_table_partitioning</span></code> clauses you can specify for a reference-partitioned table are <code dir="ltr"><span class="codeinlineitalic">modify_table_default_attrs</span></code>, <code dir="ltr"><span class="codeinlineitalic">move_table_[sub]partition</span></code>, <code dir="ltr"><span class="codeinlineitalic">truncate_partition_subpart</span></code>, and <code dir="ltr"><span class="codeinlineitalic">exchange_partition_subpart</span></code>. None of these operations cascade to any child table of the reference-partitioned table. No other partition maintenance operations are valid on a reference-partitioned table, but you can specify the other partition maintenance operations on the parent table of a reference-partitioned table, and the operation will cascade to the child reference-partitioned table.</p>
</li>
<li>
<p>When adding partitions and subpartitions, bear in mind that you can specify up to a total of 1024K-1 partitions and subpartitions for each table.</p>
</li>
<li>
<p>When you add a table partition or subpartition and you omit the partition name, the database generates a name using the rules described in <a href="statements_7002.htm#CHDFAGGH">&#34;Notes on Partitioning in General&#34;</a>.</p>
</li>
<li>
<p>When you move, add (hash only), coalesce, drop, split, merge, rename, or truncate a table partition or subpartition, the procedures, functions, packages, package bodies, views, type bodies, and triggers that reference the table remain valid. All other dependent objects are invalidated.</p>
</li>
<li>
<p>Deferred segment creation is not supported for partition maintenance operations that create new segments on tables with LOB columns; segments will always be created for the involved (sub)partitions.</p>
</li>
</ul>
<p>For additional information on partition operations on tables with an associated <code dir="ltr">CONTEXT</code> domain index, refer to <a class="olink CCREF0110" href="../CCREF/csql.htm#CCREF0110"><span class="italic">Oracle Text Reference</span></a>.</p>
<p>The storage of partitioned database entities in tablespaces of different block sizes is subject to several restrictions. Refer to <a class="olink VLDBG00306" href="../VLDBG/GUID-24050391-B7C5-4AE2-86D4-B5438412C3F6.htm#VLDBG00306"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for a discussion of these restrictions.</p>
<p class="subhead1"><a id="BABHHEHB"></a><a id="SQLRF53433"></a><span class="italic">modify_table_default_attrs <a id="sthref4030"></a><a id="sthref4031"></a><a id="sthref4032"></a><a id="sthref4033"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">modify_table_default_attrs</span></code> clause lets you specify new default values for the attributes of <code dir="ltr"><span class="codeinlineitalic">table</span></code>. Only attributes named in the statement are affected. Partitions and LOB partitions you create subsequently will inherit these values unless you override them explicitly when creating the partition or LOB partition. Existing partitions and LOB partitions are not affected by this clause.</p>
<p>Only attributes named in the statement are affected, and the default values specified are overridden by any attributes specified at the individual partition or LOB partition level.</p>
<ul>
<li>
<p><code dir="ltr">FOR</code> <code dir="ltr"><span class="codeinlineitalic">partition_extended_name</span></code> applies only to composite-partitioned tables. This clause specifies new default values for the attributes of the partition identified in <code dir="ltr"><span class="codeinlineitalic">partition_extended_name</span></code>. Subpartitions and LOB subpartitions of that partition that you create subsequently will inherit these values unless you override them explicitly when creating the subpartition or LOB subpartition. Existing subpartitions are not affected by this clause.</p>
</li>
<li>
<p><code dir="ltr">PCTTHRESHOLD</code>, <code dir="ltr"><span class="codeinlineitalic">prefix_compression</span></code>, and the <code dir="ltr"><span class="codeinlineitalic">alter_overflow_clause</span></code> are valid only for partitioned index-organized tables.</p>
</li>
<li>
<p>You can specify the <code dir="ltr"><span class="codeinlineitalic">prefix_compression</span></code> clause only if prefix compression is already specified at the table level. Further, you cannot specify an integer after the <code dir="ltr">COMPRESS</code> keyword. Prefix length can be specified only when you create the table.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">PCTUSED</code> parameter in <code dir="ltr"><span class="codeinlineitalic">segment_attributes</span></code> for the index segment of an index-organized table.</p>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> lets you modify the default indexing property for the table. The new default indexing property will be assigned to partitions or subpartitions that are subsequently added to the table, unless you override this behavior by specifying the indexing property for the new partition or subpartition. When you modify the default indexing property of a table, you do not change the indexing property of the existing partitions and subpartitions in the table. Refer to the <a href="statements_7002.htm#CJAFJABE"><span class="xreftitleitalic"><span class="italic">indexing_clause</span></span></a> of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for the full semantics of this clause.</p>
</li>
</ul>
<p class="subhead1"><a id="BABIAAFH"></a><a id="SQLRF53434"></a><span class="italic">alter_interval_partitioning</span> <a id="sthref4034"></a><a id="sthref4035"></a><a id="sthref4036"></a></p>
<p>Use this clause:</p>
<ul>
<li>
<p>To convert an existing range-partitioned table to interval partitioning. The database automatically creates partitions of the specified numeric range or datetime interval as needed for data beyond the highest value allowed for the last range partition. If the table has reference-partitioned child tables, then the child tables are converted to interval reference-partitioned child tables.</p>
</li>
<li>
<p>To change the interval of an existing interval-partitioned table. The database first converts existing interval partitions to range partitions and determines the high value of the defined range partitions. The database then automatically creates partitions of the specified numeric range or datetime interval as needed for data that is beyond that high value.</p>
</li>
<li>
<p>To change the tablespace storage for an existing interval-partitioned table. If the table has interval reference-partitioned child tables, then the new tablespace storage is inherited by any child table that does not have its own table-level default tablespace.</p>
</li>
<li>
<p>To change an interval-partitioned table back to a range-partitioned table. Use <code dir="ltr">SET</code> <code dir="ltr">INTERVAL</code> <code dir="ltr">()</code> to disable interval partitioning. The database converts existing interval partitions to range partitions, using the higher boundaries of created interval partitions as upper boundaries for the range partitions to be created. If the table has interval reference-partitioned child tables, then the child tables are converted to ordinary reference-partitioned child tables.</p>
</li>
</ul>
<p>For <code dir="ltr"><span class="codeinlineitalic">expr</span></code>, specify a valid number or interval expression.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#BABGCEFI">&#34;INTERVAL Clause&#34;</a> and <a class="olink VLDBG00221" href="../VLDBG/GUID-C121EA1B-2725-4464-B2C9-EEDE0C3C95AB.htm#VLDBG00221"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for more information on interval partitioning</div>
<p class="subhead1"><a id="BABBGIEA"></a><a id="SQLRF53435"></a><span class="italic">set_subpartition_template <a id="sthref4037"></a><a id="sthref4038"></a><a id="sthref4039"></a><a id="sthref4040"></a><a id="sthref4041"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">set_subpartition_template</span></code> clause to create or replace existing default range, list, or hash subpartition definitions for each table partition. This clause is valid only for composite-partitioned tables. It replaces the existing subpartition template or creates a new template if you have not previously created one. Existing subpartitions are not affected, nor are existing local and global indexes. However, subsequent partitioning operations (such as add and merge operations) will use the new template.</p>
<p>You can drop an existing subpartition template by specifying <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr"><span class="codeinlineitalic">table</span></code> <code dir="ltr">SET</code> <code dir="ltr">SUBPARTITION</code> <code dir="ltr">TEMPLATE</code> <code dir="ltr">()</code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">set_subpartition_template</span></code> clause has the same semantics as the <code dir="ltr"><span class="codeinlineitalic">subpartition_template</span></code> clause of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>. Refer to the <a href="statements_7002.htm#BABHJECD"><span class="xreftitleitalic"><span class="italic">subpartition_template</span></span></a> clause of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information.</p>
<p class="subhead1"><a id="BABDJEEA"></a><a id="SQLRF53437"></a><span class="italic">modify_table_partition</span> <a id="sthref4042"></a><a id="sthref4043"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">modify_table_partition</span></code> clause lets you change the real physical attributes of a range, hash, list partition, or system partition. This clause optionally modifies the storage attributes of one or more LOB items for the partition. You can specify new values for physical attributes (with some restrictions, as noted in the sections that follow), logging, and storage parameters.</p>
<p>For all types of partitions, you can also specify how Oracle Database should handle local indexes that become unusable as a result of the modification to the partition. See <a href="#BABFACEF">&#34;UNUSABLE LOCAL INDEXES Clauses&#34;</a>.</p>
<p>For partitioned index-organized tables, you can also update the mapping table in conjunction with partition changes. See the <a href="#i2084416"><span class="xreftitleitalic"><span class="italic">alter_mapping_table_clauses</span></span></a> .</p>
<p><a id="CJAFCFEA"></a><a id="SQLRF56169"></a><span class="subhead3"><span class="italic">indexing_clause</span>&nbsp;</span>Use the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> to modify the indexing property of a table partition. The indexing property determines whether the partition is included in partial indexes on the table. You can specify the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> in the <code dir="ltr"><span class="codeinlineitalic">modify_range_partition</span></code>, <code dir="ltr"><span class="codeinlineitalic">modify_hash_partition</span></code>, and <code dir="ltr"><span class="codeinlineitalic">modify_list_partition</span></code> clauses.</p>
<p>Specify <code dir="ltr">INDEXING</code> <code dir="ltr">ON</code> to change the indexing property for a table partition to <code dir="ltr">ON</code>. This operation has no effect on full indexes on the table. It has the following effects on partial indexes on the table:</p>
<ul>
<li>
<p>Local partial indexes: The table partition is included in the index. The corresponding index partition is rebuilt and marked <code dir="ltr">USABLE</code>.</p>
</li>
<li>
<p>Global partial indexes: The table partition is included in the index. Index entries for the table partition are added to the index as part of routine index maintenance.</p>
</li>
</ul>
<p>Specify <code dir="ltr">INDEXING</code> <code dir="ltr">OFF</code> to change the indexing property for a table partition to <code dir="ltr">OFF</code>. This operation has no effect on full indexes on the table. It has the following effects on partial indexes on the table:</p>
<ul>
<li>
<p>Local partial indexes: The table partition is excluded from the index. The corresponding index partition is marked <code dir="ltr">UNUSABLE</code>.</p>
</li>
<li>
<p>Global partial indexes: The table partition is excluded from the index. Index entries for the table partition are removed from the index. This is a metadata-only operation and the index entries will continue to be physically stored in the index. You can remove these orphaned index entries by specifying <code dir="ltr">COALESCE</code> <code dir="ltr">CLEANUP</code> in the <a href="statements_1012.htm#i2050158">ALTER INDEX</a> statement or in the <a href="statements_1012.htm#i2050732"><span class="xreftitleitalic"><span class="italic">modify_index_partition</span></span></a> clause.</p>
</li>
</ul>
<p><a id="SQLRF56170"></a><span class="subhead3">Restriction on the <span class="italic">indexing_clause</span>&nbsp;</span>You can specify this clause only for partitions of a simple partitioned table. For composite-partitioned tables, you can specify the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> at the table subpartition level. Refer to <a href="#BABIGIHC"><span class="xreftitleitalic"><span class="italic">modify_table_subpartition</span></span></a> for more information.</p>
<p><a id="SQLRF53438"></a><span class="subhead3">Notes on Modifying Table Partitions&nbsp;</span>The following notes apply to operations on range, list, and hash table partitions:</p>
<ul>
<li>
<p>For all types of table partition, in the <code dir="ltr"><span class="codeinlineitalic">partition_attributes</span></code> clause, the <code dir="ltr"><span class="codeinlineitalic">shrink_clause</span></code> lets you compact an individual partition segment. Refer to <a href="#i2192484"><span class="xreftitleitalic"><span class="italic">shrink_clause</span></span></a> for additional information on this clause.</p>
</li>
<li>
<p>The syntax and semantics for modifying a system partition are the same as those for modifying a hash partition. Refer to <a href="#BABGGIFE"><span class="xreftitleitalic"><span class="italic">modify_hash_partition</span></span></a>.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is composite partitioned, then:</p>
<ul>
<li>
<p>If you specify the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code>, then Oracle Database allocates an extent for each subpartition of <code dir="ltr"><span class="codeinlineitalic">partition</span></code>.</p>
</li>
<li>
<p>If you specify the <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code>, then Oracle Database deallocates unused storage from each subpartition of <code dir="ltr"><span class="codeinlineitalic">partition</span></code>.</p>
</li>
<li>
<p>Any other attributes changed in this clause will be changed in subpartitions of <code dir="ltr"><span class="codeinlineitalic">partition</span></code> as well, overriding existing values. To avoid changing the attributes of existing subpartitions, use the <code dir="ltr">FOR</code> <code dir="ltr">PARTITION</code> clause of <code dir="ltr"><span class="codeinlineitalic">modify_table_default_attrs.</span></code></p>
</li>
</ul>
</li>
<li>
<p>When you modify the <code dir="ltr"><span class="codeinlineitalic">partition_attributes</span></code> of a table partition with equipartitioned nested tables, the changes do not apply to the nested table partitions corresponding to the table partition being modified. However, you can modify the storage table of the nested table partition directly with an <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
</li>
<li>
<p>Unless otherwise documented, the remaining clauses of <code dir="ltr"><span class="codeinlineitalic">partition_attributes</span></code> have the same behavior they have when you are creating a partitioned table. Refer to the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> <a href="statements_7002.htm#i2215406"><span class="xreftitleitalic"><span class="italic">table_partitioning_clauses</span></span></a> for more information.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2132987">&#34;Modifying Table Partitions: Examples&#34;</a></div>
<p class="subhead2"><a id="BABIHCCH"></a><a id="SQLRF53439"></a><span class="italic">modify_range_partition</span></p>
<p>Use this clause to modify the characteristics of a range partition.</p>
<p><a id="CJADCJAH"></a><a id="SQLRF53440"></a><span class="subhead3"><span class="italic">add_range_subpartition <a id="sthref4044"></a></span>&nbsp;</span>This clause is valid only for range-range composite partitions. It lets you add one or more range subpartitions to <code dir="ltr"><span class="codeinlineitalic">partition</span></code>.</p>
<p><a id="SQLRF56349"></a><span class="subhead3">Restriction on Adding Range Subpartitions&nbsp;</span>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, then you can add only one range subpartition at a time.</p>
<p><a id="BABEJBFH"></a><a id="SQLRF53441"></a><span class="subhead3"><span class="italic">add_hash_subpartition <a id="sthref4045"></a></span>&nbsp;</span>This clause is valid only for range-hash composite partitions. The <code dir="ltr"><span class="codeinlineitalic">add_hash_subpartition</span></code> clause lets you add a hash subpartition to <code dir="ltr"><span class="codeinlineitalic">partition</span></code>. Oracle Database populates the new subpartition with rows rehashed from the other subpartition(s) of <code dir="ltr"><span class="codeinlineitalic">partition</span></code> as determined by the hash function. For optimal load balancing, the total number of subpartitions should be a power of 2.</p>
<p>In the <code dir="ltr"><span class="codeinlineitalic">partitioning_storage_clause</span></code>, the only clause you can specify for subpartitions is the <code dir="ltr">TABLESPACE</code> clause. If you do not specify <code dir="ltr">TABLESPACE</code>, then the new subpartition will reside in the default tablespace of <code dir="ltr"><span class="codeinlineitalic">partition</span></code>.</p>
<p>Oracle Database adds local index partitions corresponding to the selected partition.</p>
<p>Oracle Database marks <code dir="ltr">UNUSABLE</code> the local index partitions corresponding to the added partitions. The database invalidates any indexes on heap-organized tables. You can update these indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p><a id="BABJCGGB"></a><a id="SQLRF53442"></a><span class="subhead3"><span class="italic">add_list_subpartition<a id="sthref4046"></a><a id="sthref4047"></a><a id="sthref4048"></a></span>&nbsp;</span>This clause is valid only for range-list and list-list composite partitions. It lets you add one or more list subpartitions to <code dir="ltr"><span class="codeinlineitalic">partition</span></code>, and only if you have not already created a <code dir="ltr">DEFAULT</code> subpartition.</p>
<ul>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">list_values_clause</span></code> is required in this operation, and the values you specify in the <code dir="ltr"><span class="codeinlineitalic">list_values_clause</span></code> cannot exist in any other subpartition of <code dir="ltr"><span class="codeinlineitalic">partition</span></code>. However, these values can duplicate values found in subpartitions of other partitions.</p>
</li>
<li>
<p>In the <code dir="ltr"><span class="codeinlineitalic">partitioning_storage_clause</span></code>, the only clauses you can specify for subpartitions are the <code dir="ltr">TABLESPACE</code> clause and table compression.</p>
</li>
</ul>
<p>For each added subpartition, Oracle Database also adds a subpartition with the same value list to all local index partitions of the table. The status of existing local and global index partitions of <code dir="ltr"><span class="codeinlineitalic">table</span></code> are not affected.</p>
<p><a id="SQLRF53443"></a><span class="subhead3">Restrictions on Adding List Subpartitions&nbsp;</span>The following restrictions apply to adding list subpartitions:</p>
<ul>
<li>
<p>You cannot specify this clause if you have already created a <code dir="ltr">DEFAULT</code> subpartition for this partition. Instead you must split the <code dir="ltr">DEFAULT</code> partition using the <code dir="ltr"><span class="codeinlineitalic">split_list_subpartition</span></code> clause.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, then you can add only one list subpartition at a time.</p>
</li>
</ul>
<p><a id="CIHIHBEJ"></a><a id="SQLRF53444"></a><span class="subhead3"><span class="italic">coalesce_table_subpartition</span> <a id="sthref4049"></a><a id="sthref4050"></a><a id="sthref4051"></a><a id="sthref4052"></a><a id="sthref4053"></a>&nbsp;</span><code dir="ltr">COALESCE</code> <code dir="ltr">SUBPARTITION</code> applies only to hash subpartitions. Use the <code dir="ltr">COALESCE</code> <code dir="ltr">SUBPARTITION</code> clause if you want Oracle Database to select the last hash subpartition, distribute its contents into one or more remaining subpartitions (determined by the hash function), and then drop the last subpartition.</p>
<ul>
<li>
<p>Oracle Database drops local index partitions corresponding to the selected partition.</p>
</li>
<li>
<p>Oracle Database marks <code dir="ltr">UNUSABLE</code> the local index partitions corresponding to one or more absorbing partitions. The database invalidates any global indexes on heap-organized tables. You can update these indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
</li>
</ul>
<p class="subhead2"><a id="BABGGIFE"></a><a id="SQLRF53445"></a><span class="italic">modify_hash_partition</span></p>
<p>When modifying a hash partition, in the <code dir="ltr"><span class="codeinlineitalic">partition_attributes</span></code> clause, you can specify only the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code> and <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code>. All other attributes of the partition are inherited from the table-level defaults except <code dir="ltr">TABLESPACE</code>, which stays the same as it was at create time.</p>
<p class="subhead2"><a id="SQLRF53446"></a><span class="italic">modify_list_partition</span></p>
<p>Clauses available to you when modifying a list partition have the same semantics as when you are modifying a range partition. When modifying a list partition, the following additional clauses are available:</p>
<p><a id="SQLRF53447"></a><span class="subhead3">ADD | DROP VALUES Clauses<a id="sthref4054"></a><a id="sthref4055"></a><a id="sthref4056"></a><a id="sthref4057"></a>&nbsp;</span>These clauses are valid only when you are modifying composite partitions. Local and global indexes on the table are not affected by either of these clauses.</p>
<ul>
<li>
<p>Use the <code dir="ltr">ADD</code> <code dir="ltr">VALUES</code> clause to extend the <code dir="ltr"><span class="codeinlineitalic">partition_key_value</span></code> list of <code dir="ltr"><span class="codeinlineitalic">partition</span></code> to include additional values. The added partition values must comply with all rules and restrictions listed in the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABDGHIB"><span class="xreftitleitalic"><span class="italic">list_partitions</span></span></a> .</p>
</li>
<li>
<p>Use the <code dir="ltr">DROP</code> <code dir="ltr">VALUES</code> clause to reduce the <code dir="ltr"><span class="codeinlineitalic">partition_key_value</span></code> list of <code dir="ltr"><span class="codeinlineitalic">partition</span></code> by eliminating one or more <code dir="ltr"><span class="codeinlineitalic">partition_key_value</span></code>. When you specify this clause, Oracle Database checks to ensure that no rows with this value exist. If such rows do exist, then Oracle Database returns an error.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">ADD</code> <code dir="ltr">VALUES</code> and <code dir="ltr">DROP</code> <code dir="ltr">VALUES</code> operations on a table with a <code dir="ltr">DEFAULT</code> list partition are enhanced if you have defined a local prefixed index on the table.</div>
<p><a id="SQLRF53448"></a><span class="subhead3">Restrictions on Adding and Dropping List Values&nbsp;</span>Adding and dropping list values are subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot add values to or drop values from a <code dir="ltr">DEFAULT</code> list partition.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains a <code dir="ltr">DEFAULT</code> partition and you attempt to add values to a nondefault partition, then Oracle Database will check that the values being added do not already exist in the <code dir="ltr">DEFAULT</code> partition. If the values do exist in the <code dir="ltr">DEFAULT</code> partition, then Oracle Database returns an error.</p>
</li>
</ul>
<p class="subhead1"><a id="BABIGIHC"></a><a id="SQLRF53449"></a><span class="italic">modify_table_subpartition</span></p>
<p>This clause applies only to composite-partitioned tables. Its subclauses let you modify the characteristics of an individual range, list, or hash subpartition.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">shrink_clause</span></code> lets you compact an individual subpartition segment. Refer to <a href="#i2192484"><span class="xreftitleitalic"><span class="italic">shrink_clause</span></span></a> for additional information on this clause.</p>
<p>You can also specify how Oracle Database should handle local indexes that become unusable as a result of the modification to the partition. See <a href="#BABFACEF">&#34;UNUSABLE LOCAL INDEXES Clauses&#34;</a>.</p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> to modify the indexing property of a table subpartition. The indexing property determines whether the subpartition is included in partial indexes on the table. Modifying the indexing property of table subpartitions has the same effect on index subpartitions as modifying the indexing property of table partitions has on index partitions. Refer to the <a href="#CJAFCFEA"><span class="xreftitleitalic"><span class="italic">indexing_clause</span></span></a> of <code dir="ltr"><span class="codeinlineitalic">modify_table_partition</span></code> for details.</p>
<p><a id="SQLRF53450"></a><span class="subhead3">Restriction on Modifying Hash Subpartitions&nbsp;</span>The only <code dir="ltr"><span class="codeinlineitalic">modify_LOB_parameters</span></code> you can specify for <code dir="ltr"><span class="codeinlineitalic">subpartition</span></code> are the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code> and <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code>.</p>
<p><a id="SQLRF53451"></a><span class="subhead3">ADD | DROP VALUES Clauses<a id="sthref4058"></a><a id="sthref4059"></a><a id="sthref4060"></a><a id="sthref4061"></a>&nbsp;</span>These clauses are valid only when you are modifying list subpartitions. Local and global indexes on the table are not affected by either of these clauses.</p>
<ul>
<li>
<p>Use the <code dir="ltr">ADD</code> <code dir="ltr">VALUES</code> clause to extend the <code dir="ltr"><span class="codeinlineitalic">subpartition_key_value</span></code> list of <code dir="ltr"><span class="codeinlineitalic">subpartition</span></code> to include additional values. The added partition values must comply with all rules and restrictions listed in the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABDGHIB"><span class="xreftitleitalic"><span class="italic">list_partitions</span></span></a> .</p>
</li>
<li>
<p>Use the <code dir="ltr">DROP</code> <code dir="ltr">VALUES</code> clause to reduce the <code dir="ltr"><span class="codeinlineitalic">subpartition_key_value</span></code> list of <code dir="ltr"><span class="codeinlineitalic">subpartition</span></code> by eliminating one or more <code dir="ltr"><span class="codeinlineitalic">subpartition_key_value</span></code>. When you specify this clause, Oracle Database checks to ensure that no rows with this value exist. If such rows do exist, then Oracle Database returns an error.</p>
</li>
</ul>
<p>You can also specify how Oracle Database should handle local indexes that become unusable as a result of the modification to the partition. See <a href="#BABFACEF">&#34;UNUSABLE LOCAL INDEXES Clauses&#34;</a>.</p>
<p><a id="SQLRF53452"></a><span class="subhead3">Restriction on Modifying List Subpartitions&nbsp;</span>The only <code dir="ltr"><span class="codeinlineitalic">modify_LOB_parameters</span></code> you can specify for <code dir="ltr"><span class="codeinlineitalic">subpartition</span></code> are the <code dir="ltr"><span class="codeinlineitalic">allocate_extent_clause</span></code> and <code dir="ltr"><span class="codeinlineitalic">deallocate_unused_clause</span></code>.</p>
<p class="subhead1"><a id="BABDIDEJ"></a><a id="SQLRF53453"></a><span class="italic">move_table_partition</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">move_table_partition</span></code> clause to move <code dir="ltr"><span class="codeinlineitalic">partition</span></code> to another segment. You can move partition data to another tablespace, recluster data to reduce fragmentation, or change create-time physical attributes.</p>
<p>If the table contains LOB columns, then you can use the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> to move the LOB data and LOB index segments associated with this partition. Only the LOBs named are affected. If you do not specify the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> for a particular LOB column, then its LOB data and LOB index segments are not moved.</p>
<p>If the table contains nested table columns, then you can use the <code dir="ltr"><span class="codeinlineitalic">nested_table_col_properties clause</span></code> of the <code dir="ltr"><span class="codeinlineitalic">table_partition_description</span></code> to move the nested table segments associated with this partition. Only the nested table items named are affected. If you do not specify the <code dir="ltr"><span class="codeinlineitalic">nested_table_col_properties clause</span></code> of the <code dir="ltr"><span class="codeinlineitalic">table_partition_description</span></code> for a particular nested table column, then its segments are not moved.</p>
<p>Oracle Database moves local index partitions corresponding to the specified partition. If the moved partitions are not empty, then the database marks them <code dir="ltr">UNUSABLE</code>. The database invalidates global indexes on heap-organized tables. You can update these indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p>When you move a LOB data segment, Oracle Database drops the old data segment and corresponding index segment and creates new segments even if you do not specify a new tablespace.</p>
<p>The move operation obtains its parallel attribute from the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>, if specified. When it is not specified, the default parallel attributes of the table, if any, are used. If neither is specified, then Oracle Database performs the move serially.</p>
<p>Specifying the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> in <code dir="ltr">MOVE</code> <code dir="ltr">PARTITION</code> does not change the default parallel attributes of <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For index-organized tables, Oracle Database uses the address of the primary key, as well as its value, to construct logical rowids. The logical rowids are stored in the secondary index of the table. If you move a partition of an index-organized table, then the address portion of the rowids will change, which can hamper performance. To ensure optimal performance, rebuild the secondary index(es) on the moved partition to update the rowids.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2132999">&#34;Moving Table Partitions: Example&#34;</a></div>
<p><a id="SQLRF53454"></a><span class="subhead3">MAPPING TABLE<a id="sthref4062"></a><a id="sthref4063"></a>&nbsp;</span>The <code dir="ltr">MAPPING</code> <code dir="ltr">TABLE</code> clause is relevant only for an index-organized table that already has a mapping table defined for it. Oracle Database moves the mapping table along with the moved index-organized table partition. The mapping table partition inherits the physical attributes of the moved index-organized table partition. This is the only way you can change the attributes of the mapping table partition. If you omit this clause, then the mapping table partition retains its original attributes.</p>
<p>Oracle Database marks <code dir="ltr">UNUSABLE</code> all corresponding bitmap index partitions.</p>
<p>Refer to the <a href="statements_7002.htm#i2128795"><span class="xreftitleitalic"><span class="italic">mapping_table_clauses</span></span></a> (in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>) for more information on this clause.</p>
<p><a id="CJACIBIA"></a><a id="SQLRF56289"></a><span class="subhead3">ONLINE&nbsp;</span>Specify <code dir="ltr">ONLINE</code> to indicate that DML operations on the table partition will be allowed while moving the table partition.</p>
<p><a id="CJAGDCEB"></a><a id="SQLRF56424"></a><span class="subhead3">Restrictions on the ONLINE Clause&nbsp;</span>The <code dir="ltr">ONLINE</code> clause is subject to the following restrictions when moving table partitions:</p>
<ul>
<li>
<p>You cannot specify the <code dir="ltr">ONLINE</code> clause for tables owned by <code dir="ltr">SYS</code>.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">ONLINE</code> clause for index-organized tables.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">ONLINE</code> clause for heap-organized tables that contain object types or on which bitmap join indexes or domain indexes are defined.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">ONLINE</code> clause when database-level supplemental logging is enabled for the database. This restriction is removed starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</p>
</li>
<li>
<p>Parallel DML and direct path <code dir="ltr">INSERT</code> operations require an exclusive lock on the table. Therefore, these operations are not supported concurrently with an ongoing online partition <code dir="ltr">MOVE</code>, due to conflicting locks.</p>
</li>
</ul>
<p><a id="SQLRF53455"></a><span class="subhead3">Restrictions on Moving Table Partitions&nbsp;</span>Moving table partitions is subject to the following restrictions:</p>
<ul>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">partition</span></code> is a hash partition, then the only attribute you can specify in this clause is <code dir="ltr">TABLESPACE</code>.</p>
</li>
<li>
<p>You cannot specify this clause for a partition containing subpartitions. However, you can move subpartitions using the <code dir="ltr"><span class="codeinlineitalic">move_table_subpartition</span></code> clause.</p>
</li>
</ul>
<p class="subhead1"><a id="BABEGIFH"></a><a id="SQLRF53456"></a><span class="italic">move_table_subpartition<a id="sthref4064"></a><a id="sthref4065"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">move_table_subpartition</span></code> clause to move the subpartition identified by <code dir="ltr"><span class="codeinlineitalic">subpartition_extended_name</span></code> to another segment. If you do not specify <code dir="ltr">TABLESPACE</code>, then the subpartition remains in the same tablespace.</p>
<p>If the subpartition is not empty, then Oracle Database marks <code dir="ltr">UNUSABLE</code> all local index subpartitions corresponding to the subpartition being moved. You can update all indexes on heap-organized tables during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p>If the table contains LOB columns, then you can use the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> to move the LOB data and LOB index segments associated with this subpartition. Only the LOBs specified are affected. If you do not specify the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> for a particular LOB column, then its LOB data and LOB index segments are not moved.</p>
<p>When you move a LOB data segment, Oracle Database drops the old data segment and corresponding index segment and creates new segments even if you do not specify a new tablespace.</p>
<p><a id="CJAJGGJB"></a><a id="SQLRF56290"></a><span class="subhead3">ONLINE&nbsp;</span>Specify <code dir="ltr">ONLINE</code> to indicate that DML operations on the table subpartition will be allowed while moving the table subpartition.</p>
<p><a id="SQLRF56425"></a><span class="subhead3">Restrictions on the ONLINE Clause&nbsp;</span>The <code dir="ltr">ONLINE</code> clause for moving table subpartitions is subject to the same restrictions as the <code dir="ltr">ONLINE</code> clause for moving table partitions. Refer to <a href="#CJAGDCEB">&#34;Restrictions on the ONLINE Clause&#34;</a>.</p>
<p><a id="SQLRF53457"></a><span class="subhead3">Restriction on Moving Table Subpartitions&nbsp;</span>The only clauses of the <code dir="ltr"><span class="codeinlineitalic">partitioning_storage_clause</span></code> you can specify are the <code dir="ltr">TABLESPACE</code> clause and <code dir="ltr"><span class="codeinlineitalic">table_compression</span></code>.</p>
<p class="subhead1"><a id="BABFDEBD"></a><a id="SQLRF53458"></a><span class="italic">add_table_partition</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">add_table_partition</span></code> clause to add one or more range, list, or system partitions to <code dir="ltr"><span class="codeinlineitalic">table</span></code>, or to add one hash partition to <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p>For each partition added, Oracle Database adds to any local index defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code> a new partition with the same name as that of the base table partition. If the index already has a partition with such a name, then Oracle Database generates a partition name of the form <code dir="ltr">SYS_P</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is index organized, then for each partition added Oracle Database adds a partition to any mapping table and overflow area defined on the table as well.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is the parent table of a reference-partitioned table, then you can use the <code dir="ltr"><span class="codeinlineitalic">dependent_tables_clause</span></code> to propagate the partition maintenance operation you are specifying in this statement to all the reference-partitioned child tables.</p>
<p>The default indexing property of <code dir="ltr"><span class="codeinlineitalic">table</span></code> is inherited by the new table partition(s). You can override this by setting the indexing property of a list, range, or system partition using the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> in the <code dir="ltr"><span class="codeinlineitalic">table_partition_description</span></code> clause, or a hash partition using the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> in the <code dir="ltr"><span class="codeinlineitalic">add_hash_partition_clause</span></code>.</p>
<p>For each partition added to a composite-partitioned table, Oracle Database adds a new index partition with the same subpartition descriptions to all local indexes defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>. Global indexes defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code> are not affected. If you specify the indexing property for the new table partition, then the new subpartitions inherit the indexing property for the partition. Otherwise, the new subpartitions inherit the default indexing property for the table. You can override this by setting the indexing property of a subpartition using the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> in the <code dir="ltr"><span class="codeinlineitalic">range_subpartition_desc</span></code>, <code dir="ltr"><span class="codeinlineitalic">individual_hash_subparts</span></code>, and <code dir="ltr"><span class="codeinlineitalic">list_subpartition_desc</span></code> clauses.</p>
<p><a id="SQLRF56327"></a><span class="subhead3">BEFORE Clause&nbsp;</span>You can specify the optional <code dir="ltr">BEFORE</code> clause only when adding system partitions to <code dir="ltr"><span class="codeinlineitalic">table</span></code>. This clause lets you specify where the new partition(s) should be added in relation to existing partitions. You cannot split a system partition. Therefore, this clause is useful if you want to divide the contents of one existing partition among multiple new partitions. If you omit this clause, then the database adds the new partition(s) after the existing partitions.</p>
<p><a id="SQLRF56350"></a><span class="subhead3">Restriction on Adding Table Partitions&nbsp;</span>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, or if a local domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then you can add only one partition at a time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2104459">&#34;Adding a Table Partition with a LOB and Nested Table Storage: Examples&#34;</a> and <a href="#CJAGEDIA">&#34;Adding Multiple Partitions to a Table: Example&#34;</a></div>
<p class="subhead2"><a id="BABJIDDB"></a><a id="SQLRF53459"></a><span class="italic">add_range_partition_clause<a id="sthref4066"></a><a id="sthref4067"></a><a id="sthref4068"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">add_range_partition_clause</span></code> lets you add a new range partition to the high end of a range-partitioned or composite range-partitioned table (after the last existing partition).</p>
<p>If a domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then the index must not be marked <code dir="ltr">IN_PROGRESS</code> or <code dir="ltr">FAILED</code>.</p>
<p><a id="SQLRF53460"></a><span class="subhead3">Restrictions on Adding Range Partitions&nbsp;</span>Adding range partitions is subject to the following restrictions:</p>
<ul>
<li>
<p>If the upper partition bound of each partitioning key in the existing high partition is <code dir="ltr">MAXVALUE</code>, then you cannot add a partition to the table. Instead, use the <code dir="ltr"><span class="codeinlineitalic">split_table_partition</span></code> clause to add a partition at the beginning or the middle of the table.</p>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">prefix_compression</span></code> and <code dir="ltr">OVERFLOW</code> clauses, are valid only for a partitioned index-organized table. You can specify <code dir="ltr"><span class="codeinlineitalic">prefix_compression</span></code> only if prefix compression is enabled at the table level. You can specify <code dir="ltr">OVERFLOW</code> only if the partitioned table already has an overflow segment.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr">PCTUSED</code> parameter for the index segment of an index-organized table.</p>
</li>
</ul>
<p><a id="SQLRF53461"></a><span class="subhead3"><span class="italic">range_values_clause</span>&nbsp;</span>Specify the upper bound for the new partition. The <code dir="ltr"><span class="codeinlineitalic">value_list</span></code> is a comma-delimited, ordered list of literal values corresponding to the partitioning key columns. The <code dir="ltr"><span class="codeinlineitalic">value_list</span></code> must collate greater than the partition bound for the highest existing partition in the table.</p>
<p><a id="SQLRF53462"></a><span class="subhead3"><span class="italic">table_partition_description</span>&nbsp;</span>Use this clause to specify any create-time physical attributes for the new partition. If the table contains LOB columns, then you can also specify partition-level attributes for one or more LOB items.</p>
<p><a id="SQLRF53463"></a><span class="subhead3">Subpartition Descriptions&nbsp;</span>These clauses are valid only for composite-partitioned tables. Use the <code dir="ltr"><span class="codeinlineitalic">range_subpartition_desc</span></code>, <code dir="ltr"><span class="codeinlineitalic">list_subpartition_desc</span></code>, <code dir="ltr"><span class="codeinlineitalic">individual_hash_subparts</span></code>, or <code dir="ltr"><span class="codeinlineitalic">hash_subparts_by_quantity</span></code> clause as appropriate, if you want to specify subpartitions for the new partition. This clause overrides any subpartition descriptions defined in <code dir="ltr"><span class="codeinlineitalic">subpartition_template</span></code> at the table level.</p>
<p class="subhead2"><a id="BABEJIIH"></a><a id="SQLRF53464"></a><span class="italic">add_hash_partition_clause <a id="sthref4069"></a><a id="sthref4070"></a><a id="sthref4071"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">add_hash_partition_clause</span></code> lets you add a new hash partition to the high end of a hash-partitioned table. Oracle Database populates the new partition with rows rehashed from other partitions of <code dir="ltr"><span class="codeinlineitalic">table</span></code> as determined by the hash function. For optimal load balancing, the total number of partitions should be a power of 2.</p>
<p>You can specify a name for the partition, and optionally a tablespace where it should be stored. If you do not specify a name, then the database assigns a partition name of the form <code dir="ltr">SYS_P</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>. If you do not specify <code dir="ltr">TABLESPACE</code>, then the new partition is stored in the default tablespace of the table. Other attributes are always inherited from table-level defaults.</p>
<p>If this operation causes data to be rehashed among partitions, then the database marks <code dir="ltr">UNUSABLE</code> any corresponding local index partitions. You can update all indexes on heap-organized tables during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> to specify whether to parallelize the creation of the new partition.</p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">indexing_clause</span></code> to specify the indexing property for the partition. If you do not specify this clause, then the partition inherits the default indexing property of <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#i2095331">CREATE TABLE</a> and <a class="olink VLDBG003" href="../VLDBG/GUID-F2C99CFA-1090-4A62-B452-D4E116A40A34.htm#VLDBG003"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for more information on hash partitioning</div>
<p class="subhead2"><a id="BABBGIAI"></a><a id="SQLRF53465"></a><span class="italic">add_list_partition_clause <a id="sthref4072"></a><a id="sthref4073"></a><a id="sthref4074"></a><a id="sthref4075"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">add_list_partition_clause</span></code> lets you add a new partition to <code dir="ltr"><span class="codeinlineitalic">table</span></code> using a new set of partition values. You can specify any create-time physical attributes for the new partition. If the table contains LOB columns, then you can also specify partition-level attributes for one or more LOB items.</p>
<p><a id="SQLRF53466"></a><span class="subhead3">Restrictions on Adding List Partitions&nbsp;</span>You cannot add a list partition if you have already defined a <code dir="ltr">DEFAULT</code> partition for the table. Instead, you must use the <code dir="ltr"><span class="codeinlineitalic">split_table_partition</span></code> clause to split the <code dir="ltr">DEFAULT</code> partition.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#BABDGHIB"><span class="xreftitleitalic"><span class="italic">list_partitions</span></span></a> of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information and restrictions on list partitions</p>
</li>
<li>
<p><a href="#i2107352">&#34;Working with Default List Partitions: Example&#34;</a></p>
</li>
</ul>
</div>
<p class="subhead2"><a id="BABJDEII"></a><a id="SQLRF53467"></a><span class="italic">add_system_partition_clause</span></p>
<p>Use this clause to add a partition to a system-partitioned table. Oracle Database adds a corresponding index partition to all local indexes defined on the table.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">table_partition_description</span></code> lets you specify partition-level attributes of the new partition. The values of any unspecified attributes are inherited from the table-level values.</p>
<p><a id="SQLRF53468"></a><span class="subhead3">Restriction on Adding System Partitions&nbsp;</span>You cannot specify the <code dir="ltr">OVERFLOW</code> clause when adding a system partition.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABJBDCC"><span class="xreftitleitalic"><span class="italic">system_partitioning</span></span></a> for more information on system partitions</div>
<p class="subhead1"><a id="BABJBADE"></a><a id="SQLRF53469"></a><span class="italic">coalesce_table_partition<a id="sthref4076"></a><a id="sthref4077"></a></span></p>
<p><code dir="ltr">COALESCE</code> applies only to hash partitions. Use the <code dir="ltr"><span class="codeinlineitalic">coalesce_table_partition</span></code> clause to indicate that Oracle Database should select the last hash partition, distribute its contents into one or more remaining partitions as determined by the hash function, and then drop the last partition.</p>
<p>Oracle Database drops local index partitions corresponding to the selected partition. The database marks <code dir="ltr">UNUSABLE</code> the local index partitions corresponding to one or more absorbing partitions. The database invalidates any indexes on heap-organized tables. You can update all indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p><a id="SQLRF53470"></a><span class="subhead3">Restriction on Coalescing Table Partitions&nbsp;</span>If you update global indexes using the <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code>, then you can specify only the keywords <code dir="ltr">UPDATE</code> <code dir="ltr">INDEXES</code>, not the subclause.</p>
<p class="subhead1"><a id="BABJGBFB"></a><a id="SQLRF53471"></a><span class="italic">drop_table_partition</span> <a id="sthref4078"></a><a id="sthref4079"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">drop_table_partition</span></code> clause removes partitions, and the data in those partitions, from a partitioned table. If you want to drop a partition but keep its data in the table, then you must merge the partition into one of the adjacent partitions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABJECDB"><span class="xreftitleitalic"><span class="italic">merge_table_partitions</span></span></a></div>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">partition_extended_names</span></code> clause to specify one or more partitions to be dropped. When specifying multiple partitions, you must specify all partitions by name, as shown in the upper branch of the syntax diagram, or all partitions using the <code dir="ltr">FOR</code> clause, as shown in the lower branch of the syntax diagram. You cannot use both types of syntax in one drop operation.</p>
<ul>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> has LOB columns, then Oracle Database also drops the LOB data and LOB index partitions and any subpartitions corresponding to the table partition(s) being dropped.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> has equipartitioned nested table columns, then Oracle Database also drops the nested table partitions corresponding to the table partition(s) being dropped.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is index organized and has a mapping table defined on it, then the database drops the corresponding mapping table partition(s) as well.</p>
</li>
<li>
<p>Oracle Database drops local index partitions and subpartitions corresponding to the dropped partition(s), even if they are marked <code dir="ltr">UNUSABLE</code>.</p>
</li>
</ul>
<p>You can update indexes on <code dir="ltr"><span class="codeinlineitalic">table</span></code> during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>. Updates to global indexes are metadata-only and the index entries for records that are dropped by the drop operation will continue to be physically stored in the index. You can remove these orphaned index entries by specifying <code dir="ltr">COALESCE</code> <code dir="ltr">CLEANUP</code> in the <a href="statements_1012.htm#i2050158">ALTER INDEX</a> statement or in the <a href="statements_1012.htm#i2050732"><span class="xreftitleitalic"><span class="italic">modify_index_partition</span></span></a> clause.</p>
<p>If you specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> with the <code dir="ltr"><span class="codeinlineitalic">update_index_clauses</span></code>, then the database parallelizes the index update, not the drop operation.</p>
<p>If you drop a range partition and later insert a row that would have belonged to the dropped partition, then the database stores the row in the next higher partition. However, if that partition is the highest partition, then the insert will fail, because the range of values represented by the dropped partition is no longer valid for the table.</p>
<p><a id="SQLRF53472"></a><span class="subhead3">Restrictions on Dropping Table Partitions&nbsp;</span>Dropping table partitions is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot drop a partition of a hash-partitioned table. Instead, use the <code dir="ltr"><span class="codeinlineitalic">coalesce_table_partition</span></code> clause.</p>
</li>
<li>
<p>You cannot drop all of the partitions in a table. Instead, drop the table.</p>
</li>
<li>
<p>If you update global indexes using the <a href="#BABEJHCA"><span class="xreftitleitalic"><span class="italic">update_all_indexes_clause</span></span></a>, then you can specify only the <code dir="ltr">UPDATE</code> <code dir="ltr">INDEXES</code> keywords but not the subclause.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, or if a local domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then you can drop only one partition at a time.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2132955">&#34;Dropping a Table Partition: Example&#34;</a></div>
<p class="subhead1"><a id="BABDJAAI"></a><a id="SQLRF53473"></a><span class="italic">drop_table_subpartition</span></p>
<p>Use this clause to drop range or list subpartitions from a range, list, or hash composite-partitioned table. Oracle Database deletes any rows in the dropped subpartition(s).</p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">subpartition_extended_names</span></code> clause to specify one or more subpartitions to be dropped. When specifying multiple subpartitions, you must specify all subpartitions by name, as shown in the upper branch of the syntax diagram, or all subpartitions using the <code dir="ltr">FOR</code> clause, as shown in the lower branch of the syntax diagram. You cannot use both types of syntax in one drop operation.</p>
<p>Oracle Database drops the corresponding subpartition(s) of any local index. Other index subpartitions are not affected. Any global indexes are marked <code dir="ltr">UNUSABLE</code> unless you specify the <code dir="ltr"><span class="codeinlineitalic">update_global_index_clause</span></code> or <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code>. Updates to global indexes are metadata-only and the index entries for records that are dropped by the drop operation will continue to be physically stored in the index. You can remove these orphaned index entries by specifying <code dir="ltr">COALESCE</code> <code dir="ltr">CLEANUP</code> in the <a href="statements_1012.htm#i2050158">ALTER INDEX</a> statement or in the <a href="statements_1012.htm#i2050732"><span class="xreftitleitalic"><span class="italic">modify_index_partition</span></span></a> clause.</p>
<p><a id="SQLRF53474"></a><span class="subhead3">Restrictions on Dropping Table Subpartitions&nbsp;</span>Dropping table subpartitions is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot drop a hash subpartition. Instead use the <code dir="ltr">MODIFY</code> <code dir="ltr">PARTITION</code> ... <code dir="ltr">COALESCE</code> <code dir="ltr">SUBPARTITION</code> syntax.</p>
</li>
<li>
<p>You cannot drop all of the subpartitions in a partition. Instead, use the <code dir="ltr"><span class="codeinlineitalic">drop_table_partition</span></code> clause.</p>
</li>
<li>
<p>If you update the global indexes, then you cannot specify the optional subclause of the <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code>.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, then you can drop only one subpartition at a time.</p>
</li>
<li>
<p>When dropping multiple subpartitions, all of the subpartitions must be in the same partition.</p>
</li>
</ul>
<p class="subhead1"><a id="BABEDEJE"></a><a id="SQLRF53475"></a><span class="italic">rename_partition_subpart<a id="sthref4080"></a><a id="sthref4081"></a><a id="sthref4082"></a><a id="sthref4083"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">rename_partition_subpart</span></code> clause to rename a table partition or subpartition to <code dir="ltr"><span class="codeinlineitalic">new_name</span></code>. For both partitions and subpartitions, <code dir="ltr"><span class="codeinlineitalic">new_name</span></code> must be different from all existing partitions and subpartitions of the same table.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is index organized, then Oracle Database assigns the same name to the corresponding primary key index partition as well as to any existing overflow partitions and mapping table partitions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133016">&#34;Renaming Table Partitions: Examples&#34;</a></div>
<p class="subhead1"><a id="BABGFDAI"></a><a id="SQLRF53476"></a><span class="italic">truncate_partition_subpart<a id="sthref4084"></a><a id="sthref4085"></a><a id="sthref4086"></a><a id="sthref4087"></a></span></p>
<p>Specify <code dir="ltr">TRUNCATE</code> <code dir="ltr"><span class="codeinlineitalic">partition_extended_names</span></code> to remove all rows from the partition(s) identified by <code dir="ltr"><span class="codeinlineitalic">partition_extended_names</span></code> or, if the table is composite partitioned, all rows from the subpartitions of those partitions. Specify <code dir="ltr">TRUNCATE</code> <code dir="ltr"><span class="codeinlineitalic">subpartition_extended_names</span></code> to remove all rows from individual subpartitions. If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is index organized, then Oracle Database also truncates any corresponding mapping table partitions and overflow area partitions.</p>
<p>When specifying multiple partitions, you must specify all partitions by name, as shown in the upper branch of the <code dir="ltr"><span class="codeinlineitalic">partition_extended_names</span></code> syntax diagram, or all partitions using the <code dir="ltr">FOR</code> clause, as shown in the lower branch of the syntax diagram. You cannot use both types of syntax in one truncate operation. The same rule applies when specifying multiple subpartitions with the subpartition_extended_names clause.</p>
<p>For each specified partition or subpartition:</p>
<ul>
<li>
<p>If the partition or subpartition to be truncated contain data, then you must first disable any referential integrity constraints on the table. Alternatively, you can delete the rows and then truncate the partition.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains any LOB columns, then the LOB data and LOB index segments for the partition are also truncated. If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is composite partitioned, then the LOB data and LOB index segments for the subpartitions of the partition are truncated.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains any equipartitioned nested tables, then you cannot truncate the parent partition unless its corresponding nested table partition is empty.</p>
</li>
<li>
<p>If a domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then the index must not be marked <code dir="ltr">IN_PROGRESS</code> or <code dir="ltr">FAILED</code>, and the index partition corresponding to the table partition being truncated must not be marked <code dir="ltr">IN_PROGRESS</code>.</p>
</li>
</ul>
<p>For each partition or subpartition truncated, Oracle Database also truncates corresponding local index partitions and subpartitions. If those index partitions or subpartitions are marked <code dir="ltr">UNUSABLE</code>, then the database truncates them and resets the <code dir="ltr">UNUSABLE</code> marker to <code dir="ltr">VALID</code>.</p>
<p>You can update indexes on <code dir="ltr"><span class="codeinlineitalic">table</span></code> during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>. Updates to global indexes are metadata-only and the index entries for records that are dropped by the truncate operation will continue to be physically stored in the index. You can remove these orphaned index entries by specifying <code dir="ltr">COALESCE</code> <code dir="ltr">CLEANUP</code> in the <a href="statements_1012.htm#i2050158">ALTER INDEX</a> statement or in the <a href="statements_1012.htm#i2050732"><span class="xreftitleitalic"><span class="italic">modify_index_partition</span></span></a> clause.</p>
<p>If you specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> with the <code dir="ltr"><span class="codeinlineitalic">update_index_clauses</span></code>, then the database parallelizes the index update, not the truncate operation.</p>
<p><a id="SQLRF53477"></a><span class="subhead3">DROP STORAGE&nbsp;</span>Specify <code dir="ltr">DROP</code> <code dir="ltr">STORAGE</code> to deallocate all space from the deleted rows, except the space allocated by the <code dir="ltr">MINEXTENTS</code> parameter. This space can subsequently be used by other objects in the tablespace.</p>
<p><a id="CJABHDAB"></a><a id="SQLRF55607"></a><span class="subhead3">DROP ALL STORAGE&nbsp;</span>Specify <code dir="ltr">DROP</code> <code dir="ltr">ALL</code> <code dir="ltr">STORAGE</code> to deallocate all space from the deleted rows, including the space allocated by the <code dir="ltr">MINEXTENTS</code> parameter. All segments for the partition(s) or subpartition(s), as well as all segments for their dependent objects, will be deallocated.</p>
<p><a id="SQLRF55608"></a><span class="subhead3">Restrictions on DROP ALL STORAGE&nbsp;</span>This clause is subject to the same restrictions as described in <a href="statements_7002.htm#CJAIJAHI">&#34;Restrictions on Deferred Segment Creation&#34;</a>.</p>
<p><a id="SQLRF53478"></a><span class="subhead3">REUSE STORAGE&nbsp;</span>Specify <code dir="ltr">REUSE</code> <code dir="ltr">STORAGE</code> to keep space from the deleted rows allocated to the partition(s) or subpartition(s). The space is subsequently available only for inserts and updates to the same partition(s) or subpartition(s).</p>
<p><a id="CJADIAHA"></a><a id="SQLRF55865"></a><span class="subhead3">CASCADE&nbsp;</span>Specify <code dir="ltr">CASCADE</code> to truncate the corresponding partition(s) or subpartition(s) in all reference-partitioned child tables of <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p><a id="SQLRF53479"></a><span class="subhead3">Restrictions on Truncating Table Partitions and Subpartitions&nbsp;</span>Truncating table partitions and subpartitions is subject to the following restrictions:</p>
<ul>
<li>
<p>If you update global indexes using the <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code>, then you can specify only the <code dir="ltr">UPDATE</code> <code dir="ltr">INDEXES</code> keywords, not the subclause.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, or if a local domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then you can truncate only one table partition or one table subpartition at a time.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133032">&#34;Truncating Table Partitions: Example&#34;</a></div>
<p class="subhead1"><a id="BABIBGDC"></a><a id="SQLRF53480"></a><span class="italic">split_table_partition</span> <a id="sthref4088"></a><a id="sthref4089"></a><a id="sthref4090"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">split_table_partition</span></code> clause lets you create, from the partition identified by <code dir="ltr"><span class="codeinlineitalic">partition_extended_name</span></code>, multiple new partitions, each with a new segment, new physical attributes, and new initial extents. The segment associated with the current partition is discarded.</p>
<p>The new partitions inherit all unspecified physical attributes from the current partition.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database can optimize and speed up <code dir="ltr">SPLIT</code> <code dir="ltr">PARTITION</code> and <code dir="ltr">SPLIT</code> <code dir="ltr">SUBPARTITION</code> operations if specific conditions are met. Refer to <a class="olink VLDBG00304" href="../VLDBG/GUID-5AEB1A3A-89F1-489B-824E-CCD955F94BD7.htm#VLDBG00304"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for information on optimizing these operations.</div>
<ul>
<li>
<p>If you split a <code dir="ltr">DEFAULT</code> list partition, then the last resulting partition will have the <code dir="ltr">DEFAULT</code> value. All other resulting partitions will have the specified split values.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is index organized, then Oracle Database splits any corresponding mapping table partition and places it in the same tablespace as the parent index-organized table partition. The database also splits any corresponding overflow area, and you can use the <code dir="ltr">OVERFLOW</code> clause to specify segment attributes for the new overflow areas.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains LOB columns, then you can use the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> to specify separate LOB storage attributes for the LOB data segments resulting from the split. The database drops the LOB data and LOB index segments of the current partition and creates new segments for each LOB column, for each partition, even if you do not specify a new tablespace.</p>
</li>
<li>
<p><a id="sthref4091"></a>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains nested table columns, then you can use the <code dir="ltr"><span class="codeinlineitalic">split_nested_table_part</span></code> clause to specify the storage table names and segment attributes of the nested table segments resulting from the split. The database drops the nested table segments of the current partition and creates new segments for each nested table column, for each partition. This clause allows for multiple nested table columns in the parent table as well as multilevel nested table columns.</p>
</li>
</ul>
<p>Oracle Database splits the corresponding local index partition, even if it is marked <code dir="ltr">UNUSABLE</code>. The database marks <code dir="ltr">UNUSABLE</code>, and you must rebuild the local index partitions corresponding to the split partitions. The new index partitions inherit their attributes from the partition being split. The database stores the new index partitions in the default tablespace of the index partition being split. If that index partition has no default tablespace, then the database uses the tablespace of the new underlying table partitions.</p>
<p><a id="SQLRF53481"></a><span class="subhead3">AT Clause&nbsp;</span>The <code dir="ltr">AT</code> clause applies only to range partitions and lets you split one range partition into two range partitions. Specify the new noninclusive upper bound for the first of the two new partitions. The value list must compare less than the original partition bound for the current partition and greater than the partition bound for the next lowest partition (if there is one).</p>
<p><a id="SQLRF53482"></a><span class="subhead3">VALUES Clause&nbsp;</span>The <code dir="ltr">VALUES</code> clause applies only to list partitions and allows you to split one list partition into two list partitions. Specify the partition values you want to include in the first of the two new partitions. Oracle Database creates the first new partition using the partition value list you specify and creates the second new partition using the remaining partition values from the current partition. Therefore, the value list cannot contain all of the partition values of the current partition, nor can it contain any partition values that do not already exist for the current partition.</p>
<p><a id="SQLRF56328"></a><span class="subhead3">INTO Clause&nbsp;</span>The <code dir="ltr">INTO</code> clause lets you describe the new partitions resulting from the split.</p>
<ul>
<li>
<p>The <code dir="ltr">AT</code> ... <code dir="ltr">INTO</code> clause lets you describe the partitions resulting from splitting one range partition into two range partitions. In <code dir="ltr"><span class="codeinlineitalic">range_partition_desc</span></code>, the keyword <code dir="ltr">PARTITION</code> is required even if you do not specify the optional names and physical attributes of the two partitions resulting from the split. If you do not specify new partition names, then Oracle Database assigns names of the form <code dir="ltr">SYS_P</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>. Any attributes you do not specify are inherited from the current partition.</p>
</li>
<li>
<p>The <code dir="ltr">VALUES</code> ... <code dir="ltr">INTO</code> clause lets you describe the partitions resulting from splitting one list partition into two list partitions. In <code dir="ltr"><span class="codeinlineitalic">list_partition_desc</span></code>, the keyword <code dir="ltr">PARTITION</code> is required even if you do not specify the optional names and physical attributes of the two partitions resulting from the split. If you do not specify new partition names, then Oracle Database assigns names of the form <code dir="ltr">SYS_P</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>. Any attributes you do not specify are inherited from the current partition.</p>
</li>
<li>
<p>The <code dir="ltr">INTO</code> clause lets you split one range partition into two or more range partitions, or one list partition into two or more list partitions. If you do not specify new partition names, then Oracle Database assigns names of the form <code dir="ltr">SYS_P</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>. Any attributes you do not specify are inherited from the current partition.</p>
<ul>
<li>
<p>You must specify range partitions in ascending order of their partition bounds. The partition bound of the first specified range partition must be greater than the partition bound for the next lowest partition in the table (if there is one). Do not specify a partition bound for the last range partition; it will inherit the partition bound of the current partition.</p>
</li>
<li>
<p>For list partitions, all specified partition values for the new partitions must exist in the current partition. Do not specify any partition values for the last partition. Oracle Database creates the last partition using the remaining partition values from the current partition.</p>
</li>
</ul>
</li>
</ul>
<p>For range-hash composite-partitioned tables, if you specify subpartitioning for the new partitions, then you can specify only <code dir="ltr">TABLESPACE</code> and table compression for the subpartitions. All other attributes are inherited from the current partition. If you do not specify subpartitioning for the new partitions, then their tablespace is also inherited from the current partition.</p>
<p>For range-list and list-list composite-partitioned tables, you cannot specify subpartitions for the new partitions at all. The list subpartitions of the split partition inherit the number of subpartitions and value lists from the current partition.</p>
<p>For all composite-partitioned tables for which you do not specify subpartition names for the newly created subpartitions, the newly created subpartitions inherit their names from the parent partition as follows:</p>
<ul>
<li>
<p>For those subpartitions in the parent partition with names of the form <code dir="ltr"><span class="codeinlineitalic">partition_name</span></code> underscore (_) <code dir="ltr"><span class="codeinlineitalic">subpartition_name</span></code> (for example, <code dir="ltr">P1_SUBP1</code>), Oracle Database generates corresponding names in the newly created subpartitions using the new partition names (for example <code dir="ltr">P1A_SUB1</code> and <code dir="ltr">P1B_SUB1</code>).</p>
</li>
<li>
<p>For those subpartitions in the parent partition with names of any other form, Oracle Database generates subpartition names of the form <code dir="ltr">SYS_SUBP</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>.</p>
</li>
</ul>
<p>Oracle Database splits the corresponding partition(s) in each local index defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, even if the index is marked <code dir="ltr">UNUSABLE</code>.</p>
<p>Oracle Database invalidates any indexes on heap-organized tables. You can update these indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is the parent table of a reference-partitioned table, then you can use the <code dir="ltr"><span class="codeinlineitalic">dependent_tables_clause</span></code> to propagate the partition maintenance operation you are specifying in this statement to all the reference-partitioned child tables.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> lets you parallelize the split operation but does not change the default parallel attributes of the table.</p>
<p><a id="SQLRF53484"></a><span class="subhead3">Restrictions on Splitting Table Partitions&nbsp;</span>Splitting table partitions is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify this clause for a hash partition.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> for index-organized tables.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, or if a local domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then you can split the partition into only two new partitions.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2110367">&#34;Splitting Table Partitions: Examples&#34;</a></div>
<p class="subhead1"><a id="BABDBHGE"></a><a id="SQLRF53485"></a><span class="italic">split_table_subpartition</span></p>
<p>Use this clause to split a subpartition into multiple new subpartitions with nonoverlapping value lists.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database can optimize and speed up <code dir="ltr">SPLIT</code> <code dir="ltr">PARTITION</code> and <code dir="ltr">SPLIT</code> <code dir="ltr">SUBPARTITION</code> operations if specific conditions are met. Refer to <a class="olink VLDBG00304" href="../VLDBG/GUID-5AEB1A3A-89F1-489B-824E-CCD955F94BD7.htm#VLDBG00304"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for information on optimizing these operations.</div>
<p><a id="SQLRF53486"></a><span class="subhead3">AT Clause&nbsp;</span>The <code dir="ltr">AT</code> clause is valid only for range subpartitions. Specify the new noninclusive upper bound for the first of the two new subpartitions. The value list must compare less than the original subpartition bound for the subpartition identified by <code dir="ltr"><span class="codeinlineitalic">subpartition_extended_name</span></code> and greater than the partition bound for the next lowest subpartition (if there is one).</p>
<p><a id="SQLRF53487"></a><span class="subhead3">VALUES Clause&nbsp;</span>The <code dir="ltr">VALUES</code> clause is valid only for list subpartitions. Specify the subpartition values you want to include in the first of the two new subpartitions. You can specify <code dir="ltr">NULL</code> if you have not already specified <code dir="ltr">NULL</code> for another subpartition in the same partition. Oracle Database creates the first new subpartition using the subpartition value list you specify and creates the second new partition using the remaining partition values from the current subpartition. Therefore, the value list cannot contain all of the partition values of the current subpartition, nor can it contain any partition values that do not already exist for the current subpartition.</p>
<p><a id="SQLRF56329"></a><span class="subhead3">INTO Clause&nbsp;</span>The <code dir="ltr">INTO</code> clause lets you describe the new subpartitions resulting from the split.</p>
<ul>
<li>
<p>The <code dir="ltr">AT</code> ... <code dir="ltr">INTO</code> clause lets you describe the two subpartitions resulting from splitting one range partition into two range partitions. In <code dir="ltr"><span class="codeinlineitalic">range_subpartition_desc</span></code>, the keyword <code dir="ltr">SUBPARTITION</code> is required even if you do not specify the optional names and attributes of the two new subpartitions. If you do not specify new subpartition names, then Oracle Database assigns names of the form <code dir="ltr">SYS_SUBP</code><code dir="ltr"><span class="codeinlineitalic">n</span></code> Any attributes you do not specify are inherited from the current subpartition.</p>
</li>
<li>
<p>The <code dir="ltr">VALUES</code> ... <code dir="ltr">INTO</code> clause lets you describe the two subpartitions resulting from splitting one list partition into two list partitions. In <code dir="ltr"><span class="codeinlineitalic">list_subpartition_desc</span></code>, the keyword <code dir="ltr">SUBPARTITION</code> is required even if you do not specify the optional names and attributes of the two new subpartitions. If you do not specify new subpartition names, then Oracle Database assigns names of the form <code dir="ltr">SYS_SUBP</code><code dir="ltr"><span class="codeinlineitalic">n</span></code> Any attributes you do not specify are inherited from the current subpartition.</p>
</li>
<li>
<p>The <code dir="ltr">INTO</code> clause lets you split one range subpartition into two or more range subpartitions, or one list subpartition into two or more list subpartitions. If you do not specify new subpartition names, then Oracle Database assigns names of the form <code dir="ltr">SYS_SUBP</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>. Any attributes you do not specify are inherited from the current subpartition.</p>
<ul>
<li>
<p>You must specify range subpartitions in ascending order of their subpartition bounds. The subpartition bound of the first specified range subpartition must be greater than the subpartition bound for the next lowest subpartition (if there is one). Do not specify a subpartition bound for the last range subpartition; it will inherit the partition bound of the current subpartition.</p>
</li>
<li>
<p>For list subpartitions, all specified subpartition values for the new subpartitions must exist in the current subpartition. Do not specify any subpartition values for the last subpartition. Oracle Database creates the last subpartition using the remaining partition values from the current subpartition.</p>
</li>
</ul>
</li>
</ul>
<p>Oracle Database splits any corresponding local subpartition index, even if it is marked <code dir="ltr">UNUSABLE</code>. The new index subpartitions inherit the names of the new table subpartitions unless those names are already held by index subpartitions. In that case, the database assigns new index subpartition names of the form <code dir="ltr">SYS_SUBPn</code>. The new index subpartitions inherit physical attributes from the parent subpartition. However, if the parent subpartition does not have a default <code dir="ltr">TABLESPACE</code> attribute, then the new subpartitions inherit the tablespace of the corresponding new table subpartitions.</p>
<p>Oracle Database invalidates indexes on heap-organized tables. You can update these indexes by using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p><a id="SQLRF53489"></a><span class="subhead3">Restrictions on Splitting Table Subpartitions&nbsp;</span>Splitting table subpartitions is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify this clause for a hash subpartition.</p>
</li>
<li>
<p>In subpartition descriptions, the only clauses of <code dir="ltr"><span class="codeinlineitalic">partitioning_storage_clause</span></code> you can specify are <code dir="ltr">TABLESPACE</code> and table compression.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> for index-organized tables.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, then you can split the subpartition into only two new subpartitions.</p>
</li>
</ul>
<p class="subhead1"><a id="BABJECDB"></a><a id="SQLRF53490"></a><span class="italic">merge_table_partitions <a id="sthref4092"></a><a id="sthref4093"></a><a id="sthref4094"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">merge_table_partitions</span></code> clause lets you merge the contents of two or more range, list, or system partitions of <code dir="ltr"><span class="codeinlineitalic">table</span></code> into one new partition and then drop the original partitions. This clause is not valid for hash partitions. Use the <code dir="ltr"><span class="codeinlineitalic">coalesce_table_partition</span></code> clause instead.</p>
<p>Specify a comma-separated list of two or more range, list, or system partitions to be merged. You can use the <code dir="ltr">TO</code> clause to specify two or more adjacent range partitions to be merged.</p>
<p>For each partition, use <code dir="ltr"><span class="codeinlineitalic">partition</span></code> to specify a partition name or the <code dir="ltr">FOR</code> clause to specify a partition without using its name. See <a href="sql_elements009.htm#i165979">&#34;References to Partitioned Tables and Indexes&#34;</a> for more information on the <code dir="ltr">FOR</code> clause.</p>
<ul>
<li>
<p>The partitions to be merged must be adjacent and must be specified in ascending order of their partition bounds if they are range partitions. List partitions and system partitions need not be adjacent in order to be merged.</p>
</li>
<li>
<p>When you merge range partitions, the new partition inherits the partition bound of the highest of the original partitions.</p>
</li>
<li>
<p>When you merge list partitions, the resulting partition value list is the union of the set of the partition values lists of the partitions being merged. If you merge a <code dir="ltr">DEFAULT</code> list partition with other list partitions, then the resulting partition will be the <code dir="ltr">DEFAULT</code> partition and will have the <code dir="ltr">DEFAULT</code> value.</p>
</li>
<li>
<p>When you merge composite range partitions or composite list partitions, range-list or list-list composite partitions, you cannot specify subpartition descriptions. Oracle Database obtains the subpartitioning information from the subpartition template. If you have not specified a subpartition template, then the database creates one <code dir="ltr">MAXVALUE</code> subpartition from range subpartitions or one <code dir="ltr">DEFAULT</code> subpartition from list subpartitions.</p>
</li>
</ul>
<p>Any attributes you do not specify explicitly for the new partition are inherited from table-level defaults. However, if you reuse one of the partition names for the new partition, then the new partition inherits values from the partition whose name is being reused rather than from table-level default values.</p>
<p>Oracle Database drops local index partitions corresponding to the selected partitions and marks <code dir="ltr">UNUSABLE</code> the local index partition corresponding to merged partition. The database also marks <code dir="ltr">UNUSABLE</code> any global indexes on heap-organized tables. You can update all these indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is the parent table of a reference-partitioned table, then you can use the <code dir="ltr"><span class="codeinlineitalic">dependent_tables_clause</span></code> to propagate the partition maintenance operation you are specifying in this statement to all the reference-partitioned child tables.</p>
<p><a id="SQLRF56351"></a><span class="subhead3">Restriction on Merging Table Partitions&nbsp;</span>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, or if a local domain index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then you can merge only two partitions at a time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2132937">&#34;Merging Two Table Partitions: Example&#34;</a>, <a href="#CJABJICB">&#34;Merging Four Adjacent Range Partitions: Example&#34;</a>, and <a href="#i2107352">&#34;Working with Default List Partitions: Example&#34;</a></div>
<p class="subhead1"><a id="BABCGHAG"></a><a id="SQLRF53491"></a><span class="italic">merge_table_subpartitions</span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">merge_table_subpartitions</span></code> clause lets you merge the contents of two or more range or list subpartitions of <code dir="ltr"><span class="codeinlineitalic">table</span></code> into one new subpartition and then drop the original subpartitions. This clause is not valid for hash subpartitions. Use the <code dir="ltr"><span class="codeinlineitalic">coalesce_hash_subpartition</span></code> clause instead.</p>
<p>Specify a comma-separated list of two or more range or list subpartitions to be merged. You can use the <code dir="ltr">TO</code> clause to specify two or more adjacent range subpartitions to be merged.</p>
<p>For each subpartition, use <code dir="ltr"><span class="codeinlineitalic">subpartition</span></code> to specify a subpartition name or the <code dir="ltr">FOR</code> clause to specify a subpartition without using its name. See <a href="sql_elements009.htm#i165979">&#34;References to Partitioned Tables and Indexes&#34;</a> for more information on the <code dir="ltr">FOR</code> clause.</p>
<p>The subpartitions to be merged must belong to the same partition. If they are range subpartitions, then they must be adjacent. If they are list subpartitions, then they need not be adjacent. The data in the resulting subpartition consists of the combined data from the merged subpartitions.</p>
<p>If you specify the <code dir="ltr">INTO</code> clause, then in the <code dir="ltr"><span class="codeinlineitalic">range_subpartition_desc</span></code> or <code dir="ltr"><span class="codeinlineitalic">list_subpartition_desc</span></code> you cannot specify the <code dir="ltr"><span class="codeinlineitalic">range_values_clause</span></code> or <code dir="ltr"><span class="codeinlineitalic">list_values_clause</span></code>, respectively. Further, the only clauses you can specify in the <code dir="ltr"><span class="codeinlineitalic">partitioning_storage_clause</span></code> are the <code dir="ltr">TABLESPACE</code> clause and <code dir="ltr"><span class="codeinlineitalic">table_compression</span></code>.</p>
<p>Any attributes you do not specify explicitly for the new subpartition are inherited from partition-level values. However, if you reuse one of the subpartition names for the new subpartition, then the new subpartition inherits values from the subpartition whose name is being reused rather than from partition-level default values.</p>
<p>Oracle Database merges corresponding local index subpartitions and marks the resulting index subpartition <code dir="ltr">UNUSABLE</code>. The database also marks <code dir="ltr">UNUSABLE</code> both partitioned and nonpartitioned global indexes on heap-organized tables. You can update all indexes during this operation using the <a href="#BABICDHJ"><span class="xreftitleitalic"><span class="italic">update_index_clauses</span></span></a>.</p>
<p><a id="SQLRF56352"></a><span class="subhead3">Restriction on Merging Table Subpartitions&nbsp;</span>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> is an index-organized table, then you can merge only two subpartitions at a time.</p>
<p class="subhead1"><a id="BABHHAHF"></a><a id="SQLRF53492"></a><span class="italic">exchange_partition_subpart <a id="sthref4095"></a><a id="sthref4096"></a><a id="sthref4097"></a><a id="sthref4098"></a><a id="sthref4099"></a></span></p>
<p>Use the <code dir="ltr">EXCHANGE</code> <code dir="ltr">PARTITION</code> or <code dir="ltr">EXCHANGE</code> <code dir="ltr">SUBPARTITION</code> clause to exchange the data and index segments of:</p>
<ul>
<li>
<p>One nonpartitioned table with:</p>
<ul>
<li>
<p>one range, list, or hash partition</p>
</li>
<li>
<p>one range, list, or hash subpartition</p>
</li>
</ul>
</li>
<li>
<p>One range-partitioned table with the range subpartitions of a range-range or list-range composite-partitioned table partition</p>
</li>
<li>
<p>One hash-partitioned table with the hash subpartitions of a range-hash or list-hash composite-partitioned table partition</p>
</li>
<li>
<p>One list-partitioned table with the list subpartitions of a range-list or hash-list composite-partitioned table partition</p>
</li>
</ul>
<p>In all cases, the structure of the table and the partition or subpartition being exchanged, including their partitioning keys, must be identical. In the case of list partitions and subpartitions, the corresponding value lists must also match.</p>
<p>This clause facilitates high-speed data loading when used with transportable tablespaces.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN011" href="../ADMIN/tspaces.htm#ADMIN011"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information on transportable tablespaces</div>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains LOB columns, then for each LOB column Oracle Database exchanges LOB data and LOB index partition or subpartition segments with corresponding LOB data and LOB index segments of <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> has nested table columns, then for each such column Oracle Database exchanges nested table partition segments with corresponding nested table segments of the nonpartitioned table.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains an identity column, then so must the partition or subpartition being exchanged, and vice versa. The sequence generators must both be increasing or decreasing. The sequence generators are not exchanged, so <code dir="ltr"><span class="codeinlineitalic">table</span></code> and the partition or subpartition will continue to use the same sequence generators. The high water mark for both sequence generators will be adjusted so that new identity column values will not conflict with existing values.</p>
<p>All of the segment attributes of the two objects (including tablespace and logging) are also exchanged.</p>
<p>Existing statistics for the table being exchanged into the partitioned table will be exchanged. However, the global statistics for the partitioned table will not be altered. Use the <code dir="ltr">DBMS_STATS.GATHER_TABLE_STATS</code> procedure to re-create global statistics. You can set the <code dir="ltr">GRANULARITY</code> attribute equal to &#39;<code dir="ltr">APPROX_GLOBAL AND PARTITION</code>&#39; to speed up the process and aggregate new global statistics based on the existing partition statistics. See <a class="olink ARPLS059" href="../ARPLS/d_stats.htm#ARPLS059"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on this packaged procedure.</p>
<p>Oracle Database invalidates any global indexes on the objects being exchanged. You can update the global indexes on the table whose partition is being exchanged by using either the <a href="#i2149942"><span class="xreftitleitalic"><span class="italic">update_global_index_clause</span></span></a> or the <a href="#BABEJHCA"><span class="xreftitleitalic"><span class="italic">update_all_indexes_clause</span></span></a>. For the <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code>, you can specify only the keywords <code dir="ltr">UPDATE</code> <code dir="ltr">INDEXES</code>, not the subclause. Global indexes on the table being exchanged remain invalidated. The <code dir="ltr"><span class="codeinlineitalic">update_global_index_clause</span></code> and <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code> do not update local indexes during an exchange operation. You can specify local index maintenance by using the <a href="#CIHHEBGI">INCLUDING | EXCLUDING INDEXES</a> clause. If you specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> with either of these clauses, then the database parallelizes the index update, not the exchange operation.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABBBDDJ">&#34;Notes on Exchanging Partitions and Subpartitions&#34;</a></div>
<p><a id="SQLRF53493"></a><span class="subhead3">WITH TABLE&nbsp;</span>Specify the <code dir="ltr"><span class="codeinlineitalic">table</span></code> with which the partition or subpartition will be exchanged. If you omit <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then Oracle Database assumes that <code dir="ltr"><span class="codeinlineitalic">table</span></code> is in your own schema.</p>
<p><a id="CIHHEBGI"></a><a id="SQLRF53494"></a><span class="subhead3">INCLUDING | EXCLUDING INDEXES&nbsp;</span>Specify <code dir="ltr">INCLUDING</code> <code dir="ltr">INDEXES</code> if you want local index partitions or subpartitions to be exchanged with the corresponding table index (for a nonpartitioned table) or local indexes (for a hash-partitioned table). Specify <code dir="ltr">EXCLUDING</code> <code dir="ltr">INDEXES</code> if you want all index partitions or subpartitions corresponding to the partition and all the regular indexes and index partitions on the exchanged table to be marked <code dir="ltr">UNUSABLE</code>. If you omit this clause, then the default is <code dir="ltr">EXCLUDING</code> <code dir="ltr">INDEXES</code>.</p>
<p><a id="SQLRF53495"></a><span class="subhead3">WITH | WITHOUT VALIDATION&nbsp;</span>Specify <code dir="ltr">WITH</code> <code dir="ltr">VALIDATION</code> if you want Oracle Database to return an error if any rows in the exchanged table do not map into partitions or subpartitions being exchanged. Specify <code dir="ltr">WITHOUT</code> <code dir="ltr">VALIDATION</code> if you do not want Oracle Database to check the proper mapping of rows in the exchanged table. If you omit this clause, then the default is <code dir="ltr">WITH</code> <code dir="ltr">VALIDATION</code>.</p>
<p><a id="BABEEFED"></a><a id="SQLRF53496"></a><span class="subhead3"><span class="italic">exceptions_clause</span> <a id="sthref4100"></a><a id="sthref4101"></a><a id="sthref4102"></a><a id="sthref4103"></a>&nbsp;</span>See <a href="clauses002.htm#i1012716">&#34;Handling Constraint Exceptions&#34;</a> for information on this clause. In the context of exchanging partitions, this clause is valid only if the partitioned table has been defined with a <code dir="ltr">UNIQUE</code> constraint, and that constraint must be in <code dir="ltr">DISABLE</code> <code dir="ltr">VALIDATE</code> state. This clause is valid only for exchanging partition, not subpartitions.</p>
<p><a id="CJAGJIIJ"></a><a id="SQLRF55866"></a><span class="subhead3">CASCADE&nbsp;</span>Specify <code dir="ltr">CASCADE</code> to exchange the corresponding partition or subpartition in all reference-partitioned child tables of <code dir="ltr"><span class="codeinlineitalic">table</span></code>. The reference-partitioned table hierarchies of the source and target must match.</p>
<p><a id="SQLRF55886"></a><span class="subhead3">Restriction on CASCADE&nbsp;</span>You cannot specify <code dir="ltr">CASCADE</code> if a parent key in the reference-partitioned table hierarchy is referenced by multiple partitioning constraints.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The <code dir="ltr">DBMS_IOT</code> package in <a class="olink ARPLS018" href="../ARPLS/d_iot.htm#ARPLS018"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information on the SQL scripts</p>
</li>
<li>
<p><a class="olink ADMIN021" href="../ADMIN/general.htm#ADMIN021"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information on eliminating migrated and chained rows</p>
</li>
<li>
<p><a href="clauses002.htm#g1053592"><span class="xreftitleitalic"><span class="italic">constraint</span></span></a> for more information on constraint checking and <a href="#i2088194">&#34;Creating an Exceptions Table for Index-Organized Tables: Example&#34;</a></p>
</li>
</ul>
</div>
<p><a id="BABBBDDJ"></a><a id="SQLRF53497"></a><span class="subhead3">Notes on Exchanging Partitions and Subpartitions<a id="sthref4104"></a>&nbsp;</span>The following notes apply when exchanging partitions and subpartitions:</p>
<ul>
<li>
<p>Both tables involved in the exchange must have the same primary key, and no validated foreign keys can be referencing either of the tables unless the referenced table is empty.</p>
</li>
<li>
<p>When exchanging partitioned index-organized tables:</p>
<ul>
<li>
<p>The source and target table or partition must have their primary key set on the same columns, in the same order.</p>
</li>
<li>
<p>If prefix compression is enabled, then it must be enabled for both the source and the target, and with the same prefix length.</p>
</li>
<li>
<p>Both the source and target must be index organized.</p>
</li>
<li>
<p>Both the source and target must have overflow segments, or neither can have overflow segments. Also, both the source and target must have mapping tables, or neither can have a mapping table.</p>
</li>
<li>
<p>Both the source and target must have identical storage attributes for any LOB columns.</p>
</li>
</ul>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2132971">&#34;Exchanging Table Partitions: Example&#34;</a></div>
<p class="subhead1"><a id="BABDDGBB"></a><a id="SQLRF53498"></a><span class="italic">dependent_tables_clause</span> <a id="sthref4105"></a><a id="sthref4106"></a></p>
<p>This clause is valid only when you are altering the parent table of a reference-partitioned table. The clause lets you specify attributes of partitions that are created by the operation for reference-partitioned child tables of the parent table.</p>
<ul>
<li>
<p>If the parent table is not composite partitioned, then specify one or more child tables, and for each child table specify one <code dir="ltr"><span class="codeinlineitalic">partition_spec</span></code> for each partition created in the parent table.</p>
</li>
<li>
<p>If the parent table is composite, then specify one or more child tables, and for each child table specify one <code dir="ltr"><span class="codeinlineitalic">partition_spec</span></code> for each subpartition created in the parent table.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> clause <a href="statements_7002.htm#BABFBFBC"><span class="xreftitleitalic"><span class="italic">reference_partitioning</span></span></a> for information on creating reference-partitioned tables and <a class="olink VLDBG00224" href="../VLDBG/GUID-54D18B18-6838-4115-9389-E1FB0D20A8CA.htm#VLDBG00224"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for information on partitioning by reference in general</div>
<p class="subhead1"><a id="BABFACEF"></a><a id="SQLRF53499"></a>UNUSABLE LOCAL INDEXES Clauses <a id="sthref4107"></a><a id="sthref4108"></a><a id="sthref4109"></a><a id="sthref4110"></a></p>
<p>These two clauses modify the attributes of local index partitions and index subpartitions corresponding to <code dir="ltr"><span class="codeinlineitalic">partition</span></code>, depending on whether you are modifying a partition or subpartition.</p>
<ul>
<li>
<p><code dir="ltr">UNUSABLE</code> <code dir="ltr">LOCAL</code> <code dir="ltr">INDEXES</code> marks <code dir="ltr">UNUSABLE</code> the local index partition or index subpartition associated with <code dir="ltr"><span class="codeinlineitalic">partition</span></code>.</p>
</li>
<li>
<p><code dir="ltr">REBUILD</code> <code dir="ltr">UNUSABLE</code> <code dir="ltr">LOCAL</code> <code dir="ltr">INDEXES</code> rebuilds the unusable local index partition or index subpartition associated with <code dir="ltr"><span class="codeinlineitalic">partition</span></code>.</p>
</li>
</ul>
<p><a id="SQLRF53500"></a><span class="subhead3">Restrictions on UNUSABLE LOCAL INDEXES&nbsp;</span>This clause is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot specify this clause with any other clauses of the <code dir="ltr"><span class="codeinlineitalic">modify_table_partition</span></code> clause.</p>
</li>
<li>
<p>You cannot specify this clause in the <code dir="ltr"><span class="codeinlineitalic">modify_table_partition</span></code> clause for a partition that has subpartitions. However, you can specify this clause in the <code dir="ltr"><span class="codeinlineitalic">modify_table_subpartition</span></code> clause.</p>
</li>
</ul>
<p class="subhead1"><a id="BABICDHJ"></a><a id="SQLRF53501"></a><span class="italic">update_index_clauses</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">update_index_clauses</span></code> to update the indexes on <code dir="ltr"><span class="codeinlineitalic">table</span></code> as part of the table partitioning operation. When you perform DDL on a table partition, if an index is defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>, then Oracle Database invalidates the entire index, not just the partitions undergoing DDL. This clause lets you update the index partition you are changing during the DDL operation, eliminating the need to rebuild the index after the DDL.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">update_index_clauses</span></code> are not needed, and are not valid, for partitioned index-organized tables. Index-organized tables are primary key based, so Oracle can keep global indexes <code dir="ltr">USABLE</code> during operations that move data but do not change its value.</p>
<p class="subhead2"><a id="i2149942"></a><a id="SQLRF53506"></a><span class="italic">update_global_index_clause <a id="sthref4111"></a><a id="sthref4112"></a><a id="sthref4113"></a></span></p>
<p>Use this clause to update only global indexes on <code dir="ltr"><span class="codeinlineitalic">table</span></code>. Oracle Database marks <code dir="ltr">UNUSABLE</code> all local indexes on <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p><a id="SQLRF53507"></a><span class="subhead3">UPDATE GLOBAL INDEXES&nbsp;</span>Specify <code dir="ltr">UPDATE</code> <code dir="ltr">GLOBAL</code> <code dir="ltr">INDEXES</code> to update the global indexes defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p><a id="SQLRF53508"></a><span class="subhead3">Restriction on Updating Global Indexes&nbsp;</span>If the global index is a global domain index defined on a LOB column, then Oracle Database marks the domain index <code dir="ltr">UNUSABLE</code> instead of updating it.</p>
<p><a id="SQLRF53509"></a><span class="subhead3">INVALIDATE GLOBAL INDEXES&nbsp;</span>Specify <code dir="ltr">INVALIDATE</code> <code dir="ltr">GLOBAL</code> <code dir="ltr">INDEXES</code> to invalidate the global indexes defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p>If you specify neither, then Oracle Database invalidates the global indexes.</p>
<p><a id="SQLRF53510"></a><span class="subhead3">Restrictions on Invalidating Global Indexes&nbsp;</span>This clause is supported only for global indexes. It is not supported for index-organized tables. In addition, this clause updates only indexes that are <code dir="ltr">USABLE</code> and <code dir="ltr">VALID</code>. <code dir="ltr">UNUSABLE</code> indexes are left unusable, and <code dir="ltr">INVALID</code> global indexes are ignored.</p>
<p class="subhead2"><a id="BABEJHCA"></a><a id="SQLRF53503"></a><span class="italic">update_all_indexes_clause</span></p>
<p>Use this clause to update all indexes on <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p><a id="SQLRF20015"></a><span class="subhead3"><span class="italic">update_index_partition</span>&nbsp;</span>This clause is valid only for operations on table partitions and affects only local indexes.</p>
<ul>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">index_partition_description</span></code> lets you specify physical attributes, tablespace storage, and logging for each partition of each local index. If you specify only the <code dir="ltr">PARTITION</code> keyword, then Oracle Database updates the index partition as follows:</p>
<ul>
<li>
<p>For operations on a single table partition (such as <code dir="ltr">MOVE</code> <code dir="ltr">PARTITION</code> and <code dir="ltr">SPLIT</code> <code dir="ltr">PARTITION</code>), the corresponding index partition inherits the attributes of the affected index table partition, Oracle Database does not generate names for new index partitions, so any new index partitions resulting from this operation inherit their names from the corresponding new table partition.</p>
</li>
<li>
<p>For <code dir="ltr">MERGE</code> <code dir="ltr">PARTITION</code> operations, the resulting local index partition inherits its name from the resulting table partition and inherits its attributes from the local index.</p>
</li>
</ul>
<p>For a domain index, you can use the <code dir="ltr">PARAMETERS</code> clause to specify the parameter string that is passed uninterpreted to the appropriate ODCI indextype routine. The <code dir="ltr">PARAMETERS</code> clause is valid only for domain indexes, and is the only part of the <code dir="ltr"><span class="codeinlineitalic">index_partition_description</span></code> you can specify for a domain index.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADDCI270" href="../ADDCI/ext_idx_frmwork.htm#ADDCI270"><span class="italic">Oracle Database Data Cartridge Developer&#39;s Guide</span></a> for more information on domain indexes</div>
</li>
<li>
<p>For a composite-partitioned index, the <code dir="ltr"><span class="codeinlineitalic">index_subpartition_clause</span></code> lets you specify tablespace storage for each subpartition. Refer to the <a href="statements_5013.htm#i2146961"><span class="xreftitleitalic"><span class="italic">index_subpartition_clause</span></span></a> (in <code dir="ltr">CREATE</code> <code dir="ltr">INDEX</code>) for more information on this component of the <code dir="ltr"><span class="codeinlineitalic">update_index_partition</span></code> clause.</p>
</li>
</ul>
<p>For information on the <code dir="ltr">USABLE</code> and <code dir="ltr">UNUSABLE</code> keywords, refer to <code dir="ltr">ALTER</code> <code dir="ltr">INDEX</code> ... <a href="statements_1012.htm#i2160588">USABLE | UNUSABLE</a>.</p>
<p><a id="SQLRF53504"></a><span class="subhead3"><span class="italic">update_index_subpartition</span>&nbsp;</span>This clause is valid only for operations on subpartitions of composite-partitioned tables and affects only local indexes on composite-partitioned tables. It lets you specify tablespace storage for one or more subpartitions.</p>
<p><a id="SQLRF53505"></a><span class="subhead3">Restrictions on Updating All Indexes&nbsp;</span>The following restrictions apply to the <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code>:</p>
<ul>
<li>
<p>You cannot specify this clause for index-organized tables.</p>
</li>
<li>
<p>When you exchange a partition or subpartition with the <code dir="ltr"><span class="codeinlineitalic">exchange_partition_subpart</span></code> clause, the <code dir="ltr"><span class="codeinlineitalic">update_all_indexes_clause</span></code> is applicable only to global indexes. Therefore, you cannot specify the <code dir="ltr"><span class="codeinlineitalic">update_index_partition</span></code> or <code dir="ltr"><span class="codeinlineitalic">update_index_subpartition</span></code> clauses. You can, however, specify local index maintenance during an exchange operation by using the <a href="#CIHHEBGI">INCLUDING | EXCLUDING INDEXES</a> clause.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2133051">&#34;Updating Global Indexes: Example&#34;</a> and <a href="#BABHDGAF">&#34;Updating Partitioned Indexes: Example&#34;</a></div>
<p class="subhead1"><a id="i2128444"></a><a id="SQLRF53511"></a><span class="italic">parallel_clause</span> <span class="italic"><a id="sthref4114"></a><a id="sthref4115"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> lets you change the default degree of parallelism for queries and DML on the table.</p>
<p>For complete information on this clause, refer to <a href="statements_7002.htm#i2159323"><span class="xreftitleitalic"><span class="italic">parallel_clause</span></span></a> in the documentation on <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>.</p>
<p><a id="SQLRF53512"></a><span class="subhead3">Restrictions on Changing Table Parallelization&nbsp;</span>Changing parallelization is subject to the following restrictions:</p>
<ul>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> contains any columns of LOB or user-defined object type, then subsequent <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> operations on <code dir="ltr"><span class="codeinlineitalic">table</span></code> are executed serially without notification. Subsequent queries, however, are executed in parallel.</p>
</li>
<li>
<p>If you specify the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code> in conjunction with the <code dir="ltr"><span class="codeinlineitalic">move_table_clause</span></code>, then the parallelism applies only to the move, not to subsequent DML and query operations on the table.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2057006">&#34;Specifying Parallel Processing: Example&#34;</a></div>
<p class="subhead1"><a id="CIHFCAFG"></a><a id="SQLRF56823"></a><span class="italic">allow_disallow_clustering</span></p>
<p>This clause is valid for tables that use attribute clustering. It lets you allow or disallow attribute clustering for data movement that occurs during the move table operation specified by the <code dir="ltr"><span class="codeinlineitalic">move_table_clause</span></code>, and the table partition and subpartition maintenance operations specified by the <code dir="ltr"><span class="codeinlineitalic">coalesce_table_[sub]partition</span></code>, <code dir="ltr"><span class="codeinlineitalic">merge_table_[sub]partitions</span></code>, <code dir="ltr"><span class="codeinlineitalic">move_table_[sub]partition</span></code>, and <code dir="ltr"><span class="codeinlineitalic">split_table_[sub]partition</span></code> clauses.</p>
<ul>
<li>
<p>Specify <code dir="ltr">ALLOW</code> <code dir="ltr">CLUSTERING</code> to allow attribute clustering for data movement. This clause overrides a <code dir="ltr">NO</code> <code dir="ltr">ON</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> setting in the DDL that created or altered the table.</p>
</li>
<li>
<p>Specify <code dir="ltr">DISALLOW</code> <code dir="ltr">CLUSTERING</code> to disallow attribute clustering for data movement. This clause overrides a <code dir="ltr">YES</code> <code dir="ltr">ON</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> setting in the DDL that created or altered the table.</p>
</li>
</ul>
<p>The <code dir="ltr"><span class="codeinlineitalic">allow_disallow_clustering</span></code> clause has no effect if you specify it for a table that does not use attribute clustering.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7002.htm#CEGJBIHI"><span class="xreftitleitalic"><span class="italic">clustering_when</span></span></a> clause of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> for more information on the <code dir="ltr">NO</code> <code dir="ltr">ON</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> and <code dir="ltr">YES</code> <code dir="ltr">ON</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> clauses</div>
<p class="subhead2"><a id="i2085301"></a><a id="SQLRF53513"></a><span class="italic">move_table_clause <a id="sthref4116"></a><a id="sthref4117"></a><a id="sthref4118"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">move_table_clause</span></code> lets you relocate data of a nonpartitioned table or of a partition of a partitioned table into a new segment, optionally in a different tablespace, and optionally modify any of its storage attributes.</p>
<p>You can also move any LOB data segments associated with the table or partition using the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code> and <code dir="ltr"><span class="codeinlineitalic">varray_col_properties</span></code> clause. LOB items not specified in this clause are not moved.</p>
<p>If you move the table to a different tablespace and the <code dir="ltr">COMPATIBLE</code> parameter is set to 10.0 or higher, then Oracle Database leaves the storage table of any nested table columns in the tablespace in which it was created. If <code dir="ltr">COMPATIBLE</code> is set to any value less than 10.0, then the database silently moves the storage table to the new tablespace along with the table.</p>
<p><a id="SQLRF53514"></a><span class="subhead3">ONLINE Clause<a id="sthref4119"></a><a id="sthref4120"></a><a id="sthref4121"></a>&nbsp;</span>This clause is valid only for top-level index-organized tables and for nested table storage tables that are index organized. Specify <code dir="ltr">ONLINE</code> if you want DML operations on the index-organized table to be allowed during rebuilding of the primary key index of the table.</p>
<p><a id="SQLRF53515"></a><span class="subhead3">Restrictions on Moving Tables Online&nbsp;</span>Moving tables online is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot combine this clause with any other clause in the same statement.</p>
</li>
<li>
<p>You cannot specify this clause for a partitioned index-organized table.</p>
</li>
<li>
<p>Parallel DML and direct path <code dir="ltr">INSERT</code> operations require an exclusive lock on the table. Therefore, these operations are not supported concurrently with an ongoing online table <code dir="ltr">MOVE</code>, due to conflicting locks.</p>
</li>
<li>
<p>You cannot specify this clause if the index-organized table contains any LOB, <code dir="ltr">VARRAY</code>, Oracle-supplied type, or user-defined object type columns.</p>
</li>
</ul>
<p class="subhead2"><a id="SQLRF53516"></a><span class="italic">index_org_table_clause</span> <a id="sthref4122"></a><a id="sthref4123"></a></p>
<p>For an index-organized table, the <code dir="ltr"><span class="codeinlineitalic">index_org_table_clause</span></code> of the <code dir="ltr"><span class="codeinlineitalic">move_table_clause</span></code> lets you additionally specify overflow segment attributes. The <code dir="ltr"><span class="codeinlineitalic">move_table_clause</span></code> rebuilds the primary key index of the index-organized table. The overflow data segment is not rebuilt unless the <code dir="ltr">OVERFLOW</code> keyword is explicitly stated, with two exceptions:</p>
<ul>
<li>
<p>If you alter the values of <code dir="ltr">PCTTHRESHOLD</code> or the <code dir="ltr">INCLUDING</code> column as part of this <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, then the overflow data segment is rebuilt.</p>
</li>
<li>
<p>If you explicitly move any of out-of-line columns (LOBs, varrays, nested table columns) in the index-organized table, then the overflow data segment is also rebuilt.</p>
</li>
</ul>
<p>The index and data segments of LOB columns are not rebuilt unless you specify the LOB columns explicitly as part of this <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
<p><a id="SQLRF53517"></a><span class="subhead3"><span class="italic">mapping_table_clause</span><a id="sthref4124"></a><a id="sthref4125"></a><a id="sthref4126"></a>&nbsp;</span>Specify <code dir="ltr">MAPPING</code> <code dir="ltr">TABLE</code> if you want Oracle Database to create a mapping table if one does not already exist. If it does exist, then the database moves the mapping table along with the index-organized table, and marks any bitmapped indexes <code dir="ltr">UNUSABLE</code>. The new mapping table is created in the same tablespace as the parent table.</p>
<p>Specify <code dir="ltr">NOMAPPING</code> to instruct the database to drop an existing mapping table.</p>
<p>Refer to <a href="statements_7002.htm#i2128795"><span class="xreftitleitalic"><span class="italic">mapping_table_clauses</span></span></a> (in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>) for more information on this clause.</p>
<p><a id="SQLRF53518"></a><span class="subhead3">Restriction on Mapping Tables&nbsp;</span>You cannot specify <code dir="ltr">NOMAPPING</code> if any bitmapped indexes have been defined on <code dir="ltr"><span class="codeinlineitalic">table</span></code>.</p>
<p><a id="SQLRF53519"></a><span class="subhead3"><span class="italic">prefix_compression</span>&nbsp;</span>Use the <code dir="ltr"><span class="codeinlineitalic">prefix_compression</span></code> clause to enable or disable prefix compression in an index-organized table.</p>
<ul>
<li>
<p><code dir="ltr">COMPRESS</code> enables prefix compression, which eliminates repeated occurrence 1of primary key column values in index-organized tables. Use <code dir="ltr"><span class="codeinlineitalic">integer</span></code> to specify the prefix length (number of prefix columns to compress).</p>
<p>The valid range of prefix length values is from 1 to the number of primary key columns minus 1. The default prefix length is the number of primary key columns minus 1.</p>
</li>
<li>
<p><code dir="ltr">NOCOMPRESS</code> disables prefix compression in index-organized tables. This is the default.</p>
</li>
</ul>
<p><a id="SQLRF53520"></a><span class="subhead3">TABLESPACE <span class="italic">tablespace</span><a id="sthref4127"></a>&nbsp;</span>Specify the tablespace into which the rebuilt index-organized table is to be stored.</p>
<p><a id="SQLRF53521"></a><span class="subhead3"><span class="italic">LOB_storage_clause</span>&nbsp;</span>Use this clause to move a LOB segment to a different tablespace. You cannot use this clause to move a LOB segment if the table contains a <code dir="ltr">LONG</code> column. Instead, you must either convert the <code dir="ltr">LONG</code> column to a LOB, or you must export the table, re-create the table specifying the desired tablespace storage for the LOB column, and re-import the table data.</p>
<p><a id="SQLRF53522"></a><span class="subhead3">Restrictions on Moving Tables&nbsp;</span>Moving tables is subject to the following restrictions:</p>
<ul>
<li>
<p>If you specify <code dir="ltr">MOVE</code>, then it must be the first clause in the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, and the only clauses outside this clause that are allowed are the <code dir="ltr"><span class="codeinlineitalic">physical_attributes_clause</span></code>, the <code dir="ltr"><span class="codeinlineitalic">parallel_clause</span></code>, and the <code dir="ltr"><span class="codeinlineitalic">LOB_storage_clause</span></code>.</p>
</li>
<li>
<p>You cannot move a table containing a <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> column.</p>
</li>
<li>
<p>You cannot <code dir="ltr">MOVE</code> an entire partitioned table (either heap or index organized). You must move individual partitions or subpartitions.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Notes Regarding LOBs:</p>
For any LOB columns you specify in a <code dir="ltr"><span class="codeinlineitalic">move_table_clause</span></code>:
<ul>
<li>
<p>Oracle Database drops the old LOB data segment and corresponding index segment and creates new segments, even if you do not specify a new tablespace.</p>
</li>
<li>
<p>If the LOB index in <code dir="ltr"><span class="codeinlineitalic">table</span></code> resided in a different tablespace from the LOB data, then Oracle Database collocates the LOB index in the same tablespace with the LOB data after the move.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABDIDEJ"><span class="xreftitleitalic"><span class="italic">move_table_partition</span></span></a> and <a href="#BABEGIFH"><span class="xreftitleitalic"><span class="italic">move_table_subpartition</span></span></a></div>
<p class="subhead2"><a id="CJADIFFB"></a><a id="SQLRF55998"></a><span class="italic">modify_opaque_type</span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">modify_opaque_type</span></code> clause to instruct the database to store the specified abstract data type or <code dir="ltr">XMLType</code> in an <code dir="ltr">ANYDATA</code> column using unpacked storage.</p>
<p>You can specify any abstract data type with this clause. However, it is primarily useful because it allows you to specify the following data types, which cannot be stored in an <code dir="ltr">ANYDATA</code> column using conventional storage:</p>
<ul>
<li>
<p><code dir="ltr">XMLType</code></p>
</li>
<li>
<p>Abstract data types that contain one or more attributes of type <code dir="ltr">XMLType</code>, <code dir="ltr">CLOB</code>, <code dir="ltr">BLOB</code>, or <code dir="ltr">NCLOB</code>.</p>
</li>
</ul>
<p>When you use <span class="bold">unpacked</span> <span class="bold">storage</span>, data types are stored in system-generated hidden columns that are associated with the <code dir="ltr">ANYDATA</code> column. You can insert and query these data types as you would data types that are stored in an <code dir="ltr">ANYDATA</code> column using conventional storage.</p>
<p><a id="SQLRF56038"></a><span class="subhead3"><span class="italic">anydata_column</span>&nbsp;</span>Specify the name of a column of type <code dir="ltr">ANYDATA</code>. If <code dir="ltr"><span class="codeinlineitalic">type_name</span></code> is an abstract data type that does not contain an attribute of type <code dir="ltr">XMLType</code>, <code dir="ltr">CLOB</code>, <code dir="ltr">BLOB</code>, or <code dir="ltr">NCLOB</code>, then <code dir="ltr"><span class="codeinlineitalic">anydata_column</span></code> must be empty.</p>
<p><a id="SQLRF56039"></a><span class="subhead3"><span class="italic">type_name</span>&nbsp;</span>Specify the name of one or more abstract data types or <code dir="ltr">XMLType</code>. The abstract data type can contain an attribute of type <code dir="ltr">XMLType</code>, <code dir="ltr">CLOB</code>, <code dir="ltr">BLOB</code>, or <code dir="ltr">NCLOB</code>. The type can be <code dir="ltr">EDITIONABLE</code>. When you subsequently insert these data types into <code dir="ltr"><span class="codeinlineitalic">anydata_column</span></code>, they will use unpacked storage. If you previously specified this clause for the same <code dir="ltr"><span class="codeinlineitalic">anydata_column</span></code>, then unpacked storage will continue to be used for the previously specified data types as well as the newly specified data types.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS077" href="../ARPLS/t_anydat.htm#ARPLS077"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information on the <code dir="ltr">ANYDATA</code> type and <a href="#CJAJECAB">&#34;Unpacked Storage in ANYDATA Columns: Example&#34;</a></div>
<p class="subhead2"><a id="i2056917"></a><a id="SQLRF53523"></a><span class="italic">enable_disable_clause</span> <a id="sthref4128"></a><a id="sthref4129"></a></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">enable_disable_clause</span></code> lets you specify whether and how Oracle Database should apply an integrity constraint. The <code dir="ltr">DROP</code> and <code dir="ltr">KEEP</code> clauses are valid only when you are disabling a unique or primary key constraint.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The <a href="statements_7002.htm#i2062565"><span class="xreftitleitalic"><span class="italic">enable_disable_clause</span></span></a> (in <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>) for a complete description of this clause, including notes and restrictions that relate to this statement</p>
</li>
<li>
<p><a href="clauses002.htm#i1002914">&#34;Using Indexes to Enforce Constraints&#34;</a> for information on using indexes to enforce constraints</p>
</li>
</ul>
</div>
<p><a id="SQLRF53524"></a><span class="subhead3">TABLE LOCK&nbsp;</span>Oracle Database permits DDL operations on a table only if the table can be locked during the operation. Such table locks are not required during DML operations.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Table locks are not acquired on temporary tables.</div>
<ul>
<li>
<p><a id="sthref4130"></a><a id="sthref4131"></a>Specify <code dir="ltr">ENABLE</code> <code dir="ltr">TABLE</code> <code dir="ltr">LOCK</code> to enable table locks, thereby allowing DDL operations on the table. All currently executing transactions must commit or roll back before Oracle Database enables the table lock.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Oracle Database waits until active DML transactions in the database have completed before locking the table. Sometimes the resulting delay is considerable.</div>
</li>
<li>
<p><a id="sthref4132"></a><a id="sthref4133"></a>Specify <code dir="ltr">DISABLE</code> <code dir="ltr">TABLE</code> <code dir="ltr">LOCK</code> to disable table locks, thereby preventing DDL operations on the table.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Parallel DML operations are not performed when the table lock of the target table is disabled.</div>
</li>
</ul>
<p><a id="SQLRF30016"></a><span class="subhead3">ALL TRIGGERS&nbsp;</span>Use the <code dir="ltr">ALL</code> <code dir="ltr">TRIGGERS</code> clause to enable or disable all triggers associated with the table.</p>
<ul>
<li>
<p><a id="sthref4134"></a><a id="sthref4135"></a>Specify <code dir="ltr">ENABLE</code> <code dir="ltr">ALL</code> <code dir="ltr">TRIGGERS</code> to enable all triggers associated with the table. Oracle Database fires the triggers whenever their triggering condition is satisfied.</p>
<p>To enable a single trigger, use the <code dir="ltr"><span class="codeinlineitalic">enable_clause</span></code> of <code dir="ltr">ALTER</code> <code dir="ltr">TRIGGER</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_7004.htm#i2235611">CREATE TRIGGER</a>, <a href="statements_4001.htm#BABFDCBJ">ALTER TRIGGER</a>, and <a href="#i2057050">&#34;Enabling Triggers: Example&#34;</a></div>
</li>
<li>
<p><a id="sthref4136"></a><a id="sthref4137"></a>Specify <code dir="ltr">DISABLE</code> <code dir="ltr">ALL</code> <code dir="ltr">TRIGGERS</code> to disable all triggers associated with the table. Oracle Database does not fire a disabled trigger even if the triggering condition is satisfied.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2109868"></a>Examples</p>
<p><a id="i2109870"></a><a id="SQLRF53525"></a><span class="subhead3">Collection Retrieval: Example&nbsp;</span>The following statement modifies nested table column <code dir="ltr">ad_textdocs_ntab</code> in the sample table <code dir="ltr">sh.print_media</code> so that when queried it returns actual values instead of locators:</p>
<pre dir="ltr">ALTER TABLE print_media MODIFY NESTED TABLE ad_textdocs_ntab
   RETURN AS VALUE; 
</pre>
<p><a id="i2057006"></a><a id="SQLRF53526"></a><span class="subhead3">Specifying Parallel Processing: Example&nbsp;</span>The following statement specifies parallel processing for queries to the sample table <code dir="ltr">oe.customers</code>:</p>
<pre dir="ltr">ALTER TABLE customers
   PARALLEL;
</pre>
<p><a id="i2057011"></a><a id="SQLRF53527"></a><span class="subhead3">Changing the State of a Constraint: Examples&nbsp;</span>The following statement places in <code dir="ltr">ENABLE</code> <code dir="ltr">VALIDATE</code> state an integrity constraint named <code dir="ltr">emp_manager_fk</code> in the <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">ALTER TABLE employees
   ENABLE VALIDATE CONSTRAINT emp_manager_fk
   EXCEPTIONS INTO exceptions;
</pre>
<p>Each row of the <code dir="ltr">employees</code> table must satisfy the constraint for Oracle Database to enable the constraint. If any row violates the constraint, then the constraint remains disabled. The database lists any exceptions in the table <code dir="ltr">exceptions</code>. You can also identify the exceptions in the <code dir="ltr">employees</code> table with the following statement:</p>
<pre dir="ltr">SELECT e.*
   FROM employees e, exceptions ex
   WHERE e.rowid = ex.row_id
      AND ex.table_name = &#39;EMPLOYEES&#39;
      AND ex.constraint = &#39;EMP_MANAGER_FK&#39;;
</pre>
<p>The following statement tries to place in <code dir="ltr">ENABLE</code> <code dir="ltr">NOVALIDATE</code> state two constraints on the <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">ALTER TABLE employees
   ENABLE NOVALIDATE PRIMARY KEY
   ENABLE NOVALIDATE CONSTRAINT emp_last_name_nn;
</pre>
<p>This statement has two <code dir="ltr">ENABLE</code> clauses:</p>
<ul>
<li>
<p>The first places a primary key constraint on the table in <code dir="ltr">ENABLE</code> <code dir="ltr">NOVALIDATE</code> state.</p>
</li>
<li>
<p>The second places the constraint named <code dir="ltr">emp_last_name_nn</code> in <code dir="ltr">ENABLE</code> <code dir="ltr">NOVALIDATE</code> state.</p>
</li>
</ul>
<p>In this case, Oracle Database enables the constraints only if both are satisfied by each row in the table. If any row violates either constraint, then the database returns an error and both constraints remain disabled.</p>
<p>Consider the foreign key constraint on the <code dir="ltr">location_id</code> column of the <code dir="ltr">departments</code> table, which references the primary key of the <code dir="ltr">locations</code> table. The following statement disables the primary key of the <code dir="ltr">locations</code> table:</p>
<pre dir="ltr">ALTER TABLE locations
   MODIFY PRIMARY KEY DISABLE CASCADE;
</pre>
<p>The unique key in the <code dir="ltr">locations</code> table is referenced by the foreign key in the <code dir="ltr">departments</code> table, so you must specify <code dir="ltr">CASCADE</code> to disable the primary key. This clause disables the foreign key as well.</p>
<p><a id="i2088194"></a><a id="SQLRF53528"></a><span class="subhead3">Creating an Exceptions Table for Index-Organized Tables: Example&nbsp;</span>The following example creates the <code dir="ltr">except_table</code> table to hold rows from the index-organized table <code dir="ltr">hr.countries</code> that violate the primary key constraint:</p>
<pre dir="ltr">EXECUTE DBMS_IOT.BUILD_EXCEPTIONS_TABLE (&#39;hr&#39;, &#39;countries&#39;, &#39;except_table&#39;);
</pre>
<pre dir="ltr">ALTER TABLE countries
   ENABLE PRIMARY KEY
   EXCEPTIONS INTO except_table;
</pre>
<p>To specify an exception table, you must have the privileges necessary to insert rows into the table. To examine the identified exceptions, you must have the privileges necessary to query the exceptions table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_9015.htm#i2163698">INSERT</a> and <a href="statements_10002.htm#i2065646">SELECT</a> for information on the privileges necessary to insert rows into tables</div>
<p><a id="i2100100"></a><a id="SQLRF53529"></a><span class="subhead3">Disabling a CHECK Constraint: Example&nbsp;</span>The following statement defines and disables a <code dir="ltr">CHECK</code> constraint on the <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">ALTER TABLE employees ADD CONSTRAINT check_comp 
   CHECK (salary + (commission_pct*salary) &lt;= 5000)
   DISABLE;
</pre>
<p>The constraint <code dir="ltr">check_comp</code> ensures that no employee&#39;s total compensation exceeds $5000. The constraint is disabled, so you can increase an employee&#39;s compensation above this limit.</p>
<p><a id="i2057050"></a><a id="SQLRF53530"></a><span class="subhead3">Enabling Triggers: Example&nbsp;</span>The following statement enables all triggers associated with the <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">ALTER TABLE employees
   ENABLE ALL TRIGGERS;
</pre>
<p><a id="i2057055"></a><a id="SQLRF53531"></a><span class="subhead3">Deallocating Unused Space: Example&nbsp;</span>The following statement frees all unused space for reuse in table <code dir="ltr">employees</code>, where the high water mark is above <code dir="ltr">MINEXTENTS</code>:</p>
<pre dir="ltr">ALTER TABLE employees
    DEALLOCATE UNUSED;
</pre>
<p><a id="i2132812"></a><a id="SQLRF53532"></a><span class="subhead3">Renaming a Column: Example&nbsp;</span>The following example renames the <code dir="ltr">credit_limit</code> column of the sample table <code dir="ltr">oe.customers</code> to <code dir="ltr">credit_amount</code>:</p>
<pre dir="ltr">ALTER TABLE customers
   RENAME COLUMN credit_limit TO credit_amount;
</pre>
<p><a id="i2057060"></a><a id="SQLRF53533"></a><span class="subhead3">Dropping a Column: Example&nbsp;</span>This statement illustrates the <code dir="ltr"><span class="codeinlineitalic">drop_column_clause</span></code> with <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code>. Assume table <code dir="ltr">t1</code> is created as follows:</p>
<pre dir="ltr">CREATE TABLE t1 (
   pk NUMBER PRIMARY KEY,
   fk NUMBER,
   c1 NUMBER,
   c2 NUMBER,
   CONSTRAINT ri FOREIGN KEY (fk) REFERENCES t1,
   CONSTRAINT ck1 CHECK (pk &gt; 0 and c1 &gt; 0),
   CONSTRAINT ck2 CHECK (c2 &gt; 0)
);
</pre>
<p>An error will be returned for the following statements:</p>
<pre dir="ltr">/* The next two statements return errors:
ALTER TABLE t1 DROP (pk);  -- pk is a parent key
ALTER TABLE t1 DROP (c1);  -- c1 is referenced by multicolumn
                           -- constraint ck1
</pre>
<p>Submitting the following statement drops column <code dir="ltr">pk</code>, the primary key constraint, the foreign key constraint, <code dir="ltr">ri</code>, and the check constraint, <code dir="ltr">ck1</code>:</p>
<pre dir="ltr">ALTER TABLE t1 DROP (pk) CASCADE CONSTRAINTS;
</pre>
<p>If all columns referenced by the constraints defined on the dropped columns are also dropped, then <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code> is not required. For example, assuming that no other referential constraints from other tables refer to column <code dir="ltr">pk</code>, then it is valid to submit the following statement without the <code dir="ltr">CASCADE</code> <code dir="ltr">CONSTRAINTS</code> clause:</p>
<pre dir="ltr">ALTER TABLE t1 DROP (pk, fk, c1);
</pre>
<p><a id="i2057083"></a><a id="SQLRF53534"></a><span class="subhead3">Modifying Index-Organized Tables: Examples&nbsp;</span>This statement modifies the <code dir="ltr">INITRANS</code> parameter for the index segment of index-organized table <code dir="ltr">countries_demo</code>, which is based on <code dir="ltr">hr.countries</code>:</p>
<pre dir="ltr">ALTER TABLE countries_demo INITRANS 4;
</pre>
<p>The following statement adds an overflow data segment to index-organized table <code dir="ltr">countries</code>:</p>
<pre dir="ltr">ALTER TABLE countries_demo ADD OVERFLOW;
</pre>
<p>This statement modifies the <code dir="ltr">INITRANS</code> parameter for the overflow data segment of index-organized table <code dir="ltr">countries</code>:</p>
<pre dir="ltr">ALTER TABLE countries_demo OVERFLOW INITRANS 4;
</pre>
<p><a id="i2110367"></a><a id="SQLRF53535"></a><span class="subhead3">Splitting Table Partitions: Examples&nbsp;</span>The following statement splits the old partition <code dir="ltr">sales_q4_2000</code> in the sample table <code dir="ltr">sh.sales</code>, creating two new partitions, naming one <code dir="ltr">sales_q4_2000b</code> and reusing the name of the old partition for the other:</p>
<pre dir="ltr">ALTER TABLE sales SPLIT PARTITION SALES_Q4_2000 
   AT (TO_DATE(&#39;15-NOV-2000&#39;,&#39;DD-MON-YYYY&#39;))
   INTO (PARTITION SALES_Q4_2000, PARTITION SALES_Q4_2000b);
</pre>
<p>The following statement splits the old partition <code dir="ltr">sales_q1_2002</code> into three new partitions <code dir="ltr">sales_jan_2002</code>, <code dir="ltr">sales_feb_2002</code>, and <code dir="ltr">sales_mar_2002</code>:</p>
<pre dir="ltr">ALTER TABLE sales SPLIT PARTITION SALES_Q1_2002 INTO (
 PARTITION SALES_JAN_2002 VALUES LESS THAN (TO_DATE(&#39;01-FEB-2002&#39;,&#39;DD-MON-YYYY&#39;)),
 PARTITION SALES_FEB_2002 VALUES LESS THAN (TO_DATE(&#39;01-MAR-2002&#39;,&#39;DD-MON-YYYY&#39;)),
 PARTITION SALES_MAR_2002);
</pre>
<p>The following statements create a partitioned version of the pm.print_media table. The <code dir="ltr">LONG</code> column in the print_media table has been converted to LOB. The table is stored in tablespaces created in <a href="statements_7003.htm#i2082522">&#34;Creating Oracle Managed Files: Examples&#34;</a>. The object types underlying the <code dir="ltr">ad_textdocs_ntab</code> and <code dir="ltr">ad_header</code> columns are created in the script that creates the <code dir="ltr">pm</code> sample schema:</p>
<pre dir="ltr">CREATE TABLE print_media_part (
    product_id NUMBER(6),
    ad_id              NUMBER(6),
    ad_composite       BLOB,
    ad_sourcetext      CLOB,
    ad_finaltext       CLOB,
    ad_fltextn         NCLOB,
    ad_textdocs_ntab   TEXTDOC_TAB,
    ad_photo           BLOB,
    ad_graphic         BFILE,
    ad_header          ADHEADER_TYP)
  NESTED TABLE ad_textdocs_ntab STORE AS textdoc_nt
  PARTITION BY RANGE (product_id)
    (PARTITION p1 VALUES LESS THAN (100),
     PARTITION p2 VALUES LESS THAN (200));
</pre>
<p>The following statement splits partition <code dir="ltr">p2</code> of that table into partitions <code dir="ltr">p2a</code> and <code dir="ltr">p2b</code>:</p>
<pre dir="ltr">ALTER TABLE print_media_part
   SPLIT PARTITION p2 AT (150) INTO
   (PARTITION p2a TABLESPACE omf_ts1
      LOB (ad_photo, ad_composite) STORE AS (TABLESPACE omf_ts2),
   PARTITION p2b 
      LOB (ad_photo, ad_composite) STORE AS (TABLESPACE omf_ts2))
   NESTED TABLE ad_textdocs_ntab INTO (PARTITION nt_p2a, PARTITION nt_p2b);
</pre>
<p>In both partitions <code dir="ltr">p2a</code> and <code dir="ltr">p2b</code>, Oracle Database creates the LOB segments for columns <code dir="ltr">ad_photo</code> and <code dir="ltr">ad_composite</code> in tablespace <code dir="ltr">omf_ts2</code>. The LOB segments for the remaining columns in partition p2a are stored in tablespace omf_ts1. The LOB segments for the remaining columns in partition p2b remain in the tablespaces in which they resided prior to this <code dir="ltr">ALTER</code> statement. However, the database creates new segments for all the LOB data and LOB index segments, even if they are not moved to a new tablespace.</p>
<p>The database also creates new segments for nested table column <code dir="ltr">ad_textdocs_ntab</code>. The storage tables is those new segments are <code dir="ltr">nt_p2a</code> and <code dir="ltr">nt_p2b</code>.</p>
<p><a id="i2132937"></a><a id="SQLRF53536"></a><span class="subhead3">Merging Two Table Partitions: Example&nbsp;</span>The following statement merges back into one partition the partitions created in <a href="#i2110367">&#34;Splitting Table Partitions: Examples&#34;</a>:</p>
<pre dir="ltr">ALTER TABLE sales 
   MERGE PARTITIONS sales_q4_2000, sales_q4_2000b
   INTO PARTITION sales_q4_2000;
</pre>
<p>The next statement reverses the example in <a href="#i2110367">&#34;Splitting Table Partitions: Examples&#34;</a>:</p>
<pre dir="ltr">ALTER TABLE print_media_part 
   MERGE PARTITIONS p2a, p2b INTO PARTITION p2ab TABLESPACE example
   NESTED TABLE ad_textdocs_ntab STORE AS nt_p2ab;
</pre>
<p><a id="CJABJICB"></a><a id="SQLRF56330"></a><span class="subhead3">Merging Four Adjacent Range Partitions: Example&nbsp;</span></p>
<p>The following statement merges four adjacent range partitions, <code dir="ltr">sales_q1_2000</code>, <code dir="ltr">sales_q2_2000</code>, <code dir="ltr">sales_q3_2000</code>, and <code dir="ltr">sales_q4_2000</code> into one partition <code dir="ltr">sales_all_2000</code>:</p>
<pre dir="ltr">ALTER TABLE sales
  MERGE PARTITIONS sales_q1_2000 TO sales_q4_2000
  INTO PARTITION sales_all_2000;
</pre>
<p><a id="i2104459"></a><a id="SQLRF53537"></a><span class="subhead3">Adding a Table Partition with a LOB and Nested Table Storage: Examples&nbsp;</span>The following statement adds a partition <code dir="ltr">p3</code> to the <code dir="ltr">print_media_part</code> table (see preceding example) and specifies storage characteristics for the <code dir="ltr">BLOB</code>, <code dir="ltr">CLOB</code>, and nested table columns of that table:</p>
<pre dir="ltr">ALTER TABLE print_media_part ADD PARTITION p3 VALUES LESS THAN (400)
  LOB(ad_photo, ad_composite) STORE AS (TABLESPACE omf_ts1)
  LOB(ad_sourcetext, ad_finaltext) STORE AS (TABLESPACE omf_ts2)
  NESTED TABLE ad_textdocs_ntab STORE AS nt_p3;
</pre>
<p>The LOB data and LOB index segments for columns <code dir="ltr">ad_photo</code> and <code dir="ltr">ad_composite</code> in partition <code dir="ltr">p3</code> will reside in tablespace <code dir="ltr">omf_ts1</code>. The remaining attributes for these LOB columns will be inherited first from the table-level defaults, and then from the tablespace defaults.</p>
<p>The LOB data segments for columns <code dir="ltr">ad_source_text</code> and <code dir="ltr">ad_finaltext</code> will reside in the <code dir="ltr">omf_ts2</code> tablespace, and will inherit all other attributes first from the table-level defaults, and then from the tablespace defaults.</p>
<p>The partition for the storage table for nested table storage column <code dir="ltr">ad_textdocs_ntab</code> corresponding to partition <code dir="ltr">p3</code> of the base table is named <code dir="ltr">nt_p3</code> and inherits all other attributes first from the table-level defaults, and then from the tablespace defaults.</p>
<p><a id="CJAGEDIA"></a><a id="SQLRF56331"></a><span class="subhead3">Adding Multiple Partitions to a Table: Example&nbsp;</span>The following statement adds three partitions to the table <code dir="ltr">print_media_part</code> created in <a href="#i2110367">&#34;Splitting Table Partitions: Examples&#34;</a>:</p>
<pre dir="ltr">ALTER TABLE print_media_part ADD
  PARTITION p3 values less than (300),
  PARTITION p4 values less than (400),
  PARTITION p5 values less than (500);
</pre>
<p><a id="i2107352"></a><a id="SQLRF53538"></a><span class="subhead3">Working with Default List Partitions: Example&nbsp;</span>The following statements use the list partitioned table created in <a href="statements_7002.htm#i2115317">&#34;List Partitioning Example&#34;</a>. The first statement splits the existing default partition into a new <code dir="ltr">south</code> partition and a default partition:</p>
<pre dir="ltr">ALTER TABLE list_customers SPLIT PARTITION rest 
   VALUES (&#39;MEXICO&#39;, &#39;COLOMBIA&#39;)
   INTO (PARTITION south, PARTITION rest);
</pre>
<p>The next statement merges the resulting default partition with the <code dir="ltr">asia</code> partition:</p>
<pre dir="ltr">ALTER TABLE list_customers 
   MERGE PARTITIONS asia, rest INTO PARTITION rest;
</pre>
<p>The next statement re-creates the <code dir="ltr">asia</code> partition by splitting the default partition:</p>
<pre dir="ltr">ALTER TABLE list_customers SPLIT PARTITION rest 
   VALUES (&#39;CHINA&#39;, &#39;THAILAND&#39;)
   INTO (PARTITION asia, PARTITION rest);
</pre>
<p><a id="i2132955"></a><a id="SQLRF53539"></a><span class="subhead3">Dropping a Table Partition: Example&nbsp;</span>The following statement drops partition <code dir="ltr">p3</code> created in <a href="#i2104459">&#34;Adding a Table Partition with a LOB and Nested Table Storage: Examples&#34;</a>:</p>
<pre dir="ltr">ALTER TABLE print_media_part DROP PARTITION p3;
</pre>
<p><a id="i2132971"></a><a id="SQLRF53540"></a><span class="subhead3">Exchanging Table Partitions: Example&nbsp;</span>This example creates the table <code dir="ltr">exchange_table</code> with the same structure as the partitions of the <code dir="ltr">list_customers</code> table created in <a href="statements_7002.htm#i2115317">&#34;List Partitioning Example&#34;</a>. It then replaces partition <code dir="ltr">rest</code> of table <code dir="ltr">list_customers</code> with table <code dir="ltr">exchange_table</code> without exchanging local index partitions with corresponding indexes on <code dir="ltr">exchange_table</code> and without verifying that data in <code dir="ltr">exchange_table</code> falls within the bounds of partition <code dir="ltr">rest</code>:</p>
<pre dir="ltr">CREATE TABLE exchange_table (
   customer_id     NUMBER(6),
   cust_first_name VARCHAR2(20),
   cust_last_name  VARCHAR2(20),
   cust_address    CUST_ADDRESS_TYP,
   nls_territory   VARCHAR2(30),
   cust_email      VARCHAR2(40));

ALTER TABLE list_customers 
   EXCHANGE PARTITION rest WITH TABLE exchange_table 
   WITHOUT VALIDATION;
</pre>
<p><a id="i2132987"></a><a id="SQLRF53541"></a><span class="subhead3">Modifying Table Partitions: Examples&nbsp;</span>The following statement marks all the local index partitions corresponding to the <code dir="ltr">asia</code> partition of the <code dir="ltr">list_customers</code> table <code dir="ltr">UNUSABLE</code>:</p>
<pre dir="ltr">ALTER TABLE list_customers MODIFY PARTITION asia 
   UNUSABLE LOCAL INDEXES;
</pre>
<p>The following statement rebuilds all the local index partitions that were marked <code dir="ltr">UNUSABLE</code>:</p>
<pre dir="ltr">ALTER TABLE list_customers MODIFY PARTITION asia
   REBUILD UNUSABLE LOCAL INDEXES;
</pre>
<p><a id="i2132999"></a><a id="SQLRF53542"></a><span class="subhead3">Moving Table Partitions: Example&nbsp;</span>The following statement moves partition <code dir="ltr">p2b</code> (from <a href="#i2110367">&#34;Splitting Table Partitions: Examples&#34;</a>) to tablespace <code dir="ltr">omf_ts1</code>:</p>
<pre dir="ltr">ALTER TABLE print_media_part 
   MOVE PARTITION p2b TABLESPACE omf_ts1;
</pre>
<p><a id="i2133016"></a><a id="SQLRF53543"></a><span class="subhead3">Renaming Table Partitions: Examples&nbsp;</span>The following statement renames a partition of the <code dir="ltr">sh.sales</code> table:</p>
<pre dir="ltr">ALTER TABLE sales RENAME PARTITION sales_q4_2003 TO sales_currentq;
</pre>
<p><a id="i2133032"></a><a id="SQLRF53544"></a><span class="subhead3">Truncating Table Partitions: Example&nbsp;</span>The following statement uses the <code dir="ltr">print_media_demo</code> table created in <a href="statements_7002.htm#BABDDEAB">&#34;Partitioned Table with LOB Columns Example&#34;</a>. It deletes all the data in the <code dir="ltr">p1</code> partition and deallocates the freed space:</p>
<pre dir="ltr">ALTER TABLE print_media_demo
   TRUNCATE PARTITION p1 DROP STORAGE;
</pre>
<p><a id="i2133051"></a><a id="SQLRF53545"></a><span class="subhead3">Updating Global Indexes: Example&nbsp;</span>The following statement splits partition <code dir="ltr">sales_q1_2000</code> of the sample table <code dir="ltr">sh.sales</code> and updates any global indexes defined on it:</p>
<pre dir="ltr">ALTER TABLE sales SPLIT PARTITION sales_q1_2000
   AT (TO_DATE(&#39;16-FEB-2000&#39;,&#39;DD-MON-YYYY&#39;))
   INTO (PARTITION q1a_2000, PARTITION q1b_2000)
   UPDATE GLOBAL INDEXES;
</pre>
<p><a id="BABHDGAF"></a><a id="SQLRF53546"></a><span class="subhead3">Updating Partitioned Indexes: Example&nbsp;</span>The following statement splits partition <code dir="ltr">costs_Q4_2003</code> of the sample table <code dir="ltr">sh.costs</code> and updates the local index defined on it. It uses the tablespaces created in <a href="statements_7003.htm#i2153401">&#34;Creating Basic Tablespaces: Examples&#34;</a>.</p>
<pre dir="ltr">CREATE INDEX cost_ix ON costs(channel_id) LOCAL;

ALTER TABLE costs
  SPLIT PARTITION costs_q4_2003 at
    (TO_DATE(&#39;01-Nov-2003&#39;,&#39;dd-mon-yyyy&#39;)) 
    INTO (PARTITION c_p1, PARTITION c_p2) 
  UPDATE INDEXES (cost_ix (PARTITION c_p1 tablespace tbs_02, 
                           PARTITION c_p2 tablespace tbs_03));
</pre>
<p><a id="i2133079"></a><a id="SQLRF53547"></a><span class="subhead3">Specifying Object Identifiers: Example&nbsp;</span>The following statements create an object type, a corresponding object table with a primary-key-based object identifier, and a table having a user-defined <code dir="ltr">REF</code> column:</p>
<pre dir="ltr">CREATE TYPE emp_t AS OBJECT (empno NUMBER, address CHAR(30));

CREATE TABLE emp OF emp_t (
   empno PRIMARY KEY)
   OBJECT IDENTIFIER IS PRIMARY KEY;

CREATE TABLE dept (dno NUMBER, mgr_ref REF emp_t SCOPE is emp);
</pre>
<p>The next statements add a constraint and a user-defined <code dir="ltr">REF</code> column, both of which reference table <code dir="ltr">emp</code></p>
<pre dir="ltr">ALTER TABLE dept ADD CONSTRAINT mgr_cons FOREIGN KEY (mgr_ref)
   REFERENCES emp;
ALTER TABLE dept ADD sr_mgr REF emp_t REFERENCES emp;
</pre>
<p><a id="i2133105"></a><a id="SQLRF53548"></a><span class="subhead3">Adding a Table Column: Example&nbsp;</span>The following statement adds to the <code dir="ltr">countries</code> table a column named <code dir="ltr">duty_pct</code> of data type <code dir="ltr">NUMBER</code> and a column named <code dir="ltr">visa_needed</code> of data type <code dir="ltr">VARCHAR2</code> with a size of 3 and a <code dir="ltr">CHECK</code> integrity constraint:</p>
<pre dir="ltr">ALTER TABLE countries 
   ADD (duty_pct     NUMBER(2,2)  CHECK (duty_pct &lt; 10.5),
        visa_needed  VARCHAR2(3)); 
</pre>
<p><a id="BABIDDJJ"></a><a id="SQLRF53549"></a><span class="subhead3">Adding a Virtual Table Column: Example&nbsp;</span>The following statement adds to a copy of the <code dir="ltr">hr.employees</code> table a column named <code dir="ltr">income</code>, which is a combination of salary plus commission. Both salary and commission are <code dir="ltr">NUMBER</code> columns, so the database creates the virtual column as a <code dir="ltr">NUMBER</code> column even though the data type is not specified in the statement:</p>
<pre dir="ltr">CREATE TABLE emp2 AS SELECT * FROM employees;

ALTER TABLE emp2 ADD (income AS (salary + (salary*commission_pct)));
</pre>
<p><a id="i2133121"></a><a id="SQLRF53550"></a><span class="subhead3">Modifying Table Columns: Examples&nbsp;</span>The following statement increases the size of the <code dir="ltr">duty_pct</code> column:</p>
<pre dir="ltr">ALTER TABLE countries
   MODIFY (duty_pct NUMBER(3,2)); 
</pre>
<p>Because the <code dir="ltr">MODIFY</code> clause contains only one column definition, the parentheses around the definition are optional.</p>
<p>The following statement changes the values of the <code dir="ltr">PCTFREE</code> and <code dir="ltr">PCTUSED</code> parameters for the <code dir="ltr">employees</code> table to 30 and 60, respectively:</p>
<pre dir="ltr">ALTER TABLE employees 
   PCTFREE 30
   PCTUSED 60; 
</pre>
<p><a id="CIHEJDDI"></a><a id="SQLRF53551"></a><span class="subhead3">Data Encryption: Examples&nbsp;</span>The following statement encrypts the salary column of the <code dir="ltr">hr.employees</code> table using the encryption algorithm <code dir="ltr">AES256</code>. As described in &#34;Semantics&#34; above, you must first enable Transparent Data Encryption:</p>
<pre dir="ltr">ALTER TABLE employees
   MODIFY (salary ENCRYPT USING &#39;AES256&#39; &#39;NOMAC&#39;);
</pre>
<p>The following statement adds a new encrypted column <code dir="ltr">online_acct_pw</code> to the <code dir="ltr">oe.customers</code> table, using the default encryption algorithm <code dir="ltr">AES192</code>. Specifying <code dir="ltr">NO</code> <code dir="ltr">SALT</code> will allow a B-tree index to be created on the column, if desired.</p>
<pre dir="ltr">ALTER TABLE customers
   ADD (online_acct_pw VARCHAR2(8) ENCRYPT &#39;NOMAC&#39; NO SALT);
</pre>
<p>The following example decrypts the customer.online_acct_pw column:</p>
<pre dir="ltr">ALTER TABLE customers
   MODIFY (online_acct_pw DECRYPT);
</pre>
<p><a id="i2133144"></a><a id="SQLRF53552"></a><span class="subhead3">Allocating Extents: Example&nbsp;</span>The following statement allocates an extent of 5 kilobytes for the <code dir="ltr">employees</code> table and makes it available to instance 4:</p>
<pre dir="ltr">ALTER TABLE employees
  ALLOCATE EXTENT (SIZE 5K INSTANCE 4); 
</pre>
<p>Because this statement omits the <code dir="ltr">DATAFILE</code> parameter, Oracle Database allocates the extent in one of the data files belonging to the tablespace containing the table.</p>
<p><a id="i2133161"></a><a id="SQLRF53553"></a><span class="subhead3">Specifying a Default Column Value: Examples&nbsp;</span>This statement modifies the <code dir="ltr">min_price</code> column of the <code dir="ltr">product_information</code> table so that it has a default value of 10:</p>
<pre dir="ltr">ALTER TABLE product_information
  MODIFY (min_price DEFAULT 10); 
</pre>
<p>If you subsequently add a new row to the <code dir="ltr">product_information</code> table and do not specify a value for the <code dir="ltr">min_price</code> column, then the value of the <code dir="ltr">min_price</code> column is automatically 10:</p>
<pre dir="ltr">INSERT INTO product_information (product_id, product_name, 
   list_price)
   VALUES (300, &#39;left-handed mouse&#39;, 40.50); 

SELECT product_id, product_name, list_price, min_price 
    FROM product_information
    WHERE product_id = 300; 

PRODUCT_ID PRODUCT_NAME         LIST_PRICE  MIN_PRICE
---------- -------------------- ---------- ----------
       300 left-handed mouse          40.5         10
</pre>
<p>To discontinue previously specified default values, so that they are no longer automatically inserted into newly added rows, replace the values with <code dir="ltr">NULL</code>, as shown in this statement:</p>
<pre dir="ltr">ALTER TABLE product_information
   MODIFY (min_price DEFAULT NULL);
</pre>
<p><a id="i2057169"></a>The <code dir="ltr">MODIFY</code> clause need only specify the column name and the modified part of the definition, rather than the entire column definition. This statement has no effect on any existing values in existing rows.</p>
<p>The following example adds a column defined with <code dir="ltr">DEFAULT</code> <code dir="ltr">ON</code> <code dir="ltr">NULL</code> to a table. The <code dir="ltr">DEFAULT</code> column value includes the sequence pseudocolumn <code dir="ltr">NEXTVAL</code>.</p>
<p>Create sequence <code dir="ltr">s1</code> and table <code dir="ltr">t1</code> as follows:</p>
<pre dir="ltr">CREATE SEQUENCE s1 START WITH 1;

CREATE TABLE t1 (name VARCHAR2(10));
INSERT INTO t1 VALUES(&#39;Kevin&#39;);
INSERT INTO t1 VALUES(&#39;Julia&#39;);
INSERT INTO t1 VALUES(&#39;Ryan&#39;);
</pre>
<p>Add column <code dir="ltr">id</code>, which defaults to <code dir="ltr">s1</code>.<code dir="ltr">NEXTVAL</code>. The default column value for <code dir="ltr">id</code> is assigned to each existing row in the table. The order in which <code dir="ltr">s1</code>.<code dir="ltr">NEXTVAL</code> is assigned to each row is nondeterministic.</p>
<pre dir="ltr">ALTER TABLE t1 ADD (id NUMBER DEFAULT ON NULL s1.NEXTVAL NOT NULL);

SELECT id, name FROM t1 ORDER BY id;

        ID NAME
---------- ----------
         1 Kevin
         2 Julia
         3 Ryan
</pre>
<p>If you subsequently add a new row to the table and specify a NULL value for the <code dir="ltr">id</code> column, then the <code dir="ltr">DEFAULT</code> <code dir="ltr">ON</code> <code dir="ltr">NULL</code> expression <code dir="ltr">s1</code>.<code dir="ltr">NEXTVAL</code> is inserted.</p>
<pre dir="ltr">INSERT INTO t1(id, name) VALUES(NULL, &#39;Sean&#39;);

SELECT id, name FROM t1 ORDER BY id;

        ID NAME
---------- ----------
         1 Kevin
         2 Julia
         3 Ryan
         4 Sean
</pre>
<p><a id="SQLRF53554"></a><span class="subhead3">Adding a Constraint to an XMLType Table: Example&nbsp;</span>The following example adds a primary key constraint to the <code dir="ltr">xwarehouses</code> table, created in <a href="statements_7002.htm#i2130724">&#34;XMLType Examples&#34;</a>:</p>
<pre dir="ltr">ALTER TABLE xwarehouses 
   ADD (PRIMARY KEY(XMLDATA.&#34;WarehouseID&#34;));
</pre>
<p>Refer to <a href="pseudocolumns010.htm#i1006343">XMLDATA Pseudocolumn</a> for information about this pseudocolumn.</p>
<p><a id="i2133183"></a><a id="SQLRF53555"></a><span class="subhead3">Renaming Constraints: Example&nbsp;</span>The following statement renames the <code dir="ltr">cust_fname_nn</code> constraint on the sample table <code dir="ltr">oe.customers</code> to <code dir="ltr">cust_firstname_nn</code>:</p>
<pre dir="ltr">ALTER TABLE customers RENAME CONSTRAINT cust_fname_nn
   TO cust_firstname_nn;
</pre>
<p><a id="i2133199"></a><a id="SQLRF53556"></a><span class="subhead3">Dropping Constraints: Examples&nbsp;</span>The following statement drops the primary key of the <code dir="ltr">departments</code> table:</p>
<pre dir="ltr">ALTER TABLE departments 
    DROP PRIMARY KEY CASCADE; 
</pre>
<p>If you know that the name of the <code dir="ltr">PRIMARY</code> <code dir="ltr">KEY</code> constraint is <code dir="ltr">pk_dept</code>, then you could also drop it with the following statement:</p>
<pre dir="ltr">ALTER TABLE departments
    DROP CONSTRAINT pk_dept CASCADE; 
</pre>
<p>The <code dir="ltr">CASCADE</code> clause causes Oracle Database to drop any foreign keys that reference the primary key.</p>
<p>The following statement drops the unique key on the <code dir="ltr">email</code> column of the <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">ALTER TABLE employees 
    DROP UNIQUE (email); 
</pre>
<p>The <code dir="ltr">DROP</code> clause in this statement omits the <code dir="ltr">CASCADE</code> clause. Because of this omission, Oracle Database does not drop the unique key if any foreign key references it.</p>
<p><a id="i2133216"></a><a id="SQLRF53557"></a><span class="subhead3">LOB Columns: Examples&nbsp;</span>The following statement adds <code dir="ltr">CLOB</code> column <code dir="ltr">resume</code> to the <code dir="ltr">employee</code> table and specifies LOB storage characteristics for the new column:</p>
<pre dir="ltr">ALTER TABLE employees ADD (resume CLOB)
  LOB (resume) STORE AS resume_seg (TABLESPACE example);
</pre>
<p>To modify the LOB column <code dir="ltr">resume</code> to use caching, enter the following statement:</p>
<pre dir="ltr">ALTER TABLE employees MODIFY LOB (resume) (CACHE); 
</pre>
<p>The following statement adds a SecureFiles <code dir="ltr">CLOB</code> column <code dir="ltr">resume</code> to the <code dir="ltr">employee</code> table and specifies LOB storage characteristics for the new column. SecureFiles LOBs must be stored in tablespaces with automatic segment-space management. Therefore, the LOB data in this example is stored in the <code dir="ltr">auto_seg_ts</code> tablespace, which was created in <a href="statements_7003.htm#i2153459">&#34;Specifying Segment Space Management for a Tablespace: Example&#34;</a>:</p>
<pre dir="ltr">ALTER TABLE employees ADD (resume CLOB)
LOB (resume) STORE AS SECUREFILE resume_seg (TABLESPACE auto_seg_ts);
</pre>
<p>To modify the LOB column <code dir="ltr">resume</code> so that it does not use caching, enter the following statement:</p>
<pre dir="ltr">ALTER TABLE employees MODIFY LOB (resume) (NOCACHE);
</pre>
<p><a id="i2133232"></a><a id="SQLRF53558"></a><span class="subhead3">Nested Tables: Examples&nbsp;</span>The following statement adds the nested table column <code dir="ltr">skills</code> to the <code dir="ltr">employee</code> table:</p>
<pre dir="ltr">ALTER TABLE employees ADD (skills skill_table_type)
    NESTED TABLE skills STORE AS nested_skill_table;
</pre>
<p>You can also modify nested table storage characteristics. Use the name of the storage table specified in the <code dir="ltr"><span class="codeinlineitalic">nested_table_col_properties</span></code> to make the modification. You cannot query or perform DML statements on the storage table. Use the storage table only to modify the nested table column storage characteristics.</p>
<p>The following statement creates table <code dir="ltr">vet_service</code> with nested table column <code dir="ltr">client</code> and storage table <code dir="ltr">client_tab</code>. Nested table <code dir="ltr">client_tab</code> is modified to specify constraints:</p>
<pre dir="ltr">CREATE TYPE pet_t AS OBJECT
   (pet_id NUMBER, pet_name VARCHAR2(10), pet_dob DATE);
/

CREATE TYPE pet AS TABLE OF pet_t;
/

CREATE TABLE vet_service (vet_name VARCHAR2(30),
                          client   pet)
  NESTED TABLE client STORE AS client_tab;

ALTER TABLE client_tab ADD UNIQUE (pet_id);
</pre>
<p>The following statement alters the storage table for a nested table of <code dir="ltr">REF</code> values to specify that the <code dir="ltr">REF</code> is scoped:</p>
<pre dir="ltr">CREATE TYPE emp_t AS OBJECT (eno number, ename char(31)); 
CREATE TYPE emps_t AS TABLE OF REF emp_t; 
CREATE TABLE emptab OF emp_t; 
CREATE TABLE dept (dno NUMBER, employees emps_t) 
   NESTED TABLE employees STORE AS deptemps; 
ALTER TABLE deptemps ADD (SCOPE FOR (COLUMN_VALUE) IS emptab); 
</pre>
<p>Similarly, to specify storing the <code dir="ltr">REF</code> with rowid:</p>
<pre dir="ltr">ALTER TABLE deptemps ADD (REF(column_value) WITH ROWID); 
</pre>
<p>In order to execute these <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statements successfully, the storage table <code dir="ltr">deptemps</code> must be empty. Also, because the nested table is defined as a table of scalar values (<code dir="ltr">REF</code> values), Oracle Database implicitly provides the column name <code dir="ltr">COLUMN_VALUE</code> for the storage table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_7002.htm#i2095331">CREATE TABLE</a> for more information about nested table storage</p>
</li>
<li>
<p><a class="olink ADOBJ00511" href="../ADOBJ/adobjvew.htm#ADOBJ00511"><span class="italic">Oracle Database Object-Relational Developer&#39;s Guide</span></a> for more information about nested tables</p>
</li>
</ul>
</div>
<p><a id="i2133267"></a><a id="SQLRF53559"></a><span class="subhead3">REF Columns: Examples&nbsp;</span>The following statement creates an object type <code dir="ltr">dept_t</code> and then creates table <code dir="ltr">staff</code>:</p>
<pre dir="ltr">CREATE TYPE dept_t AS OBJECT 
   (deptno NUMBER, dname VARCHAR2(20));
/

CREATE TABLE staff 
   (name   VARCHAR2(100), 
    salary NUMBER,
    dept   REF dept_t); 
</pre>
<p>An object table <code dir="ltr">offices</code> is created as:</p>
<pre dir="ltr">CREATE TABLE offices OF dept_t; 
</pre>
<p>The <code dir="ltr">dept</code> column can store references to objects of <code dir="ltr">dept_t</code> stored in any table. If you would like to restrict the references to point only to objects stored in the <code dir="ltr">departments</code> table, then you could do so by adding a scope constraint on the <code dir="ltr">dept</code> column as follows:</p>
<pre dir="ltr">ALTER TABLE staff 
    ADD (SCOPE FOR (dept) IS offices); 
</pre>
<p>The preceding <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement will succeed only if the <code dir="ltr">staff</code> table is empty.</p>
<p>If you want the <code dir="ltr">REF</code> values in the <code dir="ltr">dept</code> column of <code dir="ltr">staff</code> to also store the rowids, then issue the following statement:</p>
<pre dir="ltr">ALTER TABLE staff 
   ADD (REF(dept) WITH ROWID);
</pre>
<p><a id="CJAJECAB"></a><a id="SQLRF56040"></a><span class="subhead3">Unpacked Storage in ANYDATA Columns: Example&nbsp;</span></p>
<p>This example creates a table with an <code dir="ltr">ANYDATA</code> column, stores opaque data types in the <code dir="ltr">ANYDATA</code> column using unpacked storage, and then queries the data types. This example assumes that you are connected to the database as user <code dir="ltr">hr</code>.</p>
<p>Create table <code dir="ltr">t1</code>, which contains a <code dir="ltr">NUMBER</code> column <code dir="ltr">n</code> and an <code dir="ltr">ANYDATA</code> column <code dir="ltr">x</code>:</p>
<pre dir="ltr">CREATE TABLE t1 (n NUMBER, x ANYDATA);
</pre>
<p>Create an object type <code dir="ltr">clob_typ</code>, which contains a <code dir="ltr">CLOB</code> attribute:</p>
<pre dir="ltr">CREATE OR REPLACE TYPE clob_typ AS OBJECT (c clob);
/
</pre>
<p>Enable unpacked storage of the opaque data types <code dir="ltr">XMLType</code> and <code dir="ltr">clob_typ</code> in <code dir="ltr">ANYDATA</code> column <code dir="ltr">x</code> of table <code dir="ltr">t1</code>:</p>
<pre dir="ltr">ALTER TABLE t1 MODIFY OPAQUE TYPE x STORE (XMLType, clob_typ) UNPACKED;
</pre>
<p>Insert <code dir="ltr">XMLType</code> and <code dir="ltr">clob_typ</code> objects into table <code dir="ltr">t1</code>. These types will use unpacked storage:</p>
<pre dir="ltr">INSERT INTO t1
  VALUES(1, anydata.convertobject(XMLType(&#39;&lt;Test&gt;This is test XML&lt;/Test&gt;&#39;)));

INSERT INTO t1
  VALUES(2, anydata.convertobject(clob_typ(TO_CLOB(&#39;This is a test CLOB&#39;))));
</pre>
<p>Query table <code dir="ltr">t1</code> to view the names of the types stored in <code dir="ltr">ANYDATA</code> column <code dir="ltr">x</code>:</p>
<pre dir="ltr">SELECT t1.*, anydata.getTypeName(t1.x) typename FROM t1;

    N X()                  TYPENAME
----- -------------------- --------------------
    1 ANYDATA()            SYS.XMLTYPE
    2 ANYDATA()            HR.CLOB_TYP
</pre>
<p>Create functions that allow you to query the values stored in the <code dir="ltr">XMLType</code> and <code dir="ltr">clob_typ</code> data types:</p>
<pre dir="ltr">CREATE FUNCTION get_xmltype (ad IN ANYDATA) RETURN VARCHAR2 AS
      rtn_val PLS_INTEGER;
      my_xmltype XMLType;
      string_val VARCHAR2(30);
   BEGIN
      rtn_val := ad.getObject(my_xmltype);
      string_val := my_xmltype.getstringval();
      return (string_val);
   END;
/

CREATE FUNCTION get_clob_typ (ad IN ANYDATA) RETURN VARCHAR2 AS
      rtn_val PLS_INTEGER;
      my_clob_typ clob_typ;
      string_val VARCHAR2(30);
   BEGIN
      rtn_val := ad.getObject(my_clob_typ);
      string_val := (my_clob_typ.c);
      return (string_val);
   END;
/
</pre>
<p>Query table <code dir="ltr">t1</code> to view the values stored in each data type in <code dir="ltr">ANYDATA</code> column <code dir="ltr">x</code>:</p>
<pre dir="ltr">SELECT t1.*, anydata.getTypeName(t1.x) typename,
  CASE
    WHEN anydata.gettypename(t1.x) = &#39;SYS.XMLTYPE&#39; THEN get_xmltype(t1.x)
    WHEN anydata.gettypename(t1.x) = &#39;HR.CLOB_TYP&#39; THEN get_clob_typ(t1.x)
  END string_value
FROM t1;

    N X()                  TYPENAME             STRING_VALUE
----- -------------------- -------------------- ------------------------------
    1 ANYDATA()            SYS.XMLTYPE          &lt;Test&gt;This is test XML&lt;/Test&gt;
    2 ANYDATA()            HR.CLOB_TYP          This is a test CLOB
</pre>
<p><a id="SQLRF53560"></a><span class="subhead3">Additional Examples&nbsp;</span>For examples of defining integrity constraints with the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, see the <a href="clauses002.htm#g1053592"><span class="xreftitleitalic"><span class="italic">constraint</span></span></a>.</p>
<p>For examples of changing the storage parameters of a table, see the <a href="clauses007.htm#i1026834"><span class="xreftitleitalic"><span class="italic">storage_clause</span></span></a> .</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="statements_3.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="statements_3002.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>