<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103646"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/CREATE%20MATERIALIZED%20ZONEMAP"></a><title>CREATE MATERIALIZED ZONEMAP</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:48Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="statements_6003.htm" title="Previous" type="text/html"/>
<link rel="Next" href="statements_6005.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">435/555</span> <!-- End Header --><a id="CACECJCC"></a>
<div id="SQLRF56867" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h1 class="refsect1">CREATE MATERIALIZED ZONEMAP<a id="sthref5175"></a><a id="sthref5176"></a></h1>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> statement is available starting with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5177"></a>Purpose</p>
<p>Use the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> statement to create a zone map.</p>
<p>A <span class="bold">zone</span> <span class="bold">map</span> is a special type of materialized view that stores information about zones. A <span class="bold">zone</span> is a set of contiguous data blocks on disk that stores the values of one or more table columns. Multiple zones are usually required to store all of the values of the table columns. A zone map tracks the minimum and maximum table column values stored in each zone.</p>
<p>Zone maps enable you to reduce the I/O and CPU costs of table scans. When a SQL statement contains predicates on columns in a zone map, the database compares the predicate values to the minimum and maximum table column values stored in each zone to determine which zones to read during SQL execution.</p>
<p>Oracle Database supports the following types of zone maps:</p>
<ul>
<li>
<p>A <span class="bold">basic</span> <span class="bold">zone</span> <span class="bold">map</span> is defined on a single table and maintains zone information for specified columns in that table.</p>
<p>You can create a basic zone map either by specifying the <code dir="ltr"><span class="codeinlineitalic">create_zonemap_on_table</span></code> clause, or by specifying the <code dir="ltr"><span class="codeinlineitalic">create_zonemap_as_subquery</span></code> clause where the <code dir="ltr">FROM</code> clause of the defining subquery specifies a single table.</p>
</li>
<li>
<p>A <span class="bold">join</span> <span class="bold">zone</span> <span class="bold">map</span> is defined on two or more joined tables and maintains zone information for specified columns in any of the joined tables.</p>
<p>You can create a join zone map by specifying the <code dir="ltr"><span class="codeinlineitalic">create_zonemap_as_subquery</span></code> clause. The <code dir="ltr">FROM</code> clause of the defining subquery must specify a table that is left outer joined with one or more other tables.</p>
</li>
</ul>
<p>Zone maps are commonly used with star schemas in data warehousing environments. However, a star schema is not a requirement for creating a zone map. In either case, this reference uses star schema terminology to refer to the tables in a zone map. In a join zone map, the outer table of the join(s) is referred to as the <span class="bold">fact</span> <span class="bold">table</span>, and the tables with which this table is joined are referred to as <span class="bold">dimension</span> <span class="bold">tables</span>. Collectively these tables are called the <span class="bold">base</span> <span class="bold">tables</span> of the zone map. In a basic zone map, the single table on which the zone map is defined is referred to as both the fact table and the base table of the zone map.</p>
<p>A base table of a zone map can be a partitioned or composite-partitioned table. In this case, the zone map maintains minimum and maximum column values for each partition (and subpartition) as well as for each zone.</p>
<p>You can create zone maps for use with or without attribute clustering:</p>
<ul>
<li>
<p>To create a zone map for use with attribute clustering, use either of the following methods:</p>
<ul>
<li>
<p>Use the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> statement and include attribute clustered columns in the zone map. Refer to the <a href="statements_7002.htm#CEGIDCDI"><span class="xreftitleitalic"><span class="italic">attribute_clustering_clause</span></span></a> of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and the <a href="statements_3001.htm#CIHFJJFI"><span class="xreftitleitalic"><span class="italic">attribute_clustering_clause</span></span></a> clause of <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> for more information.</p>
</li>
<li>
<p>Specify the <code dir="ltr">WITH</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> clause while creating or modifying an attribute clustered table. Refer to the <a href="statements_7002.htm#CEGDJAGF"><span class="xreftitleitalic"><span class="italic">zonemap_clause</span></span></a> of <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> and the <a href="statements_3001.htm#CIHGEACD">MODIFY CLUSTERING</a> clause of <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> for more information.</p>
</li>
</ul>
</li>
<li>
<p>To create a zone map for use without attribute clustering, use the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> statement and include columns that are not attribute clustered in the zone map.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DWHSG9355" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG9355"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on zone maps</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACECGEF"></a>Prerequisites</p>
<p>To create a zone map <span class="bold">in your own schema:</span></p>
<ul>
<li>
<p>You must have the <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> system privilege and either the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> or <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
</li>
<li>
<p>You must also have access to any base tables of the zone map that you do not own, either through a <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> object privilege on each of the tables or through the <code dir="ltr">READ</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> or <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
</li>
</ul>
<p>To create a zone map <span class="bold">in another user&#39;s schema:</span></p>
<ul>
<li>
<p>You must have the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> system privilege.</p>
</li>
<li>
<p>The owner of the zone map must have the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> system privilege. The owner must also have access to any base tables of the zone map that the schema owner does not own, either through a <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> object privilege on each of the tables or through the <code dir="ltr">READ</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> or <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
</li>
</ul>
<p>To create a refresh-on-commit zone map (<code dir="ltr">REFRESH</code> <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> clause), in addition to the preceding privileges, you must have the <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> <code dir="ltr">REFRESH</code> object privilege on any base tables that you do not own or you must have the <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> <code dir="ltr">REFRESH</code> system privilege. Unlike materialized views, you can create a refresh-on-commit zone map even if there are no materialized view logs on the base tables.</p>
<p>When you create a zone map, Oracle Database creates one internal table and at least one index, all in the schema of the zone map. Oracle Database uses these objects to maintain the zone map data. You must have the privileges necessary to create these objects, and you must have sufficient quota in the target tablespace to store these objects or you must have the <code dir="ltr">UNLIMITED</code> <code dir="ltr">TABLESPACE</code> system privilege.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5178"></a>Syntax</p>
<p class="subhead2"><a id="SQLRF56868"></a><span class="italic">create_materialized_zonemap</span>::=</p>
<img width="253" height="58" src="img/create_materialized_zonemap.gif" alt="Description of create_materialized_zonemap.gif follows"/><br/>
<a id="sthref5179" href="img_text/create_materialized_zonemap.htm">Description of the illustration &#39;&#39;create_materialized_zonemap.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56869"></a><a href="#CACDFDHE"><span class="xreftitleitalic"><span class="italic">create_zonemap_on_table</span></span></a>::=</p>
<img width="623" height="246" src="img/create_zonemap_on_table.gif" alt="Description of create_zonemap_on_table.gif follows"/><br/>
<a id="sthref5180" href="img_text/create_zonemap_on_table.htm">Description of the illustration &#39;&#39;create_zonemap_on_table.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56870"></a><a href="#CACDIDBA"><span class="xreftitleitalic"><span class="italic">create_zonemap_as_subquery</span></span></a>::=</p>
<img width="761" height="230" src="img/create_zonemap_as_subquery.gif" alt="Description of create_zonemap_as_subquery.gif follows"/><br/>
<a id="sthref5181" href="img_text/create_zonemap_as_subquery.htm">Description of the illustration &#39;&#39;create_zonemap_as_subquery.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56871"></a><a href="#CACEJIHI"><span class="xreftitleitalic"><span class="italic">zonemap_attributes</span></span></a>::=</p>
<img width="263" height="199" src="img/zonemap_attributes.gif" alt="Description of zonemap_attributes.gif follows"/><br/>
<a id="sthref5182" href="img_text/zonemap_attributes.htm">Description of the illustration &#39;&#39;zonemap_attributes.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="SQLRF56872"></a><a href="#CACBDIJH"><span class="xreftitleitalic"><span class="italic">zonemap_refresh_clause</span></span></a>::=</p>
<img width="591" height="175" src="img/zonemap_refresh_clause.gif" alt="Description of zonemap_refresh_clause.gif follows"/><br/>
<a id="sthref5183" href="img_text/zonemap_refresh_clause.htm">Description of the illustration &#39;&#39;zonemap_refresh_clause.gif&#39;&#39;</a><br/>
<br/>
<div class="infobox-note">
<p class="notep1">Note:</p>
When specifying the <code dir="ltr"><span class="codeinlineitalic">zonemap_refresh_clause</span></code>, you must specify at least one clause after the <code dir="ltr">REFRESH</code> keyword.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5184"></a>Semantics</p>
<p class="subhead1"><a id="CACDFDHE"></a><a id="SQLRF56873"></a><span class="italic">create_zonemap_on_table</span></p>
<p>Use this clause to create a basic zone map.</p>
<p><a id="SQLRF56886"></a><span class="subhead3">ON Clause&nbsp;</span>In the <code dir="ltr">ON</code> clause, first specify the fact table for the zone map, and then inside the parentheses specify one or more columns of the fact table to be included in the zone map.</p>
<p>For each specified fact table <code dir="ltr"><span class="codeinlineitalic">column</span></code>, Oracle creates two columns in the zone map. These two columns contain the minimum and maximum values of the fact table column in each zone. Oracle generates names for the zone map columns of the form <code dir="ltr">MIN_1_</code><code dir="ltr"><span class="codeinlineitalic">column</span></code> and <code dir="ltr">MAX_1_</code><code dir="ltr"><span class="codeinlineitalic">column</span></code> for the first specified fact table <code dir="ltr"><span class="codeinlineitalic">column</span></code>, <code dir="ltr">MIN_2_</code><code dir="ltr"><span class="codeinlineitalic">column</span></code> and <code dir="ltr">MAX_2_</code><code dir="ltr"><span class="codeinlineitalic">column</span></code> for the second specified fact table <code dir="ltr"><span class="codeinlineitalic">column</span></code>, and so on.</p>
<p>If you omit <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then Oracle assumes the fact table is in your own schema. The fact table can be a table or a materialized view</p>
<p class="subhead1"><a id="CACDIDBA"></a><a id="SQLRF56874"></a><span class="italic">create_zonemap_as_subquery</span></p>
<p>Use this clause to create a basic zone map or a join zone map. To create a basic zone map, specify a single base table in the <code dir="ltr">FROM</code> clause of the defining subquery. To create a join zone map, specify a table that is left outer joined to one or more other tables in the <code dir="ltr">FROM</code> clause of the defining subquery.</p>
<p><a id="SQLRF56877"></a><span class="subhead3"><span class="italic">column_alias</span>&nbsp;</span>You can specify a column alias for each table column to be included in the zone map. The column alias list explicitly resolves any column name conflict, eliminating the need to specify aliases in the <code dir="ltr">SELECT</code> list of the defining subquery. If you specify any column alias in this clause, then you must specify an alias for each column in the <code dir="ltr">SELECT</code> list of the defining subquery. The first column alias you specify must be <code dir="ltr">ZONE_ID$</code>, which corresponds to the first column in the <code dir="ltr">SELECT</code> list, the <code dir="ltr">SYS_OP_ZONE_ID</code> function expression.</p>
<p><a id="SQLRF56888"></a><span class="subhead3">AS <span class="italic">query_block</span>&nbsp;</span>Specify the defining subquery of the zone map. The subquery must consist of a single <code dir="ltr"><span class="codeinlineitalic">query_block</span></code>. You can specify only the <code dir="ltr">SELECT</code>, <code dir="ltr">FROM</code>, <code dir="ltr">WHERE</code>, and <code dir="ltr">GROUP</code> <code dir="ltr">BY</code> clauses of <code dir="ltr"><span class="codeinlineitalic">query_block</span></code>, and those clauses must satisfy the following requirements:</p>
<ul>
<li>
<p>The first column in the <code dir="ltr">SELECT</code> list must be the <code dir="ltr">SYS_OP_ZONE_ID</code> function expression. Refer to <a href="functions203.htm#CJABIIAF">SYS_OP_ZONE_ID</a> for more information.</p>
</li>
<li>
<p>The remaining columns in the <code dir="ltr">SELECT</code> list must be function expressions that return minimum and maximum values for the columns you want to include in the zone map. For each column, specify a pair of function expressions of the following form:</p>
<pre dir="ltr">MIN([<span class="italic">table</span>.]<span class="italic">column</span>), MAX([<span class="italic">table</span>.]<span class="italic">column</span>)
</pre>
<p>For <code dir="ltr"><span class="codeinlineitalic">table</span></code>, specify the name or table alias for the table that contains the column. The table can be a fact table or dimension table. For <code dir="ltr"><span class="codeinlineitalic">column</span></code>, specify the name or column alias for the column.</p>
</li>
<li>
<p>The <code dir="ltr">FROM</code> clause can specify a fact table alone, or a fact table and one or more dimension tables with each dimension table left outer joined to the fact table. You can specify <code dir="ltr">LEFT</code> <code dir="ltr">[OUTER]</code> <code dir="ltr">JOIN</code> syntax in the <code dir="ltr">FROM</code> clause, or apply the outer join operator (+) to dimension table columns in the join condition in the <code dir="ltr">WHERE</code> clause. You can optionally specify a table alias for any of the tables in the <code dir="ltr">FROM</code> clause. Fact tables and dimension tables can be tables or materialized views.</p>
</li>
<li>
<p>In the <code dir="ltr">WHERE</code> clause, you can specify only left outer join conditions using the outer join operator(+).</p>
</li>
<li>
<p>You must specify a <code dir="ltr">GROUP</code> <code dir="ltr">BY</code> clause with the same <code dir="ltr">SYS_OP_ZONE_ID</code> function expression that you specified for the first column of the <code dir="ltr">SELECT</code> list.</p>
</li>
</ul>
<p class="subhead1"><a id="SQLRF56875"></a><span class="italic">schema</span></p>
<p>Specify the schema to contain the zone map. If you omit <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then Oracle Database creates the zone map in your schema.</p>
<p class="subhead1"><a id="SQLRF56876"></a><span class="italic">zonemap_name</span></p>
<p>Specify the name of the zone map to be created. The name must satisfy the requirements listed in <a href="sql_elements008.htm#i27570">&#34;Database Object Naming Rules&#34;</a>.</p>
<p class="subhead1"><a id="CACEJIHI"></a><a id="SQLRF56878"></a><span class="italic">zonemap_attributes</span></p>
<p>Use this clause to specify the following attributes for the zone map: <code dir="ltr">TABLESPACE</code>, <code dir="ltr">SCALE</code>, <code dir="ltr">PCTFREE</code>, <code dir="ltr">PCTUSED</code>, and <code dir="ltr">CACHE</code> or <code dir="ltr">NOCACHE</code>.</p>
<p><a id="SQLRF56879"></a><span class="subhead3">TABLESPACE&nbsp;</span>Specify the <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code> in which the zone map is to be created. If you omit this clause, then Oracle Database creates the zone map in the default tablespace of the schema containing the zone map.</p>
<p><a id="CACFGGDJ"></a><a id="SQLRF56938"></a><span class="subhead3">SCALE&nbsp;</span>This clause lets you specify the zone map scale, which determines the number of contiguous disk blocks that form a zone. The scale is an integer value that represents a power of 2. For example, a scale of 10 means up to 2 raised to the 10th power, or 1024, contiguous disk blocks will form a zone. For <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, specify a value between 4 and 16, inclusive. The recommended value is 10; this is the default.</p>
<p><a id="CACDIEDG"></a><a id="SQLRF56880"></a><span class="subhead3">PCTFREE&nbsp;</span>Specify an <code dir="ltr"><span class="codeinlineitalic">integer</span></code> representing the percentage of space in each data block of the zone map reserved for future updates to rows of the zone map. The integer value must be between 0 and 99, inclusive. The default value is 10. Refer to <a href="clauses007.htm#i77584"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span></span></a> for more information on the <code dir="ltr">PCTFREE</code> parameter.</p>
<p><a id="CACJGFEF"></a><a id="SQLRF56881"></a><span class="subhead3">PCTUSED&nbsp;</span>Specify an <code dir="ltr"><span class="codeinlineitalic">integer</span></code> representing the minimum percentage of used space that Oracle maintains for each data block of the zone map. The integer value must be between 0 and 99, inclusive. The default value is 40. Refer to <a href="clauses007.htm#i77584"><span class="xreftitleitalic"><span class="italic">physical_attributes_clause</span></span></a> for more information on the <code dir="ltr">PCTUSED</code> parameter.</p>
<p><a id="CACIGEHI"></a><a id="SQLRF56882"></a><span class="subhead3">CACHE | NOCACHE&nbsp;</span>For data that will be accessed frequently, <code dir="ltr">CACHE</code> specifies that the blocks retrieved for this zone map are placed at the most recently used end of the least recently used (LRU) list in the buffer cache when a full table scan is performed.</p>
<p><code dir="ltr">NOCACHE</code> specifies that the blocks are placed at the least recently used end of the LRU list. The default is <code dir="ltr">NOCACHE</code>.</p>
<p class="subhead1"><a id="CACBDIJH"></a><a id="SQLRF56884"></a><span class="italic">zonemap_refresh_clause</span></p>
<p>Use this clause to specify the default refresh method and mode for the zone map. If you do not specify a refresh method (<code dir="ltr">FAST</code>, <code dir="ltr">COMPLETE</code>, or <code dir="ltr">FORCE</code>), then <code dir="ltr">FORCE</code> is the default method. If you do not specify a refresh mode (<code dir="ltr">ON</code> clauses), then <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> is the default mode.</p>
<p><a id="SQLRF56939"></a><span class="subhead3">FAST&nbsp;</span>Specify <code dir="ltr">FAST</code> to indicate the fast refresh method, which performs the refresh according to the changes that have occurred to the base tables. While zone maps are internally implemented as a type of materialized view, materialized view logs on base tables are not needed to perform a fast refresh of a zone map</p>
<p><a id="SQLRF56940"></a><span class="subhead3">COMPLETE&nbsp;</span>Specify <code dir="ltr">COMPLETE</code> to indicate the complete refresh method, which is implemented by executing the defining query of the zone map. If you request a complete refresh, then Oracle Database performs a complete refresh even if a fast refresh is possible.</p>
<p><a id="SQLRF56941"></a><span class="subhead3">FORCE&nbsp;</span>Specify <code dir="ltr">FORCE</code> to indicate that when a refresh occurs, Oracle Database will perform a fast refresh if one is possible or a complete refresh if fast refresh is not possible. This is the default.</p>
<p><a id="CACFCGJJ"></a><a id="SQLRF56942"></a><span class="subhead3">ON DEMAND&nbsp;</span>Specify <code dir="ltr">ON</code> <code dir="ltr">DEMAND</code> to indicate that database will not refresh the zone map unless you manually issue an <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> ... <code dir="ltr">REBUILD</code> statement. If you specify this clause, then the zone map is referred to as a refresh-on-demand zone map. Refer to <a href="statements_2004.htm#BGBHEFFI">REBUILD</a> in the documentation on <code dir="ltr">ALTER</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">ZONEMAP</code> for more information on rebuilding a zone map.</p>
<p><a id="SQLRF56943"></a><span class="subhead3">ON COMMIT&nbsp;</span>Specify <code dir="ltr">ON</code> <code dir="ltr">COMMIT</code> to indicate that a refresh is to occur whenever the database commits a transaction that operates on a base table of the zone map. If you specify this clause, then the zone map is referred to as a refresh-on-commit zone map. This clause may increase the time taken to complete the commit, because the database performs the refresh operation as part of the commit process.</p>
<p><a id="SQLRF56944"></a><span class="subhead3">ON LOAD&nbsp;</span>Specify <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> to indicate that a refresh is to occur at the end of a direct-path insert (serial or parallel) resulting either from an <code dir="ltr">INSERT</code> or a <code dir="ltr">MERGE</code> operation.</p>
<p><a id="SQLRF56945"></a><span class="subhead3">ON DATA MOVEMENT&nbsp;</span>Specify <code dir="ltr">ON</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> to indicate that a refresh is to occur at the end of the following data movement operations:</p>
<ul>
<li>
<p>Data redefinition using the <code dir="ltr">DBMS_REDEFINITION</code> package</p>
</li>
<li>
<p>Table partition maintenance operations that are specified by the following clauses of <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>: <code dir="ltr"><span class="codeinlineitalic">coalesce_table</span></code>, <code dir="ltr"><span class="codeinlineitalic">merge_table_partitions</span></code>, <code dir="ltr"><span class="codeinlineitalic">move_table_partition</span></code>, and <code dir="ltr"><span class="codeinlineitalic">split_table_partition</span></code></p>
</li>
</ul>
<p><a id="SQLRF56946"></a><span class="subhead3">ON LOAD DATA MOVEMENT&nbsp;</span>Specify <code dir="ltr">ON</code> <code dir="ltr">LOAD</code> <code dir="ltr">DATA</code> <code dir="ltr">MOVEMENT</code> to indicate that a refresh is to occur at the end of a direct-path insert or a data movement operation. This is the default.</p>
<p class="subhead1"><a id="CACEAADH"></a><a id="SQLRF56885"></a>ENABLE | DISABLE PRUNING</p>
<p>This clause lets you control the use of the zone map for pruning.</p>
<ul>
<li>
<p>Specify <code dir="ltr">ENABLE</code> <code dir="ltr">PRUNING</code> to enable use of the zone map for pruning. This is the default.</p>
</li>
<li>
<p>Specify <code dir="ltr">DISABLE</code> <code dir="ltr">PRUNING</code> to disable use of the zone map for pruning. The optimizer will not use the zone map for pruning, but the database will continue to maintain the zone map.</p>
</li>
</ul>
<p>If the setting is <code dir="ltr">ENABLE</code> <code dir="ltr">PRUNING</code>, then the optimizer will consider using the zone map for pruning during SQL operations that include any of the following conditions:</p>
<ul>
<li>
<p>Comparison conditions: <code dir="ltr">=</code>, <code dir="ltr">&lt;=</code>, <code dir="ltr">&lt;</code>, <code dir="ltr">&gt;=</code>, <code dir="ltr">&gt;</code></p>
<p>The condition must be a simple comparison condition that has a column name on one side and a literal or bind variable on the other side. For example:</p>
<pre dir="ltr">WHERE country_name = &#39;United States of America&#39;
WHERE country_name = :country1
WHERE 10000 &gt;= salary
</pre></li>
<li>
<p><code dir="ltr">IN</code> condition</p>
<p>The <code dir="ltr">IN</code> condition must have a column name on the left side and an expression list of literals or bind variables on the right side. For example:</p>
<pre dir="ltr">WHERE country_name IN (&#39;Germany&#39;, &#39;India&#39;, &#39;United Kingdom&#39;)
WHERE country_name IN (:country1, :country2, :country3)
WHERE prod_id IN (20, 48, 132, 143)
</pre></li>
<li>
<p><code dir="ltr">LIKE</code> condition</p>
<p>The <code dir="ltr">LIKE</code> condition must have a column name on the left side and a text literal on the right side. The text literal is the pattern for the <code dir="ltr">LIKE</code> condition and it must contain at least one pattern matching character. Valid pattern matching characters are the underscore (<code dir="ltr">_</code>), which matches exactly one character, and the percent sign (<code dir="ltr">%</code>), which matches zero or more characters. The first character of the pattern cannot be a pattern matching character. For example:</p>
<pre dir="ltr">WHERE prod_name LIKE &#39;DVD%&#39;
WHERE prod_name LIKE &#39;Model%Cordless%Battery&#39;
WHERE prod_name LIKE &#39;CD%Pack of _&#39;
</pre></li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="conditions.htm#g1077361">Chapter 6, &#34;Conditions&#34;</a> for more information on conditions</div>
<p><a id="SQLRF56947"></a><span class="subhead3">Restrictions on Zone Maps&nbsp;</span>Zone maps are subject to the following restrictions:</p>
<ul>
<li>
<p>A table can be a fact table for at most one zone map. A table can be a dimension table for multiple zone maps. A table can be a fact table for one zone map and a dimension table for other zone maps.</p>
</li>
<li>
<p>A base table of a zone map cannot be an external table, an index-organized table, a remote table, a temporary table, or a view.</p>
</li>
<li>
<p>A base table of a zone map cannot be in the schema of the user <code dir="ltr">SYS</code>.</p>
</li>
<li>
<p>A zone map cannot be partitioned.</p>
</li>
<li>
<p>You can define a zone map on a column of any scalar data type other than <code dir="ltr">BFILE</code>, <code dir="ltr">BLOB</code>, <code dir="ltr">CLOB</code>, <code dir="ltr">LONG</code>, <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>, or <code dir="ltr">NCLOB</code>.</p>
</li>
<li>
<p>All joins specified in the defining subquery of a zone map must be left outer equijoins with the fact table on the left side.</p>
</li>
<li>
<p>If the <code dir="ltr">FROM</code> clause of the defining subquery for a zone map references a materialized view, then you must refresh that materialized view before refreshing the zone map.</p>
</li>
<li>
<p>You cannot perform DML operations directly on a zone map.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref5185"></a>Examples</p>
<p>The following statement creates a basic zone map called <code dir="ltr">sales_zmap</code>. The zone map tracks columns <code dir="ltr">cust_id</code> and <code dir="ltr">prod_id</code> in the table <code dir="ltr">sales</code>.</p>
<pre dir="ltr">CREATE MATERIALIZED ZONEMAP sales_zmap
  ON sales(cust_id, prod_id);
</pre>
<p>The following statement creates a basic zone map called <code dir="ltr">sales_zmap</code> that is similar to the zone map created in the previous example. However, this statement uses a defining subquery to create the zone map.</p>
<pre dir="ltr">CREATE MATERIALIZED ZONEMAP sales_zmap
  AS SELECT SYS_OP_ZONE_ID(rowid),
            MIN(cust_id), MAX(cust_id),
            MIN(prod_id), MAX(prod_id)
     FROM sales
     GROUP BY SYS_OP_ZONE_ID(rowid);
</pre>
<p>The following statement creates a join zone map called <code dir="ltr">sales_zmap</code>. The fact table for the zone map is <code dir="ltr">sales</code> and the zone map has one dimension table: <code dir="ltr">customers</code>. The zone map tracks two columns in the dimension table: <code dir="ltr">cust_state_province</code> and <code dir="ltr">cust_city</code>.</p>
<pre dir="ltr">CREATE MATERIALIZED ZONEMAP sales_zmap
  AS SELECT SYS_OP_ZONE_ID(s.rowid),
            MIN(cust_state_province), MAX(cust_state_province),
            MIN(cust_city), MAX(cust_city)
     FROM sales s
          LEFT OUTER JOIN customers c ON s.cust_id = c.cust_id
     GROUP BY SYS_OP_ZONE_ID(s.rowid);
</pre>
<p>The following statement creates a join zone map called <code dir="ltr">sales_zmap</code>. The fact table for the zone map is <code dir="ltr">sales</code> and the zone map has two dimension tables: <code dir="ltr">products</code> and <code dir="ltr">customers</code>. The zone map tracks five columns in the dimension tables: <code dir="ltr">prod_category</code> and <code dir="ltr">prod_subcategory</code> in the <code dir="ltr">products</code> table, and <code dir="ltr">country_id</code>, <code dir="ltr">cust_state_province</code>, and <code dir="ltr">cust_city</code> in the <code dir="ltr">customers</code> table.</p>
<pre dir="ltr">CREATE MATERIALIZED ZONEMAP sales_zmap
  AS SELECT SYS_OP_ZONE_ID(s.rowid),
            MIN(prod_category), MAX(prod_category),
            MIN(prod_subcategory), MAX(prod_subcategory),
            MIN(country_id), MAX(country_id),
            MIN(cust_state_province), MAX(cust_state_province),
            MIN(cust_city), MAX(cust_city)
    FROM sales s
       LEFT OUTER JOIN products p ON s.prod_id = p.prod_id
       LEFT OUTER JOIN customers c ON s.cust_id = c.cust_id
    GROUP BY sys_op_zone_id(s.rowid);
</pre>
<p>The following statement creates a join zone map that is identical to the zone map created in the previous example. The only difference is that the previous example uses the <code dir="ltr">LEFT</code> <code dir="ltr">OUTER</code> <code dir="ltr">JOIN</code> syntax in the <code dir="ltr">FROM</code> clause and the following example uses the outer join operator (+) in the <code dir="ltr">WHERE</code> clause.</p>
<pre dir="ltr">CREATE MATERIALIZED ZONEMAP sales_zmap
  AS SELECT SYS_OP_ZONE_ID(s.rowid),
            MIN(prod_category), MAX(prod_category),
            MIN(prod_subcategory), MAX(prod_subcategory),
            MIN(country_id), MAX(country_id),
            MIN(cust_state_province), MAX(cust_state_province),
            MIN(cust_city), MAX(cust_city)
     FROM sales s, products p, customers c
     WHERE s.prod_id = p.prod_id(+) AND
           s.cust_id = c.cust_id(+)
     GROUP BY sys_op_zone_id(s.rowid);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="statements_6003.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="statements_6005.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>