<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103561"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Data%20Type%20Comparison%20Rules"></a><title>Data Type Comparison Rules</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:5Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="sql_elements001.htm" title="Previous" type="text/html"/>
<link rel="Next" href="sql_elements003.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/555</span> <!-- End Header -->
<script>
<!-- // <![CDATA[
window.name='sql_elements002'
// ]]> -->
</script> <script>
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote&nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() { var height = msg.document.getElementById('footnote').offsetHeight; msg.resizeTo(598, height + 100); }, 100);
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript><a id="i55214"></a>
<div id="SQLRF30027" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Data Type Comparison Rules <a id="sthref269"></a></h1>
<p>This section describes how Oracle Database compares values of each data type.</p>
<div id="SQLRF51036" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref270"></a>
<h2 class="sect2">Numeric Values <a id="sthref271"></a></h2>
<p>A larger value is considered greater than a smaller one. All negative numbers are less than zero and all positive numbers. Thus, -1 is less than 100; -100 is less than -1.</p>
<p>The floating-point value <code>NaN</code> (not a number) is greater than any other numeric value and is equal to itself.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="sql_elements001.htm#i156865">&#34;Numeric Precedence&#34;</a> and <a href="sql_elements001.htm#i140176">&#34;Floating-Point Numbers&#34;</a> for more information on comparison semantics</div>
</div>
<!-- class="sect2" -->
<div id="SQLRF51037" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref272"></a>
<h2 class="sect2">Date Values <a id="sthref273"></a></h2>
<p>A later date is considered greater than an earlier one. For example, the date equivalent of &#39;29-MAR-2005&#39; is less than that of &#39;05-JAN-2006&#39; and &#39;05-JAN-2006 1:35pm&#39; is greater than &#39;05-JAN-2005 10:09am&#39;.</p>
</div>
<!-- class="sect2" -->
<div id="SQLRF51038" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref274"></a>
<h2 class="sect2"><a id="sthref275"></a>Character Values <a id="sthref276"></a></h2>
<p>Character values are compared on the basis of two measures:</p>
<ul>
<li>
<p>Binary or linguistic sorting</p>
</li>
<li>
<p>Blank-padded or nonpadded comparison semantics</p>
</li>
</ul>
<p>The following subsections describe the two measures.</p>
<p class="subhead2"><a id="SQLRF51039"></a>Binary and Linguistic Comparisons</p>
<p>In binary comparison, which is the default, Oracle compares character strings according to the concatenated value of the numeric codes of the characters in the database character set. One character is greater than another if it has a greater numeric value than the other in the character set. Oracle considers blanks to be less than any character, which is true in most character sets.</p>
<p><a id="sthref277"></a>These are some common character sets:</p>
<ul>
<li>
<p>7-bit ASCII (American Standard Code for Information Interchange)</p>
</li>
<li>
<p>EBCDIC Code (Extended Binary Coded Decimal Interchange Code)</p>
</li>
<li>
<p>ISO 8859/1 (International Organization for Standardization)</p>
</li>
<li>
<p>JEUC Japan Extended UNIX</p>
</li>
</ul>
<p>Linguistic comparison is useful if the binary sequence of numeric codes does not match the linguistic sequence of the characters you are comparing. Linguistic comparison is used if the <code dir="ltr">NLS_SORT</code> parameter has a setting other than <code dir="ltr">BINARY</code> and the <code dir="ltr">NLS_COMP</code> parameter is set to <code dir="ltr">LINGUISTIC</code>. In linguistic sorting, all SQL sorting and comparison are based on the linguistic rule specified by <code dir="ltr">NLS_SORT</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG005" href="../NLSPG/ch5lingsort.htm#NLSPG005"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information about linguistic sorting</div>
<p class="subhead2"><a id="BABJBDGB"></a><a id="SQLRF51040"></a>Blank-Padded and Nonpadded Comparison Semantics</p>
<p>With blank-padded semantics, if the two values have different lengths, then Oracle first adds blanks to the end of the shorter one so their lengths are equal. Oracle then compares the values character by character up to the first character that differs. The value with the greater character in the first differing position is considered greater. If two values have no differing characters, then they are considered equal. This rule means that two values are equal if they differ only in the number of trailing blanks. Oracle uses blank-padded comparison semantics only when both values in the comparison are either expressions of data type <code dir="ltr">CHAR</code>, <code dir="ltr">NCHAR</code>, text literals, or values returned by the <code dir="ltr">USER</code> function.</p>
<p>With nonpadded semantics, Oracle compares two values character by character up to the first character that differs. The value with the greater character in that position is considered greater. If two values of different length are identical up to the end of the shorter one, then the longer value is considered greater. If two values of equal length have no differing characters, then the values are considered equal. Oracle uses nonpadded comparison semantics whenever one or both values in the comparison have the data type <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NVARCHAR2</code>.</p>
<p>The results of comparing two character values using different comparison semantics may vary. The table that follows shows the results of comparing five pairs of character values using each comparison semantic. Usually, the results of blank-padded and nonpadded comparisons are the same. The last comparison in the table illustrates the differences between the blank-padded and nonpadded comparison semantics.</p>
<div class="inftblhruleinformal">
<table class="cellalignment5872" title="Blank-padded and Nonpadded character semantics" summary="The two columns show the relationship between two simple strings usin blank-padded and nopadded character semantics, respectively." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t39">Blank-Padded</th>
<th class="cellalignment5873" id="r1c2-t39">Nonpadded</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t39" headers="r1c1-t39"><code dir="ltr">&#39;ac&#39; &gt; &#39;ab&#39;</code></td>
<td class="cellalignment5869" headers="r2c1-t39 r1c2-t39"><code dir="ltr">&#39;ac&#39; &gt; &#39;ab&#39;</code></td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t39" headers="r1c1-t39"><code dir="ltr">&#39;ab&#39; &gt; &#39;a</code>&nbsp;&nbsp;<code dir="ltr">&#39;</code></td>
<td class="cellalignment5869" headers="r3c1-t39 r1c2-t39"><code dir="ltr">&#39;ab&#39; &gt; &#39;a &nbsp; &#39;</code></td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t39" headers="r1c1-t39"><code dir="ltr">&#39;ab&#39; &gt; &#39;a&#39;</code></td>
<td class="cellalignment5869" headers="r4c1-t39 r1c2-t39"><code dir="ltr">&#39;ab&#39; &gt; &#39;a&#39;</code></td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t39" headers="r1c1-t39"><code dir="ltr">&#39;ab&#39; = &#39;ab&#39;</code></td>
<td class="cellalignment5869" headers="r5c1-t39 r1c2-t39"><code dir="ltr">&#39;ab&#39; = &#39;ab&#39;</code></td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t39" headers="r1c1-t39"><code dir="ltr"><span class="codeinlinebold">&#39;a &#39; = &#39;a&#39;</span></code></td>
<td class="cellalignment5869" headers="r6c1-t39 r1c2-t39"><code dir="ltr"><span class="codeinlinebold">&#39;a &#39; &gt; &#39;a&#39;</span></code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p><a id="sthref278"></a><a id="sthref279"></a>Portions of the ASCII and EBCDIC character sets appear in <a href="#g196234">Table 2-8</a> and <a href="#g196333">Table 2-9</a>. Uppercase and lowercase letters are not equivalent. The numeric values for the characters of a character set may not match the linguistic sequence for a particular language.</p>
<div id="SQLRF51041" class="tblhruleformal">
<p class="titleintable"><a id="sthref280"></a><a id="g196234"></a>Table 2-8 ASCII Character Set</p>
<table class="cellalignment5872" title="ASCII Character Set" summary="The first column lists ASCII symbols and the second column gives the corresponding decimal values. The listing is continued in the third and fourth columns to conserve space." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5877" id="r1c1-t40">Symbol</th>
<th class="cellalignment5877" id="r1c2-t40">Decimal value</th>
<th class="cellalignment5877" id="r1c3-t40">Symbol</th>
<th class="cellalignment5877" id="r1c4-t40">Decimal value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t40" headers="r1c1-t40">
<p><code dir="ltr">blank</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t40 r1c2-t40">
<p><code dir="ltr">32</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t40 r1c3-t40">
<p><code dir="ltr">;</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t40 r1c4-t40">
<p><code dir="ltr">59</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t40" headers="r1c1-t40">
<p><code dir="ltr">!</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t40 r1c2-t40">
<p><code dir="ltr">33</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t40 r1c3-t40">
<p><code dir="ltr">&lt;</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t40 r1c4-t40">
<p><code dir="ltr">60</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t40" headers="r1c1-t40">
<p><code dir="ltr">&#34;</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t40 r1c2-t40">
<p><code dir="ltr">34</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t40 r1c3-t40">
<p><code dir="ltr">=</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t40 r1c4-t40">
<p><code dir="ltr">61</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t40" headers="r1c1-t40">
<p><code dir="ltr">#</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t40 r1c2-t40">
<p><code dir="ltr">35</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t40 r1c3-t40">
<p><code dir="ltr">&gt;</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t40 r1c4-t40">
<p><code dir="ltr">62</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t40" headers="r1c1-t40">
<p><code dir="ltr">$</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t40 r1c2-t40">
<p><code dir="ltr">36</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t40 r1c3-t40">
<p><code dir="ltr">?</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t40 r1c4-t40">
<p><code dir="ltr">63</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t40" headers="r1c1-t40">
<p><code dir="ltr">%</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t40 r1c2-t40">
<p><code dir="ltr">37</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t40 r1c3-t40">
<p><code dir="ltr">@</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t40 r1c4-t40">
<p><code dir="ltr">64</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t40" headers="r1c1-t40">
<p><code dir="ltr">&amp;</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t40 r1c2-t40">
<p><code dir="ltr">38</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t40 r1c3-t40">
<p><code dir="ltr">A-Z</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t40 r1c4-t40">
<p><code dir="ltr">65-90</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t40" headers="r1c1-t40">
<p><code dir="ltr">&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t40 r1c2-t40">
<p><code dir="ltr">39</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t40 r1c3-t40">
<p><code dir="ltr">[</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t40 r1c4-t40">
<p><code dir="ltr">91</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t40" headers="r1c1-t40">
<p><code dir="ltr">(</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t40 r1c2-t40">
<p><code dir="ltr">40</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t40 r1c3-t40">
<p><code dir="ltr">\</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t40 r1c4-t40">
<p><code dir="ltr">92</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t40" headers="r1c1-t40">
<p><code dir="ltr">)</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t40 r1c2-t40">
<p><code dir="ltr">41</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t40 r1c3-t40">
<p><code dir="ltr">]</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t40 r1c4-t40">
<p><code dir="ltr">93</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t40" headers="r1c1-t40">
<p><code dir="ltr">*</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t40 r1c2-t40">
<p><code dir="ltr">42</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t40 r1c3-t40">
<p><code dir="ltr">^</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t40 r1c4-t40">
<p><code dir="ltr">94</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t40" headers="r1c1-t40">
<p><code dir="ltr">+</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t40 r1c2-t40">
<p><code dir="ltr">43</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t40 r1c3-t40">
<p><code dir="ltr">_</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t40 r1c4-t40">
<p><code dir="ltr">95</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t40" headers="r1c1-t40">
<p><code dir="ltr">,</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t40 r1c2-t40">
<p><code dir="ltr">44</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t40 r1c3-t40">
<p><code dir="ltr">&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t40 r1c4-t40">
<p><code dir="ltr">96</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t40" headers="r1c1-t40">
<p><code dir="ltr">-</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t40 r1c2-t40">
<p><code dir="ltr">45</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t40 r1c3-t40">
<p><code dir="ltr">a-z</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t40 r1c4-t40">
<p><code dir="ltr">97-122</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t40" headers="r1c1-t40">
<p><code dir="ltr">.</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t40 r1c2-t40">
<p><code dir="ltr">46</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t40 r1c3-t40">
<p><code dir="ltr">{</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t40 r1c4-t40">
<p><code dir="ltr">123</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r17c1-t40" headers="r1c1-t40">
<p><code dir="ltr">/</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t40 r1c2-t40">
<p><code dir="ltr">47</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t40 r1c3-t40">
<p><code dir="ltr">|</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t40 r1c4-t40">
<p><code dir="ltr">124</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r18c1-t40" headers="r1c1-t40">
<p><code dir="ltr">0-9</code></p>
</td>
<td class="cellalignment5869" headers="r18c1-t40 r1c2-t40">
<p><code dir="ltr">48-57</code></p>
</td>
<td class="cellalignment5869" headers="r18c1-t40 r1c3-t40">
<p><code dir="ltr">}</code></p>
</td>
<td class="cellalignment5869" headers="r18c1-t40 r1c4-t40">
<p><code dir="ltr">125</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r19c1-t40" headers="r1c1-t40">
<p><code dir="ltr">:</code></p>
</td>
<td class="cellalignment5869" headers="r19c1-t40 r1c2-t40">
<p><code dir="ltr">58</code></p>
</td>
<td class="cellalignment5869" headers="r19c1-t40 r1c3-t40">
<p><code dir="ltr">~</code></p>
</td>
<td class="cellalignment5869" headers="r19c1-t40 r1c4-t40">
<p><code dir="ltr">126</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<div id="SQLRF51042" class="tblhruleformal">
<p class="titleintable"><a id="sthref281"></a><a id="g196333"></a>Table 2-9 EBCDIC Character Set</p>
<table class="cellalignment5872" title="EBCDIC Character Set" summary="The first column lists EBCDIC symbols and the second column gives the corresponding decimal values. The listing is continued in the third and fourth columns to conserve space." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5877" id="r1c1-t41">Symbol</th>
<th class="cellalignment5877" id="r1c2-t41">Decimal value</th>
<th class="cellalignment5877" id="r1c3-t41">Symbol</th>
<th class="cellalignment5877" id="r1c4-t41">Decimal value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t41" headers="r1c1-t41">
<p><code dir="ltr">blank</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t41 r1c2-t41">
<p><code dir="ltr">64</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t41 r1c3-t41">
<p><code dir="ltr">%</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t41 r1c4-t41">
<p><code dir="ltr">108</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t41" headers="r1c1-t41">
<p><code dir="ltr">&cent;</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t41 r1c2-t41">
<p><code dir="ltr">74</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t41 r1c3-t41">
<p><code dir="ltr">_</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t41 r1c4-t41">
<p><code dir="ltr">109</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t41" headers="r1c1-t41">
<p><code dir="ltr">.</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t41 r1c2-t41">
<p><code dir="ltr">75</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t41 r1c3-t41">
<p><code dir="ltr">&gt;</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t41 r1c4-t41">
<p><code dir="ltr">110</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t41" headers="r1c1-t41">
<p><code dir="ltr">&lt;</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t41 r1c2-t41">
<p><code dir="ltr">76</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t41 r1c3-t41">
<p><code dir="ltr">?</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t41 r1c4-t41">
<p><code dir="ltr">111</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t41" headers="r1c1-t41">
<p><code dir="ltr">(</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t41 r1c2-t41">
<p><code dir="ltr">77</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t41 r1c3-t41">
<p><code dir="ltr">:</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t41 r1c4-t41">
<p><code dir="ltr">122</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t41" headers="r1c1-t41">
<p><code dir="ltr">+</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t41 r1c2-t41">
<p><code dir="ltr">78</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t41 r1c3-t41">
<p><code dir="ltr">#</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t41 r1c4-t41">
<p><code dir="ltr">123</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t41" headers="r1c1-t41">
<p><code dir="ltr">|</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t41 r1c2-t41">
<p><code dir="ltr">79</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t41 r1c3-t41">
<p><code dir="ltr">@</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t41 r1c4-t41">
<p><code dir="ltr">124</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t41" headers="r1c1-t41">
<p><code dir="ltr">&amp;</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t41 r1c2-t41">
<p><code dir="ltr">80</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t41 r1c3-t41">
<p><code dir="ltr">&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t41 r1c4-t41">
<p><code dir="ltr">125</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t41" headers="r1c1-t41">
<p><code dir="ltr">!</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t41 r1c2-t41">
<p><code dir="ltr">90</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t41 r1c3-t41">
<p><code dir="ltr">=</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t41 r1c4-t41">
<p><code dir="ltr">126</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t41" headers="r1c1-t41">
<p><code dir="ltr">$</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t41 r1c2-t41">
<p><code dir="ltr">91</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t41 r1c3-t41">
<p><code dir="ltr">&#34;</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t41 r1c4-t41">
<p><code dir="ltr">127</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t41" headers="r1c1-t41">
<p><code dir="ltr">*</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t41 r1c2-t41">
<p><code dir="ltr">92</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t41 r1c3-t41">
<p><code dir="ltr">a-i</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t41 r1c4-t41">
<p><code dir="ltr">129-137</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t41" headers="r1c1-t41">
<p><code dir="ltr">)</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t41 r1c2-t41">
<p><code dir="ltr">93</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t41 r1c3-t41">
<p><code dir="ltr">j-r</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t41 r1c4-t41">
<p><code dir="ltr">145-153</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t41" headers="r1c1-t41">
<p><code dir="ltr">;</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t41 r1c2-t41">
<p><code dir="ltr">94</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t41 r1c3-t41">
<p><code dir="ltr">s-z</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t41 r1c4-t41">
<p><code dir="ltr">162-169</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t41" headers="r1c1-t41">
<p><code dir="ltr">&yuml;</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t41 r1c2-t41">
<p><code dir="ltr">95</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t41 r1c3-t41">
<p><code dir="ltr">A-I</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t41 r1c4-t41">
<p><code dir="ltr">193-201</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t41" headers="r1c1-t41">
<p><code dir="ltr">-</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t41 r1c2-t41">
<p><code dir="ltr">96</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t41 r1c3-t41">
<p><code dir="ltr">J-R</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t41 r1c4-t41">
<p><code dir="ltr">209-217</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r17c1-t41" headers="r1c1-t41">
<p><code dir="ltr">/</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t41 r1c2-t41">
<p><code dir="ltr">97</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t41 r1c3-t41">
<p><code dir="ltr">S-Z</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t41 r1c4-t41">
<p><code dir="ltr">226-233</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="i46840"></a>
<div id="SQLRF51043" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Object Values <a id="sthref282"></a><a id="sthref283"></a><a id="sthref284"></a></h2>
<p>Object values are compared using one of two comparison functions: <code dir="ltr">MAP</code> and <code dir="ltr">ORDER</code>. Both functions compare object type instances, but they are quite different from one another. These functions must be specified as part of any object type that will be compared with other object types.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_8001.htm#BABHJHEB">CREATE TYPE</a> for a description of <code dir="ltr">MAP</code> and <code dir="ltr">ORDER</code> methods and the values they return</div>
</div>
<!-- class="sect2" -->
<div id="SQLRF51044" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref285"></a>
<h2 class="sect2">Varrays and Nested Tables <a id="sthref286"></a><a id="sthref287"></a><a id="sthref288"></a><a id="sthref289"></a></h2>
<p>Comparison of nested tables is described in <a href="conditions002.htm#i1033286">&#34;Comparison Conditions&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<div id="SQLRF51045" class="sect2"><a id="sthref290"></a>
<h2 class="sect2">Data Type Precedence</h2>
<p>Oracle uses data type precedence to determine implicit data type conversion, which is discussed in the section that follows. Oracle data types take the following precedence:</p>
<ul>
<li>
<p>Datetime and interval data types</p>
</li>
<li>
<p><code dir="ltr">BINARY_DOUBLE</code></p>
</li>
<li>
<p><code dir="ltr">BINARY_FLOAT</code></p>
</li>
<li>
<p><code dir="ltr">NUMBER</code></p>
</li>
<li>
<p>Character data types</p>
</li>
<li>
<p>All other built-in data types</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i46862"></a>
<div id="SQLRF00214" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Data Conversion <a id="sthref291"></a></h2>
<p>Generally an expression cannot contain values of different data types. For example, an expression cannot multiply 5 by 10 and then add &#39;JAMES&#39;. However, Oracle supports both implicit and explicit conversion of values from one data type to another.</p>
<a id="i53062"></a>
<div id="SQLRF51046" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Implicit and Explicit Data Conversion <a id="sthref292"></a><a id="sthref293"></a><a id="sthref294"></a><a id="sthref295"></a></h3>
<p>Oracle recommends that you specify explicit conversions, rather than rely on implicit or automatic conversions, for these reasons:</p>
<ul>
<li>
<p>SQL statements are easier to understand when you use explicit data type conversion functions.</p>
</li>
<li>
<p>Implicit data type conversion can have a negative impact on performance, especially if the data type of a column value is converted to that of a constant rather than the other way around.</p>
</li>
<li>
<p>Implicit conversion depends on the context in which it occurs and may not work the same way in every case. For example, implicit conversion from a datetime value to a <code dir="ltr">VARCHAR2</code> value may return an unexpected year depending on the value of the <code dir="ltr">NLS_DATE_FORMAT</code> parameter.</p>
</li>
<li>
<p>Algorithms for implicit conversion are subject to change across software releases and among Oracle products. Behavior of explicit conversions is more predictable.</p>
</li>
<li>
<p>If implicit data type conversion occurs in an index expression, then Oracle Database might not use the index because it is defined for the pre-conversion data type. This can have a negative impact on performance.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i163326"></a>
<div id="SQLRF51047" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Implicit Data Conversion <a id="sthref296"></a><a id="sthref297"></a></h3>
<p>Oracle Database automatically converts a value from one data type to another when such a conversion makes sense.</p>
<p><a href="#g195937">Table 2-10</a> is a matrix of Oracle implicit conversions. The table shows all possible conversions, without regard to the direction of the conversion or the context in which it is made. The rules governing these details follow the table.</p>
<div id="SQLRF51048" class="tblhruleformalwidemax">
<p class="titleintable"><a id="sthref298"></a><a id="g195937"></a>Table 2-10 Implicit Type Conversion Matrix</p>
<table class="cellalignment5872" title="Implicit Type Conversion Matrix" summary="This matrix lists the datatypes in the first column and in the header cell for each subsequent column. An X in a cell indicates implicit conversion of the datatypes named in the header of that column and column 1 of that row." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t43"></th>
<th class="cellalignment5873" id="r1c2-t43">CHAR</th>
<th class="cellalignment5873" id="r1c3-t43">VARCHAR2</th>
<th class="cellalignment5873" id="r1c4-t43">NCHAR</th>
<th class="cellalignment5873" id="r1c5-t43">NVARCHAR2</th>
<th class="cellalignment5873" id="r1c6-t43">DATE</th>
<th class="cellalignment5873" id="r1c7-t43">DATETIME/INTERVAL</th>
<th class="cellalignment5873" id="r1c8-t43">NUMBER</th>
<th class="cellalignment5873" id="r1c9-t43">BINARY_FLOAT</th>
<th class="cellalignment5873" id="r1c10-t43">BINARY_DOUBLE</th>
<th class="cellalignment5873" id="r1c11-t43">LONG</th>
<th class="cellalignment5873" id="r1c12-t43">RAW</th>
<th class="cellalignment5873" id="r1c13-t43">ROWID</th>
<th class="cellalignment5873" id="r1c14-t43">CLOB</th>
<th class="cellalignment5873" id="r1c15-t43">BLOB</th>
<th class="cellalignment5873" id="r1c16-t43">NCLOB</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">CHAR</span></p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c2-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c6-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c7-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c8-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c9-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c10-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c12-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c13-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c14-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c15-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r2c1-t43 r1c16-t43">
<p>X</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">VARCHAR2</span></p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c3-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c6-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c7-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c8-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c9-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c10-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c12-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c13-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c14-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r3c1-t43 r1c16-t43">
<p>X</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">NCHAR</span></p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c4-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c6-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c7-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c8-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c9-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c10-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c12-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c13-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c14-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r4c1-t43 r1c16-t43">
<p>X</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">NVARCHAR2</span></p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c5-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c6-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c7-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c8-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c9-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c10-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c12-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c13-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c14-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r5c1-t43 r1c16-t43">
<p>X</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">DATE</span></p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r6c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">DATETIME/ INTERVAL</span></p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r7c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">NUMBER</span></p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c9-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c10-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r8c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">BINARY_FLOAT</span></p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c8-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c10-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r9c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">BINARY_DOUBLE</span></p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c8-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c9-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r10c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">LONG</span></p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c7-t43">
<p>X<a id="sthref299" href="#sthref299" onclick="footdisplay(1,&#34;You cannot convert \u003ccode dir=\&#34;ltr\&#34;\u003eLONG\u003c/code\u003e to \u003ccode dir=\&#34;ltr\&#34;\u003eINTERVAL\u003c/code\u003e directly, but you can convert \u003ccode dir=\&#34;ltr\&#34;\u003eLONG\u003c/code\u003e to \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2\u003c/code\u003e using \u003ccode dir=\&#34;ltr\&#34;\u003eTO_CHAR\u003c/code\u003e(\u003ccode dir=\&#34;ltr\&#34;\u003e\u003cspan class=\&#34;codeinlineitalic\&#34;\u003einterval\u003c/span\u003e\u003c/code\u003e), and then convert the resulting \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2\u003c/code\u003e value to \u003ccode dir=\&#34;ltr\&#34;\u003eINTERVAL\u003c/code\u003e.&#34;)"><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c12-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c14-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r11c1-t43 r1c16-t43">
<p>X</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">RAW</span></p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c15-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r12c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">ROWID</span></p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r13c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">CLOB</span></p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r14c1-t43 r1c16-t43">
<p>X</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">BLOB</span></p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c2-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c3-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c4-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c5-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c11-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c12-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c14-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r15c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t43" headers="r1c1-t43">
<p><span class="syntaxinlinebold">NCLOB</span></p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c2-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c3-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c4-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c5-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c6-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c7-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c8-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c9-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c10-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c11-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c12-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c13-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c14-t43">
<p>X</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c15-t43">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r16c1-t43 r1c16-t43">
<p>--</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwidemax" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>You cannot convert <code dir="ltr">LONG</code> to <code dir="ltr">INTERVAL</code> directly, but you can convert <code dir="ltr">LONG</code> to <code dir="ltr">VARCHAR2</code> using <code dir="ltr">TO_CHAR</code>(<code dir="ltr"><span class="codeinlineitalic">interval</span></code>), and then convert the resulting <code dir="ltr">VARCHAR2</code> value to <code dir="ltr">INTERVAL</code>.</p>
<p>The following rules govern implicit data type conversions:</p>
<ul>
<li>
<p>During <code dir="ltr">INSERT</code> and <code dir="ltr">UPDATE</code> operations, Oracle converts the value to the data type of the affected column.</p>
</li>
<li>
<p>During <code dir="ltr">SELECT</code> <code dir="ltr">FROM</code> operations, Oracle converts the data from the column to the type of the target variable.</p>
</li>
<li>
<p>When manipulating numeric values, Oracle usually adjusts precision and scale to allow for maximum capacity. In such cases, the numeric data type resulting from such operations can differ from the numeric data type found in the underlying tables.</p>
</li>
<li>
<p>When comparing a character value with a numeric value, Oracle converts the character data to a numeric value.</p>
</li>
<li>
<p>Conversions between character values or <code dir="ltr">NUMBER</code> values and floating-point number values can be inexact, because the character types and <code dir="ltr">NUMBER</code> use decimal precision to represent the numeric value, and the floating-point numbers use binary precision.</p>
</li>
<li>
<p>When converting a <code dir="ltr">CLOB</code> value into a character data type such as <code dir="ltr">VARCHAR2</code>, or converting <code dir="ltr">BLOB</code> to <code dir="ltr">RAW</code> data, if the data to be converted is larger than the target data type, then the database returns an error.</p>
</li>
<li>
<p>During conversion from a timestamp value to a <code dir="ltr">DATE</code> value, the fractional seconds portion of the timestamp value is truncated. This behavior differs from earlier releases of Oracle Database, when the fractional seconds portion of the timestamp value was rounded.</p>
</li>
<li>
<p>Conversions from <code dir="ltr">BINARY_FLOAT</code> to <code dir="ltr">BINARY_DOUBLE</code> are exact.</p>
</li>
<li>
<p>Conversions from <code dir="ltr">BINARY_DOUBLE</code> to <code dir="ltr">BINARY_FLOAT</code> are inexact if the <code dir="ltr">BINARY_DOUBLE</code> value uses more bits of precision that supported by the <code dir="ltr">BINARY_FLOAT</code>.</p>
</li>
<li>
<p>When comparing a character value with a <code dir="ltr">DATE</code> value, Oracle converts the character data to <code dir="ltr">DATE</code>.</p>
</li>
<li>
<p>When you use a SQL function or operator with an argument of a data type other than the one it accepts, Oracle converts the argument to the accepted data type.</p>
</li>
<li>
<p>When making assignments, Oracle converts the value on the right side of the equal sign (=) to the data type of the target of the assignment on the left side.</p>
</li>
<li>
<p>During concatenation operations, Oracle converts from noncharacter data types to <code dir="ltr">CHAR</code> or <code dir="ltr">NCHAR</code>.</p>
</li>
<li>
<p>During arithmetic operations on and comparisons between character and noncharacter data types, Oracle converts from any character data type to a numeric, date, or rowid, as appropriate. In arithmetic operations between <code dir="ltr">CHAR</code>/<code dir="ltr">VARCHAR2</code> and <code dir="ltr">NCHAR</code>/<code dir="ltr">NVARCHAR2</code>, Oracle converts to a <code dir="ltr">NUMBER</code>.</p>
</li>
<li>
<p>Most SQL character functions are enabled to accept <code dir="ltr">CLOB</code>s as parameters, and Oracle performs implicit conversions between <code dir="ltr">CLOB</code> and character types. Therefore, functions that are not yet enabled for <code dir="ltr">CLOB</code>s can accept <code dir="ltr">CLOB</code>s through implicit conversion. In such cases, Oracle converts the <code dir="ltr">CLOB</code>s to <code dir="ltr">CHAR</code> or <code dir="ltr">VARCHAR2</code> before the function is invoked. If the <code dir="ltr">CLOB</code> is larger than 4000 bytes, then Oracle converts only the first 4000 bytes to <code dir="ltr">CHAR</code>.</p>
</li>
<li>
<p>When converting <code dir="ltr">RAW</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> data to or from character data, the binary data is represented in hexadecimal form, with one hexadecimal character representing every four bits of <code dir="ltr">RAW</code> data. Refer to <a href="sql_elements001.htm#i46018">&#34;RAW and LONG RAW Data Types&#34;</a> for more information.</p>
</li>
<li>
<p><a id="sthref300"></a>Comparisons between <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> and between <code dir="ltr">NCHAR</code> and <code dir="ltr">NVARCHAR2</code> types may entail different character sets. The default direction of conversion in such cases is from the database character set to the national character set. <a href="#g196434">Table 2-11</a> shows the direction of implicit conversions between different character types.</p>
</li>
</ul>
<div id="SQLRF51049" class="tblhruleformal">
<p class="titleintable"><a id="sthref301"></a><a id="g196434"></a>Table 2-11 Conversion Direction of Different Character Types</p>
<table class="cellalignment5872" title="Conversion Direction of Different Character Types" summary="The first column shows the source datatype. The header cells of subsequent column show the destination datatype. The cells show the result of the implicit conversion from each source to each destination datatype." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t44"><br/></th>
<th class="cellalignment5873" id="r1c2-t44">to CHAR</th>
<th class="cellalignment5873" id="r1c3-t44">to VARCHAR2</th>
<th class="cellalignment5873" id="r1c4-t44">to NCHAR</th>
<th class="cellalignment5873" id="r1c5-t44">to NVARCHAR2</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t44" headers="r1c1-t44">
<p><span class="syntaxinlinebold">from CHAR</span></p>
</td>
<td class="cellalignment5869" headers="r2c1-t44 r1c2-t44">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r2c1-t44 r1c3-t44">
<p><code dir="ltr">VARCHAR2</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t44 r1c4-t44">
<p><code dir="ltr">NCHAR</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t44 r1c5-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t44" headers="r1c1-t44">
<p><span class="syntaxinlinebold">from VARCHAR2</span></p>
</td>
<td class="cellalignment5869" headers="r3c1-t44 r1c2-t44">
<p><code dir="ltr">VARCHAR2</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t44 r1c3-t44">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r3c1-t44 r1c4-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t44 r1c5-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t44" headers="r1c1-t44">
<p><span class="syntaxinlinebold">from NCHAR</span></p>
</td>
<td class="cellalignment5869" headers="r4c1-t44 r1c2-t44">
<p><code dir="ltr">NCHAR</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t44 r1c3-t44">
<p><code dir="ltr">NCHAR</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t44 r1c4-t44">
<p>--</p>
</td>
<td class="cellalignment5869" headers="r4c1-t44 r1c5-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t44" headers="r1c1-t44">
<p><span class="syntaxinlinebold">from NVARCHAR2</span></p>
</td>
<td class="cellalignment5869" headers="r5c1-t44 r1c2-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t44 r1c3-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t44 r1c4-t44">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t44 r1c5-t44">
<p>--</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p>User-defined types such as collections cannot be implicitly converted, but must be explicitly converted using <code dir="ltr">CAST</code> ... <code dir="ltr">MULTISET</code>.</p>
</div>
<!-- class="sect3" -->
<div id="SQLRF51050" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref302"></a>
<h3 class="sect3">Implicit Data Conversion Examples<a id="sthref303"></a><a id="sthref304"></a></h3>
<p><a id="SQLRF51051"></a><span class="subhead3">Text Literal Example&nbsp;</span>The text literal &#39;10&#39; has data type <code dir="ltr">CHAR</code>. Oracle implicitly converts it to the <code dir="ltr">NUMBER</code> data type if it appears in a numeric expression as in the following statement:</p>
<pre dir="ltr">SELECT salary + &#39;10&#39;
  FROM employees;
</pre>
<p><a id="SQLRF51052"></a><span class="subhead3">Character and Number Values Example&nbsp;</span>When a condition compares a character value and a <code dir="ltr">NUMBER</code> value, Oracle implicitly converts the character value to a <code dir="ltr">NUMBER</code> value, rather than converting the <code dir="ltr">NUMBER</code> value to a character value. In the following statement, Oracle implicitly converts &#39;200&#39; to 200:</p>
<pre dir="ltr">SELECT last_name
  FROM employees
  WHERE employee_id = &#39;200&#39;;
</pre>
<p><a id="SQLRF51053"></a><span class="subhead3">Date Example&nbsp;</span>In the following statement, Oracle implicitly converts &#39;<code dir="ltr">24-JUN-06</code>&#39; to a <code dir="ltr">DATE</code> value using the default date format &#39;<code dir="ltr">DD-MON-YY</code>&#39;:</p>
<pre dir="ltr">SELECT last_name
  FROM employees 
  WHERE hire_date = &#39;24-JUN-06&#39;;
</pre></div>
<!-- class="sect3" -->
<div id="SQLRF51054" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref305"></a>
<h3 class="sect3">Explicit Data Conversion <a id="sthref306"></a><a id="sthref307"></a></h3>
<p>You can explicitly specify data type conversions using SQL conversion functions. <a href="#g195600">Table 2-12</a> shows SQL functions that explicitly convert a value from one data type to another.</p>
<p>You cannot specify <code dir="ltr">LONG</code> and <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> values in cases in which Oracle can perform implicit data type conversion. For example, <code dir="ltr">LONG</code> and <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> values cannot appear in expressions with functions or operators. Refer to <a href="sql_elements001.htm#i45885">&#34;LONG Data Type&#34;</a> for information on the limitations on <code dir="ltr">LONG</code> and <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> data types.</p>
<div id="SQLRF51055" class="tblhruleformalwidemax">
<p class="titleintable"><a id="sthref308"></a><a id="g195600"></a>Table 2-12 Explicit Type Conversions</p>
<table class="cellalignment5872" title="Explicit Type Conversions" summary="The first column contains the source datatypes. The header cells of subsequent columns show the destination datatypes. The cells contain the bulit-in functions that can be used to explicitly convert from each source datatype to each destination datatype." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t45"><br/></th>
<th class="cellalignment5873" id="r1c2-t45">to CHAR,VARCHAR2,NCHAR,NVARCHAR2</th>
<th class="cellalignment5873" id="r1c3-t45">to NUMBER</th>
<th class="cellalignment5873" id="r1c4-t45">to Datetime/Interval</th>
<th class="cellalignment5873" id="r1c5-t45">to RAW</th>
<th class="cellalignment5873" id="r1c6-t45">to ROWID</th>
<th class="cellalignment5873" id="r1c7-t45">to LONG,LONG RAW</th>
<th class="cellalignment5873" id="r1c8-t45">to CLOB, NCLOB,BLOB</th>
<th class="cellalignment5873" id="r1c9-t45">to BINARY_FLOAT</th>
<th class="cellalignment5873" id="r1c10-t45">to BINARY_DOUBLE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from CHAR, VARCHAR2, NCHAR, NVARCHAR2</span></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR (char.)</code></p>
<p><code dir="ltr">TO_NCHAR (char.)</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c3-t45">
<p><code dir="ltr">TO_NUMBER</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c4-t45">
<p><code dir="ltr">TO_DATE</code></p>
<p><code dir="ltr">TO_TIMESTAMP</code></p>
<p><code dir="ltr">TO_TIMESTAMP_TZ</code></p>
<p><code dir="ltr">TO_YMINTERVAL</code></p>
<p><code dir="ltr">TO_DSINTERVAL</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c5-t45">
<p><code dir="ltr">HEXTORAW</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c6-t45">
<p><code dir="ltr">CHARTO&shy;=ROWID</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c8-t45">
<p><code dir="ltr">TO_CLOB</code></p>
<p><code dir="ltr">TO_NCLOB</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c9-t45">
<p><code dir="ltr">TO_BINARY_FLOAT</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t45 r1c10-t45">
<p><code dir="ltr">TO_BINARY_DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from NUMBER</span></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR (number)</code></p>
<p><code dir="ltr">TO_NCHAR (number)</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c4-t45">
<p><code dir="ltr">TO_DATE</code></p>
<p><code dir="ltr">NUMTOYM- INTERVAL</code></p>
<p><code dir="ltr">NUMTODS- INTERVAL</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c8-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c9-t45">
<p><code dir="ltr">TO_BINARY_FLOAT</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t45 r1c10-t45">
<p><code dir="ltr">TO_BINARY_DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from Datetime/ Interval</span></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR (date)</code></p>
<p><code dir="ltr">TO_NCHAR (datetime)</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c8-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c9-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t45 r1c10-t45">
<p><code dir="ltr">--</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from RAW</span></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c2-t45">
<p><code dir="ltr">RAWTOHEX</code></p>
<p><code dir="ltr">RAWTONHEX</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c8-t45">
<p><code dir="ltr">TO_BLOB</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c9-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t45 r1c10-t45">
<p><code dir="ltr">--</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from ROWID</span></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c2-t45">
<p><code dir="ltr">ROWIDTOCHAR</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c8-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c9-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t45 r1c10-t45">
<p><code dir="ltr">--</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from LONG / LONG RAW</span></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c2-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c8-t45">
<p><code dir="ltr">TO_LOB</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c9-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t45 r1c10-t45">
<p><code dir="ltr">--</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from CLOB, NCLOB, BLOB</span></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR</code></p>
<p><code dir="ltr">TO_NCHAR</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c8-t45">
<p><code dir="ltr">TO_CLOB</code></p>
<p><code dir="ltr">TO_NCLOB</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c9-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t45 r1c10-t45">
<p><code dir="ltr">--</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from CLOB, NCLOB, BLOB</span></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR</code></p>
<p><code dir="ltr">TO_NCHAR</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c3-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c8-t45">
<p><code dir="ltr">TO_CLOB</code></p>
<p><code dir="ltr">TO_NCLOB</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c9-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t45 r1c10-t45">
<p><code dir="ltr">--</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from BINARY_FLOAT</span></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR (char.)</code></p>
<p><code dir="ltr">TO_NCHAR (char.)</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c3-t45">
<p><code dir="ltr">TO_NUMBER</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c8-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c9-t45">
<p><code dir="ltr">TO_BINARY_FLOAT</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t45 r1c10-t45">
<p><code dir="ltr">TO_BINARY_DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t45" headers="r1c1-t45">
<p><span class="syntaxinlinebold">from BINARY_DOUBLE</span></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c2-t45">
<p><code dir="ltr">TO_CHAR (char.)</code></p>
<p><code dir="ltr">TO_NCHAR (char.)</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c3-t45">
<p><code dir="ltr">TO_NUMBER</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c4-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c5-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c6-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c7-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c8-t45">
<p><code dir="ltr">--</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c9-t45">
<p><code dir="ltr">TO_BINARY_FLOAT</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t45 r1c10-t45">
<p><code dir="ltr">TO_BINARY_DOUBLE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwidemax" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="functions002.htm#i88892">&#34;Conversion Functions&#34;</a> for details on all of the explicit conversion functions</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHJCCEB"></a>
<div id="SQLRF51056" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Security Considerations for Data Conversion</h2>
<p>When a datetime value is converted to text, either by implicit conversion or by explicit conversion that does not specify a format model, the format model is defined by one of the globalization session parameters. Depending on the source data type, the parameter name is <code dir="ltr">NLS_DATE_FORMAT</code>, <code dir="ltr">NLS_TIMESTAMP_FORMAT</code>, or <code dir="ltr">NLS_TIMESTAMP_TZ_FORMAT</code>. The values of these parameters can be specified in the client environment or in an <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> statement.</p>
<p>The dependency of format models on session parameters can have a negative impact on database security when conversion without an explicit format model is applied to a datetime value that is being concatenated to text of a dynamic SQL statement. Dynamic SQL statements are those statements whose text is concatenated from fragments before being passed to a database for execution. Dynamic SQL is frequently associated with the built-in PL/SQL package <code dir="ltr">DBMS_SQL</code> or with the PL/SQL statement <code dir="ltr">EXECUTE</code> <code dir="ltr">IMMEDIATE</code>, but these are not the only places where dynamically constructed SQL text may be passed as argument. For example:</p>
<pre dir="ltr">EXECUTE IMMEDIATE
&#39;SELECT last_name FROM employees WHERE hire_date &gt; &#39;&#39;&#39; || <span class="italic">start_date</span> || &#39;&#39;&#39;&#39;;
</pre>
<p>where <code dir="ltr"><span class="codeinlineitalic">start_date</span></code> has the data type <code dir="ltr">DATE</code>.</p>
<p>In the above example, the value of <code dir="ltr"><span class="codeinlineitalic">start_date</span></code> is converted to text using a format model specified in the session parameter <code dir="ltr">NLS_DATE_FORMAT</code>. The result is concatenated into SQL text. A datetime format model can consist simply of literal text enclosed in double quotation marks. Therefore, any user who can explicitly set globalization parameters for a session can decide what text is produced by the above conversion. If the SQL statement is executed by a PL/SQL procedure, the procedure becomes vulnerable to SQL injection through the session parameter. If the procedure runs with definer&#39;s rights, with higher privileges than the session itself, the user can gain unauthorized access to sensitive data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS01109" href="../LNPLS/dynamic.htm#LNPLS01109"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for further examples and for recommendations on avoiding this security risk</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
This security risk also applies to middle-tier applications that construct SQL text from datetime values converted to text by the database or by OCI datetime functions. Those applications are vulnerable if session globalization parameters are obtained from a user preference.</div>
<p>Implicit and explicit conversion for numeric values may also suffer from the analogous problem, as the conversion result may depend on the session parameter <code dir="ltr">NLS_NUMERIC_CHARACTERS</code>. This parameter defines the decimal and group separator characters. If the decimal separator is defined to be the quotation mark or the double quotation mark, some potential for SQL injection emerges.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink NLSPG003" href="../NLSPG/ch3globenv.htm#NLSPG003"><span class="italic">Oracle Database Globalization Support Guide</span></a> for detailed descriptions of the session globalization parameters</p>
</li>
<li>
<p><a href="sql_elements004.htm#i34510">&#34;Format Models&#34;</a> for information on the format models</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="sql_elements001.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="sql_elements003.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>