<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103563"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Format%20Models"></a><title>Format Models</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:52:5Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="sql_elements003.htm" title="Previous" type="text/html"/>
<link rel="Next" href="sql_elements005.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/555</span> <!-- End Header -->
<script>
<!-- // <![CDATA[
window.name='sql_elements004'
// ]]> -->
</script> <script>
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote&nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() { var height = msg.document.getElementById('footnote').offsetHeight; msg.resizeTo(598, height + 100); }, 100);
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript><a id="i34510"></a>
<div id="SQLRF00210" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Format Models <a id="sthref335"></a><a id="sthref336"></a><a id="sthref337"></a><a id="sthref338"></a></h1>
<p>A <span class="bold">format model</span> is a character literal that describes the format of datetime or numeric data stored in a character string. A format model does not change the internal representation of the value in the database. When you convert a character string into a date or number, a format model determines how Oracle Database interprets the string. In SQL statements, you can use a format model as an argument of the <code>TO_CHAR</code> and <code dir="ltr">TO_DATE</code> functions to specify:</p>
<ul>
<li>
<p>The format for Oracle to use to return a value from the database</p>
</li>
<li>
<p>The format for a value you have specified for Oracle to store in the database</p>
</li>
</ul>
<p>For example:</p>
<ul>
<li>
<p>The datetime format model for the string &#39;<code dir="ltr">17:45:29</code>&#39; is &#39;<code dir="ltr">HH24:MI:SS</code>&#39;.</p>
</li>
<li>
<p>The datetime format model for the string &#39;<code dir="ltr">11-Nov-1999</code>&#39; is &#39;<code dir="ltr">DD-Mon-YYYY</code>&#39;.</p>
</li>
<li>
<p>The number format model for the string &#39;<code dir="ltr">$2,304.25</code>&#39; is &#39;<code dir="ltr">$9,999.99</code>&#39;.</p>
</li>
</ul>
<p>For lists of number and datetime format model elements, see <a href="#BABIGFBA">Table 2-13, &#34;Number Format Elements&#34;</a> and <a href="#CDEHIFJA">Table 2-15, &#34;Datetime Format Elements&#34;</a>.</p>
<p>The values of some formats are determined by the value of initialization parameters. For such formats, you can specify the characters returned by these format elements implicitly using the initialization parameter <code dir="ltr">NLS_TERRITORY</code>. You can change the default date format for your session with the <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_2015.htm#i2231814">ALTER SESSION</a> for information on changing the values of these parameters and <a href="#i165520">Format Model Examples</a> for examples of using format models</p>
</li>
<li>
<p><a href="functions216.htm#i1009324">TO_CHAR (datetime)</a>, <a href="functions217.htm#i79330">TO_CHAR (number)</a>, and <a href="functions219.htm#i1003589">TO_DATE</a></p>
</li>
<li>
<p><a class="olink REFRN10128" href="../REFRN/GUID-161ABCAF-6095-4991-929A-B991A3642782.htm#REFRN10128"><span class="italic">Oracle Database Reference</span></a> and <a class="olink NLSPG003" href="../NLSPG/ch3globenv.htm#NLSPG003"><span class="italic">Oracle Database Globalization Support Guide</span></a> for information on these parameters</p>
</li>
</ul>
</div>
<p>This remainder of this section describes how to use the following format models:</p>
<ul>
<li>
<p><a href="#i34570">Number Format Models</a></p>
</li>
<li>
<p><a href="#i34924">Datetime Format Models</a></p>
</li>
<li>
<p><a href="#i170559">Format Model Modifiers</a></p>
</li>
</ul>
<a id="i34570"></a>
<div id="SQLRF00211" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Number Format Models <a id="sthref339"></a><a id="sthref340"></a><a id="sthref341"></a><a id="sthref342"></a><a id="sthref343"></a><a id="sthref344"></a><a id="sthref345"></a></h2>
<p>You can use number format models in the following functions:</p>
<ul>
<li>
<p>In the <code dir="ltr">TO_CHAR</code> function to translate a value of <code dir="ltr">NUMBER</code>, <code dir="ltr">BINARY_FLOAT</code>, or <code dir="ltr">BINARY_DOUBLE</code> data type to <code dir="ltr">VARCHAR2</code> data type</p>
</li>
<li>
<p>In the <code dir="ltr">TO_NUMBER</code> function to translate a value of <code dir="ltr">CHAR</code> or <code dir="ltr">VARCHAR2</code> data type to <code dir="ltr">NUMBER</code> data type</p>
</li>
<li>
<p>In the <code dir="ltr">TO_BINARY_FLOAT</code> and <code dir="ltr">TO_BINARY_DOUBLE</code> functions to translate <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> expressions to <code dir="ltr">BINARY_FLOAT</code> or <code dir="ltr">BINARY_DOUBLE</code> values</p>
</li>
</ul>
<p>All number format models cause the number to be rounded to the specified number of significant digits. If a value has more significant digits to the left of the decimal place than are specified in the format, then pound signs (#) replace the value. This event typically occurs when you are using <code dir="ltr">TO_CHAR</code> with a restrictive number format string, causing a rounding operation.</p>
<ul>
<li>
<p>If a positive <code dir="ltr">NUMBER</code> value is extremely large and cannot be represented in the specified format, then the infinity sign (~) replaces the value. Likewise, if a negative <code dir="ltr">NUMBER</code> value is extremely small and cannot be represented by the specified format, then the negative infinity sign replaces the value (-~).</p>
</li>
<li>
<p>If a <code dir="ltr">BINARY_FLOAT</code> or <code dir="ltr">BINARY_DOUBLE</code> value is converted to <code dir="ltr">CHAR</code> or <code dir="ltr">NCHAR</code>, and the input is either infinity or <code dir="ltr">NaN</code> (not a number), then Oracle always returns the pound signs to replace the value. However, if you omit the format model, then Oracle returns either <code dir="ltr">Inf</code> or <code dir="ltr">Nan</code> as a string.</p>
</li>
</ul>
<a id="i34577"></a>
<div id="SQLRF51073" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Number Format Elements <a id="sthref346"></a></h3>
<p>A number format model is composed of one or more number format elements. The tables that follow list the elements of a number format model and provide some examples.</p>
<p>Negative return values automatically contain a leading negative sign and positive values automatically contain a leading space unless the format model contains the <code dir="ltr">MI</code>, <code dir="ltr">S</code>, or <code dir="ltr">PR</code> format element.</p>
<div id="SQLRF51074" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref347"></a><a id="BABIGFBA"></a>Table 2-13 Number Format Elements</p>
<table class="cellalignment5872" title="Number Format Elements" summary="This table presents each Oracle built-in datatype (middle column), its description (right-hand column), and its code (left-hand column) used internally by Oracle." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t60">Element</th>
<th class="cellalignment5873" id="r1c2-t60">Example</th>
<th class="cellalignment5873" id="r1c3-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t60" headers="r1c1-t60">
<p>, (comma)</p>
</td>
<td class="cellalignment5869" headers="r2c1-t60 r1c2-t60">
<p><code dir="ltr">9,999</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t60 r1c3-t60">
<p>Returns a comma in the specified position. You can specify multiple commas in a number format model.</p>
<p><span class="bold">Restrictions:</span></p>
<ul>
<li>
<p>A comma element cannot begin a number format model.</p>
</li>
<li>
<p>A comma cannot appear to the right of a decimal character or period in a number format model.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t60" headers="r1c1-t60">
<p>. (period)</p>
</td>
<td class="cellalignment5869" headers="r3c1-t60 r1c2-t60">
<p><code dir="ltr">99.99</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t60 r1c3-t60">
<p>Returns a decimal point, which is a period (.) in the specified position.</p>
<p><span class="bold">Restriction:</span> You can specify only one period in a number format model.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t60" headers="r1c1-t60">
<p>$</p>
</td>
<td class="cellalignment5869" headers="r4c1-t60 r1c2-t60">
<p><code dir="ltr">$9999</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t60 r1c3-t60">
<p>Returns value with a leading dollar sign.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t60" headers="r1c1-t60">
<p>0</p>
</td>
<td class="cellalignment5869" headers="r5c1-t60 r1c2-t60">
<p><code dir="ltr">0999</code></p>
<p><code dir="ltr">9990</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t60 r1c3-t60">
<p>Returns leading zeros.</p>
<p>Returns trailing zeros.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t60" headers="r1c1-t60">
<p>9</p>
</td>
<td class="cellalignment5869" headers="r6c1-t60 r1c2-t60">
<p><code dir="ltr">9999</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t60 r1c3-t60">
<p>Returns value with the specified number of digits with a leading space if positive or with a leading minus if negative. Leading zeros are blank, except for a zero value, which returns a zero for the integer part of the fixed-point number.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t60" headers="r1c1-t60">
<p>B</p>
</td>
<td class="cellalignment5869" headers="r7c1-t60 r1c2-t60">
<p><code dir="ltr">B9999</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t60 r1c3-t60">
<p>Returns blanks for the integer part of a fixed-point number when the integer part is zero (regardless of zeros in the format model).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t60" headers="r1c1-t60">
<p><a id="sthref348"></a>C</p>
</td>
<td class="cellalignment5869" headers="r8c1-t60 r1c2-t60">
<p><code dir="ltr">C999</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t60 r1c3-t60">
<p>Returns in the specified position the ISO currency symbol (the current value of the <code dir="ltr">NLS_ISO_CURRENCY</code> parameter).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t60" headers="r1c1-t60">
<p><a id="sthref349"></a>D</p>
</td>
<td class="cellalignment5869" headers="r9c1-t60 r1c2-t60">
<p><code dir="ltr">99D99</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t60 r1c3-t60">
<p>Returns in the specified position the decimal character, which is the current value of the <code dir="ltr">NLS_NUMERIC_CHARACTER</code> parameter. The default is a period (.).</p>
<p><span class="bold">Restriction:</span> You can specify only one decimal character in a number format model.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t60" headers="r1c1-t60">
<p><a id="sthref350"></a>EEEE</p>
</td>
<td class="cellalignment5869" headers="r10c1-t60 r1c2-t60">
<p><code dir="ltr">9.9EEEE</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t60 r1c3-t60">
<p>Returns a value using in scientific notation.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t60" headers="r1c1-t60">
<p><a id="sthref351"></a><a id="sthref352"></a>G</p>
</td>
<td class="cellalignment5869" headers="r11c1-t60 r1c2-t60">
<p><code dir="ltr">9G999</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t60 r1c3-t60">
<p>Returns in the specified position the group separator (the current value of the <code dir="ltr">NLS_NUMERIC_CHARACTER</code> parameter). You can specify multiple group separators in a number format model.</p>
<p><span class="bold">Restriction:</span> A group separator cannot appear to the right of a decimal character or period in a number format model.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t60" headers="r1c1-t60">
<p><a id="sthref353"></a>L</p>
</td>
<td class="cellalignment5869" headers="r12c1-t60 r1c2-t60">
<p><code dir="ltr">L999</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t60 r1c3-t60">
<p>Returns in the specified position the local currency symbol (the current value of the <code dir="ltr">NLS_CURRENCY</code> parameter).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t60" headers="r1c1-t60">
<p>MI</p>
</td>
<td class="cellalignment5869" headers="r13c1-t60 r1c2-t60">
<p><code dir="ltr">9999MI</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t60 r1c3-t60">
<p>Returns negative value with a trailing minus sign (-).</p>
<p>Returns positive value with a trailing blank.</p>
<p><span class="bold">Restriction:</span> The MI format element can appear only in the last position of a number format model.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t60" headers="r1c1-t60">
<p>PR</p>
</td>
<td class="cellalignment5869" headers="r14c1-t60 r1c2-t60">
<p><code dir="ltr">9999PR</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t60 r1c3-t60">
<p>Returns negative value in &lt;angle brackets&gt;.</p>
<p>Returns positive value with a leading and trailing blank.</p>
<p><span class="bold">Restriction:</span> The PR format element can appear only in the last position of a number format model.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t60" headers="r1c1-t60">
<p>RN</p>
<p>rn</p>
</td>
<td class="cellalignment5869" headers="r15c1-t60 r1c2-t60">
<p><code dir="ltr">RN</code></p>
<p><code dir="ltr">rn</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t60 r1c3-t60">
<p>Returns a value as Roman numerals in uppercase.</p>
<p>Returns a value as Roman numerals in lowercase.</p>
<p>Value can be an integer between 1 and 3999.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t60" headers="r1c1-t60">
<p>S</p>
</td>
<td class="cellalignment5869" headers="r16c1-t60 r1c2-t60">
<p><code dir="ltr">S9999</code></p>
<p><code dir="ltr">9999S</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t60 r1c3-t60">
<p>Returns negative value with a leading minus sign (-).</p>
<p>Returns positive value with a leading plus sign (+).</p>
<p>Returns negative value with a trailing minus sign (-).</p>
<p>Returns positive value with a trailing plus sign (+).</p>
<p><span class="bold">Restriction:</span> The S format element can appear only in the first or last position of a number format model.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r17c1-t60" headers="r1c1-t60">
<p>TM</p>
</td>
<td class="cellalignment5869" headers="r17c1-t60 r1c2-t60">
<p><code dir="ltr">TM</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t60 r1c3-t60">
<p>The text minimum number format model returns (in decimal output) the smallest number of characters possible. This element is case insensitive.</p>
<p>The default is TM9, which returns the number in fixed notation unless the output exceeds 64 characters. If the output exceeds 64 characters, then Oracle Database automatically returns the number in scientific notation.</p>
<p><span class="bold">Restrictions:</span></p>
<ul>
<li>
<p>You cannot precede this element with any other element.</p>
</li>
<li>
<p>You can follow this element only with one 9 or one E (or e), but not with any combination of these. The following statement returns an error:</p>
<p><code dir="ltr">SELECT TO_CHAR(1234, &#39;TM9e&#39;) FROM DUAL;</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r18c1-t60" headers="r1c1-t60">
<p><a id="sthref354"></a>U</p>
</td>
<td class="cellalignment5869" headers="r18c1-t60 r1c2-t60">
<p><code dir="ltr">U9999</code></p>
</td>
<td class="cellalignment5869" headers="r18c1-t60 r1c3-t60">
<p>Returns in the specified position the Euro (or other) dual currency symbol, determined by the current value of the <code dir="ltr">NLS_DUAL_CURRENCY</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r19c1-t60" headers="r1c1-t60">
<p>V</p>
</td>
<td class="cellalignment5869" headers="r19c1-t60 r1c2-t60">
<p><code dir="ltr">999V99</code></p>
</td>
<td class="cellalignment5869" headers="r19c1-t60 r1c3-t60">
<p>Returns a value multiplied by 10<sup>n</sup> (and if necessary, round it up), where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the number of 9&#39;s after the <code dir="ltr">V</code>.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r20c1-t60" headers="r1c1-t60">
<p><a id="sthref355"></a>X</p>
</td>
<td class="cellalignment5869" headers="r20c1-t60 r1c2-t60">
<p><code dir="ltr">XXXX</code></p>
<p><code dir="ltr">xxxx</code></p>
</td>
<td class="cellalignment5869" headers="r20c1-t60 r1c3-t60">
<p>Returns the hexadecimal value of the specified number of digits. If the specified number is not an integer, then Oracle Database rounds it to an integer.</p>
<p><span class="bold">Restrictions:</span></p>
<ul>
<li>
<p>This element accepts only positive values or 0. Negative values return an error.</p>
</li>
<li>
<p>You can precede this element only with 0 (which returns leading zeroes) or FM. Any other elements return an error. If you specify neither 0 nor FM with X, then the return always has one leading blank. Refer to the format model modifier <a href="#BABDAEDF">FM</a> for more information.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<p><a id="sthref356"></a><a href="#BABFJEAA">Table 2-14</a> shows the results of the following query for different values of <code dir="ltr"><span class="codeinlineitalic">number</span></code> and <code dir="ltr"><span class="codeinlineitalic">&#39;fmt&#39;</span></code>:</p>
<pre dir="ltr">SELECT TO_CHAR(<span class="italic">number</span>, &#39;<span class="italic">fmt</span>&#39;)
  FROM DUAL;
</pre>
<div id="SQLRF51075" class="tblhruleformal">
<p class="titleintable"><a id="sthref357"></a><a id="BABFJEAA"></a>Table 2-14 Results of Number Conversions</p>
<table class="cellalignment5872" title="Results of Number Conversions " summary="The first column shows actual numbers, the second column shows how that number appears in a format mask, and the third column shows the number returned by the combination of number and format mask." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t61">number</th>
<th class="cellalignment5873" id="r1c2-t61">&#39;fmt&#39;</th>
<th class="cellalignment5873" id="r1c3-t61">Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t61" headers="r1c1-t61">
<p><code dir="ltr">-1234567890</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t61 r1c2-t61">
<p><code dir="ltr">9999999999S</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;1234567890-&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t61" headers="r1c1-t61">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t61 r1c2-t61">
<p><code dir="ltr">99.99</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; .00&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+0.1</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t61 r1c2-t61">
<p><code dir="ltr">99.99</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; .10&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t61" headers="r1c1-t61">
<p><code dir="ltr">-0.2</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t61 r1c2-t61">
<p><code dir="ltr">99.99</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; -.20&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t61" headers="r1c1-t61">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t61 r1c2-t61">
<p><code dir="ltr">90.99</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 0.00&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+0.1</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t61 r1c2-t61">
<p><code dir="ltr">90.99</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 0.10&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t61" headers="r1c1-t61">
<p><code dir="ltr">-0.2</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t61 r1c2-t61">
<p><code dir="ltr">90.99</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; -0.20&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t61" headers="r1c1-t61">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t61 r1c2-t61">
<p><code dir="ltr">9999</code></p>
</td>
<td class="cellalignment5869" headers="r9c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 0&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t61" headers="r1c1-t61">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t61 r1c2-t61">
<p><code dir="ltr">9999</code></p>
</td>
<td class="cellalignment5869" headers="r10c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 1&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t61" headers="r1c1-t61">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t61 r1c2-t61">
<p><code dir="ltr">B9999</code></p>
</td>
<td class="cellalignment5869" headers="r11c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; &#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t61" headers="r1c1-t61">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t61 r1c2-t61">
<p><code dir="ltr">B9999</code></p>
</td>
<td class="cellalignment5869" headers="r12c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 1&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t61" headers="r1c1-t61">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t61 r1c2-t61">
<p><code dir="ltr">B90.99</code></p>
</td>
<td class="cellalignment5869" headers="r13c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; &#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.456</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t61 r1c2-t61">
<p><code dir="ltr">999.999</code></p>
</td>
<td class="cellalignment5869" headers="r14c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 123.456&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t61" headers="r1c1-t61">
<p><code dir="ltr">-123.456</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t61 r1c2-t61">
<p><code dir="ltr">999.999</code></p>
</td>
<td class="cellalignment5869" headers="r15c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;-123.456&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.456</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t61 r1c2-t61">
<p><code dir="ltr">FM999.009</code></p>
</td>
<td class="cellalignment5869" headers="r16c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;123.456&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r17c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.456</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t61 r1c2-t61">
<p><code dir="ltr">9.9EEEE</code></p>
</td>
<td class="cellalignment5869" headers="r17c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 1.2E+02&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r18c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+1E+123</code></p>
</td>
<td class="cellalignment5869" headers="r18c1-t61 r1c2-t61">
<p><code dir="ltr">9.9EEEE</code></p>
</td>
<td class="cellalignment5869" headers="r18c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; 1.0E+123&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r19c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.456</code></p>
</td>
<td class="cellalignment5869" headers="r19c1-t61 r1c2-t61">
<p><code dir="ltr">FM9.9EEEE</code></p>
</td>
<td class="cellalignment5869" headers="r19c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;1.2E+02&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r20c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.45</code></p>
</td>
<td class="cellalignment5869" headers="r20c1-t61 r1c2-t61">
<p><code dir="ltr">FM999.009</code></p>
</td>
<td class="cellalignment5869" headers="r20c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;123.45&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r21c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.0</code></p>
</td>
<td class="cellalignment5869" headers="r21c1-t61 r1c2-t61">
<p><code dir="ltr">FM999.009</code></p>
</td>
<td class="cellalignment5869" headers="r21c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;123.00&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r22c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.45</code></p>
</td>
<td class="cellalignment5869" headers="r22c1-t61 r1c2-t61">
<p><code dir="ltr">L999.99</code></p>
</td>
<td class="cellalignment5869" headers="r22c1-t61 r1c3-t61">
<p><code dir="ltr">&#39; $123.45&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r23c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+123.45</code></p>
</td>
<td class="cellalignment5869" headers="r23c1-t61 r1c2-t61">
<p><code dir="ltr">FML999.99</code></p>
</td>
<td class="cellalignment5869" headers="r23c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;$123.45&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r24c1-t61" headers="r1c1-t61">
<p><code dir="ltr">+1234567890</code></p>
</td>
<td class="cellalignment5869" headers="r24c1-t61 r1c2-t61">
<p><code dir="ltr">9999999999S</code></p>
</td>
<td class="cellalignment5869" headers="r24c1-t61 r1c3-t61">
<p><code dir="ltr">&#39;1234567890+&#39;</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i34924"></a>
<div id="SQLRF00212" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Datetime Format Models <a id="sthref358"></a><a id="sthref359"></a><a id="sthref360"></a><a id="sthref361"></a></h2>
<p>You can use datetime format models in the following functions:</p>
<ul>
<li>
<p>In the <code dir="ltr">TO_*</code> datetime functions to translate a character value that is in a format other than the default format into a datetime value. (The <code dir="ltr">TO_</code>* datetime functions are <code dir="ltr">TO_DATE</code>, <code dir="ltr">TO_TIMESTAMP</code>, and <code dir="ltr">TO_TIMESTAMP_TZ</code>.)</p>
</li>
<li>
<p>In the <code dir="ltr">TO_CHAR</code> function to translate a datetime value into a character value that is in a format other than the default format (for example, to print the date from an application)</p>
</li>
</ul>
<p><a id="sthref362"></a>The total length of a datetime format model cannot exceed 22 characters.</p>
<p><a id="sthref363"></a><a id="sthref364"></a>The default datetime formats are specified either explicitly with the NLS session parameters <code dir="ltr">NLS_DATE_FORMAT</code>, <code dir="ltr">NLS_TIMESTAMP_FORMAT</code>, and <code dir="ltr">NLS_TIMESTAMP_TZ_FORMAT</code>, or implicitly with the NLS session parameter <code dir="ltr">NLS_TERRITORY</code>. You can change the default datetime formats for your session with the <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_2015.htm#i2231814">ALTER SESSION</a> and <a class="olink NLSPG003" href="../NLSPG/ch3globenv.htm#NLSPG003"><span class="italic">Oracle Database Globalization Support Guide</span></a> for information on the NLS parameters</div>
<a id="i34948"></a>
<div id="SQLRF51076" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Datetime Format Elements <a id="sthref365"></a><a id="sthref366"></a></h3>
<p>A datetime format model is composed of one or more datetime format elements as listed in <a href="#CDEHIFJA">Table 2-15, &#34;Datetime Format Elements&#34;</a>.</p>
<ul>
<li>
<p>For input format models, format items cannot appear twice, and format items that represent similar information cannot be combined. For example, you cannot use &#39;SYYYY&#39; and &#39;BC&#39; in the same format string.</p>
</li>
<li>
<p>The second column indicates whether the format element can be used in the <code dir="ltr">TO_*</code> datetime functions. All format elements can be used in the <code dir="ltr">TO_CHAR</code> function.</p>
</li>
<li>
<p>The following datetime format elements can be used in timestamp and interval format models, but not in the original <code dir="ltr">DATE</code> format model: <code dir="ltr">FF</code>, <code dir="ltr">TZD</code>, <code dir="ltr">TZH,</code> <code dir="ltr">TZM</code>, and <code dir="ltr">TZR</code>.</p>
</li>
<li>
<p>Many datetime format elements are padded with blanks or leading zeroes to a specific length. Refer to the format model modifier <a href="#BABDAEDF">FM</a> for more information.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you use the 4-digit year element (<code dir="ltr">YYYY</code>) instead of the shorter year elements for these reasons:
<ul>
<li>
<p>The 4-digit year element eliminates ambiguity.</p>
</li>
<li>
<p>The shorter year elements may affect query optimization because the year is not known at query compile time and can only be determined at run time.</p>
</li>
</ul>
</div>
<div id="SQLRF51077" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref367"></a>
<h4 class="sect4">Uppercase Letters in Date Format Elements <a id="sthref368"></a></h4>
<p>Capitalization in a spelled-out word, abbreviation, or Roman numeral follows capitalization in the corresponding format element. For example, the date format model &#39;DAY&#39; produces capitalized words like &#39;MONDAY&#39;; &#39;Day&#39; produces &#39;Monday&#39;; and &#39;day&#39; produces &#39;monday&#39;.</p>
</div>
<!-- class="sect4" -->
<div id="SQLRF51078" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref369"></a>
<h4 class="sect4">Punctuation and Character Literals in Datetime Format Models <a id="sthref370"></a><a id="sthref371"></a></h4>
<p>You can include these characters in a date format model:</p>
<ul>
<li>
<p>Punctuation such as hyphens, slashes, commas, periods, and colons</p>
</li>
<li>
<p>Character literals, enclosed in double quotation marks</p>
</li>
</ul>
<p>These characters appear in the return value in the same location as they appear in the format model.</p>
<div id="SQLRF51079" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref372"></a><a id="CDEHIFJA"></a>Table 2-15 Datetime Format Elements</p>
<table class="cellalignment5872" title="Datetime Format Elements" summary="This table presents each Oracle built-in datatype (middle column), its description (right-hand column), and its code (left-hand column) used internally by Oracle." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t64">Element</th>
<th class="cellalignment5873" id="r1c2-t64">TO_* datetime functions?</th>
<th class="cellalignment5873" id="r1c3-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t64" headers="r1c1-t64">
<pre dir="ltr">-
/
,
.
;
:
&#34;text&#34;
</pre></td>
<td class="cellalignment5869" headers="r2c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r2c1-t64 r1c3-t64">
<p>Punctuation and quoted text is reproduced in the result.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t64" headers="r1c1-t64">
<pre dir="ltr">AD
A.D.
</pre></td>
<td class="cellalignment5869" headers="r3c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r3c1-t64 r1c3-t64">
<p>AD indicator with or without periods.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t64" headers="r1c1-t64">
<pre dir="ltr">AM
A.M.
</pre></td>
<td class="cellalignment5869" headers="r4c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r4c1-t64 r1c3-t64">
<p>Meridian indicator with or without periods.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t64" headers="r1c1-t64">
<pre dir="ltr">BC
B.C.
</pre></td>
<td class="cellalignment5869" headers="r5c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r5c1-t64 r1c3-t64">
<p>BC indicator with or without periods.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t64" headers="r1c1-t64">
<pre dir="ltr">CC
SCC
</pre></td>
<td class="cellalignment5869" headers="r6c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r6c1-t64 r1c3-t64">
<p>Century.</p>
<ul>
<li>
<p>If the last 2 digits of a 4-digit year are between 01 and 99 (inclusive), then the century is one greater than the first 2 digits of that year.</p>
</li>
<li>
<p>If the last 2 digits of a 4-digit year are 00, then the century is the same as the first 2 digits of that year.</p>
</li>
</ul>
<p>For example, 2002 returns 21; 2000 returns 20.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t64" headers="r1c1-t64">
<pre dir="ltr">D
</pre></td>
<td class="cellalignment5869" headers="r7c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r7c1-t64 r1c3-t64">
<p>Day of week (1-7). This element depends on the NLS territory of the session.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t64" headers="r1c1-t64">
<p><code dir="ltr">DAY</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r8c1-t64 r1c3-t64">
<p>Name of day.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r9c1-t64" headers="r1c1-t64">
<pre dir="ltr">DD
</pre></td>
<td class="cellalignment5869" headers="r9c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r9c1-t64 r1c3-t64">
<p>Day of month (1-31).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r10c1-t64" headers="r1c1-t64">
<pre dir="ltr">DDD
</pre></td>
<td class="cellalignment5869" headers="r10c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r10c1-t64 r1c3-t64">
<p>Day of year (1-366).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r11c1-t64" headers="r1c1-t64">
<pre dir="ltr"><a id="sthref373"></a><a id="sthref374"></a><a id="sthref375"></a>DL
</pre></td>
<td class="cellalignment5869" headers="r11c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r11c1-t64 r1c3-t64">
<p>Returns a value in the long date format, which is an extension of the Oracle Database <code dir="ltr">DATE</code> format, determined by the current value of the <code dir="ltr">NLS_DATE_FORMAT</code> parameter. Makes the appearance of the date components (day name, month number, and so forth) depend on the <code dir="ltr">NLS_TERRITORY</code> and <code dir="ltr">NLS_LANGUAGE</code> parameters. For example, in the <code dir="ltr">AMERICAN_AMERICA</code> locale, this is equivalent to specifying the format <code dir="ltr">&#39;fmDay,</code> <code dir="ltr">Month</code> <code dir="ltr">dd,</code> <code dir="ltr">yyyy&#39;</code>. In the <code dir="ltr">GERMAN_GERMANY</code> locale, it is equivalent to specifying the format &#39;<code dir="ltr">fmDay, dd.</code> <code dir="ltr">Month yyyy</code>&#39;.</p>
<p><span class="bold">Restriction:</span> You can specify this format only with the <code dir="ltr">TS</code> element, separated by white space.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r12c1-t64" headers="r1c1-t64">
<pre dir="ltr"><a id="sthref376"></a>DS
</pre></td>
<td class="cellalignment5869" headers="r12c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r12c1-t64 r1c3-t64">
<p>Returns a value in the short date format. Makes the appearance of the date components (day name, month number, and so forth) depend on the <code dir="ltr">NLS_TERRITORY</code> and <code dir="ltr">NLS_LANGUAGE</code> parameters. For example, in the <code dir="ltr">AMERICAN_AMERICA</code> locale, this is equivalent to specifying the format &#39;<code dir="ltr">MM/DD/RRRR</code>&#39;. In the <code dir="ltr">ENGLISH_UNITED_KINGDOM</code> locale, it is equivalent to specifying the format &#39;<code dir="ltr">DD/MM/RRRR</code>&#39;.</p>
<p><span class="bold">Restriction:</span> You can specify this format only with the <code dir="ltr">TS</code> element, separated by white space.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r13c1-t64" headers="r1c1-t64">
<pre dir="ltr">DY
</pre></td>
<td class="cellalignment5869" headers="r13c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r13c1-t64 r1c3-t64">
<p>Abbreviated name of day.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r14c1-t64" headers="r1c1-t64">
<pre dir="ltr">E
</pre></td>
<td class="cellalignment5869" headers="r14c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r14c1-t64 r1c3-t64">
<p>Abbreviated era name (Japanese Imperial, ROC Official, and Thai Buddha calendars).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r15c1-t64" headers="r1c1-t64">
<pre dir="ltr">EE
</pre></td>
<td class="cellalignment5869" headers="r15c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r15c1-t64 r1c3-t64">
<p>Full era name (Japanese Imperial, ROC Official, and Thai Buddha calendars).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r16c1-t64" headers="r1c1-t64">
<pre dir="ltr">FF [1..9]
</pre></td>
<td class="cellalignment5869" headers="r16c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r16c1-t64 r1c3-t64">
<p>Fractional seconds; no radix character is printed. Use the X format element to add the radix character. Use the numbers 1 to 9 after FF to specify the number of digits in the fractional second portion of the datetime value returned. If you do not specify a digit, then Oracle Database uses the precision specified for the datetime data type or the data type&#39;s default precision. Valid in timestamp and interval formats, but not in <code dir="ltr">DATE</code> formats.</p>
<p><span class="bold">Examples:</span> <code dir="ltr">&#39;HH:MI:SS.FF&#39;</code></p>
<p><code dir="ltr">SELECT TO_CHAR(SYSTIMESTAMP, &#39;SS.FF3&#39;) from DUAL;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r17c1-t64" headers="r1c1-t64">
<pre dir="ltr">FM
</pre></td>
<td class="cellalignment5869" headers="r17c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r17c1-t64 r1c3-t64">
<p>Returns a value with no leading or trailing blanks.</p>
<p><span class="bold">See</span> <span class="bold">Also</span>: <a href="#BABDAEDF">FM</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r18c1-t64" headers="r1c1-t64">
<pre dir="ltr">FX
</pre></td>
<td class="cellalignment5869" headers="r18c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r18c1-t64 r1c3-t64">
<p>Requires exact matching between the character data and the format model.</p>
<p><span class="bold">See</span> <span class="bold">Also</span>: <a href="#CHDHIHEH">FX</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r19c1-t64" headers="r1c1-t64">
<pre dir="ltr">HH
HH12
</pre></td>
<td class="cellalignment5869" headers="r19c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r19c1-t64 r1c3-t64">
<p>Hour of day (1-12).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r20c1-t64" headers="r1c1-t64">
<pre dir="ltr">HH24
</pre></td>
<td class="cellalignment5869" headers="r20c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r20c1-t64 r1c3-t64">
<p>Hour of day (0-23).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r21c1-t64" headers="r1c1-t64">
<pre dir="ltr">IW
</pre></td>
<td class="cellalignment5869" headers="r21c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r21c1-t64 r1c3-t64">
<p>Calendar week of year (1-52 or 1-53), as defined by the ISO 8601 standard.</p>
<ul>
<li>
<p>A calendar week starts on Monday.</p>
</li>
<li>
<p>The first calendar week of the year includes January 4.</p>
</li>
<li>
<p>The first calendar week of the year may include December 29, 30 and 31.</p>
</li>
<li>
<p>The last calendar week of the year may include January 1, 2, and 3.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r22c1-t64" headers="r1c1-t64">
<pre dir="ltr">IYYY
</pre></td>
<td class="cellalignment5869" headers="r22c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r22c1-t64 r1c3-t64">
<p>4-digit year of the year containing the calendar week, as defined by the ISO 8601 standard.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r23c1-t64" headers="r1c1-t64">
<pre dir="ltr">IYY
IY
I
</pre></td>
<td class="cellalignment5869" headers="r23c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r23c1-t64 r1c3-t64">
<p>Last 3, 2, or 1 digit(s) of the year containing the calendar week, as defined by the ISO 8601 standard.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r24c1-t64" headers="r1c1-t64">
<pre dir="ltr">J
</pre></td>
<td class="cellalignment5869" headers="r24c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r24c1-t64 r1c3-t64">
<p>Julian day; the number of days since January 1, 4712 BC. Number specified with J must be integers.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r25c1-t64" headers="r1c1-t64">
<pre dir="ltr">MI
</pre></td>
<td class="cellalignment5869" headers="r25c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r25c1-t64 r1c3-t64">
<p>Minute (0-59).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r26c1-t64" headers="r1c1-t64">
<pre dir="ltr">MM
</pre></td>
<td class="cellalignment5869" headers="r26c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r26c1-t64 r1c3-t64">
<p>Month (01-12; January = 01).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r27c1-t64" headers="r1c1-t64">
<pre dir="ltr">MON
</pre></td>
<td class="cellalignment5869" headers="r27c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r27c1-t64 r1c3-t64">
<p>Abbreviated name of month.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r28c1-t64" headers="r1c1-t64">
<pre dir="ltr">MONTH
</pre></td>
<td class="cellalignment5869" headers="r28c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r28c1-t64 r1c3-t64">
<p>Name of month.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r29c1-t64" headers="r1c1-t64">
<pre dir="ltr">PM
P.M.
</pre></td>
<td class="cellalignment5869" headers="r29c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r29c1-t64 r1c3-t64">
<p>Meridian indicator with or without periods.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r30c1-t64" headers="r1c1-t64">
<pre dir="ltr">Q
</pre></td>
<td class="cellalignment5869" headers="r30c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r30c1-t64 r1c3-t64">
<p>Quarter of year (1, 2, 3, 4; January - March = 1).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r31c1-t64" headers="r1c1-t64">
<pre dir="ltr">RM
</pre></td>
<td class="cellalignment5869" headers="r31c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r31c1-t64 r1c3-t64">
<p>Roman numeral month (I-XII; January = I).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r32c1-t64" headers="r1c1-t64">
<pre dir="ltr">RR
</pre></td>
<td class="cellalignment5869" headers="r32c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r32c1-t64 r1c3-t64">
<p>Lets you store 20th century dates in the 21st century using only two digits.</p>
<p><span class="bold">See</span> <span class="bold">Also:</span> <a href="#i116004">&#34;The RR Datetime Format Element&#34;</a></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r33c1-t64" headers="r1c1-t64">
<pre dir="ltr">RRRR
</pre></td>
<td class="cellalignment5869" headers="r33c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r33c1-t64 r1c3-t64">
<p>Round year. Accepts either 4-digit or 2-digit input. If 2-digit, provides the same return as RR. If you do not want this functionality, then enter the 4-digit year.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r34c1-t64" headers="r1c1-t64">
<pre dir="ltr">SS
</pre></td>
<td class="cellalignment5869" headers="r34c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r34c1-t64 r1c3-t64">
<p>Second (0-59).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r35c1-t64" headers="r1c1-t64">
<pre dir="ltr">SSSSS
</pre></td>
<td class="cellalignment5869" headers="r35c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r35c1-t64 r1c3-t64">
<p>Seconds past midnight (0-86399).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r36c1-t64" headers="r1c1-t64">
<pre dir="ltr"><a id="sthref377"></a>TS
</pre></td>
<td class="cellalignment5869" headers="r36c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r36c1-t64 r1c3-t64">
<p>Returns a value in the short time format. Makes the appearance of the time components (hour, minutes, and so forth) depend on the <code dir="ltr">NLS_TERRITORY</code> and <code dir="ltr">NLS_LANGUAGE</code> initialization parameters.</p>
<p><span class="bold">Restriction:</span> You can specify this format only with the <code dir="ltr">DL</code> or <code dir="ltr">DS</code> element, separated by white space.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r37c1-t64" headers="r1c1-t64">
<pre dir="ltr">TZD <a id="sthref378"></a>
</pre></td>
<td class="cellalignment5869" headers="r37c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r37c1-t64 r1c3-t64">
<p>Daylight saving information. The TZD value is an abbreviated time zone string with daylight saving information. It must correspond with the region specified in TZR. Valid in timestamp and interval formats, but not in <code dir="ltr">DATE</code> formats.</p>
<p><span class="bold">Example:</span> <code dir="ltr">PST</code> (for US/Pacific standard time); <code dir="ltr">PDT</code> (for US/Pacific daylight time).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r38c1-t64" headers="r1c1-t64">
<pre dir="ltr">TZH
</pre></td>
<td class="cellalignment5869" headers="r38c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r38c1-t64 r1c3-t64">
<p>Time zone hour. (See <code dir="ltr">TZM</code> format element.) Valid in timestamp and interval formats, but not in <code dir="ltr">DATE</code> formats.</p>
<p><span class="bold">Example:</span> <code dir="ltr">&#39;HH:MI:SS.FFTZH:TZM&#39;</code>.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r39c1-t64" headers="r1c1-t64">
<pre dir="ltr">TZM
</pre></td>
<td class="cellalignment5869" headers="r39c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r39c1-t64 r1c3-t64">
<p>Time zone minute. (See <code dir="ltr">TZH</code> format element.) Valid in timestamp and interval formats, but not in <code dir="ltr">DATE</code> formats.</p>
<p><span class="bold">Example:</span> <code dir="ltr">&#39;HH:MI:SS.FFTZH:TZM&#39;</code>.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r40c1-t64" headers="r1c1-t64">
<pre dir="ltr">TZR
</pre></td>
<td class="cellalignment5869" headers="r40c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r40c1-t64 r1c3-t64">
<p>Time zone region information. The value must be one of the time zone region names supported in the database. Valid in timestamp and interval formats, but not in <code dir="ltr">DATE</code> formats.</p>
<p><span class="bold">Example:</span> US/Pacific</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r41c1-t64" headers="r1c1-t64">
<pre dir="ltr">WW
</pre></td>
<td class="cellalignment5869" headers="r41c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r41c1-t64 r1c3-t64">
<p>Week of year (1-53) where week 1 starts on the first day of the year and continues to the seventh day of the year.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r42c1-t64" headers="r1c1-t64">
<pre dir="ltr">W
</pre></td>
<td class="cellalignment5869" headers="r42c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r42c1-t64 r1c3-t64">
<p>Week of month (1-5) where week 1 starts on the first day of the month and ends on the seventh.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r43c1-t64" headers="r1c1-t64">
<pre dir="ltr">X
</pre></td>
<td class="cellalignment5869" headers="r43c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r43c1-t64 r1c3-t64">
<p>Local radix character.</p>
<p><span class="bold">Example:</span> <code dir="ltr">&#39;HH:MI:SSXFF&#39;</code>.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r44c1-t64" headers="r1c1-t64">
<pre dir="ltr">Y,YYY
</pre></td>
<td class="cellalignment5869" headers="r44c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r44c1-t64 r1c3-t64">
<p>Year with comma in this position.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r45c1-t64" headers="r1c1-t64">
<pre dir="ltr">YEAR
SYEAR
</pre></td>
<td class="cellalignment5869" headers="r45c1-t64 r1c2-t64">&nbsp;</td>
<td class="cellalignment5869" headers="r45c1-t64 r1c3-t64">
<p>Year, spelled out; <code dir="ltr">S</code> prefixes BC dates with a minus sign (-).</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r46c1-t64" headers="r1c1-t64">
<pre dir="ltr">YYYY
SYYYY
</pre></td>
<td class="cellalignment5869" headers="r46c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r46c1-t64 r1c3-t64">
<p>4-digit year; <code dir="ltr">S</code> prefixes BC dates with a minus sign.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r47c1-t64" headers="r1c1-t64">
<pre dir="ltr">YYY
YY
Y
</pre></td>
<td class="cellalignment5869" headers="r47c1-t64 r1c2-t64">
<p>Yes</p>
</td>
<td class="cellalignment5869" headers="r47c1-t64 r1c3-t64">
<p>Last 3, 2, or 1 digit(s) of year.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<p>Oracle Database converts strings to dates with some flexibility. For example, when the <code dir="ltr">TO_DATE</code> function is used, a format model containing punctuation characters matches an input string lacking some or all of these characters, provided each numerical element in the input string contains the maximum allowed number of digits&mdash;for example, two digits &#39;05&#39; for &#39;MM&#39; or four digits &#39;2007&#39; for &#39;YYYY&#39;. The following statement does not return an error:</p>
<pre dir="ltr">SELECT TO_CHAR(TO_DATE(&#39;0207&#39;,&#39;MM/YY&#39;), &#39;MM/YY&#39;) FROM DUAL;

TO_CH
-----
02/07
 
</pre>
<p>However, the following format string does return an error, because the FX (format exact) format modifier requires an exact match of the expression and the format string:</p>
<pre dir="ltr">SELECT TO_CHAR(TO_DATE(&#39;0207&#39;, &#39;fxmm/yy&#39;), &#39;mm/yy&#39;) FROM DUAL;
SELECT TO_CHAR(TO_DATE(&#39;0207&#39;, &#39;fxmm/yy&#39;), &#39;mm/yy&#39;) FROM DUAL;
                       *
ERROR at line 1:
ORA-01861: literal does not match format string
</pre>
<p>Any non-alphanumeric character is allowed to match the punctuation characters in the format model. For example, the following statement does not return an error:</p>
<pre dir="ltr">SELECT TO_CHAR (TO_DATE(&#39;02#07&#39;,&#39;MM/YY&#39;), &#39;MM/YY&#39;) FROM DUAL;

TO_CH
-----
02/07
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i170559">&#34;Format Model Modifiers&#34;</a> and <a href="#BABGCHFC">&#34;String-to-Date Conversion Rules&#34;</a> for more information</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="SQLRF51080" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref379"></a>
<h3 class="sect3">Datetime Format Elements and Globalization Support <a id="sthref380"></a></h3>
<p>The functionality of some datetime format elements depends on the country and language in which you are using Oracle Database. For example, these datetime format elements return spelled valu<a id="sthref381"></a><a id="sthref382"></a><a id="sthref383"></a>es: <a id="sthref384"></a><a id="sthref385"></a><a id="sthref386"></a><a id="sthref387"></a><a id="sthref388"></a><a id="sthref389"></a></p>
<ul>
<li>
<p>MONTH</p>
</li>
<li>
<p>MON</p>
</li>
<li>
<p>DAY</p>
</li>
<li>
<p>DY</p>
</li>
<li>
<p>BC or AD or B.C. or A.D.</p>
</li>
<li>
<p>AM or PM or A.M or P.M.</p>
</li>
</ul>
<p><a id="sthref390"></a><a id="sthref391"></a><a id="sthref392"></a>The language in which these values are returned is specified either explicitly with the initialization parameter <code dir="ltr">NLS_DATE_LANGUAGE</code> or implicitly with the initialization parameter <code dir="ltr">NLS_LANGUAGE</code>. The values returned by the <code dir="ltr">YEAR</code> and <code dir="ltr">SYEAR</code> datetime format elements are always in English.</p>
<p>The datetime format element <code dir="ltr">D</code> returns the number of the day of the week (1-7). The day of the week that is numbered 1 is specified implicitly by the initialization parameter <code dir="ltr">NLS_TERRITORY</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> and <a class="olink NLSPG003" href="../NLSPG/ch3globenv.htm#NLSPG003"><span class="italic">Oracle Database Globalization Support Guide</span></a> for information on globalization support initialization parameters</div>
</div>
<!-- class="sect3" -->
<div id="SQLRF51081" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref393"></a>
<h3 class="sect3">ISO Standard Date Format Elements <a id="sthref394"></a></h3>
<p>Oracle calculates the values returned by the datetime format elements IYYY, IYY, IY, I, and IW according to the ISO standard. For information on the differences between these values and those returned by the datetime format elements YYYY, YYY, YY, Y, and WW, see the discussion of globalization support in <a class="olink NLSPG009" href="../NLSPG/ch9sql.htm#NLSPG009"><span class="italic">Oracle Database Globalization Support Guide</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="i116004"></a>
<div id="SQLRF00215" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">The RR Datetime Format Element <a id="sthref395"></a><a id="sthref396"></a><a id="sthref397"></a><a id="sthref398"></a><a id="sthref399"></a></h3>
<p>The <code dir="ltr">RR</code> datetime format element is similar to the <code dir="ltr">YY</code> datetime format element, but it provides additional flexibility for storing date values in other centuries. The <code dir="ltr">RR</code> datetime format element lets you store 20th century dates in the 21st century by specifying only the last two digits of the year.</p>
<p>If you use the <code dir="ltr">TO_DATE</code> function with the <code dir="ltr">YY</code> datetime format element, then the year returned always has the same first 2 digits as the current year. If you use the <code dir="ltr">RR</code> datetime format element instead, then the century of the return value varies according to the specified two-digit year and the last two digits of the current year.</p>
<p>That is:</p>
<ul>
<li>
<p>If the specified two-digit year is 00 to 49, then</p>
<ul>
<li>
<p>If the last two digits of the current year are 00 to 49, then the returned year has the same first two digits as the current year.</p>
</li>
<li>
<p>If the last two digits of the current year are 50 to 99, then the first 2 digits of the returned year are 1 greater than the first 2 digits of the current year.</p>
</li>
</ul>
</li>
<li>
<p>If the specified two-digit year is 50 to 99, then</p>
<ul>
<li>
<p>If the last two digits of the current year are 00 to 49, then the first 2 digits of the returned year are 1 less than the first 2 digits of the current year.</p>
</li>
<li>
<p>If the last two digits of the current year are 50 to 99, then the returned year has the same first two digits as the current year.</p>
</li>
</ul>
</li>
</ul>
<p>The following examples demonstrate the behavior of the RR datetime format element.</p>
<div id="SQLRF51082" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref400"></a>
<h4 class="sect4">RR Datetime Format Examples</h4>
<p>Assume these queries are issued between 1950 and 1999:</p>
<pre dir="ltr">SELECT TO_CHAR(TO_DATE(&#39;27-OCT-98&#39;, &#39;DD-MON-RR&#39;), &#39;YYYY&#39;) &#34;Year&#34; FROM DUAL;

Year
----
1998

SELECT TO_CHAR(TO_DATE(&#39;27-OCT-17&#39;, &#39;DD-MON-RR&#39;), &#39;YYYY&#39;) &#34;Year&#34; FROM DUAL; 

Year
----
2017
</pre>
<p>Now assume these queries are issued between 2000 and 2049:</p>
<pre dir="ltr">SELECT TO_CHAR(TO_DATE(&#39;27-OCT-98&#39;, &#39;DD-MON-RR&#39;), &#39;YYYY&#39;) &#34;Year&#34; FROM DUAL; 

Year
----
1998 

SELECT TO_CHAR(TO_DATE(&#39;27-OCT-17&#39;, &#39;DD-MON-RR&#39;), &#39;YYYY&#39;) &#34;Year&#34; FROM DUAL; 

Year
----
2017
</pre>
<p>Note that the queries return the same values regardless of whether they are issued before or after the year 2000. The RR datetime format element lets you write SQL statements that will return the same values from years whose first two digits are different.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="SQLRF51083" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref401"></a>
<h3 class="sect3">Datetime Format Element Suffixes <a id="sthref402"></a></h3>
<p><a href="#BABGDDFB">Table 2-16</a> lists suffixes that can be added to datetime format elements:</p>
<div id="SQLRF51084" class="tblhruleformal">
<p class="titleintable"><a id="sthref403"></a><a id="BABGDDFB"></a>Table 2-16 Date Format Element Suffixes<a id="sthref404"></a><a id="sthref405"></a><a id="sthref406"></a><a id="sthref407"></a><a id="sthref408"></a><a id="sthref409"></a><a id="sthref410"></a><a id="sthref411"></a></p>
<table class="cellalignment5872" title=" Date Format Element Suffixes" summary="The first column shows literal suffixes that can be added to datetime format elements. The remaining columns describe the suffix and provide examples." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t67">Suffix</th>
<th class="cellalignment5873" id="r1c2-t67">Meaning</th>
<th class="cellalignment5873" id="r1c3-t67">Example Element</th>
<th class="cellalignment5873" id="r1c4-t67">Example Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t67" headers="r1c1-t67">
<p>TH</p>
</td>
<td class="cellalignment5869" headers="r2c1-t67 r1c2-t67">
<p>Ordinal Number</p>
</td>
<td class="cellalignment5869" headers="r2c1-t67 r1c3-t67">
<p><code dir="ltr">DDTH</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t67 r1c4-t67">
<p><code dir="ltr">4TH</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t67" headers="r1c1-t67">
<p>SP</p>
</td>
<td class="cellalignment5869" headers="r3c1-t67 r1c2-t67">
<p>Spelled Number</p>
</td>
<td class="cellalignment5869" headers="r3c1-t67 r1c3-t67">
<p><code dir="ltr">DDSP</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t67 r1c4-t67">
<p><code dir="ltr">FOUR</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t67" headers="r1c1-t67">
<p>SPTH or THSP</p>
</td>
<td class="cellalignment5869" headers="r4c1-t67 r1c2-t67">
<p>Spelled, ordinal number</p>
</td>
<td class="cellalignment5869" headers="r4c1-t67 r1c3-t67">
<p><code dir="ltr">DDSPTH</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t67 r1c4-t67">
<p><code dir="ltr">FOURTH</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="SQLRF51085"></a>Notes on date format element suffixes:</p>
<ul>
<li>
<p>When you add one of these suffixes to a datetime format element, the return value is always in English.</p>
</li>
<li>
<p>Datetime suffixes are valid only to format output. You cannot use them to insert a date into the database.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i170559"></a>
<div id="SQLRF00216" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Format Model Modifiers <a id="sthref412"></a><a id="sthref413"></a></h2>
<p>The <code dir="ltr">FM</code> and <code dir="ltr">FX</code> modifiers, used in format models in the <code dir="ltr">TO_CHAR</code> function, control blank padding and exact format checking.</p>
<p>A modifier can appear in a format model more than once. In such a case, each subsequent occurrence toggles the effects of the modifier. Its effects are enabled for the portion of the model following its first occurrence, and then disabled for the portion following its second, and then reenabled for the portion following its third, and so on.</p>
<p><a id="BABDAEDF"></a><a id="SQLRF30003"></a><span class="subhead3"><a id="sthref414"></a><a id="sthref415"></a><a id="sthref416"></a><a id="sthref417"></a>FM&nbsp;</span>Fill mode. Oracle uses trailing blank characters and leading zeroes to fill format elements to a constant width. The width is equal to the display width of the largest element for the relevant format model:</p>
<ul>
<li>
<p>Numeric elements are padded with leading zeros to the width of the maximum value allowed for the element. For example, the <code dir="ltr">YYYY</code> element is padded to four digits (the length of &#39;9999&#39;), <code dir="ltr">HH24</code> to two digits (the length of &#39;23&#39;), and <code dir="ltr">DDD</code> to three digits (the length of &#39;366&#39;).</p>
</li>
<li>
<p>The character elements <code dir="ltr">MONTH</code>, <code dir="ltr">MON</code>, <code dir="ltr">DAY</code>, and <code dir="ltr">DY</code> are padded with trailing blanks to the width of the longest full month name, the longest abbreviated month name, the longest full date name, or the longest abbreviated day name, respectively, among valid names determined by the values of <code dir="ltr">NLS_DATE_LANGUAGE</code> and <code dir="ltr">NLS_CALENDAR</code> parameters. For example, when <code dir="ltr">NLS_DATE_LANGUAGE</code> is <code dir="ltr">AMERICAN</code> and <code dir="ltr">NLS_CALENDAR</code> is <code dir="ltr">GREGORIAN</code> (the default), the largest element for <code dir="ltr">MONTH</code> is <code dir="ltr">SEPTEMBER</code>, so all values of the <code dir="ltr">MONTH</code> format element are padded to nine display characters. The values of the <code dir="ltr">NLS_DATE_LANGUAGE</code> and <code dir="ltr">NLS_CALENDAR</code> parameters are specified in the third argument to <code dir="ltr">TO_CHAR</code> and <code dir="ltr">TO_*</code> datetime functions or they are retrieved from the NLS environment of the current session.</p>
</li>
<li>
<p>The character element RM is padded with trailing blanks to the length of 4, which is the length of &#39;viii&#39;.</p>
</li>
<li>
<p>Other character elements and spelled-out numbers (<code dir="ltr">SP</code>, <code dir="ltr">SPTH</code>, and <code dir="ltr">THSP</code> suffixes) are not padded.</p>
</li>
</ul>
<p>The <code dir="ltr">FM</code> modifier suppresses the above padding in the return value of the <code dir="ltr">TO_CHAR</code> function.</p>
<p><a id="CHDHIHEH"></a><a id="SQLRF30004"></a><span class="subhead3"><a id="sthref418"></a><a id="sthref419"></a><a id="sthref420"></a>FX&nbsp;</span> Format exact. This modifier specifies exact matching for the character argument and datetime format model of a <code dir="ltr">TO_DATE</code> function:</p>
<ul>
<li>
<p>Punctuation and quoted text in the character argument must exactly match (except for case) the corresponding parts of the format model.</p>
</li>
<li>
<p>The character argument cannot have extra blanks. Without <code dir="ltr">FX</code>, Oracle ignores extra blanks.</p>
</li>
<li>
<p>Numeric data in the character argument must have the same number of digits as the corresponding element in the format model. Without <code dir="ltr">FX</code>, numbers in the character argument can omit leading zeros.</p>
<p>When <code dir="ltr">FX</code> is enabled, you can disable this check for leading zeros by using the <code dir="ltr">FM</code> modifier as well.</p>
</li>
</ul>
<p>If any portion of the character argument violates any of these conditions, then Oracle returns an error message.</p>
<a id="i165520"></a>
<div id="SQLRF51086" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Format Model Examples</h3>
<p>The following statement uses a date format model to return a character expression:</p>
<pre dir="ltr">SELECT TO_CHAR(SYSDATE, &#39;fmDDTH&#39;) || &#39; of &#39; ||
       TO_CHAR(SYSDATE, &#39;fmMonth&#39;) || &#39;, &#39; ||
       TO_CHAR(SYSDATE, &#39;YYYY&#39;) &#34;Ides&#34; 
  FROM DUAL; 

Ides 
------------------ 
3RD of April, 2008
</pre>
<p>The preceding statement also uses the <code dir="ltr">FM</code> modifier. If <code dir="ltr">FM</code> is omitted, then the month is blank-padded to nine characters:</p>
<pre dir="ltr">SELECT TO_CHAR(SYSDATE, &#39;DDTH&#39;) || &#39; of &#39; ||
   TO_CHAR(SYSDATE, &#39;Month&#39;) || &#39;, &#39; ||
   TO_CHAR(SYSDATE, &#39;YYYY&#39;) &#34;Ides&#34;
  FROM DUAL; 

Ides 
----------------------- 
03RD of April    , 2008 
</pre>
<p>The following statement places a single quotation mark in the return value by using a date format model that includes two consecutive single quotation marks:</p>
<pre dir="ltr">SELECT TO_CHAR(SYSDATE, &#39;fmDay&#39;) || &#39;&#39;&#39;s Special&#39; &#34;Menu&#34;
  FROM DUAL; 

Menu 
----------------- 
Tuesday&#39;s Special 
</pre>
<p>Two consecutive single quotation marks can be used for the same purpose within a character literal in a format model.</p>
<p><a href="#g195443">Table 2-17</a> shows whether the following statement meets the matching conditions for different values of <code dir="ltr"><span class="codeinlineitalic">char</span></code> and &#39;<code dir="ltr"><span class="codeinlineitalic">fmt</span></code>&#39; using <code dir="ltr">FX</code> (the table named <code dir="ltr">table</code> has a column <code dir="ltr">date_column</code> of data type <code dir="ltr">DATE</code>):</p>
<pre dir="ltr">UPDATE table 
  SET date_column = TO_DATE(<span class="italic">char</span>, &#39;<span class="italic">fmt</span>&#39;);
</pre>
<div id="SQLRF51087" class="tblhruleformal">
<p class="titleintable"><a id="sthref421"></a><a id="g195443"></a>Table 2-17 Matching Character Data and Format Models with the FX Format Model Modifier</p>
<table class="cellalignment5872" title="Matching Character Data and Format Models with the FX Format Model Modifier" summary="The first column shows a literal string, the second shows a format mask, and the third says whether the two match." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5877" id="r1c1-t68">char</th>
<th class="cellalignment5877" id="r1c2-t68">&#39;fmt&#39;</th>
<th class="cellalignment5877" id="r1c3-t68">Match or Error?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39;15/ JAN /1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;DD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t68 r1c3-t68">
<p><code dir="ltr">Match</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39; 15! JAN % /1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;DD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t68 r1c3-t68">
<p><code dir="ltr">Error</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39;15/JAN/1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;FXDD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t68 r1c3-t68">
<p><code dir="ltr">Error</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39;15-JAN-1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;FXDD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t68 r1c3-t68">
<p><code dir="ltr">Match</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39;1-JAN-1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;FXDD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t68 r1c3-t68">
<p><code dir="ltr">Error</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39;01-JAN-1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;FXDD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t68 r1c3-t68">
<p><code dir="ltr">Match</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r8c1-t68" headers="r1c1-t68">
<p><code dir="ltr">&#39;1-JAN-1998&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t68 r1c2-t68">
<p><code dir="ltr">&#39;FXFMDD-MON-YYYY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r8c1-t68 r1c3-t68">
<p><code dir="ltr">Match</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p><a id="SQLRF51088"></a><span class="subhead3">Format of Return Values: Examples&nbsp;</span><a id="sthref422"></a>You can use a format model to specify the format for Oracle to use to return values from the database to you.</p>
<p>The following statement selects the salaries of the employees in Department 80 and uses the <code dir="ltr">TO_CHAR</code> function to convert these salaries into character values with the format specified by the number format model &#39;<code dir="ltr">$99,990.99</code>&#39;:</p>
<pre dir="ltr">SELECT last_name employee, TO_CHAR(salary, &#39;$99,990.99&#39;)
  FROM employees
  WHERE department_id = 80;
</pre>
<p>Because of this format model, Oracle returns salaries with leading dollar signs, commas every three digits, and two decimal places.</p>
<p>The following statement selects the date on which each employee from Department 20 was hired and uses the <code dir="ltr">TO_CHAR</code> function to convert these dates to character strings with the format specified by the date format model &#39;<code dir="ltr">fmMonth</code> <code dir="ltr">DD,</code> <code dir="ltr">YYYY</code>&#39;:</p>
<pre dir="ltr">SELECT last_name employee, TO_CHAR(hire_date,&#39;fmMonth DD, YYYY&#39;) hiredate
  FROM employees
  WHERE department_id = 20;
</pre>
<p>With this format model, Oracle returns the hire dates without blank padding (as specified by <code dir="ltr">fm</code>), two digits for the day, and the century included in the year.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i170559">&#34;Format Model Modifiers&#34;</a> for a description of the <code dir="ltr">fm</code> format element</div>
<p><a id="SQLRF51089"></a><span class="subhead3">Supplying the Correct Format Model: Examples<a id="sthref423"></a>&nbsp;</span>When you insert or update a column value, the data type of the value that you specify must correspond to the column data type of the column. You can use format models to specify the format of a value that you are converting from one data type to another data type required for a column.</p>
<p>For example, a value that you insert into a <code dir="ltr">DATE</code> column must be a value of the <code dir="ltr">DATE</code> data type or a character string in the default date format (Oracle implicitly converts character strings in the default date format to the <code dir="ltr">DATE</code> data type). If the value is in another format, then you must use the <code dir="ltr">TO_DATE</code> function to convert the value to the <code dir="ltr">DATE</code> data type. You must also use a format model to specify the format of the character string.</p>
<p>The following statement updates <code dir="ltr">Hunold&#39;s</code> hire date using the <code dir="ltr">TO_DATE</code> function with the format mask &#39;YYYY MM DD&#39; to convert the character string &#39;2008 05 20&#39; to a <code dir="ltr">DATE</code> value:</p>
<pre dir="ltr">UPDATE employees 
  SET hire_date = TO_DATE(&#39;2008 05 20&#39;,&#39;YYYY MM DD&#39;) 
  WHERE last_name = &#39;Hunold&#39;;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABGCHFC"></a>
<div id="SQLRF51090" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">String-to-Date Conversion Rules <a id="sthref424"></a></h2>
<p>The following additional formatting rules apply when converting string values to date values (unless you have used the <code dir="ltr">FX</code> or <code dir="ltr">FXFM</code> modifiers in the format model to control exact format checking):</p>
<ul>
<li>
<p>You can omit punctuation included in the format string from the date string if all the digits of the numerical format elements, including leading zeros, are specified. For example, specify 02 and not 2 for two-digit format elements such as MM, DD, and YY.</p>
</li>
<li>
<p>You can omit time fields found at the end of a format string from the date string.</p>
</li>
<li>
<p>You can use any non-alphanumeric character in the date string to match the punctuation symbol in the format string.</p>
</li>
<li>
<p>If a match fails between a datetime format element and the corresponding characters in the date string, then Oracle attempts alternative format elements, as shown in <a href="#g195479">Table 2-18</a>.</p>
</li>
</ul>
<div id="SQLRF51091" class="tblhruleformal">
<p class="titleintable"><a id="sthref425"></a><a id="g195479"></a>Table 2-18 Oracle Format Matching</p>
<table class="cellalignment5872" title="Oracle Format Matching " summary="The first column lists some string format elements, and the second lists datetime elements that Oracle Database might use in place of the string." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t70">Original Format Element</th>
<th class="cellalignment5873" id="r1c2-t70">Additional Format Elements to Try in Place of the Original</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t70" headers="r1c1-t70">
<pre dir="ltr">&#39;MM&#39;
</pre></td>
<td class="cellalignment5869" headers="r2c1-t70 r1c2-t70">
<p><code dir="ltr">&#39;MON&#39;</code> and <code dir="ltr">&#39;MONTH&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t70" headers="r1c1-t70">
<p><code dir="ltr">&#39;MON</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t70 r1c2-t70">
<p><code dir="ltr">&#39;MONTH&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t70" headers="r1c1-t70">
<p><code dir="ltr">&#39;MONTH&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t70 r1c2-t70">
<p><code dir="ltr">&#39;MON&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t70" headers="r1c1-t70">
<p><code dir="ltr">&#39;YY&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t70 r1c2-t70">
<p><code dir="ltr">&#39;YYYY&#39;</code></p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t70" headers="r1c1-t70">
<p><code dir="ltr">&#39;RR&#39;</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t70 r1c2-t70">
<p><code dir="ltr">&#39;RRRR&#39;</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="i54997"></a>
<div id="SQLRF51092" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">XML Format Model <a id="sthref426"></a><a id="sthref427"></a><a id="sthref428"></a></h2>
<p>The <code dir="ltr">SYS_XMLAgg</code> and <code dir="ltr">SYS_XMLGen</code> (deprecated) functions return an instance of type <code dir="ltr">XMLType</code> containing an XML document. Oracle provides the <code dir="ltr">XMLFormat</code> object, which lets you format the output of these functions.</p>
<p><a href="#g195161">Table 2-19</a> lists and describes the attributes of the <code dir="ltr">XMLFormat</code> object. The function that implements this type follows the table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="functions205.htm#i1006716">SYS_XMLAGG</a> for information on the <code dir="ltr">SYS_XMLAgg</code> function</p>
</li>
<li>
<p><a href="functions206.htm#i1004367">SYS_XMLGEN</a> for information on the <code dir="ltr">SYS_XMLGen</code> function</p>
</li>
<li>
<p><a class="olink ADXDB1600" href="../ADXDB/xdb13gen.htm#ADXDB1600"><span class="italic">Oracle XML Developer&#39;s Kit Programmer&#39;s Guide</span></a> for more information on the implementation of the <code dir="ltr">XMLFormat</code> object and its use</p>
</li>
</ul>
</div>
<div id="SQLRF51093" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref429"></a><a id="g195161"></a>Table 2-19 Attributes of the XMLFormat Object</p>
<table class="cellalignment5872" title="Attributes of the XMLFormat Object" summary="The first column lists the attributes of the XMLFormat object type. The second and third column provide the datatype and purpose of each attribute, respectively." dir="ltr">
<thead>
<tr class="cellalignment5863">
<th class="cellalignment5873" id="r1c1-t72">Attribute</th>
<th class="cellalignment5873" id="r1c2-t72">Data Type</th>
<th class="cellalignment5873" id="r1c3-t72">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r2c1-t72" headers="r1c1-t72">
<p><code dir="ltr">enclTag</code></p>
</td>
<td class="cellalignment5869" headers="r2c1-t72 r1c2-t72">
<p><code dir="ltr">VARCHAR2(4000)</code> or <code dir="ltr">VARCHAR2(32767)</code><a id="BABJEJAG" href="#BABJEJAG" onclick="footdisplay(1,&#34;The data type for this attribute is \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(4000)\u003c/code\u003e if the initialization parameter \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eSTANDARD\u003c/code\u003e, and \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(32767)\u003c/code\u003e if \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eEXTENDED\u003c/code\u003e. See \u003ca target=\&#34;sql_elements004\&#34; href=\&#34;sql_elements001.htm#BABCIGGA\&#34;\u003e\&#34;Extended Data Types\&#34;\u003c/a\u003e for more information.&#34;)"><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
<td class="cellalignment5869" headers="r2c1-t72 r1c3-t72">
<p>The name of the enclosing tag for the result of the <code dir="ltr">SYS_XMLAgg</code> or <code dir="ltr">SYS_XMLGen</code> (deprecated) function.</p>
<p><code dir="ltr">SYS_XMLAgg</code>: The default is <code dir="ltr">ROWSET</code>.</p>
<p><code dir="ltr">SYS_XMLGen</code>: If the input to the function is a column name, then the default is the column name. Otherwise the default is <code dir="ltr">ROW</code>. When <code dir="ltr">schemaType</code> is set to <code dir="ltr">USE_GIVEN_SCHEMA</code>, this attribute also gives the name of the XMLSchema element.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r3c1-t72" headers="r1c1-t72">
<p><code dir="ltr">schemaType</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t72 r1c2-t72">
<p><code dir="ltr">VARCHAR2(100)</code></p>
</td>
<td class="cellalignment5869" headers="r3c1-t72 r1c3-t72">
<p>The type of schema generation for the output document. Valid values are &#39;<code dir="ltr">NO_SCHEMA</code>&#39; and &#39;<code dir="ltr">USE_GIVEN_SCHEMA</code>&#39;. The default is &#39;<code dir="ltr">NO_SCHEMA</code>&#39;.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r4c1-t72" headers="r1c1-t72">
<p><code dir="ltr">schemaName</code></p>
</td>
<td class="cellalignment5869" headers="r4c1-t72 r1c2-t72">
<p><code dir="ltr">VARCHAR2(4000)</code> or <code dir="ltr">VARCHAR2(32767)</code><a id="sthref430" href="#sthref430" onclick="footdisplay(1,&#34;The data type for this attribute is \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(4000)\u003c/code\u003e if the initialization parameter \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eSTANDARD\u003c/code\u003e, and \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(32767)\u003c/code\u003e if \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eEXTENDED\u003c/code\u003e. See \u003ca target=\&#34;sql_elements004\&#34; href=\&#34;sql_elements001.htm#BABCIGGA\&#34;\u003e\&#34;Extended Data Types\&#34;\u003c/a\u003e for more information.&#34;)"><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment5869" headers="r4c1-t72 r1c3-t72">
<p>The name of the target schema Oracle uses if the value of the <code dir="ltr">schemaType</code> is &#39;<code dir="ltr">USE_GIVEN_SCHEMA</code>&#39;. If you specify <code dir="ltr">schemaName</code>, then Oracle uses the enclosing tag as the element name.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r5c1-t72" headers="r1c1-t72">
<p><code dir="ltr">targetNameSpace</code></p>
</td>
<td class="cellalignment5869" headers="r5c1-t72 r1c2-t72">
<p><code dir="ltr">VARCHAR2(4000)</code> or <code dir="ltr">VARCHAR2(32767)</code><a id="sthref431" href="#sthref431" onclick="footdisplay(1,&#34;The data type for this attribute is \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(4000)\u003c/code\u003e if the initialization parameter \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eSTANDARD\u003c/code\u003e, and \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(32767)\u003c/code\u003e if \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eEXTENDED\u003c/code\u003e. See \u003ca target=\&#34;sql_elements004\&#34; href=\&#34;sql_elements001.htm#BABCIGGA\&#34;\u003e\&#34;Extended Data Types\&#34;\u003c/a\u003e for more information.&#34;)"><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment5869" headers="r5c1-t72 r1c3-t72">
<p>The target namespace if the schema is specified (that is, <code dir="ltr">schemaType</code> is <code dir="ltr">GEN_SCHEMA_*</code>, or <code dir="ltr">USE_GIVEN_SCHEMA</code>)</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r6c1-t72" headers="r1c1-t72">
<p><code dir="ltr">dburlPrefix</code></p>
</td>
<td class="cellalignment5869" headers="r6c1-t72 r1c2-t72">
<p><code dir="ltr">VARCHAR2(4000)</code> or <code dir="ltr">VARCHAR2(32767)</code><a id="sthref432" href="#sthref432" onclick="footdisplay(1,&#34;The data type for this attribute is \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(4000)\u003c/code\u003e if the initialization parameter \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eSTANDARD\u003c/code\u003e, and \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(32767)\u003c/code\u003e if \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eEXTENDED\u003c/code\u003e. See \u003ca target=\&#34;sql_elements004\&#34; href=\&#34;sql_elements001.htm#BABCIGGA\&#34;\u003e\&#34;Extended Data Types\&#34;\u003c/a\u003e for more information.&#34;)"><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment5869" headers="r6c1-t72 r1c3-t72">
<p>The URL to the database to use if <code dir="ltr">WITH_SCHEMA</code> is specified. If this attribute is not specified, then Oracle declares the URL to the types as a relative URL reference.</p>
</td>
</tr>
<tr class="cellalignment5863">
<td class="cellalignment5869" id="r7c1-t72" headers="r1c1-t72">
<p><code dir="ltr">processingIns</code></p>
</td>
<td class="cellalignment5869" headers="r7c1-t72 r1c2-t72">
<p><code dir="ltr">VARCHAR2(4000)</code> or <code dir="ltr">VARCHAR2(32767)</code><a id="sthref433" href="#sthref433" onclick="footdisplay(1,&#34;The data type for this attribute is \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(4000)\u003c/code\u003e if the initialization parameter \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eSTANDARD\u003c/code\u003e, and \u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2(32767)\u003c/code\u003e if \u003ccode dir=\&#34;ltr\&#34;\u003eMAX_STRING_SIZE\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003e=\u003c/code\u003e \u003ccode dir=\&#34;ltr\&#34;\u003eEXTENDED\u003c/code\u003e. See \u003ca target=\&#34;sql_elements004\&#34; href=\&#34;sql_elements001.htm#BABCIGGA\&#34;\u003e\&#34;Extended Data Types\&#34;\u003c/a\u003e for more information.&#34;)"><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment5869" headers="r7c1-t72 r1c3-t72">
<p>User-provided processing instructions, which are appended to the top of the function output before the element.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformalwide" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>The data type for this attribute is <code dir="ltr">VARCHAR2(4000)</code> if the initialization parameter <code dir="ltr">MAX_STRING_SIZE</code> <code dir="ltr">=</code> <code dir="ltr">STANDARD</code>, and <code dir="ltr">VARCHAR2(32767)</code> if <code dir="ltr">MAX_STRING_SIZE</code> <code dir="ltr">=</code> <code dir="ltr">EXTENDED</code>. See <a href="sql_elements001.htm#BABCIGGA">&#34;Extended Data Types&#34;</a> for more information.</p>
<p>The function that implements the <code dir="ltr">XMLFormat</code> object follows:</p>
<pre dir="ltr">STATIC FUNCTION createFormat(
     enclTag IN varchar2 := &#39;ROWSET&#39;,
     schemaType IN varchar2 := &#39;NO_SCHEMA&#39;,
     schemaName IN varchar2 := null,
     targetNameSpace IN varchar2 := null,
     dburlPrefix IN varchar2 := null, 
     processingIns IN varchar2 := null) RETURN XMLGenFormatType
       deterministic parallel_enable,
  MEMBER PROCEDURE genSchema (spec IN varchar2),
  MEMBER PROCEDURE setSchemaName(schemaName IN varchar2),
  MEMBER PROCEDURE setTargetNameSpace(targetNameSpace IN varchar2),
  MEMBER PROCEDURE setEnclosingElementName(enclTag IN varchar2), 
  MEMBER PROCEDURE setDbUrlPrefix(prefix IN varchar2),
  MEMBER PROCEDURE setProcessingIns(pi IN varchar2),
  CONSTRUCTOR FUNCTION XMLGenFormatType (
     enclTag IN varchar2 := &#39;ROWSET&#39;,
     schemaType IN varchar2 := &#39;NO_SCHEMA&#39;,
     schemaName IN varchar2 := null,
     targetNameSpace IN varchar2 := null,
     dbUrlPrefix IN varchar2 := null, 
     processingIns IN varchar2 := null) RETURN SELF AS RESULT
      deterministic parallel_enable,
  STATIC function createFormat2(
      enclTag in varchar2 := &#39;ROWSET&#39;,
      flags in raw) return sys.xmlgenformattype 
      deterministic parallel_enable
);
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="sql_elements003.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="sql_elements005.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>