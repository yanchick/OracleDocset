<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-103578"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/UPDATE"></a><title>UPDATE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-18T18:53:4Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Reference"/>
<meta name="dcterms.identifier" content="E41329-25"/>
<meta name="dcterms.isVersionOf" content="SQLRF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="statements_10007.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ap_syntx.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41329-25.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">521/555</span> <!-- End Header --><a id="i2067715"></a>
<div id="SQLRF01708" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h1 class="refsect1">UPDATE <a id="sthref7534"></a></h1>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7535"></a>Purpose</p>
<p><a id="sthref7536"></a><a id="sthref7537"></a><a id="sthref7538"></a>Use the <code dir="ltr">UPDATE</code> statement to change existing values in a table or in the base table of a view or the master table of a materialized view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7539"></a>Additional Topics</p>
<ul>
<li>
<p><a href="#i2112170">Prerequisites</a></p>
</li>
<li>
<p><a href="#i2112182">Syntax</a></p>
</li>
<li>
<p><a href="#i2112194">Semantics</a></p>
</li>
<li>
<p><a href="#i2189756">Examples</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2112170"></a>Prerequisites</p>
<p>For you to update values in a table, the table must be in your own schema or you must have the <code dir="ltr">UPDATE</code> object privilege on the table.</p>
<p>For you to update values in the base table of a view:</p>
<ul>
<li>
<p>You must have the <code dir="ltr">UPDATE</code> object privilege on the view, and</p>
</li>
<li>
<p>Whoever owns the schema containing the view must have the <code dir="ltr">UPDATE</code> object privilege on the base table.</p>
</li>
</ul>
<p>The <code dir="ltr">UPDATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege also allows you to update values in any table or in the base table of any view.</p>
<p>To update values in an object on a remote database, you must also have the <code dir="ltr">READ</code> or <code dir="ltr">SELECT</code> object privilege on the object.</p>
<p>If the <code dir="ltr">SQL92_SECURITY</code> initialization parameter is set to <code dir="ltr">TRUE</code> and the <code dir="ltr">UPDATE</code> operation references table columns, such as the columns in a <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code>, then you must also have the <code dir="ltr">SELECT</code> object privilege on the object you want to update.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2112182"></a>Syntax</p>
<p class="subhead2"><a id="SQLRF55443"></a><span class="italic">update</span>::=</p>
<img width="640" height="140" src="img/update.gif" alt="Description of update.gif follows"/><br/>
<a id="sthref7540" href="img_text/update.htm">Description of the illustration &#39;&#39;update.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#BABGGJCE"><span class="xreftitleitalic"><span class="italic">DML_table_expression_clause</span>::=</span></a>, <a href="#i2126876"><span class="xreftitleitalic"><span class="italic">update_set_clause</span> ::=</span></a>, <a href="#i2126344"><span class="xreftitleitalic"><span class="italic">where_clause</span> ::=</span></a>, <a href="#i2126358"><span class="xreftitleitalic"><span class="italic">returning_clause</span>::=</span></a>, <a href="#BCEEAAGC"><span class="xreftitleitalic"><span class="italic">error_logging_clause</span>::=</span></a>)</p>
<p class="subhead2"><a id="BABGGJCE"></a><a id="SQLRF55444"></a><a href="#i2067871"><span class="xreftitleitalic"><span class="italic">DML_table_expression_clause</span></span></a>::=</p>
<img width="513" height="232" src="img/dml_table_expression_clause.gif" alt="Description of dml_table_expression_clause.gif follows"/><br/>
<a id="sthref7541" href="img_text/dml_table_expression_clause.htm">Description of the illustration &#39;&#39;dml_table_expression_clause.gif&#39;&#39;</a><br/>
<br/>
<p>(<a href="#CHDBBDEI"><span class="xreftitleitalic"><span class="italic">partition_extension_clause</span>::=</span></a>, <a href="statements_10002.htm#i2126435"><span class="xreftitleitalic"><span class="italic">subquery</span>::=</span></a>--part of <code dir="ltr">SELECT</code>, <a href="#i2126407"><span class="xreftitleitalic"><span class="italic">subquery_restriction_clause</span> ::=</span></a>, <a href="#i2126867"><span class="xreftitleitalic"><span class="italic">table_collection_expression</span> ::=</span></a>)</p>
<p class="subhead2"><a id="CHDBBDEI"></a><a id="SQLRF55445"></a><span class="italic">partition_extension_clause</span>::=</p>
<img width="475" height="187" src="img/partition_extension_clause.gif" alt="Description of partition_extension_clause.gif follows"/><br/>
<a id="sthref7542" href="img_text/partition_extension_clause.htm">Description of the illustration &#39;&#39;partition_extension_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2126407"></a><a id="SQLRF55446"></a><a href="#i2079254"><span class="xreftitleitalic"><span class="italic">subquery_restriction_clause</span></span></a> ::=</p>
<img width="463" height="64" src="img/subquery_restriction_clause.gif" alt="Description of subquery_restriction_clause.gif follows"/><br/>
<a id="sthref7543" href="img_text/subquery_restriction_clause.htm">Description of the illustration &#39;&#39;subquery_restriction_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2126867"></a><a id="SQLRF55447"></a><a href="#i2067981"><span class="xreftitleitalic"><span class="italic">table_collection_expression</span></span></a> ::=</p>
<img width="414" height="46" src="img/table_collection_expression.gif" alt="Description of table_collection_expression.gif follows"/><br/>
<a id="sthref7544" href="img_text/table_collection_expression.htm">Description of the illustration &#39;&#39;table_collection_expression.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2126876"></a><a id="SQLRF55448"></a><a href="#i2073065"><span class="xreftitleitalic"><span class="italic">update_set_clause</span></span></a> ::=</p>
<img width="478" height="251" src="img/update_set_clause.gif" alt="Description of update_set_clause.gif follows"/><br/>
<a id="sthref7545" href="img_text/update_set_clause.htm">Description of the illustration &#39;&#39;update_set_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2126344"></a><a id="SQLRF55449"></a><a href="#i2068118"><span class="xreftitleitalic"><span class="italic">where_clause</span></span></a> ::=</p>
<img width="159" height="27" src="img/where_clause.gif" alt="Description of where_clause.gif follows"/><br/>
<a id="sthref7546" href="img_text/where_clause.htm">Description of the illustration &#39;&#39;where_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="i2126358"></a><a id="SQLRF55450"></a><a href="#i2087020"><span class="xreftitleitalic"><span class="italic">returning_clause</span></span></a>::=<a id="sthref7547"></a></p>
<img width="383" height="76" src="img/returning_clause.gif" alt="Description of returning_clause.gif follows"/><br/>
<a id="sthref7548" href="img_text/returning_clause.htm">Description of the illustration &#39;&#39;returning_clause.gif&#39;&#39;</a><br/>
<br/>
<p class="subhead2"><a id="BCEEAAGC"></a><a id="SQLRF55451"></a><a href="#BCEFBFCD"><span class="xreftitleitalic"><span class="italic">error_logging_clause</span></span></a>::=<a id="sthref7549"></a></p>
<img width="662" height="166" src="img/error_logging_clause.gif" alt="Description of error_logging_clause.gif follows"/><br/>
<a id="sthref7550" href="img_text/error_logging_clause.htm">Description of the illustration &#39;&#39;error_logging_clause.gif&#39;&#39;</a><br/>
<br/></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2112194"></a>Semantics</p>
<p class="subhead1"><a id="SQLRF55452"></a><span class="italic">hint</span></p>
<p>Specify a comment that passes instructions to the optimizer on choosing an execution plan for the statement.</p>
<p>You can place a parallel hint immediately after the <code dir="ltr">UPDATE</code> keyword to parallelize both the underlying scan and <code dir="ltr">UPDATE</code> operations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="sql_elements006.htm#i35922">&#34;Hints&#34;</a> for the syntax and description of hints</p>
</li>
<li>
<p><a class="olink CNCPT220" href="../CNCPT/process.htm#CNCPT220"><span class="italic">Oracle Database Concepts</span></a> for detailed information about parallel execution</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="i2067871"></a><a id="SQLRF55453"></a><span class="italic">DML_table_expression_clause<a id="sthref7551"></a><a id="sthref7552"></a></span></p>
<p>The <code dir="ltr">ONLY</code> clause applies only to views. Specify <code dir="ltr">ONLY</code> syntax if the view in the <code dir="ltr">UPDATE</code> clause is a view that belongs to a hierarchy and you do not want to update rows from any of its subviews.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2079307">&#34;Restrictions on the <span class="italic">DML_table_expression_clause</span>&#34;</a> and <a href="#i2189758">&#34;Updating a Table: Examples&#34;</a></div>
<p class="subhead2"><a id="SQLRF55454"></a><span class="italic">schema</span></p>
<p>Specify the schema containing the object to be updated. If you omit <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then the database assumes the object is in your own schema.</p>
<p class="subhead2"><a id="SQLRF55455"></a><span class="italic">table</span> | <span class="italic">view</span> | <span class="italic">materialized_view</span> |<span class="italic">subquery</span></p>
<p>Specify the name of the table, view, materialized view, or the columns returned by a subquery to be updated. Issuing an <code dir="ltr">UPDATE</code> statement against a table fires any <code dir="ltr">UPDATE</code> triggers associated with the table.</p>
<ul>
<li>
<p><a id="sthref7553"></a>If you specify <code dir="ltr"><span class="codeinlineitalic">view</span></code>, then the database updates the base table of the view. You cannot update a view except with <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> triggers if the defining query of the view contains one of the following constructs:</p>
<dl>
<dd>A set operator</dd>
<dd>A <code dir="ltr">DISTINCT</code> operator</dd>
<dd>An aggregate or analytic function</dd>
<dd>A <code dir="ltr">GROUP</code> <code dir="ltr">BY</code>, <code dir="ltr">ORDER</code> <code dir="ltr">BY</code>, <code dir="ltr">MODEL</code>, <code dir="ltr">CONNECT</code> <code dir="ltr">BY</code>, or <code dir="ltr">START</code> <code dir="ltr">WITH</code> clause</dd>
<dd>A collection expression in a <code dir="ltr">SELECT</code> list</dd>
<dd>A subquery in a <code dir="ltr">SELECT</code> list</dd>
<dd>A subquery designated <code dir="ltr">WITH</code> <code dir="ltr">READ</code> <code dir="ltr">ONLY</code></dd>
<dd>A recursive <code dir="ltr">WITH</code> clause</dd>
<dd>Joins, with some exceptions, as documented in <a class="olink ADMIN020" href="../ADMIN/views.htm#ADMIN020"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a></dd>
</dl>
</li>
<li>
<p>You cannot update more than one base table through a view.</p>
</li>
<li>
<p>In addition, if the view was created with the <code dir="ltr">WITH</code> <code dir="ltr">CHECK</code> <code dir="ltr">OPTION</code>, then you can update the view only if the resulting data satisfies the view&#39;s defining query.</p>
</li>
<li>
<p>If <code dir="ltr"><span class="codeinlineitalic">table</span></code> or the base table of <code dir="ltr"><span class="codeinlineitalic">view</span></code> contains one or more domain index columns, then this statement executes the appropriate indextype update routine.</p>
</li>
<li>
<p>You cannot update rows in a read-only materialized view. If you update rows in a writable materialized view, then the database updates the rows from the underlying container table. However, the updates are overwritten at the next refresh operation. If you update rows in an updatable materialized view that is part of a materialized view group, then the database also updates the corresponding rows in the master table.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADDCI4200" href="../ADDCI/ext_idx_ref.htm#ADDCI4200"><span class="italic">Oracle Database Data Cartridge Developer&#39;s Guide</span></a> for more information on the indextype update routines</p>
</li>
<li>
<p><a href="statements_6002.htm#i2063793">CREATE MATERIALIZED VIEW</a> for information on creating updatable materialized views</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="SQLRF55456"></a><span class="italic">partition_extension_clause</span> <a id="sthref7554"></a><a id="sthref7555"></a><a id="sthref7556"></a><a id="sthref7557"></a></p>
<p>Specify the name or partition key value of the partition or subpartition within <code dir="ltr"><span class="codeinlineitalic">table</span></code> targeted for updates. You need not specify the partition name when updating values in a partitioned table. However in some cases specifying the partition name can be more efficient than a complicated <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="sql_elements009.htm#i165979">&#34;References to Partitioned Tables and Indexes&#34;</a> and <a href="#i2130226">&#34;Updating a Partition: Example&#34;</a></div>
<p class="subhead2"><a id="SQLRF55457"></a><span class="italic">dblink</span></p>
<p>Specify a complete or partial name of a database link to a remote database where the object is located. You can use a database link to update a remote object only if you are using Oracle Database distributed functionality.</p>
<p>If you omit <code dir="ltr"><span class="codeinlineitalic">dblink,</span></code> then the database assumes the object is on the local database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="sql_elements009.htm#i27761">&#34;References to Objects in Remote Databases&#34;</a> for information on referring to database links</div>
<p class="subhead2"><a id="i2079254"></a><a id="SQLRF55458"></a><span class="italic">subquery_restriction_clause <a id="sthref7558"></a><a id="sthref7559"></a></span></p>
<p>Use the <code dir="ltr"><span class="codeinlineitalic">subquery_restriction_clause</span></code> to restrict the subquery in one of the following ways:</p>
<p><a id="SQLRF55459"></a><span class="subhead3">WITH READ ONLY&nbsp;</span>Specify <code dir="ltr">WITH READ ONLY</code> to indicate that the table or view cannot be updated.</p>
<p><a id="SQLRF55460"></a><span class="subhead3">WITH CHECK OPTION&nbsp;</span>Specify <code dir="ltr">WITH CHECK OPTION</code> to indicate that Oracle Database prohibits any changes to the table or view that would produce rows that are not included in the subquery. When used in the subquery of a DML statement, you can specify this clause in a subquery in the <code dir="ltr">FROM</code> clause but not in subquery in the <code dir="ltr">WHERE</code> clause.</p>
<p><a id="SQLRF55461"></a><span class="subhead3">CONSTRAINT <span class="italic">constraint</span>&nbsp;</span>Specify the name of the <code dir="ltr">CHECK OPTION</code> constraint. If you omit this identifier, then Oracle automatically assigns the constraint a name of the form <code dir="ltr">SYS_C</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>, where n is an integer that makes the constraint name unique within the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_10002.htm#i2066598">&#34;Using the WITH CHECK OPTION Clause: Example&#34;</a></div>
<p class="subhead2"><a id="i2067981"></a><a id="SQLRF55462"></a><span class="italic">table_collection_expression</span> <span class="italic"><a id="sthref7560"></a><a id="sthref7561"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">table_collection_expression</span></code> lets you inform Oracle that the value of <code dir="ltr"><span class="codeinlineitalic">collection_expression</span></code> should be treated as a table for purposes of query and DML operations. The <code dir="ltr"><span class="codeinlineitalic">collection_expression</span></code> can be a subquery, a column, a function, or a collection constructor. Regardless of its form, it must return a collection value&mdash;that is, a value whose type is nested table or varray. This process of extracting the elements of a collection is called <span class="bold">collection unnesting</span>.</p>
<p>The optional plus (+) is relevant if you are joining the <code dir="ltr">TABLE</code> collection expression with the parent table. The + creates an outer join of the two, so that the query returns rows from the outer table even if the collection expression is null.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In earlier releases of Oracle, when <code dir="ltr"><span class="codeinlineitalic">collection_expression</span></code> was a subquery, <code dir="ltr"><span class="codeinlineitalic">table_collection_expression</span></code> was expressed as <code dir="ltr">THE</code> <code dir="ltr"><span class="codeinlineitalic">subquery</span></code>. That usage is now deprecated.</div>
<p>You can use a <code dir="ltr"><span class="codeinlineitalic">table_collection_expression</span></code> to update rows in one table based on rows from another table. For example, you could roll up four quarterly sales tables into a yearly sales table.</p>
<p class="subhead2"><a id="SQLRF55463"></a><span class="italic">t_alias</span></p>
<p>Specify a <span class="bold">correlation name</span> (alias) for the table, view, or subquery to be referenced elsewhere in the statement. This alias is required if the <code dir="ltr"><span class="codeinlineitalic">DML_table_expression_clause</span></code> references any object type attributes or object type methods.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2068234">&#34;Correlated Update: Example&#34;</a></div>
<p><a id="i2079307"></a><a id="SQLRF55464"></a><span class="subhead3">Restrictions on the <span class="italic">DML_table_expression_clause</span>&nbsp;</span>This clause is subject to the following restrictions:</p>
<ul>
<li>
<p>You cannot execute this statement if <code dir="ltr"><span class="codeinlineitalic">table</span></code> or the base table of <code dir="ltr"><span class="codeinlineitalic">view</span></code> contains any domain indexes marked <code dir="ltr">IN_PROGRESS</code> or <code dir="ltr">FAILED</code>.</p>
</li>
<li>
<p>You cannot insert into a partition if any affected index partitions are marked <code dir="ltr">UNUSABLE</code>.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">order_by_clause</span></code> in the subquery of the <code dir="ltr"><span class="codeinlineitalic">DML_table_expression_clause</span></code>.</p>
</li>
<li>
<p>If you specify an index, index partition, or index subpartition that has been marked <code dir="ltr">UNUSABLE</code>, then the <code dir="ltr">UPDATE</code> statement will fail unless the <code dir="ltr">SKIP_UNUSABLE_INDEXES</code> session parameter has been set to <code dir="ltr">TRUE</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_2015.htm#i2231814">ALTER SESSION</a> for information on the <code dir="ltr">SKIP_UNUSABLE_INDEXES</code> session parameter</div>
<p class="subhead1"><a id="i2073065"></a><a id="SQLRF55465"></a><span class="italic">update_set_clause</span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">update_set_clause</span></code> lets you set column values.</p>
<p class="subhead2"><a id="SQLRF55466"></a><span class="italic">column</span></p>
<p>Specify the name of a column of the object that is to be updated. If you omit a column of the table from the <code dir="ltr"><span class="codeinlineitalic">update_set_clause</span></code>, then the value of that column remains unchanged.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">column</span></code> refers to a LOB object attribute, then you must first initialize it with a value of empty or null. You cannot update it with a literal. Also, if you are updating a LOB value using some method other than a direct <code dir="ltr">UPDATE</code> SQL statement, then you must first lock the row containing the LOB. See <a href="statements_10002.htm#i2066346"><span class="xreftitleitalic"><span class="italic">for_update_clause</span></span></a> for more information.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">column</span></code> is a virtual column, you cannot specify it here. Rather, you must update the values from which the virtual column is derived.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">column</span></code> is part of the partitioning key of a partitioned table, then <code dir="ltr">UPDATE</code> will fail if you change a value in the column that would move the row to a different partition or subpartition, unless you enable row movement. Refer to the <code dir="ltr"><span class="codeinlineitalic">row_movement_clause</span></code> of <a href="statements_7002.htm#i2095331">CREATE TABLE</a> or <a href="statements_3001.htm#CJAHHIBI">ALTER TABLE</a>.</p>
<p>In addition, if <code dir="ltr"><span class="codeinlineitalic">column</span></code> is part of the partitioning key of a list-partitioned table, then <code dir="ltr">UPDATE</code> will fail if you specify a value for the column that does not already exist in the <code dir="ltr"><span class="codeinlineitalic">partition_key_value</span></code> list of one of the partitions.</p>
<p class="subhead2"><a id="SQLRF55467"></a><span class="italic">subquery</span></p>
<p>Specify a subquery that returns exactly one row for each row updated.</p>
<ul>
<li>
<p>If you specify only one column in the <code dir="ltr"><span class="codeinlineitalic">update_set_clause</span></code>, then the subquery can return only one value.</p>
</li>
<li>
<p>If you specify multiple columns in the <code dir="ltr"><span class="codeinlineitalic">update_set_clause</span></code>, then the subquery must return as many values as you have specified columns.</p>
</li>
<li>
<p>If the subquery returns no rows, then the column is assigned a null.</p>
</li>
<li>
<p>If this <code dir="ltr"><span class="codeinlineitalic">subquery</span></code> refers to remote objects, then the <code dir="ltr">UPDATE</code> operation can run in parallel as long as the reference does not loop back to an object on the local database. However, if the <code dir="ltr"><span class="codeinlineitalic">subquery</span></code> in the <code dir="ltr"><span class="codeinlineitalic">DML_table_expression_clause</span></code> refers to any remote objects, then the <code dir="ltr">UPDATE</code> operation will run serially without notification.</p>
</li>
</ul>
<p><span class="italic"><a id="sthref7562"></a></span>You can use the <code dir="ltr"><span class="codeinlineitalic">flashback_query_clause</span></code> within the subquery to update <code dir="ltr"><span class="codeinlineitalic">table</span></code> with past data. Refer to the <a href="statements_10002.htm#i2112818"><span class="xreftitleitalic"><span class="italic">flashback_query_clause</span></span></a> of <code dir="ltr">SELECT</code> for more information on this clause.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="statements_10002.htm#i2065646">SELECT</a> and <a href="queries007.htm#i2067858">&#34;Using Subqueries&#34;</a></p>
</li>
<li>
<p><a href="statements_7002.htm#CJACIHHF"><span class="xreftitleitalic"><span class="italic">parallel_clause</span></span></a> in the <a href="statements_7002.htm#i2095331">CREATE TABLE</a> documentation</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="SQLRF55468"></a><span class="italic">expr</span></p>
<p>Specify an expression that resolves to the new value assigned to the corresponding column.</p>
<div class="infobox-note">
<p class="notep1">See Also:</p>
<a href="expressions.htm#g1057115">Chapter 5, &#34;Expressions&#34;</a> for the syntax of <code dir="ltr"><span class="codeinlineitalic">expr</span></code> and <a href="#i2135485">&#34;Updating an Object Table: Example&#34;</a></div>
<p><a id="SQLRF55469"></a><span class="subhead3">DEFAULT&nbsp;</span>Specify <code dir="ltr">DEFAULT</code> to set the column to the value previously specified as the default value for the column. If no default value for the corresponding column has been specified, then the database sets the column to null.</p>
<p><a id="SQLRF55470"></a><span class="subhead3">Restriction on Updating to Default Values&nbsp;</span>You cannot specify <code dir="ltr">DEFAULT</code> if you are updating a view.</p>
<p class="subhead2"><a id="SQLRF55471"></a>VALUE Clause</p>
<p>The <code dir="ltr">VALUE</code> clause lets you specify the entire row of an object table.</p>
<p><a id="SQLRF55472"></a><span class="subhead3">Restriction on the VALUE clause&nbsp;</span>You can specify this clause only for an object table.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you insert string literals into a <code dir="ltr">RAW</code> column, then during subsequent queries, Oracle Database will perform a full table scan rather than using any index that might exist on the <code dir="ltr">RAW</code> column.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2135485">&#34;Updating an Object Table: Example&#34;</a></div>
<p class="subhead1"><a id="i2068118"></a><a id="SQLRF55473"></a><span class="italic">where_clause <a id="sthref7563"></a></span></p>
<p>The <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code> lets you restrict the rows updated to those for which the specified <code dir="ltr"><span class="codeinlineitalic">condition</span></code> is true. If you omit this clause, then the database updates all rows in the table or view. Refer to <a href="conditions.htm#g1077361">Chapter 6, &#34;Conditions&#34;</a> for the syntax of <code dir="ltr"><span class="codeinlineitalic">condition</span></code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code> determines the rows in which values are updated. If you do not specify the <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code>, then all rows are updated. For each row that satisfies the <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code>, the columns to the left of the equality operator (=) in the <code dir="ltr"><span class="codeinlineitalic">update_set_clause</span></code> are set to the values of the corresponding expressions to the right of the operator. The expressions are evaluated as the row is updated.</p>
<p class="subhead1"><a id="i2087020"></a><a id="SQLRF55474"></a><span class="italic">returning_clause</span> <a id="sthref7564"></a></p>
<p><a id="sthref7565"></a>The returning clause retrieves the rows affected by a DML statement. You can specify this clause for tables and materialized views and for views with a single base table.</p>
<p>When operating on a single row, a DML statement with a <code dir="ltr"><span class="codeinlineitalic">returning_clause</span></code> can retrieve column expressions using the affected row, rowid, and <code dir="ltr">REFs</code> to the affected row and store them in host variables or PL/SQL variables.</p>
<p>When operating on multiple rows, a DML statement with the <code dir="ltr"><span class="codeinlineitalic">returning_clause</span></code> stores values from expressions, rowids, and <code dir="ltr">REFs</code> involving the affected rows in bind arrays.</p>
<p><a id="SQLRF55475"></a><span class="subhead3"><span class="italic">expr</span>&nbsp;</span>Each item in the <code dir="ltr"><span class="codeinlineitalic">expr</span></code> list must be a valid expression syntax.</p>
<p><a id="SQLRF55476"></a><span class="subhead3">INTO&nbsp;</span>The <code dir="ltr">INTO</code> clause indicates that the values of the changed rows are to be stored in the variable(s) specified in <code dir="ltr"><span class="codeinlineitalic">data_item</span></code> list.</p>
<p><a id="SQLRF55477"></a><span class="subhead3"><span class="italic">data_item</span>&nbsp;</span>Each <code dir="ltr"><span class="codeinlineitalic">data_item</span></code> is a host variable or PL/SQL variable that stores the retrieved <code dir="ltr"><span class="codeinlineitalic">expr</span></code> value.</p>
<p>For each expression in the <code dir="ltr">RETURNING</code> list, you must specify a corresponding type-compatible PL/SQL variable or host variable in the <code dir="ltr">INTO</code> list.</p>
<p><a id="SQLRF55478"></a><span class="subhead3">Restrictions&nbsp;</span>The following restrictions apply to the <code dir="ltr">RETURNING</code> clause:</p>
<ul>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">expr</span></code> is restricted as follows:</p>
<ul>
<li>
<p>For <code dir="ltr">UPDATE</code> and <code dir="ltr">DELETE</code> statements each <code dir="ltr"><span class="codeinlineitalic">expr</span></code> must be a simple expression or a single-set aggregate function expression. You cannot combine simple expressions and single-set aggregate function expressions in the same <code dir="ltr"><span class="codeinlineitalic">returning_clause</span></code>. For <code dir="ltr">INSERT</code> statements, each <code dir="ltr"><span class="codeinlineitalic">expr</span></code> must be a simple expression. Aggregate functions are not supported in an <code dir="ltr">INSERT</code> statement <code dir="ltr">RETURNING</code> clause.</p>
</li>
<li>
<p>Single-set aggregate function expressions cannot include the <code dir="ltr">DISTINCT</code> keyword.</p>
</li>
</ul>
</li>
<li>
<p>If the <code dir="ltr"><span class="codeinlineitalic">expr</span></code> list contains a primary key column or other <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> column, then the update statement fails if the table has a <code dir="ltr">BEFORE</code> <code dir="ltr">UPDATE</code> trigger defined on it.</p>
</li>
<li>
<p>You cannot specify the <code dir="ltr"><span class="codeinlineitalic">returning_clause</span></code> for a multitable insert.</p>
</li>
<li>
<p>You cannot use this clause with parallel DML or with remote objects.</p>
</li>
<li>
<p>You cannot retrieve <code dir="ltr">LONG</code> types with this clause.</p>
</li>
<li>
<p>You cannot specify this clause for a view on which an <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger has been defined.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS012" href="../LNPLS/tuning.htm#LNPLS012"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information on using the <code dir="ltr">BULK</code> <code dir="ltr">COLLECT</code> clause to return multiple values to collection variables</div>
<p class="subhead1"><a id="BCEFBFCD"></a><a id="SQLRF55479"></a><span class="italic">error_logging_clause</span></p>
<p>The <span class="italic">error_logging_clause</span> has the same behavior in an <code dir="ltr">UPDATE</code> statement as it does in an <code dir="ltr">INSERT</code> statement. Refer to the <code dir="ltr">INSERT</code> statement <a href="statements_9015.htm#BGBEIACB"><span class="xreftitleitalic"><span class="italic">error_logging_clause</span></span></a> for more information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="statements_9015.htm#BCEGDJDJ">&#34;Inserting Into a Table with Error Logging: Example&#34;</a></div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2189756"></a>Examples</p>
<p><a id="i2189758"></a><a id="SQLRF55480"></a><span class="subhead3">Updating a Table: Examples&nbsp;</span>The following statement gives null commissions to all employees with the job <code dir="ltr">SH_CLERK</code>:</p>
<pre dir="ltr">UPDATE employees
   SET commission_pct = NULL
   WHERE job_id = &#39;SH_CLERK&#39;;
</pre>
<p>The following statement promotes Douglas Grant to manager of Department 20 with a $1,000 raise:</p>
<pre dir="ltr">UPDATE employees SET 
    job_id = &#39;SA_MAN&#39;, salary = salary + 1000, department_id = 120 
    WHERE first_name||&#39; &#39;||last_name = &#39;Douglas Grant&#39;; 
</pre>
<p>The following statement increases the salary of an employee in the <code dir="ltr">employees</code> table on the <code dir="ltr">remote</code> database:</p>
<pre dir="ltr">UPDATE employees@remote
   SET salary = salary*1.1
   WHERE last_name = &#39;Baer&#39;;
</pre>
<p>The next example shows the following syntactic constructs of the <code dir="ltr">UPDATE</code> statement:</p>
<ul>
<li>
<p>Both forms of the <code dir="ltr"><span class="codeinlineitalic">update_set_clause</span></code> together in a single statement</p>
</li>
<li>
<p>A correlated subquery</p>
</li>
<li>
<p>A <code dir="ltr"><span class="codeinlineitalic">where_clause</span></code> to limit the updated rows</p>
</li>
</ul>
<pre dir="ltr">UPDATE employees a 
    SET department_id = 
        (SELECT department_id 
            FROM departments 
            WHERE location_id = &#39;2100&#39;), 
        (salary, commission_pct) = 
        (SELECT 1.1*AVG(salary), 1.5*AVG(commission_pct) 
          FROM employees b 
          WHERE a.department_id = b.department_id) 
    WHERE department_id IN 
        (SELECT department_id 
          FROM departments
          WHERE location_id = 2900 
              OR location_id = 2700); 
</pre>
<p>The preceding <code dir="ltr">UPDATE</code> statement performs the following operations:</p>
<ul>
<li>
<p>Updates only those employees who work in Geneva or Munich (locations 2900 and 2700)</p>
</li>
<li>
<p>Sets <code dir="ltr">department_id</code> for these employees to the <code dir="ltr">department_id</code> corresponding to Bombay (<code dir="ltr">location_id</code> 2100)</p>
</li>
<li>
<p>Sets each employee&#39;s salary to 1.1 times the average salary of their department</p>
</li>
<li>
<p>Sets each employee&#39;s commission to 1.5 times the average commission of their department</p>
</li>
</ul>
<p><a id="i2130226"></a><a id="SQLRF55481"></a><span class="subhead3">Updating a Partition: Example&nbsp;</span>The following example updates values in a single partition of the <code dir="ltr">sales</code> table:</p>
<pre dir="ltr">UPDATE sales PARTITION (sales_q1_1999) s
   SET s.promo_id = 494
   WHERE amount_sold &gt; 1000;
</pre>
<p><a id="i2135485"></a><a id="SQLRF55482"></a><span class="subhead3">Updating an Object Table: Example&nbsp;</span>The following statement creates two object tables, <code dir="ltr">people_demo1</code> and <code dir="ltr">people_demo2</code>, of the <code dir="ltr">people_typ</code> object created in <a href="statements_10002.htm#i2071643">Table Collections: Examples</a>. The example shows how to update a row of <code dir="ltr">people_demo1</code> by selecting a row from <code dir="ltr">people_demo2</code>:</p>
<pre dir="ltr">CREATE TABLE people_demo1 OF people_typ;

CREATE TABLE people_demo2 OF people_typ;

UPDATE people_demo1 p SET VALUE(p) =
   (SELECT VALUE(q) FROM people_demo2 q
    WHERE p.department_id = q.department_id)
   WHERE p.department_id = 10;
</pre>
<p>The example uses the <code dir="ltr">VALUE</code> object reference function in both the <code dir="ltr">SET</code> clause and the subquery.</p>
<p><a id="i2068234"></a><a id="SQLRF55483"></a><span class="subhead3">Correlated Update: Example&nbsp;</span>For an example that uses a correlated subquery to update nested table rows, refer to <a href="statements_10002.htm#i2071643">&#34;Table Collections: Examples&#34;</a>.</p>
<p><a id="i2068241"></a><a id="SQLRF55484"></a><span class="subhead3">Using the RETURNING Clause During UPDATE: Example&nbsp;</span>The following example returns values from the updated row and stores the result in PL/SQL variables <code dir="ltr">bnd1</code>, <code dir="ltr">bnd2</code>, <code dir="ltr">bnd3</code>:</p>
<pre dir="ltr">UPDATE employees
  SET job_id =&#39;SA_MAN&#39;, salary = salary + 1000, department_id = 140
  WHERE last_name = &#39;Jones&#39;
  RETURNING salary*0.25, last_name, department_id
    INTO :bnd1, :bnd2, :bnd3;
</pre>
<p>The following example shows that you can specify a single-set aggregate function in the expression of the returning clause:</p>
<pre dir="ltr">UPDATE employees
   SET salary = salary * 1.1
   WHERE department_id = 100
   RETURNING SUM(salary) INTO :bnd1;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<!-- class="chapter" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5862">
<tr>
<td class="cellalignment5869">
<table class="cellalignment5867">
<tr>
<td class="cellalignment5866"><a href="statements_10007.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5866"><a href="ap_syntx.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5871">
<table class="cellalignment5865">
<tr>
<td class="cellalignment5866"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5866"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5866"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5866"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5866"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5866"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>