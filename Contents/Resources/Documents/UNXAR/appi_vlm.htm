<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-114105"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/HugePages"></a><title>HugePages</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093"/>
<meta name="dcterms.created" content="2017-07-25T3:25:33Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Administrator&#39;s Reference"/>
<meta name="dcterms.identifier" content="E10638-27"/>
<meta name="dcterms.isVersionOf" content="UNXAR"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="appg_db_lmts.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E10638-27.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">19/20</span> <!-- End Header -->
<div id="UNXAR391" class="appendix"><a id="CACGAEDJ"></a>
<h1 class="appendix"><span class="secnum">G</span> HugePages</h1>
<p>This chapter provides an overview of Hugepages and guides Linux system administrators to configure HugePages on Linux.</p>
<a id="CACDCGAH"></a>
<div id="UNXAR400" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">G.1</span> Overview of HugePages</h2>
<p>HugePages is a feature integrated into the Linux kernel 2.6. Enabling HugePages makes it possible for the operating system to support memory pages greater than the default (usually 4 KB). Using very large page sizes can improve system performance by reducing the amount of system resources required to access page table entries. HugePages is useful for both 32-bit and 64-bit configurations. HugePage sizes vary from 2 MB to 256 MB, depending on the kernel version and the hardware architecture. For Oracle Databases, using HugePages reduces the operating system maintenance of page states, and increases Translation Lookaside Buffer (TLB) hit ratio.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Transparent Hugepages is currently not an alternative to manually configure HugePages.</div>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#CACIBJBB">Tuning SGA With HugePages</a></p>
</li>
<li>
<p><a href="#CACFIHHA">Configuring HugePages on Linux</a></p>
</li>
<li>
<p><a href="#CACDBJGC">Restrictions for HugePages Configurations</a></p>
</li>
<li>
<p><a href="#CIACGIAJ">Disabling Transparent HugePages</a></p>
</li>
</ul>
<a id="CACIBJBB"></a>
<div id="UNXAR401" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">G.1.1</span> Tuning SGA With HugePages</h3>
<p>Without HugePages, the operating system keeps each 4 KB of memory as a page. When it allocates pages to the database System Global Area (SGA), the operating system kernel must continually update its page table with the page lifecycle (dirty, free, mapped to a process, and so on) for each 4 KB page allocated to the SGA.</p>
<p>With HugePages, the operating system page table (virtual memory to physical memory mapping) is smaller, because each page table entry is pointing to pages from 2 MB to 256 MB.</p>
<p>Also, the kernel has fewer pages whose lifecycle must be monitored. For example, if you use HugePages with 64-bit hardware, and you want to map 256 MB of memory, you may need one page table entry (PTE). If you do not use HugePages, and you want to map 256 MB of memory, then you must have 256 MB * 1024 KB/4 KB = 65536 PTEs.</p>
<p>HugePages provides the following advantages:</p>
<ul>
<li>
<p>Increased performance through increased TLB hits</p>
</li>
<li>
<p>Pages are locked in memory and never swapped out, which provides RAM for shared memory structures such as SGA</p>
</li>
<li>
<p>Contiguous pages are preallocated and cannot be used for anything else but for System V shared memory (for example, SGA)</p>
</li>
<li>
<p>Less bookkeeping work for the kernel for that part of virtual memory because of larger page sizes</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CACFIHHA"></a>
<div id="UNXAR402" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">G.1.2</span> Configuring HugePages on Linux</h3>
<p>Complete the following steps to configure HugePages on the computer:</p>
<ol>
<li>
<p>Run the following command to determine if the kernel supports HugePages:</p>
<pre dir="ltr">$ grep Huge /proc/meminfo
</pre></li>
<li>
<p>Some Linux systems do not support HugePages by default. For such systems, build the Linux kernel using the <code dir="ltr">CONFIG_HUGETLBFS</code> and <code dir="ltr">CONFIG_HUGETLB_PAGE</code> configuration options. <code dir="ltr">CONFIG_HUGETLBFS</code> is located under File Systems and <code dir="ltr">CONFIG_HUGETLB_PAGE</code> is selected when you select <code dir="ltr">CONFIG_HUGETLBFS</code>.</p>
</li>
<li>
<p>Edit the <code dir="ltr">memlock</code> setting in the <code dir="ltr">/etc/security/limits.conf</code> file. The <code dir="ltr">memlock</code> setting is specified in KB, and the maximum locked memory limit should be set to at least 90 percent of the current RAM when HugePages memory is enabled and at least 3145728 KB (3 GB) when HugePages memory is disabled. For example, if you have 64 GB RAM installed, then add the following entries to increase the maximum locked-in-memory address space:</p>
<pre dir="ltr">*   soft   memlock    60397977
*   hard   memlock    60397977
</pre>
<p>You can also set the <code dir="ltr">memlock</code> value higher than your SGA requirements.</p>
</li>
<li>
<p>Log in as <code dir="ltr">oracle</code> user again and run the <code dir="ltr">ulimit -l</code> command to verify the new <code dir="ltr">memlock</code> setting:</p>
<pre dir="ltr">$ ulimit -l
60397977
</pre></li>
<li>
<p>Run the following command to display the value of <code dir="ltr">Hugepagesize</code> variable:</p>
<pre dir="ltr">$ grep Hugepagesize /proc/meminfo
</pre></li>
<li>
<p>Complete the following procedure to create a script that computes recommended values for <code dir="ltr">hugepages</code> configuration for the current shared memory segments:</p>
<ol>
<li>
<p>Create a text file named <code dir="ltr">hugepages_settings.sh</code>.</p>
</li>
<li>
<p>Add the following content in the file:</p>
<pre dir="ltr">#!/bin/bash
#
# hugepages_settings.sh
#
# Linux bash script to compute values for the
# recommended HugePages/HugeTLB configuration
#
# Note: This script does calculation for all shared memory
# segments available when the script is run, no matter it
# is an Oracle RDBMS shared memory segment or not.
# Check for the kernel version
KERN=`uname -r | awk -F. &#39;{ printf(&#34;%d.%d\n&#34;,$1,$2); }&#39;`
# Find out the HugePage size
HPG_SZ=`grep Hugepagesize /proc/meminfo | awk {&#39;print $2&#39;}`
# Start from 1 pages to be on the safe side and guarantee 1 free HugePage
NUM_PG=1
# Cumulative number of pages required to handle the running shared memory segments
for SEG_BYTES in `ipcs -m | awk {&#39;print $5&#39;} | grep &#34;[0-9][0-9]*&#34;`
do
   MIN_PG=`echo &#34;$SEG_BYTES/($HPG_SZ*1024)&#34; | bc -q`
   if [ $MIN_PG -gt 0 ]; then
      NUM_PG=`echo &#34;$NUM_PG+$MIN_PG+1&#34; | bc -q`
   fi
done
# Finish with results
case $KERN in
   &#39;2.4&#39;) HUGETLB_POOL=`echo &#34;$NUM_PG*$HPG_SZ/1024&#34; | bc -q`;
          echo &#34;Recommended setting: vm.hugetlb_pool = $HUGETLB_POOL&#34; ;;
   &#39;2.6&#39;|&#39;3.8&#39;) echo &#34;Recommended setting: vm.nr_hugepages = $NUM_PG&#34; ;;
    *) echo &#34;Unrecognized kernel version $KERN. Exiting.&#34; ;;
esac
# End
</pre></li>
<li>
<p>Run the following command to change the permission of the file:</p>
<pre dir="ltr">$ chmod +x hugepages_settings.sh
</pre></li>
</ol>
</li>
<li id="CACJDEDA">
<p>Run the <code dir="ltr">hugepages_settings.sh</code> script to compute the values for <code dir="ltr">hugepages</code> configuration:</p>
<pre dir="ltr">$ ./hugepages_settings.sh
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Before running this script, ensure that all the applications that use <code dir="ltr">hugepages</code> run.</div>
</li>
<li>
<p>Set the following kernel parameter, where <span class="italic">value</span> is the HugePages value that you determined in step <a href="#CACJDEDA">7</a>:</p>
<pre dir="ltr"># sysctl -w vm.nr_hugepages=<span class="italic">value</span>
</pre></li>
<li>
<p>To ensure that HugePages is allocated after system restarts, add the following entry to the <code dir="ltr">/etc/sysctl.conf</code> file, where <span class="italic">value</span> is the HugePages value that you determined in step <a href="#CACJDEDA">7</a>:</p>
<pre dir="ltr">vm.nr_hugepages=<span class="italic">value</span>
</pre></li>
<li>
<p>Run the following command to check the available <code dir="ltr">hugepages</code>:</p>
<pre dir="ltr">$ grep Huge /proc/meminfo
</pre></li>
<li>
<p>Restart the instance.</p>
</li>
<li>
<p>Run the following command to check the available <code dir="ltr">hugepages</code> (1 or 2 pages free):</p>
<pre dir="ltr">$ grep Huge /proc/meminfo
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you cannot set your HugePages allocation using <code dir="ltr">nr_hugepages</code>, then your available memory may be fragmented. Restart your server for the Hugepages allocation to take effect.</div>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CACDBJGC"></a>
<div id="UNXAR403" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">G.1.3</span> Restrictions for HugePages Configurations</h3>
<p>HugePages has the following limitations:</p>
<ul>
<li>
<p>You must unset both the <code dir="ltr">MEMORY_TARGET</code> and <code dir="ltr">MEMORY_MAX_TARGET</code> initialization parameters. For example, to unset the parameters for the database instance, use the command <code dir="ltr">ALTER SYSTEM RESET</code>.</p>
</li>
<li>
<p>Automatic Memory Management (AMM) and HugePages are not compatible. When you use AMM, the entire SGA memory is allocated by creating files under <code dir="ltr">/dev/shm</code>. When Oracle Database allocates SGA with AMM, HugePages are not reserved. To use HugePages on Oracle Database 12<span class="italic">c</span>, You must disable AMM.</p>
</li>
<li>
<p>If you are using VLM in a 32-bit environment, then you cannot use HugePages for the Database Buffer cache. You can use HugePages for other parts of the SGA, such as <code dir="ltr">shared_pool</code>, <code dir="ltr">large_pool</code>, and so on. Memory allocation for VLM (buffer cache) is done using shared memory file systems (<code dir="ltr">ramfs/tmpfs/shmfs</code>). Memory file systems do not reserve or use HugePages.</p>
</li>
<li>
<p>HugePages are not subject to allocation or release after system startup, unless a system administrator changes the HugePages configuration, either by modifying the number of pages available, or by modifying the pool size. If the space required is not reserved in memory during system startup, then HugePages allocation fails.</p>
</li>
<li>
<p>Ensure that HugePages is configured properly as the system may run out of memory if excess HugePages is not used by the application.</p>
</li>
<li>
<p>If there is insufficient HugePages when an instance starts and the initialization parameter <code dir="ltr">use_large_pages</code> is set to <code dir="ltr">only</code>, then the database fails to start and an alert log message provides the necessary information on Hugepages.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIACGIAJ"></a>
<div id="UNXAR428" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">G.1.4</span> Disabling Transparent HugePages</h3>
<p>Transparent HugePages memory is enabled by default with Red Hat Enterprise Linux 6, SUSE 11, and Oracle Linux 6 with earlier releases of Oracle Linux Unbreakable Enterprise Kernel 2 (UEK2) kernels. Transparent HugePages memory is disabled by default in later releases of UEK2 kernels.</p>
<p>Transparent HugePages can cause memory allocation delays at runtime. To avoid performance issues, Oracle recommends that you disable Transparent HugePages on all Oracle Database servers. Oracle recommends that you instead use standard HugePages for enhanced performance.</p>
<p>Transparent HugePages memory differs from standard HugePages memory because the kernel <code dir="ltr">khugepaged</code> thread allocates memory dynamically during runtime. Standard HugePages memory is pre-allocated at startup, and does not change during runtime.</p>
<p>To check if Transparent HugePages is enabled run one of the following commands as the <code dir="ltr">root</code> user:</p>
<p>Red Hat Enterprise Linux kernels:</p>
<pre dir="ltr"># cat /sys/kernel/mm/redhat_transparent_hugepage/enabled
</pre>
<p>Other kernels:</p>
<pre dir="ltr"># cat /sys/kernel/mm/transparent_hugepage/enabled
</pre>
<p>The following is a sample output that shows Transparent HugePages is being used as the <code dir="ltr">[always]</code> flag is enabled.</p>
<pre dir="ltr">[always] never
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If Transparent HugePages is removed from the kernel then the <code dir="ltr">/sys/kernel/mm/transparent_hugepage</code> or <code dir="ltr">/sys/kernel/mm/redhat_transparent_hugepage</code> files do not exist.</div>
<p>To disable Transparent HugePages perform the following steps:</p>
<ol>
<li>
<p>Add the following entry to the kernel boot line in the <code dir="ltr">/etc/grub.conf</code> file:</p>
<pre dir="ltr">transparent_hugepage=never
</pre>
<p>For example:</p>
<pre dir="ltr">title Oracle Linux Server (2.6.32-300.25.1.el6uek.x86_64)
        root (hd0,0)
        kernel /vmlinuz-2.6.32-300.25.1.el6uek.x86_64 ro root=LABEL=/ transparent_hugepage=never
        initrd /initramfs-2.6.32-300.25.1.el6uek.x86_64.img
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5711">
<tr>
<td class="cellalignment5718">
<table class="cellalignment5716">
<tr>
<td class="cellalignment5715"><a href="appg_db_lmts.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5715"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5720">
<table class="cellalignment5714">
<tr>
<td class="cellalignment5715"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5715"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5715"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5715"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5715"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5715"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>