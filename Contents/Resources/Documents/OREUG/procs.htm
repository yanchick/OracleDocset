<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-86548"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20R%20Enterprise%20Statistical%20Functions"></a><title>Oracle R Enterprise Statistical Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 730"/>
<meta name="dcterms.created" content="2013-05-23T6:9:22Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="R Enterprise User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E35158-07"/>
<meta name="dcterms.isVersionOf" content="OREUG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="predict.htm" title="Previous" type="text/html"/>
<link rel="Next" href="license.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E35158-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/11</span> <!-- End Header -->
<div id="OREUG175" class="chapter"><a id="CIHEIEBC"></a>
<h1 class="chapter"><span class="secnum">5</span> Oracle R Enterprise Statistical Functions</h1>
<p>This chapter describes Oracle R Enterprise functions that perform most common or base statistical procedures. These functions are designed to help users who are converting from commercially available products to Oracle R Enterprise.</p>
<p>Oracle R Enterprise provides these collections of functions:</p>
<ul>
<li>
<p><a href="#CIHJIFIE">ore.corr</a></p>
</li>
<li>
<p><a href="#CIHFCCJI">ore.crosstab</a></p>
</li>
<li>
<p><a href="#CIHGEEJJ">ore.extend</a></p>
</li>
<li>
<p><a href="#CIHCGJII">ore.freq</a></p>
</li>
<li>
<p><a href="#CIHJIEFF">ore.rank</a></p>
</li>
<li>
<p><a href="#CIHCDDED">ore.sort</a></p>
</li>
<li>
<p><a href="#CIHDGCIH">ore.summary</a></p>
</li>
<li>
<p><a href="#CIHBDJDH">ore.univariate</a></p>
</li>
</ul>
<p>The use of the functions is illustrated with examples. Most of the examples use the same data, described in <a href="#CIHDIAJA">Data for Examples</a>.</p>
<a id="CIHDIAJA"></a>
<div id="OREUG176" class="sect1">
<h2 class="sect1">Data for Examples</h2>
<p>Most of the examples use the table NARROW, which is installed in your database when you install with Oracle R Enterprise.</p>
<p>NARROW is an ore.frame with 9 columns:</p>
<pre>R&gt; class(NARROW)
[1] &#34;ore.frame&#34;
attr(,&#34;package&#34;)
[1] &#34;OREbase&#34;
R&gt; names(NARROW)
[1] &#34;ID&#34;             &#34;GENDER&#34;         &#34;AGE&#34;            &#34;MARITAL_STATUS&#34;
[5] &#34;COUNTRY&#34;        &#34;EDUCATION&#34;      &#34;OCCUPATION&#34;     &#34;YRS_RESIDENCE&#34; 
[9] &#34;CLASS&#34;    
</pre></div>
<!-- class="sect1" -->
<a id="CIHJIFIE"></a>
<div id="OREUG177" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">o<a id="sthref123"></a>re.corr</h2>
<p><code>ore.corr</code> performs correlation analysis across numeric columns in an ore.frame.</p>
<p><code>ore.corr</code> supports partial correlations with a control column.</p>
<p><code>ore.corr</code> enables aggregations prior to correlations.</p>
<p><code>ore.corr</code> allows post-processing of results and integration into an R code flow.</p>
<p>The output of <code>ore.corr</code> can be made to conform to output of the R <code>cor()</code> function; this allows the output of ore.corr to be post-processed by any R function or graphics.</p>
<p>See <a href="#CIHGFBHG">ore.corr Parameters</a> for syntax and output and <a href="#CIHHDDBA">ore.corr Examples</a> for examples.</p>
<a id="CIHGFBHG"></a>
<div id="OREUG178" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.corr Parameters</h3>
<p><code>ore.corr</code> has these parameters:</p>
<ul>
<li>
<p><span class="bold">data</span>: The data for which to compute correlation coefficients as an ore.frame.</p>
</li>
<li>
<p><span class="bold">var</span>: The numeric column(s) of <span class="bold">data</span> for which to build correlation matrix</p>
</li>
<li>
<p><span class="bold">group.by</span>: Indicates the correlation matrices to calculate; <code>ore.corr</code> calculates as many correlation matrices as unique values in <span class="bold">group.by</span> columns; default value is NULL</p>
</li>
<li>
<p><span class="bold">weight</span>: A column of the data whose numeric values provide a multiplicative factor for <span class="bold">var</span> columns; default value is NULL</p>
</li>
<li>
<p><span class="bold">partial</span>: columns of data to use as control variables for partial correlation; default value is NULL</p>
</li>
<li>
<p><span class="bold">stats</span>: The method of calculating correlations; one of pearson (default), spearman, kendall</p>
</li>
</ul>
<p><code>ore.corr</code> returns an ore.frame as output in all cases except when <span class="bold">group.by</span> is used. If <span class="bold">group.by</span> is used, returns an Oracle R Enterprise list object.</p>
</div>
<!-- class="sect2" -->
<a id="CIHHDDBA"></a>
<div id="OREUG179" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.corr Examples</h3>
<p>These examples show how to use <code>ore.corr</code>:</p>
<ul>
<li>
<p><a href="#CIHJGJBB">Basic Correlation Calculations</a></p>
</li>
<li>
<p><a href="#CIHGDIAB">Partial Correlation</a></p>
</li>
<li>
<p><a href="#CIHBBBCA">Create Several Correlation Matrices</a></p>
</li>
<li>
<p><a href="#CIHFEFEH">Visualization of Correlations</a></p>
</li>
</ul>
<p>These examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>.</p>
<a id="CIHJGJBB"></a>
<div id="OREUG180" class="sect3">
<h4 class="sect3">Basic Correlation Calculations</h4>
<p>Before you can use <code>ore.corr</code>, you must project out all non-numerical values:</p>
<pre>R&gt; names(NARROW)
 [1] &#34;ID&#34;             &#34;GENDER&#34;     &#34;AGE&#34;    &#34;MARITAL_STATUS&#34; 
&#34;COUNTRY&#34;        &#34;EDUCATION&#34;      &#34;OCCUPATION&#34;
 [8] &#34;YRS_RESIDENCE&#34;  &#34;CLASS&#34;          &#34;AGEBINS&#34;
R&gt; NARROW=NARROW[,c(3,8,9)]
</pre>
<p>Now calculate correlation in several ways:</p>
<pre>R&gt; x=ore.corr(NARROW,var=&#39;AGE,YRS_RESIDENCE,CLASS&#39;)
#Calculate using Spearman
R&gt; x=ore.corr(NARROW,var=&#39;AGE,YRS_RESIDENCE,CLASS&#39;, stats=&#39;spearman&#39;)
# Calculate using Kendall
R&gt; x=ore.corr(NARROW,var=&#39;AGE,YRS_RESIDENCE,CLASS&#39;, stats=&#39;kendall&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHGDIAB"></a>
<div id="OREUG181" class="sect3">
<h4 class="sect3">Partial Correlation</h4>
<p>Use the version of NARROW with non-numeric values that was created in <a href="#CIHJGJBB">Basic Correlation Calculations</a>.</p>
<p>Calculate partial correlation using Spearman&#39;s methods:</p>
<pre>R&gt; x=ore.corr(NARROW,var=&#39;AGE,YRS_RESIDENCE,CLASS&#39;, stats=&#39;spearman&#39;, partial=&#39;GENDER&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHBBBCA"></a>
<div id="OREUG182" class="sect3">
<h4 class="sect3">Create Several Correlation Matrices</h4>
<p>Use the version of NARROW with non-numeric values that was created in <a href="#CIHJGJBB">Basic Correlation Calculations</a>.</p>
<p>Create several correlation matrices and then convert the output so that it is compatible with R output:</p>
<pre>R&gt; x=ore.corr(NARROW,var=&#39;AGE,YRS_RESIDENCE,CLASS&#39;, stats=&#39;pearson&#39;, partial=&#39;GENDER&#39;, group.by=&#39;COUNTRY&#39;)
R&gt; class(x)
[1] &#34;list&#34;
</pre></div>
<!-- class="sect3" -->
<a id="CIHFEFEH"></a>
<div id="OREUG183" class="sect3">
<h4 class="sect3">Visualization of Correlations</h4>
<p>If you calculate several matrices, you can use R packages to visualize them.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHFCCJI"></a>
<div id="OREUG184" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref124"></a>ore.crosstab</h2>
<p>Cross tabulation is a statistical technique that finds an interdependent relationship between two tables of values.</p>
<p><code>ore.crosstab</code> enables cross column analysis of an ore.frame. This function is a sophisticated variant of the R <code>table()</code> function.</p>
<p><code>ore.crosstab</code> must be performed before frequency analysis is done using <a href="#CIHCGJII">ore.freq</a>.</p>
<p>You can extend the cross tab calculation with various sums as described in <a href="#CIHGEEJJ">ore.extend</a>.</p>
<p><code>ore.crosstab</code> is written in R. The function is mapped to SQL that gets executed at the database server.</p>
<p>See <a href="#CIHJDGCE">ore.crosstab Parameters</a> for syntax and output and <a href="#CIHFJHDI">ore.crosstab Examples</a> for examples.</p>
<p>You can use <a href="#CIHGEEJJ">ore.extend</a> to augment crass tabulation.</p>
<a id="CIHJDGCE"></a>
<div id="OREUG185" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.crosstab Parameters</h3>
<p><code>ore.crosstab</code> has these parameters:</p>
<ul>
<li>
<p><span class="bold">expr</span>: the cross tabulation definition</p>
<pre>[COLUMN_SPEC] ~ COLUMN_SPEC [*&lt;WEIGHTING COLUMN&gt;] [/&lt;GROUPING COLUMN&gt;]
 [^&lt;STRATIFICATION COLUMN&gt;] [|ORDER_SPECIFICATION]
        COLUMN_SPEC is &lt;column-name&gt;[+COLUMN_SET][+COLUMN_RANGE]
        COLUMN_SET is &lt;column_name&gt;[+COLUMN_SET]
        COLUMN_RANGE is &lt;FROM COLUMN&gt;-&lt;TO COLUMN
</pre>
<p>where</p>
<pre>COLUMN_SPEC is &lt;column&gt;[+COLUMN_SET][+COLUMN_RANGE]
COLUMN_SET is &lt;column&gt;[+COLUMN_SET]
COLUMN_RANGE is (&lt;from column&gt;-&lt;to column&gt;)
ORDER_SPECIFICATION is one of [-]NAME, [-]DATA, [-]FREQ, or INTERNAL
</pre>
<p>The stratification column is used to cluster, or group, data. When used, the values contribute to the ORE$STRATA column of the resulting cross-tabulated table.</p>
</li>
<li>
<p><span class="bold">data</span>: the ore.frame containing the data to cross tabulate</p>
</li>
<li>
<p><span class="bold">grouping column</span>: as many cross tabulations as unique values in grouping columns; default value is NULL</p>
</li>
<li>
<p><span class="bold">order</span>: defines optional sorting of output data. Specify [-]NAME to sort by tabulation columns, [-]FREQ to sort by frequency counts in table. Unspecified order is the most efficient. The optional &#39;-&#39; reverses the order direction.</p>
</li>
<li>
<p><span class="bold">weights</span>: column of the data that indicates the frequency of the corresponding row; default value is NULL</p>
</li>
<li>
<p><span class="bold">partial</span>: columns of data to use as control variables for partial correlation; default value is NULL</p>
</li>
</ul>
<p><code>ore.crosstab</code> returns an ore.frame as output in all cases except when multiple tables are created. If multiple tables are created, ore.crosstab returns an Oracle R Enterprise list object.</p>
</div>
<!-- class="sect2" -->
<a id="CIHFJHDI"></a>
<div id="OREUG186" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.crosstab Examples</h3>
<p>These examples illustrate use of <code>ore.crosstab</code>:</p>
<ul>
<li>
<p><a href="#CIHGHJCG">Single-Column Frequency Table</a></p>
</li>
<li>
<p><a href="#CIHGDGIG">Analyze Two Columns</a></p>
</li>
<li>
<p><a href="#CIHFEIEB">Weighting Rows</a></p>
</li>
<li>
<p><a href="#CIHJAAAJ">Order Rows in the Cross Tabulated Table</a></p>
</li>
<li>
<p><a href="#CIHFHGAB">Analyze Three or More Columns</a></p>
</li>
<li>
<p><a href="#CIHDBDBA">Specify a Range of Columns</a></p>
</li>
<li>
<p><a href="#CIHGAIBD">Produce One Cross Table for Each Value of Another Column</a></p>
</li>
<li>
<p><a href="#CIHBIFBI">Augment Cross Tabulation with Stratification</a></p>
</li>
<li>
<p><a href="#CIHJFDAD">Custom Binning Followed by Cross Tabulation</a></p>
</li>
<li>
<p><a href="#CIHGEEJJ">ore.extend</a></p>
</li>
</ul>
<p>These examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>.</p>
<a id="CIHGHJCG"></a>
<div id="OREUG187" class="sect3">
<h4 class="sect3">Single-Column Frequency Table</h4>
<p>The most basic use case is to create a single column frequency table. The following command filters NARROW grouping by GENDER:</p>
<pre>R&gt; ct = ore.crosstab(AGE, data=NARROW)
R&gt; ct
</pre></div>
<!-- class="sect3" -->
<a id="CIHGDGIG"></a>
<div id="OREUG188" class="sect3">
<h4 class="sect3">Analyze Two Columns</h4>
<p>This command analyses AGE by GENDER and AGE by CLASS:</p>
<pre>R&gt; ct = ore.crosstab(AGE~GENDER+CLASS, data=NARROW)
R&gt; head(ct)
</pre></div>
<!-- class="sect3" -->
<a id="CIHFEIEB"></a>
<div id="OREUG189" class="sect3">
<h4 class="sect3">Weighting Rows</h4>
<p>To weight rows, include count based on another column; this example weights values in AGE and GENDER using values in YRS_RESIDENCE:</p>
<pre>R&gt; ct = ore.crosstab(AGE~GENDER*YRS_RESIDENCE, data=NARROW)
R&gt; head(ct)
</pre></div>
<!-- class="sect3" -->
<a id="CIHJAAAJ"></a>
<div id="OREUG190" class="sect3">
<h4 class="sect3">Order Rows in the Cross Tabulated Table</h4>
<p>There are several possibilities:</p>
<ul>
<li>
<p>Default or NAME orders by the columns being analyzed</p>
</li>
<li>
<p>FREQ orders by frequency counts</p>
</li>
<li>
<p>-NAME or -FREQ does reverse ordering</p>
</li>
<li>
<p>INTERNAL bypasses ordering</p>
</li>
</ul>
<p>Here are two examples:</p>
<pre>R&gt; ct = ore.crosstab(AGE~GENDER|FREQ, data=NARROW)
R&gt; head(ct)
  AGE GENDER ORE$FREQ ORE$STRATA ORE$GROUP

R&gt; ct = ore.crosstab(AGE~GENDER|-FREQ, data=NARROW)
R&gt; head(ct)
</pre></div>
<!-- class="sect3" -->
<a id="CIHFHGAB"></a>
<div id="OREUG191" class="sect3">
<h4 class="sect3">Analyze Three or More Columns</h4>
<p>This is similar to what SQL GROUPING SETs accomplish:</p>
<pre> ct = ore.crosstab(AGE+COUNTRY~GENDER, NARROW)
</pre></div>
<!-- class="sect3" -->
<a id="CIHDBDBA"></a>
<div id="OREUG192" class="sect3">
<h4 class="sect3">Specify a Range of Columns</h4>
<p>You can specify a range of columns instead of having to type all the column names, as illustrated in this example:</p>
<pre>R&gt; names(NARROW)
[1] &#34;ID&#34;             &#34;GENDER&#34;         &#34;AGE&#34;            &#34;MARITAL_STATUS&#34;
[5] &#34;COUNTRY&#34;        &#34;EDUCATION&#34;      &#34;OCCUPATION&#34;     &#34;YRS_RESIDENCE&#34; 
[9] &#34;CLASS&#34;    
</pre>
<p>Since AGE, MARITAL_STATUS and COUNTRY are successive columns, you can simply use</p>
<pre>ct = ore.crosstab(AGE-COUNTRY~GENDER, NARROW)
</pre>
<p>An equivalent version is</p>
<pre>ct = ore.crosstab(AGE+MARITAL_STATUS+COUNTRY~GENDER, NARROW)
</pre></div>
<!-- class="sect3" -->
<a id="CIHGAIBD"></a>
<div id="OREUG193" class="sect3">
<h4 class="sect3">Produce One Cross Table for Each Value of Another Column</h4>
<p>This command produces one cross table (AGE, GENDER) for <span class="italic">each</span> unique value of another column COUNTRY:</p>
<pre>R&gt; ct=ore.crosstab(~AGE/COUNTRY, data=NARROW)
R&gt; head(ct)
</pre>
<p>You can extend this to more than one column. For example, this command produces one (AGE, EDUCATION) table for each unique combination of (COUNTRY, GENDER):</p>
<pre>R&gt; ct = ore.crosstab(AGE~EDUCATION/COUNTRY+GENDER, data=NARROW)
</pre></div>
<!-- class="sect3" -->
<a id="CIHBIFBI"></a>
<div id="OREUG194" class="sect3">
<h4 class="sect3">Augment Cross Tabulation with Stratification</h4>
<p>All of the above cross tabs can be augmented with stratification. For example,</p>
<pre>R&gt; ct = ore.crosstab(AGE~GENDER^CLASS, data=NARROW) 
R&gt; head(ct)
</pre>
<p>The command in this example is the same as</p>
<pre>ct = ore.crosstab(AGE~GENDER, NARROW, strata=&#34;CLASS&#34;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHJFDAD"></a>
<div id="OREUG195" class="sect3">
<h4 class="sect3">Custom Binning Followed by Cross Tabulation</h4>
<p>First bin AGE, then calculate cross tabulation for GENDER and the bins:</p>
<pre>R&gt; NARROW$AGEBINS=ifelse(NARROW$AGE&lt;20, 1, ifelse(NARROW$AGE&lt;30,2, ifelse(NARROW$AGE&lt;40,3,4)))
R&gt; ore.crosstab(GENDER~AGEBINS, NARROW)
</pre></div>
<!-- class="sect3" -->
<a id="CIHGEEJJ"></a>
<div id="OREUG196" class="sect3">
<h4 class="sect3"><a id="sthref125"></a>ore.extend</h4>
<p>The cross tabulation produced using <a href="#CIHFCCJI">ore.crosstab</a> can be further augmented with these three basic statistics:</p>
<ul>
<li>
<p>Row and Column Sums</p>
<pre>crosstab = ore.extend.sum(crosstab)
</pre></li>
<li>
<p>Cumulative sums for each cell of the table</p>
<pre>crosstab = ore.extend.cumsum(crosstab)
</pre></li>
<li>
<p>Total for the entire table</p>
<pre>crosstab = ore.extend.total(crosstab)
</pre></li>
</ul>
<p>The following example illustrates <code>ore.extend</code>:</p>
<pre>R&gt; ct = ore.crosstab(GENDER~CLASS, NARROW)
R&gt; ct = ore.extend.sum(ct)
R&gt; ct
  GENDER ORE$FREQ ORE$STRATA ORE$GROUP ORE$SUM$GENDER
0      F      421          1         1            421
1      M      880          1         1            880
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHCGJII"></a>
<div id="OREUG197" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref126"></a>ore.freq</h2>
<p><code>ore.crosstab</code> must be performed before frequency analysis is done using <a href="#CIHCGJII">ore.freq</a>.</p>
<p><code>ore.freq</code> analyses the output of <code>ore.crosstab</code> and automatically determines the techniques that are relevant to an <code>ore.crosstab</code> result. The techniques depend on the kind of cross tables:</p>
<ul>
<li>
<p>1-way cross tables</p>
<p>Goodness-of-fit tests for equal proportions or specified null proportions, confidence limits and tests for equivalence.</p>
</li>
<li>
<p>2-way cross tables</p>
<ul>
<li>
<p>Various statistics that describe relationships between columns in the cross tabulation</p>
</li>
<li>
<p>Chi-square tests, Cochran-Mantel-Haenzsel statistics, measures of association, strength of association, risk differences, odds ratio and relative risk for 2x2 tables, tests for trend</p>
</li>
</ul>
</li>
<li>
<p>N-way cross tables</p>
<ul>
<li>
<p>N 2-way cross tables</p>
</li>
<li>
<p>Statistics across and within strata</p>
</li>
</ul>
</li>
</ul>
<p><code>ore.freq</code> uses Oracle SQL functions when available.</p>
<p>See <a href="#CIHCCJAJ">ore.freq Parameters</a> for syntax and output and <a href="#CIHDFDDB">ore.freq Examples</a> for examples.</p>
<a id="CIHCCJAJ"></a>
<div id="OREUG198" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.freq Parameters</h3>
<p><code>ore.freq</code> supports these parameters:</p>
<ul>
<li>
<p><span class="bold">crosstab</span>: ore.frame output from <code>ore.crosstab()</code></p>
</li>
<li>
<p><span class="bold">stats</span>: List of statistics required; these statistics are supported:</p>
<ul>
<li>
<p>Chi Square: AJCHI, LRCHI, MHCHI, PCHISQ</p>
</li>
<li>
<p>Kappa: KAPPA, WTKAP</p>
</li>
<li>
<p>Lambda: LAMCR, LAMRC, LAMDAS</p>
</li>
<li>
<p>Correlation: KENTB,PCORR, SCORR</p>
</li>
<li>
<p>Stuart&#39;s Tau, Somers: D|C, STUTC, SMDCR,SMDRC</p>
</li>
<li>
<p>Fisher&#39;s, Cochran&#39;s Q, FISHER, COCHQ</p>
</li>
<li>
<p>Odds Ratio: OR, MHOR, LGOR</p>
</li>
<li>
<p>Relative Risk: RR,MHRR,ALRR</p>
</li>
<li>
<p>Others: MCNEM, PHI, CRAMV, CONTGY, TSYM, TREND, GAMMA</p>
</li>
</ul>
<p>The default value is NULL.</p>
</li>
<li>
<p><span class="bold">Params</span>: Control parameters specific to the statistical function specified in <span class="bold">stats</span>:</p>
<ul>
<li>
<p>SCORE: TABLE|RANK|RIDIT|MODRIDIT</p>
</li>
<li>
<p>ALPHA: <span class="italic">number</span></p>
</li>
<li>
<p>WEIGHTS: <span class="italic">number</span></p>
</li>
</ul>
<p>The default value is NULL.</p>
</li>
<li>
<p><span class="bold">skip.missing</span>: Either TRUE or FALSE; skip cells with missing values in the cross table; default value is FALSE</p>
</li>
<li>
<p><span class="bold">skip.failed</span>: Either TRUE or FALSE; if a statistical test required fails on the cross table because it is found to be in-applicable to the table then return immediately; default value is FALSE</p>
</li>
</ul>
<p><code>ore.freq</code> returns an ore.frame in all cases.</p>
</div>
<!-- class="sect2" -->
<a id="CIHDFDDB"></a>
<div id="OREUG199" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.freq Examples</h3>
<p>These examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>.</p>
<p>Before you use <code>ore.freq</code>, you must calculate cross tabs.</p>
<p>For example:</p>
<pre>R&gt; ct = ore.crosstab(~GENDER, NARROW)
R&gt; ore.freq(ct)
  METHOD     FREQ DF PVALUE      DESCR GROUP
0   PCHI 161.9377  1      0 Chi-Square     1
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHJIEFF"></a>
<div id="OREUG200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref127"></a>ore.rank</h2>
<p><code>ore.rank</code> analyzes distribution of values in numeric columns of an ore.frame.</p>
<p><code>ore.rank</code> supports useful functionality, including:</p>
<ul>
<li>
<p>Ranking within groups</p>
</li>
<li>
<p>Partitioning rows into groups based on rank tiles</p>
</li>
<li>
<p>Calculation of cumulative percentages and percentiles</p>
</li>
<li>
<p>Treatment of ties</p>
</li>
<li>
<p>Calculation of normal scores from ranks</p>
</li>
</ul>
<p><code>ore.rank</code> syntax is simpler than the corresponding SQL queries.</p>
<p>See <a href="#CIHDIAIH">ore.rank Parameters</a> for syntax and <a href="#CIHFCHJF">ore.rank Examples</a> for examples.</p>
<a id="CIHDIAIH"></a>
<div id="OREUG201" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.rank Parameters</h3>
<p><code>ore.rank</code> supports these parameters:</p>
<ul>
<li>
<p><span class="bold">data</span>: The ore.frame containing the data to rank</p>
</li>
<li>
<p><span class="bold">var</span>: numeric columns in <span class="bold">data</span> to rank</p>
</li>
<li>
<p><span class="bold">desc</span>: If <code>desc=TRUE</code>, rank in descending order; otherwise, rank in ascending order. (The default is to rank in ascending order.)</p>
</li>
<li>
<p><span class="bold">groups</span>: Partition rows into #groups based on ranks. For percentiles, <code>groups=100</code>, For deciles, g<code>roups=10</code>, For quartiles, <code>groups=4.</code></p>
<p>The default value is NULL.</p>
</li>
<li>
<p><span class="bold">group.by</span>: Rank each group identified by <code>group.by</code> columns separately</p>
<p>The default value is NULL.</p>
</li>
<li>
<p><span class="bold">ties</span>: Specify how to treat ties. Assign the largest of, or smallest of, or mean of corresponding ranks to tied values</p>
<p>The default value is NULL.</p>
</li>
<li>
<p><span class="bold">fraction</span>: The rank of a column value divided by the number of non-missing column values; the default value is FALSE.</p>
<p>Use with <code>nplus1</code> to estimate the cumulative distribution function</p>
</li>
<li>
<p><span class="bold">nplus1</span>: fraction plus 1, that is, 1 plus the rank of a column value divided by the number of non-missing column values; the default value is FALSE.</p>
<p>Use with <code>fraction</code> to estimate the cumulative distribution function</p>
</li>
<li>
<p><span class="bold">percent</span>: <span class="bold">fraction</span> converted to a percent value, that is f<span class="bold">raction</span> * 100.</p>
</li>
</ul>
<p><code>ore.rank</code> returns an ore.frame in all instances.</p>
<p>You can use these R scoring methods with <code>ore.rank</code>:</p>
<ul>
<li>
<p>To compute exponential scores from ranks, use <code>savage</code>.</p>
</li>
<li>
<p>To compute normal scores, use one of <code>blom,</code> <code>tukey</code>, or <code>vw</code>(van der Waerden).</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHFCHJF"></a>
<div id="OREUG202" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.rank Examples</h3>
<p>These examples illustrate using <code>ore.rank</code>:</p>
<ul>
<li>
<p><a href="#CIHCFBCE">Rank Two Columns</a></p>
</li>
<li>
<p><a href="#CIHDDDBG">Handle Ties</a></p>
</li>
<li>
<p><a href="#CIHDDJDE">Rank Within Groups</a></p>
</li>
<li>
<p><a href="#CIHEAJAB">Partition into Deciles</a></p>
</li>
<li>
<p><a href="#CIHJBJEA">Estimate Cumulative Distribution Function</a></p>
</li>
</ul>
<p>These examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>.</p>
<a id="CIHCFBCE"></a>
<div id="OREUG203" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Rank Two Columns</h4>
<p>This example ranks the two columns AGE and CLASS and reports the results as derived columns; values are ranked in the default order (ascending):</p>
<pre>R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge, CLASS=RankOfClass&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHDDDBG"></a>
<div id="OREUG204" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Handle Ties</h4>
<p>This example ranks the two columns AGE and CLASS. If there is a tie, the smallest value is assigned to all tied values:</p>
<pre>R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge, CLASS=RankOfClass&#39;, ties=&#39;low&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHDDJDE"></a>
<div id="OREUG205" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Rank Within Groups</h4>
<p>This example ranks the two columns AGE and CLASS and ranks the values according to COUNTRY:</p>
<pre>R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge, CLASS=RankOfClass&#39;, group.by=&#39;COUNTRY&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHEAJAB"></a>
<div id="OREUG206" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Partition into Deciles</h4>
<p>This example ranks the two columns AGE and CLASS and partitions the columns into deciles (10 partitions):</p>
<pre>R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge, CLASS=RankOfClass&#39;,groups=10)
</pre>
<p>To partition the columns into a different number of partitions, change the value of <code>groups</code>. For example, <code>groups=4</code> partitions into quartiles.</p>
</div>
<!-- class="sect3" -->
<a id="CIHJBJEA"></a>
<div id="OREUG207" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Estimate Cumulative Distribution Function</h4>
<p>This example ranks the two columns AGE and CLASS and estimates the cumulative distribution function for both columns:</p>
<pre>R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge, CLASS=RankOfClass&#39;,nplus1=TRUE)
</pre></div>
<!-- class="sect3" -->
<div id="OREUG208" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref128"></a>
<h4 class="sect3">Score Ranks</h4>
<p>This example ranks the two columns AGE and CLASS and scores the ranks in two different ways. The first command partitions the columns into percentiles (100 groups). <code>savage</code> calculates exponential scores and <code>blom</code> calculates normal scores:</p>
<pre>R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge,            CLASS=RankOfClass&#39;,score=&#39;savage&#39;, groups=100, group.by=&#39;COUNTRY&#39;)
R&gt; x &lt;- ore.rank(data=NARROW, var=&#39;AGE=RankOfAge, CLASS=RankOfClass&#39;,score=&#39;blom&#39;)
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHCDDED"></a>
<div id="OREUG209" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref129"></a>ore.sort</h2>
<p><code>ore.sort</code> enables flexible sorting of a data frame along one or more columns specified in a <span class="bold">by</span> clause.</p>
<p><code>ore.sort</code> can be used with other data pre-processing functions. The results of sorting can provide input to R visualization.</p>
<p><code>ore.sort</code> sorting takes places in the database. <code>ore.sort</code> supports the database <code>nls.sort</code> option.</p>
<p>See <a href="#CIHICADC">ore.sort Parameters</a> for syntax and <a href="#CIHFGHBF">ore.sort Examples</a> for examples.</p>
<a id="CIHICADC"></a>
<div id="OREUG210" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.sort Parameters</h3>
<p><code>ore.sort</code> supports these parameters:</p>
<ul>
<li>
<p><span class="bold">data</span>: ore.frame containing the data to be sorted; <span class="bold">required</span></p>
</li>
<li>
<p><span class="bold">by</span>: the column(s) in <span class="bold">data</span> by which to sort the data; <span class="bold">required</span></p>
</li>
<li>
<p><span class="bold">stable</span>: Relative order is maintained within sorted group (TRUE or FALSE); default value is FALSE</p>
</li>
<li>
<p><span class="bold">reverse</span>: Optional reversal of collation order for character variables (TRUE or FALSE); default value is FALSE</p>
</li>
<li>
<p><span class="bold">unique.keys</span>: Optional deletion of observations with duplicate values in the columns being sorted, TRUE or FALSE; default value is FALSE</p>
</li>
<li>
<p><span class="bold">unique.data</span>: Optional deletion of observations duplicate values in all columns, TRUE or FALSE; default value is FALSE</p>
</li>
</ul>
<p><span class="bold">data</span> and <span class="bold">by</span> are required parameters; all other parameters are optional</p>
<p><code>ore.sort</code> returns an ore.frame.</p>
</div>
<!-- class="sect2" -->
<a id="CIHFGHBF"></a>
<div id="OREUG211" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.sort Examples</h3>
<p>The following examples illustrate using <code>ore.sort</code>:</p>
<ul>
<li>
<p><a href="#CIHIJEBD">Sort Columns in Descending Order</a></p>
</li>
<li>
<p><a href="#CIHIEBHI">Sort Different Columns in Different Orders</a></p>
</li>
<li>
<p><a href="#CIHGIBJH">Sort and Return One Row per Unique Value</a></p>
</li>
<li>
<p><a href="#CIHCBCCG">Remove Duplicate Columns</a></p>
</li>
<li>
<p><a href="#CIHEBIEJ">Remove Duplicate Columns and Return One Row per Unique Value</a></p>
</li>
<li>
<p><a href="#CIHHIEDI">Preserve Relative Order in Output</a></p>
</li>
</ul>
<p>Most of these examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>. There are also <a href="#CIHIEHDA">Examples Using ONTIME_S</a>.</p>
<a id="CIHIJEBD"></a>
<div id="OREUG212" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sort Columns in Descending Order</h4>
<p>Sort the columns AGE and GENDER in descending order:</p>
<pre>R&gt; x=ore.sort(data=NARROW,by=&#39;AGE,GENDER&#39;, reverse=TRUE)
</pre></div>
<!-- class="sect3" -->
<a id="CIHIEBHI"></a>
<div id="OREUG213" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sort Different Columns in Different Orders</h4>
<p>Sort AGE in descending order and GENDER in ascending order:</p>
<pre>R&gt; x=ore.sort(data=NARROW,by=&#39;-AGE,GENDER&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHGIBJH"></a>
<div id="OREUG214" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sort and Return One Row per Unique Value</h4>
<p>Sort by AGE and keep one row per unique value of AGE:</p>
<pre>R&gt; x=ore.sort(data=NARROW,by=&#39;AGE&#39;, unique.key=TRUE)
</pre></div>
<!-- class="sect3" -->
<a id="CIHCBCCG"></a>
<div id="OREUG215" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Remove Duplicate Columns</h4>
<p>Sort by AGE and remove duplicate rows:</p>
<pre>R&gt; x=ore.sort(data=NARROW,by=&#39;AGE&#39;, unique.data=TRUE)
</pre></div>
<!-- class="sect3" -->
<a id="CIHEBIEJ"></a>
<div id="OREUG216" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Remove Duplicate Columns and Return One Row per Unique Value</h4>
<p>Sort by AGE. Also remove duplicate rows, and return one row per unique value of AGE:</p>
<pre>R&gt; x=ore.sort(data=NARROW,by=&#39;AGE&#39;, unique.data=TRUE,unique.key = TRUE)
</pre></div>
<!-- class="sect3" -->
<a id="CIHHIEDI"></a>
<div id="OREUG217" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Preserve Relative Order in Output</h4>
<p>Maintain the relative order in the sorted output:</p>
<pre>R&gt; x=ore.sort(data=NARROW,by=&#39;AGE&#39;, stable=TRUE)
</pre></div>
<!-- class="sect3" -->
<a id="CIHIEHDA"></a>
<div id="OREUG218" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Examples Using ONTIME_S</h4>
<p>These examples use the ONTIME_S airline data that is installed when you install Oracle R Enterprise:</p>
<ul>
<li>
<p>Sort ONTIME_S by airline name in descending order and departure delay in ascending order:</p>
<pre>R&gt; sortedOnTime1 &lt;- ore.sort(data=ONTIME_S, by=&#39;-UNIQUECARRIER,DEPDELAY&#39;)
</pre></li>
<li>
<p>Sort ONTIME_S by airline name and departure delay and select one of each combination (that is, return a unique key):</p>
<pre>R&gt; sortedOnTime1 &lt;- ore.sort(data=ONTIME_S, by=&#39;-UNIQUECARRIER,DEPDELAY&#39;, unique.key=TRUE)
</pre></li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHDGCIH"></a>
<div id="OREUG219" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref130"></a>ore.summary</h2>
<p><code>ore.summary</code> calculates descriptive statistics and supports extensive analysis of columns in an ore.frame, along with flexible row aggregations.</p>
<p><code>ore.summary</code> supports these statistics:</p>
<ul>
<li>
<p>Mean, min., max, mode, number of missing values, sum, weighted sum</p>
</li>
<li>
<p>Corrected and uncorrected sum of squares, range of values, stddev, stderr, variance</p>
</li>
<li>
<p>t-test for testing the hypothesis that the population mean is 0</p>
</li>
<li>
<p>Kurtosis, skew, Coefficient of Variation</p>
</li>
<li>
<p>Quantiles: p1, p5, p10, p25, p50, p75, p90, p95, p99, qrange</p>
</li>
<li>
<p>1-sided and 2-sided Confidence Limits for the mean: clm, rclm, lclm</p>
</li>
<li>
<p>extreme value tagging</p>
</li>
</ul>
<p><code>ore.summary</code> provides a relatively simple syntax compared with SQL queries for the same results.</p>
<p>See <a href="#CIHGHHJB">ore.summary Parameters</a> for syntax and <a href="#CIHFEIJG">ore.summary Examples</a> for examples.</p>
<a id="CIHGHHJB"></a>
<div id="OREUG220" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.summary Parameters</h3>
<p><code>ore.summary</code> supports these parameters:</p>
<ul>
<li>
<p><span class="bold">data</span>: the data to aggregate as an ore.frame</p>
</li>
<li>
<p><span class="bold">class</span>: column(s) of <span class="bold">data</span> to aggregate (that is, SQL GROUP BY); default value is NULL</p>
</li>
<li>
<p><span class="bold">var</span>: column(s) of <span class="bold">data</span> on which to apply statistics functions (SQL SELECT list)</p>
</li>
<li>
<p><span class="bold">stats</span>: list of statistics functions to be applied on <span class="bold">var</span> columns</p>
<p>mean, min, max, cnt, n, nmiss, css, uss, cv, sum, sumwgt, range, stddev, stderr, var, t, kurt, skew,p1, p5, p10, p25, p50, p75, p90, p95, p99, qrange, lclm, rclm, clm, mode that can be requested on <span class="bold">var</span> columns.</p>
<p>The default value are n, mean, min, max.</p>
</li>
<li>
<p><span class="bold">weight</span>: A column of <span class="bold">data</span> whose numeric values provide a multiplicative factor for <span class="bold">var</span> columns</p>
</li>
<li>
<p><span class="bold">maxid</span>, <span class="bold">minid</span>: for each group optionally list maximum or minimum value from other columns in <span class="bold">data</span>; default value is NULL</p>
</li>
<li>
<p><span class="bold">ways</span>: restrict output to only certain grouping levels of the <span class="bold">class</span> variables; default value is NULL</p>
</li>
<li>
<p><span class="bold">group.by</span>: column(s) of data to stratify summary results across; default value is NULL</p>
</li>
<li>
<p><span class="bold">order</span>: defines optional sorting of output data. Specify [-]NAME to sort by tabulation columns, [-]FREQ to sort by frequency counts in table. Unspecified order is the most efficient. The optional &#39;-&#39; reverses the order direction</p>
</li>
<li>
<p><span class="bold">_FREQ</span>: frequency, number of observations in a group</p>
</li>
<li>
<p><span class="bold">_TYPE</span>: identifies the grouping, binary code based</p>
</li>
<li>
<p><span class="bold">_LEVEL</span>: identifies number of variables used in grouping</p>
</li>
</ul>
<p><code>ore.summary</code> returns an ore.frame as output in all cases except when a <span class="bold">group.by</span> clause is used. If a <span class="bold">group.by</span> clause is used, <code>ore.summary</code> returns a list of ore.frames, one frame per stratum.</p>
</div>
<!-- class="sect2" -->
<a id="CIHFEIJG"></a>
<div id="OREUG221" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.summary Examples</h3>
<p>These examples illustrate the use of <code>ore.summary</code>:</p>
<ul>
<li>
<p><a href="#CIHEBFFG">Calculate Default Statistics</a></p>
</li>
<li>
<p><a href="#CIHBCHJJ">Skew and t Test</a></p>
</li>
<li>
<p><a href="#CIHBJBCA">Weighted Sum</a></p>
</li>
<li>
<p><a href="#CIHFGBJE">Two Separate Group By Columns</a></p>
</li>
</ul>
<p>These examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>.</p>
<a id="CIHEBFFG"></a>
<div id="OREUG222" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Calculate Default Statistics</h4>
<p>This example calculates mean, min, max for columns AGE and CLASS and rolls up (aggregates) GENDER:</p>
<pre>R&gt; ore.summary(NARROW, class=&#39;GENDER&#39;, var =&#39;AGE,CLASS&#39;, order=&#39;freq&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHBCHJJ"></a>
<div id="OREUG223" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Skew and t Test</h4>
<p>This example calculates skew for skew of AGE as column A and the t-test for CLASS as column B:</p>
<pre>R&gt; ore.summary(NARROW, class=&#39;GENDER&#39;, var=&#39;AGE,CLASS&#39;, stats=&#39;skew(AGE)=A, probt(CLASS)=B&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHBJBCA"></a>
<div id="OREUG224" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Weighted Sum</h4>
<p>This example calculates weighted sum for AGE aggregated by GENDER with YRS_RESIDENCE as weights; in other words, it calculates <code>sum(var*weight)</code>:</p>
<pre>R&gt; ore.summary(NARROW, class=&#39;GENDER&#39;, var=&#39;AGE&#39;, stat=&#39;sum=X&#39;, weight=&#39;YRS_RESIDENCE&#39;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHFGBJE"></a>
<div id="OREUG225" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Two Separate Group By Columns</h4>
<p>Group CLASS by GENDER and MARITAL_STATUS:</p>
<pre>r&gt; ore.summary(NARROW, class=&#39;GENDER, MARITAL_STATUS&#39;, var=&#39;CLASS&#39;, ways=1)
</pre></div>
<!-- class="sect3" -->
<div id="OREUG226" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref131"></a>
<h4 class="sect3">All Possible Group By</h4>
<p>This example groups CLASS in all possible ways by GENDER and MARITAL_STATUS:</p>
<pre>R&gt; ore.summary(NARROW, class=&#39;GENDER, MARITAL_STATUS&#39;, var=&#39;CLASS&#39;, ways=&#39;nway&#39;)
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHBDJDH"></a>
<div id="OREUG227" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref132"></a>ore.univariate</h2>
<p><code>ore.univariate</code> provides distribution analysis of numeric variables in an ore.frame.</p>
<p><code>ore.univariate</code> provides these statistics:</p>
<ul>
<li>
<p>All statistics reported by <a href="#CIHDGCIH">ore.summary</a></p>
</li>
<li>
<p>Signed rank test, Student&#39;s t-test</p>
</li>
<li>
<p>Extreme values reporting</p>
</li>
</ul>
<p>See <a href="#CIHGEIED">ore.univariate Parameters</a> for syntax and <a href="#CIHIGIID">ore.univariate Examples</a> for examples.</p>
<a id="CIHGEIED"></a>
<div id="OREUG228" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.univariate Parameters</h3>
<p><code>ore.univariate</code> supports these parameters:</p>
<ul>
<li>
<p><span class="bold">data</span>: The data to aggregate as an ore.frame</p>
</li>
<li>
<p><span class="bold">var</span>: Numerical column(s) of <span class="bold">data</span> to analyze</p>
</li>
<li>
<p><span class="bold">weight</span>: A column of the <span class="italic">data</span> whose numeric values provide a multiplicative factor for <span class="bold">var</span> columns; the default value is NULL</p>
</li>
<li>
<p><span class="bold">stats</span>: Optional specification of a subset of statistics to calculate and display:</p>
<ul>
<li>
<p>moments: n, sumwgt, mean, sum, stddev, var, skew, kurt., uss.css.cv, stderr</p>
</li>
<li>
<p>measures: mean, stddev, median, var, mode, range, iqr</p>
</li>
<li>
<p>quantiles: p100, p99, p95, p90, p75, p50, p25, p10, p5, p1, p0</p>
</li>
<li>
<p>location: studentt, studentp, signt, signp, srankt, srankp</p>
</li>
<li>
<p>normality</p>
</li>
<li>
<p>loccount: loc&lt;,loc&gt;,loc!</p>
</li>
<li>
<p>extremes</p>
</li>
</ul>
<p>The default value is NULL.</p>
</li>
</ul>
<p><code>ore.univariate</code> returns an ore.frame as output in all cases.</p>
</div>
<!-- class="sect2" -->
<a id="CIHIGIID"></a>
<div id="OREUG229" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ore.univariate Examples</h3>
<p>These examples illustrate the use of <code>ore.univariate</code>:</p>
<ul>
<li>
<p><a href="#CIHEHEII">Default Univariate Statistics</a></p>
</li>
<li>
<p><a href="#CIHIJEJH">Location Statistics</a></p>
</li>
<li>
<p><a href="#CIHBDHJG">Complete Quantile Statistics</a></p>
</li>
</ul>
<p>These examples use the NARROW data set; for more information, see <a href="#CIHDIAJA">Data for Examples</a>.</p>
<a id="CIHEHEII"></a>
<div id="OREUG230" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Default Univariate Statistics</h4>
<p>This example calculates the default univariate statistics for AGE, YRS_RESIDENCE, and CLASS:</p>
<pre>R&gt; ore.univariate(NARROW, var=&#34;AGE,YRS_RESIDENCE,CLASS&#34;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHIJEJH"></a>
<div id="OREUG231" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Location Statistics</h4>
<p>This example calculates location statistics for YRS_RESIDENCE:</p>
<pre>R&gt; ore.univariate(NARROW, var=&#34;YRS_RESIDENCE&#34;,stats=&#34;location&#34;)
</pre></div>
<!-- class="sect3" -->
<a id="CIHBDHJG"></a>
<div id="OREUG232" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Complete Quantile Statistics</h4>
<p>This example calculates complete quantile statistics for AGE and YRS_RESIDENCE:</p>
<pre>R&gt; ore.univariate(NARROW, var=&#34;AGE,YRS_RESIDENCE&#34;,stats=&#34;quantiles&#34;)
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4979">
<tr>
<td class="cellalignment4986">
<table class="cellalignment4984">
<tr>
<td class="cellalignment4983"><a href="predict.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4983"><a href="license.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4988">
<table class="cellalignment4982">
<tr>
<td class="cellalignment4983"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4983"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4983"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4983"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4983"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4983"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>