<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-66"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Design%20Basics"></a><title>Design Basics</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1080"/>
<meta name="dcterms.created" content="2016-05-05T16:23:33Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Development Guide"/>
<meta name="dcterms.identifier" content="E41452-07"/>
<meta name="dcterms.isVersionOf" content="ADFNS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="adfns_part_fund.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adfns_perf_scale.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41452-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/38</span> <!-- End Header -->
<div id="ADFNS118" class="chapter"><a id="CACGIICE"></a>
<h1 class="chapter"><span class="secnum">1</span> Design Basics</h1>
<p>This chapter explains several important design goals for database developers. This chapter and the others in <a href="adfns_part_fund.htm#CHDCJGEB">Part I, &#34;Database Development Fundamentals&#34;</a> cover mainly high-level concepts, and refer to other chapters and manuals for detailed feature explanations and implementation specifics.</p>
<p>To benefit from these chapters, you need some knowledge of Oracle Database. You must be familiar with the concepts and techniques in the &#34;2 Day&#34; guides relevant to your job, such as <a class="olink TDDDG" href="../TDDDG/toc.htm"><span class="italic">Oracle Database 2 Day Developer&#39;s Guide</span></a> and <a class="olink ADMQS" href="../ADMQS/toc.htm"><span class="italic">Oracle Database 2 Day DBA</span></a>.</p>
<p class="subhead2"><a id="ADFNS119"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACEBGAI">Design for Performance</a></p>
</li>
<li>
<p><a href="#CACIBCGI">Design for Scalability</a></p>
</li>
<li>
<p><a href="#CACGIFDF">Design for Extensibility</a></p>
</li>
<li>
<p><a href="#CACJCHAA">Design for Security</a></p>
</li>
<li>
<p><a href="#CACECGDC">Design for Availability</a></p>
</li>
<li>
<p><a href="#CACCACGG">Design for Portability</a></p>
</li>
<li>
<p><a href="#CACBAEAJ">Design for Diagnosability</a></p>
</li>
<li>
<p><a href="#CACEEIAC">Design for Special Environments</a></p>
</li>
<li>
<p><a href="#CACDGBCD">Features for Special Scenarios</a></p>
</li>
</ul>
<a id="CACEBGAI"></a>
<div id="ADFNS120" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.1</span> Design for Performance</h2>
<p>The key to database and application performance is design, not tuning. While tuning is quite valuable, it cannot make up for poor design. Your design must start with an efficient data model, well-defined performance goals and metrics, and a sensible benchmarking strategy. Otherwise, you will encounter problems during implementation, when no amount of tuning will produce the results that you could have obtained with good design. You might have to redesign the system later, despite having tuned the original poor design.</p>
<p>For an overview of designing databases and applications for performance, see <a href="adfns_perf_scale.htm#CACEDGDD">Chapter 2, &#34;Performance and Scalability.&#34;</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> and <a class="olink TGSQL" href="../TGSQL/toc.htm"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information</div>
</div>
<!-- class="sect1" -->
<a id="CACIBCGI"></a>
<div id="ADFNS121" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.2</span> Design for Scalability</h2>
<p><span class="bold">Scalability</span> is the ability of a system to perform well as its load increases. Load is a combination of number of data volumes, number of users, and other relevant factors. To design for scalability, you must use an effective benchmarking strategy, appropriate application development techniques (such as bind variables), and appropriate Oracle Database architectural features like shared server connections, clustering, partitioning, and parallel operations.</p>
<p>For more information about scalability, see <a href="adfns_perf_scale.htm#CACEDGDD">Chapter 2, &#34;Performance and Scalability&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">Oracle Database 2 Day Developer&#39;s Guide</span>, especially the <a class="olink TDDDG99932" href="../TDDDG/effective_apps.htm#TDDDG99932">section about building scalable applications</a></div>
</div>
<!-- class="sect1" -->
<a id="CACGIFDF"></a>
<div id="ADFNS249" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.3</span> Design for Extensibility</h2>
<p><a id="sthref6"></a><span class="bold">Extensibility</span> is the ease with which a database or database application accommodates future growth. The more extensible the database or application, the easier it is to add or change functionality with minimal impact on existing functionality.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Extensibility differs from <a id="sthref7"></a><span class="bold">forward compatibility</span>, the ability of an application to accept data from a future version of itself and use only the data that it was designed to accept.
<p>For example, suppose that an early version of an application processes only text and a later version of the same application processes both text and graphics. If the early version can accept both text and graphics, and ignore the graphics and process the text, then it is forward-compatible. If the early version can be upgraded to process both text and graphics, then it is extensible. The easier it is to upgrade the application, the more extensible it is.</p>
</div>
<p>To maximize extensibility, you must design it into your database and applications by including mechanisms that allow enhancement without major changes to infrastructure. Early versions of the database or application might not use these mechanisms, and perhaps no version will ever use all of them, but they are essential to easy maintenance and avoiding early obsolescence.</p>
<p class="subhead2"><a id="ADFNS250"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACCDEFE">Data Cartridges</a></p>
</li>
<li>
<p><a href="#CACEIECG">External Procedures</a></p>
</li>
<li>
<p><a href="#CACFJBCE">User-Defined Functions and Aggregate Functions</a></p>
</li>
<li>
<p><a href="#CACHJBCH">Object-Relational Features</a></p>
</li>
</ul>
<a id="CACCDEFE"></a>
<div id="ADFNS251" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.3.1</span> Data Cartridges</h3>
<p><a id="sthref8"></a>Data cartridges extend the capabilities of the Oracle Database server by taking advantage of <a id="sthref9"></a>Oracle Extensibility Architecture framework. This framework lets you capture business logic and processes associated with specialized or domain-specific data in user-defined data types. Data cartridges that provide new behavior without using additional attributes can do so with packages rather than user-defined data types. With either user-defined types or packages, you determine how the server interprets, stores, retrieves, and indexes the application data. Data cartridges package this functionality, creating software components that plug into a server and extend its capabilities into a new domain, making the database itself extensible.</p>
<p>You can customize the indexing and query optimization mechanisms of an extensible database management system and provide specialized services or more efficient processing for user-defined business objects and rich types. When you register your implementations with the server through extensibility interfaces, you direct the server to implement your customized processing instructions instead of its own default processes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADDCI110" href="../ADDCI/introduction.htm#ADDCI110"><span class="italic">Oracle Database Data Cartridge Developer&#39;s Guide</span></a> for more information about data cartridges</div>
</div>
<!-- class="sect2" -->
<a id="CACEIECG"></a>
<div id="ADFNS321" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.3.2</span> External Procedures</h3>
<p>External procedures are highly extensible because you can enhance their functionality without affecting their invokers. The reason is that the call specification of an external procedure, which has all the information needed to invoke it, is separate from the body of the procedure, which has the implementation details. If you change only the body, and not the specification, then invokers are unaffected.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adfns_externproc.htm#g1040439">Chapter 18, &#34;Developing Applications with Multiple Programming Languages,&#34;</a> for more information about external procedures</div>
</div>
<!-- class="sect2" -->
<a id="CACFJBCE"></a>
<div id="ADFNS383" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.3.3</span> User-Defined Functions and Aggregate Functions</h3>
<p>User-defined PL/SQL functions that can appear in SQL statements or expressions can extend the functionality of SQL.</p>
<p>User-defined aggregate functions are part of the <a id="sthref10"></a>Oracle Extensibility Architecture framework.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adfns_packages.htm#i1007943">Section 11.9</a> for information about invoking user-defined PL/SQL functions in SQL statements and expressions</p>
</li>
<li>
<p><a class="olink ADDCI2120" href="../ADDCI/aggr_functions.htm#ADDCI2120"><span class="italic">Oracle Database Data Cartridge Developer&#39;s Guide</span></a> for information about user-defined aggregate functions</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACHJBCH"></a>
<div id="ADFNS458" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.3.4</span> Object-Relational Features</h3>
<p>The object relational features of Oracle Database are the user-defined Abstract Data Types (ADTs). ADTs are highly extensible because you can enhance their functionality without affecting their invokers. The reason is that the call specification of an external procedure, which has all the information needed to invoke it, is separate from the body of the procedure, which has the implementation details. If you change only the body, and not the specification, then invokers are unaffected.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPLS01375" href="../LNPLS/create_type.htm#LNPLS01375"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about the <code dir="ltr">CREATE</code> <code dir="ltr">TYPE</code> statement</p>
</li>
<li>
<p><a class="olink LNPLS01376" href="../LNPLS/create_type_body.htm#LNPLS01376"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about the <code dir="ltr">CREATE</code> <code dir="ltr">TYPE</code> <code dir="ltr">BODY</code> statement</p>
</li>
<li>
<p><a class="olink ADOBJ" href="../ADOBJ/toc.htm"><span class="italic">Oracle Database Object-Relational Developer&#39;s Guide</span></a> for more information about object relational features</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJCHAA"></a>
<div id="ADFNS122" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.4</span> Design for Security</h2>
<p>Database security involves a wide range of potential activities, including:</p>
<ul>
<li>
<p>Designing and implementing security policies to protect the data of an organization, users, and applications from accidental, inappropriate, or unauthorized actions</p>
</li>
<li>
<p>Creating and enforcing policies and practices of auditing and accountability for inappropriate or unauthorized actions</p>
</li>
<li>
<p>Creating, maintaining, and terminating user accounts, passwords, roles, and privileges</p>
</li>
<li>
<p>Developing applications that provide desired services securely in a variety of computational models, leveraging database and directory services to maximize both efficiency and ease of use</p>
</li>
</ul>
<p>For information about some important considerations and techniques for providing security, see <a href="adfns_secur.htm#BABFHBAF">Chapter 3, &#34;Security.&#34;</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DBSEG" href="../DBSEG/toc.htm"><span class="italic">Oracle Database Security Guide</span></a> for more information</div>
</div>
<!-- class="sect1" -->
<a id="CACECGDC"></a>
<div id="ADFNS123" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.5</span> Design for Availability</h2>
<p><span class="bold">Availability</span> is the degree to which an application, service, or function is accessible on demand. A system designed for high availability provides uninterrupted computing services during essential time periods, during most hours of the day throughout the year, with minimal downtime for operations such as upgrading the system&#39;s hardware or software. The main characteristics of a highly available system are:</p>
<ul>
<li>
<p>Reliability</p>
</li>
<li>
<p>Recoverability</p>
</li>
<li>
<p>Timely error detection</p>
</li>
<li>
<p>Continuous operation</p>
</li>
</ul>
<p>For information about some important considerations and techniques for providing high availability, see <a href="adfns_avail.htm#BABJFIDG">Chapter 4, &#34;High Availability.&#34;</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HAOVW" href="../HAOVW/toc.htm"><span class="italic">Oracle Database High Availability Overview</span></a> and the other manuals in the High Availability group in the Oracle Database documentation library</div>
</div>
<!-- class="sect1" -->
<a id="CACCACGG"></a>
<div id="ADFNS124" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.6</span> Design for Portability</h2>
<p>While PL/SQL is not designed for portability between Oracle Database and third-party databases, it is highly portable across operating systems and languages. Most programming languages can invoke PL/SQL, and PL/SQL is implemented consistently on every platform that supports Oracle Database, including Macintosh, Linux, and Windows. If you develop PL/SQL applications on one platform, you can be highly confident that they will work consistently on all other platforms.</p>
<p>PL/SQL stored procedures provide some application portability across multiple databases. Although using stored procedures written in the language of a given vendor may seem to tie you to that vendor to some extent, stored procedures make the application&#39;s visual component (user interface) and application logic portable. The data logic is encoded optimally for the database on which the application runs. Because the data logic is hidden in stored procedures, you can use the vendor&#39;s extensions and features to optimize the data layer.</p>
<p>When developed and deployed on a database, the application can stay deployed on that database forever. If the application is moved to another database, the visual component and application logic can move independently of the data logic in the stored procedures, which simplifies the move. (Reworking the application in combination with the move complicates the move.)</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS" href="../LNPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for conceptual, usage, and reference information about PL/SQL</div>
</div>
<!-- class="sect1" -->
<a id="CACBAEAJ"></a>
<div id="ADFNS126" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.7</span> Design for Diagnosability</h2>
<p>Oracle Database includes a fault diagnosability infrastructure for preventing, detecting, diagnosing, and resolving database problems. Problems include critical errors such as code bugs, metadata corruption, and customer data corruption. The goals of the diagnosability infrastructure are to detect problems proactively, limit damage and interruptions after a problem is detected, reduce the time required to diagnose and resolve problems, and simplify any possible interaction with Oracle Support.</p>
<p>Automatic Diagnostic Repository (ADR) is a file-based repository that stores database diagnostic data such as trace files, the alert log, and Health Monitor reports. ADR is located outside the database, which enables Oracle Database to access and manage ADR when the physical database is unavailable.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT1912" href="../CNCPT/startup.htm#CNCPT1912"><span class="italic">Oracle Database Concepts</span></a> for an overview of diagnostic files</p>
</li>
<li>
<p><a class="olink ADMIN11257" href="../ADMIN/diag.htm#ADMIN11257"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for detailed information about the Oracle Database fault diagnosability infrastructure.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACEEIAC"></a>
<div id="ADFNS127" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.8</span> Design for Special Environments</h2>
<p>This topic introduces designing for the following special database and application environments:</p>
<ul>
<li>
<p><a href="#CACGFGJI">Data Warehousing</a></p>
</li>
<li>
<p><a href="#CACDEJJG">Online Transaction Processing (OLTP)</a></p>
</li>
</ul>
<a id="CACGFGJI"></a>
<div id="ADFNS128" class="sect2">
<h3 class="sect2"><span class="secnum">1.8.1</span> Data Warehousing</h3>
<p>A data warehouse is a relational database that is designed for query and analysis rather than for transaction processing. It usually contains historical data derived from transaction data, but can include data from other sources. Data warehouses separate analysis workload from transaction workload and enable an organization to consolidate data from several sources. This strategy helps the organization maintain historical records and analyze the data to better understand and improve its business.</p>
<p>In addition to a relational database, a data warehouse environment can include:</p>
<ul>
<li>
<p>An extraction, transportation, transformation, and loading (ETL) solution</p>
</li>
<li>
<p>Statistical analysis</p>
</li>
<li>
<p>Reporting</p>
</li>
<li>
<p>Data mining capabilities</p>
</li>
<li>
<p>Client analysis tools</p>
</li>
<li>
<p>Applications that manage the process of gathering data; transforming it into useful, actionable information; and delivering it to business users</p>
</li>
</ul>
<p>Data warehousing systems typically:</p>
<ul>
<li>
<p>Use many indexes</p>
</li>
<li>
<p>Use some (but not many) joins</p>
</li>
<li>
<p>Use denormalized or partially denormalized schemas (such as a star schema) to optimize query and analytical performance</p>
</li>
<li>
<p>Use derived data and aggregates</p>
</li>
<li>
<p>Have workloads designed to accommodate ad hoc queries and data analysis</p>
<p>Because you might not know the workload of your data warehouse in advance, you must optimize the data warehouse to perform well for a wide variety of possible query and analytical operations.</p>
</li>
<li>
<p>Are updated regularly (nightly or weekly) by the ETL process, using bulk data modification techniques</p>
<p>The end users of a data warehouse do not directly update the data warehouse except when using analytical tools (such as data mining) to make predictions with associated probabilities, assign customers to market segments, and develop customer profiles.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DWHSG" href="../DWHSG/toc.htm"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for information about data warehousing, including a comparison with online transaction processing (OLTP)</div>
</div>
<!-- class="sect2" -->
<a id="CACDEJJG"></a>
<div id="ADFNS129" class="sect2">
<h3 class="sect2"><span class="secnum">1.8.2</span> Online Transaction Processing (OLTP)</h3>
<p>Online transaction processing (OLTP) systems are optimized for fast and reliable transaction handling. Compared to data warehouse systems, most OLTP interactions involve a relatively small number of rows, but a larger group of tables. In OLTP systems, performance requirements require that historical data be frequently moved to an archive.</p>
<p>OLTP systems typically:</p>
<ul>
<li>
<p>Use few indexes.</p>
</li>
<li>
<p>Use many joins.</p>
</li>
<li>
<p>Use fully normalized schemas to optimize update, insert, and delete performance, and to guarantee data consistency.</p>
</li>
<li>
<p>Rarely use derived data and aggregates.</p>
</li>
<li>
<p>Have workloads consisting of predefined operations.</p>
</li>
<li>
<p>Have users routinely issuing individual data modification statements to the database, so that the OLTP database always reflects the current state of each transaction.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
See <a class="olink CNCPT1453" href="../CNCPT/cmntopc.htm#CNCPT1453"><span class="italic">Oracle Database Concepts</span></a> for more information, including links to manuals with detailed information</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACDGBCD"></a>
<div id="ADFNS999" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.9</span> Features for Special Scenarios</h2>
<p>This topic introduces Oracle Database features that are particularly useful in scenarios that involve very large databases and the need for high performance.</p>
<p class="subhead2"><a id="ADFNS1435"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACHJCGH">SQL Analytic Functions</a></p>
</li>
<li>
<p><a href="#CACFJGBH">Materialized Views</a></p>
</li>
<li>
<p><a href="#CACCCBJC">Partitioning</a></p>
</li>
<li>
<p><a href="#CACHEBFC">Temporal Validity Support</a></p>
</li>
</ul>
<a id="CACHJCGH"></a>
<div id="ADFNS460" class="sect2">
<h3 class="sect2"><span class="secnum">1.9.1</span> <a id="sthref11"></a><a id="sthref12"></a><a id="sthref13"></a><a id="sthref14"></a><a id="sthref15"></a>SQL Analytic Functions</h3>
<p>A <span class="bold">SQL analytic function</span> computes an aggregate value based on a group of rows. A SQL analytic function differs from an aggregate function in that it returns multiple rows for each group. For each row, a window of rows is defined. The window determines the range of rows used to perform the calculations for the current row. Window sizes can be based on either a physical number of rows or a logical interval such as time.</p>
<p>SQL analytic functions bring to set-oriented SQL the ability to use array semantics on result sets. They provide coding efficiency, because they enable concise, straightforward coding of logic that is otherwise cumbersome or impossible. They also provide processing efficiency, because they are integral to Oracle Database and use internal optimizations.</p>
<p>A typical use of analytic functions is to retrieve the most current information in a table. For example, a query of the following form returns information from the row with the most recent update time for each customer with records in a table:</p>
<pre dir="ltr">SELECT ... FROM my_table t1
  WHERE upd_time = ( SELECT <span class="bold">MAX(UPD _TIME)</span>
                     FROM my_table t2
                     WHERE t2.cust_id = t1.cust_id );
</pre>
<p>The preceding query uses a correlated subquery to find the <code dir="ltr">MAX(UPD _TIME)</code> by <code dir="ltr">cust _id</code>, record by record. Therefore, the correlated subquery could be evaluated once for each row in the table. If the table has very few records, performance may be adequate; if the table has tens of thousands of records, the cumulative cost of repeatedly executing the correlated subquery is high.</p>
<p>The following query makes a single pass on the table and computes the maximum <code dir="ltr">UPD_TIME</code> during that pass. Depending on various factors, such as table size and number of rows returned, the following query may be much more efficient than the preceding query:</p>
<pre dir="ltr">SELECT ...
  FROM ( SELECT t1.*,
         <span class="bold">MAX(UPD_TIME) OVER (PARTITION BY cust _id)</span> max_time
         FROM my_table t1
       )
  WHERE  upd_time = max_time;
</pre>
<p>The available analytic functions are:</p>
<pre dir="ltr">AVG
CORR
COUNT
COVAR_POP
COVAR_SAMP
CUME_DIST
DENSE_RANK
FIRST
FIRST_VALUE
LAG
LAST
LAST_VALUE
LEAD
LISTAGG
MAX
MIN
NTH_VALUE
NTILE
PERCENT_RANK
PERCENTILE_CONT
PERCENTILE_DISC
RANK
RATIO_TO_REPORT
REGR_ (Linear Regression) Functions
ROW_NUMBER
STDDEV
STDDEV_POP
STDDEV_SAMP
SUM
VAR_POP
VAR_SAMP
VARIANCE
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT1476" href="../CNCPT/cmntopc.htm#CNCPT1476"><span class="italic">Oracle Database Concepts</span></a> for an overview of SQL analytic functions</p>
</li>
<li>
<p><a class="olink SQLRF06174" href="../SQLRF/functions004.htm#SQLRF06174"><span class="italic">Oracle Database SQL Language Reference</span></a> for syntax and reference information</p>
</li>
<li>
<p><a class="olink DWHSG021" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG021"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for an extensive discussion of SQL for analysis and reporting</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACFJGBH"></a>
<div id="ADFNS1000" class="sect2">
<h3 class="sect2"><span class="secnum">1.9.2</span> <a id="sthref16"></a><a id="sthref17"></a>Materialized Views</h3>
<p><span class="bold">Materialized views</span> are query results that have been stored (&#34;materialized&#34;) as schema objects. Like tables and views, materialized views can appear in the <code dir="ltr">FROM</code> clauses of queries. Like tables, materialized views can be partitioned (see <a href="#CACCCBJC">&#34;Partitioning&#34;</a>).</p>
<p>Materialized views are used to summarize, compute, replicate, and distribute data. They are useful for pre-answering general classes of questions&mdash;users can query the materialized views instead of individually aggregating detail records. Some environments where materialized views are useful are data warehousing, replication, and mobile computing.</p>
<p>Materialized views require time to create and update, and disk space for storage, but these costs are offset by dramatically faster queries. In these respects, materialized views are like indexes, and they are called &#34;the indexes of your data warehouse.&#34; Unlike indexes, materialized views can be queried directly (with <code dir="ltr">SELECT</code> statements) and sometimes updated with DML statements (depending on the type of update needed).</p>
<p>A major benefit of creating and maintaining materialized views is the ability to take advantage of <a id="sthref18"></a><span class="bold">query rewrite</span>, which transforms a SQL statement expressed in terms of tables or views into a statement accessing one or more materialized views that are defined on the detail tables. The transformation is transparent to the end user or application, requiring no intervention and no reference to the materialized view in the SQL statement. Because query rewrite is transparent, materialized views can be added or dropped like indexes without invalidating the SQL in the application code.</p>
<p>The following statement creates and populates a materialized aggregate view based on three master tables in the SH sample schema:</p>
<pre dir="ltr">CREATE MATERIALIZED VIEW sales_mv AS 
  SELECT t.calendar_year, p.prod_id, SUM(s.amount_sold) AS sum_sales
  FROM   times t, products p, sales s
  WHERE  t.time_id = s.time_id 
  AND    p.prod_id = s.prod_id
  GROUP BY t.calendar_year, p.prod_id;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT411" href="../CNCPT/schemaob.htm#CNCPT411"><span class="italic">Oracle Database Concepts</span></a> for an overview of materialized views</p>
</li>
<li>
<p><a class="olink DWHSG8110" href="../DWHSG/part3.htm#DWHSG8110"><span class="italic">Oracle Database Data Warehousing Guide</span></a> to learn how to use materialized views, including the use of query rewrite with materialized views, in a data warehouse</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACCCBJC"></a>
<div id="ADFNS1334" class="sect2">
<h3 class="sect2"><span class="secnum">1.9.3</span> <a id="sthref19"></a>Partitioning</h3>
<p><span class="bold">Partitioning</span> is the database ability to physically break a very large table, index, or materialized view into smaller pieces that it can manage independently. Partitioning is similar to parallel processing, which breaks a large process into smaller pieces that can be processed independently.</p>
<p>Each partition is an independent object with its own name and, optionally, its own storage characteristics. Partitioning is useful for many different types of database applications, particularly those that manage large volumes of data. Benefits include increased availability, easier administration of schema objects, reduced contention for shared resources in OLTP systems, and enhanced query performance in data warehouses.</p>
<p>To partition a table, specify the <code dir="ltr">PARTITION</code> <code dir="ltr">BY</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement. <code dir="ltr">SELECT</code> and DML statements do not need special syntax to benefit from the partitioning.</p>
<p>A common strategy is to partition records by date ranges. The following statement creates four partitions, one for records from each of four years of sales data (2008 through 2011):</p>
<pre dir="ltr">CREATE TABLE time_range_sales
   ( prod_id        NUMBER(6)
   , cust_id        NUMBER
   , <span class="bold">time_id        DATE</span>
   , channel_id     CHAR(1)
   , promo_id       NUMBER(6)
   , quantity_sold  NUMBER(3)
   , amount_sold    NUMBER(10,2)
   )
<span class="bold">PARTITION BY RANGE (time_id)</span>
 (PARTITION SALES_2008 VALUES LESS THAN (TO_DATE(&#39;01-JAN-2009&#39;,&#39;DD-MON-YYYY&#39;)),
  PARTITION SALES_2009 VALUES LESS THAN (TO_DATE(&#39;01-JAN-2010&#39;,&#39;DD-MON-YYYY&#39;)),
  PARTITION SALES_2010 VALUES LESS THAN (TO_DATE(&#39;01-JAN-2011&#39;,&#39;DD-MON-YYYY&#39;)),
  PARTITION SALES_2011 VALUES LESS THAN (MAXVALUE)
 ); 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT112" href="../CNCPT/schemaob.htm#CNCPT112"><span class="italic">Oracle Database Concepts</span></a> for an overview of partitions</p>
</li>
<li>
<p><a class="olink DWHSG008" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=DWHSG008"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for detailed explanations and usage information about partitioning with very large databases (VLDB)</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACHEBFC"></a>
<div id="ADFNS967" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.9.4</span> Temporal <a id="sthref20"></a>Validity Support</h3>
<p><span class="bold">Temporal Validity Support</span> lets you associate one or more valid time dimensions with a table and have data be visible depending on its time-based validity, as determined by the start and end dates or time stamps of the period for which a given record is considered valid. Examples of time-based validity are the hire and termination dates of an employee in a Human Resources application, the effective date of coverage for an insurance policy, and the effective date of a change of address for a customer or client.</p>
<p>Temporal Validity Support is typically used with Oracle Flashback Technology (described in <a href="adfns_flashback.htm#g1026131">Chapter 16</a>), for queries that specify the valid time period in <code dir="ltr">AS</code> <code dir="ltr">OF</code> and <code dir="ltr">VERSIONS</code> <code dir="ltr">BETWEEN</code> clauses. You can also use the <code dir="ltr">DBMS_FLASHBACK_ARCHIVE.ENABLE_AT_VALID_TIME</code> procedure (described in <a class="olink ARPLS74552" href="../ARPLS/d_flashb_archive.htm#ARPLS74552"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>) to specify an option for the visibility of table data: all table data (the default), data valid at a specified time, or currently valid data within the valid time period at the session level.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adfns_flashback.htm#CHDHFFGH">Section 16.12, &#34;Multitenant Container Database Restrictions for Oracle Flashback Technology&#34;</a></div>
<p>Temporal Validity Support is useful in Information Lifecycle Management (ILM) and any other application where it is important to know when certain data becomes valid (from the application&#39;s perspective) and when it becomes invalid (if ever).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a href="#CACJBAJJ">Example 1-1</a> and <a href="#CACFBBBH">Example 1-2</a> assume that the user has the privileges to create tables and perform data manipulation language (DML) and (data definition language) DDL operations on them.</div>
<p><a href="#CACJBAJJ">Example 1-1</a> creates a table with Temporal Validity Support, inserts some rows, and issues some queries whose results depend on the valid start and end dates for individual rows.</p>
<div id="ADFNS1005" class="example">
<p class="titleinexample"><a id="CACJBAJJ"></a>Example 1-1 Creating and Using a Table with Valid Time Support</p>
<pre dir="ltr">CREATE TABLE my_emp(
  empno NUMBER,
  last_name VARCHAR2(30),
  start_time TIMESTAMP,
  end_time TIMESTAMP,
PERIOD FOR user_valid_time (start_time, end_time));
 
INSERT INTO my_emp VALUES (100, &#39;Ames&#39;, &#39;01-Jan-10&#39;, &#39;30-Jun-11&#39;);
INSERT INTO my_emp VALUES (101, &#39;Burton&#39;, &#39;01-Jan-11&#39;, &#39;30-Jun-11&#39;);
INSERT INTO my_emp VALUES (102, &#39;Chen&#39;, &#39;01-Jan-12&#39;, null);
 
-- Valid Time Queries --
 
-- AS OF PERIOD FOR queries:
 
-- Returns only Ames.
SELECT * from my_emp AS OF PERIOD FOR user_valid_time TO_TIMESTAMP(&#39;01-Jun-10&#39;);

-- Returns  Ames and Burton, but not Chen.
SELECT * from my_emp AS OF PERIOD FOR user_valid_time TO_TIMESTAMP(&#39;01-Jun-11&#39;);

-- Returns no one.
SELECT * from my_emp AS OF PERIOD FOR user_valid_time TO_TIMESTAMP( &#39;01-Jul-11&#39;);

-- Returns only Chen.
SELECT * from my_emp AS OF PERIOD FOR user_valid_time TO_TIMESTAMP(&#39;01-Feb-12&#39;);
 
-- VERSIONS PERIOD FOR ... BETWEEN queries:
 
-- Returns only Ames.
SELECT * from my_emp VERSIONS PERIOD FOR user_valid_time BETWEEN 
   TO_TIMESTAMP(&#39;01-Jun-10&#39;) AND TO_TIMESTAMP(&#39;02-Jun-10&#39;);

-- Returns Ames and Burton.
SELECT * from my_emp VERSIONS PERIOD FOR user_valid_time BETWEEN 
   TO_TIMESTAMP(&#39;01-Jun-10&#39;) AND TO_TIMESTAMP(&#39;01-Mar-11&#39;);

-- Returns only Chen.
SELECT * from my_emp VERSIONS PERIOD FOR user_valid_time BETWEEN 
   TO_TIMESTAMP(&#39;01-Nov-11&#39;) AND TO_TIMESTAMP(&#39;01-Mar-12&#39;);

-- Returns no one.
SELECT * from my_emp VERSIONS PERIOD FOR user_valid_time BETWEEN 
   TO_TIMESTAMP(&#39;01-Jul-11&#39;) AND TO_TIMESTAMP(&#39;01-Sep-11&#39;);
</pre></div>
<!-- class="example" -->
<p>To add Temporal Validity Support to an existing table without explicitly adding columns, use the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement with the <code dir="ltr">ADD</code> <code dir="ltr">PERIOD</code> <code dir="ltr">FOR</code> clause. For example, if the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement in <a href="#CACJBAJJ">Example 1-1</a> did not create the <code dir="ltr">START_TIME</code> and <code dir="ltr">END_TIME</code> columns, you could use this statement:</p>
<pre dir="ltr">ALTER TABLE my_emp ADD PERIOD FOR user_valid_time;
</pre>
<p>The preceding statement adds two hidden columns to the table <code dir="ltr">MY_EMP</code>: <code dir="ltr">USER_VALID_TIME_START</code> and <code dir="ltr">USER_VALID_TIME_END</code>. You can insert rows that specify values for these columns, but the columns do not appear in the output of the SQL*Plus <code dir="ltr">DESCRIBE</code> statement, and <code dir="ltr">SELECT</code> statements show the data in those columns only if the <code dir="ltr">SELECT</code> list explicitly includes the column names.</p>
<p><a href="#CACFBBBH">Example 1-2</a> uses Temporal Validity Support for data change in the table created in <a href="#CACJBAJJ">Example 1-1</a>. In <a href="#CACFBBBH">Example 1-2</a>, the initial record for employee 103 has the last name Davis. Later, the employee changes his or her last name to Smith. The <code dir="ltr">END_TIME</code> value in the original row changes from <code dir="ltr">NULL</code> to the day before the change is to become valid. A new row is inserted with the new last name, the appropriate <code dir="ltr">START_TIME</code> value, and <code dir="ltr">END_TIME</code> set to <code dir="ltr">NULL</code> to indicate that it is valid until set otherwise.</p>
<div id="ADFNS1424" class="example">
<p class="titleinexample"><a id="CACFBBBH"></a>Example 1-2 Data Change Using Temporal Validity Support</p>
<pre dir="ltr">-- Add a record for Davis.
INSERT INTO my_emp VALUES (103, &#39;Davis&#39;, &#39;01-Jan-12&#39;, null);

-- To change employee 103&#39;s last name to Smith,
-- first set an end date for the record with the old name.
UPDATE my_emp SET end_time = &#39;01-Feb-12&#39; WHERE empno = 103;

-- Then insert another record for employee 103, specifying the new last name,
-- the appropriate valid start date, and null for the valid end date.
-- After the INSERT statement, there are two records for #103 (Davis and Smith).
INSERT INTO my_emp VALUES (103, &#39;Smith&#39;, &#39;02-Feb-12&#39;, null);
 
-- What&#39;s the valid information for employee 103 as of today?
SELECT * from my_emp AS OF PERIOD FOR user_valid_time SYSDATE WHERE empno = 103;

-- What was the valid information for employee 103 as of a specified date?

-- First, as of a date after the change to Smith.
SELECT * from my_emp AS OF PERIOD FOR user_valid_time TO_TIMESTAMP(&#39;01-Jul-12&#39;)
  WHERE empno = 103;

-- Next, as of a date before the change to Smith.
SELECT * from my_emp AS OF PERIOD FOR user_valid_time TO_TIMESTAMP(&#39;20-Jan-12&#39;)
  WHERE empno = 103;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF01402" href="../SQLRF/statements_7002.htm#SQLRF01402"><code dir="ltr">CREATE TABLE</code></a> and <a class="olink SQLRF01001" href="../SQLRF/statements_3001.htm#SQLRF01001"><code dir="ltr">ALTER TABLE</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for syntax information about the <code dir="ltr">PERIOD FOR</code> clause for specifying the valid time period name and the start and end time columns</p>
</li>
<li>
<p><a class="olink SQLRF01702" href="../SQLRF/statements_10002.htm#SQLRF01702"><code dir="ltr">SELECT</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for syntax information about using the <code dir="ltr">AS OF PERIOD FOR</code> and <code dir="ltr">VERSIONS PERIOD FOR ... BETWEEN</code> clauses in queries</p>
</li>
<li>
<p><a href="adfns_flashback.htm#g1026131">Chapter 16</a> for information about using Oracle Flashback Technology</p>
</li>
<li>
<p><code dir="ltr">DBMS_FLASHBACK_ARCHIVE.ENABLE_AT_VALID_TIME</code> in <a class="olink ARPLS74552" href="../ARPLS/d_flashb_archive.htm#ARPLS74552"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</li>
<li>
<p><a class="olink VLDBG007" href="../VLDBG/GUID-0193CE0F-4D9A-4D6F-8B19-E471DE94107C.htm#VLDBG007">Chapter about Information Lifecycle Management (ILM)</a> in <span class="italic">Oracle Database VLDB and Partitioning Guide</span>, especially the <a class="olink VLDBG14127" href="../VLDBG/GUID-AF78C832-516A-4686-9DDF-CE12597F7723.htm#VLDBG14127">section about temporal validity</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment286">
<tr>
<td class="cellalignment295">
<table class="cellalignment291">
<tr>
<td class="cellalignment290"><a href="adfns_part_fund.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment290"><a href="adfns_perf_scale.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment298">
<table class="cellalignment289">
<tr>
<td class="cellalignment290"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment290"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment290"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment290"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment290"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment290"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>