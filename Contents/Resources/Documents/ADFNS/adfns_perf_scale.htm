<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Performance%20and%20Scalability"></a><title>Performance and Scalability</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1080"/>
<meta name="dcterms.created" content="2016-05-05T16:23:33Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Development Guide"/>
<meta name="dcterms.identifier" content="E41452-07"/>
<meta name="dcterms.isVersionOf" content="ADFNS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="adfns_design.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adfns_secur.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41452-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/38</span> <!-- End Header -->
<div id="ADFNS131" class="chapter"><a id="CACEDGDD"></a>
<h1 class="chapter"><span class="secnum">2</span> Performance and Scalability</h1>
<p>This chapter explains some techniques for designing <a id="sthref21"></a>performance and <a id="sthref22"></a>scalability into the database and database applications.</p>
<p class="subhead2"><a id="ADFNS132"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACIIHBA">Performance Strategies</a></p>
</li>
<li>
<p><a href="#CACJFCFA">Tools for Performance</a></p>
</li>
<li>
<p><a href="#CACJFABI">Monitoring Database Performance</a></p>
</li>
<li>
<p><a href="#CACGEJFA">Using Instrumentation</a></p>
</li>
<li>
<p><a href="#CACGDGCH">Testing for Performance</a></p>
</li>
<li>
<p><a href="#CACFHACJ">Using Bind Variables</a></p>
</li>
<li>
<p><a href="#CACCJGCB">Using Client Result Cache</a></p>
</li>
<li>
<p><a href="#CACGIGGH">Statement Caching</a></p>
</li>
<li>
<p><a href="#CACFFJEG">OCI Client Statement Cache Auto-Tuning</a></p>
</li>
<li>
<p><a href="#CACIAIJE">Client-Side Deployment Parameters</a></p>
</li>
<li>
<p><a href="#CACFIABH">Using Query Change Notification</a></p>
</li>
<li>
<p><a href="#CACDICGG">Using Database Resident Connection Pool</a></p>
</li>
<li>
<p><a href="#CACFEJBB">Using Runtime Connection Load Balancing</a></p>
</li>
</ul>
<a id="CACIIHBA"></a>
<div id="ADFNS133" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.1</span> Performance Strategies</h2>
<p class="subhead2"><a id="ADFNS136"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACGCGEI">Designing Your Data Model to Perform Well</a></p>
</li>
<li>
<p><a href="#CACCIJBH">Setting Performance Goals (Metrics)</a></p>
</li>
<li>
<p><a href="#CACBEBGC">Benchmarking Your Application</a></p>
</li>
</ul>
<a id="CACGCGEI"></a>
<div id="ADFNS252" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.1.1</span> Designing Your Data Model to Perform Well</h3>
<p>This topic briefly describes the important concepts of <a id="sthref23"></a>data modeling. Entire books about this subject are available; refer to them for details and further guidance.</p>
<p>Design your data model for optimal performance of the most important and frequent queries, following this basic procedure:</p>
<ol>
<li>
<p><a href="#CACBHHFC">Analyze the Data Requirements of the Application</a></p>
</li>
<li>
<p><a href="#CACGCJCC">Create the Database Design for the Application</a></p>
</li>
<li>
<p><a href="#CACBCBGG">Implement the Database Application</a></p>
</li>
<li>
<p><a href="#CACDDGGG">Maintain the Database and Database Application</a></p>
</li>
</ol>
<a id="CACBHHFC"></a>
<div id="ADFNS253" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.1.1.1</span> Analyze the Data Requirements of the Application</h4>
<p>Analyze the data requirements of your application by following this basic procedure:</p>
<ol>
<li>
<p>Collect data.</p>
<p>Interview people to learn about the business, the nature of the application, who uses information and how, and the expectations of end users. Collect business documents&mdash;personnel forms, invoice forms, order forms, and so on&mdash;to learn how the business uses information.</p>
</li>
<li>
<p>Analyze the collected data.</p>
<p>This bottom-up process includes normalization of the data, entity-relationship modeling, and transaction analysis.</p>
</li>
<li>
<p>Do a functional analysis of the data.</p>
<p>The end result of this top-down process is a data flow diagram that identifies the main process blocks and how data flows into and out of them over its life time.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CACGCJCC"></a>
<div id="ADFNS255" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.1.1.2</span> Create the Database Design for the Application</h4>
<p>Create the database design by following this basic procedure:</p>
<ol>
<li>
<p>Create the logical design.</p>
</li>
<li>
<p>Translate the logical design into the physical design.</p>
</li>
</ol>
<p class="subhead2"><a id="ADFNS1442"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACDEHED">Create the Logical Design</a></p>
</li>
<li>
<p><a href="#CACIECDD">Create the Physical Design</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about designing and developing for performance</div>
<a id="CACDEHED"></a>
<div id="ADFNS1443" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4"><span class="secnum">2.1.1.2.1</span> Create the Logical Design</h5>
<p>The <a id="sthref24"></a><a id="sthref25"></a>logical design is a graphical representation of the database. The logical design models both relationships between database objects and transaction activity of the application. Effective logical design considers the requirements of different users who must own, access, and update data.</p>
<p>To model relationships between database objects:</p>
<ol>
<li>
<p>Translate the data requirements into data items (columns).</p>
</li>
<li>
<p>Group related columns into tables.</p>
</li>
<li>
<p>Map relationships among columns and tables, determining primary and foreign key attributes for each table.</p>
</li>
<li>
<p>Normalize the tables to minimize redundancy and dependency.</p>
</li>
</ol>
<p>To model transaction activity:</p>
<ul>
<li>
<p>Know the most common transactions and those that users consider most important.</p>
</li>
<li>
<p>Trace transaction paths through the logical model.</p>
</li>
<li>
<p>Prototype transactions in SQL and develop a volume table that indicates the size of your database.</p>
</li>
<li>
<p>Determine which tables are accessed by which users in which sequences, which transactions read data, and which transactions write data.</p>
</li>
<li>
<p>Determine whether the application mostly reads data or mostly writes data.</p>
</li>
</ul>
<a id="CACIECDD"></a>
<div id="ADFNS1444" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4"><span class="secnum">2.1.1.2.2</span> Create the Physical Design</h5>
<p>The <a id="sthref26"></a><a id="sthref27"></a>physical design is the implementation of the logical design on the physical database.</p>
<p>Because the logical design integrates the information about tables and columns, the relationships between and among tables, and all known transaction activity, you know how the database stores data in tables and creates other structures, such as indexes.</p>
<p>Using this knowledge, create scripts that use SQL data definition language (DDL) to create the schema definition, define the database objects in their required sequence, define the storage requirements to specification, and so on.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CACBCBGG"></a>
<div id="ADFNS256" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.1.1.3</span> Implement the Database Application</h4>
<p><a id="sthref28"></a>Implement the database application by following this basic procedure:</p>
<ol>
<li>
<p>Implement the application in a test environment.</p>
<p>In a test environment that is as similar as possible to the production environment, run the scripts that implement the physical database design. Load the data into the physical schema. Select the programming language in which to develop the application, develop the user interface, create and test the transactions, and so on.</p>
</li>
<li>
<p>Ensure that the application runs to specification.</p>
<p>Ensure that all components are exercised, the application is fully operational, and the database features that the application uses are optimally configured. For information about tools for testing performance, see <a href="#CACJFCFA">Section 2.2</a>.</p>
</li>
<li>
<p>Run benchmark tests on the application.</p>
<p>Benchmark tests determine whether the application performs as expected under various workloads (including peak activity) with simulated real-time operations, such as adding data and users. Ensure that the application scales well. For information about benchmarking your application, see <a href="#CACBEBGC">Section 2.1.3</a>.</p>
<p>If the application does not meet the benchmarks, tune your SQL statements to perform optimally, first with no workload and then with increasing workloads.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TGSQL" href="../TGSQL/toc.htm"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about SQL tuning</p>
</li>
<li>
<p><a class="olink TDPPT" href="../TDPPT/toc.htm"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information about SQL tuning</p>
</li>
<li>
<p><a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about workload testing, modeling, and implementation</p>
</li>
</ul>
</div>
</li>
<li>
<p>Implement the application in the production environment.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGDBA94132" href="../TGDBA/pfgrf_design.htm#TGDBA94132"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about deploying new applications</div>
</div>
<!-- class="sect3" -->
<a id="CACDDGGG"></a>
<div id="ADFNS268" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.1.1.4</span> Maintain the Database and Database Application</h4>
<p>Maintaining the database, the <a id="sthref29"></a>database application, and the operating system are on-going tasks for the database administrator, the application developer, and the system administrator, respectively. The resources that the business allocates to maintenance depend on the importance of the database and the database application, its growth potential, the need to accommodate more users, and so on.</p>
<p>If you are responsible for maintenance, you must periodically monitor the system, schedule maintenance periods, and inform users of upcoming maintenance periods. If maintenance periods require down time, schedule them for periods with little or no database activity.</p>
<p>Application maintenance includes fixing bugs, applying patches, and releasing upgrades. Test maintenance work in a test environment to catch and resolve any before implemented it on production systems.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACCIJBH"></a>
<div id="ADFNS349" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.1.2</span> Setting Performance Goals (Metrics)</h3>
<p>Start your application development project by setting <a id="sthref30"></a><a id="sthref31"></a>performance goals (metrics), including:</p>
<ul>
<li>
<p>Expected number of application users</p>
</li>
<li>
<p>Expected number of transactions per second at peak load times</p>
</li>
<li>
<p>Expected query response times at peak load times</p>
</li>
<li>
<p>Expected number of records for each table per unit of time (such as one day, one month, or one year)</p>
</li>
</ul>
<p>Use these metrics to create benchmark tests.</p>
</div>
<!-- class="sect2" -->
<a id="CACBEBGC"></a>
<div id="ADFNS696" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.1.3</span> Benchmarking Your Application</h3>
<p><a id="sthref32"></a><span class="bold">Benchmarks</span> are tests that measure aspects of application performance. Benchmark results either validate application design or raise issues that you can resolve before putting the application into production.</p>
<p>Usually, you first run benchmarks on an isolated single-user system to minimize interference from other factors. Results from such benchmarks provide a performance baseline for the application. For meaningful benchmark results, you must test the application in the environment where you expect it to run.</p>
<p>You can create small benchmarks that measure performance of the most important transactions, compare different solutions to performance problems, and help resolve design issues that could affect performance.</p>
<p>You must develop much larger, more complex benchmarks to measure application performance during peak user loads, peak transaction loads, or both. Such benchmarks are especially important if you expect the user or transaction load to increase over time. You must budget and plan for such benchmarks.</p>
<p>After the application is in production, run benchmarks regularly in the production environment and store their results in a database table. After each benchmark run, compare the previous and new records for transactions that cannot afford performance degradation. Using this method, you isolate issues as they arise. If you wait until users complain about performance, you might be unable to determine when the problem started.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGDBA94129" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=TGDBA94129"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about benchmarking applications</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJFCFA"></a>
<div id="ADFNS158" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.2</span> Tools for Performance</h2>
<p class="subhead2"><a id="ADFNS697"></a>Topics:</p>
<p>Several tools that report runtime performance information about your application are:</p>
<ul>
<li>
<p><a href="#CACJGACF">DBMS_APPLICATION_INFO Package</a></p>
</li>
<li>
<p><a href="#CACIFHGF">SQL Trace Facility (SQL_TRACE)</a></p>
</li>
<li>
<p><a href="#CACEJBAF">EXPLAIN PLAN Statement</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RATUG101" href="../RATUG/GUID-C6C2FA1F-3474-4B5A-B814-C41415B4C248.htm#RATUG101"><span class="italic">Oracle Database Testing Guide</span></a> for more information about tools for tuning the database</div>
<a id="CACJGACF"></a>
<div id="ADFNS699" class="sect2">
<h3 class="sect2"><span class="secnum">2.2.1</span> DBMS_APPLICATION_INFO Package</h3>
<p>Use the <a id="sthref33"></a><code dir="ltr">DBMS_APPLICATION_INFO</code> package with the SQL Trace facility (described in <a href="#CACIFHGF">Section 2.2.2</a>) and Oracle Trace and to record the names of executing modules or transactions in the database. System administrators and performance tuning specialists can use this recorded information to track the performance of individual modules and for debugging. System administrators can also use this information to track resource use by module.</p>
<p>When you register the application with the database, its name and actions are recorded in the views <code dir="ltr">V$SESSION</code> and <code dir="ltr">V$SQLAREA</code>.</p>
<p>The <code dir="ltr">DBMS_APPLICATION_INFO</code> package provides subprograms that set the following columns in the <code dir="ltr">V$SESSION</code> view:</p>
<ul>
<li>
<p><code dir="ltr">MODULE</code> (name of application or package)</p>
</li>
<li>
<p><code dir="ltr">ACTION</code> (name of transaction or packaged subprogram)</p>
</li>
<li>
<p><code dir="ltr">CLIENT_INFO</code> (additional information about the client application, such as initial bind variable values for the current session)</p>
</li>
</ul>
<p>The <code dir="ltr">DBMS_APPLICATION_INFO</code> package also provides subprograms that return information from the preceding <code dir="ltr">V$SESSION</code> columns for the current session.</p>
<p>You can also use the <code dir="ltr">DBMS_APPLICATION_INFO</code> package to track the progress of commands that take many seconds to display results (such as those that create indexes or update many rows). The <code dir="ltr">DBMS_APPLICATION_INFO</code> package provides a subprogram that stores information about the command in the <code dir="ltr">V$SESSION_LONGOPS</code> view. The <code dir="ltr">V$SESSION_LONGOPS</code> view shows when the command started, how far it has progressed, and its estimated time to completion.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS003" href="../ARPLS/d_appinf.htm#ARPLS003"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">DBMS_APPLICATION_INFO</code> package</p>
</li>
<li>
<p><a class="olink REFRN30223" href="../REFRN/GUID-28E2DC75-E157-4C0A-94AB-117C205789B9.htm#REFRN30223"><span class="italic">Oracle Database Reference</span></a> for information about the <code dir="ltr">V$SESSION</code> view</p>
</li>
<li>
<p><a class="olink REFRN30227" href="../REFRN/GUID-F2802C36-066C-493E-8255-C08CC79B87FB.htm#REFRN30227"><span class="italic">Oracle Database Reference</span></a> for information about the <code dir="ltr">V$SESSION_LONGOPS</code> view</p>
</li>
<li>
<p><a class="olink REFRN30259" href="../REFRN/GUID-09D5169F-EE9E-4297-8E01-8D191D87BDF7.htm#REFRN30259"><span class="italic">Oracle Database Reference</span></a> for information about the <code dir="ltr">V$SQLAREA</code> view</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACIFHGF"></a>
<div id="ADFNS700" class="sect2">
<h3 class="sect2"><span class="secnum">2.2.2</span> SQL Trace Facility (SQL_TRACE)</h3>
<p>Use the <a id="sthref34"></a>SQL Trace facility, <code dir="ltr">SQL_TRACE</code>, to trace all SQL statements and PL/SQL blocks that your application executes. By enabling the SQL Trace facility for a single statement or module and then disabling it after the statement or module runs, you can get trace information for only that statement or module.</p>
<p>For best results, use the SQL Trace facility with <code dir="ltr">TKPROF</code> and the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> statement. The SQL Trace facility provides performance information for individual SQL statements. <code dir="ltr">TKPROF</code> formats the trace file contents in a readable file. The <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> statement shows the execution plans chosen by the optimizer and the execution plan for the specified SQL statement if it were executed in the current session (for more information, see <a href="#CACEJBAF">Section 2.2.3</a>).</p>
<p>Use the SQL Trace facility while designing your application, so that you know what you want to trace and how the application performs before putting it into production. If you wait until performance problems develop in the production environment, your application structure might make using the SQL Trace facility almost impossible.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TGSQL806" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=TGSQL806"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about <code dir="ltr">SQL_TRACE</code> and <code dir="ltr">TKPROF</code></div>
</div>
<!-- class="sect2" -->
<a id="CACEJBAF"></a>
<div id="ADFNS701" class="sect2">
<h3 class="sect2"><span class="secnum">2.2.3</span> EXPLAIN PLAN Statement</h3>
<p><a id="sthref35"></a>When you run a SQL statement, the optimizer generates several possible <a id="sthref36"></a>execution plans, calculates the cost of each plan, and uses the plan with the lowest cost.</p>
<p>Plan cost is based on statistics such as the data distribution and storage characteristics of the tables, indexes, and partitions that the SQL statement accesses. The cost of access paths and join orders is based on estimated use of computer resources such as I/O, CPU, and memory.</p>
<p>When you use the statement <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> <code dir="ltr">FOR</code> <code dir="ltr"><span class="codeinlineitalic">statement</span></code> before running <code dir="ltr"><span class="codeinlineitalic">statement</span></code>, the <code dir="ltr">EXPLAIN</code> <code dir="ltr">PLAN</code> statement stores the execution plan for <code dir="ltr"><span class="codeinlineitalic">statement</span></code> in a plan table. By querying the plan table, you can examine the execution plan that the optimizer chose.</p>
<p>The plan table presents the execution plan as a row source tree, which shows the steps that Oracle Database uses to execute the SQL statement. The row source tree shows the order in which the statement references tables, the join method for tables affected by join operations, and data operations such as filtering, sorting, and aggregation. The plan table also contains optimization information, such as the cost and cardinality of each operation, partitioning information (such as the set of accessed partitions), and parallel execution information (such as the distribution method of join inputs). This information provides valuable insight into how and why the optimizer chose the execution plan.</p>
<p>If you have information about the data that the optimizer does not have, you can give the optimizer a hint, which might change the execution plan. If tests show that the hint improves performance, keep the hint in your code.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must regularly test code that contains hints, because changing database conditions and query performance enhancements in subsequent releases can significantly impact how hints affect performance.</div>
<p>The <code dir="ltr">EXPLAIN PLAN</code> statement shows only how Oracle Database would run the SQL statement when the statement was explained. If the execution environment or explain plan environment changes, the optimizer might use a different execution plan. Therefore, Oracle recommends using SQL plan management to build a SQL plan baseline, which is a set of accepted execution plans for a SQL statement.</p>
<p>First, use the <code dir="ltr">EXPLAIN PLAN</code> statement to see the statement&#39;s execution plan. Second, test the execution plan to verify that it is optimal, considering the statement&#39;s actual resource consumption. Finally, if the plan is optimal, use SQL plan management.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TGSQL193" href="../TGSQL/tgsql_optcncpt.htm#TGSQL193"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about the query optimizer</p>
</li>
<li>
<p><a class="olink TGSQL196" href="../TGSQL/tgsql_optcncpt.htm#TGSQL196"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about query execution plans</p>
</li>
<li>
<p><a class="olink TGSQL259" href="../TGSQL/tgsql_influence.htm#TGSQL259"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about influencing the optimizer with hints</p>
</li>
<li>
<p><a class="olink TGSQL615" href="../TGSQL/tgsql_spm.htm#TGSQL615"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about SQL plan management</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJFABI"></a>
<div id="ADFNS161" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.3</span> Monitoring Database Performance</h2>
<p><a id="sthref37"></a>Oracle Database provides advisors and powerful tools to help you manage and tune your database.</p>
<p class="subhead2"><a id="ADFNS698"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACGCJDC">Automatic Database Diagnostic Monitor (ADDM)</a></p>
</li>
<li>
<p><a href="#CACCGGGD">Monitoring Real-Time Database Performance</a></p>
</li>
<li>
<p><a href="#CACBDGCE">Responding to Performance-Related Alerts</a></p>
</li>
<li>
<p><a href="#CACFBHGI">SQL Advisors and Memory Advisors</a></p>
</li>
</ul>
<a id="CACGCJDC"></a>
<div id="ADFNS931" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.3.1</span> Automatic Database Diagnostic Monitor (ADDM)</h3>
<p><a id="sthref38"></a><a id="sthref39"></a>Automatic Database Diagnostic Monitor (ADDM) is an advisor that analyzes data captured in Automatic Workload Repository (AWR). ADDM and AWR are part of the Oracle Diagnostic Pack.</p>
<p>ADDM determines where database performance problems might exist and where they do not exist, and recommends corrections for the former.</p>
<p>ADDM performs its analysis after each AWR snapshot and stores the results in the database. By default, the AWR snapshot interval is 1 hour and the ADDM results retention period is 8 days.</p>
<p>Oracle Enterprise Manager Cloud Control (Cloud Control) displays ADDM Findings on the Database home page. This AWR snapshot data confirms ADDM results, but lacks the analysis and recommendations that ADDM provides. (AWR snapshot data is similar to Statspack data that database administrators used for performance analysis.)</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDPPT020" href="../TDPPT/tdppt_auto.htm#TDPPT020"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information about configuring ADDM, reviewing ADDM analysis, interpreting ADDM findings, implementing ADDM recommendations, and viewing snapshot statistics using Enterprise Manager</div>
</div>
<!-- class="sect2" -->
<a id="CACCGGGD"></a>
<div id="ADFNS945" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.3.2</span> Monitoring Real-Time Database Performance</h3>
<p>Using Oracle Enterprise Manager Cloud Control (Cloud Control), you can monitor real-time database performance from the Performance page. From the Performance page, you can access pages that identify performance issues and resolve those issues without waiting for the next ADDM analysis.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDPPT033" href="../TDPPT/tdppt_realtime.htm#TDPPT033"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information about monitoring real-time database performance</div>
</div>
<!-- class="sect2" -->
<a id="CACBDGCE"></a>
<div id="ADFNS946" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.3.3</span> Responding to Performance-Related Alerts</h3>
<p>The Database home page in Oracle Enterprise Manager Cloud Control (Cloud Control) displays performance-related alerts generated by the database. You can improve database performance by resolving problems indicated by these alerts. Oracle Database by default enables alerts for tablespace usage, snapshot too old, recovery area low on free space, and resumable session suspended. You can view metrics and thresholds, set metric thresholds, respond to alerts, clear alerts, and set up direct alert email notification. Using this built-in alerts infrastructure allows you to be notified for these special performance-related alerts.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADMIN11247" href="../ADMIN/monitoring.htm#ADMIN11247"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about using alerts to help you monitor and tune the database and managing alerts</p>
</li>
<li>
<p><a class="olink TDPPT045" href="../TDPPT/tdppt_alerts.htm#TDPPT045"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information about monitoring performance alerts</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACFBHGI"></a>
<div id="ADFNS947" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.3.4</span> SQL Advisors and Memory Advisors</h3>
<p>Oracle Database provides <a id="sthref40"></a>SQL advisors and <a id="sthref41"></a>memory advisors that you can use to help improve database performance.</p>
<p>SQL advisors include SQL Tuning Advisor and SQL Access Advisor, which are part of the <a id="sthref42"></a>Oracle Database Tuning Pack.</p>
<p><a id="sthref43"></a>SQL Tuning Advisor accepts one or more SQL statements as input and returns specific tuning recommendations. Each recommendation includes a rationale and expected benefit. Recommendations are based on object statistics, new index creation, SQL statement restructuring, and SQL profile creation.</p>
<p><a id="sthref44"></a>SQL Access Advisor enables you to optimize data access paths of SQL queries by recommending a set of materialized views and view logs, indexes, and partitions for a given SQL workload.</p>
<p>Memory advisors include Memory Advisor, SGA Advisor, Shared Pool Advisor, Buffer Cache Advisor, and PGA Advisor. Memory advisors provide graphical analyses of total memory target settings, SGA and PGA target settings, and SGA component size settings. Use these analyses to tune database performance and to plan for possible situations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADMQS103" href="../ADMQS/GUID-DF745D65-228F-405B-9CAB-AE6798DA971B.htm#ADMQS103"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about using advisors to optimize database performance, including a brief description of each performance advisor</p>
</li>
<li>
<p><a class="olink ADMQS1034" href="../ADMQS/GUID-9EC479AF-E92A-4868-9D0E-156D7F7B64AB.htm#ADMQS1034"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about optimizing memory usage with the memory advisors</p>
</li>
<li>
<p><a class="olink TDPPT005" href="../TDPPT/tdppt_intro.htm#TDPPT005"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information about tools for tuning the database</p>
</li>
<li>
<p><a class="olink TGSQL540" href="../TGSQL/tgsql_sqltune.htm#TGSQL540"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about SQL Tuning Advisor</p>
</li>
<li>
<p><a class="olink TGSQL591" href="../TGSQL/tgsql_sqlaccess.htm#TGSQL591"><span class="italic">Oracle Database SQL Tuning Guide</span></a> for more information about SQL Access Advisor</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACGEJFA"></a>
<div id="ADFNS162" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.4</span> Using Instrumentation</h2>
<p>To use <a id="sthref45"></a>instrumentation is to add debug code throughout your application. When enabled, this code generates trace files, which contain information that helps you identify and locate problems. Trace files are especially helpful when debugging multitier applications; they help you identify the problematic tier.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACIFHGF">Section 2.2.2, &#34;SQL Trace Facility (SQL_TRACE)&#34;</a> for more information</div>
</div>
<!-- class="sect1" -->
<a id="CACGDGCH"></a>
<div id="ADFNS166" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.5</span> Testing for Performance</h2>
<p><a id="sthref46"></a>When testing an application for performance, follow these guidelines:</p>
<ul>
<li>
<p>Use Automatic Database Diagnostic Monitor (ADDM) and SQL Tuning Advisor for design validation.</p>
<p>ADDM determines where database performance problems might exist and recommends corrections. For example, if ADDM finds high-load SQL statements, then you can use SQL Tuning Advisor to analyze those statements and provide tuning recommendations.</p>
<p>For more information about ADDM and SQL Tuning Advisor, see <a href="#CACGCJDC">Section 2.3.1</a>and <a href="#CACFBHGI">Section 2.3.4</a>, respectively.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDPPT161" href="../TDPPT/tdppt_sqltune.htm#TDPPT161"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information about tuning SQL statements using the SQL Tuning Advisor</div>
</li>
<li>
<p>Test with realistic data volumes and distributions.</p>
<p>The test database must contain data representative of the production system. Tables must be fully populated and represent the data volume and cardinality between tables found in the production system. All production indexes must be built and the schema statistics must be populated correctly.</p>
</li>
<li>
<p>Test with the optimizer mode to be used in production.</p>
<p>Because Oracle Database research and development focuses on the query optimizer, Oracle re commands using the query optimizer in both the test and production environments.</p>
</li>
<li>
<p>Test a single user performance first.</p>
<p>Start testing with a single user on an idle or lightly-used database. If a single user cannot achieve acceptable performance under ideal conditions, then multiple users cannot achieve acceptable performance under real conditions.</p>
</li>
<li>
<p>Get an execution plan for each SQL statement.</p>
<p>Verify that the optimizer uses optimal execution plans, and that you understand the relative cost of each SQL statement in terms of CPU time and physical I/O. Identify heavily used transactions that would benefit most from tuning.</p>
</li>
<li>
<p>Test with multiple users.</p>
<p>This testing is difficult to perform accurately because user workload and profiles might not be fully quantified. However, you must test DML transactions in a multiuser environment to ensure that there are no locking conflicts or serialization problems.</p>
</li>
<li>
<p>Test with a hardware configuration as close as possible to the production system.</p>
<p>Testing on a realistic system is particularly important for network latencies, I/O subsystem bandwidth, and processor type and speed. Testing on an unrealistic system can fail to reveal potential performance problems.</p>
</li>
<li>
<p>Measure steady state performance.</p>
<p>Each benchmark run must have a ramp-up phase, where users connect to the database and start using the application. This phase lets frequently cached data be initialized into the cache and lets single-execution operations (such as parsing) be completed before reaching the steady state condition. Likewise, each benchmark run must end with a ramp-down period, where resources are freed from the system and users exit the application and disconnect from the database.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TGDBA112" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=TGDBA112"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for an overview about performance tuning</p>
</li>
<li>
<p><a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about workload testing, modeling, and implementation</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACFHACJ"></a>
<div id="ADFNS179" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.6</span> Using Bind Variables</h2>
<p>A <a id="sthref47"></a>bind variable placeholder in a SQL statement or PL/SQL block indicates where data must be supplied at runtime.</p>
<p>Suppose that you want your application to insert data into the table created with this statement:</p>
<pre dir="ltr">CREATE TABLE test (x VARCHAR2(30), y VARCHAR2(30));
</pre>
<p>Because the data is not known until runtime, you must use dynamic SQL.</p>
<p>The following statement inserts a row into table <code dir="ltr">test</code>, concatenating string literals for columns x and y:</p>
<pre dir="ltr">INSERT INTO test (x,y) VALUES ( &#39;&#39;&#39; || REPLACE (x, &#39;&#39;&#39;&#39;, &#39;&#39;&#39;&#39;&#39;&#39;) || &#39;&#39;&#39;,
                                &#39;&#39;&#39; || REPLACE (y, &#39;&#39;&#39;&#39;, &#39;&#39;&#39;&#39;&#39;&#39;) || &#39;&#39;&#39;);
</pre>
<p>The following statement inserts a row into table <code dir="ltr">test</code> using bind variables <code dir="ltr">:x</code> and <code dir="ltr">:y</code> for columns x and y:</p>
<pre dir="ltr">INSERT INTO test (x,y) VALUES (:x, :y);
</pre>
<p>The statement that uses bind variable placeholders is easier to code.</p>
<p>Now consider a dynamic bulk load operation that inserts 1,000 rows into table <code dir="ltr">test</code> using each of the preceding methods.</p>
<p>The method that concatenates string literals uses 1,000 <code dir="ltr">INSERT</code> statements, each of which must be hard-parsed, qualified, checked for security, optimized, and compiled. Because each statement is hard-parsed, the number of latches greatly increases. Latches are mutual-exclusion locking mechanisms&mdash;serialization devices, which inhibit concurrency.</p>
<p>The method that uses bind variable placeholders uses only one <code dir="ltr">INSERT</code> statement. The statement is soft-parsed, qualified, checked for security, optimized, compiled, and cached in a shared pool. The compiled statement from the shared pool is used for each of the 1000 inserts. This statement caching is a very important benefit of using bind variables.</p>
<p>An application that uses bind variable placeholders is more scalable, supports more users, requires fewer resources, and runs faster than an application that uses string concatenation&mdash;and it is less vulnerable to SQL injection attacks. If a SQL statement uses string concatenation, an end user can modify the statement and use the application to do something harmful.</p>
<p>You can use bind variable placeholders for input variables in <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">SELECT</code>, and <code dir="ltr">UPDATE</code> statements, and anywhere in a PL/SQL block that you can use an expression or literal. In PL/SQL, you can also use bind variable placeholders for output variables. Binding is used for both input and output variables in nonquery operations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPLS646" href="../LNPLS/dynamic.htm#LNPLS646"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about using bind variables to protect your application from SQL injection</p>
</li>
<li>
<p><a class="olink LNOCI16342" href="../LNOCI/oci04sql.htm#LNOCI16342"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for more information about using bind variable placeholders in OCI</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACCJGCB"></a>
<div id="ADFNS213" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.7</span> <a id="sthref48"></a>Using Client Result Cache</h2>
<p class="subhead2"><a id="ADFNS1336"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACIABIH">About Client Result Cache</a></p>
</li>
<li>
<p><a href="#CACBJDIB">Benefits of Client Result Cache</a></p>
</li>
<li>
<p><a href="#CACHGIGB">Guidelines for Using Client Result Cache</a></p>
</li>
<li>
<p><a href="#CACIDAGC">Client Result Cache Consistency</a></p>
</li>
<li>
<p><a href="#CACJBBED">Deployment-Time Settings for Client Result Cache</a></p>
</li>
<li>
<p><a href="#CACEJFBJ">Client Result Cache Statistics</a></p>
</li>
<li>
<p><a href="#CACHACEF">Validation of Client Result Cache</a></p>
</li>
<li>
<p><a href="#CACJDIAE">Client Result Cache and Server Result Cache</a></p>
</li>
<li>
<p><a href="#CACEGIEG">Client Result Cache Demo Files</a></p>
</li>
<li>
<p><a href="#CACIFGEA">Client Result Cache Compatibility with Previous Releases</a></p>
</li>
<li>
<p><a href="#CACJAFEG">Where to Find More Information About Client Result Cache</a></p>
</li>
</ul>
<a id="CACIABIH"></a>
<div id="ADFNS464" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.1</span> About Client Result Cache</h3>
<p>Applications that use Oracle Database drivers and adapters built on OCI libraries&mdash;including C, C++, Java (JDBC-OCI), PHP, Python, Ruby, and Perl&mdash;can use client result cache to improve response times of repetitive queries.</p>
<p>Client result cache enables client-side caching of SQL query (<code dir="ltr">SELECT</code> statement) result sets in client memory. Because retrieving results from a client process is faster than calling the database and rerunning the query, frequently run queries perform significantly faster when their results are cached. Client result cache also reduces the server CPU time that would have been used to process the query, thereby improving server scalability.</p>
<p>OCI statements from multiple sessions can match the same cached result set in the OCI process memory if they have similar schemas, SQL text, bind values, and session settings. If not, the query execution is directed to the server.</p>
<p>Client result cache is transparent to applications, and its cache of result set data is kept consistent with session or database changes that affect its result set data.</p>
<p>Applications that use client result cache benefit from faster performance for queries that have cache hits. These applications use the cached result sets on clients or middle tiers.</p>
<p>Client result cache works with OCI features such as the OCI session pool, the OCI connection pool, DRCP, and OCI transparent application failover (TAF).</p>
<p>When using client result cache, you must also enable OCI statement caching or cache statements at the application level.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNOCI16655" href="../LNOCI/oci09adv.htm#LNOCI16655"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for information about statement caching</p>
</li>
<li>
<p><a class="olink JJDBC28649" href="../JJDBC/stmtcach.htm#JJDBC28649"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for information about JDBC statement caching</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACBJDIB"></a>
<div id="ADFNS465" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.2</span> Benefits of Client Result Cache</h3>
<p>The benefits of client result cache are:</p>
<ul>
<li>
<p>Because client result cache is on the client, a cache hit causes fetch (<code dir="ltr">OCIStmtFetch2()</code>) and execute (<code dir="ltr">OCIStmtExecute()</code>) calls to be processed locally, eliminating a server round trip. Eliminating server round trips reduces the use of server resources (such as server CPU and server I/O), significantly improving performance.</p>
</li>
<li>
<p>Client result cache is transparent and consistent.</p>
</li>
<li>
<p>Client result cache is available to every process, so multiple client sessions can simultaneously use matching cached result sets.</p>
</li>
<li>
<p>Client result cache minimizes the need for each OCI application to have its own custom result cache.</p>
</li>
<li>
<p>Client result cache transparently manages:</p>
<ul>
<li>
<p>Concurrent access by multiple threads, multiple statements, and multiple sessions</p>
</li>
<li>
<p>Invalidation of cached result sets that might have been affected by database changes</p>
</li>
<li>
<p>Refreshing of cached result sets</p>
</li>
<li>
<p>Cache memory management</p>
</li>
</ul>
</li>
<li>
<p>Client result cache is automatically available to applications and drivers that use OCI libraries, including JDBC OCI, ODP.Net, OCCI, Pro*C/C++, Pro*COBOL, and ODBC.</p>
</li>
<li>
<p>Client result cache uses OCI client memory, which might be less expensive than server memory.</p>
</li>
<li>
<p>A local cache on the client has better locality of reference for queries executed by that client.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI17163" href="../LNOCI/oci17msc001.htm#LNOCI17163"><code dir="ltr">OCIStmtExecute()</code></a> and <a class="olink LNOCI17165" href="../LNOCI/oci17msc001.htm#LNOCI17165"><code dir="ltr">OCIStmtFetch2()</code></a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></div>
</div>
<!-- class="sect2" -->
<a id="CACHGIGB"></a>
<div id="ADFNS466" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.3</span> Guidelines for Using Client Result Cache</h3>
<p>You can enable or disable client result cache at three levels, which are, in order of descending precedence:</p>
<ol>
<li>
<p>Query</p>
<p>For a specific query, you can enable or disable client result cache with a SQL hint (for details, see <a href="#CACCEEIJ">Section 2.7.3.1</a>). To add or change a SQL hint, you must change the application.</p>
</li>
<li>
<p>Table</p>
<p>For all queries on a specific table, you can enable or disable client result cache with a table annotation, without changing the application (for details, see <a href="#CACHFBIA">Section 2.7.3.2</a>).</p>
</li>
<li>
<p>Session</p>
<p>For all queries in your database session, you can enable or disable client result cache with a session parameter, without changing the application (for details, see <a href="#CACDHIIF">Section 2.7.3.3</a>).</p>
</li>
</ol>
<p>Higher-level settings take precedence over lower-level ones. For examples, see <a href="#CACDCGDI">Section 2.7.3.6</a>.</p>
<p>Oracle recommends enabling client result cache only for queries on read-only and seldom-read tables (tables that are rarely updated). That is, enable client result cache:</p>
<ul>
<li>
<p>At query level only for queries of read-only and seldom-read tables</p>
</li>
<li>
<p>At table level only for read-only and seldom-read tables</p>
</li>
<li>
<p>At session level only when running applications that query only read-only or seldom-read tables</p>
</li>
</ul>
<p>Enabling client result cache for queries that have large result sets or many sets of bind values can use a large amount of client result cache memory. Each set of bind values (for the same SQL text) creates a different cached result set.</p>
<p>When client result cache is enabled for a query, its result sets can be cached on the client, server, or both. Client result cache can be enabled even if the server result cache (which is enabled by default) is disabled.</p>
<p>For OCI, the first <code dir="ltr">OCIStmtExecute()</code> call of every OCI statement handle call always goes to the server even if there might be a valid cached result set. An <code dir="ltr">OCIStmtExecute()</code> call must be made for each statement handle to be able to match a cached result set. Oracle recommends that applications either have their own statement caching for OCI statement handles or use OCI statement caching so that <code dir="ltr">OCIStmtPrepare2()</code> can return an OCI statement handle that has been executed once. Multiple OCI statement handles, from the same or different sessions, can simultaneously fetch data from the same cached result set.</p>
<p>For OCI, for a result set to be cached, the <code dir="ltr">OCIStmtExecute()</code> or <code dir="ltr">OCIStmtFetch2()</code> calls that transparently create this cached result set must fetch rows until ORA-01403 (No Data Found) is returned. Subsequent <code dir="ltr">OCIStmtExecute()</code> or <code dir="ltr">OCIStmtFetch2()</code> calls that match a locally cached result set need not fetch to completion.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI17163" href="../LNOCI/oci17msc001.htm#LNOCI17163"><code dir="ltr">OCIStmtExecute()</code></a>, <a class="olink LNOCI17168" href="../LNOCI/oci17msc001.htm#LNOCI17168"><code dir="ltr">OCIStmtPrepare2()</code></a>, and <a class="olink LNOCI17165" href="../LNOCI/oci17msc001.htm#LNOCI17165"><code dir="ltr">OCIStmtFetch2()</code></a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></div>
<p class="subhead2"><a id="ADFNS896"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACCEEIJ">SQL Hints</a></p>
</li>
<li>
<p><a href="#CACHFBIA">Table Annotation</a></p>
</li>
<li>
<p><a href="#CACDHIIF">Session Parameter</a></p>
</li>
<li>
<p><a href="#CACEDIJJ">Effective Table Result Cache Mode</a></p>
</li>
<li>
<p><a href="#CACBCGCJ">Displaying Effective Table Result Cache Mode</a></p>
</li>
<li>
<p><a href="#CACDCGDI">Result Cache Mode Use Cases</a></p>
</li>
<li>
<p><a href="#CACHADBD">Queries Never Result Cached in Client Result Cache</a></p>
</li>
</ul>
<a id="CACCEEIJ"></a>
<div id="ADFNS467" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.1</span> SQL Hints</h4>
<p>The SQL hint <a id="sthref49"></a><code dir="ltr">RESULT_CACHE</code> or <a id="sthref50"></a><code dir="ltr">NO_RESULT_CACHE</code> applies to a single query, for which it enables or disables client result cache. These hints take precedence over both table annotations and the <code dir="ltr">RESULT_CACHE_MODE</code> server initialization parameter.</p>
<p>For OCI, the SQL hint <code dir="ltr">/*+ result_cache */</code> or <code dir="ltr">/*+ no_result_cache */</code> must be set in SQL text passed to <code dir="ltr">OCIStmtPrepare()</code> and <code dir="ltr">OCIStmtPrepare2()</code> calls.</p>
<p>For JDBC OCI, the SQL hint <code dir="ltr">/*+ result_cache */</code> or <code dir="ltr">/*+ no_result_cache */</code> is included in the query (<code dir="ltr">SELECT</code> statement) as part of the query string.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF00219" href="../SQLRF/sql_elements006.htm#SQLRF00219"><span class="italic">Oracle Database SQL Language Reference</span></a> for general information about SQL hints</p>
</li>
<li>
<p><a class="olink LNOCI17167" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=LNOCI17167"><code dir="ltr">OCIStmtPrepare()</code></a>, <a class="olink LNOCI17168" href="../LNOCI/oci17msc001.htm#LNOCI17168"><code dir="ltr">OCIStmtPrepare2()</code></a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></p>
</li>
<li>
<p><a class="olink JJDBC28224" href="../JJDBC/instclnt.htm#JJDBC28224"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for information about SQL hints in JDBC</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CACHFBIA"></a>
<div id="ADFNS1337" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.2</span> Table Annotation</h4>
<p>A <a id="sthref51"></a><span class="bold">table annotation</span> enables or disables client result cache for all queries on a specific table. A table annotation takes precedence over the <code dir="ltr">RESULT_CACHE_MODE</code> server initialization parameter, but the SQL hints <code dir="ltr">/*+&nbsp;RESULT_CACHE&nbsp;*/</code> and <code dir="ltr">/*+&nbsp;NO_RESULT_CACHE&nbsp;*/</code> take precedence over a table annotation.</p>
<p>You annotate a table with either the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> or <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement, using the <code dir="ltr">RESULT_CACHE</code> clause. To enable client result cache, specify <code dir="ltr">RESULT_CACHE</code> <code dir="ltr">(MODE</code> <code dir="ltr">FORCE)</code>; to disable it, use <code dir="ltr">RESULT_CACHE</code> <code dir="ltr">(MODE</code> <code dir="ltr">DEFAULT)</code>.</p>
<p><a href="#CACHHFCG">Table 2-1</a> summarizes the <a id="sthref52"></a>table annotation result cache modes.</p>
<div id="ADFNS1338" class="tblformal">
<p class="titleintable"><a id="sthref53"></a><a id="CACHHFCG"></a>Table 2-1 Table Annotation Result Cache Modes</p>
<table class="cellalignment293" title="Table Annotation Result Cache Modes" summary="Table Result Cache Annotation Modes" dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t23">Mode</th>
<th class="cellalignment294" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t23" headers="r1c1-t23">
<p><code dir="ltr">DEFAULT</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t23 r1c2-t23">
<p>The default value. Result caching is not determined at the table level. You can use this value to clear any table annotations.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t23" headers="r1c1-t23">
<p><code dir="ltr">FORCE</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t23 r1c2-t23">
<p>If all table names in the query have this setting, then the query result is always considered for caching unless the <code dir="ltr">NO_RESULT_CACHE</code> hint is specified for the query. If one or more tables named in the query are set to <code dir="ltr">DEFAULT</code>, then the effective table annotation for that query is <code dir="ltr">DEFAULT</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF30051" href="../SQLRF/statements_7002.htm#SQLRF30051"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about <code dir="ltr">RESULT_CACHE</code> clause of <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> and <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code></p>
</li>
<li>
<p><a class="olink JJDBC28223" href="../JJDBC/instclnt.htm#JJDBC28223"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for information about table annotations in JDBC</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CACDHIIF"></a>
<div id="ADFNS1339" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.3</span> Session Parameter</h4>
<p>The <a id="sthref54"></a>session parameter <code dir="ltr">RESULT_CACHE_MODE</code> enables or disables client result cache for all queries for your database session. <code dir="ltr">RESULT_CACHE_MODE</code> can be overruled for specific tables by table annotations and for specific queries by SQL hints.</p>
<p>You can set <code dir="ltr">RESULT_CACHE_MODE</code> in either the server parameter file (<code dir="ltr">init.ora</code>) or the <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> or <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement. To enable client result cache, set <code dir="ltr">RESULT_CACHE_MODE</code> to <code dir="ltr">FORCE</code>; to disable it, set <code dir="ltr">RESULT_CACHE_MODE</code> to <code dir="ltr">MANUAL</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN10270" href="../REFRN/GUID-DEC2BDE4-8CF4-4378-A04C-6EE50A0FA250.htm#REFRN10270"><span class="italic">Oracle Database Reference</span></a> for more information about <code dir="ltr">RESULT_CACHE_MODE</code></div>
</div>
<!-- class="sect3" -->
<a id="CACEDIJJ"></a>
<div id="ADFNS472" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.4</span> Effective Table Result Cache Mode</h4>
<p>The <a id="sthref55"></a>effective result cache mode for a table depends on both the table annotation result cache mode and the <code dir="ltr">RESULT_CACHE_MODE</code> session parameter setting, as <a href="#CACDAAHC">Table 2-2</a> shows.</p>
<div id="ADFNS473" class="tblformal">
<p class="titleintable"><a id="sthref56"></a><a id="CACDAAHC"></a>Table 2-2 Effective Result Cache Table Mode</p>
<table class="cellalignment293" title="Effective Result Cache Table Mode" summary="Effective Result Cache Table Mode" dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t26">Table Annotation Result&nbsp;Cache Mode</th>
<th class="cellalignment294" id="r1c2-t26">RESULT_CACHE_MODE = MANUAL</th>
<th class="cellalignment294" id="r1c3-t26">RESULT_CACHE_MODE = FORCE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t26" headers="r1c1-t26">
<p><code dir="ltr">FORCE</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t26 r1c2-t26">
<p><code dir="ltr">FORCE</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t26 r1c3-t26">
<p><code dir="ltr">FORCE</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t26" headers="r1c1-t26">
<p><code dir="ltr">DEFAULT</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t26 r1c2-t26">
<p><code dir="ltr">MANUAL</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t26 r1c3-t26">
<p><code dir="ltr">FORCE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>When the effective mode is <code dir="ltr">FORCE</code>, every query is considered for result caching unless the query has the <code dir="ltr">NO_RESULT_CACHE</code> hint, but actual result caching depends on internal restrictions for client and server caches, query potential for reuse, and space available in the client result cache.</p>
<p>The effective table result cache mode <code dir="ltr">FORCE</code> is similar to the SQL hint <code dir="ltr">RESULT_CACHE</code> in that both are only requests.</p>
</div>
<!-- class="sect3" -->
<a id="CACBCGCJ"></a>
<div id="ADFNS470" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.5</span> Displaying Effective Table Result Cache Mode</h4>
<p><a id="sthref57"></a>To display the result cache mode for one or more tables, see the <code dir="ltr">RESULT_CACHE</code> column of a <code dir="ltr">*_TABLES</code> static data dictionary view. For example:</p>
<ul>
<li>
<p>This query displays the result cache mode for the table <code dir="ltr">T</code>:</p>
<pre dir="ltr">SELECT result_cache FROM all_tables WHERE table_name = T
</pre></li>
<li>
<p>This query displays the result cache mode for all relational tables that you own:</p>
<pre dir="ltr">SELECT table_name, result_cache FROM user_tables
</pre></li>
</ul>
<p>If the result cache mode is <code dir="ltr">DEFAULT</code>, then the table is not annotated.</p>
<p>If the result cache mode is <code dir="ltr">FORCE</code>, then the table was annotated with the <code dir="ltr">RESULT_CACHE</code> <code dir="ltr">(MODE</code> <code dir="ltr">FORCE)</code> clause of the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> or <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> statement.</p>
<p>If the result cache mode is <code dir="ltr">MANUAL</code>, then the session parameter <code dir="ltr">RESULT_CACHE_MODE</code> was set to <code dir="ltr">MANUAL</code> in either the server parameter file (<code dir="ltr">init.ora</code>) or an <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> or <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN20286" href="../REFRN/GUID-6823CD28-0681-468E-950B-966C6F71325D.htm#REFRN20286"><span class="italic">Oracle Database Reference</span></a> for more information about <code dir="ltr">*_TABLES</code> static data dictionary views</div>
</div>
<!-- class="sect3" -->
<a id="CACDCGDI"></a>
<div id="ADFNS474" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.6</span> Result Cache Mode Use Cases</h4>
<p>The following examples show when SQL hints take precedence over table annotations and the <code dir="ltr">RESULT_CACHE_MODE</code> session parameter.</p>
<ul>
<li>
<p>If the <code dir="ltr">emp</code> table is annotated with <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">emp</code> <code dir="ltr">RESULT_CACHE</code> (<code dir="ltr">MODE</code> <code dir="ltr">FORCE</code>) and the session parameter has its default value, <code dir="ltr">MANUAL</code>, then queries on <code dir="ltr">emp</code> are considered for result caching.</p>
<p>However, results of the query <code dir="ltr">SELECT</code> <code dir="ltr">/*+ no_result_cache */</code> <code dir="ltr">empno</code> <code dir="ltr">FROM</code> <code dir="ltr">emp</code> are not cached, because the SQL hint takes precedence over the table annotation and session parameter.</p>
</li>
<li>
<p>If the <code dir="ltr">emp</code> table is not annotated, or is annotated with <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> <code dir="ltr">emp</code> <code dir="ltr">RESULT_CACHE</code> (<code dir="ltr">MODE</code> <code dir="ltr">DEFAULT</code>), and the session parameter has its default value, <code dir="ltr">MANUAL</code>, then queries on <code dir="ltr">emp</code> are not result cached.</p>
<p>However, results of the query <code dir="ltr">SELECT</code> <code dir="ltr">/*+ result_cache */</code> <code dir="ltr">*</code> <code dir="ltr">FROM</code> <code dir="ltr">emp</code> are considered for caching, because the SQL hint takes precedence over the table annotation and session parameter.</p>
</li>
<li>
<p>If the session parameter <code dir="ltr">RESULT_CACHE_MODE</code> is set to <code dir="ltr">FORCE</code>, and no table annotations or SQL hints override it, then all queries on all tables are considered for query caching.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CACHADBD"></a>
<div id="ADFNS475" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.3.7</span> Queries Never Result Cached in Client Result Cache</h4>
<p>Results of the following queries are never cached in client result cache (even if the queries include the <code dir="ltr">RESULT_CACHE</code> hint):</p>
<ul>
<li>
<p>Queries that contain any of the following:</p>
<ul>
<li>
<p>Remote object</p>
</li>
<li>
<p>Complex type in the select list</p>
</li>
<li>
<p>PL/SQL function</p>
</li>
</ul>
</li>
<li>
<p>Snapshot-based queries</p>
</li>
<li>
<p>Flashback queries</p>
</li>
<li>
<p>Queries executed in serializable, read-only transactions</p>
</li>
<li>
<p>Queries of tables on which virtual private database (VPD) policies are enabled</p>
</li>
</ul>
<p>Such queries might be cached on the database if the server result cache feature is enabled&mdash;for more information, see <a class="olink CNCPT1919" href="../CNCPT/memory.htm#CNCPT1919"><span class="italic">Oracle Database Concepts</span></a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACIDAGC"></a>
<div id="ADFNS476" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.4</span> Client Result Cache Consistency</h3>
<p>Client result cache transparently keeps its result sets consistent with any database or session state changes that affect them.</p>
<p>When a transaction modifies the data or metadata of any database object used to construct a cached result set, invalidation of that cached result set is sent to the client on its next round trip to the server. If the application does no database calls for a period of time, then the client result cache lag setting forces the next <code dir="ltr">OCIStmtExecute()</code> call to make a database call to check for such invalidations.</p>
<p>Cached result sets relevant to database invalidations are immediately invalidated. Any OCI statement handles that are fetching from cached result sets when their invalidations are received can continue fetching from them, but no subsequent <code dir="ltr">OCIStmtExecute()</code> calls can match them.</p>
<p>The next <code dir="ltr">OCIStmtExecute()</code> call by the process might cache the new result set if the client result cash has space available. Client result cache periodically reclaims unused memory.</p>
<p>If a session has a transaction open, OCI ensures that its queries that reference database objects changed in this transaction go to the server instead of client result cache.</p>
<p>This consistency mechanism ensures that client result cache is always close to committed database changes. If the application has relatively frequent calls involving database round trips due to queries that cannot be cached (DMLs, <code dir="ltr">OCILob</code> calls, and so on), then these calls transparently keep client result cache consistent with database changes.</p>
<p>Sometimes, when a table is modified, a trigger causes another table to be modified. Client result cache is sensitive to such changes.</p>
<p>When the session state is altered&mdash;for example, when NLS session parameters are modified&mdash;query results can change. Client result cache is sensitive to such changes and for subsequent query executions, returns the correct result set. However, client result cache keeps the current cached result sets (and does not invalidate them) so that other sessions in the process can match them. If other processes do not match them, these result sets are &#34;Ruled&#34; after a while. Result sets that correspond to the new session state are cached.</p>
<p>For an application, keeping track of database and session state changes that affect query result sets can be cumbersome and error-prone, but client result cache transparently keeps its result sets consistent with such changes.</p>
<p>Client result cache does not require thread support in the client.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI17163" href="../LNOCI/oci17msc001.htm#LNOCI17163"><code dir="ltr">OCIStmtExecute()</code></a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></div>
</div>
<!-- class="sect2" -->
<a id="CACJBBED"></a>
<div id="ADFNS477" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.5</span> Deployment-Time Settings for Client Result Cache</h3>
<p>When you deploy your application, you can set the following for client result cache (without changing the application):</p>
<ul>
<li>
<p>Server initialization parameters (see section <a href="#CACBIHGG">Section 2.7.5.1</a>)</p>
</li>
<li>
<p>Client configuration parameters (see section <a href="#CACEEJCC">Section 2.7.5.2</a>)</p>
</li>
<li>
<p>Table annotations (see section <a href="#CACHFBIA">Section 2.7.3.2</a>)</p>
</li>
<li>
<p><code dir="ltr">RESULT_CACHE_MODE</code> session parameter (see section <a href="#CACDHIIF">Section 2.7.3.3</a>)</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACIAIJE">Section 2.10, &#34;Client-Side Deployment Parameters&#34;</a></div>
<a id="CACBIHGG"></a>
<div id="ADFNS948" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.5.1</span> Server Initialization Parameters</h4>
<p>The server initialization parameters to set for client result cache when you deploy your application are:</p>
<ul>
<li>
<p><a href="#CACIJIID">COMPATIBLE</a></p>
</li>
<li>
<p><a href="#CACDFHBA">CLIENT_RESULT_CACHE_SIZE</a></p>
</li>
<li>
<p><a href="#CACDEAHB">CLIENT_RESULT_CACHE_LAG</a></p>
</li>
</ul>
<a id="CACIJIID"></a>
<div id="ADFNS1445" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4"><span class="secnum">2.7.5.1.1</span> COMPATIBLE</h5>
<p><a id="sthref58"></a>Specifies the release with which Oracle Database must maintain compatibility. To enable client result cache, <code dir="ltr">COMPATIBLE</code> must be at least 11.0.0.0. To enable client result cache for views, <code dir="ltr">COMPATIBLE</code> must be at least 11.2.0.0.</p>
</div>
<!-- class="sect4" -->
<a id="CACDFHBA"></a>
<div id="ADFNS1001" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4"><span class="secnum">2.7.5.1.2</span> CLIENT_RESULT_CACHE_SIZE</h5>
<p><a id="sthref59"></a>Specifies the maximum size of the client result set cache for each OCI client process. The default value, 0, means that client result cache is disabled. To enable client result cache, set <code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code> to at least 32768 bytes (32 kilobytes (KB)).</p>
<p>If client result cache is enabled on the server by <code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code>, then its value can be overridden by the <code dir="ltr">sqlnet.ora</code> configuration parameter <code dir="ltr">OCI_RESULT_CACHE_MAX_SIZE</code>. If client result cache is disabled on the server, then <code dir="ltr">OCI_RESULT_CACHE_MAX_SIZE</code> is ignored and client result cache cannot be enabled on the client.</p>
<p>Oracle recommends either enabling client result cache for all Oracle Real Application Clusters (<a id="sthref60"></a>Oracle RAC) nodes or disabling client result cache for all Oracle RAC nodes. Otherwise, within a client process, some sessions might have caching enabled and other sessions might have caching disabled (thereby getting the latest results from the server). This combination might present an inconsistent view of the database to the application.</p>
<p><code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code> is a static parameter. Therefore, if you use an <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement to change the value of <code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code>, you must include the <code dir="ltr">SCOPE</code> <code dir="ltr">=</code> <code dir="ltr">SPFILE</code> clause and restart the database before the change will take effect.</p>
<p>The maximum value for <code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code> is the least of these values:</p>
<ul>
<li>
<p>Available client memory</p>
</li>
<li>
<p>((Possible number of result sets to be cached) * (average size of a row in a result set) * (average number of rows in a result set))</p>
</li>
<li>
<p>2 gigabytes (GB)</p>
<p>If you specify a value greater than 2 GB, then the value is 2 GB.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not set the <code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code> parameter during database creation, because that can cause errors.</div>
</div>
<!-- class="sect4" -->
<a id="CACDEAHB"></a>
<div id="ADFNS1011" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4"><span class="secnum">2.7.5.1.3</span> CLIENT_RESULT_CACHE_LAG</h5>
<p><a id="sthref61"></a>Specifies the maximum time in milliseconds that client result cache can lag behind changes in the database that affect its result sets. The default is 3000 milliseconds.</p>
<p><code dir="ltr">CLIENT_RESULT_CACHE_LAG</code> is a static parameter. Therefore, if you use an <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement to change the value of <code dir="ltr">CLIENT_RESULT_CACHE_LAG</code>, you must include the <code dir="ltr">SCOPE</code> <code dir="ltr">=</code> <code dir="ltr">SPFILE</code> clause and restart the database before the change will take effect.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CACEEJCC"></a>
<div id="ADFNS478" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.5.2</span> Client Configuration Parameters</h4>
<p><a id="sthref62"></a>Client configuration parameters are optional, but if set, they override the equivalent parameters in the server initialization file <code dir="ltr">init.ora</code>.</p>
<p>Client configuration parameters can be set in the <code dir="ltr">oraaccess.xml</code> file (see <a class="olink LNOCI73062" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=LNOCI73062"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>), the <code dir="ltr">sqlnet.ora</code> file, or both. When equivalent parameters are set both files, the <code dir="ltr">oraaccess.xml</code> setting takes precedence over the corresponding <code dir="ltr">sqlnet.ora</code> setting. When a parameter is not set in <code dir="ltr">oraaccess.xml</code>, the process searches for its setting in <code dir="ltr">sqlnet.ora</code>.</p>
<p>When a client configuration parameter can be set in both <code dir="ltr">oraaccess.xml</code> and <code dir="ltr">sqlnet.ora</code>, Oracle recommends setting the parameter in <code dir="ltr">oraaccess.xml</code>. However, for a network configuration, <code dir="ltr">sqlnet.ora</code> is the primary file, because <code dir="ltr">oraaccess.xml</code> does not support network level settings.</p>
<p><a href="#CACJADHD">Table 2-3</a> describes the equivalent <code dir="ltr">oraaccess.xml</code> and <code dir="ltr">sqlnet.ora</code> client configuration parameters.</p>
<div id="ADFNS909" class="tblformal">
<p class="titleintable"><a id="sthref63"></a><a id="CACJADHD"></a>Table 2-3 Client Configuration Parameters (Optional)</p>
<table class="cellalignment293" title="Client Configuration Parameters (Optional)" summary="This table of optional client configuration parameters lists the oraaccess.xml parameters in column 1, lists the equivalent sqlnet.ora parameters in column 2, and describes the parameters in column 3." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t31">oraacess.xml Parameter</th>
<th class="cellalignment294" id="r1c2-t31">sqlnet.ora Parameter</th>
<th class="cellalignment294" id="r1c3-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t31" headers="r1c1-t31">
<p><code dir="ltr">max_size</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t31 r1c2-t31">
<p><code dir="ltr">OCI_RESULT_CACHE_MAX_SIZE</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t31 r1c3-t31">
<p>Maximum size in bytes for the client result cache for each process.</p>
<p>Specifying a size less than 32768 in <code dir="ltr">sqlnet.ora</code> disables client result cache for client processes the read <code dir="ltr">sqlnet.ora</code>.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t31" headers="r1c1-t31">
<p><code dir="ltr">max_rset_size</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t31 r1c2-t31">
<p><code dir="ltr">OCI_RESULT_CACHE_MAX_RSET_SIZE</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t31 r1c3-t31">
<p>Maximum size of any result set in bytes in the client result cache for each process.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t31" headers="r1c1-t31">
<p><code dir="ltr">max_rset_rows</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t31 r1c2-t31">
<p><code dir="ltr">OCI_RESULT_CACHE_MAX_RSET_ROWS</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t31 r1c3-t31">
<p>Maximum size of any result set in rows in the client result cache for each process.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>The result cache lag cannot be set on the client.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACEJFBJ"></a>
<div id="ADFNS479" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.6</span> Client Result Cache Statistics</h3>
<p>On round trips to the server from the OCI client, OCI periodically sends client result cache statistics to the server. These statistics, shown in the <code dir="ltr">CLIENT_RESULT_CACHE_STATS$</code> view, include number of result sets successfully cached, number of cache hits, and number of cached result sets invalidated. The number of cache misses for queries is at least equal to the number of Create Counts in client result cache statistics. More precisely, the cache miss count equals the number of server executions in server <a id="sthref64"></a>Automatic Workload Repository (AWR) reports.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN29085" href="../REFRN/GUID-DCD6DA28-2AD1-46F8-A66B-539A2278AEA7.htm#REFRN29085"><span class="italic">Oracle Database Reference</span></a> for information about the <code dir="ltr">CLIENT_RESULT_CACHE_STAT$</code> view</p>
</li>
<li>
<p><a class="olink TGDBA661" href="../TGDBA/tune_result_cache.htm#TGDBA661"><span class="italic">Oracle Database Performance Tuning Guide</span></a> to find the client process IDs and session IDs for the sessions doing client result caching</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACHACEF"></a>
<div id="ADFNS480" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.7</span> Validation of Client Result Cache</h3>
<p>Some ways to validate client result cache are:</p>
<ul>
<li>
<p><a href="#CACHFFGJ">Measure Execution Times</a></p>
</li>
<li>
<p><a href="#CACBFIDG">Query V$MYSTAT</a></p>
</li>
<li>
<p><a href="#CACEECCJ">Query V$SQLAREA</a></p>
</li>
</ul>
<a id="CACHFFGJ"></a>
<div id="ADFNS481" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.7.1</span> Measure Execution Times</h4>
<p>First, measure the execution time of the queries without <code dir="ltr">RESULT_CACHE</code> hints. Then add <code dir="ltr">RESULT_CACHE</code> hints to the queries and measure the execution time again. The difference in execution times is your performance gain.</p>
</div>
<!-- class="sect3" -->
<a id="CACBFIDG"></a>
<div id="ADFNS482" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.7.2</span> Query V$MYSTAT</h4>
<div class="infobox-note">
<p class="notep1">Note:</p>
To query the <code dir="ltr">V$MYSTAT</code> view, you must have the <code dir="ltr">SELECT</code> privilege on it.</div>
<ol>
<li id="CACGCEAG">
<p>Run this query 5 times:</p>
<pre dir="ltr">SELECT count(*) FROM <span class="italic">table_name</span>
</pre></li>
<li id="CACBFACG">
<p>Query <code dir="ltr">V$MYSTAT</code>:</p>
<pre dir="ltr">SELECT * FROM V$MYSTAT
</pre></li>
<li id="CACCEHFI">
<p>Run this query 5 times:</p>
<pre dir="ltr">SELECT <span class="bold">/*+ result_cache */</span> count(*) FROM <span class="italic">table_name</span>
</pre>
<p>Because the query results are cached, this step requires fewer round trips between client and server than step&nbsp;<a href="#CACGCEAG">1</a> did.</p>
</li>
<li>
<p>Query <code dir="ltr">V$MYSTAT</code>:</p>
<pre dir="ltr">SELECT * FROM V$MYSTAT
</pre>
<p>Compare the values of the columns for this query to those for the query in step&nbsp;.<a href="#CACBFACG">2</a>.</p>
</li>
</ol>
<p>Instead of adding the hint to the query in step&nbsp;<a href="#CACCEHFI">3</a>, you can add the table annotation <code dir="ltr">RESULT_CACHE</code> <code dir="ltr">(MODE</code> <code dir="ltr">FORCE)</code> to <code dir="ltr"><span class="codeinlineitalic">table_name</span></code> at step&nbsp;<a href="#CACCEHFI">3</a> and then run the query in step&nbsp;<a href="#CACGCEAG">1</a> a few times.</p>
</div>
<!-- class="sect3" -->
<a id="CACEECCJ"></a>
<div id="ADFNS483" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.7.7.3</span> Query V$SQLAREA</h4>
<div class="infobox-note">
<p class="notep1">Note:</p>
To query the <code dir="ltr">V$SQLAREA</code> view, you must have the <code dir="ltr">SELECT</code> privilege on it.</div>
<ol>
<li id="CACHEBBG">
<p>Run this query 5 times:</p>
<pre dir="ltr">SELECT count(*) FROM <span class="italic">table_name</span>
</pre></li>
<li id="CACEAICC">
<p>Query <code dir="ltr">V$SQLAREA</code>:</p>
<pre dir="ltr">SELECT executions, fetches, parse_calls FROM V$SQLAREA
  WHERE sql_text LIKE &#39;% FROM <span class="italic">table_name</span>&#39;
</pre></li>
<li id="CACCEBBG">
<p>Run this query 5 times:</p>
<pre dir="ltr">SELECT <span class="bold">/*+ result_cache */</span> count(*) FROM <span class="italic">table_name</span>
</pre></li>
<li>
<p>Query <code dir="ltr">V$SQLAREA</code>:</p>
<pre dir="ltr">SELECT executions, fetches, parse_calls FROM V$SQLAREA
  WHERE sql_text LIKE &#39;% FROM <span class="italic">table_name</span>&#39;
</pre>
<p>Compare the values of the columns <code dir="ltr">executions</code>, <code dir="ltr">fetches</code>, and <code dir="ltr">parse_calls</code> for this query to those for the query in step&nbsp;.<a href="#CACEAICC">2</a>. The difference in execution times is your performance gain.</p>
</li>
</ol>
<p>Instead of adding the hint to the query in step&nbsp;<a href="#CACCEBBG">3</a>, you can add the table annotation <code dir="ltr">RESULT_CACHE</code> <code dir="ltr">(MODE</code> <code dir="ltr">FORCE)</code> to <code dir="ltr"><span class="codeinlineitalic">table_name</span></code> at step&nbsp;<a href="#CACCEBBG">3</a> and then run the query in step&nbsp;<a href="#CACHEBBG">1</a> a few times.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACJDIAE"></a>
<div id="ADFNS484" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.8</span> Client Result Cache and Server Result Cache</h3>
<p>Client result cache is different from server result cache. Client result cache caches results of top-level SQL queries in OCI client memory, whereas server result cache caches result sets and query fragments in server SGA memory.</p>
<p>You can enable client result cache independently of server result cache, though they share the result cache SQL hints, table annotations, and session parameter <code dir="ltr">RESULT_CACHE_MODE</code>. <a href="#CACCEHEB">Table 2-4</a> shows the result cache association for result cache parameters, the PL/SQL package <code dir="ltr">DBMS_RESULT_CACHE</code>, and result cache views. For more information about server result cache, see <a class="olink CNCPT1919" href="../CNCPT/memory.htm#CNCPT1919"><span class="italic">Oracle Database Concepts</span></a>.</p>
<div id="ADFNS485" class="tblformal">
<p class="titleintable"><a id="sthref65"></a><a id="CACCEHEB"></a>Table 2-4 Setting Client Result Cache and Server Result Cache</p>
<table class="cellalignment293" title="Setting Client Result Cache and Server Result Cache" summary="Ways to set client result cache" dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t35">Parameters, PL/SQL Package, and Database Views</th>
<th class="cellalignment294" id="r1c2-t35">Result Cache Association</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t35" headers="r1c1-t35">
<p><code dir="ltr">CLIENT_RESULT_CACHE_*</code> parameters:</p>
<ul>
<li>
<p><code dir="ltr">CLIENT_RESULT_CACHE_SIZE</code></p>
</li>
<li>
<p><code dir="ltr">CLIENT_RESULT_CACHE_LAG</code></p>
</li>
</ul>
</td>
<td class="cellalignment295" headers="r2c1-t35 r1c2-t35">
<p>client result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t35" headers="r1c1-t35">
<p>SQL hints:</p>
<ul>
<li>
<p><code dir="ltr">RESULT_CACHE</code></p>
</li>
<li>
<p><code dir="ltr">NO_RESULT_CACHE</code></p>
</li>
</ul>
</td>
<td class="cellalignment295" headers="r3c1-t35 r1c2-t35">
<p>client result cache, server result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t35" headers="r1c1-t35">
<p><code dir="ltr">sqlnet.ora OCI_RESULT_CACHE*</code> parameters:</p>
<ul>
<li>
<p><code dir="ltr">OCI_RESULT_CACHE_MAX_SIZE</code></p>
</li>
<li>
<p><code dir="ltr">OCI_RESULT_CACHE_MAX_RSET_SIZE</code></p>
</li>
<li>
<p><code dir="ltr">OCI_RESULT_CACHE_MAX_RSET_ROWS</code></p>
</li>
</ul>
</td>
<td class="cellalignment295" headers="r4c1-t35 r1c2-t35">
<p>client result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t35" headers="r1c1-t35">
<p><code dir="ltr">CLIENT_RESULT_CACHE_STATS$</code> view</p>
</td>
<td class="cellalignment295" headers="r5c1-t35 r1c2-t35">
<p>client result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r6c1-t35" headers="r1c1-t35">
<p><code dir="ltr">RESULT_CACHE_MODE</code> parameter</p>
</td>
<td class="cellalignment295" headers="r6c1-t35 r1c2-t35">
<p>client result cache, server result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r7c1-t35" headers="r1c1-t35">
<p>All other <code dir="ltr">RESULT_CACHE_*</code> parameters (for example, <code dir="ltr">RESULT_CACHE_MAX_SIZE</code>)</p>
</td>
<td class="cellalignment295" headers="r7c1-t35 r1c2-t35">
<p>server result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r8c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DBMS_RESULT_CACHE</code> package</p>
</td>
<td class="cellalignment295" headers="r8c1-t35 r1c2-t35">
<p>server result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r9c1-t35" headers="r1c1-t35">
<p><code dir="ltr">V$RESULT_CACHE_*</code> and <code dir="ltr">GV$RESULT_CACHE_*</code> views (for example, <code dir="ltr">V$RESULT_CACHE_STATISTICS</code> and <code dir="ltr">GV$RESULT_CACHE_MEMORY</code>)</p>
</td>
<td class="cellalignment295" headers="r9c1-t35 r1c2-t35">
<p>server result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r10c1-t35" headers="r1c1-t35">
<p><code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> annotation</p>
</td>
<td class="cellalignment295" headers="r10c1-t35 r1c2-t35">
<p>client result cache, server result cache</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r11c1-t35" headers="r1c1-t35">
<p><code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> annotation</p>
</td>
<td class="cellalignment295" headers="r11c1-t35 r1c2-t35">
<p>client result cache, server result cache</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CACEGIEG"></a>
<div id="ADFNS486" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.9</span> Client Result Cache Demo Files</h3>
<p>For OCI applications, demonstration files for client result cache are <code dir="ltr">cdemoqc.sql</code>, <code dir="ltr">cdemoqc.c</code>, and <code dir="ltr">cdemoqc2.c</code> (in the <code dir="ltr">demo</code> directory for your operating system).</p>
</div>
<!-- class="sect2" -->
<a id="CACIFGEA"></a>
<div id="ADFNS487" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.10</span> Client Result Cache Compatibility with Previous Releases</h3>
<p>To use client result cache, applications must be relinked with Oracle Database 11<span class="italic">g</span> Release 1 (11.1) or later client libraries and be connected to an Oracle Database 11<span class="italic">g</span> Release 1 (11.1) or later database server. Client result cache is available to all OCI applications, including JDBC Type II driver, OCCI, Pro*C/C++, and ODP.NET. OCI drivers automatically pass the SQL hint <code dir="ltr">RESULT_CACHE</code> to <code dir="ltr">OCIStmtPrepare()</code> and <code dir="ltr">OCIStmtPrepare2()</code> calls.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI17167" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=LNOCI17167"><code dir="ltr">OCIStmtPrepare()</code></a>, <a class="olink LNOCI17168" href="../LNOCI/oci17msc001.htm#LNOCI17168"><code dir="ltr">OCIStmtPrepare2()</code></a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></div>
</div>
<!-- class="sect2" -->
<a id="CACJAFEG"></a>
<div id="ADFNS1340" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.11</span> Where to Find More Information About Client Result Cache</h3>
<p>More information about client result cache is in the following documentation:</p>
<ul>
<li>
<p><a class="olink LNOCI092" href="../LNOCI/oci10new.htm#LNOCI092"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink LNCPP21896" href="../LNCPP/performance.htm#LNCPP21896"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink JJDBC28219" href="../JJDBC/instclnt.htm#JJDBC28219"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink TGDBA638" href="../TGDBA/tune_result_cache.htm#TGDBA638"><span class="italic">Oracle Database Performance Tuning Guide</span></a></p>
</li>
<li>
<p><a class="olink CNCPT1919" href="../CNCPT/memory.htm#CNCPT1919"><span class="italic">Oracle Database Concepts</span></a></p>
</li>
<li>
<p><span class="italic">Oracle Database SQL Language Reference</span> for information about <a class="olink SQLRF00219" href="../SQLRF/sql_elements006.htm#SQLRF00219">SQL hints</a> and <a class="olink SQLRF30051" href="../SQLRF/statements_7002.htm#SQLRF30051"><code dir="ltr">RESULT_CACHE</code></a> clause of <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>, and <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code></p>
</li>
<li>
<p><span class="italic">Oracle Database Reference</span> for information about <a class="olink REFRN10270" href="../REFRN/GUID-DEC2BDE4-8CF4-4378-A04C-6EE50A0FA250.htm#REFRN10270"><code dir="ltr">RESULT_CACHE_MODE</code></a> initialization parameter and <a class="olink REFRN29085" href="../REFRN/GUID-DCD6DA28-2AD1-46F8-A66B-539A2278AEA7.htm#REFRN29085"><code dir="ltr">CLIENT_RESULT_CACHE_STAT$</code> view</a></p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACGIGGH"></a>
<div id="ADFNS1051" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.8</span> Statement Caching</h2>
<p><a id="sthref66"></a>Statement caching is a feature that establishes and manages a cache of statements for each session. In the server, statement caching lets cursors be used without reparsing the statement, eliminating repetitive statement parsing. You can use statement caching with both connection pooling and session pooling, thereby improving performance and scalability. You can also use statement caching without session pooling in OCI and without connection pooling in OCCI, in the JDBC interface, and in the ODP.NET interface. You can also use dynamic SQL statement caching in Oracle precompiler applications that rely on dynamic SQL statements, such as Pro*C/C++ and ProCOBOL.</p>
<p>In the JDBC interface, you can enable and disable implicit and explicit statement caching independently of the other&mdash;you can use either, neither, or both. Implicit and explicit statement caching share a single cache for each connection. You can also disable implicit caching for a particular statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNOCI16655" href="../LNOCI/oci09adv.htm#LNOCI16655"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for more information and guidelines about using statement caching in OCI</p>
</li>
<li>
<p><a class="olink LNCPP0038" href="../LNCPP/relational.htm#LNCPP0038"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a> for more information about statement caching in OCCI</p>
</li>
<li>
<p><a class="olink JJDBC28650" href="../JJDBC/stmtcach.htm#JJDBC28650"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for more information about using statement caching</p>
</li>
<li>
<p><a class="olink ODPNT" href="../ODPNT/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer&#39;s Guide for Microsoft Windows</span></a> for more information about using statement caching in ODP.NET applications</p>
</li>
<li>
<p><a class="olink ZZPRE" href="../ZZPRE/toc.htm"><span class="italic">Oracle Database Programmer&#39;s Guide to the Oracle Precompilers</span></a>, <a class="olink LNPCC" href="../LNPCC/toc.htm"><span class="italic">Pro*C/C++ Programmer&#39;s Guide</span></a>, and <a class="olink LNPCB" href="../LNPCB/toc.htm"><span class="italic">Pro*COBOL Programmer&#39;s Guide</span></a> for more information about using dynamic SQL statement caching in precompiler applications that rely on dynamic SQL statements</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACFFJEG"></a>
<div id="ADFNS214" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.9</span> <a id="sthref67"></a><a id="sthref68"></a>OCI Client Statement Cache Auto-Tuning</h2>
<p>OCI client statement cache auto-tuning optimizes OCI client session features of middle-tier applications to improve performance without changing your OCI application.</p>
<p>Without auto-tuning, the OCI client statement cache size setting can become suboptimal&mdash;for example, when a changing workload causes a different working set of SQL statements. If the size is too low, it causes excess network activity and more parses at the server. If the size is too high, it causes excess memory use. It can be difficult for the client application to keep the cache size optimal.</p>
<p>Auto-tuning solves this potential performance problem by automatically and periodically reconfiguring the OCI statement cache size.</p>
<p>Auto-tuning is achieved by providing a deployment-time setting that provides an option to reconfigure OCI statement caching. These settings are provided as connect-string-based deployment settings in a client <code dir="ltr">oraaccess.xml</code> file that overrides programmatic settings to the user configuration of OCI features.</p>
<p>Middle-tier application developers and database administrators (DBAs) can expect reduced time and effort in diagnosing and fixing performance problems with each part of their system using the auto-tuning OCI client statement caching parameter setting.</p>
<p>For information about OCI auto-tuning parameters, implementation, and usage, see <a class="olink LNOCI73009" href="../LNOCI/oci10new.htm#LNOCI73009"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span>.</a></p>
</div>
<!-- class="sect1" -->
<a id="CACIAIJE"></a>
<div id="ADFNS489" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.10</span> Client-Side Deployment Parameters</h2>
<p>Beginning with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1), OCI deployment parameters are available in a new configuration file, <code dir="ltr">oraaccess.xml</code>, as described in <a class="olink LNOCI73052" href="../LNOCI/oci10new.htm#LNOCI73052"><span class="italic">Oracle Call Interface Programmer&#39;s Guide.</span></a></p>
</div>
<!-- class="sect1" -->
<a id="CACFIABH"></a>
<div id="ADFNS226" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.11</span> Using Query Change Notification</h2>
<p><a id="sthref69"></a>Continuous Query Notification (CQN) lets client applications register queries with the database and receive notifications of DML or DDL changes on the objects (object change notification (OCN)) or result set changes associated with the queries (query result change notification (QRCN)). The database publishes notifications when the DML or DDL transaction commits.</p>
<p>A <span class="bold">CQN registration</span> associates one or more queries with a notification type (OCN or QRCN) and a notification handler. To create a CQN registration, you can use:</p>
<ul>
<li>
<p>PL/SQL interface</p>
<p>When you use the PL/SQL interface, the notification handler is a server-side PL/SQL stored procedure. PL/SQL registration can be used by nonthreaded languages and systems, such as PHP. For PHP, the PL/SQL listener invokes a PHP callback when it receives the database notification.</p>
</li>
<li>
<p>Oracle Call Interface (OCI)</p>
<p>When you use OCI, the notification handler is a client-side C callback procedure.</p>
</li>
<li>
<p>Java Database Connectivity (JDBC) interface</p>
<p>When you use the JDBC interface, the JDBC driver creates a registration on the server. The JDBC driver launches a new thread that listens for notifications from the server (through a dedicated channel), converts them to Java events, and then notifies all listeners registered with this registration.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adfns_cqn.htm#BDCGGACA">Chapter 15, &#34;Using Continuous Query Notification (CQN)&#34;</a> for a complete discussion of the concepts of this feature and how to use the PL/SQL and OCI interfaces to create CQN registrations</p>
</li>
<li>
<p><a class="olink JJDBC28815" href="../JJDBC/dbchgnf.htm#JJDBC28815"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for information about using JDBC for CQN registration on the server</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACDICGG"></a>
<div id="ADFNS228" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.12</span> Using Database Resident Connection Pool</h2>
<p><a id="sthref70"></a>Database Resident Connection Pool (DRCP) provides a connection pool in the database server for typical web application usage scenarios where the application acquires a database connection, works on the database for a relatively short time, and then releases the connection.</p>
<p class="subhead2"><a id="ADFNS1341"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACFFDCH">About Database Resident Connection Pool</a></p>
</li>
<li>
<p><a href="#CACEBFJD">Configuring DRCP</a></p>
</li>
<li>
<p><a href="#CACDFDBB">Using JDBC with DRCP</a></p>
</li>
<li>
<p><a href="#CACDFIFI">Using OCI Session Pool APIs with DRCP</a></p>
</li>
<li>
<p><a href="#CACIDCBC">Session Purity and Connection Class</a></p>
</li>
<li>
<p><a href="#CACDGDCE">Starting Database Resident Connection Pool</a></p>
</li>
<li>
<p><a href="#CACHCBBH">Enabling DRCP</a></p>
</li>
<li>
<p><a href="#CACIBEJC">Benefiting from the Scalability of DRCP in an OCI Application</a></p>
</li>
<li>
<p><a href="#CACGGJFF">Benefiting from the Scalability of DRCP in a Java Application</a></p>
</li>
<li>
<p><a href="#CACEBBIJ">Best Practices for Using DRCP</a></p>
</li>
<li>
<p><a href="#CACFJHGJ">Compatibility and Migration</a></p>
</li>
<li>
<p><a href="#CACHEJIH">DRCP Restrictions</a></p>
</li>
<li>
<p><a href="#CACGEIBB">Using DRCP with Custom Pools</a></p>
</li>
<li>
<p><a href="#CJGHFDFA">Explicitly Marking Sessions Stateful or Stateless</a></p>
</li>
<li>
<p><a href="#CACBGBAH">Using DRCP with Oracle Real Application Clusters</a></p>
</li>
<li>
<p><a href="#CACEDIHD">Using DRCP with Pluggable Databases</a></p>
</li>
<li>
<p><a href="#CACHEFBC">DRCP with Data Guard</a></p>
</li>
</ul>
<a id="CACFFDCH"></a>
<div id="ADFNS491" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.1</span> About Database Resident Connection Pool</h3>
<p>DRCP pools server processes, each of which is the equivalent of a dedicated server process and database session combined; these are called <span class="bold">pooled servers</span>. Pooled servers can be shared by multiple applications running on the same or several hosts. A connection broker process manages the pooled servers at the database instance level.</p>
<p>DRCP is a configurable feature, chosen at application runtime. It allows concurrent use of traditional and DRCP-based connection architectures.</p>
<p>DRCP is especially useful for architectures with multiprocess single-threaded application servers (such as PHP and Apache) that cannot do middle-tier connection pooling. DRCP is also very useful in large-scale web deployments where hundreds or thousands of web servers or middle-tiers need database access and client-side pools (even in multithreaded systems and languages such as Java). Using DRCP, the database can scale to tens of thousands of simultaneous connections. If your database web application must scale to large numbers of connections, DRCP is your connection pooling solution.</p>
<p>DRCP complements middle-tier connection pools that share connections between threads in a middle-tier process. DRCP also enables sharing of database connections across middle-tier processes on the same middle-tier host, across multiple middle-tier hosts, and across multiple middle-tiers (web servers, containers) that accommodate applications written in different languages. This sharing significantly reduces the database resources needed to support a large number of client connections, thereby reducing the database tier memory footprint and increasing the scalability of both middle and database tiers. Having a pool of readily available servers also reduces the cost of creating and releasing client connections.</p>
<p>Clients get connections from the DRCP, which is connected to an Oracle Database background process called the connection broker. The connection broker implements the pool functionality and multiplexes pooled servers among persistent inbound connections from the client.</p>
<p>When a client needs database access, the connection broker gets a server process from the pool and gives it to the client. The client is then directly connected to the server. After the server executes the client request, the server process returns to the pool and the connection from the client is restored to the connection broker as a persistent inbound connection from the client process. In DRCP, releasing resources leaves the session intact, but no longer associated with a connection (server process). Because this session stores its user global area (UGA) in the program global area (PGA), not in the system global area (SGA), a client can reestablish a connection transparently upon detecting activity.</p>
<p>DRCP is typically recommended for applications with a large number of connections. Shared servers are recommended for applications with a medium number of connections and dedicated sessions are recommended for applications with a small number of connections. The threshold sizes depend on the amount of memory available on the database host.</p>
<p>DRCP has these advantages:</p>
<ul>
<li>
<p>DRCP enables resource sharing among multiple client applications and middle-tier application servers.</p>
</li>
<li>
<p>DRCP improves scalability of databases and applications by reducing resource usage on the database host.</p>
</li>
</ul>
<p>Compared to client-side connection pooling and shared servers:</p>
<ul>
<li>
<p>DRCP provides a direct connection to the database server, furnished by client-side connection pooling (like client-side connection pooling but unlike shared servers).</p>
</li>
<li>
<p>DRCP can pool database servers (like client-side connection pooling and shared servers).</p>
</li>
<li>
<p>DRCP can pool sessions (like client-side connection pooling but unlike shared servers).</p>
</li>
<li>
<p>DRCP can share connections across middle-tier boundaries (unlike client-side connection pooling).</p>
</li>
</ul>
<p>DRCP offers a unique connection pooling solution that addresses scalability requirements in environments requiring large numbers of connections with minimal database resource usage.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT1896" href="../CNCPT/dist_pro.htm#CNCPT1896"><span class="italic">Oracle Database Concepts</span></a> for details about DRCP architecture</div>
</div>
<!-- class="sect2" -->
<a id="CACEBFJD"></a>
<div id="ADFNS492" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.2</span> Configuring DRCP</h3>
<p>DRCP is installed by default, but the DBA must start and configure it, using the <code dir="ltr">DBMS_CONNECTION_POOL</code> package. Configuration options include minimum and maximum number of pooled servers, number of connection brokers, maximum number of connections that each connection broker can handle, and so on.</p>
<p>OCI session pool APIs have been extended to interoperate with DRCP.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS215" href="../ARPLS/d_connection_pool.htm#ARPLS215"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for details about the <code dir="ltr">DBMS_CONNECTION_POOL</code> package</p>
</li>
<li>
<p><a class="olink ADMIN12347" href="../ADMIN/manproc.htm#ADMIN12347"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for the details of configuring a database for DRCP</p>
</li>
<li>
<p><a class="olink LNOCI9110" href="../LNOCI/oci09adv.htm#LNOCI9110"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink JJDBC29023" href="../JJDBC/drcp.htm#JJDBC29023"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink JJUCP8142" href="../JJUCP/optimize.htm#JJUCP8142"><span class="italic">Oracle Universal Connection Pool for JDBC Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACDFDBB"></a>
<div id="ADFNS1425" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.3</span> Using JDBC with DRCP</h3>
<p>Beginning with Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1), Oracle JDBC drivers support DRCP. The DRCP implementation creates a pool on the server side, which is shared across multiple client pools. These client pools use Universal Connection Pool for JDBC. Using Universal Connection Pool significantly lowers memory consumption (because of the reduced number of server processes on the server) and increases the scalability of the Database server.</p>
<p>To track check-in and checkout operations of server-side connections, Java applications must use a client-side pool such as Universal Connection Pool for JDBC or a third-party Java connection pool.</p>
<p><a href="#CACDGDCE">Section 2.12.6</a> explains how the DBA starts DRCP on the server side.</p>
<p>To enable DRCP on the client side, you must do the following:</p>
<ul>
<li>
<p>Pass a non-<code dir="ltr">NULL</code>, nonempty <code dir="ltr">String</code> value to the connection property <code dir="ltr">oracle.jdbc.DRCPConnectionClass</code>.</p>
</li>
<li>
<p>Pass (<code dir="ltr">SERVER=POOLED</code>) in the long connection string.</p>
</li>
</ul>
<p>You can also specify (<code dir="ltr">SERVER=POOLED</code>) in the short URL form as follows:</p>
<pre dir="ltr">jdbc:oracle:thin:@//&lt;host&gt;:&lt;port&gt;/&lt;service_name&gt;[:POOLED]
</pre>
<p>For example:</p>
<pre dir="ltr">jdbc:oracle:thin:@//localhost:5221/orcl:POOLED
</pre>
<p>For an example of enabling JDBC on the client side, see the section on enabling DRCP on the client side in <a class="olink JJDBC29043" href="../JJDBC/drcp.htm#JJDBC29043"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a>.</p>
<p>By setting the same DRCP Connection class name for all the pooled server processes on the server using the connection property <code dir="ltr">oracle.jdbc.DRCPConnectionClass</code>, you can share pooled server processes on the server across multiple connection pools.</p>
<p>In DRCP, you can also apply a tag to a given connection and easily retrieve that tagged connection later. For more information about enabling connection tagging in DRCP, see <a class="olink JJDBC29030" href="../JJDBC/drcp.htm#JJDBC29030"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="CACDFIFI"></a>
<div id="ADFNS493" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.4</span> Using OCI Session Pool APIs with DRCP</h3>
<p>The OCI session pool APIs <code dir="ltr">OCISessionPoolCreate()</code>, <code dir="ltr">OCISessionGet()</code>, and <code dir="ltr">OCISessionRelease()</code> interoperate with DRCP.</p>
<p>An OCI application initializes the environment for the OCI session pool for DRCP by invoking <code dir="ltr">OCISessionPoolCreate()</code>, which is described in <a class="olink LNOCI17124" href="../LNOCI/oci16rel001.htm#LNOCI17124"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>.</p>
<p>To get a session from the OCI session pool for DRCP, an OCI application invokes <code dir="ltr">OCISessionGet()</code>, specifying <code dir="ltr">OCI_SESSGET_SPOOL</code> for the <code dir="ltr">mode</code> parameter. For information about <code dir="ltr">OCISessionGet()</code>, see <a class="olink LNOCI17123" href="../LNOCI/oci16rel001.htm#LNOCI17123"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>.</p>
<p>To release a session to the OCI session pool for DRCP, an OCI application invokes <code dir="ltr">OCISessionRelease()</code>, which is described in <a class="olink LNOCI17126" href="../LNOCI/oci16rel001.htm#LNOCI17126"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>.</p>
<p>To improve performance, the OCI session pool can transparently cache connections to the connection broker. An OCI application can reuse the sessions within which the application leaves sessions of a similar state either by invoking <code dir="ltr">OCISessionGet()</code> with the <code dir="ltr">authInfop</code> parameter set to <code dir="ltr">OCI_ATTR_CONNECTION_CLASS</code> and specifying a connection class name or by using the <code dir="ltr">OCIAuthInfo</code> handle before invoking <code dir="ltr">OCISessionGet()</code>. For details, see <a href="#CACIDCBC">Section 2.12.5</a>.</p>
<p>DRCP also supports features offered by the traditional client-side OCI session pool, such as tagging, statement caching, and TAF.</p>
</div>
<!-- class="sect2" -->
<a id="CACIDCBC"></a>
<div id="ADFNS494" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.5</span> Session Purity and Connection Class</h3>
<p>In Oracle Database 11<span class="italic">g</span> Release 1 (11.1), OCI introduced two settings that can be specified when obtaining a session using <code dir="ltr">OCISessionGet()</code>: session purity and connection class.</p>
<p class="subhead2"><a id="ADFNS1335"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACCFEFJ">Session Purity</a></p>
</li>
<li>
<p><a href="#CACFEJBE">Connection Class</a></p>
</li>
<li>
<p><a href="#CACGCJGC">Session Purity and Connection Class Defaults</a></p>
</li>
</ul>
<a id="CACCFEFJ"></a>
<div id="ADFNS495" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.12.5.1</span> Session Purity</h4>
<p><a id="sthref71"></a><span class="bold">Session purity</span> specifies whether an OCI application can reuse a pooled session (<a id="sthref72"></a><code dir="ltr">OCI_SESSGET_PURITY_SELF</code>) or must use a new session (<a id="sthref73"></a><code dir="ltr">OCI_SESSGET_PURITY_NEW</code>).</p>
<p>The application can set session purity either on the <code dir="ltr">OCIAuthInfo</code> handle before invoking <code dir="ltr">OCISessionGet()</code> or in the <code dir="ltr">mode</code> parameter when invoking <code dir="ltr">OCISessionGet()</code>.</p>
<p><a href="#CACHBGAH">Example 2-1</a> shows how a connection pooling application sets up a new session.</p>
<div id="ADFNS496" class="example">
<p class="titleinexample"><a id="CACHBGAH"></a>Example 2-1 Setting Session Purity for New Session</p>
<pre dir="ltr">/* OCIAttrSet method */

ub4 purity = <span class="bold">OCI_ATTR_PURITY_NEW</span>;
OCIAttrSet (authInfop, OCI_HTYPE_AUTHINFO, &amp;purity, sizeof (purity),
            OCI_ATTR_PURITY, errhp);
OCISessionGet (envhp, errhp, &amp;svchp, authInfop, poolName, poolNameLen, NULL, 0,
               NULL, NULL, NULL, OCI_SESSGET_SPOOL);
/* poolName is the name returned by OCISessionPoolCreate() */

/*  OCISessionGet mode method */
OCISessionGet (envhp, errhp, &amp;svchp, authInfop, poolName, poolNameLen, NULL, 0,
               NULL, NULL, NULL, OCI_SESSGET_SPOOL | <span class="bold">OCI_SESSGET_PURITY_NEW</span>);
/* poolName is the name returned by OCISessionPoolCreate() */
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
When reusing a pooled session, the NLS attributes of the server override those of the client.
<p>For example, if the client sets <code dir="ltr">NLS_LANG</code> to <code dir="ltr">french_france.us7ascii</code> and then is assigned a German session from the pool, the client session becomes German.</p>
<p>To avoid this problem, use connection classes to restrict sharing.</p>
</div>
</div>
<!-- class="sect3" -->
<a id="CACFEJBE"></a>
<div id="ADFNS497" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.12.5.2</span> Connection Class</h4>
<p><a id="sthref74"></a><span class="bold">Connection class</span> defines a logical name for the type of connection that an OCI application needs. When a pooled session has a connection class, OCI ensures that the session is not shared outside of that connection class.</p>
<p>For example, a connection class can prevent the following from sharing pooled sessions:</p>
<ul>
<li>
<p>Different users</p>
<p>(A session first created for user <code dir="ltr">HR</code> is assigned only to subsequent requests by user <code dir="ltr">HR</code>.)</p>
</li>
<li>
<p>Different sessions of the same user</p>
</li>
<li>
<p>Different applications being run by the same user</p>
<p>(Each application can have its own connection class.)</p>
</li>
</ul>
<p>To set the connection class, use the <code dir="ltr">OCI_ATTR_CONNECTION_CLASS</code> attribute of the <code dir="ltr">OCIAuthInfo</code> handle. A connection class name is a string of at most 1024 bytes, and it cannot include an asterisk (*).</p>
<p><a href="#CACCIFIE">Example 2-2</a> specifies that an HRMS application needs sessions with the connection class <code dir="ltr">HRMS</code>.</p>
<div id="ADFNS498" class="example">
<p class="titleinexample"><a id="CACCIFIE"></a>Example 2-2 Setting the Connection Class as HRMS</p>
<pre dir="ltr">OCISessionPoolCreate (envhp, errhp, spoolhp, &amp;poolName, &amp;poolNameLen, &#34;HRDB&#34;,
    strlen(&#34;HRDB&#34;), 0, 10, 1, &#34;HR&#34;, strlen(&#34;HR&#34;), &#34;HR&#34;, strlen(&#34;HR&#34;),
    OCI_SPC_HOMOGENEOUS);
 
OCIAttrSet (authInfop, OCI_HTYPE_AUTHINFO, <span class="bold">&#34;HRMS&#34;, strlen (&#34;HRMS&#34;),</span>
    <span class="bold">OCI_ATTR_CONNECTION_CLASS,</span> errhp);
OCISessionGet (envhp, errhp, &amp;svchp, authInfop, poolName, poolNameLen, NULL, 0,
    NULL, NULL, NULL, OCI_SESSGET_SPOOL);
</pre></div>
<!-- class="example" -->
<p><a href="#CACGGBBC">Example 2-3</a> specifies that a recruitment application needs sessions with the connection class <code dir="ltr">RECMS</code>.</p>
<div id="ADFNS499" class="example">
<p class="titleinexample"><a id="CACGGBBC"></a>Example 2-3 Setting the Connection Class as RECMS</p>
<pre dir="ltr">OCISessionPoolCreate (envhp, errhp, spoolhp, &amp;poolName, &amp;poolNameLen, &#34;HRDB&#34;,
    strlen(&#34;HRDB&#34;), 0, 10, 1, &#34;HR&#34;, strlen(&#34;HR&#34;), &#34;HR&#34;, strlen(&#34;HR&#34;),
    OCI_SPC_HOMOGENEOUS);
 
OCIAttrSet (authInfop, OCI_HTYPE_AUTHINFO,  <span class="bold">&#34;RECMS&#34;, strlen(&#34;RECMS&#34;),</span>
    <span class="bold">OCI_ATTR_CONNECTION_CLASS,</span> errhp);
OCISessionGet (envhp, errhp, &amp;svchp, authInfop, poolName, poolNameLen, NULL, 0,
    NULL, NULL, NULL, OCI_SESSGET_SPOOL);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CACGCJGC"></a>
<div id="ADFNS500" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.12.5.3</span> Session Purity and Connection Class Defaults</h4>
<p><a href="#CACCIJFF">Table 2-5</a> shows the defaults for the attributes and settings of connections that an OCI application gets from the OCI session pool (using <code dir="ltr">OCISessionGet()</code>) and from other sources.</p>
<div id="ADFNS501" class="tblformalwide">
<p class="titleintable"><a id="sthref75"></a><a id="CACCIJFF"></a>Table 2-5 Session Purity and Connection Class Defaults</p>
<table class="cellalignment296" title="Session Purity and Connection Class Defaults" summary="Session purity and connection class defaults for Database Resident Connection Pooling." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t42">Attribute or Setting</th>
<th class="cellalignment294" id="r1c2-t42">Default Value for Connection From OCI Session Pool</th>
<th class="cellalignment294" id="r1c3-t42">Default Value for Connection Not From OCI Session Pool</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t42" headers="r1c1-t42">
<p><code dir="ltr">OCI_ATTR_PURITY</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t42 r1c2-t42">
<p><code dir="ltr">OCI_ATTR_PURITY_SELF</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t42 r1c3-t42">
<p><code dir="ltr">OCI_ATTR_PURITY_NEW</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t42" headers="r1c1-t42">
<p><code dir="ltr">OCI_ATTR_CONNECTION_CLASS</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t42 r1c2-t42">
<p>OCI-generated globally unique name for each client-side session pool, used as the default connection class for all connections in the OCI session pool</p>
</td>
<td class="cellalignment295" headers="r3c1-t42 r1c3-t42">
<p><code dir="ltr">SHARED</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t42" headers="r1c1-t42">
<p>Sessions shared by ...</p>
</td>
<td class="cellalignment295" headers="r4c1-t42 r1c2-t42">
<p>Threads that request sessions from the OCI session pool</p>
</td>
<td class="cellalignment295" headers="r4c1-t42 r1c3-t42">
<p>Connections to a particular database that have the <code dir="ltr">SHARED</code> connection class</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACDGDCE"></a>
<div id="ADFNS502" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.6</span> Starting Database Resident Connection Pool</h3>
<p>The DBA must log on as <code dir="ltr">SYSDBA</code> and start the default pool, <code dir="ltr">SYS_DEFAULT_CONNECTION_POOL</code>, using <code dir="ltr">DBMS_CONNECTION_POOL.START_POOL</code> with the default settings.</p>
<p>For detailed information about configuring the pool, see <a class="olink ADMIN12347" href="../ADMIN/manproc.htm#ADMIN12347"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="CACHCBBH"></a>
<div id="ADFNS503" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.7</span> Enabling DRCP</h3>
<p>To enable DRCP in an application, specify either <code dir="ltr">:POOLED</code> in the Easy Connect string (as in <a href="#CACJBFAG">Example 2-4</a>) or <code dir="ltr">(SERVER=POOLED)</code> in the TNS connect string (as in <a href="#CACEGJCH">Example 2-5</a>).</p>
<div id="ADFNS1342" class="example">
<p class="titleinexample"><a id="CACJBFAG"></a>Example 2-4 Enabling DRCP With :POOLED in Easy Connect String</p>
<pre dir="ltr">oraclehost.company.com:1521/books.company.com:POOLED
</pre></div>
<!-- class="example" -->
<div id="ADFNS505" class="example">
<p class="titleinexample"><a id="CACEGJCH"></a>Example 2-5 Enabling DRCP With SERVER=POOLED in TNS Connect String</p>
<pre dir="ltr">BOOKSDB = (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=oraclehost.company.com)
 (PORT=1521))(CONNECT_DATA = (SERVICE_NAME=books.company.com)(SERVER=POOLED)))
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CACIBEJC"></a>
<div id="ADFNS506" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.8</span> Benefiting from the Scalability of DRCP in an OCI Application</h3>
<p>Consider the following OCI application scenarios and how they benefit from DRCP:</p>
<ul>
<li>
<p>An application neither uses the OCI session pool nor specifies a connection class or purity setting (or specifies <code dir="ltr">PURITY=NEW</code>).</p>
<p>The application gets a new session from DRCP. When the application returns a connection to the pool, the session is not shared with other instances of the same application by default. Therefore, the pooled server remains assigned to the client for the life of the client session. (SQL*Plus is an example of a client that does not use the OCI session pool. SQL*Plus keeps connections even when they are idle.)</p>
<p>The application benefits from reusing an existing pooled server.</p>
</li>
<li>
<p>An application invokes <code dir="ltr">OCISessionGet()</code> outside of the OCI session pool, or to specify the connection class and <code dir="ltr">PURITY=SELF</code>.</p>
<p>The application can reuse both DRCP pooled servers and sessions. However, after an <code dir="ltr">OCISessionRelease()</code> call, OCI terminates the connection to the connection broker. On the next <code dir="ltr">OCISessionGet()</code> call, the application reconnects to the broker, and then DRCP assigns a pooled server (and session) belonging to the specified connection class. Reconnecting incurs the cost of connection establishment and reauthentication.</p>
<p>The application achieves better sharing of DRCP resources (processes and sessions) but does not benefit from caching connections to the connection broker.</p>
</li>
<li>
<p>An application uses OCI session pool APIs, specifies a connection class, and specifies <code dir="ltr">PURITY=SELF</code>.</p>
<p>The application uses all DRCP functionality, reusing both the pooled server and the associated session and benefiting from cached connections to the connection broker. Cached connections do not incur the cost of reauthentication on the <code dir="ltr">OCISessionGet()</code> call.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI9110" href="../LNOCI/oci09adv.htm#LNOCI9110"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for information about <a class="olink LNOCI17124" href="../LNOCI/oci16rel001.htm#LNOCI17124"><code dir="ltr">OCISessionPoolCreate()</code></a>, <a class="olink LNOCI17123" href="../LNOCI/oci16rel001.htm#LNOCI17123"><code dir="ltr">OCISessionGet()</code></a>, <a class="olink LNOCI17126" href="../LNOCI/oci16rel001.htm#LNOCI17126"><code dir="ltr">OCISessionRelease(),</code></a> and <a class="olink LNOCI17125" href="../LNOCI/oci16rel001.htm#LNOCI17125"><code dir="ltr">OCISessionPoolDestroy()</code></a></div>
</div>
<!-- class="sect2" -->
<a id="CACGGJFF"></a>
<div id="ADFNS1428" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.9</span> Benefiting from the Scalability of DRCP in a Java Application</h3>
<p>Java applications benefit from DRCP as OCI applications do (see <a href="#CACIBEJC">Section 2.12.8</a>).</p>
<p>A customer who uses Universal Connection Pool (UCP), or uses ConnectionPoolDataSource as the connection factory, can upgrade to using DRCP by changing only the configuration (not the code).</p>
</div>
<!-- class="sect2" -->
<a id="CACEBBIJ"></a>
<div id="ADFNS507" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.10</span> Best Practices for Using DRCP</h3>
<p>The steps for designing an application that can benefit from the full power of DRCP are very similar to those for an application that uses the OCI session pool (for details, see <a class="olink LNOCI16617" href="../LNOCI/oci09adv.htm#LNOCI16617"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>).</p>
<p>The only additional step is that for best performance, when deployed to run with DRCP, the application must explicitly specify a connection class.</p>
<p>Multiple instances of the same application must specify the same connection class for best performance and enhanced sharing of DRCP resources. Ensure that the different instances of the application can share database sessions.</p>
<p><a href="#CACFIIIJ">Example 2-6</a> shows a DRCP application.</p>
<div id="ADFNS508" class="example">
<p class="titleinexample"><a id="CACFIIIJ"></a>Example 2-6 DRCP Application</p>
<pre dir="ltr">/* Assume that all necessary handles are allocated. */
 
/*   This middle tier uses a single database user. Create a homogeneous
     client-side session pool */
OCISessionPoolCreate (envhp, errhp, spoolhp, &amp;poolName, &amp;poolNameLen, &#34;BOOKSDB&#34;,
    strlen(&#34;BOOKSDB&#34;), 0, 10, 1, &#34;SCOTT&#34;, strlen(&#34;SCOTT&#34;), &#34;<span class="italic">password</span>&#34;,
    strlen(&#34;<span class="italic">password</span>&#34;), OCI_SPC_HOMOGENEOUS);
 
while (1)
{
   /* Process a client request */
   WaitForClientRequest();
   /* Application function */
 
   /* Set the Connection Class on the OCIAuthInfo handle that is passed as
      argument to OCISessionGet*/
   
   OCIAttrSet (authInfop, OCI_HTYPE_AUTHINFO,  &#34;BOOKSTORE&#34;, strlen(&#34;BOOKSTORE&#34;),
               OCI_ATTR_CONNECTION_CLASS, errhp);
 
   /* Purity need not be set, as default is OCI_ATTR_PURITY_SELF for OCISessionPool
       connections */
 
   /* You can get a SCOTT session released by Middle-tier 2 */
   OCISessionGet(envhp, errhp, &amp;svchp, authInfop, poolName, poolNameLen, NULL, 0,
                 NULL, NULL, NULL, OCI_SESSGET_SPOOL); 
 
   /* Database calls using the svchp obtained above  */
   OCIStmtExecute(...)
 
   /* This releases the pooled server on the database for reuse */
   OCISessionRelease (svchp, errhp, NULL, 0, OCI_DEFAULT);
}
 
/* Middle tier is done - exiting */
OCISessionPoolDestroy (spoolhp, errhp, OCI_DEFAULT);
</pre></div>
<!-- class="example" -->
<p><a href="#CACBDIHE">Example 2-7</a> and <a href="#CACJJGAB">Example 2-8</a> show connect strings that deploy code in 10 middle-tier hosts that service the <code dir="ltr">BOOKSTORE</code> application from <a href="#CACFIIIJ">Example 2-6</a>.</p>
<p>In <a href="#CACBDIHE">Example 2-7</a>, assume that the database is Oracle Database 12<span class="italic">c</span> (or earlier) in dedicated server mode with DRCP not enabled and that the client has 12<span class="italic">c</span> libraries. The application gets dedicated server connections from the database.</p>
<div id="ADFNS509" class="example">
<p class="titleinexample"><a id="CACBDIHE"></a>Example 2-7 Connect String for Deployment in Dedicated Server Mode Without DRCP</p>
<pre dir="ltr">BOOKSDB = (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=oraclehost.company.com)
 (PORT=1521))(CONNECT_DATA = (SERVICE_NAME=books.company.com)))
</pre></div>
<!-- class="example" -->
<p>In <a href="#CACJJGAB">Example 2-8</a>, assume that DRCP is enabled on the Oracle Database 12<span class="italic">c</span> database. All middle-tier processes can benefit from the pooling capability of DRCP. The database resource requirement with DRCP is much less than it would be in dedicated server mode.</p>
<div id="ADFNS510" class="example">
<p class="titleinexample"><a id="CACJJGAB"></a>Example 2-8 Connect String for Deployment With DRCP</p>
<pre dir="ltr">BOOKSDB = (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=oraclehost.company.com)
 (PORT=1521))(CONNECT_DATA = (SERVICE_NAME=books.company.com)(SERVER=POOLED)))
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CACFJHGJ"></a>
<div id="ADFNS511" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.11</span> Compatibility and Migration</h3>
<p>An OCI application linked with Oracle Database 12<span class="italic">c</span> client libraries works unaltered with:</p>
<ul>
<li>
<p>An Oracle Database 12<span class="italic">c</span> database with DRCP disabled</p>
</li>
<li>
<p>A database server from a release earlier than Oracle Database 12<span class="italic">c</span></p>
</li>
<li>
<p>An Oracle Database 12<span class="italic">c</span> database server with DRCP enabled, when deployed with the DRCP connect string</p>
</li>
</ul>
<p>Suitable clients benefit from enhanced scalability offered by DRCP if they are appropriately modified to use the OCI session pool APIs with the connection class and purity settings previously described.</p>
<p>As of Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1), Oracle JDBC drivers support DRCP. For more information, see <a class="olink JJDBC29023" href="../JJDBC/drcp.htm#JJDBC29023"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="CACHEJIH"></a>
<div id="ADFNS512" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.12</span> DRCP Restrictions</h3>
<p>The following cannot be performed with pooled servers:</p>
<ul>
<li>
<p>Shutting down the database</p>
</li>
<li>
<p>Stopping DRCP</p>
</li>
<li>
<p>Changing the password for the connected user</p>
</li>
<li>
<p>Using shared database links to connect to a DRCP that is on a different instance</p>
</li>
<li>
<p>Using Advanced Security Options (ASO) with TCPS</p>
</li>
<li>
<p>Using Enterprise user security with DRCP</p>
</li>
<li>
<p>Using migratable sessions on the server side, either directly (using the <code dir="ltr">OCI_MIGRATE</code> option) or indirectly (invoking <code dir="ltr">OCISessionPoolCreate()</code>)</p>
</li>
<li>
<p>Using initial client roles</p>
</li>
<li>
<p>Using application context attributes (such as <code dir="ltr">OCI_ATTR_APPCTX_NAME</code> and <code dir="ltr">OCI_ATTR_APPCTX_VALUE</code>)</p>
</li>
<li>
<p>Using Transaction Guard (explained in <a href="adfns_trans_idemp_guard.htm#BABFBHEH">Chapter 25</a>) with DRCP</p>
</li>
<li>
<p>Using Application Continuity (explained in <a href="adfns_app_continuity.htm#BABDJGDI">Chapter 26</a>) with DRCP</p>
</li>
</ul>
<p>Sessions created before DDL statements run can be assigned to clients after DDL statements run. Therefore, be careful when running DDL statements that affect database users in the pool. For example, before dropping a user, ensure that there are no sessions of that user in the pool and no connections to the broker that were authenticated as that user.</p>
<p>If sessions with explicit roles enabled are released to the pool, they can later be assigned to connections (of the same user) that need the default logon role. Therefore, avoid releasing sessions with explicit roles; instead, terminate them.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can use Oracle Advanced Security features such as encryption and strong authentication with DRCP.</div>
<p>Users can mix data encryption/data integrity combinations. However, users must segregate each such combination by using connection classes. For example, if the user application must specify AES256 as the encryption mechanism for one set of connections and DES for another set of connections, then the application must specify different connection classes for each set.</p>
</div>
<!-- class="sect2" -->
<a id="CACGEIBB"></a>
<div id="ADFNS513" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.13</span> Using DRCP with Custom Pools</h3>
<p>Oracle highly recommends using the OCI session pool, which is already integrated with DRCP, FAN, and RLB. However, an application that does not use the OCI session pool can still use DRCP if either of the following is true:</p>
<ul>
<li>
<p>The application was built using its own custom connection pool.</p>
</li>
<li>
<p>The application uses no pool, but has periods when it does not use its session (and could therefore release it to a pool) and does not depend on getting back the same session</p>
</li>
</ul>
<p>To use DRCP with such an application, the session must be stateful; that is, the session must have the <a id="sthref76"></a><code dir="ltr">OCI_ATTR_SESSION_STATE</code> attribute (described in <a class="olink LNOCI72659" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=LNOCI72659"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>). When an application is stateful and DRCP is enabled, OCI transparently assigns it an appropriate session from the DRCP pool. If the application is stateless (has the <a id="sthref77"></a><code dir="ltr">OCI_SESSION_STATELESS</code> attribute) and DRCP is enabled, OCI transparently returns the session to the DRCP pool.</p>
<p>Applications must identify session state as promptly as possible for efficient utilization of underlying database resources. For more information, see <a href="#CJGHFDFA">Section 2.12.14</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
An application that specifies the attribute <code dir="ltr">OCI_ATTR_SESSION_STATE</code> or <code dir="ltr">OCI_SESSION_STATELESS</code> must also specify session purity and connection class, which are explained in <a href="#CACIDCBC">Section 2.12.5</a>.</div>
</div>
<!-- class="sect2" -->
<a id="CJGHFDFA"></a>
<div id="ADFNS72659" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.14</span> Explicitly Marking Sessions Stateful or Stateless</h3>
<p>An application typically requires a specific database session for the duration of a unit of work. For this duration, the session is <a id="sthref78"></a><span class="bold">stateful</span>. After this duration, if the application does not depend on retaining the specific session for subsequent units of work, then the session is <a id="sthref79"></a><span class="bold">stateless</span>.</p>
<p>When an application or caller detects a session&#39;s transition from stateful to stateless, or the reverse, the application can explicitly inform OCI of the transition by using the <code dir="ltr">OCI_ATTR_SESSION_STATE</code> or <code dir="ltr">OCI_SESSION_STATELESS</code> attribute. This information lets OCI and Oracle Database transparently perform scalability optimizations, such as reassigning the session that the application is not using to someone else and then assigning the application a new session when necessary.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS228" href="../ADFNS/adfns_perf_scale.htm#ADFNS228"></a><a href="#CACGEIBB">Section 2.12.13</a></div>
<p><a href="#CACIEBBB">Example 2-9</a> shows a code fragment that explicitly marks session states.</p>
<div id="ADFNS1446" class="example">
<p class="titleinexample"><a id="CACIEBBB"></a>Example 2-9 Explicitly Marking Sessions Stateful or Stateless</p>
<pre dir="ltr">wait_for_transaction_request();
do {
 
ub1 state;
 
/* mark  database session as STATEFUL  */
state = OCI_SESSION_STATEFUL;
checkerr(errhp, OCIAttrSet(usrhp, OCI_HTYPE_SESSION,
        &amp;state, 0, OCI_ATTR_SESSION_STATE, errhp));
/* do database work consisting of one or more related calls to the database */
 
...
 
/* done with database work, mark session as stateless */
state = OCI_SESSION_STATELESS;
checkerr(errhp, OCIAttrSet(usrhp, OCI_HTYPE_SESSION,
         &amp;state, 0,OCI_ATTR_SESSION_STATE, errhp));
 
wait_for_transaction_request();
 
} while(not _done); 
</pre></div>
<!-- class="example" -->
<p>A session obtained from outside the OCI session pool is marked <code dir="ltr">OCI_SESSION_STATEFUL</code> and remains <code dir="ltr">OCI_SESSION_STATEFUL</code> unless the application explicitly marks it <code dir="ltr">OCI_SESSION_STATELESS</code>.</p>
<p>A session obtained from the OCI session pool is marked <code dir="ltr">OCI_SESSION_STATEFUL</code> by default when the first call is initiated on that session. When the session is released to the pool, it is marked <code dir="ltr">OCI_SESSION_STATELESS</code> by default. Therefore, you need not explicitly mark sessions as stateful or stateless when you use the OCI session pool.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI72873" href="../LNOCI/ociaahan.htm#LNOCI72873"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for more information about <code dir="ltr">OCI_ATTR_SESSION_STATE</code></div>
</div>
<!-- class="sect2" -->
<a id="CACBGBAH"></a>
<div id="ADFNS1429" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.15</span> Using DRCP with Oracle Real Application Clusters</h3>
<p><a id="sthref80"></a>Oracle Real Application Clusters (Oracle RAC) is a database option in which a single database is hosted by multiple instances on multiple nodes. When DRCP is configured in a database in an Oracle RAC environment, the pool configuration is applied to each database instance. Starting or stopping the pool on one instance starts or stops the pool on all instances.</p>
</div>
<!-- class="sect2" -->
<a id="CACEDIHD"></a>
<div id="ADFNS1430" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.16</span> Using DRCP with Pluggable Databases</h3>
<p>The DRCP in a multitenant container database (CDB) is configured and managed in the root container. You can configure, start, and stop the pool when you are connected to the root container. The pool maintains the pooled servers of different pluggable databases to which the clients are connected using different service names.</p>
</div>
<!-- class="sect2" -->
<a id="CACHEFBC"></a>
<div id="ADFNS1431" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.12.17</span> DRCP with Data Guard</h3>
<p>When operating DRCP in a Data Guard environment:</p>
<ul>
<li>
<p>On a physical standby database:</p>
<ul>
<li>
<p>You can start the pool only if the pool is running on the primary database.</p>
</li>
<li>
<p>You can stop the pool only if the pool is stopped on the primary database.</p>
</li>
<li>
<p>You cannot configure, restore to defaults, or alter pool parameters.</p>
</li>
</ul>
<p>The preceding restrictions cease to apply to the physical standby database if it becomes the primary database.</p>
</li>
<li>
<p>On a logical standby database, all pool operations are allowed.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACFEJBB"></a>
<div id="ADFNS229" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.13</span> Using <a id="sthref81"></a>Runtime Connection Load Balancing</h2>
<p class="subhead2"><a id="ADFNS514"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACBEACF">About Runtime Connection Load Balancing</a></p>
</li>
<li>
<p><a href="#CACCHEAF">Enabling and Disabling Runtime Connection Load Balancing</a></p>
</li>
<li>
<p><a href="#CACDHFGJ">Receiving Load Balancing Advisory FAN Events</a></p>
</li>
</ul>
<a id="CACBEACF"></a>
<div id="ADFNS515" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.13.1</span> About Runtime Connection Load Balancing</h3>
<p>Oracle Real Application Clusters (Oracle RAC) is a database option in which a single database is hosted by multiple instances on multiple nodes. The <a id="sthref82"></a>Oracle RAC shared disk method of clustering databases increases scalability. The nodes can easily be added or freed to meet current needs and improve availability, because if one node fails, another can assume its workload. Oracle RAC adds high availability and failover capacity to the database, because all instances have access to the whole database.</p>
<p>Work requests are balanced at both connect time (<span class="bold">connect time load balancing</span>, provided by Oracle Net Services) and runtime (<span class="bold">runtime connection load balancing</span>). For Oracle RAC environments, session pools use service metrics received from the Oracle RAC load balancing advisory through <a id="sthref83"></a>Fast Application Notification (FAN) events to balance application session requests. The work requests coming into the session pool can be distributed across the instances of Oracle RAC offering a service, using the current service performance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code dir="ltr">cdemosp.c</code> in the directory <code dir="ltr">demo</code></p>
</li>
<li>
<p><a href="#CACDICGG">Section 2.12</a></p>
</li>
</ul>
</div>
<p>Connect time load balancing occurs when an application creates a session. Pooled sessions must be well distributed across Oracle RAC instances when the sessions are created to ensure that sessions on each instance can execute work.</p>
<p>Runtime connection load balancing occurs when an application selects a session from an existing session pool (and thus is a very frequent activity). Runtime connection load balancing routes work requests to sessions in a session pool that best serve the work. For session pools that support services at only one instance, the first available session in the pool is adequate. When the pool supports services that span multiple instances, the work must be distributed across instances so that the instances that are providing better service or have greater capacity get more work requests.</p>
<p>OCI, OCCI, JDBC, and ODP.NET client applications all support runtime connection load balancing.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNOCI09100" href="../LNOCI/oci09adv.htm#LNOCI09100"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for more information about runtime load balancing using the OCI interface</p>
</li>
<li>
<p><a class="olink LNCPP20028" href="../LNCPP/performance.htm#LNCPP20028"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a> for more information about runtime load balancing using the OCCI interface</p>
</li>
<li>
<p><a class="olink JJDBC28747" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=JJDBC28747"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for more information about runtime load balancing using the JDBC interface</p>
</li>
<li>
<p><a class="olink JJUAR" href="../JJUAR/toc.htm"><span class="italic">Oracle Universal Connection Pool for JDBC Java API Reference</span></a></p>
</li>
<li>
<p><a class="olink ODPNT" href="../ODPNT/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer&#39;s Guide for Microsoft Windows</span></a> for more information about runtime load balancing using the ODP.NET interface</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CACCHEAF"></a>
<div id="ADFNS516" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.13.2</span> Enabling and Disabling Runtime Connection Load Balancing</h3>
<p>Enabling and disabling runtime connection load balancing on the client depends on the client environment.</p>
<p class="subhead2"><a id="ADFNS1447"></a>Topics:</p>
<ul>
<li>
<p><a href="#CACIJBEJ">OCI</a></p>
</li>
<li>
<p><a href="#CACEGACD">OCCI</a></p>
</li>
<li>
<p><a href="#CACFCFHJ">JDBC</a></p>
</li>
<li>
<p><a href="#CACDHFCI">ODP.NET</a></p>
</li>
</ul>
<a id="CACIJBEJ"></a>
<div id="ADFNS1448" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.13.2.1</span> OCI</h4>
<p>For an OCI client application, runtime connection load balancing is enabled by default in an Oracle Database 11<span class="italic">g</span> Release 1 (11.1) or later client communicating with a server of Oracle Database 10<span class="italic">g</span> Release 2 (10.2) or later when you perform the following operations to ensure that your application receives service metrics based on service time:</p>
<ul>
<li>
<p>Link the application with the threads library.</p>
</li>
<li>
<p>Create the OCI environment in <code dir="ltr">OCI_EVENTS</code> and <code dir="ltr">OCI_THREADED</code> modes.</p>
</li>
<li>
<p>Configure the load balancing advisory goal and the connection load balancing goal for a service that is used by the session pool.</p>
</li>
</ul>
<p>To disable runtime connection load balancing for an OCI client, set the <code dir="ltr">mode</code> parameter to <code dir="ltr">OCI_SPC_NO_RLB</code> when calling <code dir="ltr">OCISessionPoolCreate()</code>.</p>
<p>FAN HA (FCF) for OCI requires <code dir="ltr">AQ_HA_NOTIFICATIONS</code> for the service to be <code dir="ltr">TRUE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI17124" href="../LNOCI/oci16rel001.htm#LNOCI17124"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for information about <code dir="ltr">OCISessionPoolCreate()</code></div>
</div>
<!-- class="sect3" -->
<a id="CACEGACD"></a>
<div id="ADFNS1449" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.13.2.2</span> OCCI</h4>
<p>For an OCCI client application, runtime connection load balancing is enabled by default in an Oracle Database 11<span class="italic">g</span> Release 1 (11.1) or later client communicating with a server of Oracle Database 10<span class="italic">g</span> Release 2 (10.2) or later when you perform the following operations:</p>
<ul>
<li>
<p>Link the application with the threads library.</p>
</li>
<li>
<p>Create the OCCI environment in <code dir="ltr">EVENTS</code> and <code dir="ltr">THREADED_MUTEXED</code> modes.</p>
</li>
<li>
<p>Configure the load balancing advisory goal and the connection load balancing goal for a service that is used by the session pool.</p>
</li>
</ul>
<p>To disable runtime connection load balancing for an OCCI client, use the <code dir="ltr">NO_RLB</code> option for the <code dir="ltr">PoolType</code> attribute of the <code dir="ltr">StatelessConnectionPool</code> <code dir="ltr">Class</code>.</p>
<p>FAN HA (FCF) for OCCI requires <code dir="ltr">AQ_HA_NOTIFICATIONS</code> for the service to be <code dir="ltr">TRUE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNCPP20491" href="../LNCPP/performance.htm#LNCPP20491"><span class="italic">Oracle C++ Call Interface Programmer&#39;s Guide</span></a> for more information about runtime load balancing using the OCCI interface</div>
</div>
<!-- class="sect3" -->
<a id="CACFCFHJ"></a>
<div id="ADFNS1450" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.13.2.3</span> JDBC</h4>
<p>In the JDBC environment, runtime connection load balancing is enabled by default in an Oracle Database 11<span class="italic">g</span> Release 1 (11.1) or later client communicating with a server of Oracle Database 10<span class="italic">g</span> Release 2 (10.2) or later when Fast Connection Failover (FCF) is enabled.</p>
<p>In the JDBC environment, runtime connection load balancing relies on the Oracle Notification Service (ONS) infrastructure, which uses the same out-of-band ONS event mechanism used by FCF processing. No additional setup or configuration of ONS is required to benefit from runtime connection load balancing.</p>
<p>To disable runtime connection load balancing in the JDBC environment, call <code dir="ltr">setFastConnectionFailoverEnabled()</code> with a value of false.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJDBC28829" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=JJDBC28829"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for more information about runtime load balancing using the JDBC interface</div>
</div>
<!-- class="sect3" -->
<a id="CACDHFCI"></a>
<div id="ADFNS1451" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.13.2.4</span> ODP.NET</h4>
<p>In an ODP.NET client application, runtime connection load balancing is disabled by default. To enable runtime connection load balancing, include &#34;<code dir="ltr">Load Balancing=true</code>&#34; in the connection string.</p>
<p>FAN HA (FCF) for ODP.NET requires <code dir="ltr">AQ_HA_NOTIFICATIONS</code> for the service to be <code dir="ltr">TRUE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ODPNT" href="../ODPNT/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer&#39;s Guide for Microsoft Windows</span></a> for more information about runtime load balancing</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACDHFGJ"></a>
<div id="ADFNS517" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.13.3</span> Receiving Load Balancing Advisory FAN Events</h3>
<p>Your application can receive <a id="sthref84"></a><a id="sthref85"></a>load balancing advisory FAN events only if all of these requirements are met:</p>
<ul>
<li>
<p><a id="sthref86"></a>Oracle RAC environment with Oracle Clusterware is set up and enabled.</p>
</li>
<li>
<p>The server is configured to issue event notifications.</p>
</li>
<li>
<p>The application is linked with the threads library.</p>
</li>
<li>
<p>The OCI environment is created in <code dir="ltr">OCI_EVENTS</code> and <code dir="ltr">OCI_THREADED</code> modes.</p>
</li>
<li>
<p>The OCCI environment is created in <code dir="ltr">THREADED_MUTEXED</code> and <code dir="ltr">EVENTS</code> modes.</p>
</li>
<li>
<p>You configured or modified the Oracle RAC environment using the <code dir="ltr">DBMS_SERVICE</code> package.</p>
<p>You must modify the service to set up its goal and the connection load balancing goal as follows:</p>
<pre dir="ltr">EXEC DBMS_SERVICE.MODIFY_SERVICE(&#34;myService&#34;,
     DBMS_SERVICE.GOAL_SERVICE_TIME,
     clb_goal =&gt; DBMS_SERVICE.CLB_GOAL_SHORT);
</pre>
<p>The constant <code dir="ltr">GOAL_SERVICE_TIME</code> specifies that Load Balancing Advisory is based on elapsed time for work done in the service plus bandwidth available to the service.</p>
<p>The constant <code dir="ltr">CLB_GOAL_SHORT</code> specifies that connection load balancing uses Load Balancing Advisory, when Load Balancing Advisory is enabled.You can set the connection balancing goal to <code dir="ltr">CLB_GOAL_LONG</code>. However, <code dir="ltr">CLB_GOAL_LONG</code> is typically useful for closed workloads (that is, when the rate of completing work is equal to the rate of starting new work).</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink RACAD8286" href="../RACAD/GUID-AEEE07D0-057A-4617-A716-9957D98B593D.htm#RACAD8286"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about enabling OCI clients to receive FAN events</p>
</li>
<li>
<p><a class="olink ARPLS092" href="../ARPLS/d_serv.htm#ARPLS092"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about <code dir="ltr">DBMS_SERVICE</code></p>
</li>
<li>
<p><a class="olink LNOCI17124" href="../LNOCI/oci16rel001.htm#LNOCI17124"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for information about <code dir="ltr">OCISessionPoolCreate()</code></p>
</li>
<li>
<p><a class="olink JJDBC28748" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=JJDBC28748"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for more information about runtime load balancing using the JDBC interface</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment286">
<tr>
<td class="cellalignment295">
<table class="cellalignment291">
<tr>
<td class="cellalignment290"><a href="adfns_design.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment290"><a href="adfns_secur.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment298">
<table class="cellalignment289">
<tr>
<td class="cellalignment290"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment290"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment290"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment290"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment290"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment290"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>