<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20the%20Oracle%20ODBC%20Driver"></a><title>Using the Oracle ODBC Driver</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1080"/>
<meta name="dcterms.created" content="2016-05-05T16:23:35Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Development Guide"/>
<meta name="dcterms.identifier" content="E41452-07"/>
<meta name="dcterms.isVersionOf" content="ADFNS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="adfns_publish.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adfns_idcode.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41452-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">32/38</span> <!-- End Header -->
<script>
<!-- // <![CDATA[
window.name='adfns_odbc'
// ]]> -->
</script> <script>
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote&nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="ADFNS1112" class="chapter"><a id="BABGJEHF"></a>
<h1 class="chapter"><span class="secnum">21</span> Using the Oracle ODBC Driver</h1>
<p>This chapter contains the following sections:</p>
<p class="subhead2"><a id="ADFNS218"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABEHFCD">About Oracle ODBC Driver</a></p>
</li>
<li>
<p><a href="#BABIBGJI">For All Users</a></p>
</li>
<li>
<p><a href="#BABGFHBE">For Advanced Users</a></p>
</li>
<li>
<p><a href="#BABICHJC">For Programmers</a></p>
</li>
</ul>
<a id="BABEHFCD"></a>
<div id="ADFNS1113" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">21.1</span> About Oracle ODBC Driver</h2>
<p class="subhead2"><a id="ADFNS1114"></a>What is ODBC?</p>
<p>Open Database Connectivity (ODBC) provides a standard interface that allows one application to access many different data sources. The application&#39;s source code does not have to be recompiled for each data source. A database driver links the application to a specific data source. A database driver is a dynamic-link library that an application can invoke on demand to gain access to a particular data source. Therefore, the application can access any data source for which a database driver exists.</p>
<p>The ODBC interface defines the following:</p>
<ul>
<li>
<p>A library of ODBC function calls that allows an application to connect to a data source, execute structured query language (SQL) statements, and retrieve results.</p>
</li>
<li>
<p>SQL syntax based on the SQL-99 specification.</p>
</li>
<li>
<p>A standard set of error codes.</p>
</li>
<li>
<p>A standard way to connect to and log in to a data source.</p>
</li>
<li>
<p>A standard representation for data types.</p>
</li>
</ul>
<p><a href="#BABEIGEE">Figure 21-1</a> shows the components of the ODBC model. The model begins with an ODBC application making a call to the Driver Manager through the ODBC application program interface (API). The Driver Manager can be either the Microsoft Driver Manager or the unixODBC Driver Manager. Still using the ODBC API, the Driver Manager makes a call to the ODBC Driver. The ODBC Driver accesses the database over a network communications link using the database API. <a href="#BABEIGEE">Figure 21-1</a> shows an ODBC application accessing three separate databases.</p>
<div id="ADFNS1115" class="figure">
<p class="titleinfigure"><a id="BABEIGEE"></a>Figure 21-1 Components of the ODBC Model</p>
<img width="477" height="396" src="img/odbcmodel.gif" alt="Description of Figure 21-1 follows"/><br/>
<a id="sthref1024" href="img_text/odbcmodel.htm">Description of &#39;&#39;Figure 21-1 Components of the ODBC Model&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p class="subhead2"><a id="ADFNS1116"></a>Related Topic</p>
<p><a href="#BABJFIEC">What is the Oracle ODBC Driver</a></p>
</div>
<!-- class="sect1" -->
<a id="BABIBGJI"></a>
<div id="ADFNS1117" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">21.2</span> For All Users</h2>
<p class="subhead2"><a id="ADFNS219"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABGEDCB">Oracle ODBC Driver</a></p>
</li>
<li>
<p><a href="#BABGJJAF">Configuration Tasks</a></p>
</li>
<li>
<p><a href="#BABHABJB">Modifying the oraodbc.ini File</a></p>
</li>
<li>
<p><a href="#BABDBDJG">Connecting to a Data Source</a></p>
</li>
<li>
<p><a href="#BABCHDJE">Troubleshooting</a></p>
</li>
</ul>
<a id="BABGEDCB"></a>
<div id="ADFNS1118" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.2.1</span> Oracle ODBC Driver</h3>
<p class="subhead2"><a id="ADFNS220"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABJFIEC">What is the Oracle ODBC Driver</a></p>
</li>
<li>
<p><a href="#BABCGECE">New and Changed Features</a></p>
</li>
<li>
<p><a href="#BABBDJAA">Features Not Supported</a></p>
</li>
<li>
<p><a href="#BABHEGHC">Files Created by the Installation</a></p>
</li>
<li>
<p><a href="#BABECBDH">Driver Conformance Levels</a></p>
</li>
<li>
<p><a href="#BABCICCF">Known Limitations</a></p>
</li>
</ul>
<a id="BABJFIEC"></a>
<div id="ADFNS1119" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.1.1</span> What is the Oracle ODBC Driver</h4>
<p>The Oracle ODBC Driver enables ODBC applications on Microsoft Windows, as well as UNIX platforms like Linux, Solaris, and IBM Advanced Interactive eXecutive (AIX) read and write access to Oracle&reg; databases through the ODBC interface using Oracle Net Services software.</p>
<p>The Oracle ODBC Driver uses the Oracle Call Interface (OCI) client and server software to submit requests to and receive responses from the data source. Oracle Net Services communications protocol is used for communications between the OCI client and the Oracle server.</p>
<p>The Oracle ODBC Driver translates ODBC SQL syntax into syntax that can be used to access the data source. When the results are returned from the data source, the Oracle ODBC Driver translates them back to ODBC SQL syntax.</p>
<p><a href="#BABJEDJJ">Figure 21-2</a> shows the Oracle ODBC Driver architecture as described in the preceding paragraphs.</p>
<div id="ADFNS1120" class="figure">
<p class="titleinfigure"><a id="BABJEDJJ"></a>Figure 21-2 Oracle ODBC Driver Architecture</p>
<img width="556" height="594" src="img/odbcdrvarch.gif" alt="Description of Figure 21-2 follows"/><br/>
<a id="sthref1025" href="img_text/odbcdrvarch.htm">Description of &#39;&#39;Figure 21-2 Oracle ODBC Driver Architecture&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>* The Oracle ODBC Resource data definition language (DLL) file (<code>sqres</code><code dir="ltr"><span class="codeinlineitalic">xx</span></code><code dir="ltr">.dll</code>), where <code dir="ltr"><span class="codeinlineitalic">xx</span></code> represents the language abbreviation, contains all pertinent language information; the default resource file used is <code dir="ltr">sqresus.dll</code>.</p>
<p>For more information about the OCI client and server software, refer to the OCI documentation.</p>
<p class="subhead2"><a id="ADFNS1121"></a>Related Topics</p>
<p><a href="#BABBCBHH">Configuring the Data Source</a></p>
<p><a href="#BABDBDJG">Connecting to a Data Source</a></p>
<p><a href="#BABECBDH">Driver Conformance Levels</a></p>
<p><a href="#BABCGECE">New and Changed Features</a></p>
<p><a href="#BABHEGHC">Files Created by the Installation</a></p>
</div>
<!-- class="sect3" -->
<a id="BABCGECE"></a>
<div id="ADFNS1122" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.1.2</span> New and Changed Features</h4>
<p class="subhead2"><a id="ADFNS221"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABEDIHI">New Features for Oracle ODBC Driver Release 12.1.0.1.0</a></p>
</li>
<li>
<p><a href="#BABBFBBG">New Features for Oracle ODBC Driver Release 11.2.0.1.0</a></p>
</li>
<li>
<p><a href="#BABHBGGB">New Features for Oracle ODBC Driver Release 11.1.0.1.0</a></p>
</li>
<li>
<p><a href="#BABDABCJ">New Features for Oracle ODBC Driver Release 10.1.0.2.0</a></p>
</li>
<li>
<p><a href="#BABCCDCJ">Changes for Oracle ODBC Driver Release 10.1.0.2.0</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABEDIHI"></a><a id="ADFNS1123"></a>New Features for Oracle ODBC Driver Release 12.1.0.1.0</p>
<p>Features of the Oracle ODBC Driver Release 12.1.0.1.0 software for the Microsoft Windows Server 2008, Windows Server 2008 R2, Windows 7, Windows 8, Windows Server 2012, Linux X86-64 (32/64 bit), Sun Solaris SPARC64 (32,64 bit), IBM AIX 5L (32,64 bit), Sun Solaris X64 (32,64 bit), HPUX IA64 (32,64 bit), ZLinux (32,64 bit) operating systems are described as follows:</p>
<ul>
<li>
<p>Oracle ODBC Driver now supports 32 KB data columns with <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code> and <code dir="ltr">RAW</code> data. See <a class="olink LNPLS99943" href="../LNPLS/datatypes.htm#LNPLS99943"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> and <a class="olink SQLRF55623" href="../SQLRF/sql_elements001.htm#SQLRF55623"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about creating 32 KB columns.</p>
</li>
<li>
<p>New parameters in the <code dir="ltr">odbc.ini</code> file or connection level attributes:</p>
<ul>
<li>
<p><code dir="ltr">SQL_TRANSLATE_ERRORS = {T|F}</code> [Default is <code dir="ltr">F</code> (false)]</p>
<p>Any migrated third party ODBC application, which is using the SQL Translation Framework feature, expects that errors returned by the server to be in their native database format, then users can register their translation of errors with the SQL Translation Profile in Oracle Database running in SQL Translation Framework mode. After error translation is registered, then ODBC application users can enable this option, <code dir="ltr">SQLTranslateErrors = T</code>, to receive native errors according to their registration.</p>
<p>For more information on SQL Translation Framework, see <span class="italic">Oracle Database Migration Guide</span>, in particular information about <a class="olink DRDAA131" href="../DRDAA/sql_transl_arch.htm#DRDAA131">SQL Translation Framework Architecture and Overview</a>, <a class="olink DRDAA132" href="../DRDAA/sql_transl_install.htm#DRDAA132">Translation Framework installation and configuration</a>, and <a class="olink DRDAA133" href="../DRDAA/sql_transl_ex.htm#DRDAA133">migration examples</a>.</p>
</li>
</ul>
<p>See <a href="#BABEFBFB">Table 21-5</a> for more information.</p>
</li>
<li>
<p>Oracle ODBC driver now supports executing a stored procedure, which can return implicit results without using <code dir="ltr">RefCursor</code>. This support eases any third party ODBC application, which migrated to Oracle and wants to use this same functionality that was provided by their previous vendors.</p>
<p>See <a class="olink DRDAA230" href="../DRDAA/migr_tools_feat.htm#DRDAA230"><span class="italic">Oracle Database Migration Guide</span></a> for more information about implicit results support by Oracle Database.</p>
</li>
<li id="BABHDJED">
<p>Extended support of <code dir="ltr">SQLColAttribute()</code> field identifiers to support Oracle Database auto increment feature. You can use this feature by including Oracle ODBC driver specific header file <code dir="ltr">sqora.h</code> in the application. See <a class="olink LNOCI16468" href="../LNOCI/oci06des.htm#LNOCI16468"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> for more information about auto increment:</p>
<ul>
<li>
<p><code dir="ltr">SQL_COLUMN_AUTO_INCREMENT</code></p>
<p>Starting from Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1), Oracle supports auto increment columns so the Oracle ODBC Driver has extended the same support through the existing <code dir="ltr">SQLColAttribute()</code> identifier <code dir="ltr">SQL_COLUMN_AUTO_INCREMENT</code>. This property is read-only and returns <code dir="ltr">SQL_TRUE</code> if the column is auto increment; otherwise, it returns <code dir="ltr">SQL_FALSE</code>.</p>
</li>
<li>
<p><code dir="ltr">SQL_ORCLATTR_COLUMN_PROP</code></p>
<p>Starting from Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1), Oracle ODBC Driver supports a new driver specific field identifier <code dir="ltr">SQL_ORCLATTR_COLUMN_PROP</code>, which returns the attributes of the column. This identifier returns <code dir="ltr">SQLULEN</code> value, which has all the column properties, shown as follows:</p>
<pre dir="ltr">+-----------------------------------------+
| 32 |...| 10 | 9 | 8 |......| 3 | 2 | 1  |
+-----------------------------------------+
                               |   |   |
                               |   |   |-&gt; Column is auto-increment?
                               |   |-&gt; Auto value is always generated?
                               |-&gt; If generated by default when null?
</pre></li>
</ul>
</li>
<li>
<p>ODBC APIs supported in Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1)</p>
<ul>
<li>
<p><code dir="ltr">SQLMoreResults()</code></p>
<p>Implements ODBC support for implicit results. See <a href="#BABIIHAC">Table 21-7</a> in <a href="#BABHEGBH">Section 21.4.11.2, &#34;Implementation of ODBC API Functions,&#34;</a> and <code dir="ltr"><a href="http://msdn.microsoft.com/en-us/library/ms714673(v=VS.85).aspx">http://msdn.microsoft.com/en-us/library/ms714673(v=VS.85).aspx</a></code> for more information.</p>
</li>
</ul>
</li>
</ul>
<p class="subhead2"><a id="BABBFBBG"></a><a id="ADFNS1124"></a>New Features for Oracle ODBC Driver Release 11.2.0.1.0</p>
<p>Features of the Oracle ODBC Driver Release 11.2.0.1.0 software for the Microsoft Windows XP, Microsoft Windows 2003 Server, Microsoft Windows Vista, Linux X86-32 (RHEL AS 4,5), Linux X86-64 (RHEL AS 4,5) (32/64 bit), Sun Solaris SPARC64 (9,10) (32,64 bit), IBM AIX 5L 5.2 (32,64 bit), Linux IA64 (64 bit), Linux on Power (32,64 bit), Sun Solaris X64 (64 bit), Hewlett Packard Itanium (32,64 bit) operating systems are described as follows:</p>
<ul>
<li>
<p>Prefetching of <code dir="ltr">LONG</code> and <code dir="ltr">LONG</code> <code dir="ltr">RAW</code> data</p>
<p>Oracle ODBC driver is enhanced to prefetch <code dir="ltr">LONG</code> or <code dir="ltr">LONG RAW</code> data to improve performance of ODBC applications. To do this, the maximum size of <code dir="ltr">LONG</code> data (<code dir="ltr">MaxLargeData</code>) must be set in the registry on Windows (you also must add the registry key <code dir="ltr">MaxLargeData</code> in the data source name (DSN)), and set this manually in the <code dir="ltr">odbc.ini</code> file on UNIX platforms. This enhancement improves the performance of Oracle ODBC driver up to 10 times, depending on the <code dir="ltr">MaxLargeData</code> size set by the user. The default value of <code dir="ltr">MaxLargeData</code> is 0. The maximum value for <code dir="ltr">MaxLargeData</code> that you can set is 64 KB (65536 bytes).</p>
<p>If the value of <code dir="ltr">MaxLargeData</code> is greater than 65536, the data fetched is only 65536 bytes. If your database has <code dir="ltr">LONG</code> or <code dir="ltr">LONG RAW</code> data that is greater that 65536 bytes, then set <code dir="ltr">MaxLargeData</code> to 0 (the default value), which causes single-row fetch and fetches complete <code dir="ltr">LONG</code> data. If you pass a buffer size less than the <code dir="ltr">MaxLargeData</code> size in nonpolling mode, a data truncation error occurs if the <code dir="ltr">LONG</code> data size in the database is greater than the buffer size.</p>
</li>
<li>
<p>Option for using <code dir="ltr">OCIDescribeAny()</code> for fetching metadata</p>
<p>When an application makes heavy calls to small packaged procedures that return <code dir="ltr">REF CURSORS</code>, a performance improvement can be made by forcing the driver to use <code dir="ltr">OCIDescribeAny()</code>. To enable this option, set the value of <code dir="ltr">UseOCIDescribeAny</code> in <code dir="ltr">odbc.ini</code> to <code dir="ltr">T</code> (True), default value is <code dir="ltr">F</code> (False), on UNIX platforms, and through the registry on Windows.</p>
</li>
</ul>
<p class="subhead2"><a id="BABHBGGB"></a><a id="ADFNS1125"></a>New Features for Oracle ODBC Driver Release 11.1.0.1.0</p>
<p>Features of the Oracle ODBC Driver Release 11.1.0.1.0 software for the Windows XP, Linux, Solaris, and IBM AIX operating systems are described as follows:</p>
<ul>
<li>
<p>Disable Rule Hint (DRH Connect String)</p>
<p>Added the new connection option, Disable RULE Hint that allows user to specify the option to select whether to use RULE Hint in catalog APIs. The change has been done to increase the performance of ODBC driver for catalog APIs. The default value for the option is <code dir="ltr">TRUE</code>, which means that RULE Hint is not used in catalog APIs by default.</p>
</li>
<li>
<p>Bind Number As Float (BNF Connect String)</p>
<p>Added the new connection option, Bind Number As Float. By introducing Column Binding for <code dir="ltr">NUMBER</code> Column as <code dir="ltr">FLOAT</code> when column contains float data speeds up the query execution that uses bind variables as <code dir="ltr">FLOAT</code>.</p>
</li>
<li>
<p>Statement Caching</p>
<p>Added support for OCI statement caching feature that provides and manages a cache of statements for each session. By implementing the support for OCI Statement Caching option, Oracle ODBC Driver performance improves when users parse the same statement multiple times in the same connection. The default value for the statement cache flag is <code dir="ltr">FALSE</code>.</p>
</li>
</ul>
<p class="subhead2"><a id="BABDABCJ"></a><a id="ADFNS1126"></a>New Features for Oracle ODBC Driver Release 10.1.0.2.0</p>
<p>Features of the Oracle ODBC Driver Release 10.1.0.2.0 software for the Windows 98, Windows 2000, Windows XP, and Windows NT X86 operating systems are described as follows:</p>
<ul>
<li>
<p>Bind <code dir="ltr">TIMESTAMP</code> as <code dir="ltr">DATE</code> (BTD Connect String)</p>
<p>Added the new connection option, Bind <code dir="ltr">TIMESTAMP</code> as <code dir="ltr">DATE</code>, that allows you to bind the ODBC driver <code dir="ltr">SQL_TIMESTAMP</code> data type to the Oracle <code dir="ltr">DATE</code> data type instead of to the Oracle <code dir="ltr">TIMESTAMP</code> data type (which is the default).</p>
</li>
<li>
<p><code dir="ltr">MONTHNAME (exp)</code> Function</p>
<p>Added support for the <code dir="ltr">MONTHNAME (exp)</code> function which returns the name of the month represented by the date expression. For example, &#39;April&#39;.</p>
</li>
<li>
<p><code dir="ltr">DAYNAME (exp)</code> Function</p>
<p>Added support for the <code dir="ltr">DAYNAME (exp)</code> function which returns the name of the day represented by the date expression. For example, &#39;Tuesday&#39;.</p>
</li>
<li>
<p>Instant Client Configuration</p>
<p>Added support for the Instant Client mode configuration.</p>
</li>
</ul>
<p class="subhead2"><a id="BABCCDCJ"></a><a id="ADFNS1127"></a>Changes for Oracle ODBC Driver Release 10.1.0.2.0</p>
<p>Changed or deprecated features of the Oracle ODBC Driver Release 10.1.0.2.0 include:</p>
<ul>
<li>
<p>Disable Microsoft Transaction Server</p>
<p>Changed the default setting for the Disable Microsoft Transaction Server (MTS) from <code dir="ltr">FALSE</code> to <code dir="ltr">TRUE</code>. By default, MTS support is disabled.</p>
</li>
<li>
<p>Floating Point Data Types</p>
<p>Changed the mapping of the Oracle data types, <code dir="ltr">BINARY_FLOAT</code> and <code dir="ltr">BINARY_DOUBLE</code>, to map to the ODBC data types, <code dir="ltr">SQL_REAL</code> and <code dir="ltr">SQL_DOUBLE</code>, respectively.</p>
</li>
<li>
<p>SQLGetData Extensions (GDE Connect String)</p>
<p>Deprecated the <code dir="ltr">SQLGetData</code> Extensions connection in this release. The functionality of this feature is always enabled.</p>
</li>
<li>
<p>Force Retrieval of Longs (FRL Connect String)</p>
<p>Deprecated the Force Retrieval of Longs connection option in this release. The functionality of this feature is always enabled.</p>
</li>
<li>
<p>Translation Options Configuration Tab</p>
<p>Deprecated the Translation Options tab previously found on the Oracle ODBC Driver Configuration dialog box in this release.</p>
</li>
<li>
<p>Release Notes</p>
<p>Renamed the Release Notes file from <code dir="ltr">ODBCRelnotes.wri</code> to <code dir="ltr">ODBCRelnotesUS.htm</code>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABBDJAA"></a>
<div id="ADFNS1128" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.1.3</span> Features Not Supported</h4>
<p>The Oracle ODBC Driver does not support the following ODBC 3.0 features:</p>
<ul>
<li>
<p>Interval data types</p>
</li>
<li>
<p><code dir="ltr">SQL_C_UBIGINT</code> and <code dir="ltr">SQL_C_SBIGINT</code> C data type identifiers</p>
</li>
<li>
<p>Shared connections</p>
</li>
<li>
<p>Shared environments</p>
</li>
<li>
<p>The <code dir="ltr">SQL_LOGIN_TIMEOUT</code> attribute of <code dir="ltr">SQLSetConnectAttr</code></p>
</li>
</ul>
<p><a href="#BABDEGAI">Table 21-1</a> describes the SQL functions that the Oracle ODBC Driver does not support.</p>
<div id="ADFNS1129" class="tblformal">
<p class="titleintable"><a id="sthref1026"></a><a id="BABDEGAI"></a>Table 21-1 SQL Functions Not Supported by the Oracle ODBC Driver</p>
<table class="cellalignment293" title="SQL Functions Not Supported by the Oracle ODBC Driver" summary="The table presents functions that are not supported by the Oracle ODBC Driver as three coumns of functions by function group name (string functions, numeric functions, and Time, Date, and Interval functions)." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t2">String Functions</th>
<th class="cellalignment294" id="r1c2-t2">Numeric Functions</th>
<th class="cellalignment294" id="r1c3-t2">Time, Date, and Interval Functions</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t2" headers="r1c1-t2">
<p><code dir="ltr">BIT_LENGTH</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t2 r1c2-t2">
<p><code dir="ltr">ACOS</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t2 r1c3-t2">
<p><code dir="ltr">CURRENT_DATE</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t2" headers="r1c1-t2">
<p><code dir="ltr">CHAR_LENGTH</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t2 r1c2-t2">
<p><code dir="ltr">ASIN</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t2 r1c3-t2">
<p><code dir="ltr">CURRENT_TIME</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t2" headers="r1c1-t2">
<p><code dir="ltr">CHARACTER_LENGTH</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t2 r1c2-t2">
<p><code dir="ltr">ATAN</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t2 r1c3-t2">
<p><code dir="ltr">CURRENT_TIMESTAMP</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DIFFERENCE</code></p>
</td>
<td class="cellalignment295" headers="r5c1-t2 r1c2-t2">
<p><code dir="ltr">ATAN2</code></p>
</td>
<td class="cellalignment295" headers="r5c1-t2 r1c3-t2">
<p><code dir="ltr">EXTRACT</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r6c1-t2" headers="r1c1-t2">
<p><code dir="ltr">OCTET_LENGTH</code></p>
</td>
<td class="cellalignment295" headers="r6c1-t2 r1c2-t2">
<p><code dir="ltr">COT</code></p>
</td>
<td class="cellalignment295" headers="r6c1-t2 r1c3-t2">
<p><code dir="ltr">TIMESTAMPDIFF</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r7c1-t2" headers="r1c1-t2">
<p><code dir="ltr">POSITION</code></p>
</td>
<td class="cellalignment295" headers="r7c1-t2 r1c2-t2">
<p><code dir="ltr">DEGREES</code></p>
</td>
<td class="cellalignment295" headers="r7c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r8c1-t2" headers="r1c1-t2">&nbsp;</td>
<td class="cellalignment295" headers="r8c1-t2 r1c2-t2">
<p><code dir="ltr">RADIANS</code></p>
</td>
<td class="cellalignment295" headers="r8c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r9c1-t2" headers="r1c1-t2">&nbsp;</td>
<td class="cellalignment295" headers="r9c1-t2 r1c2-t2">
<p><code dir="ltr">RAND</code></p>
</td>
<td class="cellalignment295" headers="r9c1-t2 r1c3-t2">&nbsp;</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r10c1-t2" headers="r1c1-t2">&nbsp;</td>
<td class="cellalignment295" headers="r10c1-t2 r1c2-t2">
<p><code dir="ltr">ROUND</code></p>
</td>
<td class="cellalignment295" headers="r10c1-t2 r1c3-t2">&nbsp;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect3" -->
<a id="BABHEGHC"></a>
<div id="ADFNS1130" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.1.4</span> Files Created by the Installation</h4>
<p><a href="#BABFJJBD">Table 21-2</a> describes the files that are installed by the Oracle ODBC Driver kit.</p>
<div id="ADFNS1131" class="tblformal">
<p class="titleintable"><a id="sthref1027"></a><a id="BABFJJBD"></a>Table 21-2 Files Installed by the Oracle ODBC Driver Kit</p>
<table class="cellalignment293" title="Files Installed by the Oracle ODBC Driver Kit" summary="This table describes the files installed by the Oracle ODBC Driver kit for the UNIX and Windows platforms and a brief description of what each file does." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t3">Description</th>
<th class="cellalignment294" id="r1c2-t3">File Name for Windows Installation</th>
<th class="cellalignment294" id="r1c3-t3">File Name for UNIX Installation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Database Access DLL</p>
</td>
<td class="cellalignment295" headers="r2c1-t3 r1c2-t3">
<p><code dir="ltr">sqora32.dll</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t3 r1c3-t3">
<p>libsqora.so.12.1</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver Setup DLL</p>
</td>
<td class="cellalignment295" headers="r3c1-t3 r1c2-t3">
<p><code dir="ltr">sqoras32.dll</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t3 r1c3-t3">
<p>None</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Resource DLL</p>
</td>
<td class="cellalignment295" headers="r4c1-t3 r1c2-t3">
<p><code dir="ltr">sqresus.dll</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t3 r1c3-t3">
<p>None</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Resource DLL for Japanese</p>
</td>
<td class="cellalignment295" headers="r5c1-t3 r1c2-t3">
<p><code dir="ltr">sqresja.dll</code></p>
</td>
<td class="cellalignment295" headers="r5c1-t3 r1c3-t3">
<p>None</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r6c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver message file</p>
</td>
<td class="cellalignment295" headers="r6c1-t3 r1c2-t3">
<p><code dir="ltr">oraodbcus.msb</code></p>
</td>
<td class="cellalignment295" headers="r6c1-t3 r1c3-t3">
<p><code dir="ltr">oraodbcus.msb</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r7c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver message file for Japanese</p>
</td>
<td class="cellalignment295" headers="r7c1-t3 r1c2-t3">
<p><code dir="ltr">oraodbcja.msb</code></p>
</td>
<td class="cellalignment295" headers="r7c1-t3 r1c3-t3">
<p><code dir="ltr">oraodbcja.msb</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r8c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver release notes</p>
</td>
<td class="cellalignment295" headers="r8c1-t3 r1c2-t3">
<p><a class="olink ODBCR" href="../ODBCR/toc.htm"><span class="italic">Oracle ODBC Driver Release Notes</span></a></p>
</td>
<td class="cellalignment295" headers="r8c1-t3 r1c3-t3">
<p><a class="olink ODBCR" href="../ODBCR/toc.htm"><span class="italic">Oracle ODBC Driver Release Notes</span></a></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r9c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver Instant Client Release Notes</p>
</td>
<td class="cellalignment295" headers="r9c1-t3 r1c2-t3">
<p><code dir="ltr">ODBC_IC_Readme_Win.html</code></p>
</td>
<td class="cellalignment295" headers="r9c1-t3 r1c3-t3">
<p><code dir="ltr">ODBC_IC_Readme_Unix.html</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r10c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver help file</p>
</td>
<td class="cellalignment295" headers="r10c1-t3 r1c2-t3">
<p><code dir="ltr">sqora.htm</code></p>
</td>
<td class="cellalignment295" headers="r10c1-t3 r1c3-t3">
<p><code dir="ltr">sqora.htm</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r11c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver help file for Japanese</p>
</td>
<td class="cellalignment295" headers="r11c1-t3 r1c2-t3">
<p><code dir="ltr">sqora.htm</code></p>
</td>
<td class="cellalignment295" headers="r11c1-t3 r1c3-t3">
<p><code dir="ltr">sqora.htm</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r12c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver Instant Client install script</p>
</td>
<td class="cellalignment295" headers="r12c1-t3 r1c2-t3">
<p><code dir="ltr">odbc_install.exe</code></p>
</td>
<td class="cellalignment295" headers="r12c1-t3 r1c3-t3">
<p><code dir="ltr">odbc_update_ini.sh</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r13c1-t3" headers="r1c1-t3">
<p>Oracle ODBC Driver Instant Client uninstall script</p>
</td>
<td class="cellalignment295" headers="r13c1-t3 r1c2-t3">
<p><code dir="ltr">odbc_uninstall.exe</code></p>
</td>
<td class="cellalignment295" headers="r13c1-t3 r1c3-t3">
<p>None</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="ADFNS1132"></a>Microsoft Driver Manager and Administrator Files</p>
<p>See the Microsoft ODBC 3.52 Software Development Kit and Programmer&#39;s Reference for the list of files that are installed with Microsoft&#39;s ODBC 3.52 Components.</p>
<p>The Microsoft ODBC components are packages in the Microsoft Data Access Component (MDAC) kit. Oracle ODBC driver on Windows has been tested using MDAC version 2.8. This can be downloaded from <code dir="ltr"><a href="http://www.microsoft.com/download/en/search.aspx?q=ODBC+MDAC">http://www.microsoft.com/download/en/search.aspx?q=ODBC+MDAC</a></code></p>
<p class="subhead2"><a id="ADFNS1133"></a>unixODBC Driver Manager and Administrator Files</p>
<p>See the unixODBC readme and INSTALL files for the list of files that are installed with unixODBC Driver Manager.</p>
<p>The unixODBC Driver Manager can be downloaded from <code dir="ltr"><a href="http://www.unixodbc.org/download.html">http://www.unixodbc.org/download.html</a></code></p>
</div>
<!-- class="sect3" -->
<a id="BABECBDH"></a>
<div id="ADFNS1134" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.1.5</span> Driver Conformance Levels</h4>
<p>ODBC defines Conformance Levels for drivers in two areas:</p>
<ul>
<li>
<p>ODBC application programming interface (API)</p>
</li>
<li>
<p>ODBC SQL-99 syntax</p>
</li>
</ul>
<p>The Oracle ODBC Driver supports all core API functionality and a limited set of Level 1 and Level 2 functionality. See <a href="#BABBCJCB">Section 21.4.11.1, &#34;API Conformance,&#34;</a> for more information.</p>
<p>The Oracle ODBC Driver is broadly compatible with the SQL-99 Core specification which is a superset of the SQL-92 Entry Level specification. Applications must call SQLGetInfo with the appropriate information type to retrieve a list of SQL-99 supported features.</p>
</div>
<!-- class="sect3" -->
<a id="BABCICCF"></a>
<div id="ADFNS1135" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.1.6</span> Known Limitations</h4>
<p>The following are not supported by Oracle ODBC driver:</p>
<ul>
<li>
<p>ODBC ASYNC interface</p>
</li>
<li>
<p>Control-C to cancel execution in an application</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABGJJAF"></a>
<div id="ADFNS1136" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.2.2</span> Configuration Tasks</h3>
<p class="subhead2"><a id="ADFNS222"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABDFDJB">Configuring Oracle Net Services</a></p>
</li>
<li>
<p><a href="#BABBCBHH">Configuring the Data Source</a></p>
</li>
<li>
<p><a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a></p>
</li>
</ul>
<a id="BABDFDJB"></a>
<div id="ADFNS1137" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.2.1</span> Configuring Oracle Net Services</h4>
<p>Before <a href="#BABBCBHH">Configuring the Data Source</a>, you must configure network database services so there is an entry for each Transparent Network Substrate (TNS) Service Name. To do this, use Oracle Net Configuration Assistant (NETCA).</p>
<p>Using NETCA, you can create an entry in the tnsnames.ora file for each TNS Service Name. NETCA is installed when you install Oracle Net Services.</p>
</div>
<!-- class="sect3" -->
<a id="BABBCBHH"></a>
<div id="ADFNS1138" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.2.2</span> Configuring the Data Source</h4>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following configuration steps are for Windows users. Unix users must use the <code dir="ltr">odbc_update_ini.sh</code> file to create a DSN.</div>
<p>After installing the Oracle ODBC Driver and <a href="#BABDFDJB">Configuring Oracle Net Services</a>, and before using the Oracle ODBC Driver, you must configure the data source.</p>
<p>Before an application can communicate with the data source, you must provide configuration information. The configuration information informs the Oracle ODBC Driver as to which information you want to access.</p>
<p>The data source consists of the data that you want to access, its associated operating system, database management system, and network platform used to access the database management system. The data source for requests submitted by the Oracle ODBC Driver is an Oracle database and supports transports available under Oracle Net Services.</p>
<p class="subhead2"><a id="ADFNS1139"></a>To configure or add an Oracle data source:</p>
<p>After you have installed the Oracle ODBC Driver, use the ODBC Data Source Administrator to configure or add an Oracle data source for each of your Oracle databases. The Oracle ODBC Driver uses the information you enter when you add the data source to access the data. Follow these steps:</p>
<ol>
<li>
<p>From the start menu, select Programs, Administrative Tools, Data Sources (ODBC). A list of installed drivers is displayed.</p>
</li>
<li>
<p>Click <span class="bold">Add</span> in the Create New Data Source window and then select the Oracle ODBC Driver in the list of installed drivers.</p>
</li>
<li>
<p>Click <span class="bold">Finish</span>. The <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a> is displayed. You must enter the DSN and TNS Service Name. You can provide the other information requested in the dialog box, or you can leave the fields blank and provide the information when you run the application.</p>
</li>
<li>
<p>After you have entered the data, click <span class="bold">OK</span> or click <span class="bold">Return</span>.</p>
</li>
</ol>
<p>You can change or delete a data source at any time. The following subtopics explain how to add, change, or delete a data source.</p>
<p class="subhead2"><a id="ADFNS1140"></a>To modify an Oracle data source:</p>
<ol>
<li>
<p>From the start menu, select <span class="bold">Programs, Administrative Tools, Data Sources(ODBC)</span>.</p>
</li>
<li>
<p>In the ODBC Data Source Administrator dialog box, select the data source from the Data Sources list and click <span class="bold">Configure</span>. The Oracle ODBC Driver Configuration dialog box is displayed.</p>
</li>
<li>
<p>In the <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a>, modify the option values as necessary and click <span class="bold">OK</span>.</p>
</li>
</ol>
<p class="subhead2"><a id="ADFNS1141"></a>To delete an Oracle data source:</p>
<ol>
<li>
<p>From the start menu, select <span class="bold">Programs, Administrative Tools, Data Sources(ODBC)</span>.</p>
</li>
<li>
<p>In the ODBC Data Source Administrator dialog box, select the data source you want to delete from the Data Sources list.</p>
</li>
<li>
<p>Click <span class="bold">Remove</span>, and then click <span class="bold">Yes</span> to confirm the deletion.</p>
</li>
</ol>
<p class="subhead2"><a id="ADFNS1142"></a>Related Topics</p>
<p><a href="#BABDCHIG">Connecting to an Oracle Data Source</a></p>
<p><a href="#BABCGCCI">Using the Oracle ODBC Driver for the First Time</a></p>
</div>
<!-- class="sect3" -->
<a id="BABEFEHG"></a>
<div id="ADFNS1143" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.2.3</span> Oracle ODBC Driver Configuration Dialog Box</h4>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Oracle ODBC Driver Configuration dialog box is available only for Microsoft Windows users.</div>
<p><a href="#BABHIHGI">Figure 21-3</a> is an example of the Oracle ODBC Driver Configuration dialog box.</p>
<div id="ADFNS1144" class="figure">
<p class="titleinfigure"><a id="BABHIHGI"></a>Figure 21-3 Oracle ODBC Driver Configuration Dialog Box</p>
<img width="563" height="428" src="img/setup_app.gif" alt="Description of Figure 21-3 follows"/><br/>
<a id="sthref1028" href="img_text/setup_app.htm">Description of &#39;&#39;Figure 21-3 Oracle ODBC Driver Configuration Dialog Box&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The following list is an explanation of the main setup options and fields found on the Oracle ODBC Driver Configuration dialog box shown in the preceding graphic. The tabs found on the lower half of this dialog box are described in subsequent topics.</p>
<ul>
<li>
<p><span class="bold">Data Source Name (DSN)</span> - The name used to identify the data source to ODBC. For example, &#34;odbc-pc&#34;. You must enter a DSN.</p>
</li>
<li>
<p><span class="bold">Description</span> - A description or comment about the data in the data source. For example, &#34;Hire date, salary history, and current review of all employees.&#34; The Description field is optional.</p>
</li>
<li>
<p><span class="bold">TNS Service Name</span> - The location of the Oracle database from which the ODBC driver will retrieve data. This is the same name entered in <a href="#BABDFDJB">Configuring Oracle Net Services</a> using the Oracle Net Configuration Assistant (NETCA). For more information, see the NETCA documentation and <a href="#BABCGCCI">Section 21.2.5.1, &#34;Using the Oracle ODBC Driver for the First Time.&#34;</a> The TNS Service Name can be selected from a pull-down list of available TNS names. For example, &#34;ODBC-PC&#34;. You must enter a TNS Service Name.</p>
</li>
<li>
<p><span class="bold">User ID</span> - The user name of the account on the server used to access the data. For example, &#34;scott&#34;. The User ID field is optional.</p>
</li>
</ul>
<p>You must enter the DSN and the TNS Service Name. You can provide the other information requested in the dialog box or you can leave the fields blank and provide the information when you run the application.</p>
<p>In addition to the main setup options previously described, there is a Test Connection button available. The Test Connection button verifies whether the ODBC environment is configured properly by connecting to the database specified by the DSN definition. When you press the Test Connection button, you are prompted for the username and password.</p>
<p>For an explanation of the Options tabs found on the lower half of the Oracle ODBC Driver Configuration dialog box, click any of these links:</p>
<p><a href="#BABEJFGH">Application Options</a></p>
<p><a href="#BABFJIJI">Oracle Options</a></p>
<p><a href="#BABIFAAB">Workarounds Options</a></p>
<p><a href="#BABDIDEF">SQL Server Migration Options</a></p>
<p class="subhead2"><a id="BABEJFGH"></a><a id="ADFNS1145"></a>Application Options</p>
<p><a href="#BABIDJBI">Figure 21-4</a> is an example of the Application Options tab found on the Oracle ODBC Driver Configuration dialog box.</p>
<div id="ADFNS1146" class="figure">
<p class="titleinfigure"><a id="BABIDJBI"></a>Figure 21-4 The Application Options Tab of the Oracle ODBC Driver Configuration Dialog Box</p>
<img width="563" height="428" src="img/setup_app.gif" alt="Description of Figure 21-4 follows"/><br/>
<a id="sthref1029" href="img_text/setup_app.htm">Description of &#39;&#39;Figure 21-4 The Application Options Tab of the Oracle ODBC Driver Configuration Dialog Box&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The following list is an explanation of the fields found on the Application Options tab shown in the preceding graphic:</p>
<ul>
<li>
<p><span class="bold">Enable Result Sets</span> - Enables the processing of Oracle Result Sets. If Result Sets are not required for your application, Result Set support can be disabled. There is a small performance penalty for procedures called from packages not containing Result Sets. Result Sets are enabled by default.</p>
</li>
<li>
<p><span class="bold">Enable Query Timeout</span> - Enables query timeout for SQL queries. By default, the Oracle ODBC Driver supports the <code dir="ltr">SQL_ATTR_QUERY_TIMEOUT</code> attribute for the SQLSetStmtAttr function. If this box is not checked, the Oracle ODBC Driver responds with a &#34;not capable&#34; message. Query Timeout is enabled by default.</p>
</li>
<li>
<p><span class="bold">Read-Only Connection</span> - Check this box to force read-only access. The default is write access.</p>
</li>
<li>
<p><span class="bold">Enable Closing Cursors</span> - Enables closing cursors. By default, closing cursors is disabled (the field is empty), meaning a call to close a cursor does not force the closing of OCI cursors when this behavior is not desired because it can cause an unnecessary performance hit. Enable closing cursors when you want to force the closing of OCI cursors upon a call to close a cursor.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
There is an impact on performance each time a cursor is closed.</div>
<ul>
<li>
<p><span class="bold">Enable Thread Safety</span> - Thread safety can be disabled for a data source. If thread safety is not required, disabling this option eliminates the overhead of using thread safety. By default, thread safety is enabled.</p>
</li>
<li>
<p><span class="bold">Batch Autocommit Mode</span> - By default, commit is executed only if all statements succeed.</p>
</li>
<li>
<p><span class="bold">Numeric Settings</span> - Allows you to choose the numeric settings that determine the decimal and group separator characters when receiving and returning numeric data that is bound as strings. This option allows you to choose Oracle NLS settings (the default setting), Microsoft default regional settings (to provide a way to mirror the Oracle OLE DB driver&#39;s behavior for greater interoperability), or US numeric settings (which are necessary when using MS Access or DAO (Database Access Objects) in non-US environments).</p>
</li>
</ul>
<p>The main configuration setup options are described in the <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a> topic.</p>
<p class="subhead2"><a id="BABFJIJI"></a><a id="ADFNS1147"></a>Oracle Options</p>
<p><a href="#BABGBICJ">Figure 21-5</a> is an example of the Oracle Options tab found on the Oracle ODBC Driver Configuration dialog box.</p>
<div id="ADFNS1148" class="figure">
<p class="titleinfigure"><a id="BABGBICJ"></a>Figure 21-5 The Oracle Options Tab of the Oracle ODBC Driver Configuration Dialog Box</p>
<img width="569" height="423" src="img/setup_ora.gif" alt="Description of Figure 21-5 follows"/><br/>
<a id="sthref1030" href="img_text/setup_ora.htm">Description of &#39;&#39;Figure 21-5 The Oracle Options Tab of the Oracle ODBC Driver Configuration Dialog Box&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The following list is an explanation of the fields found on the Oracle Options tab shown in the preceding graphic:</p>
<ul>
<li>
<p><span class="bold">Fetch Buffer Size</span> - The amount of memory used to determine how many rows of data the ODBC Driver prefetches at a time from an Oracle database regardless of the number of rows the application program requests in a single query. However, the number of prefetched rows depends on the width and number of columns specified in a single query. Applications that typically fetch fewer than 20 rows of data at a time improve their response time, particularly over slow network connections or to heavily loaded servers. Setting Fetch Buffer Size too high can make response time worse or consume large amounts of memory.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
When <code dir="ltr">LONG</code> and LOB data types are present, the number of rows prefetched by the ODBC Driver is not determined by the Fetch Buffer Size. The inclusion of the <code dir="ltr">LONG</code> and LOB data types minimizes the performance improvement and could result in excessive memory use. The ODBC Driver disregards Fetch Buffer Size and prefetches a set number of rows only in the presence of the <code dir="ltr">LONG</code> and LOB data types.</div>
<ul>
<li>
<p><span class="bold">Enable LOBs</span> - Enables the writing of Oracle LOBs. If writing Oracle LOBs is not required for your application, LOB support can be disabled. There is a small performance penalty for insert and update statements when LOBs are enabled. LOB writing is enabled by default but disabled for Oracle databases that do not support the LOB data type.</p>
</li>
<li>
<p><span class="bold">Enable Statement Caching</span> - Enables statement caching feature, which increases the performance of parsing the query, in case the user has to parse the same text of query and related parameters multiple times. The default is disabled.</p>
</li>
<li>
<p><span class="bold">Cache Buffer Size</span> - The statement cache has a maximum size (number of statements) that can be modified by an attribute on the service context, <code dir="ltr">OCI_ATTR_STMTCACHESIZE</code>. The default cache buffer size is 20 that are used only if statement caching option is enabled. Setting cache buffer size to 0 disables statement caching feature.</p>
</li>
<li>
<p><span class="bold">Max Token Size</span> - Sets the token size to the nearest multiple of 1 KB (1024 bytes) beginning at 4 KB (4096 bytes). The default size is 8 KB (8192 bytes). The maximum value that can be set is 128 KB (131068 bytes).</p>
</li>
<li>
<p><span class="bold">Translate ORA errors</span> - Any migrated third party ODBC application, which is using the SQL Translation Framework feature, expects that errors returned by the server to be in their native database format, then users can enable this option to receive native errors based on the error translation registered with SQL Translation Profile.</p>
</li>
<li>
<p><span class="bold">Convert Empty String</span> - Any third party ODBC application that is migrated to Oracle Database requires handling empty string data (Oracle Database does not handle empty string data in table columns), then they can enable this option so that the application can insert empty string data or retrieve empty string data.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This feature is not implemented for Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1).</div>
</li>
</ul>
<p>The Failover area of the Oracle Options tab contains the following fields:</p>
<ul>
<li>
<p><span class="bold">Enable Failover</span> - Enables Oracle Fail Safe and Oracle Parallel Server failover retry. This option in an enhancement to the failover capabilities of Oracle Fail Safe and Oracle Parallel Server. Enable this option to configure additional failover retries. The default is enabled.</p>
</li>
<li>
<p><span class="bold">Retry</span> - The number of times the connection failover is attempted. The default is 10 attempts.</p>
</li>
<li>
<p><span class="bold">Delay</span> - The number of seconds to delay between failover attempts. The default is 10 seconds.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
See the Oracle Fail Safe and Oracle Parallel Server documentation on how to set up and use both of these products.</div>
<p>The main configuration setup options are described in the <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a> topic.</p>
<p class="subhead2"><a id="BABIFAAB"></a><a id="ADFNS1149"></a>Workarounds Options</p>
<p><a href="#BABIGDJC">Figure 21-6</a> is an example of the Workarounds Options tab found on the Oracle ODBC Driver Configuration dialog box.</p>
<div id="ADFNS1150" class="figure">
<p class="titleinfigure"><a id="BABIGDJC"></a>Figure 21-6 The Workarounds Options Tab of the Oracle ODBC Driver Configuration Dialog Box</p>
<img width="563" height="425" src="img/setup_work.gif" alt="Description of Figure 21-6 follows"/><br/>
<a id="sthref1031" href="img_text/setup_work.htm">Description of &#39;&#39;Figure 21-6 The Workarounds Options Tab of the Oracle ODBC Driver Configuration Dialog Box&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The following list is an explanation of the fields found on the Workarounds Options tab shown in the preceding graphic:</p>
<ul>
<li>
<p><span class="bold">Bind TIMESTAMP as DATE</span> - Check this box to force the Oracle ODBC Driver to bind <code dir="ltr">SQL_TIMESTAMP</code> parameters as the Oracle <code dir="ltr">DATE</code> type instead of as the Oracle <code dir="ltr">TIMESTAMP</code> type (the default). For more information, see <a href="#BABBAEEH">Section 21.3.4, &#34;Implementation of Data Types (Advanced).&#34;</a></p>
</li>
<li>
<p><span class="bold">Force SQL_WCHAR Support</span> - Check this box to enable SQLDescribeCol, SQLColumns, and SQLProcedureColumns to unconditionally return the data type of <code dir="ltr">SQL_WCHAR</code> for <code dir="ltr">SQL_CHAR</code> columns; <code dir="ltr">SQL_WVARCHAR</code> for <code dir="ltr">SQL_VARCHAR</code> columns; and <code dir="ltr">SQL_WLONGVARCHAR</code> for <code dir="ltr">SQL_LONGVARCHAR</code> columns. This feature enables Unicode support in applications that rely on the results of these ODBC calls (for example, ADO). This support is disabled by default.</p>
</li>
<li>
<p><span class="bold">Disable Microsoft Transaction Server</span> - Clear the check in this box to enable Microsoft Transaction Server (MTS) support. By default, MTS support is disabled.</p>
</li>
<li>
<p><span class="bold">Set Metadata Id Default to SQL_TRUE</span> - Check this box to change the default value of the <code dir="ltr">SQL_ATTR_METADATA_ID</code> connection and statement attribute at connection time to <code dir="ltr">SQL_TRUE</code>. Under normal circumstances, <code dir="ltr">SQL_ATTR_METADATA_ID</code> would default to <code dir="ltr">SQL_FALSE</code>. ODBC calls made by the application to specifically change the value of the attribute after connection time are unaffected by this option and complete their functions as expected. By default, this option is off. The <a href="#BABHEGBH">Implementation of ODBC API Functions</a> topic provides additional information about the <code dir="ltr">SQL_ATTR_METADATA_ID</code> attribute.</p>
</li>
<li>
<p><span class="bold">Prefetch size for LONG column data</span> - Set this value to prefetch <code dir="ltr">LONG</code> or <code dir="ltr">LONG RAW</code> data to improve performance of ODBC applications. This enhancement improves the performance of Oracle ODBC driver up to 10 times, depending on the prefetch size set by the user. The default value is 0. The maximum value that you can set is 64 KB (65536 bytes).</p>
<p>If the value of prefetch size is greater than 65536, the data fetched is only 65536 bytes. If you have <code dir="ltr">LONG</code> or <code dir="ltr">LONG RAW</code> data in the database that is greater that 65536 bytes, then set the prefetch size to 0 (the default value), which causes single-row fetch and fetches complete <code dir="ltr">LONG</code> data. If you pass a buffer size less than the prefetch size in nonpolling mode, a data truncation error occurs if the <code dir="ltr">LONG</code> data size in the database is greater than the buffer size.</p>
</li>
<li>
<p><span class="bold">Disable SQLDescribeParam</span> - If the <code dir="ltr">SQLDescribeParam</code> function is enabled, the <code dir="ltr">SQL_VARCHAR</code> data type is returned for all parameters. If the Force SQL_WCHAR Support function is also enabled, the <code dir="ltr">SQL_WVARCHAR</code> data type is returned for all parameters. By default, this function is enabled.</p>
</li>
<li>
<p><span class="bold">Bind NUMBER as FLOAT</span> - Check this box to force the Oracle ODBC Driver to bind <code dir="ltr">NUMBER</code> column containing <code dir="ltr">FLOAT</code> data as Float instead of as the Binary Float (the default).</p>
</li>
<li>
<p><span class="bold">Disable RULE Hint</span> - Clear the check in this box to enable <code dir="ltr">RULE Hint</code> specified with catalogue queries. By default, <code dir="ltr">RULE Hint</code> option is disabled.</p>
</li>
<li>
<p><span class="bold">Use OCIDescribeAny</span> - Check this box to gain a performance improvement by forcing the driver to use <code dir="ltr">OCIDescribeAny()</code>when an application makes heavy calls to small packaged procedures that return <code dir="ltr">REF CURSORS</code>.</p>
</li>
</ul>
<p>The main configuration setup options are described in the <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a> topic.</p>
<p class="subhead2"><a id="BABDIDEF"></a><a id="ADFNS1151"></a>SQL Server Migration Options</p>
<p><a href="#BABIIBJE">Figure 21-7</a> is an example of the SQL Server Migration Options tab found on the Oracle ODBC Driver Configuration dialog box.</p>
<div id="ADFNS1152" class="figure">
<p class="titleinfigure"><a id="BABIIBJE"></a>Figure 21-7 The SQL Server Migration Options Tab of the Oracle ODBC Driver Configuration Dialog Box</p>
<img width="561" height="425" src="img/setup_ssmig.gif" alt="Description of Figure 21-7 follows"/><br/>
<a id="sthref1032" href="img_text/setup_ssmig.htm">Description of &#39;&#39;Figure 21-7 The SQL Server Migration Options Tab of the Oracle ODBC Driver Configuration Dialog Box&#39;&#39;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The fields of the SQL Server Migration Options tab in the preceding graphic are:</p>
<ul>
<li>
<p><span class="bold">EXEC Syntax Enabled</span>, which enables support for SQL Server EXEC syntax. A subprogram call specified in an EXEC statement is translated to its equivalent Oracle subprogram call before being processed by an Oracle database server. By default this option is disabled.</p>
</li>
<li>
<p><span class="bold">Schema</span>, which is the translated Oracle subprogram assumed to be defined in the user&#39;s default schema. However, if all subprograms from the same SQL Server database are migrated to the same Oracle schema with their database name as the schema name, then set this field to database. If all subprograms owned by the same SQL Server user are defined in the same Oracle schema, then set this field to owner. This field is empty by default.</p>
</li>
</ul>
<p>The main configuration setup options are described in the <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a> topic.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHABJB"></a>
<div id="ADFNS1153" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.2.3</span> Modifying the oraodbc.ini File</h3>
<p class="subhead2"><a id="ADFNS223"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABEGGIB">Reducing Lock Timeout</a></p>
</li>
</ul>
<a id="BABEGGIB"></a>
<div id="ADFNS1154" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.3.1</span> Reducing Lock Timeout</h4>
<p>An Oracle server waits indefinitely for lock conflicts between transactions to be resolved. You can limit the amount of time that an Oracle server waits for locks to be resolved by setting the Oracle ODBC Driver&#39;s <code dir="ltr">LockTimeOut</code> entry in the <code dir="ltr">oraodbc.ini</code> file. The value you enter for the <code dir="ltr">LockTimeOut</code> parameter is the number of seconds after which an Oracle server times out if it cannot obtain the requested locks. In the following example, the Oracle server times out after 60 seconds:</p>
<pre dir="ltr">[Oracle ODBC Driver Common]
LockTimeOut=60
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDBDJG"></a>
<div id="ADFNS1155" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.2.4</span> Connecting to a Data Source</h3>
<p class="subhead2"><a id="ADFNS352"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABDCHIG">Connecting to an Oracle Data Source</a></p>
</li>
</ul>
<a id="BABDCHIG"></a>
<div id="ADFNS1156" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.4.1</span> Connecting to an Oracle Data Source</h4>
<p>To connect to a Data Source, the Oracle ODBC Driver requires that the OCI client software be installed on your computer and the corresponding listener be running on the Oracle server. Oracle Net Services for Windows is a Dynamic Linked Library (DLL) based application. For more information about Oracle Net Services, see the Oracle Net Services documentation.</p>
<p>As part of the connection process, an application can prompt you for information. If an application prompts you for information about an Oracle data source, do the following:</p>
<ol>
<li>
<p>In the TNS Service Name box, enter the name of the TNS service.</p>
</li>
<li>
<p>In the User Name box, enter the name you use to access an Oracle Database.</p>
</li>
<li>
<p>In the Password box, enter the password you use to access an Oracle Database.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
</ol>
<p>An application must connect to a data source to access the data in it. Different applications connect to data sources at different times. For example, an application might connect to a data source only at your request, or it might connect automatically when it starts. For information about when an application connects to a data source, see the documentation for that application.</p>
<p>For additional information, click any of these links.</p>
<p class="subhead2"><a id="ADFNS1157"></a>Related Topic for All Users</p>
<p><a href="#BABBCBHH">Configuring the Data Source</a></p>
<p class="subhead2"><a id="ADFNS1158"></a>Related Topics for Programmers</p>
<p><a href="#BABIDEDG">SQLDriverConnect Implementation</a></p>
<p><a href="#BABFHDGC">Data Source Configuration Options</a></p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABCHDJE"></a>
<div id="ADFNS1159" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.2.5</span> Troubleshooting</h3>
<p class="subhead2"><a id="ADFNS353"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABCGCCI">Using the Oracle ODBC Driver for the First Time</a></p>
</li>
<li>
<p><a href="#BABGAIIC">Expired Password</a></p>
</li>
</ul>
<a id="BABCGCCI"></a>
<div id="ADFNS1160" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.5.1</span> Using the Oracle ODBC Driver for the First Time</h4>
<div class="infobox-note">
<p class="notep1">Note:</p>
This information is only for Microsoft Windows users.</div>
<p>For the Oracle ODBC Driver to function successfully, <code dir="ltr"><span class="codeinlineitalic">OracleHome</span></code><code dir="ltr">/bin</code> must be in the system path. To verify this, type <code dir="ltr">PATH</code> from a command prompt.</p>
<p>The first time you use Oracle ODBC Driver and attempt to connect to a database or table, you might see these messages:</p>
<ul>
<li>
<p><a href="#BABBBDJJ">Your machine or server system is missing required software</a></p>
</li>
<li>
<p><a href="#BABFHCGE">Client/Server connectivity is incorrectly set up on your machine</a></p>
</li>
<li>
<p><a href="#BABEDFBJ">TNS Service Name does not match the name that was entered in the Oracle Net Configuration Assistant (NETCA)</a></p>
</li>
<li>
<p><a href="#BABIAJII">User does not have access to the database</a></p>
</li>
<li>
<p><a href="#BABDJAFH">System Error: 182 or 193 when trying to create an ODBC DSN</a></p>
</li>
<li>
<p><a href="#BABDEJDH">Translator Library could not be loaded system error code 31</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABBBDJJ"></a><a id="ADFNS1436"></a>Your machine or server system is missing required software</p>
<br/>
<span class="bold">Problem:</span> Oracle ODBC Driver fails to work.<br/>
<span class="bold">Cause:</span> Either OCI software is not installed on your machine or Oracle database software is not installed on your server system.<br/>
<span class="bold">Recommended Action:</span> Install the required OCI software on your client machine or Oracle database software on your server system or both.
<p class="subhead2"><a id="BABFHCGE"></a><a id="ADFNS1437"></a>Client/Server connectivity is incorrectly set up on your machine</p>
<br/>
<span class="bold">Problem:</span> Cannot connect to the server system from your machine.<br/>
<span class="bold">Cause:</span> Either the required transport software is not installed or is not configured correctly.<br/>
<span class="bold">Recommended Action:</span> As a test, for example when using TCP/IP, make sure that your machine can ping to the server where the Oracle database resides. Use <code dir="ltr">tnsping.exe</code> located in the <code dir="ltr">/orant/bin</code> or <code dir="ltr">/Oracle/ora90/bin</code> directory to ensure connectivity to a specific database service. For example:<br/>
<code dir="ltr">C:/ORANT/BIN&gt;tnsping database-service-name</code>
<p class="subhead2"><a id="BABEDFBJ"></a><a id="ADFNS1438"></a>TNS Service Name does not match the name that was entered in the Oracle Net Configuration Assistant (NETCA)</p>
<br/>
<span class="bold">Problem:</span> The user is returned an error message about the TNS Service Name while attempting to set up the Oracle ODBC Driver.<br/>
<span class="bold">Cause:</span> The TNS Service Name does not match the name entered in NETCA.<br/>
<span class="bold">Recommended Action:</span> Change the TNS Service Name in the Oracle ODBC Driver setup window to match the TNS Service Name in NETCA.
<div class="infobox-note">
<p class="notep1">Note:</p>
Refer to the pull-down menu on the Datasource Configuration screen to view a list of all valid TNS service names on the system as well as names entered by users.</div>
<p class="subhead2"><a id="BABIAJII"></a><a id="ADFNS1439"></a>User does not have access to the database</p>
<br/>
<span class="bold">Problem:</span> The user is returned an access denied error message when attempting to gain access to an Oracle database while using the Oracle ODBC Driver.<br/>
<span class="bold">Cause:</span> You do not have access to an Oracle database.<br/>
<span class="bold">Recommended Action:</span> Ensure the proper privileges are assigned for the user to gain access to the Oracle database.
<p class="subhead2"><a id="BABDJAFH"></a><a id="ADFNS1440"></a>System Error: 182 or 193 when trying to create an ODBC DSN</p>
<br/>
<span class="bold">Problem:</span> You are trying to create a DSN with the ODBC Administrator but, after selecting the Oracle ODBC Driver, you received a System Error 182 or System Error 193.<br/>
<span class="bold">Cause:</span> This error is due to a mismatch in the <code dir="ltr">mfc42.dll</code> provided by Microsoft.<br/>
<span class="bold">Recommended Action:</span> Verified that <code dir="ltr"><span class="codeinlineitalic">OracleHome</span></code><code dir="ltr">/bin</code> is in your <code dir="ltr">PATH</code> and that you have no duplicate <code dir="ltr">oci.dll</code> outside the <code dir="ltr"><span class="codeinlineitalic">OracleHome</span></code><code dir="ltr">/bin</code>. If you still receive the error, copy the <code dir="ltr">mfc42.dll</code> from a working machine to the machine with the problem.
<p class="subhead2"><a id="BABDEJDH"></a><a id="ADFNS1441"></a>Translator Library could not be loaded system error code 31</p>
<br/>
<span class="bold">Problem:</span> On Windows with the Oracle ODBC Driver in the Microsoft ODBC Administrator trying to Add or Delete an Oracle ODBC DSN, you get the error &#34;Translator Library could not be loaded System error code 31.&#34;<br/>
<span class="bold">Cause:</span> In some cases, a Windows machine contains an outdated version of the <code dir="ltr">mfc42.dll</code>. Oracle ODBC is built against the newer version of <code dir="ltr">mfc42.dll</code> (specifically, version 6.0.8665.0).<br/>
<span class="bold">Recommended Action:</span> An outdated version of the Microsoft DLL <code dir="ltr">mfc42.dll</code> is causing this error. Installing MDAC 2.5 SP1 does solve this problem. You must obtain a newer version of the <code dir="ltr">mfc42.dll</code> (version 6.0.8665.0 or higher) and replace the outdated <code dir="ltr">mfc42.dll</code> in the <code dir="ltr"><span class="codeinlineitalic">%</span></code><code dir="ltr">WINNT</code><code dir="ltr">%/System32</code> directory. Either copy the DLL from another machine that works correctly or contact Microsoft to find out how to obtain the DLL.</div>
<!-- class="sect3" -->
<a id="BABGAIIC"></a>
<div id="ADFNS1161" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.2.5.2</span> Expired Password</h4>
<p>This section contains information about expired passwords.</p>
<p class="subhead2"><a id="ADFNS1162"></a>Expired Password Behavior</p>
<p>If you try to connect to the database and your password has expired, you are prompted to change your password. Upon making a successful password change, you are connected to the database. However, if you try to connect to the database with a <code dir="ltr">SQLDriverConnect</code> call with a <code dir="ltr">SQL_DRIVER_NOPROMPT</code> parameter value, the Oracle ODBC Driver does not prompt you for the password change. Instead, an error condition results, producing an error message and number that indicates that the password has expired.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABGFHBE"></a>
<div id="ADFNS1163" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">21.3</span> For Advanced Users</h2>
<p class="subhead2"><a id="ADFNS354"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABCHHFC">Creating Oracle ODBC Driver TNS Service Names</a></p>
</li>
<li>
<p><a href="#BABIDECD">SQL Statements</a></p>
</li>
<li>
<p><a href="#BABCIACJ">Data Types</a></p>
</li>
<li>
<p><a href="#BABBAEEH">Implementation of Data Types (Advanced)</a></p>
</li>
<li>
<p><a href="#BABBJIBH">Limitations on Data Types</a></p>
</li>
<li>
<p><a href="#BABCCDFB">Error Messages</a></p>
</li>
</ul>
<a id="BABCHHFC"></a>
<div id="ADFNS1164" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.3.1</span> Creating Oracle ODBC Driver TNS Service Names</h3>
<p>To create Oracle ODBC Driver TNS Service Names with Oracle Net Services, use the Oracle Net Configuration Assistant (NETCA), which is installed when you install Oracle Net Services. NETCA creates Oracle ODBC Driver TNS Service Name entries in the tnsnames.ora file.</p>
</div>
<!-- class="sect2" -->
<a id="BABIDECD"></a>
<div id="ADFNS1165" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.3.2</span> SQL Statements</h3>
<p>The Oracle ODBC Driver is broadly compatible with the SQL-99 Core specification which is a superset of the SQL-92 Entry Level specification. In addition to Oracle&#39;s grammar, the vendor-specific escape sequences outlined in Appendix C of the ODBC specifications are also supported. In accordance with the design of ODBC, the Oracle ODBC Driver passes native SQL syntax to the Oracle database.</p>
<p class="subhead2"><a id="ADFNS1166"></a>Related Topic for Advanced Users</p>
<p><a href="#BABCIACJ">Data Types</a></p>
<p class="subhead2"><a id="ADFNS1167"></a>Related Topic for Programmers</p>
<p><a href="#BABIDAGF">Implementation of the ODBC SQL Syntax</a></p>
</div>
<!-- class="sect2" -->
<a id="BABCIACJ"></a>
<div id="ADFNS1168" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.3.3</span> Data Types</h3>
<p>The Oracle ODBC Driver maps Oracle database data types to ODBC SQL data types.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
All conversions in Appendix D of the <span class="italic">Microsoft ODBC 3.52 Software Development Kit and Programmer&#39;s Reference</span> are supported for the ODBC SQL data types listed from a call to <code dir="ltr">SQLGetInfo</code> with the appropriate information type.</div>
<p class="subhead2"><a id="ADFNS1169"></a>Related Topics for Advanced Users</p>
<p><a href="#BABBAEEH">Implementation of Data Types (Advanced)</a></p>
<p><a href="#BABBJIBH">Limitations on Data Types</a></p>
<p><a href="#BABIDECD">SQL Statements</a></p>
<p class="subhead2"><a id="ADFNS1170"></a>Related Topic for Programmers</p>
<p><a href="#BABEJGEG">Implementation of Data Types (Programming)</a></p>
</div>
<!-- class="sect2" -->
<a id="BABBAEEH"></a>
<div id="ADFNS1171" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.3.4</span> Implementation of Data Types (Advanced)</h3>
<p class="subhead2"><a id="ADFNS355"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABDCGGG">DATE and TIMESTAMP</a></p>
</li>
<li>
<p><a href="#BABBCEHB">Floating Point Data Types</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABDCGGG"></a><a id="ADFNS1172"></a>DATE and TIMESTAMP</p>
<p>The semantics of Oracle <code dir="ltr">DATE</code> and <code dir="ltr">TIMESTAMP</code> data types do not correspond exactly with the ODBC data types with the same names. The Oracle <code dir="ltr">DATE</code> data type contains both date and time information while the <code dir="ltr">SQL_DATE</code> data type contains only date information. The Oracle <code dir="ltr">TIMESTAMP</code> data type also contains date and time information, but it has greater precision in fractional seconds. The ODBC Driver reports the data types of both Oracle <code dir="ltr">DATE</code> and <code dir="ltr">TIMESTAMP</code> columns as <code dir="ltr">SQL_TIMESTAMP</code> to prevent information loss. Similarly the ODBC Driver binds <code dir="ltr">SQL_TIMESTAMP</code> parameters as Oracle <code dir="ltr">TIMESTAMP</code> values.</p>
<p class="subhead2"><a id="BABBCEHB"></a><a id="ADFNS1173"></a>Floating Point Data Types</p>
<p>When connected to a 10.1 or later Oracle server, the ODBC Driver maps the Oracle floating point data types <code dir="ltr">BINARY_FLOAT</code> and <code dir="ltr">BINARY_DOUBLE</code> to the ODBC data types <code dir="ltr">SQL_REAL</code> and <code dir="ltr">SQL_DOUBLE</code>, respectively. In previous releases, <code dir="ltr">SQL_REAL</code> and <code dir="ltr">SQL_DOUBLE</code> mapped to the generic Oracle numeric data type.</p>
<p class="subhead2"><a id="ADFNS1174"></a>Related Topic</p>
<p><a href="#BABDHDBB">DATE and TIMESTAMP Data Types</a></p>
</div>
<!-- class="sect2" -->
<a id="BABBJIBH"></a>
<div id="ADFNS1175" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.3.5</span> Limitations on Data Types</h3>
<p>The Oracle ODBC Driver and the Oracle database impose limitations on data types. <a href="#BABIJGDI">Table 21-3</a> describes these limitations.</p>
<div id="ADFNS1176" class="tblformal">
<p class="titleintable"><a id="sthref1033"></a><a id="BABIJGDI"></a>Table 21-3 Limitations Imposed on Data Types by the Oracle ODBC Driver and Oracle Database</p>
<table class="cellalignment293" title="Limitations Imposed on Data Types by the Oracle ODBC Driver and Oracle Database" summary="This table describes the limitations on data types imposed by the Oracle ODBC Driver and Oracle database." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t13">Limited Data Type</th>
<th class="cellalignment294" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t13" headers="r1c1-t13">
<p>Literals</p>
</td>
<td class="cellalignment295" headers="r2c1-t13 r1c2-t13">
<p>Oracle database limits literals in SQL statements to 4,000 bytes.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t13" headers="r1c1-t13">
<p>SQL_LONGVARCHAR and SQL_WLONGVARCHAR</p>
</td>
<td class="cellalignment295" headers="r3c1-t13 r1c2-t13">
<p>Oracle&#39;s limit for <code dir="ltr">SQL_LONGVARCHAR</code> data where the column type is <code dir="ltr">LONG</code> is 2,147,483,647 bytes. Oracle&#39;s limit for the <code dir="ltr">SQL_LONGVARCHAR</code> data where the column type is <code dir="ltr">CLOB</code> is 4 gigabytes. The limiting factor is the client workstation memory.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t13" headers="r1c1-t13">
<p>SQL_LONGVARCHAR and SQL_LONGVARBINARY</p>
</td>
<td class="cellalignment295" headers="r4c1-t13 r1c2-t13">
<p>Oracle database allows only a single long data column per table. The long data types are <code dir="ltr">SQL_LONGVARCHAR</code> (<code dir="ltr">LONG</code>) and <code dir="ltr">SQL_LONGVARBINARY</code> (<code dir="ltr">LONG RAW</code>). Oracle recommends you use <code dir="ltr">CLOB</code> and <code dir="ltr">BLOB</code> columns instead. There is no restriction on the number of <code dir="ltr">CLOB</code> and <code dir="ltr">BLOB</code> columns in a table.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="BABCCDFB"></a>
<div id="ADFNS1177" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.3.6</span> Error Messages</h3>
<p>When an error occurs, the Oracle ODBC Driver returns the native error number, the <code dir="ltr">SQLSTATE</code> (an ODBC error code), and an error message. The driver derives this information both from errors detected by the driver and errors returned by the Oracle server.</p>
<p class="subhead2"><a id="ADFNS1178"></a>Native Error</p>
<p>For errors that occur in the data source, the Oracle ODBC Driver returns the native error returned to it by the Oracle server. When the Oracle ODBC Driver or the Driver Manager detects an error, the Oracle ODBC Driver returns a native error of zero.</p>
<p class="subhead2"><a id="ADFNS1179"></a>SQLSTATE</p>
<p>For errors that occur in the data source, the Oracle ODBC Driver maps the returned native error to the appropriate <code dir="ltr">SQLSTATE</code>. When the Oracle ODBC Driver detects an error, it generates the appropriate <code dir="ltr">SQLSTATE</code>. When the Driver Manager detects an error, it generates the appropriate <code dir="ltr">SQLSTATE</code>.</p>
<p class="subhead2"><a id="ADFNS1180"></a>Error Message</p>
<p>For errors that occur in the data source, the Oracle ODBC Driver returns an error message based on the message returned by the Oracle server. For errors that occur in the Oracle ODBC Driver or the Driver Manager, the Oracle ODBC Driver returns an error message based on the text associated with the <code dir="ltr">SQLSTATE</code>.</p>
<p>Error messages have the following format:</p>
<pre dir="ltr">[vendor] [ODBC-component] [data-source] error-message
</pre>
<p>The prefixes in brackets ( [ ] ) identify the source of the error. <a href="#BABFICEJ">Table 21-4</a> shows the values of these prefixes returned by the Oracle ODBC Driver. When the error occurs in the data source, the [vendor] and [ODBC-component] prefixes identify the vendor and name of the ODBC component that received the error from the data source.</p>
<div id="ADFNS1181" class="tblformal">
<p class="titleintable"><a id="sthref1034"></a><a id="BABFICEJ"></a>Table 21-4 Error Message Values of Prefixes Returned by the Oracle ODBC Driver</p>
<table class="cellalignment293" title="Error Message Values of Prefixes Returned by the Oracle ODBC Driver" summary="This table shows the values of prefixes returned by the Oracle ODBC Driver based on three possible error sources." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t14">Error Source</th>
<th class="cellalignment294" id="r1c2-t14">Prefix</th>
<th class="cellalignment294" id="r1c3-t14">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t14" headers="r1c1-t14">
<p>Driver Manager</p>
</td>
<td class="cellalignment295" headers="r2c1-t14 r1c2-t14">
<p>[vendor][ODBC-component][data-source]</p>
</td>
<td class="cellalignment295" headers="r2c1-t14 r1c3-t14">
<p>[Microsoft/unixODBC][ODBC Driver Manager]N/A</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t14" headers="r1c1-t14">
<p>Oracle ODBC Driver</p>
</td>
<td class="cellalignment295" headers="r3c1-t14 r1c2-t14">
<p>[vendor][ODBC-component][data-source]</p>
</td>
<td class="cellalignment295" headers="r3c1-t14 r1c3-t14">
<p>[ORACLE][ODBC Driver]N/A</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t14" headers="r1c1-t14">
<p>Oracle server</p>
</td>
<td class="cellalignment295" headers="r4c1-t14 r1c2-t14">
<p>[vendor][ODBC-component][data-source]</p>
</td>
<td class="cellalignment295" headers="r4c1-t14 r1c3-t14">
<p>[ORACLE][ODBC Driver]N/A</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>For example, if the error message does not contain the [Ora] prefix shown in the following format, the error is an Oracle ODBC Driver error and should be self-explanatory.</p>
<pre dir="ltr">[Oracle][ODBC]Error message text here
</pre>
<p>If the error message contains the [Ora] prefix shown in the following format, it is not an Oracle ODBC Driver error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Although the error message contains the [Ora] prefix, the actual error may be coming from one of several sources.</div>
<pre dir="ltr">[Oracle][ODBC][Ora]Error message text here
</pre>
<p>If the error message text starts with the following prefix, you can obtain more information about the error in the Oracle server documentation.</p>
<pre dir="ltr">ORA-
</pre>
<p>Oracle Net Services errors and Trace logging are located under the <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\NETWORK</code> directory on Windows systems or the <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">/NETWORK</code> directory on UNIX systems where the OCI software is installed and specifically in the log and trace directories respectively. Database logging is located under the <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\RDBMS</code> directory on Windows systems or the <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">/rdbms</code> directory on UNIX systems where the Oracle server software is installed.</p>
<p>See the Oracle server documentation for more information about server error messages.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABICHJC"></a>
<div id="ADFNS1182" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">21.4</span> For Programmers</h2>
<p class="subhead2"><a id="ADFNS989"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABIJAGI">Format of the Connection String</a></p>
</li>
<li>
<p><a href="#BABIDEDG">SQLDriverConnect Implementation</a></p>
</li>
<li>
<p><a href="#BABCEBFI">Reducing Lock Timeout in a Program</a></p>
</li>
<li>
<p><a href="#BABJJDBG">Linking with odbc32.lib (Windows) or libodbc.so (UNIX)</a></p>
</li>
<li>
<p><a href="#BABCEAIA">Obtaining Information About rowids</a></p>
</li>
<li>
<p><a href="#BABBBDEJ">Rowids in a WHERE Clause</a></p>
</li>
<li>
<p><a href="#BABHGBFJ">Enabling Result Sets</a></p>
</li>
<li>
<p><a href="#BABJCDGE">Enabling EXEC Syntax</a></p>
</li>
<li>
<p><a href="#BABGJGBA">Enabling Event Notification for Connection Failures in an Oracle RAC Environment</a></p>
</li>
<li>
<p><a href="#BABDDGBE">Using Implicit Results Feature Through ODBC</a></p>
</li>
<li>
<p><a href="#BABBCCDD">Supported Functionality</a></p>
</li>
<li>
<p><a href="#BABIFIGA">Unicode Support</a></p>
</li>
<li>
<p><a href="#BABIIAIH">Performance and Tuning</a></p>
</li>
</ul>
<a id="BABIJAGI"></a>
<div id="ADFNS1183" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.1</span> Format of the Connection String</h3>
<p><a href="#BABEFBFB">Table 21-5</a> describes keywords that can be included in the connection string argument of the <code dir="ltr">SQLDriverConnect</code> function call. Missing keywords are read from the Administrator entry for the data source. Values specified in the connection string override those contained in the Administrator entry. See the <span class="italic">Microsoft ODBC 3.52 Software Development Kit and Programmer&#39;s Reference</span> for more information about the <code dir="ltr">SQLDriverConnect</code> function.</p>
<div id="ADFNS1184" class="tblformal">
<p class="titleintable"><a id="sthref1035"></a><a id="BABEFBFB"></a>Table 21-5 Keywords that Can Be Included in the Connection String Argument of the SQLDriverConnect Function Call</p>
<table class="cellalignment293" title="Keywords that Can Be Included in the Connection String Argument of the SQLDriverConnect Function Call" summary="This table describes the keywords that can be included in the connection string of the SQLDrivedConnect function." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t16">Keyword</th>
<th class="cellalignment294" id="r1c2-t16">Meaning</th>
<th class="cellalignment294" id="r1c3-t16">Comments</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t16" headers="r1c1-t16">
<p>DSN</p>
</td>
<td class="cellalignment295" headers="r2c1-t16 r1c2-t16">
<p>ODBC Data Source Name</p>
</td>
<td class="cellalignment295" headers="r2c1-t16 r1c3-t16">
<p>User-supplied name.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t16" headers="r1c1-t16">
<p>DBQ</p>
</td>
<td class="cellalignment295" headers="r3c1-t16 r1c2-t16">
<p>TNS Service Name</p>
</td>
<td class="cellalignment295" headers="r3c1-t16 r1c3-t16">
<p>User-supplied name.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t16" headers="r1c1-t16">
<p>UID</p>
</td>
<td class="cellalignment295" headers="r4c1-t16 r1c2-t16">
<p>User ID or User Name</p>
</td>
<td class="cellalignment295" headers="r4c1-t16 r1c3-t16">
<p>User-supplied name.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t16" headers="r1c1-t16">
<p>PWD</p>
</td>
<td class="cellalignment295" headers="r5c1-t16 r1c2-t16">
<p>Password</p>
</td>
<td class="cellalignment295" headers="r5c1-t16 r1c3-t16">
<p>User-supplied password. Specify PWD=; for an empty password.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r6c1-t16" headers="r1c1-t16">
<p>DBA</p>
</td>
<td class="cellalignment295" headers="r6c1-t16 r1c2-t16">
<p>Database Attribute</p>
</td>
<td class="cellalignment295" headers="r6c1-t16 r1c3-t16">
<p>W=write access.</p>
<p>R=read-only access.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r7c1-t16" headers="r1c1-t16">
<p>APA</p>
</td>
<td class="cellalignment295" headers="r7c1-t16 r1c2-t16">
<p>Applications Attributes</p>
</td>
<td class="cellalignment295" headers="r7c1-t16 r1c3-t16">
<p>T=Thread Safety Enabled.</p>
<p>F=Thread Safety Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r8c1-t16" headers="r1c1-t16">
<p>RST</p>
</td>
<td class="cellalignment295" headers="r8c1-t16 r1c2-t16">
<p>Result Sets</p>
</td>
<td class="cellalignment295" headers="r8c1-t16 r1c3-t16">
<p>T=Result Sets Enabled.</p>
<p>F=Result Sets Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r9c1-t16" headers="r1c1-t16">
<p>QTO</p>
</td>
<td class="cellalignment295" headers="r9c1-t16 r1c2-t16">
<p>Query Timeout Option</p>
</td>
<td class="cellalignment295" headers="r9c1-t16 r1c3-t16">
<p>T=Query Timeout Enabled.</p>
<p>F=Query Timeout Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r10c1-t16" headers="r1c1-t16">
<p>CSR</p>
</td>
<td class="cellalignment295" headers="r10c1-t16 r1c2-t16">
<p>Close Cursor</p>
</td>
<td class="cellalignment295" headers="r10c1-t16 r1c3-t16">
<p>T=Close Cursor Enabled.</p>
<p>F=Close Cursor Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r11c1-t16" headers="r1c1-t16">
<p>BNF</p>
</td>
<td class="cellalignment295" headers="r11c1-t16 r1c2-t16">
<p>Bind <code dir="ltr">NUMBER</code> as <code dir="ltr">FLOAT</code></p>
</td>
<td class="cellalignment295" headers="r11c1-t16 r1c3-t16">
<p>T=Bind <code dir="ltr">NUMBER</code> as <code dir="ltr">FLOAT</code>.</p>
<p>F=Bind <code dir="ltr">NUMBER</code> as <code dir="ltr">NUMBER</code>.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r12c1-t16" headers="r1c1-t16">
<p>DRH</p>
</td>
<td class="cellalignment295" headers="r12c1-t16 r1c2-t16">
<p>Disable Rule Hint</p>
</td>
<td class="cellalignment295" headers="r12c1-t16 r1c3-t16">
<p>T=Disable Rule Hint.</p>
<p>F=Enable Rule Hint.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r13c1-t16" headers="r1c1-t16">
<p>BAM</p>
</td>
<td class="cellalignment295" headers="r13c1-t16 r1c2-t16">
<p>Batch Autocommit Mode</p>
</td>
<td class="cellalignment295" headers="r13c1-t16 r1c3-t16">
<p>IfAllSuccessful=Commit only if all statements are successful (old behavior).</p>
<p>UpToFirstFailure=Commit up to first failing statement (V7 ODBC behavior).</p>
<p>AllSuccessful=Commit all successful statements (only when connected to an Oracle database; against other databases, same behavior as V7).</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r14c1-t16" headers="r1c1-t16">
<p>FBS</p>
</td>
<td class="cellalignment295" headers="r14c1-t16 r1c2-t16">
<p>Fetch Buffer Size</p>
</td>
<td class="cellalignment295" headers="r14c1-t16 r1c3-t16">
<p>User-supplied numeric value (specify a value in bytes of 0 or greater).</p>
<p>The default is 60,000 bytes.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r15c1-t16" headers="r1c1-t16">
<p>FEN</p>
</td>
<td class="cellalignment295" headers="r15c1-t16 r1c2-t16">
<p>Failover</p>
</td>
<td class="cellalignment295" headers="r15c1-t16 r1c3-t16">
<p>T=Failover Enabled.</p>
<p>F=Failover Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r16c1-t16" headers="r1c1-t16">
<p>FRC</p>
</td>
<td class="cellalignment295" headers="r16c1-t16 r1c2-t16">
<p>Failover Retry Count</p>
</td>
<td class="cellalignment295" headers="r16c1-t16 r1c3-t16">
<p>User-supplied numeric value.</p>
<p>The default is 10.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r17c1-t16" headers="r1c1-t16">
<p>FDL</p>
</td>
<td class="cellalignment295" headers="r17c1-t16 r1c2-t16">
<p>Failover Delay</p>
</td>
<td class="cellalignment295" headers="r17c1-t16 r1c3-t16">
<p>User-supplied numeric value.</p>
<p>The default is 10.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r18c1-t16" headers="r1c1-t16">
<p>LOB</p>
</td>
<td class="cellalignment295" headers="r18c1-t16 r1c2-t16">
<p>LOB Writes</p>
</td>
<td class="cellalignment295" headers="r18c1-t16 r1c3-t16">
<p>T=LOBs Enabled.</p>
<p>F=LOBs Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r19c1-t16" headers="r1c1-t16">
<p>MTS</p>
</td>
<td class="cellalignment295" headers="r19c1-t16 r1c2-t16">
<p>Microsoft Transaction Server Support</p>
</td>
<td class="cellalignment295" headers="r19c1-t16 r1c3-t16">
<p>T=Disabled.</p>
<p>F=Enabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r20c1-t16" headers="r1c1-t16">
<p>FWC</p>
</td>
<td class="cellalignment295" headers="r20c1-t16 r1c2-t16">
<p>Force <code dir="ltr">SQL_WCHAR</code> Support</p>
</td>
<td class="cellalignment295" headers="r20c1-t16 r1c3-t16">
<p>T=Force <code dir="ltr">SQL_WCHAR</code> Enabled.</p>
<p>F=Force <code dir="ltr">SQL_WCHAR</code> Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r21c1-t16" headers="r1c1-t16">
<p>EXC</p>
</td>
<td class="cellalignment295" headers="r21c1-t16 r1c2-t16">
<p>EXEC Syntax</p>
</td>
<td class="cellalignment295" headers="r21c1-t16 r1c3-t16">
<p>T=EXEC Syntax Enabled.</p>
<p>F=EXEC Syntax Disabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r22c1-t16" headers="r1c1-t16">
<p>XSM</p>
</td>
<td class="cellalignment295" headers="r22c1-t16 r1c2-t16">
<p>Schema Field</p>
</td>
<td class="cellalignment295" headers="r22c1-t16 r1c3-t16">
<p>Default=Default.</p>
<p>Database=Database Name.</p>
<p>Owner=Owner Name.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r23c1-t16" headers="r1c1-t16">
<p>MDI</p>
</td>
<td class="cellalignment295" headers="r23c1-t16 r1c2-t16">
<p>Set Metadata ID Default</p>
</td>
<td class="cellalignment295" headers="r23c1-t16 r1c3-t16">
<p>T=<code dir="ltr">SQL_ATTR_METADATA_ID</code> defaults to <code dir="ltr">SQL_TRUE</code>.</p>
<p>F=<code dir="ltr">SQL_ATTR_METADATA_ID</code> defaults to <code dir="ltr">SQL_FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r24c1-t16" headers="r1c1-t16">
<p>DPM</p>
</td>
<td class="cellalignment295" headers="r24c1-t16 r1c2-t16">
<p>Disable <code dir="ltr">SQLDescribeParam</code></p>
</td>
<td class="cellalignment295" headers="r24c1-t16 r1c3-t16">
<p>T=<code dir="ltr">SQLDescribeParam</code> Disabled.</p>
<p>F=<code dir="ltr">SQLDescribeParam</code> Enabled.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r25c1-t16" headers="r1c1-t16">
<p>BTD</p>
</td>
<td class="cellalignment295" headers="r25c1-t16 r1c2-t16">
<p>Bind <code dir="ltr">TIMESTAMP</code> as <code dir="ltr">DATE</code></p>
</td>
<td class="cellalignment295" headers="r25c1-t16 r1c3-t16">
<p>T=Bind <code dir="ltr">SQL_TIMESTAMP</code> as Oracle <code dir="ltr">DATE</code></p>
<p>F=Bind <code dir="ltr">SQL_TIMESTAMP</code> as Oracle <code dir="ltr">TIMESTAMP</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r26c1-t16" headers="r1c1-t16">
<p>NUM</p>
</td>
<td class="cellalignment295" headers="r26c1-t16 r1c2-t16">
<p>Numeric Settings</p>
</td>
<td class="cellalignment295" headers="r26c1-t16 r1c3-t16">
<p>NLS=Use Oracle NLS numeric settings (to determine the decimal and group separator).</p>
<p>MS=Use Microsoft regional settings.</p>
<p>US=Use US settings.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r27c1-t16" headers="r1c1-t16">
<p>ODA</p>
</td>
<td class="cellalignment295" headers="r27c1-t16 r1c2-t16">
<p>Use <code dir="ltr">OCIDescribeAny( )</code></p>
</td>
<td class="cellalignment295" headers="r27c1-t16 r1c3-t16">
<p>T= Use <code dir="ltr">OCIDescribeAny()</code> call to gain performance improvement when application makes heavy calls to small packaged procedures that return <code dir="ltr">REF CURSORS</code>.</p>
<p>F= Do not use <code dir="ltr">OCIDescribeAny()</code>. By default, use <code dir="ltr">OCIDescribeAny()</code> value is <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r28c1-t16" headers="r1c1-t16">
<p>STE</p>
</td>
<td class="cellalignment295" headers="r28c1-t16 r1c2-t16">
<p>SQL Translate ORA Errors</p>
<p>Specifies whether the Oracle ODBC Driver is to translate the Oracle error codes</p>
</td>
<td class="cellalignment295" headers="r28c1-t16 r1c3-t16">
<p>T=Translate ORA errors.</p>
<p>F=Do not translate any ORA error. By default, <code dir="ltr">SQLTranslateErrors</code> is <code dir="ltr">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r29c1-t16" headers="r1c1-t16">
<p>TSZ</p>
</td>
<td class="cellalignment295" headers="r29c1-t16 r1c2-t16">
<p>Token Size</p>
</td>
<td class="cellalignment295" headers="r29c1-t16 r1c3-t16">
<p>User-supplied numeric value.</p>
<p>Sets the token size to the nearest multiple of 1 KB (1024 bytes) beginning at 4 KB (4096 bytes). The default size is 8 KB (8192 bytes). The maximum value that can be set is 128 KB (131068 bytes).</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>If the following keyword is specified in the connection string, the Oracle ODBC Driver does not read values defined from the Administrator:</p>
<pre dir="ltr">DRIVER={Oracle ODBC Driver}
</pre>
<p>Examples of valid connection strings are:</p>
<pre dir="ltr">1) DSN=Personnel;UID=Kotzwinkle;PWD=;2) DRIVER={Oracle ODBC Driver};UID=Kotzwinkle;PWD=whatever;DBQ=instl_alias;DBA=W;
</pre>
<p>For additional information, click any of these links.</p>
<p class="subhead2"><a id="ADFNS1185"></a>Related Topic for All Users</p>
<p><a href="#BABDCHIG">Connecting to an Oracle Data Source</a></p>
<p class="subhead2"><a id="ADFNS1186"></a>Related Topic for Programmers</p>
<p><a href="#BABIDEDG">SQLDriverConnect Implementation</a></p>
</div>
<!-- class="sect2" -->
<a id="BABIDEDG"></a>
<div id="ADFNS1188" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.2</span> SQLDriverConnect Implementation</h3>
<p><a href="#BABGEAEC">Table 21-6</a> describes the keywords required by the SQLDriverConnect connection string.</p>
<div id="ADFNS1189" class="tblformal">
<p class="titleintable"><a id="sthref1036"></a><a id="BABGEAEC"></a>Table 21-6 Keywords Required by the SQLDriverConnect Connection String</p>
<table class="cellalignment293" title="Keywords Required by the SQLDriverConnect Connection String" summary="Thiis table describes the keywords required by the SQLDriverConnect connection string." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t17">Keyword</th>
<th class="cellalignment294" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t17" headers="r1c1-t17">
<p>DSN</p>
</td>
<td class="cellalignment295" headers="r2c1-t17 r1c2-t17">
<p>The name of the data source.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t17" headers="r1c1-t17">
<p>DBQ</p>
</td>
<td class="cellalignment295" headers="r3c1-t17 r1c2-t17">
<p>The TNS Service Name. See <a href="#BABCHHFC">Section 21.3.1, &#34;Creating Oracle ODBC Driver TNS Service Names.&#34;</a> For more information, see the Oracle Net Services documentation.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t17" headers="r1c1-t17">
<p>UID</p>
</td>
<td class="cellalignment295" headers="r4c1-t17 r1c2-t17">
<p>The user login ID or user name.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t17" headers="r1c1-t17">
<p>PWD</p>
</td>
<td class="cellalignment295" headers="r5c1-t17 r1c2-t17">
<p>The user-specified password.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="BABCEBFI"></a>
<div id="ADFNS1190" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.3</span> Reducing Lock Timeout in a Program</h3>
<p>The Oracle server waits indefinitely for lock conflicts between transactions to be resolved. You can limit the amount of time that the Oracle server waits for locks to be resolved by calling the ODBC <code dir="ltr">SQLSetConnectAttr</code> function before connecting to the data source. Specify a nonzero value for the <code dir="ltr">SQL_ATTR_QUERY_TIMEOUT</code> attribute in the ODBC <code dir="ltr">SQLSetStmtAttr function</code>.</p>
<p>If you specify a lock timeout value using the ODBC <code dir="ltr">SQLSetConnectAttr</code> function, it overrides any value specified in the <code dir="ltr">oraodbc.ini</code> file. Refer to <a href="#BABEGGIB">Reducing Lock Timeout</a> for more information on specifying a value in the <code dir="ltr">oraodbc.ini</code> file.</p>
</div>
<!-- class="sect2" -->
<a id="BABJJDBG"></a>
<div id="ADFNS1191" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.4</span> Linking with odbc32.lib (Windows) or libodbc.so (UNIX)</h3>
<p>For Windows platforms, when you link your program, you must link it with the import library <code dir="ltr">odbc32.lib</code>.</p>
<p>For UNIX platforms, an ODBC application must be linked to <code dir="ltr">libodbc.so</code>.</p>
</div>
<!-- class="sect2" -->
<a id="BABCEAIA"></a>
<div id="ADFNS1192" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.5</span> Obtaining Information About rowids</h3>
<p>The ODBC <code dir="ltr">SQLSpecialColumns</code> function returns information about the columns in a table. When used with the Oracle ODBC Driver, it returns information about the Oracle rowids associated with an Oracle table.</p>
</div>
<!-- class="sect2" -->
<a id="BABBBDEJ"></a>
<div id="ADFNS1193" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.6</span> Rowids in a WHERE Clause</h3>
<p>Rowids can be used in the <code dir="ltr">WHERE</code> clause of an SQL statement. However, the rowid value must be presented in a parameter marker.</p>
</div>
<!-- class="sect2" -->
<a id="BABHGBFJ"></a>
<div id="ADFNS1194" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.7</span> Enabling Result Sets</h3>
<p>Oracle reference cursors (Result Sets) allow an application to retrieve data using stored procedures and stored functions. The following information identifies how to use reference cursors to enable Result Sets through ODBC.</p>
<ul>
<li>
<p>The ODBC syntax for calling stored procedures must be used. Native PL/SQL is not supported through ODBC. The following identifies how to call the procedure or function without a package and within a package. The package name in this case is RSET.</p>
<pre dir="ltr">Procedure call: 
{CALL Example1(?)}
{CALL RSET.Example1(?)} 
Function Call: 
{? = CALL Example1(?)}
{? = CALL RSET.Example1(?)} 
</pre></li>
<li>
<p>The PL/SQL reference cursor parameters are omitted when calling the procedure. For example, assume procedure Example2 is defined to have four parameters. Parameters 1 and 3 are reference cursor parameters and parameters 2 and 4 are character strings. The call is specified as:</p>
<pre dir="ltr">{CALL RSET.Example2(&#34;Literal 1&#34;, &#34;Literal 2&#34;)}
</pre></li>
</ul>
<p>The following example application shows how to return a Result Set using the Oracle ODBC Driver:</p>
<pre dir="ltr">/* 
* Sample Application using Oracle reference cursors via ODBC 
* 
* Assumptions: 
* 
* 1) Oracle Sample database is present with data loaded for the EMP table. 
* 
* 2) Two fields are referenced from the EMP table ename and mgr. 
* 
* 3) A data source has been setup to access the sample database. 
* 
* 
* Program Description: 
* 
* Abstract: 
* 
* This program demonstrates how to return result sets using 
* Oracle stored procedures 
* 
* Details: 
* 
* This program: 
* Creates an ODBC connection to the database. 
* Creates a Packaged Procedure containing two result sets. 
* Executes the procedure and retrieves the data from both result sets.
* Displays the data to the user.
* Deletes the package then logs the user out of the database. 
* 
* 
* The following is the actual PL/SQL this code generates to 
* create the stored procedures. 
* 
DROP PACKAGE ODBCRefCur; 
CREATE PACKAGE ODBCRefCur AS 
TYPE ename_cur IS REF CURSOR; 
TYPE mgr_cur IS REF CURSOR; 
PROCEDURE EmpCurs(Ename IN OUT ename_cur, Mgr IN OUT mgr_cur, pjob IN VARCHAR2); 
 
 
 
END; 
/ 
CREATE PACKAGE BODY ODBCRefCur AS 
PROCEDURE EmpCurs(Ename IN OUT ename_cur, Mgr IN OUT mgr_cur, pjob IN VARCHAR2) 
AS 
BEGIN 
IF NOT Ename%ISOPEN 
THEN 
OPEN Ename for SELECT ename from emp; 
END IF; 
 
 
 
IF NOT Mgr%ISOPEN 
THEN 
OPEN Mgr for SELECT mgr from emp where job = pjob; 
END IF; 
END; 
END; 
/ 
 
 
 
* 
* End PL/SQL for Reference Cursor. 
*/ 
 
 
 
/* 
* Include Files 
*/ 
#include &lt;windows.h&gt; 
#include &lt;stdio.h&gt; 
#include &lt;sql.h&gt; 
#include &lt;sqlext.h&gt; 
 
 
 
/* 
* Defines 
*/ 
#define JOB_LEN 9 
#define DATA_LEN 100 
#define SQL_STMT_LEN 500 
 
 
 
/* 
* Procedures 
*/ 
void DisplayError( SWORD HandleType, SQLHANDLE hHandle, char *Module ); 
 
/* 
* Main Program 
*/ 
int main() 
{ 
SQLHENV hEnv; 
SQLHDBC hDbc; 
SQLHSTMT hStmt; 
SQLRETURN rc; 
char *DefUserName =&#34;scott&#34;; 
char *DefPassWord =&#34;tiger&#34;; 
SQLCHAR ServerName[DATA_LEN]; 
SQLCHAR *pServerName=ServerName; 
SQLCHAR UserName[DATA_LEN]; 
SQLCHAR *pUserName=UserName; 
SQLCHAR PassWord[DATA_LEN]; 
SQLCHAR *pPassWord=PassWord; 
char Data[DATA_LEN]; 
SQLINTEGER DataLen; 
char error[DATA_LEN]; 
char *charptr; 
SQLCHAR SqlStmt[SQL_STMT_LEN]; 
SQLCHAR *pSqlStmt=SqlStmt; 
char *pSalesMan = &#34;SALESMAN&#34;; 
SQLINTEGER sqlnts=SQL_NTS; 
 
 
 
/* 
* Allocate the Environment Handle 
*/ 
rc = SQLAllocHandle( SQL_HANDLE_ENV, SQL_NULL_HANDLE, &amp;hEnv ); 
if (rc != SQL_SUCCESS) 
{ 
printf( &#34;Cannot Allocate Environment Handle/n&#34;); 
printf( &#34;/nHit Return to Exit/n&#34;); 
charptr = gets ((char *)error); 
exit(1); 
} 
 
 
 
/* 
* Set the ODBC Version 
*/ 
rc = SQLSetEnvAttr( hEnv, 
SQL_ATTR_ODBC_VERSION, 
(void *)SQL_OV_ODBC3, 
0); 
if (rc != SQL_SUCCESS) 
{ 
printf( &#34;Cannot Set ODBC Version/n&#34;); 
printf( &#34;/nHit Return to Exit/n&#34;); 
charptr = gets ((char *)error); 
exit(1); 
} 
 
 
 
/* 
* Allocate the Connection handle 
*/ 
rc = SQLAllocHandle( SQL_HANDLE_DBC, hEnv, &amp;hDbc ); 
if (rc != SQL_SUCCESS) 
{ 
printf( &#34;Cannot Allocate Connection Handle/n&#34;); 
printf( &#34;/nHit Return to Exit/n&#34;); 
charptr = gets ((char *)error); 
exit(1); 
} 
 
 
 
/* 
* Get User Information 
*/ 
lstrcpy( (char *) pUserName, DefUserName ); 
lstrcpy( (char *) pPassWord, DefPassWord ); 
 
 
 
/* 
* Data Source name 
*/ 
printf( &#34;/nEnter the ODBC Data Source Name/n&#34; ); 
charptr = gets ((char *) ServerName); 
 
 
 
/* 
* User Name 
*/ 
printf ( &#34;/nEnter User Name Default [%s]/n&#34;, pUserName); 
charptr = gets ((char *) UserName); 
if (*charptr == &#39;/0&#39;) 
{ 
lstrcpy( (char *) pUserName, (char *) DefUserName ); 
} 
 
 
 
/* 
* Password 
*/ 
printf ( &#34;/nEnter Password Default [%s]/n&#34;, pPassWord); 
charptr = gets ((char *)PassWord); 
if (*charptr == &#39;/0&#39;) 
{ 
lstrcpy( (char *) pPassWord, (char *) DefPassWord ); 
} 
 
 
 
/* 
* Connection to the database 
*/ 
rc = SQLConnect( hDbc, 
pServerName, 
(SQLSMALLINT) lstrlen((char *)pServerName), 
pUserName, 
(SQLSMALLINT) lstrlen((char *)pUserName), 
pPassWord, 
(SQLSMALLINT) lstrlen((char *)pPassWord)); 
if (rc != SQL_SUCCESS) 
{ 
DisplayError(SQL_HANDLE_DBC, hDbc, &#34;SQLConnect&#34;); 
} 
 
 
 
/* 
* Allocate a Statement 
*/ 
rc = SQLAllocHandle( SQL_HANDLE_STMT, hDbc, &amp;hStmt ); 
if (rc != SQL_SUCCESS) 
{ 
printf( &#34;Cannot Allocate Statement Handle/n&#34;); 
printf( &#34;/nHit Return to Exit/n&#34;); 
charptr = gets ((char *)error); 
exit(1); 
} 
 
 
 
/* 
* Drop the Package 
*/ 
lstrcpy( (char *) pSqlStmt, &#34;DROP PACKAGE ODBCRefCur&#34;); 
rc = SQLExecDirect(hStmt, pSqlStmt, lstrlen((char *)pSqlStmt)); 
 
 
 
/* 
* Create the Package Header 
*/ 
lstrcpy( (char *) pSqlStmt, &#34;CREATE PACKAGE ODBCRefCur AS/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; TYPE ename_cur IS REF CURSOR;/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; TYPE mgr_cur IS REF CURSOR;/n/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; PROCEDURE EmpCurs (Ename IN OUT ename_cur,&#34;); 
lstrcat( (char *) pSqlStmt, &#34;Mgr IN OUT mgr_cur,pjob IN VARCHAR2);/n/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34;END;/n&#34;); 
rc = SQLExecDirect(hStmt, pSqlStmt, lstrlen((char *)pSqlStmt)); 
if (rc != SQL_SUCCESS) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLExecDirect&#34;); 
} 
 
 
 
/* 
* Create the Package Body 
*/ 
lstrcpy( (char *) pSqlStmt, &#34;CREATE PACKAGE BODY ODBCRefCur AS/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; PROCEDURE EmpCurs (Ename IN OUT ename_cur,&#34;); 
lstrcat( (char *) pSqlStmt, &#34;Mgr IN OUT mgr_cur, pjob IN VARCHAR2)/n AS/n BEGIN/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; IF NOT Ename%ISOPEN/n THEN/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; OPEN Ename for SELECT ename from emp;/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; END IF;/n/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; IF NOT Mgr%ISOPEN/n THEN/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; OPEN Mgr for SELECT mgr from emp where job = pjob;/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; END IF;/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34; END;/n&#34;); 
lstrcat( (char *) pSqlStmt, &#34;END;/n&#34;); 
rc = SQLExecDirect(hStmt, pSqlStmt, lstrlen((char *)pSqlStmt)); 
if (rc != SQL_SUCCESS) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLExecDirect&#34;); 
} 
 
 
 
/* 
* Bind the Parameter 
*/ 
rc = SQLBindParameter(hStmt, 
1, 
SQL_PARAM_INPUT, 
SQL_C_CHAR, 
SQL_CHAR, 
JOB_LEN, 
0, 
pSalesMan, 
0, 
&amp;sqlnts); 
 
 
 
/* 
* Call the Store Procedure which executes the Result Sets 
*/ 
lstrcpy( (char *) pSqlStmt, &#34;{CALL ODBCRefCur.EmpCurs(?)}&#34;); 
rc = SQLExecDirect(hStmt, pSqlStmt, lstrlen((char *)pSqlStmt)); 
if (rc != SQL_SUCCESS) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLExecDirect&#34;); 
} 
 
 
 
/* 
* Bind the Data 
*/ 
rc = SQLBindCol( hStmt, 
1, 
SQL_C_CHAR, 
Data, 
sizeof(Data), 
&amp;DataLen); 
if (rc != SQL_SUCCESS) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLBindCol&#34;); 
} 
 
 
 
/* 
* Get the data for Result Set 1 
*/ 
printf( &#34;/nEmployee Names/n/n&#34;); 
while ( rc == SQL_SUCCESS ) 
{ 
rc = SQLFetch( hStmt ); 
if ( rc == SQL_SUCCESS ) 
{ 
printf(&#34;%s/n&#34;, Data); 
} 
else 
{ 
if (rc != SQL_NO_DATA) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLFetch&#34;); 
} 
} 
} 
 
 
 
printf( &#34;/nFirst Result Set - Hit Return to Continue/n&#34;); 
charptr = gets ((char *)error); 
 
 
 
/* 
* Get the Next Result Set 
*/ 
rc = SQLMoreResults( hStmt ); 
if (rc != SQL_SUCCESS) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLMoreResults&#34;); 
} 
 
 
 
/* 
* Get the data for Result Set 2 
*/ 
printf( &#34;/nManagers/n/n&#34;); 
while ( rc == SQL_SUCCESS ) 
{ 
rc = SQLFetch( hStmt ); 
if ( rc == SQL_SUCCESS ) 
{ 
printf(&#34;%s/n&#34;, Data); 
} 
else 
{ 
if (rc != SQL_NO_DATA) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLFetch&#34;); 
} 
} 
} 
 
 
 
printf( &#34;/nSecond Result Set - Hit Return to Continue/n&#34;); 
charptr = gets ((char *)error); 
 
 
 
/* 
* Should Be No More Results Sets 
*/ 
rc = SQLMoreResults( hStmt ); 
if (rc != SQL_NO_DATA) 
{ 
DisplayError(SQL_HANDLE_STMT, hStmt, &#34;SQLMoreResults&#34;); 
} 
 
 
 
/* 
* Drop the Package 
*/ 
lstrcpy( (char *) pSqlStmt, &#34;DROP PACKAGE ODBCRefCur&#34;); 
rc = SQLExecDirect(hStmt, pSqlStmt, lstrlen((char *)pSqlStmt)); 
 
 
 
/* 
* Free handles close connections to the database 
*/ 
SQLFreeHandle( SQL_HANDLE_STMT, hStmt ); 
SQLDisconnect( hDbc ); 
SQLFreeHandle( SQL_HANDLE_DBC, hDbc ); 
SQLFreeHandle( SQL_HANDLE_ENV, hEnv ); 
 
 
 
printf( &#34;/nAll Done - Hit Return to Exit/n&#34;); 
charptr = gets ((char *)error); 
return(0); 
} 
 
 
 
/* 
* Display Error Messages 
*/ 
void DisplayError( SWORD HandleType, SQLHANDLE hHandle, char *Module ) 
{ 
 
 
 
SQLCHAR MessageText[255]; 
SQLCHAR SQLState[80]; 
SQLRETURN rc=SQL_SUCCESS; 
LONG NativeError; 
SWORD RetLen; 
SQLCHAR error[25]; 
char *charptr; 
 
 
 
rc = SQLGetDiagRec(HandleType, 
hHandle, 
1, 
SQLState, 
&amp;NativeError, 
MessageText, 
255, 
&amp;RetLen); 
 
 
 
printf( &#34;Failure Calling %s/n&#34;, Module ); 
if (rc == SQL_SUCCESS || rc == SQL_SUCCESS_WITH_INFO) 
{ 
printf( &#34;/t/t/t State: %s/n&#34;, SQLState); 
printf( &#34;/t/t/t Native Error: %d/n&#34;, NativeError ); 
printf( &#34;/t/t/t Error Message: %s/n&#34;, MessageText ); 
} 
 
printf( &#34;/nHit Return to Exit/n&#34;); 
charptr = gets ((char *)error); 
 
 
 
exit(1); 
}
</pre></div>
<!-- class="sect2" -->
<a id="BABJCDGE"></a>
<div id="ADFNS1195" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.8</span> Enabling EXEC Syntax</h3>
<p>If the syntax of your SQL Server <code dir="ltr">EXEC</code> statement can be readily translated to an equivalent Oracle procedure call without change, the Oracle ODBC Driver can translate it if you enable this option.</p>
<p>The complete name of a SQL Server procedure consists of up to four identifiers:</p>
<ul>
<li>
<p>server name</p>
</li>
<li>
<p>database name</p>
</li>
<li>
<p>owner name</p>
</li>
<li>
<p>procedure name</p>
</li>
</ul>
<p>The format for the name is:</p>
<pre dir="ltr">[[[server.][database].][owner_name].]procedure_name
</pre>
<p>During the migration of the SQL Server database to Oracle, the definition of each SQL Server procedure (or function) is converted to its equivalent Oracle syntax and is defined in a schema in Oracle. Migrated procedures are often reorganized (and created in schemas) in one of these ways:</p>
<ul>
<li>
<p>All procedures are migrated to one schema (the default option).</p>
</li>
<li>
<p>All procedures defined in one SQL Server database are migrated to the schema named with that database name.</p>
</li>
<li>
<p>All procedures owned by one user are migrated to the schema named with that user&#39;s name.</p>
</li>
</ul>
<p>To support these three ways of organizing migrated procedures, you can specify one of these schema name options for translating procedure names. Object names in the translated Oracle procedure call are not case-sensitive.</p>
</div>
<!-- class="sect2" -->
<a id="BABGJGBA"></a>
<div id="ADFNS1196" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.9</span> Enabling Event Notification for Connection Failures in an Oracle RAC Environment</h3>
<p>If the <code dir="ltr">SQL_ORCLATTR_FAILOVER_CALLBACK</code> and <code dir="ltr">SQL_ORCLATTR_FAILOVER_HANDLE</code> attributes of the <code dir="ltr">SQLSetConnectAttr</code> function are set when a connection failure occurs in an Oracle Real Application Clusters (Oracle RAC) Database environment, event notification is enabled. Both attributes are set using the <code dir="ltr">SQLSetConnectAttr</code> function. The symbols for the new attributes are defined in the file sqora.h.</p>
<p>The <code dir="ltr">SQL_ORCLATTR_FAILOVER_CALLBACK</code> attribute specifies the address of a routine to call when a failure event takes place.</p>
<p>The <code dir="ltr">SQL_ORCLATTR_FAILOVER_HANDLE</code> attribute specifies a context handle that is passed as a parameter in the callback routine. This attribute is necessary for the ODBC application to determine which connection the failure event is taking place on.</p>
<p>The function prototype for the callback routine is:</p>
<pre dir="ltr">void failover_callback(void *handle, SQLINTEGER fo_code)
</pre>
<p>The &#39;handle&#39; parameter is the value that was set by the <code dir="ltr">SQL_ORCLATTR_FAILOVER_HANDLE</code> attribute. Null is returned if the attribute has not been set.</p>
<p>The <code dir="ltr">fo_code</code> parameter identifies the failure event which is taking place. The failure events map directly to the events defined in the OCI programming interface. The list of possible events is:</p>
<ul>
<li>
<p><code dir="ltr">ODBC_FO_BEGIN</code></p>
</li>
<li>
<p><code dir="ltr">ODBC_FO_ERROR</code></p>
</li>
<li>
<p><code dir="ltr">ODBC_FO_ABORT</code></p>
</li>
<li>
<p><code dir="ltr">ODBC_FO_REAUTH</code></p>
</li>
<li>
<p><code dir="ltr">ODBC_FO_END</code></p>
</li>
</ul>
<p>The following is a sample program which demonstrates using this feature:</p>
<pre dir="ltr">/*
  NAME
  ODBCCallbackTest
 
  DESCRIPTION
  Simple program to demonstrate the connection failover callback feature.
 
  PUBLIC FUNCTION(S)
  main
 
  PRIVATE FUNCTION(S)
 
  NOTES
 
  Command Line: ODBCCallbackTest filename [odbc-driver]
 
*/
 
#include &lt;windows.h&gt;
#include &lt;tchar.h&gt;
#include &lt;malloc.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;sql.h&gt;
#include &lt;sqlext.h&gt;
#include &#34;sqora.h&#34;
 
/*
** Function Prototypes
*/
void display_errors(SQLSMALLINT HandleType, SQLHANDLE Handle);
void failover_callback(void *Handle, SQLINTEGER fo_code);
 
/*
** Macros
*/
#define ODBC_STS_CHECK(sts) \
  if (sts != SQL_SUCCESS) \
{ \
  display_errors(SQL_HANDLE_ENV, hEnv); \
  display_errors(SQL_HANDLE_DBC, hDbc); \
  display_errors(SQL_HANDLE_STMT, hStmt); \
  return FALSE; \
}
 
/*
** ODBC Handles
*/
SQLHENV *hEnv = NULL; // ODBC Environment Handle
SQLHANDLE *hDbc = NULL; // ODBC Connection Handle
SQLHANDLE *hStmt = NULL; // ODBC Statement Handle
 
/*
** Connection Information
*/
TCHAR *dsn = _T(&#34;odbctest&#34;);
TCHAR *uid = _T(&#34;scott&#34;);
TCHAR *pwd = _T(&#34;tiger&#34;);
TCHAR *szSelect = _T(&#34;select * from emp&#34;);
 
/*
** MAIN Routine
*/
main(int argc, char **argv)
{
  SQLRETURN rc;
 
  /*
  ** Allocate handles
  */
  rc = SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, (SQLHANDLE *)&amp;hEnv);
  ODBC_STS_CHECK(rc)
 
  rc = SQLSetEnvAttr(hEnv, SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0);
  ODBC_STS_CHECK(rc);
 
  rc = SQLAllocHandle(SQL_HANDLE_DBC, hEnv, (SQLHANDLE *)&amp;hDbc);
  ODBC_STS_CHECK(rc);
 
  /*
  ** Connect to the database
  */
  rc = SQLConnect(hDbc, dsn, (SQLSMALLINT)_tcslen(dsn),
  uid, (SQLSMALLINT)_tcslen(uid),
  pwd, (SQLSMALLINT)_tcslen(pwd));
  ODBC_STS_CHECK(rc);
 
  /*
  ** Set the connection failover attributes
  */
  rc = SQLSetConnectAttr(hDbc, SQL_ORCLATTR_FAILOVER_CALLBACK, &amp;failover_callback, 0);
  ODBC_STS_CHECK(rc);
 
  rc = SQLSetConnectAttr(hDbc, SQL_ORCLATTR_FAILOVER_HANDLE, hDbc, 0);
  ODBC_STS_CHECK(rc);
 
  /*
  ** Allocate the statement handle
  */
  rc = SQLAllocHandle(SQL_HANDLE_STMT, hDbc, (SQLHANDLE *)&amp;hStmt);
  ODBC_STS_CHECK(rc);
 
  /*
  ** Wait for connection failovers
  */
  while (TRUE)
  {
  Sleep(5000);
 
  rc = SQLExecDirect(hStmt,szSelect, _tcslen(szSelect));
  ODBC_STS_CHECK(rc);
 
  rc = SQLFreeStmt(hStmt, SQL_CLOSE);
  ODBC_STS_CHECK(rc);
  }
 
  /*
  ** Free up the handles and close the connection
  */
  rc = SQLFreeHandle(SQL_HANDLE_STMT, hStmt);
  ODBC_STS_CHECK(rc);
 
  rc = SQLDisconnect(hDbc);
  ODBC_STS_CHECK(rc);
 
  rc = SQLFreeHandle(SQL_HANDLE_DBC, hDbc);
  ODBC_STS_CHECK(rc);
 
  rc = SQLFreeHandle(SQL_HANDLE_ENV, hEnv);
  ODBC_STS_CHECK(rc);
 
  return TRUE;
}
 
/*
** Failover Callback Routine
*/
void failover_callback(void *Handle, SQLINTEGER fo_code)
{
  switch (fo_code) {
 
  case ODBC_FO_BEGIN:
  printf(&#34;ODBC_FO_BEGIN recevied\n&#34;);
  break;
 
  case ODBC_FO_ERROR:
  printf(&#34;ODBC_FO_ERROR recevied\n&#34;);
  break;
 
  case ODBC_FO_ABORT:
  printf(&#34;ODBC_FO_ABORT recevied\n&#34;);
  break;
 
  case ODBC_FO_REAUTH:
  printf(&#34;ODBC_FO_REAUTH recevied\n&#34;);
  break;
 
  case ODBC_FO_END:
  printf(&#34;ODBC_FO_END recevied\n&#34;);
  break;
 
  default:
  printf(&#34;Invalid or unknown ODBC failover code recevied\n&#34;);
  break;
 
  };
 
  return;
 
}
 
/*
** Retrieve the errors associated with the handle passed
** and display them.
*/
void display_errors(SQLSMALLINT HandleType, SQLHANDLE Handle)
{
  SQLTCHAR MessageText[256];
  SQLTCHAR SqlState[5+1];
  SQLSMALLINT i=1;
  SQLINTEGER NativeError;
  SQLSMALLINT TextLength;
  SQLRETURN sts = SQL_SUCCESS;
 
  if (Handle == NULL) return;
 
  /* Make sure all SQLState text is null terminated */
  SqlState[5] = &#39;\0&#39;;
 
  /*
  ** Fetch and display all diagnostic records that exist for this handle
  */
  while (sts == SQL_SUCCESS)
  {
  NativeError = 0;
  TextLength = 0;
  sts = SQLGetDiagRec(HandleType, Handle, i, SqlState, &amp;NativeError,
  (SQLTCHAR *)&amp;MessageText, sizeof(MessageText),
  &amp;TextLength);
 
  if (sts == SQL_SUCCESS)
  {
  printf(&#34;[%s]%s\n&#34;, SqlState, MessageText);
  if (NativeError != 0)
  {
  printf(&#34;Native Error Code: %d\n&#34;, NativeError);
  }
  i++;
  }
  }
 
  return;
}
</pre></div>
<!-- class="sect2" -->
<a id="BABDDGBE"></a>
<div id="ADFNS315" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.10</span> Using Implicit Results Feature Through ODBC</h3>
<p>Use this option when you migrate any third party ODBC application to Oracle Database and you want to use implicit results functionality as supported by the previous vendor. Oracle ODBC driver supports implicit results with stored procedures or an anonymous PL/SQL block. For the current release, implicit results are returned only for <code dir="ltr">SELECT</code> statements.</p>
<p>The following code example shows an example ODBC test case using an anonymous SQL script for implicit results.</p>
<pre dir="ltr">const char *query1=&#34;declare \
                  c1 sys_refcursor; \
                  c2 sys_refcursor; \
                  begin \
                  open c1 for select empno,ename from emp where rownum&lt;=3; \
                  dbms_sql.return_result(c1); \
                  open c2 for select empno,ename from emp where rownum&lt;=3; \
                  dbms_sql.return_result(c2); end; &#34;;
 
int main( )
{
  ...
   ...
 //Allocate all required handles and establish a connection to the database.
 
 //Prepare and execute the above anonymous PL/SQL block
    SQLPrepare (hstmt, (SQLCHAR *) query1, SQL_NTS);
    SQLExecute(hstmt);
 
 //Bind the columns for the results from the first SELECT statement in an anonymous block.
    SQLBindCol (hstmt, 1, SQL_C_ULONG, &amp;eno, 0, &amp;jind);
    SQLBindCol (hstmt, 2, SQL_C_CHAR, empname, sizeof (empname),&amp;enind);
 
 //Fetch implicit results through the SQLFetch( ) call.
    while((retCode = SQLFetch(hstmt)) != SQL_NO_DATA)
    {
 //Do whatever you want to do with the data.
    }
 
     retCode = SQLMoreResults(hstmt);
 
     if(retCode == SQL_SUCCESS)
    {
      printf(&#34;SQLMoreResults returned with SQL_SUCCESS\n&#34;);
 
 //Bind the columns for the results from the second SELECT statement in an anonymous block.
    SQLBindCol (hstmt, 1, SQL_C_ULONG, &amp;eno, 0, &amp;jind);
    SQLBindCol (hstmt, 2, SQL_C_CHAR, empname, sizeof (empname),&amp;enind);
 
 //Fetch implicit results through the SQLFetch( ) call.
    while((retCode = SQLFetch(hstmt)) != SQL_NO_DATA)
    {
 //Do whatever you want to do with data.
    }
  }
}
</pre></div>
<!-- class="sect2" -->
<a id="BABBCCDD"></a>
<div id="ADFNS1197" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.11</span> Supported Functionality</h3>
<p class="subhead2"><a id="ADFNS991"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABBCJCB">API Conformance</a></p>
</li>
<li>
<p><a href="#BABHEGBH">Implementation of ODBC API Functions</a></p>
</li>
<li>
<p><a href="#BABIDAGF">Implementation of the ODBC SQL Syntax</a></p>
</li>
<li>
<p><a href="#BABEJGEG">Implementation of Data Types (Programming)</a></p>
</li>
</ul>
<a id="BABBCJCB"></a>
<div id="ADFNS1198" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.11.1</span> API Conformance</h4>
<p>Oracle ODBC Driver release 9.2.0.0.0 and higher supports all Core, Level 2, and Level 1 functions.</p>
<p>Also, Oracle ODBC Driver release 9.2.0.0.0 and higher supports translation DLLs.</p>
<p>The following topics describe the ODBC API functions implemented by the Oracle ODBC Driver.</p>
<p class="subhead2"><a id="ADFNS1199"></a>Related Topic for Advanced Users</p>
<p><a href="#BABCCDFB">Error Messages</a></p>
<p class="subhead2"><a id="ADFNS1200"></a>Related Topic for Programmers</p>
<p><a href="#BABHEGBH">Implementation of ODBC API Functions</a></p>
</div>
<!-- class="sect3" -->
<a id="BABHEGBH"></a>
<div id="ADFNS1212" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.11.2</span> Implementation of ODBC API Functions</h4>
<p><a href="#BABIIHAC">Table 21-7</a> describes how the Oracle ODBC Driver implements specific functions:</p>
<div id="ADFNS1213" class="tblformal">
<p class="titleintable"><a id="sthref1037"></a><a id="BABIIHAC"></a>Table 21-7 How Oracle ODBC Driver Implements Specific Functions</p>
<table class="cellalignment293" title="How Oracle ODBC Driver Implements Specific Functions" summary="This table describes how Oracle ODBC Driver implements specific functions." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t18">Function</th>
<th class="cellalignment294" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">SQLConnect</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t18 r1c2-t18">
<p>SQLConnect requires only a DBQ, user ID, and password.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">SQLDriverConnect</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t18 r1c2-t18">
<p>SQLDriverConnect uses the DSN, DBQ, UID, and PWD keywords.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">SQLMoreResults</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t18 r1c2-t18">
<p>Implements ODBC support for implicit results. This is a new API implemented for Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.1). See <code dir="ltr"><a href="http://msdn.microsoft.com/en-us/library/ms714673(v=VS.85).aspx">http://msdn.microsoft.com/en-us/library/ms714673(v=VS.85).aspx</a></code> for more information.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">SQLSpecialColumns</code></p>
</td>
<td class="cellalignment295" headers="r5c1-t18 r1c2-t18">
<p>If <code dir="ltr">SQLSpecialColumns</code> is called with the <code dir="ltr">SQL_BEST_ROWID</code> attribute, it returns the rowid column.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">SQLProcedures</code> and<code dir="ltr">SQLProcedureColumns</code></p>
</td>
<td class="cellalignment295" headers="r6c1-t18 r1c2-t18">
<p>See the information that follows.</p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r7c1-t18" headers="r1c1-t18">
<p>All catalog functions</p>
</td>
<td class="cellalignment295" headers="r7c1-t18 r1c2-t18">
<p>If the <code dir="ltr">SQL_ATTR_METADATA_ID</code> statement attribute is <code dir="ltr">SQL_TRUE</code>, a string argument is treated as an identifier argument, and its case is not significant. In this case, the underscore (&#34;_&#34;) and the percent sign (&#34;%&#34;) are treated as the actual character, not as a search pattern character. On the other hand, if this attribute is <code dir="ltr">SQL_FALSE</code>, it is either an ordinary argument or a pattern value argument and is treated literally, and its case is significant.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect3" -->
<a id="BABIDAGF"></a>
<div id="ADFNS1214" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.11.3</span> Implementation of the ODBC SQL Syntax</h4>
<p>If a comparison predicate has a parameter marker as the second expression in the comparison and the value of that parameter is <code dir="ltr">SQL_NULL_DATA</code> with <code dir="ltr">SQLBindParameter</code>, the comparison fails. This is consistent with the null predicate syntax in ODBC SQL.</p>
</div>
<!-- class="sect3" -->
<a id="BABEJGEG"></a>
<div id="ADFNS1215" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.11.4</span> Implementation of Data Types (Programming)</h4>
<p>For programmers, the noteworthy part of the implementation of the data types concerns the <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR</code>, and <code dir="ltr">VARCHAR2</code> data types.</p>
<p>For an <code dir="ltr">fSqlType</code> value of <code dir="ltr">SQL_VARCHAR</code>, <code dir="ltr">SQLGetTypeInfo</code> returns the Oracle database data type <code dir="ltr">VARCHAR2</code>. For an fSqlType value of <code dir="ltr">SQL_CHAR</code>, <code dir="ltr">SQLGetTypeInfo</code> returns the Oracle database data type <code dir="ltr">CHAR</code>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABIFIGA"></a>
<div id="ADFNS1216" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.12</span> Unicode Support</h3>
<p class="subhead2"><a id="ADFNS992"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABDBAFE">Unicode Support Within the ODBC Environment</a></p>
</li>
<li>
<p><a href="#BABCICFJ">Unicode Support in ODBC API</a></p>
</li>
<li>
<p><a href="#BABFEHCB">Unicode Functions in the Driver Manager</a></p>
</li>
<li>
<p><a href="#BABECFEA">SQLGetData Performance</a></p>
</li>
<li>
<p><a href="#BABEADIA">Unicode Samples</a></p>
</li>
</ul>
<a id="BABDBAFE"></a>
<div id="ADFNS1217" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.12.1</span> Unicode Support Within the ODBC Environment</h4>
<p>The Microsoft or unixODBC ODBC Driver Manager (Driver Manager) makes all ODBC drivers, regardless if they support Unicode, appear as if they are Unicode compliant. This allows ODBC applications to be written independent of the Unicode capabilities of underlying ODBC drivers.</p>
<p>The extent to which the Driver Manager can emulate Unicode support for ANSI ODBC drivers is limited by the conversions possible between the Unicode data and the local code page. Data loss is possible when the Driver Manager is converting from Unicode to the local code page. Full Unicode support is not possible unless the underlying ODBC driver supports Unicode. The Oracle ODBC Driver provides full Unicode support.</p>
</div>
<!-- class="sect3" -->
<a id="BABCICFJ"></a>
<div id="ADFNS1218" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.12.2</span> Unicode Support in ODBC API</h4>
<p>The ODBC API supports both Unicode and ANSI entry points using the &#34;W&#34; and &#34;A&#34; suffix convention. An ODBC application developer need not explicitly call entry points with the suffix. An ODBC application that is compiled with the UNICODE and _UNICODE preprocessor definitions generates the appropriate calls. For example, a call to <code dir="ltr">SQLPrepare</code> is compiled as <code dir="ltr">SQLPrepareW</code>.</p>
<p>The C data type, <code dir="ltr">SQL_C_WCHAR</code>, was added to the ODBC interface to allow applications to specify that an input parameter is encoded as Unicode or to request column data returned as Unicode. The macro <code dir="ltr">SQL_C_TCHAR</code> is useful for applications that must be built as both Unicode and ANSI. The <code dir="ltr">SQL_C_TCHAR</code> macro compiles as <code dir="ltr">SQL_C_WCHAR</code> for Unicode applications and as <code dir="ltr">SQL_C_CHAR</code> for ANSI applications.</p>
<p>The SQL data types, <code dir="ltr">SQL_WCHAR</code>, <code dir="ltr">SQL_WVARCHAR</code>, and <code dir="ltr">SQL_WLONGVARCHAR</code>, have been added to the ODBC interface to represent columns defined in a table as Unicode. Potentially, these values are returned from calls to <code dir="ltr">SQLDescribeCol</code>, <code dir="ltr">SQLColAttribute</code>, <code dir="ltr">SQLColumns</code>, and <code dir="ltr">SQLProcedureColumns</code>.</p>
<p>Unicode encoding is supported for SQL column types <code dir="ltr">NCHAR</code>, <code dir="ltr">NVARCHAR2</code>, and <code dir="ltr">NCLOB</code>. Also, Unicode encoding is also supported for SQL column types <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> if the character semantics are specified in the column definition.</p>
<p>The ODBC Driver supports these SQL column types and maps them to ODBC SQL data types.</p>
<p><a href="#BABJAEBG">Table 21-8</a> lists the supported SQL data types and the equivalent ODBC SQL data type.</p>
<div id="ADFNS1219" class="tblformal">
<p class="titleintable"><a id="sthref1038"></a><a id="BABJAEBG"></a>Table 21-8 Supported SQL Data Types and the Equivalent ODBC SQL Data Type</p>
<table class="cellalignment293" title="Supported SQL Data Types and the Equivalent ODBC SQL Data Type" summary="This table describes the supported SQL data types and their equivalent ODBC Driver data type." dir="ltr">
<thead>
<tr class="cellalignment287">
<th class="cellalignment294" id="r1c1-t19">SQL Data Types</th>
<th class="cellalignment294" id="r1c2-t19">ODBC SQL Data Types</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment287">
<td class="cellalignment295" id="r2c1-t19" headers="r1c1-t19">
<p><code dir="ltr">CHAR</code></p>
</td>
<td class="cellalignment295" headers="r2c1-t19 r1c2-t19">
<p><code dir="ltr">SQL_CHAR</code> or <code dir="ltr">SQL_WCHAR</code> <a id="sthref1039" href="#sthref1039" onclick="footdisplay(1,&#34;\u003ccode dir=\&#34;ltr\&#34;\u003eCHAR\u003c/code\u003e maps to \u003ccode dir=\&#34;ltr\&#34;\u003eSQL_WCHAR\u003c/code\u003e if the character semantics were specified in the column definition and if the character set for the database is Unicode. &#34;)"><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r3c1-t19" headers="r1c1-t19">
<p><code dir="ltr">VARCHAR2</code></p>
</td>
<td class="cellalignment295" headers="r3c1-t19 r1c2-t19">
<p><code dir="ltr">SQL_VARCHAR</code> or <code dir="ltr">SQL_WVARCHAR</code> <a id="sthref1040" href="#sthref1040" onclick="footdisplay(2,&#34;\u003ccode dir=\&#34;ltr\&#34;\u003eVARCHAR2\u003c/code\u003e maps to \u003ccode dir=\&#34;ltr\&#34;\u003eSQL_WVARCHAR\u003c/code\u003e if the character semantics were specified in the column definition and if the character set for the database is Unicode.&#34;)"><sup class="tablefootnote">Foot&nbsp;2&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r4c1-t19" headers="r1c1-t19">
<p><code dir="ltr">NCHAR</code></p>
</td>
<td class="cellalignment295" headers="r4c1-t19 r1c2-t19">
<p><code dir="ltr">SQL_WCHAR</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r5c1-t19" headers="r1c1-t19">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
<td class="cellalignment295" headers="r5c1-t19 r1c2-t19">
<p><code dir="ltr">SQL_WVARCHAR</code></p>
</td>
</tr>
<tr class="cellalignment287">
<td class="cellalignment295" id="r6c1-t19" headers="r1c1-t19">
<p><code dir="ltr">NCLOB</code></p>
</td>
<td class="cellalignment295" headers="r6c1-t19 r1c2-t19">
<p><code dir="ltr">SQL_WLONGVARCHAR</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup><code dir="ltr">CHAR</code> maps to <code dir="ltr">SQL_WCHAR</code> if the character semantics were specified in the column definition and if the character set for the database is Unicode.</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2&nbsp;</sup><code dir="ltr">VARCHAR2</code> maps to <code dir="ltr">SQL_WVARCHAR</code> if the character semantics were specified in the column definition and if the character set for the database is Unicode.</p>
</div>
<!-- class="sect3" -->
<a id="BABFEHCB"></a>
<div id="ADFNS1220" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.12.3</span> Unicode Functions in the Driver Manager</h4>
<p>The Driver Manager performs the following functions when it detects that the underlying ODBC driver does not support Unicode:</p>
<ul>
<li>
<p>Convert Unicode function calls to ANSI function calls before calling the ANSI ODBC driver. String arguments are converted from Unicode to the local code page. For example, a call to <code dir="ltr">SQLPrepareW</code> is converted to call <code dir="ltr">SQLPrepare</code>. The text of the SQL statement parameter is converted from Unicode to the local code page.</p>
</li>
<li>
<p>Convert return parameters that are character data from the local code page to Unicode. For example, returning the column name through <code dir="ltr">SQLColAttribute</code>.</p>
</li>
<li>
<p>Convert data from the local code page to Unicode for columns bound as <code dir="ltr">SQL_C_WCHAR</code>.</p>
</li>
<li>
<p>Convert data from Unicode to the local code page for input parameters bound as <code dir="ltr">SQL_C_WCHAR</code>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABECFEA"></a>
<div id="ADFNS1221" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.12.4</span> SQLGetData Performance</h4>
<p>The <code dir="ltr">SQLGetData</code> function allows an ODBC application to specify the data type to receive a column as after the data has been fetched. OCI requires the Oracle ODBC Driver to specify the data type before it is fetched. In this case, the Oracle ODBC Driver uses the knowledge it has about the data type of the column as defined in the database to determine how to best default to fetching the column through OCI.</p>
<p>If a column that contains character data is not bound by <code dir="ltr">SQLBindCol</code>, the Oracle ODBC Driver must determine if it must fetch the column as Unicode or as the local code page. The driver could default to receiving the column as Unicode, however, this may result in as many as two unnecessary conversions. For example, if the data were encoded in the database as ANSI, there would be an ANSI to Unicode conversion to fetch the data into the Oracle ODBC Driver. If the ODBC application then requested the data as <code dir="ltr">SQL_C_CHAR</code>, there would be an additional conversion to revert the data back to its original encoding.</p>
<p>The default encoding of the Oracle client is used when fetching data. However, an ODBC application can overwrite this default and fetch the data as Unicode by binding the column or the parameter as the <code dir="ltr">WCHAR</code> data type.</p>
</div>
<!-- class="sect3" -->
<a id="BABEADIA"></a>
<div id="ADFNS1222" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.12.5</span> Unicode Samples</h4>
<p>As the Oracle ODBC Driver itself was implemented using TCHAR macros, Oracle recommends that ODBC application programs use TCHAR to take advantage of the driver.</p>
<p>The following links are program examples showing how to use TCHAR, which becomes the <code dir="ltr">WCHAR</code> data type in case you compile with <code dir="ltr">UNICODE</code> and <code dir="ltr">_UNICODE</code>.</p>
<ul>
<li>
<p><a href="#BABHJIII">Example 1: Connection to Database</a></p>
</li>
<li>
<p><a href="#BABEDAGC">Example 2: Simple Retrieval</a></p>
</li>
<li>
<p><a href="#BABDCEJH">Example 3: Retrieval Using SQLGetData (Binding After Fetch)</a></p>
</li>
<li>
<p><a href="#BABCJHID">Example 4: Simple Update</a></p>
</li>
<li>
<p><a href="#BABJAAJH">Example 5: Update and Retrieval for Long Data (CLOB)</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABHJIII"></a><a id="ADFNS1223"></a>Example 1: Connection to Database</p>
<p>No difference other than specifying Unicode literals for <code dir="ltr">SQLConnect</code>.</p>
<pre dir="ltr">HENV envHnd;
HDBC conHnd
;
HSTMT stmtHnd;
RETCODE rc;

rc = SQL_SUCCESS;

 
// ENV is allocated
rc = SQLAllocEnv(&amp;envHnd);
// Connection Handle is allocated
rc = SQLAllocConnect(envHnd, &amp;conHnd);
rc = SQLConnect(conHnd, _T(&#34;stpc19&#34;), SQL_NTS, _T(&#34;scott&#34;), SQL_NTS, _T(&#34;tiger&#34;),
 SQL_NTS);
.
.
.
if (conHnd)
SQLFreeConnect(conHnd);
if (envHnd)
  SQLFreeEnv(envHnd);
</pre>
<p class="subhead2"><a id="BABEDAGC"></a><a id="ADFNS1224"></a>Example 2: Simple Retrieval</p>
<p>The following example retrieves the employee names and the job titles from the <code dir="ltr">EMP</code> table. With the exception that you must specify TCHAR compliant data to every ODBC function, there is no difference to the ANSI case. If the case is a Unicode application, you have to specify the length of the buffer to the <code dir="ltr">BYTE</code> length when you call <code dir="ltr">SQLBindCol</code> (for example, <code dir="ltr">sizeof(ename)</code> ).</p>
<pre dir="ltr">/*
** Execute SQL, bind columns, and Fetch.
** Procedure:
**
** SQLExecDirect
** SQLBindCol
** SQLFetch
** 
*/
static SQLTCHAR *sqlStmt = _T(&#34;SELECT ename, job FROM emp&#34;);
SQLTCHAR ename[50];
SQLTCHAR job[50];
SQLINTEGER enamelen, joblen;
 
_tprintf(_T(&#34;Retrieve ENAME and JOB using SQLBindCol 1.../n[%s]/n&#34;), sqlStmt);
 
// Step 1: Prepare and Execute
rc = SQLExecDirect(stmtHnd, sqlStmt, SQL_NTS); // select
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 2: Bind Columns
rc = SQLBindCol(stmtHnd,
1,
SQL_C_TCHAR,
ename,
sizeof(ename),
&amp;enamelen);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
rc = SQLBindCol(stmtHnd,
2,
SQL_C_TCHAR,
job,
sizeof(job),
&amp;joblen);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
do 
{
// Step 3: Fetch Data
rc = SQLFetch(stmtHnd);
if (rc == SQL_NO_DATA)
break;
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
_tprintf(_T(&#34;ENAME = %s, JOB = %s/n&#34;), ename, job);
} while (1);
_tprintf(_T(&#34;Finished Retrieval/n/n&#34;));
</pre>
<p class="subhead2"><a id="BABDCEJH"></a><a id="ADFNS1225"></a>Example 3: Retrieval Using SQLGetData (Binding After Fetch)</p>
<p>This example shows how to use <code dir="ltr">SQLGetData</code>. For those who are not familiar with ODBC programming, the fetch is allowed before binding the data using <code dir="ltr">SQLGetData</code>, unlike in an OCI program. There is no difference to the ANSI application in terms of Unicode-specific issues.</p>
<pre dir="ltr">/*
** Execute SQL, bind columns, and Fetch.
** Procedure:
**
** SQLExecDirect
** SQLFetch
** SQLGetData
*/
static SQLTCHAR *sqlStmt = _T(&#34;SELECT ename,job FROM emp&#34;); // same as Case 1.
SQLTCHAR ename[50];
SQLTCHAR job[50];
 
_tprintf(_T(&#34;Retrieve ENAME and JOB using SQLGetData.../n[%s]/n&#34;), sqlStmt);
if (rc != SQL_SUCCESS)
{
_tprintf(_T(&#34;Failed to allocate STMT/n&#34;));
goto exit2;
}
 
// Step 1: Prepare and Execute
rc = SQLExecDirect(stmtHnd, sqlStmt, SQL_NTS); // select
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 

do 
{

// Step 2: Fetch
rc = SQLFetch(stmtHnd);
if (rc == SQL_NO_DAT
break;

checkSQLErr(envHnd, conHnd, stmtHnd, rc);

 
// Step 3: GetData
rc = SQLGetData(st
mtHnd, 
1,
SQL_C_TCHAR,
(SQLPOINTER)ename,
sizeof(ename), 
NULL);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
rc = SQLGetData(stmtHnd, 
2,
SQL_C_TCHAR, 
(SQLPOINTER)job,
sizeof(job), 
NULL);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
_tprintf(_T(&#34;ENAME = %s, JOB = %s/n&#34;), ename, job);
} while (1);
_tprintf(_T(&#34;Finished Retrieval/n/n&#34;));
</pre>
<p class="subhead2"><a id="BABCJHID"></a><a id="ADFNS1226"></a>Example 4: Simple Update</p>
<p>This example shows how to update data. Likewise, the length of data for <code dir="ltr">SQLBindParameter</code> has to be specified with the <code dir="ltr">BYTE</code> length, even in the case of a Unicode application.</p>
<pre dir="ltr">/
*
** Execute SQL, bind columns, and Fetch.
** Procedure:
**
** SQLPrepare
** SQLBindParameter
** SQLExecute
*/
static SQLTCHAR *sqlStmt = _T(&#34;INSERT INTO emp(empno,ename,job) VALUES(?,?,?)&#34;);
static SQLTCHAR *empno = _T(&#34;9876&#34;); // Emp No
static SQLTCHAR *ename = _T(&#34;ORACLE&#34;); // Name
static SQLTCHAR *job = _T(&#34;PRESIDENT&#34;); // Job
 
_tprintf(_T(&#34;Insert User ORACLE using SQLBindParameter.../n[%s]/n&#34;), sqlStmt);
 
// Step 1: Prepar
rc = SQLPrepare(stmtHnd, sqlStmt, SQL_NTS); // select
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 2: Bind Parameterrc = SQLBindParameter(stmtHnd, 
1, 
SQL_PARAM_INPUT,
SQL_C_TCHAR,
SQL_DECIMAL,
4, // 4 digit
0,
(SQLPOINTER)empno,
0,
NULL);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
rc = SQLBindParameter(stmtHnd, 
2, 
SQL_PARAM_INPUT,
SQL_C_TCHAR,
SQL_CHAR,
lstrlen(ename)*sizeof(TCHAR),
0,
(SQLPOINTER)ename,
lstrlen(ename)*sizeof(TCHAR),
NULL);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
rc = SQLBindParameter(stmtHnd, 
3, 
SQL_PARAM_INPUT,
SQL_C_TCHAR,
SQL_CHAR,
lstrlen(job)*sizeof(TCHAR),
0,
(SQLPOINTER)job,
lstrlen(job)*sizeof(TCHAR),
NULL);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 3: Execute
rc = SQLExecute(stmtHnd);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
</pre>
<p class="subhead2"><a id="BABJAAJH"></a><a id="ADFNS1227"></a>Example 5: Update and Retrieval for Long Data (CLOB)</p>
<p>This example may be the most complicated case to update and retrieve data for long data, like <code dir="ltr">CLOB</code>, in Oracle. Because the length of data must be the <code dir="ltr">BYTE</code> length, <code dir="ltr">lstrlen(TCHAR data)*sizeof(TCHAR)</code> is needed to derive the <code dir="ltr">BYTE</code> length.</p>
<pre dir="ltr">/*
** Execute SQL, bind columns, and Fetch.
** Procedure:
**
** SQLPrepare
** SQLBindParameter
** SQLExecute
** SQLParamData
** SQLPutData
**
** SQLExecDirect
** SQLFetch
** SQLGetData
*/
static SQLTCHAR *sqlStmt1 = _T(&#34;INSERT INTO clobtbl(clob1) VALUES(?)&#34;);
static SQLTCHAR *sqlStmt2 = _T(&#34;SELECT clob1 FROM clobtbl&#34;);
SQLTCHAR clobdata[1001];
SQLTCHAR resultdata[1001];
SQLINTEGER ind = SQL_DATA_AT_EXEC;
SQLTCHAR *bufp;
int clobdatalen, chunksize, dtsize, retchklen;
 
_tprintf(_T(&#34;Insert CLOB1 using SQLPutData.../n[%s]/n&#34;), sqlStmt1);
 
// Set CLOB Data
{
int i;
SQLTCHAR ch;
for (i=0, ch=_T(&#39;A&#39;); i&lt; sizeof(clobdata)/sizeof(SQLTCHAR); ++i, ++ch)
{
if (ch &gt; _T(&#39;Z&#39;))
ch = _T(&#39;A&#39;);
clobdata[i] = ch;
}
clobdata[sizeof(clobdata)/sizeof(SQLTCHAR)-1] = _T(&#39;/0&#39;);
}
clobdatalen = lstrlen(clobdata); // length of characters
chunksize = clobdatalen / 7; // 7 times to put
 
// Step 1: Prepare
rc = SQLPrepare(stmtHnd, sqlStmt1, SQL_NTS);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 2: Bind Parameter with SQL_DATA_AT_EXEC
rc = SQLBindParameter(stmtHnd, 
1, 
SQL_PARAM_INPUT,
SQL_C_TCHAR,
SQL_LONGVARCHAR,
clobdatalen*sizeof(TCHAR),
0,
(SQLPOINTER)clobdata,
clobdatalen*sizeof(TCHAR),
&amp;ind);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 3: Execute
rc = SQLExecute(stmtHnd);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 4: ParamData (initiation)
rc = SQLParamData(stmtHnd, (SQLPOINTER*)&amp;bufp); // set value
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
for (dtsize=0, bufp = clobdata;
dtsize &lt; clobdatalen;
dtsize += chunksize, bufp += chunksize)
{
int len;
if (dtsize+chunksize&lt;clobdatalen)
len = chunksize;
else
len = clobdatalen-dtsize;
 
// Step 5: PutData
rc = SQLPutData(stmtHnd, (SQLPOINTER)bufp, len*sizeof(TCHAR));
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
}
 
// Step 6: ParamData (temination)
rc = SQLParamData(stmtHnd, (SQLPOINTER*)&amp;bufp);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
rc = SQLFreeStmt(stmtHnd, SQL_CLOSE);
_tprintf(_T(&#34;Finished Update/n/n&#34;));
rc = SQLAllocStmt(conHnd, &amp;stmtHnd);
if (rc != SQL_SUCCESS)
{
_tprintf(_T(&#34;Failed to allocate STMT/n&#34;));
goto exit2;
}
 
// Clear Result Data
memset(resultdata, 0, sizeof(resultdata));
chunksize = clobdatalen / 15; // 15 times to put
 
// Step 1: Prepare
rc = SQLExecDirect(stmtHnd, sqlStmt2, SQL_NTS); // select
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
// Step 2: Fetch
rc = SQLFetch(stmtHnd);
checkSQLErr(envHnd, conHnd, stmtHnd, rc);
 
for(dtsize=0, bufp = resultdata;
dtsize &lt; sizeof(resultdata)/sizeof(TCHAR) &amp;&amp; rc != SQL_NO_DATA;
dtsize += chunksize-1, bufp += chunksize-1)
{
int len; // len should contain the space for NULL termination
if (dtsize+chunksize&lt;sizeof(resultdata)/sizeof(TCHAR))
len = chunksize;
else
len = sizeof(resultdata)/sizeof(TCHAR)-dtsize;
 
// Step 3: GetData
rc = SQLGetData(stmtHnd, 
1,
SQL_C_TCHAR,
(SQLPOINTER)bufp,
len*sizeof(TCHAR), 
&amp;retchklen);
}
if (!_tcscmp(resultdata, clobdata))
{
_tprintf(_T(&#34;Succeeded!!/n/n&#34;));
}
else
{
_tprintf(_T(&#34;Failed!!/n/n&#34;));
}
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABIIAIH"></a>
<div id="ADFNS1228" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">21.4.13</span> Performance and Tuning</h3>
<p class="subhead2"><a id="ADFNS997"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABBEJFD">General ODBC Programming Tips</a></p>
</li>
<li>
<p><a href="#BABFHDGC">Data Source Configuration Options</a></p>
</li>
<li>
<p><a href="#BABDHDBB">DATE and TIMESTAMP Data Types</a></p>
</li>
</ul>
<a id="BABBEJFD"></a>
<div id="ADFNS1229" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.13.1</span> General ODBC Programming Tips</h4>
<p>This section describes some general programming tips to improve the performance of an ODBC application.</p>
<ul>
<li>
<p>Enable connection pooling if the application will frequently connect and disconnect from a data source. Reusing pooled connections is extremely efficient compared to reestablishing a connection.</p>
</li>
<li>
<p>Minimize the number of times a statement must be prepared. Where possible, use bind parameters to make a statement reusable for different parameter values. Preparing a statement once and executing it several times is much more efficient than preparing the statement for every <code dir="ltr">SQLExecute</code>.</p>
</li>
<li>
<p>Do not include columns in a <code dir="ltr">SELECT</code> statement if you know the application will not retrieve them; especially <code dir="ltr">LONG</code> columns. Due to the nature of the database server protocols, the ODBC Driver must fetch the entire contents of a <code dir="ltr">LONG</code> column if it is included in the <code dir="ltr">SELECT</code> statement, regardless if the application binds the column or does a <code dir="ltr">SQLGetData</code>.</p>
</li>
<li>
<p>If you are performing transactions that do not update the data source, set the <code dir="ltr">SQL_ATTR_ACCESS_MODE</code> attribute of the ODBC <code dir="ltr">SQLSetConnectAttr</code> function to <code dir="ltr">SQL_MODE_READ_ONLY</code>.</p>
</li>
<li>
<p>If you are not using ODBC escape clauses, set the <code dir="ltr">SQL_ATTR_NOSCAN</code> attribute of the ODBC <code dir="ltr">SQLSetConnectAttr</code> function or the ODBC <code dir="ltr">SQLSetStmtAttr</code> function to true.</p>
</li>
<li>
<p>Use the ODBC <code dir="ltr">SQLFetchScroll</code> function instead of the ODBC <code dir="ltr">SQLFetch</code> function for retrieving data from tables that have a large number of rows.</p>
</li>
<li>
<p>Enable OCI statement caching when the same SQL statements are used multiple times (<code dir="ltr">StatementCache=T</code>).</p>
</li>
<li>
<p>Binding <code dir="ltr">NUMBER</code> columns as <code dir="ltr">FLOAT</code> speeds up query execution (<code dir="ltr">BindAsFLOAT=T</code>).</p>
</li>
<li>
<p>While fetching <code dir="ltr">LONG</code> or <code dir="ltr">LONG RAW</code> set <code dir="ltr">MaxLargeData=&lt;value&gt;</code> for optimum performance.</p>
</li>
<li>
<p>Setting <code dir="ltr">UseOCIDescribeAny=T</code> for applications making heavy calls to small packaged procedures that return <code dir="ltr">Ref Cursor</code> improves performance.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABFHDGC"></a>
<div id="ADFNS1230" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.13.2</span> Data Source Configuration Options</h4>
<p>This topic discusses performance implications of the following ODBC data source configuration options:</p>
<p class="subhead2"><a id="ADFNS998"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABICDCG">Enable Result Sets</a></p>
</li>
<li>
<p><a href="#BABGGIBJ">Enable LOBs</a></p>
</li>
<li>
<p><a href="#BABJDGJB">Bind TIMESTAMP as DATE</a></p>
</li>
<li>
<p><a href="#BABBBGDG">Enable Closing Cursors</a></p>
</li>
<li>
<p><a href="#BABFGFCH">Enable Thread Safety</a></p>
</li>
<li>
<p><a href="#BABCHCIA">Fetch Buffer Size</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABICDCG"></a><a id="ADFNS1231"></a>Enable Result Sets</p>
<p>This option enables the support of returning result sets (for example, <code dir="ltr">RefCursor</code>) from procedure calls. The default is enabling the returning of result sets.</p>
<p>The ODBC Driver must query the database server to determine the set of parameters for a procedure and their data types to determine if there are any <code dir="ltr">RefCursor</code> parameters. This query incurs an additional network round trip the first time any procedure is prepared and executed.</p>
<p class="subhead2"><a id="BABGGIBJ"></a><a id="ADFNS1232"></a>Enable LOBs</p>
<p>This option enables the support of inserting and updating LOBs. The default is enabled.</p>
<p>The ODBC Driver must query the database server to determine the data types of each parameter in an <code dir="ltr">INSERT</code> or <code dir="ltr">UPDATE</code> statement to determine if there are any LOB parameters. This query incurs an additional network round trip the first time any <code dir="ltr">INSERT</code> or <code dir="ltr">UPDATE</code> is prepared and executed.</p>
<p class="subhead2"><a id="BABJDGJB"></a><a id="ADFNS1233"></a>Bind TIMESTAMP as DATE</p>
<p>Binds <code dir="ltr">SQL_TIMESTAMP</code> parameters as the appropriate Oracle data type. If this option is <code dir="ltr">TRUE</code>, <code dir="ltr">SQL_TIMESTAMP</code> binds as the Oracle <code dir="ltr">DATE</code> data type. If this option is <code dir="ltr">FALSE</code>, <code dir="ltr">SQL_TIMESTAMP</code> binds as the Oracle <code dir="ltr">TIMESTAMP</code> data type (which is the default).</p>
<p class="subhead2"><a id="BABBBGDG"></a><a id="ADFNS1234"></a>Enable Closing Cursors</p>
<p>The <code dir="ltr">SQL_CLOSE</code> option of the ODBC function, <code dir="ltr">SQLFreeStmt</code>, is supposed to close associated cursors with a statement and discard all pending results. The application can reopen the cursor by executing the statement again without doing a <code dir="ltr">SQLPrepare</code> again. A typical scenario for this is an application that is idle for a while but reuses the same SQL statement. While the application is idle, it might free up associated server resources.</p>
<p>The Oracle Call Interface (OCI), on which the Oracle ODBC Driver is layered, does not support the functionality of closing cursors. So, by default, the <code dir="ltr">SQL_CLOSE</code> option has no effect in the Oracle ODBC Driver. The cursor and associated resources remain open on the database server.</p>
<p>Enabling this option causes the associated cursor to be closed on the database server. However, this results in the parse context of the SQL statement being lost. The ODBC application can execute the statement again without calling <code dir="ltr">SQLPrepare</code>. However, internally the ODBC Driver must prepare and execute the statement all over. Enabling this option severely impacts performance of applications that prepare a statement once and execute it repeatedly.</p>
<p>Enable this option only if freeing the resources on the server is absolutely necessary.</p>
<p class="subhead2"><a id="BABFGFCH"></a><a id="ADFNS1235"></a>Enable Thread Safety</p>
<p>If an application is single-threaded, this option can be disabled. By default, the ODBC Driver ensures that access to all internal structures (environment, connection, statement) are thread-safe. Single-threaded applications can eliminate some of the thread safety overhead by disabling this option. Disabling this option typically shows a minor performance improvement.</p>
<p class="subhead2"><a id="BABCHCIA"></a><a id="ADFNS1236"></a>Fetch Buffer Size</p>
<p>Set the Fetch Buffer Size in the <a href="#BABFJIJI">Oracle Options</a> tab of the <a href="#BABEFEHG">Oracle ODBC Driver Configuration Dialog Box</a> to a value specified in bytes. This value determines how many rows of data at a time the ODBC Driver prefetches from an Oracle database to the client&#39;s cache, regardless of the number of rows the application program requests in a single query, thus improving performance.</p>
<p>Applications that typically fetch fewer than 20 rows of data at a time improve their response time, particularly over slow network connections or to heavily loaded servers. Setting this too high can worsen response time or consume large amounts of memory. The default is 64,000 bytes. Choose a value that works best for your application.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When <code dir="ltr">LONG</code> and LOB data types are present, the number of rows prefetched by the ODBC Driver is not determined by the Fetch Buffer Size. The inclusion of the <code dir="ltr">LONG</code> and LOB data types minimizes the performance improvement and could result in excessive memory use. The ODBC Driver disregards the Fetch Buffer Size and prefetch a set number of rows in the presence of the <code dir="ltr">LONG</code> and LOB data types.</div>
</div>
<!-- class="sect3" -->
<a id="BABDHDBB"></a>
<div id="ADFNS1237" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">21.4.13.3</span> DATE and TIMESTAMP Data Types</h4>
<p>If a <code dir="ltr">DATE</code> column in the database is used in a <code dir="ltr">WHERE</code> clause and the column has an index, there can be an impact on performance. For example:</p>
<pre dir="ltr">SELECT * FROM EMP WHERE HIREDATE = ?
</pre>
<p>In this example, an index on the <code dir="ltr">HIREDATE</code> column could be used to make the query execute quickly. But, because <code dir="ltr">HIREDATE</code> is actually a <code dir="ltr">DATE</code> value and the ODBC Driver is supplying the parameter value as <code dir="ltr">TIMESTAMP</code>, the Oracle server&#39;s query optimizer must apply a conversion function. To prevent incorrect results (as might happen if the parameter value had nonzero fractional seconds), the optimizer applies the conversion to the <code dir="ltr">HIREDATE</code> column resulting in the following statement:</p>
<pre dir="ltr">SELECT * FROM EMP WHERE TO_TIMESTAMP(HIREDATE) = ?
</pre>
<p>Unfortunately, this has the effect of disabling the use of the index on the <code dir="ltr">HIREDATE</code> column and instead the server performs a sequential scan of the table. If the table has many rows, this can take a long time. As a workaround for this situation, the ODBC Driver has the connection option to <code dir="ltr">Bind TIMESTAMP as DATE</code>. When this option is enabled, the ODBC Driver binds <code dir="ltr">SQL_TIMESTAMP</code> parameters as the Oracle <code dir="ltr">DATE</code> data type instead of the Oracle <code dir="ltr">TIMESTAMP</code> data type. This allows the query optimizer to use any index on the <code dir="ltr">DATE</code> columns.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This option is intended for use only with Microsoft Access or other similar programs that bind <code dir="ltr">DATE</code> columns as <code dir="ltr">TIMESTAMP</code> columns. Do not use this option when there are actual <code dir="ltr">TIMESTAMP</code> columns present or when data loss may occur. Microsoft Access executes such queries using whatever columns are selected as the primary key.</div>
<p class="subhead2"><a id="ADFNS1238"></a>Related Topic</p>
<p><a href="#BABBAEEH">Implementation of Data Types (Advanced)</a></p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment286">
<tr>
<td class="cellalignment295">
<table class="cellalignment291">
<tr>
<td class="cellalignment290"><a href="adfns_publish.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment290"><a href="adfns_idcode.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment298">
<table class="cellalignment289">
<tr>
<td class="cellalignment290"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment290"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment290"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment290"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment290"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment290"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>