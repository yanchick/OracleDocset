<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-37793"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/PLW-05000%20to%20PLW-07206"></a><title>PLW-05000 to PLW-07206</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2016-09-12T14:14:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Error Messages"/>
<meta name="dcterms.identifier" content="E49325-10"/>
<meta name="dcterms.isVersionOf" content="ERRMG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Prev" href="PLS-00049.htm" title="Previous" type="text/html"/>
<link rel="Next" href="PRCA-01000.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49325-10.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26"></a> <span id="PAGE" style="display:none;">94/151</span> <!-- End Header -->
<h1 id="ERRMG-GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26" class="sect1"><span class="enumeration_chapter">91</span> PLW-05000 to PLW-07206</h1>
<div>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37746"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-67CC6087-4ED0-4587-AC43-9A6E1BDA7846"><!-- --></a> PLW-05000: mismatch in NOCOPY qualification between specification and body</dt>
<dd>
<p><span class="keyword">Cause:</span> The indicated parameter was declared with the NOCOPY hint in the subprogram specification but not in the body, or it was declared with the NOCOPY hint in the body but not in the specification.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Ensure that the specification and the body agree in their use of NOCOPY. If this mismatch is not corrected, the program will obey the declaration given in the specification, ignoring that in the body.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37747"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-D5309AD3-E955-4629-978D-B09CD3B838B4"><!-- --></a> PLW-05001: previous use of &#39;<span class="variable">string</span>&#39; (at line <span class="variable">string</span>) conflicts with this use</dt>
<dd>
<p><span class="keyword">Cause:</span> While looking for prior declarations of a variable, constant, or label, the compiler found another declaration with the same name in the same scope. Or, the headers of subprogram in a package specification and body were not identical.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Check the spelling of the variable, constant, or label name. Also check the names of all parameters and exceptions declared in the same scope. Then, remove or rename the object with the duplicate name. Or, change the headers of the packaged subprogram in the package specification or body so that they are identical.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37748"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-B0FD1AA7-21DF-449B-8D84-201D84E1F759"><!-- --></a> PLW-05003: same actual parameter(<span class="variable">string</span> and <span class="variable">string</span>) at IN and NOCOPY may have side effects</dt>
<dd>
<p><span class="keyword">Cause:</span> The indicated parameter was declared with the NOCOPY hint in the subprogram specification but not in the body, or it was declared with the NOCOPY hint in the body but not in the specification.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Ensure that the specification and the body agree in their use of NOCOPY. If this mismatch is not corrected, the program will obey the declaration given in the specification, ignoring that in the body.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37749"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-C0542E60-3E69-418F-97D3-71A11546D34B"><!-- --></a> PLW-05004: identifier <span class="variable">string</span> is also declared in STANDARD or is a SQL builtin</dt>
<dd>
<p><span class="keyword">Cause:</span> The indicated identifier was also either: o) declared in package STANDARD, or o) a SQL builtin function, or o) a pseudo-column. This situation can result in name resolution issues since the STANDARD/builtin declaration will be chosen over the local declaration in SQL statements; however the local declaration will be chosen over the STANDARD/builtin declaration outside SQL scope. (See the documentation on PL/SQL name resolution.)</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Either: o) rename the given identifier, o) qualify any references to the identifier with the containing scope&#39;s name, or o) make sure the intended resolution occurs if using the identifier in SQL scope.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37750"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-E08C7A6A-74CC-4309-AB2B-83FE020CA3A7"><!-- --></a> PLW-05005: subprogram <span class="variable">string</span> returns without value at line <span class="variable">string</span></dt>
<dd>
<p><span class="keyword">Cause:</span> A function terminated without a return value. RETURN statements with values are required for all PL/SQL functions.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Inspect function source code to ensure that every RETURN statement returns a value and that a function does not terminate by executing its END statement. Notice that this message may appear at the call site for a function if the function call was inlined and if the called function did not terminate properly.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37751"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-19291ED4-6820-4431-B90B-9369C558434F"><!-- --></a> PLW-05006: shadow type generation resulted in warning: <span class="variable">string</span></dt>
<dd>
<p><span class="keyword">Cause:</span> Compilation of a table function causes the creation of internally- generated types. A problem occurred during creation of these types which was not severe enough to prevent the creation of the types, but which may impact the usage of the table function. See the accompanying error message for more information.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Fix the issue reported in the accompanying error message.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37752"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-C44896F3-E7CC-4BDD-B41F-EDB41F41068E"><!-- --></a> PLW-05007: first parameter to pragma INLINE must be an identifier</dt>
<dd>
<p><span class="keyword">Cause:</span> The first parameter to the pragma INLINE must be an identifier denoting a procedure or function.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Use a procedure or function name</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37753"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-95C90659-4DF9-4D3D-8750-691EE72134C2"><!-- --></a> PLW-05008: illegal number of arguments for pragma <span class="variable">string</span></dt>
<dd>
<p><span class="keyword">Cause:</span> The number of arguments (actual parameters) passed to the named pragma (compiler directive) is incorrect. A required argument was omitted from the argument list, or the pragma syntax is faulty (for example, a comma might be missing between two parameters).</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Supply the missing argument or correct the faulty syntax.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37754"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-FFDD946C-6A66-4C9C-9D43-3B42725D2670"><!-- --></a> PLW-05009: pragma INLINE may not appear in a declaration list</dt>
<dd>
<p><span class="keyword">Cause:</span> Pragma INLINE applies only to the following statement, and can not appear immediately prior to a declaration</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Remove the pragma.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37755"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-BC919313-5EB7-44AA-86F0-0B3A75AE894C"><!-- --></a> PLW-05010: duplicate pragma INLINE on procedure &#39;<span class="variable">string</span>&#39;</dt>
<dd>
<p><span class="keyword">Cause:</span> Pragma INLINE was applied twice to the same procedure in the same statement. The procedure will be inlined only if all duplicates specify a control value of &#39;YES&#39;</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Remove the duplicate pragma.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37756"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-E9B1A700-5101-4E8C-9C6F-35065DD248B1"><!-- --></a> PLW-05011: pragma INLINE for procedure &#39;<span class="variable">string</span>&#39; does not apply to any calls</dt>
<dd>
<p><span class="keyword">Cause:</span> A pragma INLINE was provided, but there was no call to the mentioned procedure in the next statement.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Remove the unnecessary pragma.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37757"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-35BDE5F7-E4D2-4D93-B7D2-853ABC67803C"><!-- --></a> PLW-05012: pragma INLINE for procedure &#39;<span class="variable">string</span>&#39; could not be applied</dt>
<dd>
<p><span class="keyword">Cause:</span> A pragma INLINE(<span class="variable">name</span>, &#39;yes&#39;) was used, but the named procedure could not be inlined.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Eliminate the reasons which are blocking the inlining. See the documentation for possible problems.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37758"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-F22C9995-2988-4336-B8E0-5FD69ECDA0D1"><!-- --></a> PLW-05013: second parameter to pragma INLINE &#39;<span class="variable">string</span>&#39; is not &#39;YES&#39; or &#39;NO&#39;</dt>
<dd>
<p><span class="keyword">Cause:</span> The second parameter to the pragma INLINE governs whether or not a procedure call can be inlined. The only legal values are &#39;YES&#39;, meaning that the compiler should attempt to inline the call, and &#39;NO&#39;, meaning that the compiler must not inline the call.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Use &#39;YES&#39; or &#39;NO&#39; as appropriate.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37759"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-FCFDE9D1-B30D-49ED-84E7-889A60694FF4"><!-- --></a> PLW-05014: Pragma <span class="variable">string</span> cannot be specified here</dt>
<dd>
<p><span class="keyword">Cause:</span> The pragma was specified in an inappropriate context.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Remove or relocate the misplaced pragma. Check the documentation to determine the correct context for this pragma.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37760"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-CEB5F499-C64E-4363-9401-0AA5DB56FB64"><!-- --></a> PLW-05015: implementation restriction - too many debug records</dt>
<dd>
<p><span class="keyword">Cause:</span> The program is so large that it overflowed a compiler limit on the size of the debug symbol table. The module was compiled with partial debugging information.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Compile the module with PLSQL_DEBUG=FALSE, or split it into multiple modules</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37761"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-8E940AB7-9116-4ACF-BFBC-CC198C5BA1E0"><!-- --></a> PLW-05016: INTO clause should not be specified here</dt>
<dd>
<p><span class="keyword">Cause:</span> The INTO clause was incorrectly specified on a cursor declaration. It should have been specified on the FETCH statement.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Relocate the misplaced clause.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37762"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-E7C4C36D-BD78-454A-82C9-FE6A7A57ABDD"><!-- --></a> PLW-05017: prefix of the expression will be ignored</dt>
<dd>
<p><span class="keyword">Cause:</span> Generalized invocation with explicit SELF and a dotted name was used to call the type method causing the prefix of the dotted name to be ignored.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Do not use a dotted name to invoked type method in this context.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37763"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-6166EE59-30DC-4D71-9567-39A645CCDAE1"><!-- --></a> PLW-05018: unit <span class="variable">string</span> omitted optional AUTHID clause; default value DEFINER used</dt>
<dd>
<p><span class="keyword">Cause:</span> The AUTHID clause is missing. The unit is allowed to have an AUTHID clause. If the clause is missing, DEFINER&#39;s rights are used by default. Good practice suggests that an explicit AUTHID clause should always be used.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Write an explicit AUTHID clause for the unit.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37764"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-1B9670B4-F311-454A-8B24-3667152B0B15"><!-- --></a> PLW-05019: the language element near keyword <span class="variable">string</span> is deprecated beginning with version <span class="variable">string</span></dt>
<dd>
<p><span class="keyword">Cause:</span> A deprecated language element was used. The particular language element is deprecated in PL/SQL versions greater than or equal to the version number given in the message text.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> The deprecated language element should be deleted or rewritten. Deprecated PL/SQL language elements become obsolete one version after they are deprecated. An obsolete language element will no longer be supported and use of the element will result in an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37765"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-72D6AF52-1667-47B1-909B-BF7C62F656ED"><!-- --></a> PLW-05020: parameter name must be an identifier</dt>
<dd>
<p><span class="keyword">Cause:</span> A string literal was used as the parameter name in a call that used named notation.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Change the code to use an identifier for the parameter name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37766"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-DB19C81B-9EE9-4B38-A29C-B9382C8792E8"><!-- --></a> PLW-05021: exception <span class="variable">string</span> does not have a pragma EXCEPTION_INIT</dt>
<dd>
<p><span class="keyword">Cause:</span> A user-defined exception was declared but it was not given an exception number by the pragma EXCEPTION_INIT. Good practice suggests that all user-defined exceptions should be explicitly numbered.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Add a pragma EXCEPTION_INIT to give the exception a number.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37767"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-B9549B1E-3246-4699-AAB7-5355312C017A"><!-- --></a> PLW-05022: argument &#39;<span class="variable">string</span>&#39; is not comparable</dt>
<dd>
<p><span class="keyword">Cause:</span> An argument to either IN, BETWEEN or MEMBER OF was not of a comparable type. Or, if the argument was of an object type, no MAP or ORDER method was specified for the type.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Use appropriate arguments, or specify a MAP or ORDER method.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37768"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-1F4CDE66-6A3F-4FC1-BBE0-57D7B7E00320"><!-- --></a> PLW-05023: PL/Scope is disabled because SYSAUX is offline.</dt>
<dd>
<p><span class="keyword">Cause:</span> PL/Scope was disabled for the current PL/SQL unit compilation because the SYSAUX tablespace is or was offline at the time of compilation. Note that PL/Scope stores identified metadata in the SYSAUX tablespace, and thus cannot function when SYSAUX is offline.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Verify SYSAUX is online and recompile the PL/SQL unit.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37769"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-A410F63B-8FB5-4E30-A9FF-EEB5794DA22B"><!-- --></a> PLW-05024: Do not use BULK COLLECT clause in a cursor declaration</dt>
<dd>
<p><span class="keyword">Cause:</span> A BULK COLLECT clause was specified in a cursor declaration.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Remove the BULK COLLECT clause from the cursor declaration, moving it to the FETCH statement or statements, if appropriate.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37770"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-1B86D27D-F7EE-4DA6-B7CF-C7E141212366"><!-- --></a> PLW-05999: implementation restriction (may be temporary) <span class="variable">string</span></dt>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37771"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-E26F272A-4BB7-40A1-8F5E-5432FB69AD1F"><!-- --></a> PLW-06002: Unreachable code</dt>
<dd>
<p><span class="keyword">Cause:</span> Static program analysis determined that some code on the specified line would never be reached during execution. This may have been caused by expression evaluation at compile time.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Inspect program logic for possible defects. Disable the warning if much code is made unreachable intentionally and the warning message is more annoying than helpful.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37772"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-6AB7BF6D-BBCF-4DC6-A77F-C5DB8C3DB20D"><!-- --></a> PLW-06003: unknown inquiry directive &#39;<span class="variable">string</span>&#39;</dt>
<dd>
<p><span class="keyword">Cause:</span> An unknown inquiry directive was used. The inquiry directive is neither predefined nor user-defined.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Use a predefined inquiry directive or define the inquiry directive.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37773"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-3A4D536A-6987-4362-8217-59FFAFBFC48D"><!-- --></a> PLW-06004: inlining of call of procedure &#39;<span class="variable">string</span>&#39; requested</dt>
<dd>
<p><span class="keyword">Cause:</span> A pragma INLINE(, &#39;YES&#39;) referring to the named procedure was found. The compiler will, if possible, inline this call.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> n/a</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37774"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-DC1F57C6-FA89-4990-A1D1-14AAD516E69F"><!-- --></a> PLW-06005: inlining of call of procedure &#39;<span class="variable">string</span>&#39; was done</dt>
<dd>
<p><span class="keyword">Cause:</span> A call to the procedure was inlined.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> n/a</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37775"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-3E2586FB-908C-40FB-BC8A-E123C6F9FF00"><!-- --></a> PLW-06006: uncalled procedure &#34;<span class="variable">string</span>&#34; is removed.</dt>
<dd>
<p><span class="keyword">Cause:</span> Static program analysis determined that the procedure can never be called or executed. Therefore, it has been removed to save time during compilation and space during execution.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Inspect program logic for possible defects. Disable the warning if the procedure is useful but simply not being used right now and the warning message is more annoying than helpful.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37776"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-6FECEC26-240D-4AAB-8B07-1CEEDB0A06A4"><!-- --></a> PLW-06007: procedure &#34;<span class="variable">string</span>&#34; is removed because optimization removed calls</dt>
<dd>
<p><span class="keyword">Cause:</span> Static program analysis determined that the procedure can never be called or executed. Therefore, it has been removed to save time during compilation and space during execution.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Inspect program logic for possible defects. Disable the warning if the procedure is useful but simply not being used right now and the warning message is more annoying than helpful.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37777"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-870F40DE-4209-4F80-869E-39F52ABB41F2"><!-- --></a> PLW-06008: call of procedure &#39;<span class="variable">string</span>&#39; will not be inlined</dt>
<dd>
<p><span class="keyword">Cause:</span> A pragma INLINE(, &#39;NO&#39;) referring to the named procedure was found. The compiler is prevented from inlining this call.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> n/a</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37778"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-46593C82-9083-4A10-BFFE-D62249C5CE18"><!-- --></a> PLW-06009: procedure &#34;<span class="variable">string</span>&#34; OTHERS handler does not end in RAISE or RAISE_APPLICATION_ERROR</dt>
<dd>
<p><span class="keyword">Cause:</span> The OTHERS handler can exit without executing some form of RAISE or or a call to the standard procedure RAISE_APPLICATION_ERROR.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Good programming practices suggest that OTHERS handlers must always pass an exception upward. Inspect the program logic to determine if the handler code needs revision.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37779"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-A80CE960-87FB-4F62-BFF3-9DE3275F7E56"><!-- --></a> PLW-06010: keyword &#34;<span class="variable">string</span>&#34; used as a defined name</dt>
<dd>
<p><span class="keyword">Cause:</span> A PL/SQL or SQL keyword was used as defined name. Although legal, this is not recommended.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Choose another name for the defined item.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37780"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-68193A81-D9E8-435E-850F-76C654563422"><!-- --></a> PLW-06011: detailed dependency information discarded due to size limitations</dt>
<dd>
<p><span class="keyword">Cause:</span> The compiled unit was so large that the compiler could not store detailed dependency information that could be used to quickly recompile the unit if it was invalidated.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Break up the unit into smaller units.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37781"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-85B2D2FB-06E0-4680-A75B-7AF29C7C6A4B"><!-- --></a> PLW-06012: SQL statement cannot be inlined. <span class="variable">string</span></dt>
<dd>
<p><span class="keyword">Cause:</span> The SQL statement could not be inlined.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> n/a</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37782"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-842DC769-6B29-4CDD-832E-F5073198066B"><!-- --></a> PLW-06013: deprecated parameter PLSQL_DEBUG forces PLSQL_OPTIMIZE_LEVEL &lt;= 1</dt>
<dd>
<p><span class="keyword">Cause:</span> The PLSQL_DEBUG parameter was set to TRUE forcing the optimization level to 1 (or 0 if the user selected 0) regardless of the setting of the PLSQL_OPTIMIZE_LEVEL parameter to a higher level</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Do not use the PLSQL_DEBUG parameter; it is deprecated. Instead, set the PLSQL_OPTIMIZE_LEVEL parameter to 1.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37783"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-EB25D6EC-BED5-4AC4-8F14-45CE3195943D"><!-- --></a> PLW-06014: PLSQL_OPTIMIZE_LEVEL &lt;= 1 turns off native code generation</dt>
<dd>
<p><span class="keyword">Cause:</span> Native code generation was not done because the optimization was set to 1 or less.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> The goal of native code generation is high performance and a low optimization level defeats that purpose. Either request a higher optimization level or remove the request for native code generation. Note that using the deprecated parameter PLSQL_DEBUG also forces the optimization level to 1; do not use this parameter when native code generation is desired.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37784"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-D3EA7C39-BA15-4A96-B6DD-FEA3E5180153"><!-- --></a> PLW-06015: parameter PLSQL_DEBUG is deprecated; use PLSQL_OPTIMIZE_LEVEL = 1</dt>
<dd>
<p><span class="keyword">Cause:</span> The PLSQL_DEBUG parameter was specified.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> The parameter PLSQL_DEBUG no longer controls the generation of debugging information by the PL/SQL compiler; debugging information is always generated and no special parameter is needed.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37785"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-6206EBD4-F329-44B5-95C2-BF65FFA7A8EB"><!-- --></a> PLW-06016: unit <span class="variable">string</span> is too large; native code generation turned off</dt>
<dd>
<p><span class="keyword">Cause:</span> Because the program was extremely large, analysis took an excessive amount of time or space to complete causing native compilation to be turned off.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> The goal of native code generation is high performance and the compiler does extensive analysis of the program. If possible, reduce the size of the largest procedure, or split the program unit into multiple units.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37786"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-28DDCC2C-0EDD-4236-8507-AAF8520B71DA"><!-- --></a> PLW-06017: an operation will raise an exception</dt>
<dd>
<p><span class="keyword">Cause:</span> An operation near this location is certain to raise an exception during execution; it may be a programming error because it is not an explicit RAISE.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> The compiler has determined that some operation near this location is certain to raise an exception during execution. This may be a programming error; consider rewriting the code. If the intention is to raise an exception, use an explicit RAISE statement.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37787"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-2B16D9EA-98F3-4CE3-83C5-2BCE0BFD16A4"><!-- --></a> PLW-06018: an infinity or NaN value is computed or used</dt>
<dd>
<p><span class="keyword">Cause:</span> An operation near this location computes or uses an infinite NUMBER, BINARY_FLOAT, or BINARY_DOUBLE value or a NaN BINARY_FLOAT or BINARY_DOUBLE value.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> The compiler has determined that an operation near this location computes or uses either an infinity or a not-a-number (NaN) value. This may indicate a programming error; consider rewriting the code. If the intention is to use a BINARY_FLOAT or a BINARY_DOUBLE non-numeric value, use the appropriate constant from STANDARD rather than computing the value. Some valid uses exist for these values; the warning will still appear in those cases. The use of infinite NUMBER values is not well-defined and should be avoided.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37788"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-0AB16FCE-BA26-4DE8-8698-048B6B6E0606"><!-- --></a> PLW-07202: bind type would result in conversion away from column type</dt>
<dd>
<p><span class="keyword">Cause:</span> The column type and the bind type do not exactly match. This will result in the column being converted to the type of the bind variable. This type conversion may prevent the SQL optimizer from using any index the column participates in. This may adversely affect the execution performance of this statement.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> To make use of any index for this column, make sure the bind type is the same type as the column type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37789"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-7A79B5E1-3CCE-4D15-9D25-38F492894484"><!-- --></a> PLW-07203: parameter &#39;<span class="variable">string</span>&#39; may benefit from use of the NOCOPY compiler hint</dt>
<dd>
<p><span class="keyword">Cause:</span> The mode of the specified parameter was IN OUT or OUT. Use of the NOCOPY compiler hint may speed up calls to this subprogram.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Change the mode of the parameter to explicitly use the NOCOPY compiler hint. For example, if your subprogram declaration is: PROCEDURE proc(p1 IN OUT CLOB); you can change it to: PROCEDURE proc(p1 IN OUT NOCOPY clob); to get the benefit of the NOCOPY hint. For member procedures or functions in object types, you may have to explicitly declare the SELF parameter as illustrated in the following: MEMBER PROCEDURE proc(SELF IN OUT NOCOPY MY_TYPE);</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37790"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-6C70A0A8-F087-4EFA-8E05-8C7160A83569"><!-- --></a> PLW-07204: conversion away from column type may result in sub-optimal query plan</dt>
<dd>
<p><span class="keyword">Cause:</span> The column type and the bind type do not exactly match. This may result in the column being converted to the type of the bind variable. This type conversion may prevent the SQL optimizer from using any index the column participates in. This may adversely affect the execution performance of this statement.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> To make use of any index for this column, make sure the bind type is the same type as the column type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37791"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-3F1E60CC-B3F9-48FA-B363-B1DBCE352E88"><!-- --></a> PLW-07205: SIMPLE_INTEGER is mixed with BINARY_INTEGER or PLS_INTEGER</dt>
<dd>
<p><span class="keyword">Cause:</span> Using SIMPLE_INTEGER and BINARY_INTEGER or PLS_INTEGER arguments in the same arithmetic expression may inhibit certain optimizations.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> Try using SIMPLE_INTEGER values only if the expression is computed on a performance critical path.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-37792"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CEC1E0B9-84FA-402B-918B-3DADFA012F26__GUID-C5D2BEFB-26A3-46E0-88D2-632476D67EA6"><!-- --></a> PLW-07206: analysis suggests that the assignment to &#39;<span class="variable">string</span>&#39; may be unnecessary</dt>
<dd>
<p><span class="keyword">Cause:</span> This assignment may be unnecessary; the PL/SQL optimizer could not find any further use of the variable which was being set. If the assignment was being done for some side-effect such as raising a specific exception, the compiler may not have been able to understand the side-effect and this warning may be inappropriate.</p>
</dd>
<dd class="ddexpand">
<p><span class="keyword">Action:</span> If the assignment sets a variable whose value will not be used again and there are no side-effects (exceptions or calls) to consider, remove the assignment for better performance. If the assignment was in place to raise a specific known exception, replace the assignment with a RAISE statement.</p>
</dd>
</dl>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1376">
<tr>
<td class="cellalignment1383">
<table class="cellalignment1381">
<tr>
<td class="cellalignment1380"><a href="PLS-00049.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1380"><a href="PRCA-01000.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1385">
<table class="cellalignment1379">
<tr>
<td class="cellalignment1380"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1380"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1380"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1380"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1380"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>