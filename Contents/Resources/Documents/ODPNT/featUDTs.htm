<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79214"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20User-Defined%20Types%20%28UDTs%29%20and%20.NET%20Custom%20Types"></a><title>Oracle User-Defined Types (UDTs) and .NET Custom Types</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-10-14T19:43:26Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Provider for .NET Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17732-11"/>
<meta name="dcterms.isVersionOf" content="ODPNT"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="featXML.htm" title="Previous" type="text/html"/>
<link rel="Next" href="featBulkCopy.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17732-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">34/172</span> <!-- End Header --><a id="CJAGCAID"></a>
<div id="ODPNT379" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Oracle User-Defined Types (UDTs) and .NET Custom Types<a id="sthref563"></a><a id="sthref564"></a><a id="sthref565"></a><a id="sthref566"></a><a id="sthref567"></a><a id="sthref568"></a><a id="sthref569"></a><a id="sthref570"></a><a id="sthref571"></a></h1>
<p>ODP.NET has the ability to represent Oracle UDTs found in the database as custom types in .NET applications. UDTs are useful in representing complex entities as a single object that can be shared among applications. Oracle products, such as Oracle Spatial and Oracle XML DB, use their own complex types frequently.</p>
<p>To represent Oracle UDTs as .NET custom types, applications must apply .NET attributes to custom classes and structs, and to their public fields and properties.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
ODP.NET, Managed Driver does not support UDTs and .NET Custom Types</div>
<p>To convert between UDTs and custom types, ODP.NET uses custom interfaces.</p>
<p>This section discusses the following topics:</p>
<ul>
<li>
<p><a href="#CJAGFHBA">Oracle User-Defined Types (UDTs)</a></p>
</li>
<li>
<p><a href="#CJAHICFG">Custom Types</a></p>
</li>
<li>
<p><a href="#BABIAFAC">Specifying Custom Type Mappings</a></p>
</li>
<li>
<p><a href="#CJAJEFDC">Converting Between Custom Types and Oracle UDTs</a></p>
</li>
<li>
<p><a href="#CJAHJHGE">Oracle UDT Attribute Mappings</a></p>
</li>
<li>
<p><a href="#CJABAEDD">Oracle UDT Retrieval from OracleDataReader</a></p>
</li>
<li>
<p><a href="#CJADABDE">Oracle UDT Metadata Retrieval from OracleDataReader</a></p>
</li>
<li>
<p><a href="#CJAFCAAI">Oracle UDT Parameter Binding with OracleParameter</a></p>
</li>
<li>
<p><a href="#CJADEBEF">Populating the DataSet with Oracle UDTs</a></p>
</li>
<li>
<p><a href="#CJAIBIDI">UDT Method Invocation</a></p>
</li>
<li>
<p><a href="#BABFAIAC">Configuration Settings for Oracle UDTs</a></p>
</li>
</ul>
<a id="CJAGFHBA"></a>
<div id="ODPNT380" class="sect2">
<h2 class="sect2"><a id="sthref572"></a><a id="sthref573"></a><a id="sthref574"></a><a id="sthref575"></a><a id="sthref576"></a><a id="sthref577"></a>Oracle User-Defined Types (UDTs)<a id="sthref578"></a><a id="sthref579"></a><a id="sthref580"></a><a id="sthref581"></a></h2>
<p>Oracle Data Provider for .NET supports Oracle object types or user-defined types (UDTs), which are defined in the Oracle database.</p>
<p>There are two kinds of UDTs:</p>
<ul>
<li>
<p>Object types (Oracle Object)</p>
</li>
<li>
<p>Collection types (which can be <code>VARRAY</code> types or nested table types)</p>
</li>
</ul>
<p>Additionally, ODP.NET supports references (<code>REF</code>) to object types.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleRefClass.htm#CIHFHAHF">&#34;OracleRef Class&#34;</a></div>
<p>The term UDT is used interchangeably with Oracle object types and abstract data types (ADTs).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADOBJ" href="../ADOBJ/toc.htm"><span class="italic">Oracle Database Object-Relational Developer&#39;s Guide</span></a> for complete descriptions of object types</div>
<p>The name of the Oracle UDT is case-sensitive and must be in the form <code><span class="codeinlineitalic">schema_name.type_name</span></code>.</p>
<p>UDT samples are provided in the <code><span class="codeinlineitalic">ORACLE_BASE\\ORACLE_HOME</span></code><code>\ODP.NET\Samples\UDT</code> directory.</p>
</div>
<!-- class="sect2" -->
<a id="CJAHICFG"></a>
<div id="ODPNT381" class="sect2">
<h2 class="sect2">Custom Types<a id="sthref582"></a><a id="sthref583"></a><a id="sthref584"></a></h2>
<p><a id="CJAGGFAI"></a>Oracle Data Provider for .NET supports UDTs by representing Oracle UDTs defined in the database as .NET types, that is, custom types. For every Oracle UDT that the application wishes to fetch and manipulate, one custom type factory and one custom type are needed. The custom factory class is solely responsible for instantiating the custom type. ODP.NET uses the interfaces implemented on the custom factory classes to instantiate custom types at run time. Custom types define the mapping between the Oracle UDT attributes or elements to the .NET members. ODP.NET uses the interfaces implemented on the custom type instances to transfer values between the Oracle UDT and the custom type at run time.</p>
<p>Custom types can be .NET classes or structures. They can represent either Oracle Objects or Oracle Collections. Custom types can be implemented manually by the application developer or generated through an ODP.NET code generation tool.</p>
<p>Once the factory class and the custom type are defined and meet the implementation requirements, the application may set ODP.NET to automatically discover the mapping between the Oracle UDT and the custom type. This discovery process is based on the attribute that is applied on the custom factory class. Alternatively, the application can provide an explicit mapping through a configuration file.</p>
<p>Oracle Collections can be represented as an array of .NET Types. For example, an Oracle Collection type of <code>NUMBER</code> can be mapped to an <code>int[]</code>. Moreover, an Oracle Collection type of an Oracle UDT can be mapped to an array of the custom type.</p>
<p>Custom types must adhere to certain requirements in order for ODP.NET to represent Oracle UDTs as custom types. These requirements are as follows:</p>
<div id="ODPNT382" class="sect3"><a id="sthref585"></a>
<h3 class="sect3"><a id="sthref586"></a>Required Custom Type Implementations</h3>
<p>This section lists the required implementations for a custom .NET class or structure.</p>
<ul>
<li>
<p><code>Oracle.DataAcess.Types.IOracleCustomType</code> interface implementation</p>
<p>This interface is used for conversions between custom types and Oracle UDTs.</p>
<p>The interface methods are implemented using the static methods of the <code>OracleUdt</code> class.</p>
</li>
<li>
<p>Custom Type Factories</p>
<p>A custom type factory is used to create an instance of a custom type. A custom type factory is an implementation of either the <code>IOracleCustomTypeFactory</code> interface, the <code>IOracleArrayTypeFactory</code> interface, or both interfaces, as follows:</p>
<ul>
<li>
<p>To create a custom type that represents an Oracle Object, the custom type or a separate custom type factory class must implement the <code>Oracle.DataAccess.Types.IOracleCustomTypeFactory</code> interface.</p>
</li>
<li>
<p>To create a custom type that represents an Oracle Collection, the custom type or a separate custom type factory class must implement the <code>Oracle.DataAccess.Types.IOracleCustomTypeFactory</code> interface and the <code>Oracle.DataAccess.Types.IOracleArrayTypeFactory</code> interface.</p>
</li>
<li>
<p>To create an array type that represents an Oracle Collection, a custom type factory class must implement the <code>Oracle.DataAccess.Types.IOracleArrayTypeFactory</code> interface.</p>
</li>
</ul>
</li>
<li>
<p>Custom Type Member Mapping Attributes</p>
<p>The custom type member mapping attributes specify the mapping between custom type members and either Oracle object attributes or Oracle collection elements.</p>
<p>There are two types of custom type member mapping attributes:</p>
<ul>
<li>
<p><code>OracleObjectMappingAttribute</code></p>
<p>This attribute specifies the mapping between custom type members and Oracle object attributes for custom types that represent Oracle objects. This attribute must be applied to each custom type member (either field or property) that represents an Oracle Object attribute.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Not all Oracle object attributes need to be mapped to custom type members. If there is no <code>OracleObjectMappingAttribute</code> for a particular object attribute, ODP.NET ignores that object attribute when converting between Oracle objects and custom types.</div>
</li>
<li>
<p><code>OracleArrayMappingAttribute</code></p>
<p>This attribute specifies the custom type member that stores the elements of an Oracle collection for custom types representing Oracle collections.The attribute must be specified on only one of the custom type members.</p>
</li>
</ul>
</li>
<li>
<p><code>Oracle.DataAcess.Types.INullable</code> interface implementation</p>
<p>This interface is used to determine if an instance of a custom type represents a null UDT. The <code>IsNull</code> property of the interface enables applications and ODP.NET to determine whether or not the UDT is null.</p>
</li>
<li>
<p>Static Null field</p>
<p>The public static <code>Null</code> property is used to return a null UDT. This property returns a custom type with an <code>IsNull</code> property that returns true.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="ODPNT383" class="sect3"><a id="sthref587"></a>
<h3 class="sect3"><a id="sthref588"></a>Optional Custom Type Implementations</h3>
<p>The following are optional:</p>
<ul>
<li>
<p><code>IXMLSerializable</code></p>
<p>The <code>IXMLSerializable</code> interface is used in the .NET 2.0 framework to enable conversion between the custom type and its XML representation.This interface is only used if the serialization and deserialization of a custom type is needed in the <code>DataSet</code>.</p>
</li>
<li>
<p><code>Static Parse</code> and <code>Public ToString</code> methods</p>
<p>These methods enable conversion between the custom type and its string representation.</p>
<p>These methods are invoked when a <code>DataGrid</code> control is used to accept changes and display instance values.</p>
</li>
<li>
<p>Type Inheritance</p>
<p>Type Inheritance refers to the process of deriving an Oracle UDT in the database from a super type.</p>
<p>If the custom type represents an Oracle UDT that is derived from a super type, the custom class should follow the same type hierarchy, that is, the custom class should be derived from another custom class that represents the super type defined in the database.</p>
</li>
<li>
<p><code>OracleCustomTypeMappingAttribute</code></p>
<p>The <code>OracleCustomTypeMappingAttribute</code> object specifies the mapping between a custom type (or an array type) and an Oracle UDT.</p>
<p>There must be a unique custom type factory for each Oracle UDT used by the application as follows:</p>
<ul>
<li>
<p>Oracle Object Types:</p>
<p>The custom type factory must return a custom type that only represents the specified Oracle Object Type.</p>
</li>
<li>
<p>Oracle Collection Types:</p>
<p>The custom type factory may return a custom type that can be used by other Oracle Collection Types. This is common when an array type is used to represent an Oracle Collection, for example, when an <code>int[]</code> is used to represent a collection of <code>NUMBER</code>s.</p>
</li>
</ul>
<p>If the <code>OracleCustomTypeMappingAttribute</code> is not specified, then custom type mappings must be specified through XML configuration files, that is, <code>machine.config</code>, and either <code>app.config</code> for Windows applications or <code>web.config</code> for web applications.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="IOracleCustomTypeInterface.htm#BABHGCIG">&#34;IOracleCustomType Interface&#34;</a></p>
</li>
<li>
<p><a href="OracleRefClass.htm#CIHFHAHF">&#34;OracleRef Class&#34;</a></p>
</li>
<li>
<p><a href="IOracleCustomTypeFactoryInterface.htm#BABBFEJE">&#34;IOracleCustomTypeFactory Interface&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABIAFAC"></a>
<div id="ODPNT384" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Specifying Custom Type Mappings<a id="sthref589"></a><a id="sthref590"></a><a id="sthref591"></a></h2>
<p>After creating a custom type, the application must specify a custom type mapping that maps the custom type to an Oracle UDT in the database. This can be done using a custom type factory or XML in configuration files.</p>
<p>Using XML to specify custom type mappings has priority, if both techniques have been implemented. At run time, if ODP.NET finds custom type mappings specified in configuration files, it ignores any custom type mappings specified through the <code>OracleCustomTypeMappingAttribute</code> object.</p>
<p>Custom type mappings cannot be specified using synonyms, regardless of whether or not the mapping is provided through the <code>OracleCustomTypeMappingAttribute</code> object or the XML configuration file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">Oracle Developer Tools for Visual Studio help</span> sections on User-Defined Types Node, under Server Explorer for Visual Studio 2005 and Oracle Explorer for Visual Studio 2003, for further information on UDT mapping</div>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#CJAEJGDC">&#34;Using a Custom Type Factory to Specify Custom Type Mappings&#34;</a></p>
</li>
<li>
<p><a href="#BABGCCCG">&#34;Using XML in Configuration Files to Specify Custom Type Mappings&#34;</a></p>
</li>
</ul>
<a id="CJAEJGDC"></a>
<div id="ODPNT385" class="sect3">
<h3 class="sect3">Using a Custom Type Factory to Specify Custom Type Mappings<a id="sthref592"></a><a id="sthref593"></a></h3>
<p>The application can specify a custom type mapping using a custom type factory. The application supplies the name of the Oracle UDT, in the format <code><span class="codeinlineitalic">schema_name.type_name</span></code>, to an <code>OracleCustomTypeMappingAttribute</code> object and applies the name to the corresponding custom type factory. A custom type factory is a class or struct that implements either or both the <code>IOracleCustomTypeFactory</code> and <code>IOracleArrayTypeFactory</code> interfaces.</p>
<p>Note that for each Oracle UDT used by the application, there must be a unique custom type factory. Additionally, for Oracle Object Types, the custom type factory must return a custom type that uniquely represents the specified Oracle Object Type. For Oracle Collection Types, the custom type factory returns a custom type that can be used by other Oracle Collection Types. This is common when an custom type that is an array type represents an Oracle Collection, that is, when an <code>int[]</code> is used to represent a collection of <code>NUMBER</code>s.</p>
<p>At run time, using reflection programming, ODP.NET discovers all the custom type mappings specified by the application through the <code>OracleCustomTypeMappingAttribute</code> object.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The UDT name that is specified in the <code>OracleCustomTypeMappingAttribute</code> may not contain a period.</div>
</div>
<!-- class="sect3" -->
<a id="BABGCCCG"></a>
<div id="ODPNT386" class="sect3">
<h3 class="sect3">Using XML in Configuration Files to Specify Custom Type Mappings<a id="sthref594"></a></h3>
<p>The application can specify a custom type mapping with XML in configuration files, for example: using <code>machine.config</code>, and either <code>app.config</code> for Windows applications or <code>web.config</code> for web applications.</p>
<p>The custom type mappings must be specified in the <code>oracle.dataaccess.client</code> configuration section group. Each custom type mapping must be added to the collection of custom type mappings using the XML element <code>&lt;add&gt;</code>.</p>
<p>Each custom type mapping is consists of a name attribute and a value attribute. The name attribute may be any user-specified name that represents the custom type mapping. The value attribute must begin with <code>udtMapping</code> and be followed by the required and optional attributes listed below.</p>
<div id="ODPNT387" class="sect4"><a id="sthref595"></a>
<h4 class="sect4">Required Attributes</h4>
<ul>
<li>
<p><code>factoryName</code></p>
<p>The case-sensitive assembly qualified name of the custom type factory class or struct.</p>
<p>If the assembly that defines the custom type factory does not have a strong name, then a partial assembly name consisting of just the assembly name is sufficient. In the case of strongly named assemblies, a complete assembly name is required. It must include the assembly name, the <code>Version</code>, <code>Culture</code>, <code>PublicKeyToken</code>.</p>
</li>
<li>
<p><code>typeName</code></p>
<p>The case-sensitive name of the UDT defined in the database. By default all UDTs are created in the database with upper case names</p>
</li>
<li>
<p><code>schemaName</code></p>
<p>The case-sensitive schema in which the UDT is defined in the database. By default all schemas are created in the database with upper case names</p>
</li>
</ul>
</div>
<!-- class="sect4" -->
<div id="ODPNT388" class="sect4"><a id="sthref596"></a>
<h4 class="sect4">Optional Attributes</h4>
<ul>
<li>
<p><code>dataSource</code></p>
<p>If specified, indicates that the custom type mapping applies only to Oracle UDTs defined in the database that the application connects to, as specified by the TNS name alias.</p>
<p>The Data Source is case-insensitive.</p>
</li>
</ul>
<p>The following is an example of the format of the XML that can be specified in the configuration file for .NET 2.0:</p>
<pre> &lt;oracle.dataaccess.client&gt;
    &lt;settings&gt;
      &lt;add name=&#34;Person&#34; value=&#34;udtMapping factoryName=&#39;Sample.PersonFactory,
          Sample, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&#39;
          typeName=&#39;PERSON&#39; schemaName=&#39;SCOTT&#39; dataSource=&#39;oracle&#39;&#34;/&gt;
      &lt;add name=&#34;Student&#34; value=&#34;udtMapping factoryName=&#39;Sample.StudentFactory,
          Sample, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&#39;
          typeName=&#39;STUDENT&#39; schemaName=&#39;SCOTT&#39;&#34;/&gt;
    &lt;/settings&gt;
  &lt;/oracle.dataaccess.client&gt;
</pre></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABCFCGH"></a>
<div id="ODPNT389" class="sect3">
<h3 class="sect3">Using Custom Type Mappings<a id="sthref597"></a></h3>
<p>During data retrieval, the application uses the custom type mappings to convert an Oracle UDT to a custom type. When data is provided back to the database through an input or input/output parameter, or by an update through an Oracle <code>REF</code>, the application uses the mappings to convert the custom type to an Oracle UDT.</p>
<p>In the case of input and input/output parameters, the application must also set the <code>OracleParameter</code> <code>UdtTypeName</code> property to the user-defined type name of the parameter.</p>
<p>In certain cases, where Oracle UDTs are part of a type hierarchy, the custom type must be instantiated as a specific type in the type hierarchy. The Oracle UDT provided by the custom type mapping must a subtype of the Oracle UDT specified by the <code>OracleParameter</code> <code>UdtTypeName</code> property.</p>
<p>For example, the parameter for a stored procedure is of type, <code>SCOTT.PERSON</code> and has a subtype, <code>SCOTT.STUDENT</code>. The application has a custom class instance that represents <code>SCOTT.STUDENT</code>. The <code>UdtTypeName</code> is set to <code>SCOTT.PERSON</code>, but the custom type mapping indicates that the custom class is mapped to <code>SCOTT.STUDENT</code> and overrides the <code>UdtTypeName</code> when it instantiates the Oracle UDT. Thus, ODP.NET instantiates and binds Oracle UDTs appropriately when the custom object represents an Oracle UDT that is a subtype of the parameter type.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJAJEFDC"></a>
<div id="ODPNT390" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Converting Between Custom Types and Oracle UDTs<a id="sthref598"></a></h2>
<p>ODP.NET can convert between Oracle UDTs and custom types, if the proper attribute mappings are specified and the custom types are defined properly.</p>
<p>ODP.NET performs a conversion whenever an Oracle UDT is fetched as:</p>
<ul>
<li>
<p>In, out, in/out parameters bound for SQL or PL/SQL execution</p>
<p>The <code>DbType</code> property of <code>OracleParameter</code> must be set to <code>DbType.Object</code> or the <code>OracleDbType</code> property must be set to <code>OracleDbType.Object</code> or <code>OracleDbType.Array</code>.</p>
<p>For parameters that are user-defined types, the <code>UdtTypeName</code> property of the <code>OracleParameter</code> object must be always set to the parameter type.</p>
<p>Note: The <code>UdtTypeName</code> may differ from the Oracle UDT specified in the custom type mapping. This is the case when the parameter type is a super type of the Oracle UDT that the custom type represents.</p>
</li>
<li>
<p>Column value retrieved from an <code>OracleDataReader</code> object</p>
<p>If the application requests for the value either through the <code>GetValue</code>, <code>GetValues</code>, <code>GetOracleValue</code>, <code>GetOracleValues</code>, <code>GetProviderSpecificValue</code>, or <code>GetProviderSpecificValues</code> methods or the <code>Item[]</code> property for a UDT column, ODP.NET finds the corresponding custom type that represents the Oracle UDT and carries out the proper conversion.</p>
</li>
<li>
<p>Part of a Resultset that populates the <code>DataSet</code></p>
<p>If the application populates the <code>DataSet</code> with a result that contains UDTs using the <code>Fill</code> method on the <code>OracleDataAdapter</code>, the <code>DataSet</code> is populated with custom types that represent Oracle UDTs. With ADO.NET 2.0, the <code>DataSet</code> is populated with custom types for UDT columns regardless of whether the <code>ReturnProviderSpecificTypes</code> on the <code>OracleDataAdapter</code> is set to <code>true</code> or <code>false</code>.</p>
</li>
<li>
<p>A Object referenced through a <code>REF</code></p>
<p>When an Object referenced by a <code>REF</code> is retrieved, the custom type that represents the Oracle UDT is returned.</p>
<p>The application can use the <code>OracleUdtFetchOption</code> method to control the copy of the Object that is returned as follows:</p>
<ul>
<li>
<p>If the <code>OracleUdtFetchOption.Cache</code> option is specified and a cached copy of the object exists, the cached copy is immediately returned. If no cached copy exists, the latest object copy from the database is cached and returned.</p>
</li>
<li>
<p>If the <code>OracleUdtFetchOption.Server</code> option is specified, the latest object copy from the database is cached and returned. If the object is already cached, the latest object copy overwrites the existing one.</p>
</li>
<li>
<p>If the <code>OracleUdtFetchOption.TransactionCache</code> option is specified, there are two possibilities within the same transaction:</p>
<ul>
<li>
<p>If the object copy was previously retrieved using the <code>Server</code> or <code>TransactionCache</code> option, the <code>TransactionCache</code> option behavior becomes equivalent to the <code>Cache</code> option behavior.</p>
</li>
<li>
<p>If the object copy was not previously retrieved using the Server or <code>TransactionCache</code> option, the <code>TransactionCache</code> option behavior becomes equivalent to the <code>Server</code> option behavior.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CJAHJHGE"></a>
<div id="ODPNT0024" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Oracle UDT Attribute Mappings<a id="sthref599"></a></h2>
<p><a href="#BABIFHGJ">Table 3-19</a> lists valid mappings of attributes (for objects) and elements (for collections), between Oracle UDT types and custom object types which can be either .NET types or Oracle provider-specific types (ODP.NET types).</p>
<p>Oracle collections do not have to map to a custom class. They can map to arrays of a specific type. <a href="#BABIFHGJ">Table 3-19</a> indicates those collections with elements of a specified Oracle type that can map to arrays of a .NET Type or a provider-specific type. For example, if an Oracle Collection is a <code>VARRAY</code> of <code>NUMBER(8)</code>, it can map to a <code>typeof(int[]</code>). This eliminates the need to construct a class that only holds an <code>int[]</code>.</p>
<p>For .NET 2.0, Oracle Collections can be mapped to Nullable types. This allows .NET 2.0 applications to obtain a nullable <code>int[]</code> which can hold null values in the <code>int[]</code>.</p>
<p>Note that Oracle UDT attributes and elements cannot be mapped to <code>object</code> or <code>object[]</code>.</p>
<div id="ODPNT391" class="tblformal">
<p class="titleintable"><a id="sthref600"></a><a id="BABIFHGJ"></a>Table 3-19 Attribute Mappings Between UDTs and Custom Object Types</p>
<table class="cellalignment4231" title="Attribute Mappings Between UDTs and Custom Object Types" summary="Row lists UDT types, column 1 gives name, column 2 the corresponding .NET type and column 3 the corresponding ODP.NET type" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t98">Type of UDT Attribute or Element</th>
<th class="cellalignment4230" id="r1c2-t98">.NET Type</th>
<th class="cellalignment4230" id="r1c3-t98">ODP.NET Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t98" headers="r1c1-t98">
<p><code>BFILE</code> #<a href="#CJAIGCBJ">1</a></p>
</td>
<td class="cellalignment4226" headers="r2c1-t98 r1c2-t98">
<p><code>System.Byte[]</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t98 r1c3-t98">
<p><code>OracleBFile</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t98" headers="r1c1-t98">
<p><code>BINARY</code> <code>FLOAT</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t98 r1c2-t98">
<p><code>System.Byte, System.Int16, System.Int32, System.Int64, System.Single, System.Double,</code> <code>System.Decimal</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t98 r1c3-t98">
<p><code>OracleDecimal</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t98" headers="r1c1-t98">
<p><code>BINARY</code> <code>DOUBLE</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t98 r1c2-t98">
<p><code>System.Byte, System.Int16, System.Int32, System.Int64, System.Single, System.Double,</code> <code>System.Decimal</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t98 r1c3-t98">
<p><code>OracleDecimal</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t98" headers="r1c1-t98">
<p><code>BLOB</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t98 r1c2-t98">
<p><code>System.Byte[]</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t98 r1c3-t98">
<p><code>OracleBlob</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t98" headers="r1c1-t98">
<p><code>CHAR</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t98 r1c2-t98">
<p><code>System.Char[]</code>, <code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t98 r1c3-t98">
<p><code>OracleString</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t98" headers="r1c1-t98">
<p><code>CLOB</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t98 r1c2-t98">
<p><code>System.Char[]</code>, <code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t98 r1c3-t98">
<p><code>OracleClob</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t98" headers="r1c1-t98">
<p><code>DATE</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t98 r1c2-t98">
<p><code>System.DateTime</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t98 r1c3-t98">
<p><code>OracleDate</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t98" headers="r1c1-t98">
<p><code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t98 r1c2-t98">
<p><code>System.TimeSpan</code>,</p>
</td>
<td class="cellalignment4226" headers="r9c1-t98 r1c3-t98">
<p><code>OracleIntervalDS</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t98" headers="r1c1-t98">
<p><code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t98 r1c2-t98">
<p><code>System.Int64</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t98 r1c3-t98">
<p><code>OracleIntervalYM</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t98" headers="r1c1-t98">
<p><code>LONG</code> <code>RAW</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t98 r1c2-t98">
<p><code>System.Byte[]</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t98 r1c3-t98">
<p><code>OracleBinary</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t98" headers="r1c1-t98">
<p><code>NCHAR</code></p>
</td>
<td class="cellalignment4226" headers="r12c1-t98 r1c2-t98">
<p><code>System.Char[]</code>, <code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r12c1-t98 r1c3-t98">
<p><code>OracleString</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t98" headers="r1c1-t98">
<p><code>NCLOB</code></p>
</td>
<td class="cellalignment4226" headers="r13c1-t98 r1c2-t98">
<p><code>System.Char[]</code>, <code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r13c1-t98 r1c3-t98">
<p><code>OracleClob</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t98" headers="r1c1-t98">
<p>Nested Table</p>
</td>
<td class="cellalignment4226" headers="r14c1-t98 r1c2-t98">
<p><code><span class="codeinlineitalic">custom type</span></code>, <code><span class="codeinlineitalic">.NET type[]</span></code>, or <code><span class="codeinlineitalic">custom type</span></code>[]</p>
</td>
<td class="cellalignment4226" headers="r14c1-t98 r1c3-t98">
<p><code><span class="codeinlineitalic">ODP Type[]</span></code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r15c1-t98" headers="r1c1-t98">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment4226" headers="r15c1-t98 r1c2-t98">
<p><code>System.Byte, System.Int16, System.Int32, System.Int64, System.Single, System.Double,</code> <code>System.Decimal</code></p>
</td>
<td class="cellalignment4226" headers="r15c1-t98 r1c3-t98">
<p><code>OracleDecimal</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r16c1-t98" headers="r1c1-t98">
<p><code>NVARCHAR2</code></p>
</td>
<td class="cellalignment4226" headers="r16c1-t98 r1c2-t98">
<p><code>System.Char[]</code>, <code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r16c1-t98 r1c3-t98">
<p><code>OracleString</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r17c1-t98" headers="r1c1-t98">
<p>Object Type</p>
</td>
<td class="cellalignment4226" headers="r17c1-t98 r1c2-t98">
<p><code><span class="codeinlineitalic">custom type</span></code></p>
</td>
<td class="cellalignment4226" headers="r17c1-t98 r1c3-t98">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r18c1-t98" headers="r1c1-t98">
<p><code>RAW</code></p>
</td>
<td class="cellalignment4226" headers="r18c1-t98 r1c2-t98">
<p><code>System.Byte[]</code></p>
</td>
<td class="cellalignment4226" headers="r18c1-t98 r1c3-t98">
<p><code>OracleBinary</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r19c1-t98" headers="r1c1-t98">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r19c1-t98 r1c2-t98">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r19c1-t98 r1c3-t98">
<p><code>OracleRef</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r20c1-t98" headers="r1c1-t98">
<p><code>TIMESTAMP</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t98 r1c2-t98">
<p><code>System.DateTime</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t98 r1c3-t98">
<p><code>OracleTimeStamp</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r21c1-t98" headers="r1c1-t98">
<p><code>TIMESTAMP</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code></p>
</td>
<td class="cellalignment4226" headers="r21c1-t98 r1c2-t98">
<p><code>System.DateTime</code></p>
</td>
<td class="cellalignment4226" headers="r21c1-t98 r1c3-t98">
<p><code>OracleTimeStampLTZ</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r22c1-t98" headers="r1c1-t98">
<p><code>TIMESTAMP</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code></p>
</td>
<td class="cellalignment4226" headers="r22c1-t98 r1c2-t98">
<p><code>System.DateTime</code></p>
</td>
<td class="cellalignment4226" headers="r22c1-t98 r1c3-t98">
<p><code>OracleTimeStampTZ</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r23c1-t98" headers="r1c1-t98">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment4226" headers="r23c1-t98 r1c2-t98">
<p><code>System.Char[]</code>, <code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r23c1-t98 r1c3-t98">
<p><code>OracleString</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r24c1-t98" headers="r1c1-t98">
<p><code>VARRAY</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t98 r1c2-t98">
<p><code><span class="codeinlineitalic">custom type</span></code>, <code><span class="codeinlineitalic">.NET type[]</span></code>, or <code><span class="codeinlineitalic">custom type</span></code>[]</p>
</td>
<td class="cellalignment4226" headers="r24c1-t98 r1c3-t98">
<p><code><span class="codeinlineitalic">ODP Type[]</span></code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p><span class="bold">Notes:</span></p>
<ol>
<li id="CJAIGCBJ">
<p>Conversion from a <code>System.Byte[]</code> to a <code>BFILE</code> is not supported, and therefore, <code>System.Byte[]</code> only represents a <code>BFILE</code> in read-only scenarios.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CJABAEDD"></a>
<div id="ODPNT392" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Oracle UDT Retrieval from OracleDataReader<a id="sthref601"></a><a id="sthref602"></a></h2>
<p>In order to retrieve Oracle UDTs from the <code>OracleDataReader</code>, an application must specify a custom type mapping that determines the type that will represent the Oracle UDT. Once a custom type mapping has been specified and any necessary custom types have been created, the application can retrieve Oracle UDTs.</p>
<p><a href="#CJAIGBED">Table 3-20</a> shows the type and value returned from an <code>OracleDataReader</code> object based on the method invoked, the column type, and whether or not there is a valid Custom type mapping.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code><span class="codeinlineitalic">PS Object</span></code> refers to a provider-specific object.</div>
<div id="ODPNT393" class="tblformalwide">
<p class="titleintable"><a id="sthref603"></a><a id="CJAIGBED"></a>Table 3-20 Type and Value Returned from OracleDataReader Object</p>
<table class="cellalignment4229" title="Type and Value Returned from OracleDataReader Object" summary="Rowss are methods and properties. column 1 lists names, column 2 column datatypes, column 3 registered custom type, and column 4 the UDT and NULL UDT values" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t100">OracleDataReader method/property invocation</th>
<th class="cellalignment4230" id="r1c2-t100">Column Data Type</th>
<th class="cellalignment4230" id="r1c3-t100">Custom Type Mapping</th>
<th class="cellalignment4230" id="r1c4-t100">Value Returned for Oracle UDT</th>
<th class="cellalignment4230" id="r1c5-t100">NULL Value Returned for Oracle UDT</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t100" headers="r1c1-t100">
<p><code>Item[index]</code>, <code>Item[name]</code>, <code>GetValue()</code>, <code>GetValues()</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t100 r1c2-t100">
<p><code>Object</code>, <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t100 r1c3-t100">
<p>none</p>
</td>
<td class="cellalignment4226" headers="r2c1-t100 r1c4-t100">
<p>Exception thrown</p>
</td>
<td class="cellalignment4226" headers="r2c1-t100 r1c5-t100">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t100" headers="r1c1-t100">
<p><code>Item[index]</code>, <code>Item[name]</code>, <code>GetValue()</code>, <code>GetValues()</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t100 r1c2-t100">
<p><code>Object</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t100 r1c3-t100">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t100 r1c4-t100">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t100 r1c5-t100">
<p><code>DBNull.Value</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t100" headers="r1c1-t100">
<p><code>Item[index]</code>, <code>Item[name]</code>, <code>GetValue()</code>, <code>GetValues()</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t100 r1c2-t100">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t100 r1c3-t100">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t100 r1c4-t100">
<p><code><span class="codeinlineitalic">custom object | custom object[]</span></code> | <code><span class="codeinlineitalic">.NET Type[]</span></code> | <code><span class="codeinlineitalic">PS object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t100 r1c5-t100">
<p><code>DBNull.Value</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t100" headers="r1c1-t100">
<p><code>Item[index]</code>, <code>Item[name]</code>, <code>GetValue()</code>, <code>GetValues()</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t100 r1c2-t100">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t100 r1c3-t100">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t100 r1c4-t100">
<p><code><span class="codeinlineitalic">string</span></code> (HEX)</p>
</td>
<td class="cellalignment4226" headers="r5c1-t100 r1c5-t100">
<p><code>DBNull.Value</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t100" headers="r1c1-t100">
<p><code>GetString()</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t100 r1c2-t100">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t100 r1c3-t100">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t100 r1c4-t100">
<p><code>string</code> (HEX)</p>
</td>
<td class="cellalignment4226" headers="r6c1-t100 r1c5-t100">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t100" headers="r1c1-t100">
<p><code>GetProviderSpecificValue()</code>, <code>GetProviderSpecificValues()</code>, <code>GetOracleValue()</code>, <code>GetOracleValues()</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t100 r1c2-t100">
<p><code>Object</code>, <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t100 r1c3-t100">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t100 r1c4-t100">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t100 r1c5-t100">
<p><code><span class="codeinlineitalic">custom type</span></code>.<code>Null</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t100" headers="r1c1-t100">
<p><code>GetProviderSpecificValue()</code>, <code>GetProviderSpecificValues()</code>, <code>GetOracleValue()</code>, <code>GetOracleValues()</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t100 r1c2-t100">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t100 r1c3-t100">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t100 r1c4-t100">
<p><code><span class="codeinlineitalic">custom object[]</span></code> | <code><span class="codeinlineitalic">.NET Type[]</span></code> | <code><span class="codeinlineitalic">PS object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t100 r1c5-t100">
<p><code>null</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t100" headers="r1c1-t100">
<p><code>GetProviderSpecificValue()</code>, <code>GetProviderSpecificValues()</code>, <code>GetOracleValue()</code>, <code>GetOracleValues()</code>, <code>GetOracleRef()</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t100 r1c2-t100">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t100 r1c3-t100">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t100 r1c4-t100">
<p><code>OracleRef</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t100 r1c5-t100">
<p><code>OracleRef.Null</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t100" headers="r1c1-t100">
<p><code>GetOracleString()</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t100 r1c2-t100">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t100 r1c3-t100">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t100 r1c4-t100">
<p><code>OracleString</code> (HEX)</p>
</td>
<td class="cellalignment4226" headers="r10c1-t100 r1c5-t100">
<p><code>OracleString.Null</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="featData.htm#i1006788">&#34;Obtaining Data from an OracleDataReader Object&#34;</a></div>
</div>
<!-- class="sect2" -->
<a id="CJADABDE"></a>
<div id="ODPNT394" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Oracle UDT Metadata Retrieval from OracleDataReader<a id="sthref604"></a></h2>
<p>An <code>OracleDataReader</code> object can return metadata used to determine the custom type that represents an Oracle UDT when a .NET Type or Provider-Specific Type accessor is invoked. The same custom type is used when populating the <code>DataSet</code> using the <code>OracleDataAdapter.Fill</code> method.</p>
<p><a href="#BABDHJFD">Table 3-21</a> shows the values returned from the <code>OracleDataReader</code> <code>GetFieldType</code> and <code>GetProviderSpecificFieldType</code> methods that specify the .NET type of the column.</p>
<div id="ODPNT395" class="tblformal">
<p class="titleintable"><a id="sthref605"></a><a id="BABDHJFD"></a>Table 3-21 Values Returned from OracleDataReader Methods</p>
<table class="cellalignment4231" title="Values Returned from OracleDataReader Methods" summary="Rows are method/property invocations. Column 1 is name, column 2 is column dataype, column 3 is registered custom type, column 4 is return value" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t102">OracleDataReader Method/Property invocation</th>
<th class="cellalignment4230" id="r1c2-t102">Column Data Type</th>
<th class="cellalignment4230" id="r1c3-t102">Custom Type Mapping</th>
<th class="cellalignment4230" id="r1c4-t102">Return Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t102" headers="r1c1-t102">
<p><code>GetFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t102 r1c2-t102">
<p><code>Object</code>, <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t102 r1c3-t102">
<p>none</p>
</td>
<td class="cellalignment4226" headers="r2c1-t102 r1c4-t102">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t102" headers="r1c1-t102">
<p><code>GetFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t102 r1c2-t102">
<p><code>Object</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t102 r1c3-t102">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t102 r1c4-t102">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type</span></code><code>)</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t102" headers="r1c1-t102">
<p><code>GetFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t102 r1c2-t102">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t102 r1c3-t102">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t102 r1c4-t102">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type</span></code><code>)</code> | <code>typeof(</code><code><span class="codeinlineitalic">custom type[]))</span></code> | <code>typeof(</code><code><span class="codeinlineitalic">.NET type[])</span></code>) | <code>typeof(</code><code><span class="codeinlineitalic">PS type[])</span></code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t102" headers="r1c1-t102">
<p><code>GetFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t102 r1c2-t102">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t102 r1c3-t102">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t102 r1c4-t102">
<p><code>typeof(string)</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t102" headers="r1c1-t102">
<p><code>GetProviderSpecificFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t102 r1c2-t102">
<p><code>Object</code>, <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t102 r1c3-t102">
<p>none</p>
</td>
<td class="cellalignment4226" headers="r6c1-t102 r1c4-t102">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t102" headers="r1c1-t102">
<p><code>GetProviderSpecificFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t102 r1c2-t102">
<p><code>Object</code>,</p>
</td>
<td class="cellalignment4226" headers="r7c1-t102 r1c3-t102">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t102 r1c4-t102">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type</span></code><code>)</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t102" headers="r1c1-t102">
<p><code>GetProviderSpecificFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t102 r1c2-t102">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t102 r1c3-t102">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t102 r1c4-t102">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type</span></code><code>)</code> | <code>typeof(</code><code><span class="codeinlineitalic">custom type[]))</span></code> | <code>typeof(</code><code><span class="codeinlineitalic">.NET type[])</span></code>) | <code>typeof(</code><code><span class="codeinlineitalic">PS type[])</span></code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t102" headers="r1c1-t102">
<p><code>GetProviderSpecificFieldType(index)</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t102 r1c2-t102">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t102 r1c3-t102">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t102 r1c4-t102">
<p><code>typeof(OracleRef)</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CJAFCAAI"></a>
<div id="ODPNT396" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Oracle UDT Parameter Binding with OracleParameter<a id="sthref606"></a><a id="sthref607"></a><a id="sthref608"></a></h2>
<p>This section discusses using UDT output and input parameter bindings with an <code>OracleParameter</code> object.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="featOraCommand.htm#i1007242">&#34;Parameter Binding&#34;</a></div>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#CJAEBHJF">Guidelines for Binding UDT Input and Output Parameters</a></p>
</li>
<li>
<p><a href="#CJADGEAA">UDT Input Parameter Binding with OracleParameters</a></p>
</li>
<li>
<p><a href="#CJAGGJAH">UDT Output Parameter Binding with OracleParameters</a></p>
</li>
</ul>
<a id="CJAEBHJF"></a>
<div id="ODPNT397" class="sect3">
<h3 class="sect3">Guidelines for Binding UDT Input and Output Parameters</h3>
<p>Developers must consider the following when using UDT parameter bindings with an <code>OracleParameter</code> object.</p>
<ul>
<li>
<p>The <code>UdtTypeName</code> property must be set. Binding is based on the <code>UdtTypeName</code> property regardless of the parameter direction.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>UdtTypeName</code> may differ from the Oracle UDT specified in the custom type mapping. This occurs when the parameter type is a super type of the Oracle UDT that the custom type represents.</div>
</li>
<li>
<p>In case of Input/Output binding, the behavior is the same as Input and Output parameters.</p>
</li>
<li>
<p>For Input parameter values, the bind value is converted to the UDT specified by the custom type mapping.</p>
</li>
<li>
<p>For Output parameters:</p>
<ul>
<li>
<p>If the value being returned is an Oracle Object or Collection, it is converted to a custom type or array type as specified by the custom type mapping. The value returned is always a custom type or an array type, regardless of whether the property most recently set was <code>DbType</code> or <code>OracleDbType</code>.</p>
</li>
<li>
<p>If the value being returned is a <code>REF</code>, then no custom type mapping is required.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CJADGEAA"></a>
<div id="ODPNT398" class="sect3">
<h3 class="sect3">UDT Input Parameter Binding with OracleParameters</h3>
<p>Only certain combinations of these <code>OracleParameter</code> property values, <code>DbType</code>, <code>OracleDbType</code>, and <code>UdtTypeName</code>, can exist on the <code>OracleParameter</code> object. <code>OracleParameter</code> objects cannot be set to combinations that are not listed.</p>
<p><a href="#BABCBHIH">Table 3-22</a> describes the valid ways of binding input parameters for Oracle UDTs.</p>
<p>The last column indicates the Oracle type that ODP.NET converts the <code>OracleParameter</code> value to before binding.</p>
<div id="ODPNT399" class="tblformalwide">
<p class="titleintable"><a id="sthref609"></a><a id="BABCBHIH"></a>Table 3-22 Valid Ways to Bind Input Parameters for Oracle UDTs</p>
<table class="cellalignment4229" title="Valid Ways to Bind Input Parameters for Oracle UDTs" summary="rows are OracleParameter values, first columns is names, second column is DbType, third column OracleDbType, 4th column UdtTypeName, 5th column UDT Mapping 6th colmn is type converted to before binding" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t105">OracleParameter. Value</th>
<th class="cellalignment4230" id="r1c2-t105">OracleParameter. DbType or OracleParameter. OracleDbType</th>
<th class="cellalignment4230" id="r1c3-t105">OracleParameter. UdtTypeName</th>
<th class="cellalignment4230" id="r1c4-t105">Custom Type Mappings</th>
<th class="cellalignment4230" id="r1c5-t105">Oracle Type converted to before Binding</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">custom object</span></code> | <code><span class="codeinlineitalic">custom object[]</span></code> |<code><span class="codeinlineitalic">.NET object[]</span></code> |<code><span class="codeinlineitalic">PS object[]</span></code> | <code>String</code> (HEX) | <code>OracleString</code>(HEX) | <code>OracleRef</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t105 r1c2-t105">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code> | <code>OracleDbType.Array</code> | <code>OracleDbType.Ref</code> |</p>
</td>
<td class="cellalignment4226" headers="r2c1-t105 r1c3-t105">
<p>not set</p>
</td>
<td class="cellalignment4226" headers="r2c1-t105 r1c4-t105">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t105 r1c5-t105">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">custom object[]</span></code> |<code><span class="codeinlineitalic">.NET object[]</span></code> |<code><span class="codeinlineitalic">PS object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t105 r1c2-t105">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code> | <code>OracleDbType.Array</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t105 r1c4-t105">
<p>none</p>
</td>
<td class="cellalignment4226" headers="r3c1-t105 r1c5-t105">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t105 r1c2-t105">
<p><code>DbType.Object</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t105 r1c4-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t105 r1c5-t105">
<p>Specified UDT is instantiated. Value is bound as Object or Collection, based on the <code>UdtTypeName</code> property</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t105 r1c2-t105">
<p><code>OracleDbType.Object</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t105 r1c4-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t105 r1c5-t105">
<p>Specified UDT is instantiated. <code><span class="codeinlineitalic">schema.type</span></code> must represent an object.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t105 r1c2-t105">
<p><code>OracleDbType.Array</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t105 r1c4-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t105 r1c5-t105">
<p>Specified UDT is instantiated. <code><span class="codeinlineitalic">schema.type</span></code> must represent a collection.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">.NET object[] | PS object[] | custom object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t105 r1c2-t105">
<p><code>DbType.Object</code> | <code>OracleDbType.Array</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t105 r1c4-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t105 r1c5-t105">
<p>UDT specified by <code>OracleParameter.UdtTypeName</code> is instantiated.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">.NET object[] | PS object[] | custom object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t105 r1c2-t105">
<p><code>OracleDbType.Object</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t105 r1c4-t105">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t105 r1c5-t105">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t105" headers="r1c1-t105">
<p><code><span class="codeinlineitalic">custom object</span></code> |<code><span class="codeinlineitalic">.NET object[]</span></code> |<code><span class="codeinlineitalic">PS object[]</span></code> <code><span class="codeinlineitalic">custom object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t105 r1c2-t105">
<p><code>OracleDbType.Ref</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t105 r1c4-t105">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t105 r1c5-t105">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t105" headers="r1c1-t105">
<p><code>String</code> (HEX) | <code>OracleString</code> (HEX) | <code>OracleRef</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t105 r1c2-t105">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code> | <code>OracleDbType.Array</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t105 r1c4-t105">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t105 r1c5-t105">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t105" headers="r1c1-t105">
<p>Char[] (HEX) | <code>String</code> (HEX) |<code>OracleString</code> (HEX) | <code>OracleRef</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t105 r1c2-t105">
<p><code>OracleDbType.Ref</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t105 r1c3-t105">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t105 r1c4-t105">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t105 r1c5-t105">
<p>A <code>REF</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect3" -->
<a id="CJAGGJAH"></a>
<div id="ODPNT400" class="sect3">
<h3 class="sect3">UDT Output Parameter Binding with OracleParameters</h3>
<p>Only certain combinations of these <code>OracleParameter</code> property values, <code>DbType</code>, <code>OracleDbType</code>, and <code>UdtTypeName</code>, can exist on the <code>OracleParameter</code> object. <code>OracleParameter</code> objects cannot be set to combinations that are not listed.</p>
<p><a href="#CJAFFBEF">Table 3-23</a> shows the supported ODP.NET output parameter bindings of Oracle database objects.</p>
<p>The last column indicates the type that ODP.NET converts the <code>OracleParameter</code> value to before binding.</p>
<div id="ODPNT401" class="tblformalwide">
<p class="titleintable"><a id="sthref610"></a><a id="CJAFFBEF"></a>Table 3-23 Valid Ways to Bind Output Parameters for Oracle UDTs</p>
<table class="cellalignment4229" title="Valid Ways to Bind Output Parameters for Oracle UDTs" summary="rows are type returned from Oracle, first columns is names, second column is DbType, third column is OracleDbType, 4th column is UDT mappings, 5th column is type converted to before binding" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t106">Type returned from Oracle</th>
<th class="cellalignment4230" id="r1c2-t106">OracleParameter. DbType</th>
<th class="cellalignment4230" id="r1c3-t106">OracleParameter. UdtTypeName</th>
<th class="cellalignment4230" id="r1c4-t106">Custom Type Mappings</th>
<th class="cellalignment4230" id="r1c5-t106">Type converted to</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t106" headers="r1c1-t106">
<p><code>Object</code>/<code>Collection</code>/<code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t106 r1c2-t106">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code> | <code>OracleDbType.Array</code> | <code>OracleDbType.Ref</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t106 r1c3-t106">
<p>not set</p>
</td>
<td class="cellalignment4226" headers="r2c1-t106 r1c4-t106">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t106 r1c5-t106">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t106" headers="r1c1-t106">
<p><code>Object</code>/<code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t106 r1c2-t106">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code> | <code>OracleDbType.Array</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t106 r1c4-t106">
<p>none</p>
</td>
<td class="cellalignment4226" headers="r3c1-t106 r1c5-t106">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t106" headers="r1c1-t106">
<p><code>Object</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t106 r1c2-t106">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t106 r1c4-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t106 r1c5-t106">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t106" headers="r1c1-t106">
<p><code>Object</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t106 r1c2-t106">
<p><code>OracleDbType.Array</code> | <code>OracleDbType.Ref</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t106 r1c4-t106">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t106 r1c5-t106">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t106" headers="r1c1-t106">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t106 r1c2-t106">
<p><code>OracleDbType.Array |</code> <code>DbType.Object</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t106 r1c4-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t106 r1c5-t106">
<p><code><span class="codeinlineitalic">custom object</span></code> | <code><span class="codeinlineitalic">custom object[]</span></code> | <code><span class="codeinlineitalic">.NET object[]</span></code> | <code><span class="codeinlineitalic">PS object[]</span></code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t106" headers="r1c1-t106">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t106 r1c2-t106">
<p><code>OracleDbType.Ref</code> | <code>OracleDbType.Object</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t106 r1c4-t106">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t106 r1c5-t106">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t106" headers="r1c1-t106">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t106 r1c2-t106">
<p><code>DbType.Object</code> | <code>OracleDbType.Object</code> | <code>OracleDbType.Array</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t106 r1c4-t106">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t106 r1c5-t106">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t106" headers="r1c1-t106">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t106 r1c2-t106">
<p><code>OracleDbType.Ref</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t106 r1c3-t106">
<p><code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t106 r1c4-t106">
<p>none | <code><span class="codeinlineitalic">schema.type</span></code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t106 r1c5-t106">
<p><code>OracleRef</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="featOraCommand.htm#i1007242">&#34;Parameter Binding&#34;</a></p>
</li>
<li>
<p><a href="featData.htm#i1006806">&#34;Typed OracleDataReader Accessors&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJADEBEF"></a>
<div id="ODPNT402" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Populating the DataSet with Oracle UDTs<a id="sthref611"></a><a id="sthref612"></a><a id="sthref613"></a></h2>
<p>The <code>DataSet</code> is a disconnected result set. With ADO.NET 2.0, both .NET types and provider-specific types can be used to populate the <code>DataSet</code>. This section describes the types used to populate the <code>DataSet</code> when the column is an Oracle UDT.</p>
<p><a href="#CJAIFHCI">Table 3-24</a> lists the types that populate the <code>DataSet</code> column, based on the Oracle column type, the <code>ReturnProviderSpecificTypes</code> property of the <code>DataAdapter</code>, the existence of a custom type mapping, the <code>DataSet</code> column type, the <code>DataSet</code> column value, and the <code>DataSet</code> column null value.</p>
<div id="ODPNT403" class="tblformalwide">
<p class="titleintable"><a id="sthref614"></a><a id="CJAIFHCI"></a>Table 3-24 Types that Populate the DataSet with ADO.NET 2.0</p>
<table class="cellalignment4229" title="Types that Populate the DataSet with ADO.NET 2.0" summary="Rows are Oracle column types. Column one is name, column two is ReturnProviderSpecificTypes Property, column 3 is regsitered custom type, column 4 is DataSet Column type, column 5 is DataSet column value, column 6 is DataSet column null value" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t108">Oracle Column Type</th>
<th class="cellalignment4230" id="r1c2-t108">ReturnProvider- SpecificTypes Property</th>
<th class="cellalignment4230" id="r1c3-t108">Custom Type Mappings</th>
<th class="cellalignment4230" id="r1c4-t108">DataSet Column Type</th>
<th class="cellalignment4230" id="r1c5-t108">DataSet Column Value</th>
<th class="cellalignment4230" id="r1c6-t108">DataSet Column Null Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t108" headers="r1c1-t108">
<p><code>Object</code> / <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t108 r1c2-t108">
<p><code>False</code>/<code>True</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t108 r1c3-t108">
<p>none</p>
</td>
<td class="cellalignment4226" headers="r2c1-t108 r1c4-t108">
<p>Exception thrown</p>
</td>
<td class="cellalignment4226" headers="r2c1-t108 r1c5-t108">
<p>Exception thrown</p>
</td>
<td class="cellalignment4226" headers="r2c1-t108 r1c6-t108">
<p>Exception thrown</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t108" headers="r1c1-t108">
<p><code>Object</code> / <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t108 r1c2-t108">
<p><code>False</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t108 r1c3-t108">
<p>schema.type</p>
</td>
<td class="cellalignment4226" headers="r3c1-t108 r1c4-t108">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type</span></code><code>)</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t108 r1c5-t108">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t108 r1c6-t108">
<p><code>DbNull.Value</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t108" headers="r1c1-t108">
<p><code>Object</code> / <code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t108 r1c2-t108">
<p><code>True</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t108 r1c3-t108">
<p>schema.type</p>
</td>
<td class="cellalignment4226" headers="r4c1-t108 r1c4-t108">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type</span></code><code>)</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t108 r1c5-t108">
<p><code><span class="codeinlineitalic">custom object</span></code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t108 r1c6-t108">
<p><code><span class="codeinlineitalic">custom object</span></code><code>.Null</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t108" headers="r1c1-t108">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t108 r1c2-t108">
<p><code>False</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t108 r1c3-t108">
<p>schema.type</p>
</td>
<td class="cellalignment4226" headers="r5c1-t108 r1c4-t108">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type[]</span></code><code>)</code>| <code>typeof(</code><code><span class="codeinlineitalic">.NET type[]</span></code><code>)</code> | <code>typeof(</code><code><span class="codeinlineitalic">PS type[]</span></code><code>)</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t108 r1c5-t108">
<p><code><span class="codeinlineitalic">.NET type[]</span></code> | <code><span class="codeinlineitalic">PS object[]</span></code> | <code><span class="codeinlineitalic">custom object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t108 r1c6-t108">
<p><code>DbNull.Value</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t108" headers="r1c1-t108">
<p><code>Collection</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t108 r1c2-t108">
<p><code>True</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t108 r1c3-t108">
<p>schema.type</p>
</td>
<td class="cellalignment4226" headers="r6c1-t108 r1c4-t108">
<p><code>typeof(</code><code><span class="codeinlineitalic">custom type[]</span></code><code>)</code>| <code>typeof(</code><code><span class="codeinlineitalic">.NET type[]</span></code><code>)</code> | <code>typeof(</code><code><span class="codeinlineitalic">PS type[]</span></code><code>)</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t108 r1c5-t108">
<p><code><span class="codeinlineitalic">.NET type[]</span></code> | <code><span class="codeinlineitalic">PS object[]</span></code> | <code><span class="codeinlineitalic">custom object[]</span></code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t108 r1c6-t108">
<p><code>null</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t108" headers="r1c1-t108">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t108 r1c2-t108">
<p><code>False</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t108 r1c3-t108">
<p>none | schema.type</p>
</td>
<td class="cellalignment4226" headers="r7c1-t108 r1c4-t108">
<p><code>typeof(string)</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t108 r1c5-t108">
<p><code>string</code>/HEX</p>
</td>
<td class="cellalignment4226" headers="r7c1-t108 r1c6-t108">
<p><code>DbNull.Value</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t108" headers="r1c1-t108">
<p><code>REF</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t108 r1c2-t108">
<p><code>True</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t108 r1c3-t108">
<p>none | schema.type</p>
</td>
<td class="cellalignment4226" headers="r8c1-t108 r1c4-t108">
<p><code>typeof(OracleRef)</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t108 r1c5-t108">
<p><code>OracleRef</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t108 r1c6-t108">
<p><code>OracleRef.Null</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect2" -->
<a id="CJAIBIDI"></a>
<div id="ODPNT404" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">UDT Method Invocation<a id="sthref615"></a><a id="sthref616"></a></h2>
<p>ODP.NET supports invocation of methods defined for a UDT on the database. This can be accomplished by doing the following:</p>
<ol>
<li>
<p>Set the <code>CommandType</code> as <code>CommandType.StoredProcedure</code>.</p>
</li>
<li>
<p>Set the <code>CommandText</code> as <code>&#34;</code><code><span class="codeinlineitalic">type_name.procedure_name</span></code><code>&#34;</code></p>
</li>
<li>
<p>Execute the command using any of the <code>Execute</code> methods on the <code>OracleCommand</code> object.</p>
</li>
</ol>
<p>For instance functions, the parameters are as follows:</p>
<ul>
<li>
<p>The first parameter must be the return value.</p>
</li>
<li>
<p>The second parameter must be the UDT instance on which the instance method is invoked, which is the instance of the .NET custom object.</p>
</li>
<li>
<p>Subsequent parameters are for the function.</p>
</li>
</ul>
<p>For instance procedures, the first parameter must be the UDT instance.</p>
<p>For static methods, the UDT instance is not needed.</p>
</div>
<!-- class="sect2" -->
<a id="BABFAIAC"></a>
<div id="ODPNT405" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Configuration Settings for Oracle UDTs<a id="sthref617"></a><a id="sthref618"></a><a id="sthref619"></a><a id="sthref620"></a></h2>
<p>ODP.NET exposes two configuration settings to determine how ODP.NET handles Oracle UDTs.</p>
<ul>
<li>
<p><a href="#BABGIIHE">StatementCacheWithUdts</a></p>
</li>
<li>
<p><a href="#BABCEDDD">UdtCacheSize</a></p>
</li>
</ul>
<p>These configuration settings can be specified as machine-wide settings for a particular version of ODP.NET, using the registry key with the name that exists under <code>HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE</code><code>\ODP.NET\</code><code><span class="codeinlineitalic">Assembly_Version</span></code>. The configuration settings specified in the registry can be overridden if an entry is created in the <code>machine.config</code> for .NET framework-wide settings, or in the <code>app.config</code> or <code>web.config</code> for application-specific settings. For details on configuring ODP.NET, see <a href="InstallConfig.htm#BABJBBDF">&#34;Configuring Oracle Data Provider for .NET&#34;</a>.</p>
<a id="BABGIIHE"></a>
<div id="ODPNT406" class="sect3">
<h3 class="sect3">StatementCacheWithUdts</h3>
<p><code>StatementCacheWithUdts</code> specifies whether or not ODP.NET caches Oracle UDTs retrieved by a <code>SELECT</code> statement along with the statement when it is returned to the statement cache. Possible values are <code>1</code> - Yes (the default) or 0 - No.</p>
<p>For the value of 1, the Oracle UDTs are cached along with the statements. Therefore, the memory that contained the UDTs can be re-used; subsequent executions of the same statement do not require additional memory. This may result in an overall higher performance.</p>
<p>For the value of 0, ODP.NET frees the memory for the retrieved Oracle UDTs before the statement is returned to the statement cache. This may result in poorer performance because subsequent executions will require new memory allocations.</p>
</div>
<!-- class="sect3" -->
<a id="BABCEDDD"></a>
<div id="ODPNT407" class="sect3">
<h3 class="sect3">UdtCacheSize</h3>
<p><code>UdtCacheSize</code> specifies the size of the object cache for each connection that ODP.NET uses when retrieving and manipulating Oracle UDTs. The value for this setting must be specified in kilobytes (KB) with the default 4096KB, equivalent to 4 MB.</p>
<p>This configuration setting is used to determine how frequently the objects in the object cache will be purged (using an LRU approach) as the limit of the object cache size approaches.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4219">
<tr>
<td class="cellalignment4226">
<table class="cellalignment4224">
<tr>
<td class="cellalignment4223"><a href="featXML.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4223"><a href="featBulkCopy.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4228">
<table class="cellalignment4222">
<tr>
<td class="cellalignment4223"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4223"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4223"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4223"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4223"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4223"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>