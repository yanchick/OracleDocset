<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79119"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/OracleDataReader%20Class"></a><title>OracleDataReader Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-10-14T19:43:28Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Provider for .NET Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17732-11"/>
<meta name="dcterms.isVersionOf" content="ODPNT"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="OracleDatabaseClass.htm" title="Previous" type="text/html"/>
<link rel="Next" href="OracleDataSourceEnumeratorClass.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17732-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">59/172</span> <!-- End Header --><a id="i1003252"></a>
<div id="ODPNT1185" class="refsect1">
<h1 class="refsect1"><a id="sthref857"></a>OracleDataReader Class</h1>
<p>An <code>OracleDataReader</code> object represents a forward-only, read-only, in-memory result set.</p>
<p>Unlike the <code>DataSet</code>, the <code>OracleDataReader</code> object stays connected and fetches one row at a time.</p>
<p>The following section contain related information:</p>
<ul>
<li>
<p><a href="featData.htm#i1007197">&#34;Obtaining LONG and LONG RAW Data&#34;</a>.</p>
</li>
<li>
<p><a href="featData.htm#i1006788">&#34;Obtaining Data from an OracleDataReader Object&#34;</a>.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1186"></a>Class Inheritance</p>
<p><code>System.Object</code></p>
<p><code>&nbsp;&nbsp;System.MarshalByRefObject</code></p>
<p><code>&nbsp;&nbsp;&nbsp;&nbsp;System.Data.Common.DataReader</code></p>
<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Data.Common.DbDataReader</code></p>
<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oracle.DataAccess.Client.OracleDataReader</code></p>
<p class="subhead2"><a id="ODPNT1187"></a>Declaration</p>
<pre>// C#
public sealed class OracleDataReader : DbDataReader, IEnumerable, 
   IDataReader, IDisposable, IDataRecord
</pre>
<p class="subhead2"><a id="ODPNT8193"></a>Requirements</p>
<div class="inftblinformal">
<table class="cellalignment4229" summary="requirements" dir="ltr">
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r1c1-t291"><span class="bold">Provider</span></td>
<td class="cellalignment4226"><span class="bold">ODP.NET, Unmanaged Driver</span></td>
<td class="cellalignment4226"><span class="bold">ODP.NET, Managed Driver</span></td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t291"><span class="bold">Assembly</span></td>
<td class="cellalignment4226" headers="r2c1-t291"><code>Oracle.DataAccess.dll</code></td>
<td class="cellalignment4226" headers="r2c1-t291"><code>Oracle.ManagedDataAccess.dll</code></td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t291"><span class="bold">Namespace</span></td>
<td class="cellalignment4226" headers="r3c1-t291"><code>Oracle.DataAccess.Client</code></td>
<td class="cellalignment4226" headers="r3c1-t291"><code>Oracle.ManagedDataAccess.Client</code></td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t291"><span class="bold">.NET Framework</span></td>
<td class="cellalignment4226" headers="r4c1-t291">3.5, 4.0, 4.5</td>
<td class="cellalignment4226" headers="r4c1-t291">4.0, 4.5</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ODPNT1188"></a>Thread Safety</p>
<p>All public static methods are thread-safe, although instance methods do not guarantee thread safety.</p>
<p class="subhead2"><a id="ODPNT1189"></a>Remarks</p>
<p>An <code>OracleDataReader</code> instance is constructed by a call to the <code>ExecuteReader</code> method of the <code>OracleCommand</code> object. The only properties that can be accessed after the <code>DataReader</code> is closed or has been disposed, are <code>IsClosed</code> and <code>RecordsAffected</code>.</p>
<p>To minimize the number of open database cursors, <code>OracleDataReader</code> objects should be explicitly disposed.</p>
<p class="subhead2"><a id="i1003289"></a><a id="ODPNT1190"></a>Example</p>
<p>The following <code>OracleDataReader</code> example retrieves the data from the <code>EMP</code> table:</p>
<pre>/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,&#39;KING&#39;,&#39;SOFTWARE ENGR&#39;, &#39;5657&#39;);
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,&#39;SCOTT&#39;,&#39;MANAGER&#39;, &#39;5960&#39;);
commit;
 
*/
 
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
 
class OracleDataReaderSample
{
  static void Main()
  {
    string constr = &#34;User Id=scott;Password=tiger;Data Source=oracle&#34;;
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    string cmdstr = &#34;SELECT * FROM EMPINFO&#34;;
    OracleConnection connection = new OracleConnection(constr);
    OracleCommand cmd = new OracleCommand(cmdstr, con);
 
    OracleDataReader reader = cmd.ExecuteReader();
 
    // Declare the variables to retrieve the data in EmpInfo
    short empNo;
    string empName;
    DateTime hireDate;
    double salary;
    string jobDesc;
    byte[] byteCodes = new byte[10];
 
    // Read the next row until end of row
    while (reader.Read())
    {
      empNo = reader.GetInt16(0);
      Console.WriteLine(&#34;Employee number: &#34; + empNo);
      empName = reader.GetString(1);
      Console.WriteLine(&#34;Employee name: &#34; + empName);
 
      // The following columns can have NULL value, so it
      //   is important to call IsDBNull before getting the column data
      if (!reader.IsDBNull(2))
      {
        hireDate = reader.GetDateTime(2);
        Console.WriteLine(&#34;Hire date: &#34; + hireDate);
      }
 
      if (!reader.IsDBNull(3))
      {
        salary = reader.GetDouble(3);
        Console.WriteLine(&#34;Salary: &#34; + salary);
      }
 
      if (!reader.IsDBNull(4))
      {
        jobDesc = reader.GetString(4);
        Console.WriteLine(&#34;Job Description: &#34; + jobDesc);
      }
 
      if (!reader.IsDBNull(5))
      {
        long len = reader.GetBytes(5, 0, byteCodes, 0, 10);
 
        Console.Write(&#34;Byte codes: &#34;);
        for (int i = 0; i &lt; len; i++)
          Console.Write(byteCodes[i].ToString(&#34;x&#34;));
 
        Console.WriteLine();
      }
 
      Console.WriteLine();
    } 
 
    // Clean up
    reader.Dispose();
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#i1003884">OracleDataReader Static Methods</a></p>
</li>
<li>
<p><a href="#i1003927">OracleDataReader Properties</a></p>
</li>
<li>
<p><a href="#i1004329">OracleDataReader Public Methods</a></p>
</li>
<li>
<p><a href="#i1006277"><span class="bold">OracleDataReader SchemaTable</span></a></p>
</li>
</ul>
</div>
<div id="ODPNT1192" class="refsect2"><a id="i1003412"></a>
<h2 class="refsect2">OracleDataReader Members<a id="sthref858"></a></h2>
<p><code>OracleDataReader</code> members are listed in the following tables.</p>
<p class="subhead1"><a id="ODPNT1193"></a>OracleDataReader Static Methods</p>
<p>The <code>OracleDataReader</code> static method is listed in <a href="#g1101413">Table 6-53</a>.</p>
<div id="ODPNT1194" class="tblruleformal">
<p class="titleintable"><a id="sthref859"></a><a id="g1101413"></a>Table 6-53 OracleDataReader Static Method</p>
<table class="cellalignment4229" title="OracleDataReader Static Method " summary="Rows are static methods. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t293">Method</th>
<th class="cellalignment4230" id="r1c2-t293">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t293" headers="r1c1-t293">
<p><code>Equals</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t293 r1c2-t293">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p class="subhead1"><a id="ODPNT1195"></a>OracleDataReader Properties</p>
<p><code>OracleDataReader</code> properties are listed in <a href="#CHDDCCBB">Table 6-54</a>.</p>
<div id="ODPNT1196" class="tblruleformal">
<p class="titleintable"><a id="sthref860"></a><a id="CHDDCCBB"></a>Table 6-54 OracleDataReader Properties</p>
<table class="cellalignment4229" title="OracleDataReader Properties " summary="Rows are properties. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t294">Property</th>
<th class="cellalignment4230" id="r1c2-t294">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t294" headers="r1c1-t294">
<p><a href="#i1004015">Depth</a></p>
</td>
<td class="cellalignment4226" headers="r2c1-t294 r1c2-t294">
<p>Gets a value indicating the depth of nesting for the current row</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t294" headers="r1c1-t294">
<p><a href="#i1004048">FetchSize</a></p>
</td>
<td class="cellalignment4226" headers="r3c1-t294 r1c2-t294">
<p>Specifies the size of <code>OracleDataReader</code>&#39;s internal cache</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t294" headers="r1c1-t294">
<p><a href="#i1004093">FieldCount</a></p>
</td>
<td class="cellalignment4226" headers="r4c1-t294 r1c2-t294">
<p>Gets the number of columns in the result set</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t294" headers="r1c1-t294">
<p><a href="#CHDFIJDF">HasRows</a></p>
</td>
<td class="cellalignment4226" headers="r5c1-t294 r1c2-t294">
<p>Indicates whether the <code>OracleDataReader</code> has one or more rows</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t294" headers="r1c1-t294">
<p><a href="#CHDECHGG">HiddenFieldCount</a></p>
</td>
<td class="cellalignment4226" headers="r6c1-t294 r1c2-t294">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are hidden</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t294" headers="r1c1-t294">
<p><a href="#i1004126">IsClosed</a></p>
</td>
<td class="cellalignment4226" headers="r7c1-t294 r1c2-t294">
<p>Indicates whether or not the data reader is closed</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t294" headers="r1c1-t294">
<p><a href="#i1004157">Item</a></p>
</td>
<td class="cellalignment4226" headers="r8c1-t294 r1c2-t294">
<p>Gets the value of the column (Overloaded)</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t294" headers="r1c1-t294">
<p><a href="#BABEAIFD">InitialLOBFetchSize</a></p>
</td>
<td class="cellalignment4226" headers="r9c1-t294 r1c2-t294">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for LOB columns</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t294" headers="r1c1-t294">
<p><a href="#i1004258">InitialLONGFetchSize</a></p>
</td>
<td class="cellalignment4226" headers="r10c1-t294 r1c2-t294">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for <code>LONG</code> and <code>LONG</code> <code>RAW</code> columns</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t294" headers="r1c1-t294">
<p><a href="#i1004297">RecordsAffected</a></p>
</td>
<td class="cellalignment4226" headers="r11c1-t294 r1c2-t294">
<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t294" headers="r1c1-t294">
<p><a href="#BABGFBBI">RowSize</a></p>
</td>
<td class="cellalignment4226" headers="r12c1-t294 r1c2-t294">
<p>Gets the amount of memory the internal cache of the <code>OracleDataReader</code> needs to store one row of data.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t294" headers="r1c1-t294">
<p><a href="#DAFJJCDB">UseEdmMapping</a></p>
</td>
<td class="cellalignment4226" headers="r13c1-t294 r1c2-t294">
<p>Indicates whether or not the <code>OracleDataReader</code> utilizes the Entity Data Model mapping configuration when returning values</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t294" headers="r1c1-t294">
<p><a href="#CHDEDDCB">VisibleFieldCount</a></p>
</td>
<td class="cellalignment4226" headers="r14c1-t294 r1c2-t294">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are not hidden</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p class="subhead1"><a id="ODPNT1197"></a>OracleDataReader Public Methods</p>
<p><code>OracleDataReader</code> public methods are listed in <a href="#CHDICHJH">Table 6-55</a>.</p>
<div id="ODPNT1198" class="tblruleformal">
<p class="titleintable"><a id="sthref861"></a><a id="CHDICHJH"></a>Table 6-55 OracleDataReader Public Methods</p>
<table class="cellalignment4229" title="OracleDataReader Public Methods " summary="Rows are public methods. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t295">Public Method</th>
<th class="cellalignment4230" id="r1c2-t295">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t295" headers="r1c1-t295">
<p><a href="#i1004711">Close</a></p>
</td>
<td class="cellalignment4226" headers="r2c1-t295 r1c2-t295">
<p>Closes the <code>OracleDataReader</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t295" headers="r1c1-t295">
<p><code>CreateObjRef</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t295 r1c2-t295">
<p>Inherited from <code>System.MarshalByRefObject</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t295" headers="r1c1-t295">
<p><a href="#i1004747">Dispose</a></p>
</td>
<td class="cellalignment4226" headers="r4c1-t295 r1c2-t295">
<p>Releases any resources or memory allocated by the object</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t295" headers="r1c1-t295">
<p><code>Equals</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t295 r1c2-t295">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t295" headers="r1c1-t295">
<p><a href="#CHDGEBAJ">GetBoolean</a></p>
</td>
<td class="cellalignment4226" headers="r6c1-t295 r1c2-t295">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t295" headers="r1c1-t295">
<p><a href="#i1004775">GetByte</a></p>
</td>
<td class="cellalignment4226" headers="r7c1-t295 r1c2-t295">
<p>Returns the byte value of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t295" headers="r1c1-t295">
<p><a href="#i1004813">GetBytes</a></p>
</td>
<td class="cellalignment4226" headers="r8c1-t295 r1c2-t295">
<p>Populates the provided byte array with up to the maximum number of bytes, from the specified offset (in bytes) of the column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t295" headers="r1c1-t295">
<p><a href="#CHDGEBHJ">GetChar</a></p>
</td>
<td class="cellalignment4226" headers="r9c1-t295 r1c2-t295">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t295" headers="r1c1-t295">
<p><a href="#i1004859">GetChars</a></p>
</td>
<td class="cellalignment4226" headers="r10c1-t295 r1c2-t295">
<p>Populates the provided character array with up to the maximum number of characters, from the specified offset (in characters) of the column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t295" headers="r1c1-t295">
<p><code>GetData</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t295 r1c2-t295">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t295" headers="r1c1-t295">
<p><a href="#i1004907">GetDataTypeName</a></p>
</td>
<td class="cellalignment4226" headers="r12c1-t295 r1c2-t295">
<p>Returns the ODP.NET type name of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t295" headers="r1c1-t295">
<p><a href="#i1004947">GetDateTime</a></p>
</td>
<td class="cellalignment4226" headers="r13c1-t295 r1c2-t295">
<p>Returns the <code>DateTime</code> value of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t295" headers="r1c1-t295">
<p><a href="#i1004984">GetDecimal</a></p>
</td>
<td class="cellalignment4226" headers="r14c1-t295 r1c2-t295">
<p>Returns the <code>decimal</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r15c1-t295" headers="r1c1-t295">
<p><a href="#i1005021">GetDouble</a></p>
</td>
<td class="cellalignment4226" headers="r15c1-t295 r1c2-t295">
<p>Returns the <code>double</code> value of the specified <code>NUMBER</code> column or <code>BINARY_DOUBLE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r16c1-t295" headers="r1c1-t295">
<p><a href="#BABHCADG">GetEnumerator</a></p>
</td>
<td class="cellalignment4226" headers="r16c1-t295 r1c2-t295">
<p>Returns an <code>IEnumerator</code> that can be used to iterate through the collection</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r17c1-t295" headers="r1c1-t295">
<p><a href="#i1005058">GetFieldType</a></p>
</td>
<td class="cellalignment4226" headers="r17c1-t295 r1c2-t295">
<p>Returns the <code>Type</code> of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r18c1-t295" headers="r1c1-t295">
<p><a href="#i1005092">GetFloat</a></p>
</td>
<td class="cellalignment4226" headers="r18c1-t295 r1c2-t295">
<p>Returns the <code>float</code> value of the specified <code>NUMBER</code> column or <code>BINARY_FLOAT</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r19c1-t295" headers="r1c1-t295">
<p><a href="#CHDGJBHC">GetGuid</a></p>
</td>
<td class="cellalignment4226" headers="r19c1-t295 r1c2-t295">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r20c1-t295" headers="r1c1-t295">
<p><code>GetHashCode</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t295 r1c2-t295">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r21c1-t295" headers="r1c1-t295">
<p><a href="#i1005130">GetInt16</a></p>
</td>
<td class="cellalignment4226" headers="r21c1-t295 r1c2-t295">
<p>Returns the <code>Int16</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r22c1-t295" headers="r1c1-t295">
<p><a href="#i1005172">GetInt32</a></p>
</td>
<td class="cellalignment4226" headers="r22c1-t295 r1c2-t295">
<p>Returns the <code>Int32</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r23c1-t295" headers="r1c1-t295">
<p><a href="#i1005214">GetInt64</a></p>
</td>
<td class="cellalignment4226" headers="r23c1-t295 r1c2-t295">
<p>Returns the <code>Int64</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r24c1-t295" headers="r1c1-t295">
<p><code>GetLifetimeService</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t295 r1c2-t295">
<p>Inherited by <code>System.MarshalByRefObject</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r25c1-t295" headers="r1c1-t295">
<p><a href="#i1005256">GetName</a></p>
</td>
<td class="cellalignment4226" headers="r25c1-t295 r1c2-t295">
<p>Returns the name of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r26c1-t295" headers="r1c1-t295">
<p><a href="#i1005290">GetOracleBFile</a></p>
</td>
<td class="cellalignment4226" headers="r26c1-t295 r1c2-t295">
<p>Returns an <code>OracleBFile</code> object of the specified <code>BFILE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r27c1-t295" headers="r1c1-t295">
<p><a href="#i1005325">GetOracleBinary</a></p>
</td>
<td class="cellalignment4226" headers="r27c1-t295 r1c2-t295">
<p>Returns an <code>OracleBinary</code> structure of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r28c1-t295" headers="r1c1-t295">
<p><a href="#i1005365">GetOracleBlob</a></p>
</td>
<td class="cellalignment4226" headers="r28c1-t295 r1c2-t295">
<p>Returns an <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r29c1-t295" headers="r1c1-t295">
<p><a href="#i1005400">GetOracleBlobForUpdate</a></p>
</td>
<td class="cellalignment4226" headers="r29c1-t295 r1c2-t295">
<p>Returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r30c1-t295" headers="r1c1-t295">
<p><a href="#i1005577">GetOracleClob</a></p>
</td>
<td class="cellalignment4226" headers="r30c1-t295 r1c2-t295">
<p>Returns an <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r31c1-t295" headers="r1c1-t295">
<p><a href="#i1005619">GetOracleClobForUpdate</a></p>
</td>
<td class="cellalignment4226" headers="r31c1-t295 r1c2-t295">
<p>Returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r32c1-t295" headers="r1c1-t295">
<p><a href="#i1005795">GetOracleDate</a></p>
</td>
<td class="cellalignment4226" headers="r32c1-t295 r1c2-t295">
<p>Returns an <code>OracleDate</code> structure of the specified <code>DATE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r33c1-t295" headers="r1c1-t295">
<p><a href="#i1005837">GetOracleDecimal</a></p>
</td>
<td class="cellalignment4226" headers="r33c1-t295 r1c2-t295">
<p>Returns an <code>OracleDecimal</code> structure of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r34c1-t295" headers="r1c1-t295">
<p><a href="#i1005872">GetOracleIntervalDS</a></p>
</td>
<td class="cellalignment4226" headers="r34c1-t295 r1c2-t295">
<p>Returns an <code>OracleIntervalDS</code> structure of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r35c1-t295" headers="r1c1-t295">
<p><a href="#i1005907">GetOracleIntervalYM</a></p>
</td>
<td class="cellalignment4226" headers="r35c1-t295 r1c2-t295">
<p>Returns an <code>OracleIntervalYM</code> structure of the specified <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r36c1-t295" headers="r1c1-t295">
<p><a href="#BABFEHBI">GetOracleRef</a></p>
</td>
<td class="cellalignment4226" headers="r36c1-t295 r1c2-t295">
<p>Returns an <code>OracleRef</code> object of the specified <code>REF</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r37c1-t295" headers="r1c1-t295">
<p><a href="#i1005942">GetOracleString</a></p>
</td>
<td class="cellalignment4226" headers="r37c1-t295 r1c2-t295">
<p>Returns an <code>OracleString</code> structure of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r38c1-t295" headers="r1c1-t295">
<p><a href="#i1005989">GetOracleTimeStamp</a></p>
</td>
<td class="cellalignment4226" headers="r38c1-t295 r1c2-t295">
<p>Returns an <code>OracleTimeStamp</code> structure of the Oracle <code>TimeStamp</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r39c1-t295" headers="r1c1-t295">
<p><a href="#i1006025">GetOracleTimeStampLTZ</a></p>
</td>
<td class="cellalignment4226" headers="r39c1-t295 r1c2-t295">
<p>Returns an <code>OracleTimeStampLTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r40c1-t295" headers="r1c1-t295">
<p><a href="#i1006061">GetOracleTimeStampTZ</a></p>
</td>
<td class="cellalignment4226" headers="r40c1-t295 r1c2-t295">
<p>Returns an <code>OracleTimeStampTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r41c1-t295" headers="r1c1-t295">
<p><a href="#i1021203">GetOracleXmlType</a></p>
</td>
<td class="cellalignment4226" headers="r41c1-t295 r1c2-t295">
<p>Returns an <code>OracleXmlType</code> object of the specified <code>XMLType</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r42c1-t295" headers="r1c1-t295">
<p><a href="#i1006136">GetOracleValue</a></p>
</td>
<td class="cellalignment4226" headers="r42c1-t295 r1c2-t295">
<p>Returns the specified column value as a ODP.NET type</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r43c1-t295" headers="r1c1-t295">
<p><a href="#i1006175">GetOracleValues</a></p>
</td>
<td class="cellalignment4226" headers="r43c1-t295 r1c2-t295">
<p>Gets all the column values as ODP.NET types</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r44c1-t295" headers="r1c1-t295">
<p><a href="#i1006226">GetOrdinal</a></p>
</td>
<td class="cellalignment4226" headers="r44c1-t295 r1c2-t295">
<p>Returns the <code>0</code>-based ordinal (or index) of the specified column name</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r45c1-t295" headers="r1c1-t295">
<p><a href="#CHDGBEAA">GetProviderSpecificFieldType</a></p>
</td>
<td class="cellalignment4226" headers="r45c1-t295 r1c2-t295">
<p>Returns the provider-specific type of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r46c1-t295" headers="r1c1-t295">
<p><a href="#CHDIIBDH">GetProviderSpecificValue</a></p>
</td>
<td class="cellalignment4226" headers="r46c1-t295 r1c2-t295">
<p>Returns an object that represents the underlying provider-specific value of the specified ordinal</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r47c1-t295" headers="r1c1-t295">
<p><a href="#CHDEECDJ">GetProviderSpecificValues</a></p>
</td>
<td class="cellalignment4226" headers="r47c1-t295 r1c2-t295">
<p>Returns an array of objects that represent the underlying provider-specific values</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r48c1-t295" headers="r1c1-t295">
<p><a href="#i1006262">GetSchemaTable</a></p>
</td>
<td class="cellalignment4226" headers="r48c1-t295 r1c2-t295">
<p>Returns a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r49c1-t295" headers="r1c1-t295">
<p><a href="#i1006481">GetString</a></p>
</td>
<td class="cellalignment4226" headers="r49c1-t295 r1c2-t295">
<p>Returns the string value of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r50c1-t295" headers="r1c1-t295">
<p><a href="#i1006518">GetTimeSpan</a></p>
</td>
<td class="cellalignment4226" headers="r50c1-t295 r1c2-t295">
<p>Returns the <code>TimeSpan</code> value of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r51c1-t295" headers="r1c1-t295">
<p><code>GetType</code></p>
</td>
<td class="cellalignment4226" headers="r51c1-t295 r1c2-t295">
<p>Inherited from <code>System.Object</code> class</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r52c1-t295" headers="r1c1-t295">
<p><a href="#i1006555">GetValue</a></p>
</td>
<td class="cellalignment4226" headers="r52c1-t295 r1c2-t295">
<p>Returns the column value as a .NET type</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r53c1-t295" headers="r1c1-t295">
<p><a href="#i1006589">GetValues</a></p>
</td>
<td class="cellalignment4226" headers="r53c1-t295 r1c2-t295">
<p>Gets all the column values as .NET types</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r54c1-t295" headers="r1c1-t295">
<p><a href="#i1006627">GetXmlReader</a></p>
</td>
<td class="cellalignment4226" headers="r54c1-t295 r1c2-t295">
<p>Returns the value of an <code>XMLType</code> column as an instance of an .NET <code>XmlTextReader</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r55c1-t295" headers="r1c1-t295">
<p><a href="#i1006661">IsDBNull</a></p>
</td>
<td class="cellalignment4226" headers="r55c1-t295 r1c2-t295">
<p>Indicates whether or not the column value is null</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r56c1-t295" headers="r1c1-t295">
<p><a href="#i1006705">NextResult</a></p>
</td>
<td class="cellalignment4226" headers="r56c1-t295 r1c2-t295">
<p>Advances the data reader to the next result set when reading the results</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r57c1-t295" headers="r1c1-t295">
<p><a href="#i1006737">Read</a></p>
</td>
<td class="cellalignment4226" headers="r57c1-t295 r1c2-t295">
<p>Reads the next row in the result set</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r58c1-t295" headers="r1c1-t295">
<p><code>ToString</code></p>
</td>
<td class="cellalignment4226" headers="r58c1-t295 r1c2-t295">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect2" -->
<div id="ODPNT1199" class="refsect2"><a id="i1003884"></a>
<h2 class="refsect2">OracleDataReader Static Methods<a id="sthref862"></a></h2>
<p>The <code>OracleDataReader</code> static method is listed in <a href="#g1101636">Table 6-56</a>.</p>
<div id="ODPNT1200" class="tblruleformal">
<p class="titleintable"><a id="sthref863"></a><a id="g1101636"></a>Table 6-56 OracleDataReader Static Method</p>
<table class="cellalignment4229" title="OracleDataReader Static Method" summary="Rows are static methods. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t297">Method</th>
<th class="cellalignment4230" id="r1c2-t297">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t297" headers="r1c1-t297">
<p><code>Equals</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t297 r1c2-t297">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect2" -->
<div id="ODPNT1201" class="refsect2"><a id="i1003927"></a>
<h2 class="refsect2">OracleDataReader Properties<a id="sthref864"></a></h2>
<p><code>OracleDataReader</code> properties are listed in <a href="#g1101650">Table 6-57</a>.</p>
<div id="ODPNT1202" class="tblruleformal">
<p class="titleintable"><a id="sthref865"></a><a id="g1101650"></a>Table 6-57 OracleDataReader Properties</p>
<table class="cellalignment4229" title="OracleDataReader Properties " summary="Rows are properties. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t299">Property</th>
<th class="cellalignment4230" id="r1c2-t299">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t299" headers="r1c1-t299">
<p><a href="#i1004015">Depth</a></p>
</td>
<td class="cellalignment4226" headers="r2c1-t299 r1c2-t299">
<p>Gets a value indicating the depth of nesting for the current row</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t299" headers="r1c1-t299">
<p><a href="#i1004048">FetchSize</a></p>
</td>
<td class="cellalignment4226" headers="r3c1-t299 r1c2-t299">
<p>Specifies the size of <code>OracleDataReader</code>&#39;s internal cache</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t299" headers="r1c1-t299">
<p><a href="#i1004093">FieldCount</a></p>
</td>
<td class="cellalignment4226" headers="r4c1-t299 r1c2-t299">
<p>Gets the number of columns in the result set</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t299" headers="r1c1-t299">
<p><a href="#CHDFIJDF">HasRows</a></p>
</td>
<td class="cellalignment4226" headers="r5c1-t299 r1c2-t299">
<p>Indicates whether the <code>OracleDataReader</code> has one or more rows</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t299" headers="r1c1-t299">
<p><a href="#CHDECHGG">HiddenFieldCount</a></p>
</td>
<td class="cellalignment4226" headers="r6c1-t299 r1c2-t299">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are hidden</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t299" headers="r1c1-t299">
<p><a href="#i1004126">IsClosed</a></p>
</td>
<td class="cellalignment4226" headers="r7c1-t299 r1c2-t299">
<p>Indicates whether or not the data reader is closed</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t299" headers="r1c1-t299">
<p><a href="#i1004157">Item</a></p>
</td>
<td class="cellalignment4226" headers="r8c1-t299 r1c2-t299">
<p>Gets the value of the column (Overloaded)</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t299" headers="r1c1-t299">
<p><a href="#BABEAIFD">InitialLOBFetchSize</a></p>
</td>
<td class="cellalignment4226" headers="r9c1-t299 r1c2-t299">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for LOB columns</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t299" headers="r1c1-t299">
<p><a href="#i1004258">InitialLONGFetchSize</a></p>
</td>
<td class="cellalignment4226" headers="r10c1-t299 r1c2-t299">
<p>Specifies the amount that the <code>OracleDataReader</code> initially fetches for <code>LONG</code> and <code>LONG</code> <code>RAW</code> columns</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t299" headers="r1c1-t299">
<p><a href="#i1004297">RecordsAffected</a></p>
</td>
<td class="cellalignment4226" headers="r11c1-t299 r1c2-t299">
<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t299" headers="r1c1-t299">
<p><a href="#BABGFBBI">RowSize</a></p>
</td>
<td class="cellalignment4226" headers="r12c1-t299 r1c2-t299">
<p>Gets the amount of memory the internal cache of the <code>OracleDataReader</code> needs to store one row of data</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t299" headers="r1c1-t299">
<p><a href="#DAFJJCDB">UseEdmMapping</a></p>
</td>
<td class="cellalignment4226" headers="r13c1-t299 r1c2-t299">
<p>Indicates whether or not the <code>OracleDataReader</code> utilizes the Entity Data Model mapping configuration when returning values</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t299" headers="r1c1-t299">
<p><a href="#CHDEDDCB">VisibleFieldCount</a></p>
</td>
<td class="cellalignment4226" headers="r14c1-t299 r1c2-t299">
<p>Gets the number of fields in the <code>OracleDataReader</code> that are not hidden</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<div id="ODPNT1203" class="refsect3"><a id="i1004015"></a>
<h3 class="refsect3">Depth</h3>
<p>This property gets a value indicating the depth of nesting for the current row.</p>
<p class="subhead2"><a id="ODPNT1204"></a>Declaration</p>
<pre>// C#
public override int Depth {get;}
</pre>
<p class="subhead2"><a id="ODPNT1205"></a>Property Value</p>
<p>The depth of nesting for the current row.</p>
<p class="subhead2"><a id="ODPNT1206"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1207"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p class="subhead2"><a id="ODPNT1208"></a>Remarks</p>
<p>Default = <code>0</code></p>
<p>This property always returns zero because Oracle does not support nesting.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1209" class="refsect3"><a id="CHDHGEBF"></a><a id="i1004048"></a>
<h3 class="refsect3">FetchSize</h3>
<p>This property specifies the size of <code>OracleDataReader</code>&#39;s internal cache.</p>
<p class="subhead2"><a id="ODPNT1210"></a>Declaration</p>
<pre>// C#
public long FetchSize {get; set;} 
</pre>
<p class="subhead2"><a id="ODPNT1211"></a>Property Value</p>
<p>A <code>long</code> that specifies the amount of memory (in bytes) that the <code>OracleDataReader</code> uses for its internal cache.</p>
<p class="subhead2"><a id="ODPNT1212"></a>Exceptions</p>
<p><code>ArgumentException</code> - The <code>FetchSize</code> value specified is invalid.</p>
<p class="subhead2"><a id="ODPNT1213"></a>Remarks</p>
<p>Default = The <code>OracleCommand</code>&#39;s <code>FetchSize</code> property value.</p>
<p>The <code>FetchSize</code> property is inherited by the <code>OracleDataReader</code> that is created by a command execution returning a result set. The <code>FetchSize</code> property on the <code>OracleDataReader</code> object determines the amount of data fetched into its internal cache for each database round-trip.</p>
<p>The <code>RowSize</code> and <code>FetchSize</code> properties handle UDT and <code>XMLType</code> data differently than other scalar data types. Because only a reference to the UDT and <code>XMLType</code> data is stored in the ODP.NET&#39;s internal cache, the <code>RowSize</code> property accounts for only the memory needed for the reference (which is very small) and not the actual size of the UDT and <code>XMLType</code> data. Thus, applications can inadvertently fetch a large number of UDT or <code>XMLType</code> instances from the database in a single database round-trip. This is because the actual size of UDT and <code>XMLType</code> data does not count against the <code>FetchSize,</code> and it would require numerous UDT and <code>XMLType</code> references to fill up the default cache size of 131072 bytes. Therefore, when fetching UDT or <code>XMLType</code> data, the <code>FetchSize</code> property must be appropriately configured to control the number of UDT and <code>XMLType</code> instances that are to be fetched, rather than the amount of the actual UDT and <code>XMLType</code> data to be fetched.</p>
<p>NOTE: For LOB and <code>LONG</code> data types, only the sizes specified in the <code>InitialLOBFetchSize</code> and <code>InitialLONGFetchSize</code> properties are accounted for by the <code>RowSize</code> property in addition to the metadata and reference information that is maintained by the cache for each LOB in the select list.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><code>OracleDataReader</code> <a href="#CHDJAAAB">&#34;RowSize&#34;</a></p>
</li>
<li>
<p><code>OracleCommand</code> <a href="OracleCommandClass.htm#i998451">&#34;ExecuteReader()&#34;</a></p>
</li>
<li>
<p><code>OracleCommand</code> <a href="OracleCommandClass.htm#i998028">&#34;RowSize&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1214" class="refsect3"><a id="CHDIAHCA"></a><a id="i1004093"></a>
<h3 class="refsect3">FieldCount</h3>
<p>This property returns the number of columns in the result set.</p>
<p class="subhead2"><a id="ODPNT1215"></a>Declaration</p>
<pre>// C#
public override int FieldCount {get;}
</pre>
<p class="subhead2"><a id="ODPNT1216"></a>Property Value</p>
<p>The number of columns in the result set if one exists, otherwise <code>0</code>.</p>
<p class="subhead2"><a id="ODPNT1217"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1218"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p class="subhead2"><a id="ODPNT1219"></a>Remarks</p>
<p>Default = <code>0</code></p>
<p>This property has a value of 0 for queries that do not return result sets.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1220" class="refsect3"><a id="DAFFDHIC"></a><a id="CHDFIJDF"></a>
<h3 class="refsect3">HasRows</h3>
<p>This property indicates whether the <code>OracleDataReader</code> has one or more rows.</p>
<p class="subhead2"><a id="ODPNT1221"></a>Declaration</p>
<pre>// C#
public override bool HasRows {get;}
</pre>
<p class="subhead2"><a id="ODPNT1222"></a>Return Value</p>
<p><code>bool</code></p>
<p class="subhead2"><a id="ODPNT1223"></a>Remarks</p>
<p><code>HasRows</code> indicates whether or not the <code>OracleDataReader</code> has any rows.</p>
<p>The value of <code>HasRows</code> does not change based on the row position. For example, even if the application has read all the rows from the result set and the next Read method invocation will return false, the <code>HasRows</code> property still returns true since the result set was not empty to begin with.</p>
<p>Rows are fetched to determine the emptiness of the <code>OracleDataReader</code> when <code>HasRows</code> property is accessed for the first time after the creation of the <code>OracleDataReader</code> object.</p>
<p class="subhead2"><a id="ODPNT1224"></a>Example</p>
<pre>// C#
 
using System;
using Oracle.DataAccess.Client; 
 
class HasRowsSample
{
  static void Main()
  {
    string constr = &#34;User Id=scott;Password=tiger;Data Source=oracle&#34;;
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    OracleCommand cmd = new OracleCommand(
      &#34;select * from emp where empno = 9999&#34;, con);
 
    OracleDataReader reader = cmd.ExecuteReader();
 
    if (!reader.HasRows)
      Console.WriteLine(&#34;The result set is empty.&#34;);
    else
      Console.WriteLine(&#34;The result set is not empty.&#34;);
 
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><code><a href="http://msdn.microsoft.com/library">http://msdn.microsoft.com/library</a></code> for detailed information about this Microsoft .NET Framework 1.1 feature</p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1225" class="refsect3"><a id="BABBCCEA"></a><a id="CHDECHGG"></a>
<h3 class="refsect3">HiddenFieldCount</h3>
<p>This property gets the number of fields in the <code>OracleDataReader</code> that are hidden.</p>
<p class="subhead2"><a id="ODPNT1226"></a>Declaration</p>
<pre>// C#
public int HiddenFieldcount { get; }
</pre>
<p class="subhead2"><a id="ODPNT1227"></a>Property Value</p>
<p>The number of fields in the <code>OracleDataReader</code> that are hidden.</p>
<p class="subhead2"><a id="ODPNT1228"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p class="subhead2"><a id="ODPNT1229"></a>Remarks</p>
<p><code>OracleDataReader.FieldCount</code> and <code>OracleDataReader.VisibleFieldCount</code> return the visible field count.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#CHDIEIHA">&#34;VisibleFieldCount&#34;</a></p>
</li>
<li>
<p><a href="#CHDIAHCA">&#34;FieldCount&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1230" class="refsect3"><a id="i1004126"></a>
<h3 class="refsect3">IsClosed</h3>
<p>This property indicates whether or not the data reader is closed.</p>
<p class="subhead2"><a id="ODPNT1231"></a>Declaration</p>
<pre>// C#
public override bool IsClosed {get;}
</pre>
<p class="subhead2"><a id="ODPNT1232"></a>Property Value</p>
<p>If the <code>OracleDataReader</code> is in a closed state, returns <code>true</code>; otherwise, returns <code>false</code>.</p>
<p class="subhead2"><a id="ODPNT1233"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1234"></a>Remarks</p>
<p>Default = <code>true</code></p>
<p><code>IsClosed</code> and <code>RecordsAffected</code> are the only two properties that are accessible after the <code>OracleDataReader</code> is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1235" class="refsect3"><a id="i1004157"></a>
<h3 class="refsect3">Item</h3>
<p>This property gets the value of the column in .NET data type.</p>
<p class="subhead2"><a id="ODPNT1236"></a>Overload List:</p>
<ul>
<li>
<p><a href="#i1004189">Item [index]</a></p>
<p>This property gets the .NET <code>Value</code> of the column specified by the column index.</p>
</li>
<li>
<p><a href="#i1004223">Item [string]</a></p>
<p>This property gets the .NET <code>Value</code> of the column specified by the column name.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1237" class="refsect3"><a id="i1004189"></a>
<h3 class="refsect3">Item [index]</h3>
<p>This property gets the .NET <code>Value</code> of the column specified by the column index.</p>
<p class="subhead2"><a id="ODPNT1238"></a>Declaration</p>
<pre>// C#
public override object this[int index] {get;}
</pre>
<p class="subhead2"><a id="ODPNT1239"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based index of the column.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1240"></a>Property Value</p>
<p>The .NET value of the specified column.</p>
<p class="subhead2"><a id="ODPNT1241"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1242"></a>Remarks</p>
<p>Default = Not Applicable</p>
<p>In C#, this property is the indexer for this class.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1243" class="refsect3"><a id="i1004223"></a>
<h3 class="refsect3">Item [string]</h3>
<p>This property gets the .NET <code>Value</code> of the column specified by the column name.</p>
<p class="subhead2"><a id="ODPNT1244"></a>Declaration</p>
<pre>// C#
public override object this[string <span class="italic">columnName</span>] {get;}
</pre>
<p class="subhead2"><a id="ODPNT1245"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">columnName</span></code></p>
<p>The name of the column.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1246"></a>Property Value</p>
<p>The .NET <code>Value</code> of the specified column.</p>
<p class="subhead2"><a id="ODPNT1247"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1248"></a>Remarks</p>
<p>Default = Not Applicable</p>
<p>A case-sensitive search is made to locate the specified column by its name. If this fails, then a case-insensitive search is made.</p>
<p>In C#, this property is the indexer for this class.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1249" class="refsect3"><a id="BABEAIFD"></a>
<h3 class="refsect3">InitialLOBFetchSize</h3>
<p>This property specifies the amount that the <code>OracleDataReader</code> initially fetches for LOB columns.</p>
<p class="subhead2"><a id="ODPNT1250"></a>Declaration</p>
<pre>// C#
public int InitialLOBFetchSize {get;}
</pre>
<p class="subhead2"><a id="ODPNT1251"></a>Property Value</p>
<p>The size of the chunk to retrieve.</p>
<p class="subhead2"><a id="ODPNT1252"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p class="subhead2"><a id="ODPNT1253"></a>Remarks</p>
<p>The maximum value supported for <code>InitialLOBFetchSize</code> is 2 GB.</p>
<p>Default is the <code>OracleCommand.InitialLOBFetchSize</code>, from which this value is inherited.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#BABEGDHA">&#34;InitialLOBFetchSize&#34;</a> for further information on <code>OracleCommand.InitialLOBFetchSize</code></p>
</li>
<li>
<p><a href="featData.htm#BABFGDGJ">&#34;Obtaining LOB Data&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1254" class="refsect3"><a id="i1004258"></a>
<h3 class="refsect3">InitialLONGFetchSize</h3>
<p>This property specifies the amount that the <code>OracleDataReader</code> initially fetches for <code>LONG</code> and <code>LONG</code> <code>RAW</code> columns.</p>
<p class="subhead2"><a id="ODPNT1255"></a>Declaration</p>
<pre>// C#
public long InitialLONGFetchSize {get;}
</pre>
<p class="subhead2"><a id="ODPNT1256"></a>Property Value</p>
<p>The size of the chunk to retrieve. The default is <code>0</code>.</p>
<p class="subhead2"><a id="ODPNT1257"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p class="subhead2"><a id="ODPNT1258"></a>Remarks</p>
<p>The maximum value supported for <code>InitialLONGFetchSize</code> is <code>32767</code>. If this property is set to a higher value, the provider resets it to <code>32767</code>.</p>
<p>Default is <code>OracleCommand.InitialLONGFetchSize</code>, from which this value is inherited.</p>
<p>This property is read-only for the <code>OracleDataReader</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#i997859">&#34;InitialLONGFetchSize&#34;</a> for further information on <code>OracleCommand.InitialLONGFetchSize</code></p>
</li>
<li>
<p><a href="featData.htm#i1007197">&#34;Obtaining LONG and LONG RAW Data&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1259" class="refsect3"><a id="i1004297"></a>
<h3 class="refsect3">RecordsAffected</h3>
<p>This property gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>
<p class="subhead2"><a id="ODPNT1260"></a>Declaration</p>
<pre>// C#
public int RecordsAffected {get;}
</pre>
<p class="subhead2"><a id="ODPNT1261"></a>Property Value</p>
<p>The number of rows affected by execution of the SQL statement.</p>
<p class="subhead2"><a id="ODPNT1262"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1263"></a>Remarks</p>
<p>Default = <code>0</code></p>
<p>The value of <code>-1</code> is returned for <code>SELECT</code> statements.</p>
<p><code>IsClosed</code> and <code>RecordsAffected</code> are the only two properties that are accessible after the <code>OracleDataReader</code> is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1264" class="refsect3"><a id="CHDJAAAB"></a><a id="BABGFBBI"></a>
<h3 class="refsect3">RowSize</h3>
<p>This property gets the amount of memory the internal cache of the <code>OracleDataReader</code> needs to store one row of data.</p>
<p class="subhead2"><a id="ODPNT1265"></a>Declaration</p>
<pre>// C#
public long RowSize {get;}
</pre>
<p class="subhead2"><a id="ODPNT1266"></a>Property Value</p>
<p>A <code>long</code> that indicates the amount of memory (in bytes) that an <code>OracleDataReader</code> needs to store one row of data for the executed query.</p>
<p class="subhead2"><a id="ODPNT1267"></a>Remarks</p>
<p>The <code>RowSize</code> property is set to a nonzero value when the <code>OracleDataReader</code> object is created. This property can be used at design time or dynamically during runtime, to set the <code>FetchSize</code> property, based on the number of rows. For example, to enable the <code>OracleDataReader</code> object to fetch <code><span class="codeinlineitalic">N</span></code> rows for each database round-trip, the <code>OracleDataReader</code> <code>FetchSize</code> property can be set dynamically to <code>RowSize</code> <code>*</code> <code><span class="codeinlineitalic">N</span></code>. Note that for the <code>FetchSize</code> property to take effect appropriately, it must be set before the first invocation of <code>OracleDataReader.Read()</code> for the particular result set.</p>
<p>ODP.NET now supports values up to 32K for <code>VARCHAR2</code>, <code>NVARCHAR2</code> or <code>RAW</code> type columns in its calculation of <code>RowSize</code> value</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#CHDHGEBF">&#34;FetchSize&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT8356" class="refsect3"><a id="DAFJJCDB"></a>
<h3 class="refsect3">UseEdmMapping</h3>
<p>This read-only property indicates whether or not the <code>OracleDataReader</code> utilizes the Entity Data Model mapping configuration when returning values.</p>
<p class="subhead2"><a id="ODPNT8357"></a>Declaration</p>
<pre>// C#
public bool UseEdmMapping {get;}
</pre>
<p class="subhead2"><a id="ODPNT8358"></a>Property Value</p>
<p>A <code>boolean</code> that indicates whether the <code>OracleDataReader</code> uses the Entity Data Model mapping configuration for returning values.</p>
<p class="subhead2"><a id="ODPNT8359"></a>Remarks</p>
<p>Default is <code>false</code>.</p>
<p>The value is inherited from the <code>OracleCommand</code> object.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="OracleCommandClass.htm#i996876">OracleCommand Class</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1268" class="refsect3"><a id="CHDIEIHA"></a><a id="CHDEDDCB"></a>
<h3 class="refsect3">VisibleFieldCount</h3>
<p>This property gets the number of fields in the <code>OracleDataReader</code> that are not hidden.</p>
<p class="subhead2"><a id="ODPNT1269"></a>Declaration</p>
<pre>// C#
public override int VisibleFieldcount { get; }
</pre>
<p class="subhead2"><a id="ODPNT1270"></a>Property Value</p>
<p>The number of fields that are not hidden.</p>
<p class="subhead2"><a id="ODPNT1271"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p class="subhead2"><a id="ODPNT1272"></a>Remarks</p>
<p>If an application sets the <code>AddRowid</code> property on an <code>OracleCommand</code> object to <code>true</code>, then the application can access the <code>RowId</code> but it is not a visible field. If <code>RowId</code> is added in the select statement list, then it is a visible field. <code>OracleDataReader.VisibleFieldCount</code> and <code>OracleDataReader.FieldCount</code> always have the same value.</p>
<p class="subhead2"><a id="ODPNT1273"></a>Example</p>
<pre>// C#
 
using System;
using System.Data;
using System.Data.Common;
using Oracle.DataAccess.Client;
 
class VisibleFieldCountSample
{
  static void Main(string[] args)
  {
    string constr = &#34;User Id=scott; Password=tiger; Data Source=oracle;&#34;;
    DbProviderFactory factory =
            DbProviderFactories.GetFactory(&#34;Oracle.DataAccess.Client&#34;);
 
    using (DbConnection conn = factory.CreateConnection())
    {
      conn.ConnectionString = constr;
      try
      {
        conn.Open();
        OracleCommand cmd = (OracleCommand)factory.CreateCommand();
        cmd.Connection = (OracleConnection)conn;
 
        //to gain access to ROWIDs of the table
        cmd.AddRowid = true;
        cmd.CommandText = &#34;select empno, ename from emp;&#34;;
 
        OracleDataReader reader = cmd.ExecuteReader();
        
        int visFC = reader.VisibleFieldCount; //Results in 2
        int hidFC = reader.HiddenFieldCount;  // Results in 1
 
        Console.Write(&#34;Visible field count: &#34; + visFC);
        Console.Write(&#34;Hidden field count: &#34; + hidFC);
 
        reader.Dispose();
        cmd.Dispose();
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
        Console.WriteLine(ex.StackTrace);
      }
    }
  }
}
 
 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="#CHDIEIHA">&#34;VisibleFieldCount&#34;</a></p>
</li>
<li>
<p><a href="#CHDIAHCA">&#34;FieldCount&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ODPNT1274" class="refsect2"><a id="i1004329"></a>
<h2 class="refsect2">OracleDataReader Public Methods<a id="sthref866"></a></h2>
<p><code>OracleDataReader</code> public methods are listed in <a href="#g1101718">Table 6-58</a>.</p>
<div id="ODPNT1275" class="tblruleformal">
<p class="titleintable"><a id="sthref867"></a><a id="g1101718"></a>Table 6-58 OracleDataReader Public Methods</p>
<table class="cellalignment4229" title="OracleDataReader Public Methods " summary="Rows are public methods. first column is name, second column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t316">Public Method</th>
<th class="cellalignment4230" id="r1c2-t316">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t316" headers="r1c1-t316">
<p><a href="#i1004711">Close</a></p>
</td>
<td class="cellalignment4226" headers="r2c1-t316 r1c2-t316">
<p>Closes the <code>OracleDataReader</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t316" headers="r1c1-t316">
<p><code>CreateObjRef</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t316 r1c2-t316">
<p>Inherited from <code>System.MarshalByRefObject</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t316" headers="r1c1-t316">
<p><a href="#i1004747">Dispose</a></p>
</td>
<td class="cellalignment4226" headers="r4c1-t316 r1c2-t316">
<p>Releases any resources or memory allocated by the object</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t316" headers="r1c1-t316">
<p><code>Equals</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t316 r1c2-t316">
<p>Inherited from <code>System.Object</code> (Overloaded)</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t316" headers="r1c1-t316">
<p><a href="#CHDGEBAJ">GetBoolean</a></p>
</td>
<td class="cellalignment4226" headers="r6c1-t316 r1c2-t316">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t316" headers="r1c1-t316">
<p><a href="#i1004775">GetByte</a></p>
</td>
<td class="cellalignment4226" headers="r7c1-t316 r1c2-t316">
<p>Returns the byte value of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t316" headers="r1c1-t316">
<p><a href="#i1004813">GetBytes</a></p>
</td>
<td class="cellalignment4226" headers="r8c1-t316 r1c2-t316">
<p>Populates the provided byte array with up to the maximum number of bytes, from the specified offset (in bytes) of the column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t316" headers="r1c1-t316">
<p><a href="#CHDGEBHJ">GetChar</a></p>
</td>
<td class="cellalignment4226" headers="r9c1-t316 r1c2-t316">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t316" headers="r1c1-t316">
<p><a href="#i1004859">GetChars</a></p>
</td>
<td class="cellalignment4226" headers="r10c1-t316 r1c2-t316">
<p>Populates the provided character array with up to the maximum number of characters, from the specified offset (in characters) of the column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t316" headers="r1c1-t316">
<p><code>GetData</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t316 r1c2-t316">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t316" headers="r1c1-t316">
<p><a href="#i1004907">GetDataTypeName</a></p>
</td>
<td class="cellalignment4226" headers="r12c1-t316 r1c2-t316">
<p>Returns the ODP.NET type name of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t316" headers="r1c1-t316">
<p><a href="#i1004947">GetDateTime</a></p>
</td>
<td class="cellalignment4226" headers="r13c1-t316 r1c2-t316">
<p>Returns the <code>DateTime</code> value of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t316" headers="r1c1-t316">
<p><a href="#i1004984">GetDecimal</a></p>
</td>
<td class="cellalignment4226" headers="r14c1-t316 r1c2-t316">
<p>Returns the <code>decimal</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r15c1-t316" headers="r1c1-t316">
<p><a href="#i1005021">GetDouble</a></p>
</td>
<td class="cellalignment4226" headers="r15c1-t316 r1c2-t316">
<p>Returns the <code>double</code> value of the specified <code>NUMBER</code> column or <code>BINARY_DOUBLE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r16c1-t316" headers="r1c1-t316">
<p><a href="#BABHCADG">GetEnumerator</a></p>
</td>
<td class="cellalignment4226" headers="r16c1-t316 r1c2-t316">
<p>Returns an <code>IEnumerator</code> that can be used to iterate through the collection</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r17c1-t316" headers="r1c1-t316">
<p><a href="#i1005058">GetFieldType</a></p>
</td>
<td class="cellalignment4226" headers="r17c1-t316 r1c2-t316">
<p>Returns the <code>Type</code> of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r18c1-t316" headers="r1c1-t316">
<p><a href="#i1005092">GetFloat</a></p>
</td>
<td class="cellalignment4226" headers="r18c1-t316 r1c2-t316">
<p>Returns the <code>float</code> value of the specified <code>NUMBER</code> column or <code>BINARY_FLOAT</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r19c1-t316" headers="r1c1-t316">
<p><a href="#CHDGJBHC">GetGuid</a></p>
</td>
<td class="cellalignment4226" headers="r19c1-t316 r1c2-t316">
<p><span class="italic">Not Supported</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r20c1-t316" headers="r1c1-t316">
<p><code>GetHashCode</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t316 r1c2-t316">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r21c1-t316" headers="r1c1-t316">
<p><a href="#i1005130">GetInt16</a></p>
</td>
<td class="cellalignment4226" headers="r21c1-t316 r1c2-t316">
<p>Returns the <code>Int16</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r22c1-t316" headers="r1c1-t316">
<p><a href="#i1005172">GetInt32</a></p>
</td>
<td class="cellalignment4226" headers="r22c1-t316 r1c2-t316">
<p>Returns the <code>Int32</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r23c1-t316" headers="r1c1-t316">
<p><a href="#i1005214">GetInt64</a></p>
</td>
<td class="cellalignment4226" headers="r23c1-t316 r1c2-t316">
<p>Returns the <code>Int64</code> value of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r24c1-t316" headers="r1c1-t316">
<p><code>GetLifetimeService</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t316 r1c2-t316">
<p>Inherited by <code>System.MarshalByRefObject</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r25c1-t316" headers="r1c1-t316">
<p><a href="#i1005256">GetName</a></p>
</td>
<td class="cellalignment4226" headers="r25c1-t316 r1c2-t316">
<p>Returns the name of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r26c1-t316" headers="r1c1-t316">
<p><a href="#i1005290">GetOracleBFile</a></p>
</td>
<td class="cellalignment4226" headers="r26c1-t316 r1c2-t316">
<p>Returns an <code>OracleBFile</code> object of the specified <code>BFILE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r27c1-t316" headers="r1c1-t316">
<p><a href="#i1005325">GetOracleBinary</a></p>
</td>
<td class="cellalignment4226" headers="r27c1-t316 r1c2-t316">
<p>Returns an <code>OracleBinary</code> structure of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r28c1-t316" headers="r1c1-t316">
<p><a href="#i1005365">GetOracleBlob</a></p>
</td>
<td class="cellalignment4226" headers="r28c1-t316 r1c2-t316">
<p>Returns an <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r29c1-t316" headers="r1c1-t316">
<p><a href="#i1005400">GetOracleBlobForUpdate</a></p>
</td>
<td class="cellalignment4226" headers="r29c1-t316 r1c2-t316">
<p>Returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column</p>
<p><span class="italic">Not Available in ODP.NET, Managed Driver</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r30c1-t316" headers="r1c1-t316">
<p><a href="#i1005577">GetOracleClob</a></p>
</td>
<td class="cellalignment4226" headers="r30c1-t316 r1c2-t316">
<p>Returns an <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r31c1-t316" headers="r1c1-t316">
<p><a href="#i1005619">GetOracleClobForUpdate</a></p>
</td>
<td class="cellalignment4226" headers="r31c1-t316 r1c2-t316">
<p>Returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column</p>
<p><span class="italic">Not Available in ODP.NET, Managed Driver</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r32c1-t316" headers="r1c1-t316">
<p><a href="#i1005795">GetOracleDate</a></p>
</td>
<td class="cellalignment4226" headers="r32c1-t316 r1c2-t316">
<p>Returns an <code>OracleDate</code> structure of the specified <code>DATE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r33c1-t316" headers="r1c1-t316">
<p><a href="#i1005837">GetOracleDecimal</a></p>
</td>
<td class="cellalignment4226" headers="r33c1-t316 r1c2-t316">
<p>Returns an <code>OracleDecimal</code> structure of the specified <code>NUMBER</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r34c1-t316" headers="r1c1-t316">
<p><a href="#i1005872">GetOracleIntervalDS</a></p>
</td>
<td class="cellalignment4226" headers="r34c1-t316 r1c2-t316">
<p>Returns an <code>OracleIntervalDS</code> structure of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r35c1-t316" headers="r1c1-t316">
<p><a href="#i1005907">GetOracleIntervalYM</a></p>
</td>
<td class="cellalignment4226" headers="r35c1-t316 r1c2-t316">
<p>Returns an <code>OracleIntervalYM</code> structure of the specified <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r36c1-t316" headers="r1c1-t316">
<p><a href="#BABFEHBI">GetOracleRef</a></p>
</td>
<td class="cellalignment4226" headers="r36c1-t316 r1c2-t316">
<p>Returns an <code>OracleRef</code> object of the specified <code>REF</code> column</p>
<p><span class="italic">Not Available in ODP.NET, Managed Driver</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r37c1-t316" headers="r1c1-t316">
<p><a href="#i1005942">GetOracleString</a></p>
</td>
<td class="cellalignment4226" headers="r37c1-t316 r1c2-t316">
<p>Returns an <code>OracleString</code> structure of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r38c1-t316" headers="r1c1-t316">
<p><a href="#i1005989">GetOracleTimeStamp</a></p>
</td>
<td class="cellalignment4226" headers="r38c1-t316 r1c2-t316">
<p>Returns an <code>OracleTimeStamp</code> structure of the Oracle <code>TimeStamp</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r39c1-t316" headers="r1c1-t316">
<p><a href="#i1006025">GetOracleTimeStampLTZ</a></p>
</td>
<td class="cellalignment4226" headers="r39c1-t316 r1c2-t316">
<p>Returns an <code>OracleTimeStampLTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r40c1-t316" headers="r1c1-t316">
<p><a href="#i1006061">GetOracleTimeStampTZ</a></p>
</td>
<td class="cellalignment4226" headers="r40c1-t316 r1c2-t316">
<p>Returns an <code>OracleTimeStampTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r41c1-t316" headers="r1c1-t316">
<p><a href="#i1021203">GetOracleXmlType</a></p>
</td>
<td class="cellalignment4226" headers="r41c1-t316 r1c2-t316">
<p>Returns an <code>OracleXmlType</code> object of the specified <code>XMLType</code> column</p>
<p><span class="italic">Not Available in ODP.NET, Managed Driver</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r42c1-t316" headers="r1c1-t316">
<p><a href="#i1006136">GetOracleValue</a></p>
</td>
<td class="cellalignment4226" headers="r42c1-t316 r1c2-t316">
<p>Returns the specified column value as a ODP.NET type</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r43c1-t316" headers="r1c1-t316">
<p><a href="#i1006175">GetOracleValues</a></p>
</td>
<td class="cellalignment4226" headers="r43c1-t316 r1c2-t316">
<p>Gets all the column values as ODP.NET types</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r44c1-t316" headers="r1c1-t316">
<p><a href="#i1006226">GetOrdinal</a></p>
</td>
<td class="cellalignment4226" headers="r44c1-t316 r1c2-t316">
<p>Returns the <code>0</code>-based ordinal (or index) of the specified column name</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r45c1-t316" headers="r1c1-t316">
<p><a href="#CHDGBEAA">GetProviderSpecificFieldType</a></p>
</td>
<td class="cellalignment4226" headers="r45c1-t316 r1c2-t316">
<p>Returns the provider-specific type of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r46c1-t316" headers="r1c1-t316">
<p><a href="#CHDIIBDH">GetProviderSpecificValue</a></p>
</td>
<td class="cellalignment4226" headers="r46c1-t316 r1c2-t316">
<p>Returns an object that represents the underlying provider-specific value of the specified ordinal</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r47c1-t316" headers="r1c1-t316">
<p><a href="#CHDEECDJ">GetProviderSpecificValues</a></p>
</td>
<td class="cellalignment4226" headers="r47c1-t316 r1c2-t316">
<p>Returns an array of objects that represent the underlying provider-specific values</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r48c1-t316" headers="r1c1-t316">
<p><a href="#i1006262">GetSchemaTable</a></p>
</td>
<td class="cellalignment4226" headers="r48c1-t316 r1c2-t316">
<p>Returns a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r49c1-t316" headers="r1c1-t316">
<p><a href="#i1006481">GetString</a></p>
</td>
<td class="cellalignment4226" headers="r49c1-t316 r1c2-t316">
<p>Returns the string value of the specified column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r50c1-t316" headers="r1c1-t316">
<p><a href="#i1006518">GetTimeSpan</a></p>
</td>
<td class="cellalignment4226" headers="r50c1-t316 r1c2-t316">
<p>Returns the <code>TimeSpan</code> value of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r51c1-t316" headers="r1c1-t316">
<p><code>GetType</code></p>
</td>
<td class="cellalignment4226" headers="r51c1-t316 r1c2-t316">
<p>Inherited from <code>System.Object</code> class</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r52c1-t316" headers="r1c1-t316">
<p><a href="#i1006555">GetValue</a></p>
</td>
<td class="cellalignment4226" headers="r52c1-t316 r1c2-t316">
<p>Returns the column value as a .NET type</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r53c1-t316" headers="r1c1-t316">
<p><a href="#i1006589">GetValues</a></p>
</td>
<td class="cellalignment4226" headers="r53c1-t316 r1c2-t316">
<p>Gets all the column values as .NET types</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r54c1-t316" headers="r1c1-t316">
<p><a href="#i1006627">GetXmlReader</a></p>
</td>
<td class="cellalignment4226" headers="r54c1-t316 r1c2-t316">
<p>Returns the value of an <code>XMLType</code> column as an instance of an .NET <code>XmlTextReader</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r55c1-t316" headers="r1c1-t316">
<p><a href="#i1006661">IsDBNull</a></p>
</td>
<td class="cellalignment4226" headers="r55c1-t316 r1c2-t316">
<p>Indicates whether or not the column value is null</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r56c1-t316" headers="r1c1-t316">
<p><a href="#i1006705">NextResult</a></p>
</td>
<td class="cellalignment4226" headers="r56c1-t316 r1c2-t316">
<p>Advances the data reader to the next result set when reading the results</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r57c1-t316" headers="r1c1-t316">
<p><a href="#i1006737">Read</a></p>
</td>
<td class="cellalignment4226" headers="r57c1-t316 r1c2-t316">
<p>Reads the next row in the result set</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r58c1-t316" headers="r1c1-t316">
<p><code>ToString</code></p>
</td>
<td class="cellalignment4226" headers="r58c1-t316 r1c2-t316">
<p>Inherited from <code>System.Object</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
<div id="ODPNT1276" class="refsect3"><a id="i1004711"></a>
<h3 class="refsect3">Close</h3>
<p>This method closes the <code>OracleDataReader</code>.</p>
<p class="subhead2"><a id="ODPNT1277"></a>Declaration</p>
<pre>// C#
public override void Close();
</pre>
<p class="subhead2"><a id="ODPNT1278"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1279"></a>Remarks</p>
<p>The <code>Close</code> method frees all resources associated with the <code>OracleDataReader</code>.</p>
<p class="subhead2"><a id="ODPNT1280"></a>Example</p>
<p>The code example for the <code>OracleDataReader</code> class includes the <code>Close</code> method. See <code>OracleDataReader</code> Overview <a href="#i1003289">&#34;Example&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1281" class="refsect3"><a id="i1004747"></a>
<h3 class="refsect3">Dispose</h3>
<p>This method releases any resources or memory allocated by the object.</p>
<p class="subhead2"><a id="ODPNT1282"></a>Declaration</p>
<pre>// C#
public void Dispose();
</pre>
<p class="subhead2"><a id="ODPNT1283"></a>Implements</p>
<p><code>IDisposable</code></p>
<p class="subhead2"><a id="ODPNT1284"></a>Remarks</p>
<p>The <code>Dispose</code> method also closes the <code>OracleDataReader</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1285" class="refsect3"><a id="CHDGEBAJ"></a>
<h3 class="refsect3">GetBoolean</h3>
<p>This method is not supported.</p>
<p class="subhead2"><a id="ODPNT1286"></a>Declaration</p>
<pre>// C#
public override bool GetBoolean(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1287"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1288"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1289"></a>Exceptions</p>
<p><code>NotSupportedException</code> - This property is not supported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1290" class="refsect3"><a id="i1004775"></a>
<h3 class="refsect3">GetByte</h3>
<p>This method returns the byte value of the specified column.</p>
<p class="subhead2"><a id="ODPNT1291"></a>Declaration</p>
<pre>// C#
public override byte GetByte(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1292"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1293"></a>Return Value</p>
<p>The value of the column as a byte.</p>
<p class="subhead2"><a id="ODPNT1294"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1295"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1296"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1297" class="refsect3"><a id="i1004813"></a>
<h3 class="refsect3">GetBytes</h3>
<p>This method populates the provided byte array with up to the maximum number of bytes, from the specified offset (in bytes) of the column.</p>
<p class="subhead2"><a id="ODPNT1298"></a>Declaration</p>
<pre>// C#
public override long GetBytes(int index, long fieldOffset, byte[] buffer, 
   int bufferOffset, int length);
</pre>
<p class="subhead2"><a id="ODPNT1299"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">fieldOffset</span></code></p>
<p>The offset within the column from which reading begins (in bytes).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">buffer</span></code></p>
<p>The byte array that the data is read into.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">bufferOffset</span></code></p>
<p>The offset within the buffer to begin reading data into (in bytes).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">length</span></code></p>
<p>The maximum number of bytes to read (in bytes).</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1300"></a>Return Value</p>
<p>The number of bytes read.</p>
<p class="subhead2"><a id="ODPNT1301"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1302"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1303"></a>Remarks</p>
<p>This method returns the number of bytes read into the buffer. This may be less than the actual length of the field if the method has been called previously for the same column.</p>
<p>If a null reference is passed for buffer, the length of the field in bytes is returned.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1304" class="refsect3"><a id="CHDGEBHJ"></a>
<h3 class="refsect3">GetChar</h3>
<p>This method is not supported.</p>
<p class="subhead2"><a id="ODPNT1305"></a>Declaration</p>
<pre>// C#
public override long GetChar(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1306"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1307"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1308"></a>Exceptions</p>
<p><code>NotSupportedException</code> - This property is not supported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1309" class="refsect3"><a id="i1004859"></a>
<h3 class="refsect3">GetChars</h3>
<p>This method populates the provided character array with up to the maximum number of characters, from the specified offset (in characters) of the column.</p>
<p class="subhead2"><a id="ODPNT1310"></a>Declaration</p>
<pre>// C#
public override long GetChars(int <span class="italic">index</span>, long <span class="italic">fieldOffset</span>, char[] <span class="italic">buffer</span>,
    int <span class="italic">bufferOffset</span>, int <span class="italic">length</span>);
</pre>
<p class="subhead2"><a id="ODPNT1311"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">fieldOffset</span></code></p>
<p>The index within the column from which to begin reading (in characters).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">buffer</span></code></p>
<p>The character array that the data is read into.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">bufferOffset</span></code></p>
<p>The index within the buffer to begin reading data into (in characters).</p>
</li>
<li>
<p><code><span class="codeinlineitalic">length</span></code></p>
<p>The maximum number of characters to read (in characters).</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1312"></a>Return Value</p>
<p>The number of characters read.</p>
<p class="subhead2"><a id="ODPNT1313"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1314"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1315"></a>Remarks</p>
<p>This method returns the number of characters read into the buffer. This may be less than the actual length of the field, if the method has been called previously for the same column.</p>
<p>If a null reference is passed for buffer, the length of the field in characters is returned.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1316" class="refsect3"><a id="i1004907"></a>
<h3 class="refsect3">GetDataTypeName</h3>
<p>This method returns the ODP.NET type name of the specified column.</p>
<p class="subhead2"><a id="ODPNT1317"></a>Declaration</p>
<pre>// C#
public override string GetDataTypeName(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1318"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1319"></a>Return Value</p>
<p>The name of the ODP.NET type of the column.</p>
<p class="subhead2"><a id="ODPNT1320"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1321"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1322" class="refsect3"><a id="i1004947"></a>
<h3 class="refsect3">GetDateTime</h3>
<p>This method returns the <code>DateTime</code> value of the specified column.</p>
<p class="subhead2"><a id="ODPNT1323"></a>Declaration</p>
<pre>// C#
public override DateTime GetDateTime(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1324"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1325"></a>Return Value</p>
<p>The <code>DateTime</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1326"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1327"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1328"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1329" class="refsect3"><a id="i1004984"></a>
<h3 class="refsect3">GetDecimal</h3>
<p>This method returns the <code>decimal</code> value of the specified <code>NUMBER</code> column.</p>
<p class="subhead2"><a id="ODPNT1330"></a>Declaration</p>
<pre>// C#
public override decimal GetDecimal(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1331"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1332"></a>Return Value</p>
<p>The <code>decimal</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1333"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1334"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1335"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1336" class="refsect3"><a id="i1005021"></a>
<h3 class="refsect3">GetDouble</h3>
<p>This method returns the <code>double</code> value of the specified <code>NUMBER</code> column or <code>BINARY_DOUBLE</code> column.</p>
<p class="subhead2"><a id="ODPNT1337"></a>Declaration</p>
<pre>// C#
public override double GetDouble(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1338"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1339"></a>Return Value</p>
<p>The <code>double</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1340"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1341"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1342"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p><code>GetDouble</code> now supports retrieval of data from <code>BINARY_DOUBLE</code> columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1343" class="refsect3"><a id="BABHCADG"></a>
<h3 class="refsect3">GetEnumerator</h3>
<p>This method returns an <code>IEnumerator</code> that can be used to iterate through the collection (record set).</p>
<p class="subhead2"><a id="ODPNT1344"></a>Declaration</p>
<pre>// C#
public override IEnumerator GetEnumerator();
</pre>
<p class="subhead2"><a id="ODPNT1345"></a>Return Value</p>
<p>An <code>IEnumerator</code> that can be used to iterate through the collection (record set).</p>
<p class="subhead2"><a id="ODPNT1346"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1347" class="refsect3"><a id="i1005058"></a>
<h3 class="refsect3">GetFieldType</h3>
<p>This method returns the <code>type</code> of the specified column.</p>
<p class="subhead2"><a id="ODPNT1348"></a>Declaration</p>
<pre>// C#
public override Type GetFieldType(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1349"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1350"></a>Return Value</p>
<p>The <code>type</code> of the default .NET type of the column.</p>
<p class="subhead2"><a id="ODPNT1351"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="DAFIBCFD"></a><a id="ODPNT1352"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed, or the specified column is a UDT but no registered custom type mapping exists for the UDT.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p class="subhead2"><a id="ODPNT1353"></a>Remarks</p>
<p><code>GetFieldType</code> returns a type that corresponds to the value that the application obtains after invoking the <code>GetValue</code> accessor or <code>Item</code> property on the <code>OracleDataReader</code>. For example, if the column is a string, this method returns a .NET Type object for a .NET string.</p>
<p>If the attribute is a UDT, this method may return either of the following:</p>
<ul>
<li>
<p>A .NET Type of the custom type if a custom type mapping exists for the Oracle object or collection.</p>
</li>
<li>
<p>A .NET Type of string if the column is an Oracle <code>REF</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1354" class="refsect3"><a id="i1005092"></a>
<h3 class="refsect3">GetFloat</h3>
<p>This method returns the <code>float</code> value of the specified <code>NUMBER</code> column or <code>BINARY_FLOAT</code> column.</p>
<p class="subhead2"><a id="ODPNT1355"></a>Declaration</p>
<pre>// C#
public override float GetFloat(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1356"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1357"></a>Return Value</p>
<p>The <code>float</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1358"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1359"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1360"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p><code>GetFloat</code> now supports retrieval of data from <code>BINARY_FLOAT</code> columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1361" class="refsect3"><a id="CHDGJBHC"></a>
<h3 class="refsect3">GetGuid</h3>
<p>This method is not supported.</p>
<p class="subhead2"><a id="ODPNT1362"></a>Declaration</p>
<pre>// C#
public override Guid GetGuid(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1363"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1364"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1365"></a>Exceptions</p>
<p><code>NotSupportedException</code> - This property is not supported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1366" class="refsect3"><a id="i1005130"></a>
<h3 class="refsect3">GetInt16</h3>
<p>This method returns the <code>Int16</code> value of the specified <code>NUMBER</code> column.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>short</code> is equivalent to <code>Int16</code>.</div>
<p class="subhead2"><a id="ODPNT1367"></a>Declaration</p>
<pre>// C#
public override short GetInt16(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1368"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1369"></a>Return Value</p>
<p>The <code>Int16</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1370"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1371"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1372"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1373" class="refsect3"><a id="i1005172"></a>
<h3 class="refsect3">GetInt32</h3>
<p>This method returns the <code>Int32</code> value of the specified <code>NUMBER</code> column.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>int</code> is equivalent to <code>Int32</code>.</div>
<p class="subhead2"><a id="ODPNT1374"></a>Declaration</p>
<pre>// C#
public override int GetInt32(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1375"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1376"></a>Return Value</p>
<p>The <code>Int32</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1377"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1378"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1379"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1380" class="refsect3"><a id="i1005214"></a>
<h3 class="refsect3">GetInt64</h3>
<p>This method returns the <code>Int64</code> value of the specified <code>NUMBER</code> column.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>long</code> is equivalent to <code>Int64</code>.</div>
<p class="subhead2"><a id="ODPNT1381"></a>Declaration</p>
<pre>// C#
public override long GetInt64(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1382"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1383"></a>Return Value</p>
<p>The <code>Int64</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1384"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1385"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1386"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1387" class="refsect3"><a id="i1005256"></a>
<h3 class="refsect3">GetName</h3>
<p>This method returns the name of the specified column.</p>
<p class="subhead2"><a id="ODPNT1388"></a>Declaration</p>
<pre>// C#
public override string GetName(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1389"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1390"></a>Return Value</p>
<p>The name of the column.</p>
<p class="subhead2"><a id="ODPNT1391"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1392"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1393" class="refsect3"><a id="i1005290"></a>
<h3 class="refsect3">GetOracleBFile</h3>
<p>This method returns an <code>OracleBFile</code> object of the specified <code>BFILE</code> column.</p>
<p class="subhead2"><a id="ODPNT1394"></a>Declaration</p>
<pre>// C#
public OracleBFile GetOracleBFile(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1395"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1396"></a>Return Value</p>
<p>The <code>OracleBFile</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1397"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1398"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1399" class="refsect3"><a id="i1005325"></a>
<h3 class="refsect3">GetOracleBinary</h3>
<p>This method returns an <code>OracleBinary</code> structure of the specified column.</p>
<p class="subhead2"><a id="ODPNT1400"></a>Declaration</p>
<pre>// C#
public OracleBinary GetOracleBinary(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1401"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1402"></a>Return Value</p>
<p>The <code>OracleBinary</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1403"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1404"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p><code>GetOracleBinary</code> is used on the following Oracle types:</p>
<ul>
<li>
<p><code>BFILE</code></p>
</li>
<li>
<p><code>BLOB</code></p>
</li>
<li>
<p><code>LONG</code> <code>RAW</code></p>
</li>
<li>
<p><code>RAW</code></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1405" class="refsect3"><a id="i1005365"></a>
<h3 class="refsect3">GetOracleBlob</h3>
<p>This method returns an <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
<p class="subhead2"><a id="ODPNT1406"></a>Declaration</p>
<pre>// C#
public OracleBlob GetOracleBlob(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1407"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1408"></a>Return Value</p>
<p>The <code>OracleBlob</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1409"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1410"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1411" class="refsect3"><a id="i1005400"></a>
<h3 class="refsect3">GetOracleBlobForUpdate</h3>
<p><code>GetOracleBlobForUpdate</code> returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
<p class="subhead2"><a id="ODPNT1412"></a>Overload List:</p>
<ul>
<li>
<p><a href="#i1005415">GetOracleBlobForUpdate(int)</a></p>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
</li>
<li>
<p><a href="#i1005507">GetOracleBlobForUpdate(int, int)</a></p>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column using a <code>WAIT</code> clause.</p>
</li>
</ul>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1413" class="refsect3"><a id="i1005415"></a>
<h3 class="refsect3">GetOracleBlobForUpdate(int)</h3>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column.</p>
<p class="subhead2"><a id="ODPNT1414"></a>Declaration</p>
<pre>// C#
public OracleBlob GetOracleBlobForUpdate(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1415"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1416"></a>Return Value</p>
<p>An updatable <code>OracleBlob</code> object.</p>
<p class="subhead2"><a id="ODPNT1417"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1418"></a>Remarks</p>
<p>When the <code>OracleCommand</code>&#39;s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleBlobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>BLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleBlob</code> obtained from <code>GetOracleBlob()</code> can have a different value than the <code>OracleBlob</code> obtained from <code>GetOracleBlobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p>The returned <code>OracleBlob</code> object can be used to safely update the <code>BLOB</code> because the <code>BLOB</code> column has been locked after a call to this method.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR UPDATE</code> statement without a <code>WAIT</code> clause. Therefore, the statement can wait indefinitely until a lock is acquired for that row.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p class="subhead2"><a id="i1005436"></a><a id="ODPNT1419"></a>Example</p>
<p>The following example gets the <code>OracleBlob</code> object for update from the reader, updates the <code>OracleBlob</code> object, and then commits the transaction.</p>
<pre>/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,&#39;KING&#39;,&#39;SOFTWARE ENGR&#39;, &#39;5657&#39;);
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,&#39;SCOTT&#39;,&#39;MANAGER&#39;, &#39;5960&#39;);
commit;
 
*/
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
using Oracle.DataAccess.Types;
 
class GetOracleBlobForUpdateSample
{
  static void Main()
  {
    string constr = &#34;User Id=scott;Password=tiger;Data Source=oracle&#34;;
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    // Get the ByteCodes for empno = 1
    string cmdstr = &#34;SELECT BYTECODES, EMPNO FROM EMPINFO where EMPNO = 1&#34;;
    OracleCommand cmd = new OracleCommand(cmdstr, con);
 
    // Since we are going to update the OracleBlob object, we will
    //have to create a transaction
    OracleTransaction txn = con.BeginTransaction();
 
    // Get the reader
    OracleDataReader reader = cmd.ExecuteReader();
 
    // Declare the variables to retrieve the data in EmpInfo
    OracleBlob byteCodesBlob;
 
    // Read the first row
    reader.Read();
    if (!reader.IsDBNull(0))
    {
      byteCodesBlob = reader.GetOracleBlobForUpdate(0);
 
      // Close the reader
      reader.Close();
 
      // Update the ByteCodes object
      byte[] addedBytes = new byte[2] {0, 0};
      byteCodesBlob.Append(addedBytes, 0, addedBytes.Length);
 
      // Now commit the transaction
      txn.Commit();
      Console.WriteLine(&#34;Blob Column successfully updated&#34;);
    }
    else
      reader.Dispose();
 
    // Close the connection
    con.Dispose();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1420" class="refsect3"><a id="i1005507"></a>
<h3 class="refsect3">GetOracleBlobForUpdate(int, int)</h3>
<p>This method returns an updatable <code>OracleBlob</code> object of the specified <code>BLOB</code> column using a <code>WAIT</code> clause.</p>
<p class="subhead2"><a id="ODPNT1421"></a>Declaration</p>
<pre>// C#
public OracleBlob GetOracleBlobForUpdate(int <span class="italic">index</span>, int <span class="italic">wait</span>);
</pre>
<p class="subhead2"><a id="ODPNT1422"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">wait</span></code></p>
<p>The number of seconds the method waits to acquire a lock.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1423"></a>Return Value</p>
<p>An updatable <code>OracleBlob</code> object.</p>
<p class="subhead2"><a id="ODPNT1424"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1425"></a>Remarks</p>
<p>When the <code>OracleCommand</code>&#39;s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleBlobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>BLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleBlob</code> obtained from <code>GetOracleBlob()</code> can have a different value than the <code>OracleBlob</code> obtained from <code>GetOracleBlobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p>The returned <code>OracleBlob</code> object can be used to safely update the <code>BLOB</code> because the <code>BLOB</code> column has been locked after a call to this method.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR UPDATE</code> statement which locks the row.</p>
<p>Different <code>WAIT</code> clauses are appended to the statement, depending on the <code><span class="codeinlineitalic">wait</span></code> value. If the <code><span class="codeinlineitalic">wait</span></code> value is:</p>
<ul>
<li>
<p><code>0</code></p>
<p>&#34;<code>NOWAIT</code>&#34; is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement. The statement executes immediately whether the lock is acquired or not. If the lock is not acquired, an exception is thrown.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">n</span></code></p>
<p>&#34;<code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>&#34; is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement. The statement executes as soon as the lock is acquired. However, if the lock cannot be acquired by <code><span class="codeinlineitalic">n</span></code> seconds, this method call throws an exception.</p>
<p>The <code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>&#34; feature is only available for Oracle9<span class="italic">i</span> or later. For any version lower than Oracle9<span class="italic">i</span>, <code><span class="codeinlineitalic">n</span></code> is implicitly treated as <code>-1</code> and nothing is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement.</p>
</li>
<li>
<p><code>-1</code></p>
<p>Nothing is appended at the end of the <code>SELECT..FOR</code> <code>UPDATE</code>. The statement execution waits indefinitely until a lock can be acquired.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1426"></a>Example</p>
<p>The <code>GetOracleBlobForUpdate</code> methods are comparable. See <a href="#i1005436">&#34;Example&#34;</a> for a code example demonstrating usage.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1427" class="refsect3"><a id="i1005577"></a>
<h3 class="refsect3">GetOracleClob</h3>
<p>This method returns an OracleClob object of the specified CLOB column.</p>
<p class="subhead2"><a id="ODPNT1428"></a>Declaration</p>
<pre>// C#
public OracleClob GetOracleClob(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1429"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1430"></a>Return Value</p>
<p>The <code>OracleClob</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1431"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1432"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1433" class="refsect3"><a id="i1005619"></a>
<h3 class="refsect3">GetOracleClobForUpdate</h3>
<p><code>GetOracleClobForUpdate</code> returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column.</p>
<p class="subhead2"><a id="ODPNT1434"></a>Overload List:</p>
<ul>
<li>
<p><a href="#i1005634">GetOracleClobForUpdate(int)</a></p>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column.</p>
</li>
<li>
<p><a href="#i1005726">GetOracleClobForUpdate(int, int)</a></p>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column using a <code>WAIT</code> clause.</p>
</li>
</ul>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1435" class="refsect3"><a id="i1005634"></a>
<h3 class="refsect3">GetOracleClobForUpdate(int)</h3>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column.</p>
<p class="subhead2"><a id="ODPNT1436"></a>Declaration</p>
<pre>// C#
public OracleClob GetOracleClobForUpdate(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1437"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1438"></a>Return Value</p>
<p>An updatable <code>OracleClob</code>.</p>
<p class="subhead2"><a id="ODPNT1439"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1440"></a>Remarks</p>
<p>When the <code>OracleCommand</code>&#39;s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleClobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>CLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleClob</code> obtained from <code>GetOracleClob()</code> can have a different value than the <code>OracleClob</code> obtained from <code>GetOracleClobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p>The returned <code>OracleClob</code> object can be used to safely update the <code>CLOB</code> because the <code>CLOB</code> column is locked after a call to this method.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR</code> <code>UPDATE</code> statement without a <code>WAIT</code> clause. Therefore, the statement can wait indefinitely until a lock is acquired for that row.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p class="subhead2"><a id="i1005655"></a><a id="ODPNT1441"></a>Example</p>
<p>The following example gets the <code>OracleClob</code> object for update from the reader, updates the <code>OracleClob</code> object, and then commits the transaction.</p>
<pre>/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,&#39;KING&#39;,&#39;SOFTWARE ENGR&#39;, &#39;5657&#39;);
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,&#39;SCOTT&#39;,&#39;MANAGER&#39;, &#39;5960&#39;);
commit;
 
*/
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
using Oracle.DataAccess.Types;
 
class GetOracleClobForUpdateSample
{
  static void Main()
  {
    string constr = &#34;User Id=scott;Password=tiger;Data Source=oracle&#34;;
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    // Get the job description for empno = 1
    string cmdStr = &#34;SELECT JOBDESCRIPTION, EMPNO FROM EMPINFO where EMPNO = 1&#34;;
    OracleCommand cmd = new OracleCommand(cmdStr, con);
 
    // Since we are going to update the OracleClob object, we will
    //  have to create a transaction
    OracleTransaction txn = con.BeginTransaction();
 
    // Get the reader
    OracleDataReader reader = cmd.ExecuteReader();
 
    // Declare the variables to retrieve the data in EmpInfo
    OracleClob jobDescClob;
 
    // Read the first row
    reader.Read();
 
    if (!reader.IsDBNull(0))
    {
      jobDescClob = reader.GetOracleClobForUpdate(0);
 
      // Close the reader
      reader.Close();
 
      // Update the job description Clob object
      char[] jobDesc = &#34;-SALES&#34;.ToCharArray();
      jobDescClob.Append(jobDesc, 0, jobDesc.Length);
 
      // Now commit the transaction
      txn.Commit();
      Console.WriteLine(&#34;Clob Column successfully updated&#34;);
    }
    else
      reader.Close();
 
    // Close the connection
    con.Close();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1442" class="refsect3"><a id="i1005726"></a>
<h3 class="refsect3">GetOracleClobForUpdate(int, int)</h3>
<p>This method returns an updatable <code>OracleClob</code> object of the specified <code>CLOB</code> column using a <code>WAIT</code> clause.</p>
<p class="subhead2"><a id="ODPNT1443"></a>Declaration</p>
<pre>// C#
public OracleClob GetOracleClobForUpdate(int <span class="italic">index, </span>int<span class="italic"> wait</span>);
</pre>
<p class="subhead2"><a id="ODPNT1444"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">wait</span></code></p>
<p>The number of seconds the method waits to acquire a lock.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1445"></a>Return Value</p>
<p>An updatable <code>OracleClob</code>.</p>
<p class="subhead2"><a id="ODPNT1446"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1447"></a>Remarks</p>
<p>When the <code>OracleCommand</code>&#39;s <code>ExecuteReader()</code> method is invoked, all the data fetched by the <code>OracleDataReader</code> is from a particular snapshot. Therefore, calling an accessor method on the same column always returns the same value. However, the <code>GetOracleClobForUpdate()</code> method incurs a database round-trip to obtain a reference to the current <code>CLOB</code> data while also locking the row using the <code>FOR</code> <code>UPDATE</code> clause. This means that the <code>OracleClob</code> obtained from <code>GetOracleClob()</code> can have a different value than the <code>OracleClob</code> obtained from <code>GetOracleClobForUpdate()</code> since it is not obtained from the original snapshot.</p>
<p>Invoking this method internally executes a <code>SELECT..FOR UPDATE</code> statement which locks the row.</p>
<p>The returned <code>OracleClob</code> object can be used to safely update the <code>CLOB</code> because the <code>CLOB</code> column is locked after a call to this method.</p>
<p>Different <code>WAIT</code> clauses are appended to the statement, depending on the <code><span class="codeinlineitalic">wait</span></code> value. If the <code><span class="codeinlineitalic">wait</span></code> value is:</p>
<ul>
<li>
<p><code>0</code></p>
<p>&#34;<code>NOWAIT</code>&#34; is appended at the end of a <code>SELECT..FOR UPDATE</code> statement. The statement executes immediately whether the lock is acquired or not. If the lock is not acquired, an exception is thrown.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">n</span></code></p>
<p>&#34;<code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>&#34; is appended at the end of a <code>SELECT..FOR UPDATE</code> statement. The statement executes as soon as the lock is acquired. However, if the lock cannot be acquired by <code><span class="codeinlineitalic">n</span></code> seconds, this method call throws an exception.</p>
<p>The <code>WAIT</code> <code><span class="codeinlineitalic">n</span></code>&#34; feature is only available for Oracle9<span class="italic">i</span> or later. For any version lower than Oracle9<span class="italic">i</span>, <code><span class="codeinlineitalic">n</span></code> is implicitly treated as <code>-1</code> and nothing is appended at the end of a <code>SELECT..FOR</code> <code>UPDATE</code> statement.</p>
</li>
<li>
<p><code>-1</code></p>
<p>Nothing is appended at the end of the <code>SELECT..FOR UPDATE</code>. The statement execution waits indefinitely until a lock can be acquired.</p>
</li>
</ul>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<p class="subhead2"><a id="ODPNT1448"></a>Example</p>
<p>The GetOracleClobForUpdate methods are comparable. See <a href="#i1005655">&#34;Example&#34;</a> for a code example demonstrating usage.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1449" class="refsect3"><a id="i1005795"></a>
<h3 class="refsect3">GetOracleDate</h3>
<p>This method returns an OracleDate structure of the specified DATE column.</p>
<p class="subhead2"><a id="ODPNT1450"></a>Declaration</p>
<pre>// C#
public OracleDate GetOracleDate(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1451"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1452"></a>Return Value</p>
<p>The <code>OracleDate</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1453"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1454"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1455" class="refsect3"><a id="i1005837"></a>
<h3 class="refsect3">GetOracleDecimal</h3>
<p>This method returns an <code>OracleDecimal</code> structure of the specified <code>NUMBER</code> column.</p>
<p class="subhead2"><a id="ODPNT1456"></a>Declaration</p>
<pre>// C#
public OracleDecimal GetOracleDecimal(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1457"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1458"></a>Return Value</p>
<p>The <code>OracleDecimal</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1459"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1460"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1461" class="refsect3"><a id="i1005872"></a>
<h3 class="refsect3">GetOracleIntervalDS</h3>
<p>This method returns an <code>OracleIntervalDS</code> structure of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column.</p>
<p class="subhead2"><a id="ODPNT1462"></a>Declaration</p>
<pre>// C#
public OracleIntervalDS GetOracleIntervalDS(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1463"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1464"></a>Return Value</p>
<p>The <code>OracleIntervalDS</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1465"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1466"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1467" class="refsect3"><a id="i1005907"></a>
<h3 class="refsect3">GetOracleIntervalYM</h3>
<p>This method returns an <code>OracleIntervalYM</code> structure of the specified <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code> column.</p>
<p class="subhead2"><a id="ODPNT1468"></a>Declaration</p>
<pre>// C#
public OracleIntervalYM GetOracleIntervalYM(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1469"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1470"></a>Return Value</p>
<p>The <code>OracleIntervalYM</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1471"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1472"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1473" class="refsect3"><a id="BABFEHBI"></a>
<h3 class="refsect3">GetOracleRef</h3>
<p>This method returns an <code>OracleRef</code> object of the specified <code>REF</code> column.</p>
<p class="subhead2"><a id="ODPNT1474"></a>Declaration</p>
<pre>// C#
public OracleRef GetOracleRef(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1475"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1476"></a>Return Value</p>
<p>The <code>OracleRef</code> object of the specified column.</p>
<p class="subhead2"><a id="ODPNT1477"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, the <code>Read</code> method has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1478" class="refsect3"><a id="i1005942"></a>
<h3 class="refsect3">GetOracleString</h3>
<p>This method returns an <code>OracleString</code> structure of the specified column.</p>
<p class="subhead2"><a id="ODPNT1479"></a>Declaration</p>
<pre>// C#
public OracleString GetOracleString(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1480"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1481"></a>Return Value</p>
<p>The <code>OracleString</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1482"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1483"></a>Remarks</p>
<p>If the column is an Oracle <code>REF</code> column, the string returned is a hexadecimal value that represents the <code>REF</code> in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1484" class="refsect3"><a id="i1005989"></a>
<h3 class="refsect3">GetOracleTimeStamp</h3>
<p>This method returns an <code>OracleTimeStamp</code> structure of the Oracle <code>TimeStamp</code> column.</p>
<p class="subhead2"><a id="ODPNT1485"></a>Declaration</p>
<pre>// C#
public OracleTimeStamp GetOracleTimeStamp(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1486"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1487"></a>Return Value</p>
<p>The <code>OracleTimeStamp</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1488"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1489"></a>Remarks</p>
<p><code>GetOracleTimeStamp</code> is used with the Oracle Type <code>TimeStamp</code>.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1490" class="refsect3"><a id="i1006025"></a>
<h3 class="refsect3">GetOracleTimeStampLTZ</h3>
<p>This method returns an <code>OracleTimeStampLTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>LOCAL</code> <code>TIME</code> <code>ZONE</code> column.</p>
<p class="subhead2"><a id="ODPNT1491"></a>Declaration</p>
<pre>// C#
public OracleTimeStampLTZ GetOracleTimeStampLTZ(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1492"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1493"></a>Return Value</p>
<p>The <code>OracleTimeStampLTZ</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1494"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1495"></a>Remarks</p>
<p><code>GetOracleTimeStampLTZ</code> is used with the Oracle Type <code>TimeStamp</code> with Local Time Zone columns.</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1496" class="refsect3"><a id="i1006061"></a>
<h3 class="refsect3">GetOracleTimeStampTZ</h3>
<p>This method returns an <code>OracleTimeStampTZ</code> structure of the specified Oracle <code>TimeStamp</code> <code>WITH</code> <code>TIME</code> <code>ZONE</code> column.</p>
<p class="subhead2"><a id="ODPNT1497"></a>Declaration</p>
<pre>// C#
public OracleTimeStampTZ GetOracleTimeStampTZ(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1498"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1499"></a>Return Value</p>
<p>The <code>OracleTimeStampTZ</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1500"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1501"></a>Remarks</p>
<p>Used with the Oracle Type <code>TimeStamp</code> with Local Time Zone columns</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1502" class="refsect3"><a id="i1021203"></a>
<h3 class="refsect3">GetOracleXmlType</h3>
<p>This method returns an <code>OracleXmlType</code> object of the specified <code>XMLType</code> column.</p>
<p class="subhead2"><a id="ODPNT1503"></a>Declaration</p>
<pre>// C#
public OracleXmlType GetOracleXmlType(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1504"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1505"></a>Return Value</p>
<p>The <code>OracleXmlType</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1506"></a>Exceptions</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1507"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1509" class="refsect3"><a id="i1006136"></a>
<h3 class="refsect3">GetOracleValue</h3>
<p>This method returns the specified column value as an ODP.NET type.</p>
<p class="subhead2"><a id="ODPNT1510"></a>Declaration</p>
<pre>// C#
public object GetOracleValue(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1511"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1512"></a>Return Value</p>
<p>The value of the column as an ODP.NET type.</p>
<p class="subhead2"><a id="ODPNT1513"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p class="subhead2"><a id="ODPNT1514"></a>Remarks</p>
<p>If the column is an Oracle object or Oracle collection column and a custom type mapping exists, then a custom type is returned.</p>
<p>If the column is an Oracle <code>REF</code> column, then an <code>OracleRef</code> is returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1515" class="refsect3"><a id="i1006175"></a>
<h3 class="refsect3">GetOracleValues</h3>
<p>This method gets all the column values as ODP.NET types.</p>
<p class="subhead2"><a id="ODPNT1516"></a>Declaration</p>
<pre>// C#
public int GetOracleValues(object[] <span class="italic">values</span>);
</pre>
<p class="subhead2"><a id="ODPNT1517"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">values</span></code></p>
<p>An array of objects to hold the ODP.NET types as the column values.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1518"></a>Return Value</p>
<p>The number of ODP.NET types in the <code><span class="codeinlineitalic">values</span></code> array.</p>
<p class="subhead2"><a id="ODPNT1519"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p class="subhead2"><a id="ODPNT1520"></a>Remarks</p>
<p>This method provides a way to retrieve all column values rather than retrieving each column value individually.</p>
<p>The number of column values retrieved is the minimum of the length of the <code><span class="codeinlineitalic">values</span></code> array and the number of columns in the result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
<li>
<p><a href="featLOBsupp.htm#i1008076">&#34;LOB Support&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1521" class="refsect3"><a id="i1006226"></a>
<h3 class="refsect3">GetOrdinal</h3>
<p>This method returns the <code>0</code>-based ordinal (or index) of the specified column name.</p>
<p class="subhead2"><a id="ODPNT1522"></a>Declaration</p>
<pre>// C#
public override int GetOrdinal(string <span class="italic">name</span>);
</pre>
<p class="subhead2"><a id="ODPNT1523"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">name</span></code></p>
<p>The specified column name.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1524"></a>Return Value</p>
<p>The index of the column.</p>
<p class="subhead2"><a id="ODPNT1525"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1526"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p class="subhead2"><a id="ODPNT1527"></a>Remarks</p>
<p>A case-sensitive search is made to locate the specified column by its name. If this fails, then a case-insensitive search is made.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1528" class="refsect3"><a id="BABBIDBH"></a><a id="CHDGBEAA"></a>
<h3 class="refsect3">GetProviderSpecificFieldType</h3>
<p>This method returns the provider-specific type of the specified column.</p>
<p class="subhead2"><a id="ODPNT1529"></a>Declaration</p>
<pre>// C#public override Type GetProviderSpecificFieldType(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1530"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>A zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1531"></a>Return Value</p>
<p>The provider-specific type of the specified column. This is a member of the <code>Oracle.DataAccess.Types</code> namespace.</p>
<p class="subhead2"><a id="ODPNT1532"></a>Exceptions</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidOperationException</code> - The reader is closed, or the specified column is a UDT but no registered custom type mapping exists for the UDT.</p>
<p class="subhead2"><a id="ODPNT1533"></a>Remarks</p>
<p><code>GetProviderSpecficFieldType</code> returns a type that corresponds to the value the application obtains after invoking the <code>GetProviderSpecificValue</code> accessor on the <code>OracleDataReader</code>. For example, if the column is a string, this method returns a .NET Type object for an <code>OracleString</code>.</p>
<p>If the attribute is a UDT, this method may return any of the following:</p>
<ul>
<li>
<p>A .NET Type of the custom type, if the column is an Oracle object or Oracle collection column and a custom type mapping exists.</p>
</li>
<li>
<p>A .NET Type of <code>OracleRef</code> if the column is an Oracle <code>REF</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1534" class="refsect3"><a id="BABCEBJA"></a><a id="CHDIIBDH"></a>
<h3 class="refsect3">GetProviderSpecificValue</h3>
<p>This method returns an object that represents the underlying provider-specific value of the specified ordinal.</p>
<p class="subhead2"><a id="ODPNT1535"></a>Declaration</p>
<pre>// C#
public override object GetProviderSpecificValue (int <span class="italic">index</span>); 
</pre>
<p class="subhead2"><a id="ODPNT1536"></a>Parameters</p>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>A zero-based column index.</p>
<p class="subhead2"><a id="ODPNT1537"></a>Return Value</p>
<p>An <code>Object</code> that is a representation of the underlying provider-specific field type.</p>
<p class="subhead2"><a id="ODPNT1538"></a>Exceptions</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called or all rows have been read.</p>
<p class="subhead2"><a id="ODPNT1539"></a>Remarks</p>
<p>If the column is an Oracle object or collection column, and a custom type mapping exists, a custom type is returned.</p>
<p>If the column is an Oracle <code>REF</code> column, an <code>OracleRef</code> is returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1540" class="refsect3"><a id="BABIBJHF"></a><a id="CHDEECDJ"></a>
<h3 class="refsect3">GetProviderSpecificValues</h3>
<p>This method returns an array of objects that represent the underlying provider-specific values.</p>
<p class="subhead2"><a id="ODPNT1541"></a>Declaration</p>
<pre>// C#
public override int GetProviderSpecificValues(object [ ] <span class="italic">values</span>);
</pre>
<p class="subhead2"><a id="ODPNT1542"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">values</span></code></p>
<p>An array of objects.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1543"></a>Return Value</p>
<p>The number of <code>Object</code> instances in the array.</p>
<p class="subhead2"><a id="ODPNT1544"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1545" class="refsect3"><a id="i1006262"></a>
<h3 class="refsect3">GetSchemaTable</h3>
<p>This method returns a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code>.</p>
<p class="subhead2"><a id="ODPNT1546"></a>Declaration</p>
<pre>// C#
public override DataTable GetSchemaTable();
</pre>
<p class="subhead2"><a id="ODPNT1547"></a>Return Value</p>
<p>A <code>DataTable</code> that contains the metadata of the result set.</p>
<p class="subhead2"><a id="ODPNT1548"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1549"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed or the reader is closed.</p>
<p class="subhead2"><a id="ODPNT1550"></a>Remarks</p>
<p>The <code>OracleDataReader.GetSchemaTable</code> method returns the <code>SchemaTable</code>.</p>
<p><a id="i1006277"></a><span class="bold">OracleDataReader SchemaTable<a id="sthref868"></a><a id="sthref869"></a></span></p>
<p>The <code>OracleDataReader</code> <code>SchemaTable</code> is a <code>DataTable</code> that describes the column metadata of the <code>OracleDataReader</code>.</p>
<p>The value of <code>ColumnSize</code> can show value up to 32K depending on the definition of <code>VARCHAR2</code>, <code>NVARCHAR2</code>, or <code>RAW</code> type columns in the table definition.</p>
<p>The columns of the <code>SchemaTable</code> are in the order shown.</p>
<div id="ODPNT1551" class="tblformalwide">
<p class="titleintable"><a id="sthref870"></a><a id="sthref871"></a>Table 6-59 OracleDataReader SchemaTable</p>
<table class="cellalignment4229" title="OracleDataReader SchemaTable " summary="Rows are data table columns. first column is name, second column is name type, and third column is description" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t364">Name</th>
<th class="cellalignment4230" id="r1c2-t364">Name Type</th>
<th class="cellalignment4230" id="r1c3-t364">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t364" headers="r1c1-t364">
<p><code>ColumnName</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t364 r1c2-t364">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t364 r1c3-t364">
<p>The name of the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t364" headers="r1c1-t364">
<p><code>ColumnOrdinal</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t364 r1c2-t364">
<p><code>System.Int32</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t364 r1c3-t364">
<p>The <code>0</code>-based ordinal of the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t364" headers="r1c1-t364">
<p><code>ColumnSize</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t364 r1c2-t364">
<p><code>System.Int64</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t364 r1c3-t364">
<p>The maximum possible length of a value in the column. <code>ColumnSize</code> value is determined as follows<code>:</code></p>
<ul>
<li>
<p><code>CHAR</code> and <code>VARCHAR2</code> types:</p>
<p>in bytes - if <code>IsByteSemantic</code> boolean value is <code>true</code></p>
<p>in characters - if <code>IsByteSemantic</code> boolean value is <code>false</code></p>
</li>
<li>
<p>All other types:</p>
<p>in bytes</p>
</li>
</ul>
<p>See <a href="#i1006403">&#34;<code>IsByteSemantic</code>&#34;</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t364" headers="r1c1-t364">
<p><code>NumericPrecision</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t364 r1c2-t364">
<p><code>System.Int16</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t364 r1c3-t364">
<p>The maximum precision of the column, if the column is a numeric data type.</p>
<p>This column has valid values for Oracle <code>NUMBER</code>, Oracle <code>INTERVAL</code> <code>YEAR</code> <code>TO</code> <code>MONTH</code>, and Oracle <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> columns. For all other columns, the value is <code>null</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t364" headers="r1c1-t364">
<p><code>NumericScale</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t364 r1c2-t364">
<p><code>System.Int16</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t364 r1c3-t364">
<p>The scale of the column.</p>
<p>This column has valid values for Oracle <code>NUMBER</code>, Oracle <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code>, and the Oracle <code>TIMESTAMP</code> columns. For all other columns, the value is <code>null</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t364" headers="r1c1-t364">
<p><code>IsUnique</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t364 r1c3-t364">
<p>Indicates whether or not the column is unique.</p>
<p><code>true</code> if no two rows in the base table can have the same value in this column, where the base table is the table returned in <code>BaseTableName</code>.</p>
<p><code>IsUnique</code> is guaranteed to be <code>true</code> if one of the following applies in descending order of priority:</p>
<ul>
<li>
<p>the column constitutes a base table primary key by itself and a <code>NOT NULL</code> constraint has been defined on the column</p>
</li>
<li>
<p>there is a unique constraint or a unique index that applies only to this column and a <code>NOT</code> <code>NULL</code> constraint has been defined on the column</p>
</li>
<li>
<p>the column is an explicitly selected <code>ROWID</code></p>
</li>
</ul>
<p><code>IsUnique</code> is false if the column can contain duplicate values in the base table.</p>
<p>The default is <code>false</code>.</p>
<p>The value of this property is the same for each occurrence of the base table column in the select list.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t364" headers="r1c1-t364">
<p><code>IsKey</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t364 r1c3-t364">
<p>Indicates whether or not the column is a key column.</p>
<p><code>true</code> if the column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with <code>IsKey</code> set to <code>true</code> must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns.</p>
<p>This set of columns can be generated from one of the following in descending order of priority:</p>
<ul>
<li>
<p>A base table primary key with the following condition: A <code>NOT NULL</code> constraint must be defined on the column or on all of the columns, in the case of a composite primary key.</p>
</li>
<li>
<p>Any of the unique constraints or unique indexes with the following condition: A <code>NOT</code> <code>NULL</code> constraint must be defined on the column or on all of the columns, in the case of a composite unique constraint or composite unique index.</p>
</li>
<li>
<p>A base table composite primary key with the following condition: A <code>NULL</code> constraint must be defined on at least one, but not all, of the columns.</p>
</li>
<li>
<p>Any of the composite unique constraints or composite unique indexes with the following condition: A <code>NULL</code> constraint must be defined on at least one, but not all, of the columns.</p>
</li>
</ul>
<p>An explicitly selected <code>ROWID</code>. <code>false</code> if the column is not required to uniquely identify the row. The value of this property is the same for each occurrence of the base table column in the select list.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t364" headers="r1c1-t364">
<p><code>IsRowID</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t364 r1c3-t364">
<p><code>true</code> if the column is a <code>ROWID</code>, otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t364" headers="r1c1-t364">
<p><code>BaseColumnName</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t364 r1c2-t364">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t364 r1c3-t364">
<p>The name of the column in the database if an alias is used for the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t364" headers="r1c1-t364">
<p><code>BaseSchemaName</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t364 r1c2-t364">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t364 r1c3-t364">
<p>The name of the schema in the database that contains the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t364" headers="r1c1-t364">
<p><code>BaseTableName</code></p>
</td>
<td class="cellalignment4226" headers="r12c1-t364 r1c2-t364">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r12c1-t364 r1c3-t364">
<p>The name of the table or view in the database that contains the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t364" headers="r1c1-t364">
<p><code>DataType</code></p>
</td>
<td class="cellalignment4226" headers="r13c1-t364 r1c2-t364">
<p><code>System.RuntimeType</code></p>
</td>
<td class="cellalignment4226" headers="r13c1-t364 r1c3-t364">
<p>Maps to the common language runtime type.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t364" headers="r1c1-t364">
<p><code>ProviderType</code></p>
</td>
<td class="cellalignment4226" headers="r14c1-t364 r1c2-t364">
<p><code>Oracle.DataAccess. Client.OracleDbType</code></p>
</td>
<td class="cellalignment4226" headers="r14c1-t364 r1c3-t364">
<p>The database column type (<code>OracleDbType</code>) of the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r15c1-t364" headers="r1c1-t364">
<p><code>AllowDBNull</code></p>
</td>
<td class="cellalignment4226" headers="r15c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r15c1-t364 r1c3-t364">
<p><code>true</code> if <code>null</code> values are allowed, otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r16c1-t364" headers="r1c1-t364">
<p><code>IsAliased</code></p>
</td>
<td class="cellalignment4226" headers="r16c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r16c1-t364 r1c3-t364">
<p><code>true</code> if the column is an alias; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r17c1-t364" headers="r1c1-t364">
<p><a id="i1006403"></a><code>IsByteSemantic</code></p>
</td>
<td class="cellalignment4226" headers="r17c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r17c1-t364 r1c3-t364">
<p><code>IsByteSemantic</code> is:</p>
<ul>
<li>
<p><code>true</code> if the <code>ColumnSize</code> value uses bytes semantics</p>
</li>
<li>
<p><code>false</code> if <code>ColumnSize</code> uses character semantics</p>
</li>
</ul>
<p>This value is always <code>true</code> when connected to a database version earlier than Oracle9<span class="italic">i</span>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r18c1-t364" headers="r1c1-t364">
<p><code>IsExpression</code></p>
</td>
<td class="cellalignment4226" headers="r18c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r18c1-t364 r1c3-t364">
<p><code>true</code> if the column is an expression; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r19c1-t364" headers="r1c1-t364">
<p><code>IsHidden</code></p>
</td>
<td class="cellalignment4226" headers="r19c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r19c1-t364 r1c3-t364">
<p><code>true</code> if the column is hidden; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r20c1-t364" headers="r1c1-t364">
<p><code>IsReadOnly</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t364 r1c3-t364">
<p><code>true</code> if the column is read-only; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r21c1-t364" headers="r1c1-t364">
<p><code>IsLong</code></p>
</td>
<td class="cellalignment4226" headers="r21c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r21c1-t364 r1c3-t364">
<p><code>true</code> if the column is a <code>LONG</code>, <code>LONG</code> <code>RAW</code>, <code>BLOB</code>, <code>CLOB</code>, or <code>BFILE</code>; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r22c1-t364" headers="r1c1-t364">
<p><code>UdtTypeName</code></p>
</td>
<td class="cellalignment4226" headers="r22c1-t364 r1c2-t364">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r22c1-t364 r1c3-t364">
<p>The type name of the UDT.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r23c1-t364" headers="r1c1-t364">
<p><code>IsIdentity</code></p>
</td>
<td class="cellalignment4226" headers="r23c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r23c1-t364 r1c3-t364">
<p><code>true</code> if the column is an identity column; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r24c1-t364" headers="r1c1-t364">
<p><code>IsAutoIncrement</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t364 r1c2-t364">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t364 r1c3-t364">
<p><code>true</code> if the column assigns values to new rows in fixed increments; otherwise <code>false</code>.</p>
<p><span class="italic">Not Available in ODP.NET, Managed Driver</span></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r25c1-t364" headers="r1c1-t364">
<p><code>IdentityType</code></p>
</td>
<td class="cellalignment4226" headers="r25c1-t364 r1c2-t364">
<p><code>OracleIdentityType</code></p>
</td>
<td class="cellalignment4226" headers="r25c1-t364 r1c3-t364">
<p>An <code>OracleIdentityType</code> enumeration value that specifies how the identity column values are generated; otherwise <code>DbNull.Value</code>, if the column is not an identity column.</p>
<p><span class="italic">Not Available in ODP.NET, Managed Driver</span></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p class="subhead2"><a id="ODPNT1552"></a>Example</p>
<p>This example creates and uses the <code>SchemaTable</code> from the reader.</p>
<pre>/* Database Setup, if you have not done so yet.
connect scott/tiger@oracle 
CREATE TABLE empInfo (
empno NUMBER(4) PRIMARY KEY,
empName VARCHAR2(20) NOT NULL,
hiredate DATE,
salary NUMBER(7,2),
jobDescription Clob,
byteCodes BLOB
);
 
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(1,&#39;KING&#39;,&#39;SOFTWARE ENGR&#39;, &#39;5657&#39;);
Insert into empInfo(EMPNO,EMPNAME,JOBDESCRIPTION,byteCodes) values 
(2,&#39;SCOTT&#39;,&#39;MANAGER&#39;, &#39;5960&#39;);
commit;
 
*/
// C#
 
using System;
using System.Data;
using Oracle.DataAccess.Client; 
using Oracle.DataAccess.Types;
 
class GetSchemaTableSample
{
  static void Main()
  {
    string constr = &#34;User Id=scott;Password=tiger;Data Source=oracle&#34;;
    OracleConnection con = new OracleConnection(constr);
    con.Open();
 
    string cmdstr = &#34;SELECT EMPNO,EMPNAME FROM EMPINFO where EMPNO = 1&#34;;
    OracleCommand cmd = new OracleCommand(cmdstr, con);
 
    //get the reader
    OracleDataReader reader = cmd.ExecuteReader();
 
    //get the schema table
    DataTable schemaTable = reader.GetSchemaTable();
 
    //retrieve the first column info.
    DataRow row = schemaTable.Rows[0];
 
    //print out the column info
    Console.WriteLine(&#34;Column name: &#34; + row[&#34;COLUMNNAME&#34;]);
    Console.WriteLine(&#34;Precision: &#34; + row[&#34;NUMERICPRECISION&#34;]);
    Console.WriteLine(&#34;Scale: &#34; + row[&#34;NUMERICSCALE&#34;]);
    reader.Close();
 
    // Close the connection
    con.Close();
  }
}
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1553" class="refsect3"><a id="i1006481"></a>
<h3 class="refsect3">GetString</h3>
<p>This method returns the <code>string</code> value of the specified column.</p>
<p class="subhead2"><a id="ODPNT1554"></a>Declaration</p>
<pre>// C#
public override string GetString(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1555"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1556"></a>Return Value</p>
<p>The <code>string</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1557"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1558"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1559"></a>Remarks</p>
<p>Call the <code>IsDBNull</code> method to check for null values before calling this method.</p>
<p>If the column is an Oracle <code>REF</code> column, the string returned is a hexadecimal string that represents the <code>REF</code> in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1560" class="refsect3"><a id="i1006518"></a>
<h3 class="refsect3">GetTimeSpan</h3>
<p>This method returns the <code>TimeSpan</code> value of the specified <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> column.</p>
<p class="subhead2"><a id="ODPNT1561"></a>Declaration</p>
<pre>// C#
public TimeSpan GetTimeSpan(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1562"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1563"></a>Return Value</p>
<p>The <code>TimeSpan</code> value of the column.</p>
<p class="subhead2"><a id="ODPNT1564"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1565"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1566"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1567" class="refsect3"><a id="CHDGCABB"></a><a id="i1006555"></a>
<h3 class="refsect3">GetValue</h3>
<p>This method returns the column value as a .NET type.</p>
<p class="subhead2"><a id="ODPNT1568"></a>Declaration</p>
<pre>// C#
public override object GetValue(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1569"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1570"></a>Return Value</p>
<p>The value of the column as a .NET type.</p>
<p class="subhead2"><a id="ODPNT1571"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1572"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, all rows have been read, or no valid custom type mapping has been specified for the Oracle Object or Oracle Collection column.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p class="subhead2"><a id="ODPNT1573"></a>Remarks</p>
<p>If the column is an Oracle Object or an Oracle Collection column, the .NET custom type corresponding to the custom type mapping is returned.</p>
<p>If the column is an Oracle <code>REF</code> column, a hexidecimal value is returned as a .NET string that represents the <code>REF</code> in the database.</p>
<p>If the UDT is <code>NULL</code>, <code>DBNull.Value</code> is returned</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1574" class="refsect3"><a id="i1006589"></a>
<h3 class="refsect3">GetValues</h3>
<p>This method gets all the column values as .NET types.</p>
<p class="subhead2"><a id="ODPNT1575"></a>Declaration</p>
<pre>// C#
public override int GetValues(object[ ] <span class="italic">values</span>);
</pre>
<p class="subhead2"><a id="ODPNT1576"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">values</span></code></p>
<p>An array of objects to hold the .NET types as the column values.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1577"></a>Return Value</p>
<p>The number of objects in the <code><span class="codeinlineitalic">values</span></code> array.</p>
<p class="subhead2"><a id="ODPNT1578"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1579"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed, the reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p class="subhead2"><a id="ODPNT1580"></a>Remarks</p>
<p>This method provides a way to retrieve all column values rather than retrieving each column value individually.</p>
<p>The number of column values retrieved is the minimum of the length of the values array and the number of columns in the result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1581" class="refsect3"><a id="i1006627"></a>
<h3 class="refsect3">GetXmlReader</h3>
<p>This method returns the contents of an <code>XMLType</code> column as an instance of an .NET <code>XmlTextReader</code> object.</p>
<p class="subhead2"><a id="ODPNT1582"></a>Declaration</p>
<pre>// C#
public XmlReader GetXmlReader(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1583"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1584"></a>Return Value</p>
<p>A .NET <code>XmlTextReader</code>.</p>
<p class="subhead2"><a id="ODPNT1585"></a>Exceptions</p>
<p><code>InvalidCastException</code> - The accessor method is invalid for this column type or the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1586"></a>Remarks</p>
<p><code>IsDBNull</code> should be called to check for <code>NULL</code> values before calling this method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1587" class="refsect3"><a id="i1006661"></a>
<h3 class="refsect3">IsDBNull</h3>
<p>This method indicates whether or not the column value is <code>NULL</code>.</p>
<p class="subhead2"><a id="ODPNT1588"></a>Declaration</p>
<pre>// C#
public override bool IsDBNull(int <span class="italic">index</span>);
</pre>
<p class="subhead2"><a id="ODPNT1589"></a>Parameters</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">index</span></code></p>
<p>The zero-based column index.</p>
</li>
</ul>
<p class="subhead2"><a id="ODPNT1590"></a>Return Value</p>
<p>Returns <code>true</code> if the column is a <code>NULL</code> value; otherwise, returns <code>false</code>.</p>
<p class="subhead2"><a id="ODPNT1591"></a>Implements</p>
<p><code>IDataRecord</code></p>
<p class="subhead2"><a id="ODPNT1592"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The reader is closed, <code>Read()</code> has not been called, or all rows have been read.</p>
<p><code>IndexOutOfRangeException</code> - The column index is invalid.</p>
<p class="subhead2"><a id="ODPNT1593"></a>Remarks</p>
<p>This method should be called to check for <code>NULL</code> values before calling the other accessor methods.</p>
<p class="subhead2"><a id="ODPNT1594"></a>Example</p>
<p>The code example for the <code>OracleDataReader</code> class includes the <code>IsDBNull</code> method. See <a href="#i1003289">&#34;Example&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1595" class="refsect3"><a id="i1006705"></a>
<h3 class="refsect3">NextResult</h3>
<p>This method advances the data reader to the next result set.</p>
<p class="subhead2"><a id="ODPNT1596"></a>Declaration</p>
<pre>// C#
public override bool NextResult();
</pre>
<p class="subhead2"><a id="ODPNT1597"></a>Return Value</p>
<p>Returns <code>true</code> if another result set exists; otherwise, returns <code>false</code>.</p>
<p class="subhead2"><a id="ODPNT1598"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1599"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed or the reader is closed.</p>
<p class="subhead2"><a id="ODPNT1600"></a>Remarks</p>
<p><code>NextResult</code> is used when reading results from stored procedure execution that return more than one result set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" -->
<div id="ODPNT1601" class="refsect3"><a id="i1006737"></a>
<h3 class="refsect3">Read</h3>
<p>This method reads the next row in the result set.</p>
<p class="subhead2"><a id="ODPNT1602"></a>Declaration</p>
<pre>// C#
public override  bool Read();
</pre>
<p class="subhead2"><a id="ODPNT1603"></a>Return Value</p>
<p>Returns <code>true</code> if another row exists; otherwise, returns <code>false</code>.</p>
<p class="subhead2"><a id="ODPNT1604"></a>Implements</p>
<p><code>IDataReader</code></p>
<p class="subhead2"><a id="ODPNT1605"></a>Exceptions</p>
<p><code>InvalidOperationException</code> - The connection is closed or the reader is closed.</p>
<p class="subhead2"><a id="ODPNT1606"></a>Remarks</p>
<p>The initial position of the data reader is before the first row. Therefore, the <code>Read</code> method must be called to fetch the first row. The row that was just read is considered the <span class="italic">current row</span>. If the <code>OracleDataReader</code> has no more rows to read, it returns <code>false</code>.</p>
<p class="subhead2"><a id="ODPNT1607"></a>Example</p>
<p>The code example for the <code>OracleDataReader</code> class includes the <code>Read</code> method. See <a href="#i1003289">&#34;Example&#34;</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="intro003.htm#BHCJFIAJ">&#34;Oracle.DataAccess.Client and Oracle.ManagedDataAccess.Client Namespaces&#34;</a></p>
</li>
<li>
<p><a href="#i1003252">OracleDataReader Class</a></p>
</li>
<li>
<p><a href="#i1003412">OracleDataReader Members</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4219">
<tr>
<td class="cellalignment4226">
<table class="cellalignment4224">
<tr>
<td class="cellalignment4223"><a href="OracleDatabaseClass.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4223"><a href="OracleDataSourceEnumeratorClass.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4228">
<table class="cellalignment4222">
<tr>
<td class="cellalignment4223"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4223"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4223"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4223"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4223"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4223"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>