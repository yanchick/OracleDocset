<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79205"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Implicit%20REF%20CURSOR%20Binding"></a><title>Implicit REF CURSOR Binding</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-10-14T19:43:26Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Provider for .NET Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17732-11"/>
<meta name="dcterms.isVersionOf" content="ODPNT"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="featRefCursor.htm" title="Previous" type="text/html"/>
<link rel="Next" href="featLOBsupp.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17732-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">31/172</span> <!-- End Header --><a id="CJACCFAE"></a>
<div id="ODPNT320" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Implicit REF CURSOR <a id="sthref459"></a><a id="sthref460"></a>Binding</h1>
<p>ODP.NET 11<span class="italic">g</span> Release 2 (11.2.0.3.0), and higher, enables applications to run stored procedures with <code>REF CURSOR</code> parameters without using explicit binding for these parameters in the .NET code. ODP.NET unmanaged and managed drivers support <code>REF CURSOR</code> implicit binding through configuration done in .NET configuration files.</p>
<p>For a read-only result set, such as a <code>REF CURSOR</code> using <code>OracleDataReader</code>, <code>REF CURSOR</code> schema information is retrieved automatically.</p>
<p>For some scenarios, such as when updateable <code>REF CURSOR</code>s or Entity Framework is used, developers need to define the <code>REF CURSOR</code> schema information so that the application can bind the implicit <code>REF CURSOR</code>. Entity Framework applications use implicit <code>REF CURSOR</code> binding to instantiate complex types from <code>REF CURSOR</code> data. Applications must specify <code>REF CURSOR</code> bind and metadata information in the <code>app.config</code>, <code>web.config,</code> or <code>machine.config</code> .NET configuration file.</p>
<p>The attributes supplied in the .NET configuration file are also used when the application requests for schema information from the <code>OracleDataReader</code> object that represents a <code>REF CURSOR</code>. This means that for <code>REF CURSOR</code>s that are created using a <code>SELECT</code> from a single table, the application can update that table through the use of <code>OracleDataAdapter</code> and <code>OracleCommandBuilder</code>.</p>
<p>When using the Entity Framework, function imports can return an implicitly-bound <code>REF CURSOR</code>. The <code>REF CURSOR</code> can be returned as a collection of complex types or entity types. To return a complex type collection, the .NET configuration file needs to define the <code>REF CURSOR</code> bind and metadata information. To return an entity type collection, only the bind information needs to be defined in the .NET configuration file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
ODP.NET, Managed Driver currently does not support implicit ref cursors, it currently supports only implicit binding.</div>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CJAEBIFA">Specifying REF CURSOR Bind and Metadata Information in the .NET Configuration File</a></p>
</li>
<li>
<p><a href="#CJADEIEH">Sample Configuration File and Application</a></p>
</li>
<li>
<p><a href="#CJAHJDHH">Usage Considerations</a></p>
</li>
</ul>
<a id="CJAEBIFA"></a>
<div id="ODPNT321" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Specifying REF CURSOR Bind and<a id="sthref461"></a> Metadata Information in the .NET Configuration File</h2>
<p>Specify the <code>REF CURSOR</code> information in the <code>oracle.dataacccess.client</code> configuration section of the .NET configuration file. Use an <code>&lt;add&gt;</code> element for each piece of information. The <code>add</code> element uses <code>name</code>-<code>value</code> attributes to specify <code>REF CURSOR</code> information. Use the following format to specify bind information:</p>
<pre>&lt;add name=&#34;<span class="italic">SchemaName</span>.<span class="italic">PackageName</span>.<span class="italic">StoredProcedureName</span>.RefCursor.<span class="italic">RefCursorParameterPositionOrName</span>&#34; 
value=&#34;implicitRefCursor <span class="italic">bindinfo</span>=&#39;mode=InputOutput|Output|ReturnValue&#39;&#34; /&gt;
</pre>
<p>Use the following format to specify metadata information:</p>
<pre>&lt;add name=&#34;<span class="italic">SchemaName</span>.<span class="italic">PackageName</span>.<span class="italic">StoredProcedureName</span>.RefCursorMetaData.<span class="italic">RefCursorParameterPositionorName</span>.Column.<span class="italic">ColumnOrdinal</span>&#34; 
value=&#34;implicitRefCursor metadata=<span class="italic">AttributesList</span>&#34; /&gt;
</pre>
<p>Each <code>REF CURSOR</code> column needs to have an <code>add</code> element defined for it. For example, if you have a <code>REF CURSOR</code> returning five columns, then you need to define five <code>add</code> elements in the config file.</p>
<p>Each <code>add</code> element contains the <code>name</code> and <code>value</code> attributes. The <code>value</code> attribute must begin with the word <code>implicitRefCursor</code> followed by the <code>bindinfo</code> or <code>metadata</code> attribute for specifying bind or metadata information.</p>
<p>The <code>bindinfo</code> information is used by ODP.NET for binding <code>REF CURSOR</code> parameters. The <code>metadata</code> information is used by ODP.NET to associate the schema information with the appropriate <code>REF CURSOR</code>. The metadata comprises of an attributes list that includes parameters together with their values.</p>
<p>The <code><span class="codeinlineitalic">SchemaName</span></code>, <code><span class="codeinlineitalic">PackageName</span></code>, and <code><span class="codeinlineitalic">StoredProcedureName</span></code> are case-sensitive. In order to run a stored procedure with implicit <code>REF CURSOR</code> binding, the <code><span class="codeinlineitalic">SchemaName</span></code><code>.</code><code><span class="codeinlineitalic">PackageName</span></code><code>.</code><code><span class="codeinlineitalic">StoredProcedureName</span></code> portion of the <code>name</code> attribute must exactly match the name specified in the data dictionary for that stored procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the application uses implicit <code>REF CURSOR</code> binding feature outside of Entity Framework, then the .NET configuration file and <code>OracleCommand CommandText</code> do not require the schema name concatenated before the stored procedure name.</div>
<p>If any schema, package, or stored procedure name in the database contains lowercase characters, then it must be enclosed within double quotation marks (<code>&#34;</code>) in the config file to preserve the case. Double quotation marks are used within the <code>name</code> attribute by using <code>&amp;quot;</code> when needed. For example, if the schema name is <code>HrSchema</code>, the package name is <code>HrPackage</code>, and the stored procedure name is <code>HrStoredProcedure</code> in the database, the config file should use the following:</p>
<pre>&lt;add name=&#34;&amp;quot;HrSchema&amp;quot;.&amp;quot;HrPackage&amp;quot;.&amp;quot;HrStoredProcedure&amp;quot;.RefCursorMetaData . . . /&gt;
</pre>
<p>By default, Oracle Database stores these names as uppercase characters. ODP.NET assumes default behavior, and converts all names to uppercase characters unless you explicitly preserve the case by using double quotation marks.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code><span class="codeinlineitalic">SchemaName</span></code>, <code><span class="codeinlineitalic">PackageName</span></code>, <code><span class="codeinlineitalic">StoredProcedureName</span></code>, or <code><span class="codeinlineitalic">ParameterName</span></code> cannot contain a period (&#34;<code>.</code>&#34;) in the name. For example, <code>P.0</code> is an unacceptable parameter name.</div>
<p>Depending on whether the application uses bind-by-name or bind-by-position, the <code><span class="codeinlineitalic">RefCursorParameterPositionOrName</span></code> portion of the name attribute must be set with the correct parameter position (for bind by position) or parameter name (for bind by name). For functions, the position is 0-based, where the position 0 represents the return value. For procedures, the position is 1-based, as there are no return values for procedures. For example, if a stored procedure accepts five parameters, returning only two <code>REF CURSOR</code>s in the third and fifth parameter positions, then the .NET config <code>REF CURSOR</code> bind information should contain one entry for position 3 and one entry for position 5.</p>
<p>If bind-by-name is used, the attribute name is used to identify the <code>REF CURSOR</code> parameter. The <code>name</code> should use the same name and case as the one specified in the data dictionary for that stored procedure.</p>
<p>For <code>bindinfo</code>, the <code>mode</code> specifies the parameter direction of the parameter. The mode must be either <code>InputOutput</code>, <code>Output</code>, or <code>ReturnValue</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Implicit <code>REF CURSOR</code> binding for an input <code>REF CURSOR</code> parameter is not supported.
<p>An exception is thrown at runtime if the .NET configuration file contains an entry for a <code>REF CURSOR</code> whose <code>mode</code> is set to <code>Input</code>.</p>
</div>
<p>For <code>metadata</code>, The <code><span class="codeinlineitalic">AttributesList</span></code> contains the list of parameters. <a href="#CJADBFGH">Table 3-16</a> describes the parameters that can be included in the <code><span class="codeinlineitalic">AttributesList</span></code>.</p>
<p><a href="#CJABGEHG">Example 3-1</a> shows a sample <code>add</code> element that uses <code>bindinfo</code>. Here, the schema name is <code>SCOTT</code> and the stored procedure name is <code>TESTPROC</code>. The parameter name is <code>parameter1</code>. The mode is <code>output</code>.</p>
<div id="ODPNT322" class="example">
<p class="titleinexample"><a id="CJABGEHG"></a>Example 3-1 Using the add Element with bind<a id="sthref462"></a>info</p>
<pre>&lt;add name=&#34;SCOTT.TESTPROC.RefCursor.parameter1&#34; value=&#34;implicitRefCursor
 bindinfo=&#39;mode=Output&#39;&#34; /&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#CJAJDFDF">Example 3-2</a> shows a sample <code>add</code> element that uses <code>metadata</code>.</p>
<div id="ODPNT323" class="example">
<p class="titleinexample"><a id="CJAJDFDF"></a>Example 3-2 Using the add Element with metadata</p>
<pre>&lt;add name=&#34;scott.TestProc.RefCursorMetaData.parameter1.Column.0&#34; 
value=&#34;implicitRefCursor metadata=&#39;ColumnName=EMPNO;BaseColumnName=EMPNO;
BaseSchemaName=SCOTT;BaseTableName=EMP;NativeDataType=number;
ProviderType=Int32;DataType=System.Int32;ColumnSize=4;AllowDBNull=false;
IsKey=true&#39;&#34; /&gt;
</pre></div>
<!-- class="example" -->
<div id="ODPNT324" class="tblformal">
<p class="titleintable"><a id="sthref463"></a><a id="CJADBFGH"></a>Table 3-16 Allowed Parameters in Attributes List</p>
<table class="cellalignment4231" title="Allowed Parameters in Attributes List" summary="Required parameters in attribute list" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t76">Name</th>
<th class="cellalignment4230" id="r1c2-t76">Type</th>
<th class="cellalignment4230" id="r1c3-t76">Required/Optional for Entity Framework</th>
<th class="cellalignment4230" id="r1c4-t76">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t76" headers="r1c1-t76">
<p><code>ColumnName</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r2c1-t76 r1c3-t76">
<p>Required</p>
</td>
<td class="cellalignment4226" headers="r2c1-t76 r1c4-t76">
<p>The name of the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t76" headers="r1c1-t76">
<p><code>ProviderType</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t76 r1c2-t76">
<p><code>Oracle.DataAccess.Client.OracleDbType</code></p>
</td>
<td class="cellalignment4226" headers="r3c1-t76 r1c3-t76">
<p>Required</p>
</td>
<td class="cellalignment4226" headers="r3c1-t76 r1c4-t76">
<p>The database column type (<code>OracleDbType</code>) of the column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t76" headers="r1c1-t76">
<p><code>NativeDataType</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r4c1-t76 r1c3-t76">
<p>Required</p>
</td>
<td class="cellalignment4226" headers="r4c1-t76 r1c4-t76">
<p>The Oracle type. For example, <code>NCLOB</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t76" headers="r1c1-t76">
<p><code>BaseColumnName</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r5c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r5c1-t76 r1c4-t76">
<p>The name of the column in the database if an alias is used for the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t76" headers="r1c1-t76">
<p><code>BaseSchemaName</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r6c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r6c1-t76 r1c4-t76">
<p>The name of the schema in the database that contains the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t76" headers="r1c1-t76">
<p><code>BaseTableName</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r7c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r7c1-t76 r1c4-t76">
<p>The name of the table or view in the database that contains the column.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t76" headers="r1c1-t76">
<p><code>ColumnSize</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t76 r1c2-t76">
<p><code>System.Int64</code></p>
</td>
<td class="cellalignment4226" headers="r8c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r8c1-t76 r1c4-t76">
<p>The maximum possible length of a value in the column</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r9c1-t76" headers="r1c1-t76">
<p><code>NumericPrecision</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t76 r1c2-t76">
<p><code>System.Int16</code></p>
</td>
<td class="cellalignment4226" headers="r9c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r9c1-t76 r1c4-t76">
<p>The maximum precision of the column, if the column is a numeric data type.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r10c1-t76" headers="r1c1-t76">
<p><code>NumericScale</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t76 r1c2-t76">
<p><code>System.Int16</code></p>
</td>
<td class="cellalignment4226" headers="r10c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r10c1-t76 r1c4-t76">
<p>The maximum scale of the column, if the column is a numeric data type.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r11c1-t76" headers="r1c1-t76">
<p><code>IsUnique</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r11c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r11c1-t76 r1c4-t76">
<p>Indicates whether or not the column is unique.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r12c1-t76" headers="r1c1-t76">
<p><code>IsKey</code></p>
</td>
<td class="cellalignment4226" headers="r12c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r12c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r12c1-t76 r1c4-t76">
<p>Indicates whether or not the column is a key column. For a table to be updated with the <code>REF CURSOR</code> information, at least one of the columns in the <code>REF CURSOR</code> metadata should have this value set to <code>true</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r13c1-t76" headers="r1c1-t76">
<p><code>IsRowID</code></p>
</td>
<td class="cellalignment4226" headers="r13c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r13c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r13c1-t76 r1c4-t76">
<p><code>true</code> if the column is a <code>ROWID</code>, otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r14c1-t76" headers="r1c1-t76">
<p><code>DataType</code></p>
</td>
<td class="cellalignment4226" headers="r14c1-t76 r1c2-t76">
<p><code>System.RuntimeType</code></p>
</td>
<td class="cellalignment4226" headers="r14c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r14c1-t76 r1c4-t76">
<p>Maps to the common language runtime type.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r15c1-t76" headers="r1c1-t76">
<p><code>AllowDBNull</code></p>
</td>
<td class="cellalignment4226" headers="r15c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r15c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r15c1-t76 r1c4-t76">
<p><code>true</code> if null values are allowed, otherwise <code>false</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r16c1-t76" headers="r1c1-t76">
<p><code>IsAliased</code></p>
</td>
<td class="cellalignment4226" headers="r16c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r16c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r16c1-t76 r1c4-t76">
<p><code>true</code> if the column is an alias; otherwise <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r17c1-t76" headers="r1c1-t76">
<p><code>IsByteSemantic</code></p>
</td>
<td class="cellalignment4226" headers="r17c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r17c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r17c1-t76 r1c4-t76">
<p><code>IsByteSemantic</code> is:</p>
<ul>
<li>
<p><code>true</code> if the <code>ColumnSize</code> value uses bytes semantics</p>
</li>
<li>
<p><code>false</code> if <code>ColumnSize</code> uses character semantics</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r18c1-t76" headers="r1c1-t76">
<p><code>IsExpression</code></p>
</td>
<td class="cellalignment4226" headers="r18c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r18c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r18c1-t76 r1c4-t76">
<p><code>true</code> if the column is an expression, else <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r19c1-t76" headers="r1c1-t76">
<p><code>IsHidden</code></p>
</td>
<td class="cellalignment4226" headers="r19c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r19c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r19c1-t76 r1c4-t76">
<p><code>true</code> if the column is hidden, else <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r20c1-t76" headers="r1c1-t76">
<p><code>IsReadOnly</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r20c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r20c1-t76 r1c4-t76">
<p><code>true</code> if the column is read-only, else <code>false</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r21c1-t76" headers="r1c1-t76">
<p><code>IsLong</code></p>
</td>
<td class="cellalignment4226" headers="r21c1-t76 r1c2-t76">
<p><code>System.Boolean</code></p>
</td>
<td class="cellalignment4226" headers="r21c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r21c1-t76 r1c4-t76">
<p><code>true</code> if the column is of <code>LONG</code><code>, LONG RAW, BLOB, CLOB,</code> or</p>
<p><code>BFILE</code> type, else <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r22c1-t76" headers="r1c1-t76">
<p><code>UdtTypeName</code></p>
</td>
<td class="cellalignment4226" headers="r22c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r22c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r22c1-t76 r1c4-t76">
<p>The type name of the UDT.</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r23c1-t76" headers="r1c1-t76">
<p><code>ProviderDBType</code></p>
</td>
<td class="cellalignment4226" headers="r23c1-t76 r1c2-t76">
<p><code>System.Data.DbType</code></p>
</td>
<td class="cellalignment4226" headers="r23c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r23c1-t76 r1c4-t76">
<p><code>System.Data.DbType</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r24c1-t76" headers="r1c1-t76">
<p><code>ObjectName</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t76 r1c2-t76">
<p><code>System.String</code></p>
</td>
<td class="cellalignment4226" headers="r24c1-t76 r1c3-t76">
<p>Optional</p>
</td>
<td class="cellalignment4226" headers="r24c1-t76 r1c4-t76">
<p>Represents the name of the object.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>Some of the attributes, listed in <a href="#CJADBFGH">Table 3-16</a>, automatically have their values set using the result set&#39;s metadata. Developers can override these default values by setting a value explicitly.</p>
<p>You may have to explicitly define some attributes listed as optional for certain operations. For example, updateable <code>REF CURSOR</code> requires the developer to define key information.</p>
</div>
<!-- class="sect2" -->
<a id="CJADEIEH"></a>
<div id="ODPNT325" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Sample Configuration Fi<a id="sthref464"></a>le and A<a id="sthref465"></a>pplication</h2>
<p>This section builds a sample application to illustrate implicit <code>REF CURSOR</code> binding. It contains the following topics:</p>
<ul>
<li>
<p><a href="#CJAFCCAD">Sample Stored Procedure and Function</a></p>
</li>
<li>
<p><a href="#CJACBCFG">Sample Application Configuration File</a></p>
</li>
<li>
<p><a href="#CJACBDHC">Sample Application That Uses the Configuration File</a></p>
</li>
</ul>
<p class="subhead2"><a id="CJAFCCAD"></a><a id="ODPNT326"></a>Sample Stored Procedure and Function</p>
<pre>CREATE OR REPLACE FUNCTION GETEMP (
  EMPID IN NUMBER) return sys_refcursor is
  emp sys_refcursor;
BEGIN
  OPEN emp FOR SELECT empno, ename FROM emp where empno = EMPID;
  return emp;
END;
/
 
CREATE OR REPLACE PROCEDURE &#34;GetEmpAndDept&#34; (
  EMPS OUT sys_refcursor,
  DEPTS OUT sys_refcursor) AS
BEGIN
  OPEN EMPS for SELECT empno, ename from emp;
  OPEN DEPTS for SELECT deptno, dname from dept;
END;
/
</pre>
<p class="subhead2"><a id="CJACBCFG"></a><a id="ODPNT327"></a>Sample Application Configuration File</p>
<pre>&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt;
&lt;configuration&gt;
  &lt;oracle.dataaccess.client&gt;
    &lt;settings&gt;
 
      &lt;!-- The following is for SCOTT.GETEMP --&gt;
      &lt;add name=&#34;SCOTT.GETEMP.RefCursor.0&#34; 
           value=&#34;implicitRefCursor bindinfo=&#39;mode=ReturnValue&#39;&#34; /&gt;
 
      &lt;!-- The following is for SCOTT.GETEMP&#39;s REF CURSOR metadata --&gt;
      &lt;add name=&#34;SCOTT.GETEMP.RefCursorMetaData.0.Column.0&#34;
           value=&#34;implicitRefCursor metadata=&#39;ColumnName=EMPNO;
           BaseColumnName=EMPNO;BaseSchemaName=SCOTT;BaseTableName=EMP;
           NativeDataType=number;ProviderType=Int32;ProviderDBType=Int32;
           DataType=System.Int32;ColumnSize=4;NumericPrecision=10;
           NumericScale=3;AllowDBNull=false;IsKey=true&#39;&#34; /&gt;
 
      &lt;add name=&#34;SCOTT.GETEMP.RefCursorMetaData.0.Column.1&#34;
           value=&#34;implicitRefCursor metadata=&#39;ColumnName=ENAME;
           BaseColumnName=ENAME;BaseSchemaName=SCOTT;BaseTableName=EMP;
           NativeDataType=varchar2;ProviderType=Varchar2;
           ProviderDBType=String;DataType=System.String;
           ColumnSize=10;AllowDBNull=true&#39;&#34; /&gt;
 
      &lt;!-- The following is for &#34;SCOTT&#34;.&#34;GetEmpAndDept&#34; --&gt;
      &lt;add name=&#34;SCOTT.&amp;quot;GetEmpAndDept&amp;quot;.RefCursor.EMPS&#34; 
           value=&#34;implicitRefCursor bindinfo=&#39;mode=Output&#39;&#34; /&gt;
 
      &lt;!-- The following is for SCOTT.GETEMP&#39;s EMPS REF CURSOR metadata --&gt;
      &lt;add name=&#34;SCOTT.&amp;quot;GetEmpAndDept&amp;quot;
           .RefCursorMetaData.EMPS.Column.0&#34;
           value=&#34;implicitRefCursor metadata=&#39;ColumnName=EMPNO;
           BaseColumnName=EMPNO;BaseSchemaName=SCOTT;BaseTableName=EMP;
           NativeDataType=number;ProviderType=Int32;ProviderDBType=Int32;
           DataType=System.Int32;ColumnSize=4;NumericPrecision=10;
           NumericScale=3;AllowDBNull=false;IsKey=true&#39;&#34; /&gt;
 
      &lt;add name=&#34;SCOTT.&amp;quot;GetEmpAndDept&amp;quot;
           .RefCursorMetaData.EMPS.Column.1&#34;
           value=&#34;implicitRefCursor metadata=&#39;ColumnName=ENAME;
           BaseColumnName=ENAME;BaseSchemaName=SCOTT;BaseTableName=EMP;
           NativeDataType=varchar2;ProviderType=Varchar2;
           ProviderDBType=String;DataType=System.String;
           ColumnSize=10;AllowDBNull=true&#39;&#34; /&gt;
 
      &lt;!-- The following is for SCOTT.GETEMP&#39;s DEPTS REF CURSOR metadata --&gt;
      &lt;add name=&#34;SCOTT.&amp;quot;GetEmpAndDept&amp;quot;.RefCursor.DEPTS&#34; 
           value=&#34;implicitRefCursor bindinfo=&#39;mode=Output&#39;&#34; /&gt;
 
      &lt;add name=&#34;SCOTT.&amp;quot;GetEmpAndDept&amp;quot;
           .RefCursorMetaData.DEPTS.Column.0&#34;
           value=&#34;implicitRefCursor metadata=&#39;ColumnName=DEPTNO;
           BaseColumnName=DEPTNO;BaseSchemaName=SCOTT;BaseTableName=DEPT;
           NativeDataType=number;ProviderType=Int32;ProviderDBType=Int32;
           DataType=System.Int32;ColumnSize=4;NumericPrecision=10;
           NumericScale=3;AllowDBNull=false;IsKey=true&#39;&#34; /&gt;
 
      &lt;add name=&#34;SCOTT.&amp;quot;GetEmpAndDept&amp;quot;
           .RefCursorMetaData.DEPTS.Column.1&#34;
           value=&#34;implicitRefCursor metadata=&#39;ColumnName=DNAME;
           BaseColumnName=DNAME;BaseSchemaName=SCOTT;BaseTableName=DEPT;
           NativeDataType=varchar2;ProviderType=Varchar2;
           ProviderDBType=String;DataType=System.String;
           ColumnSize=10;AllowDBNull=true&#39;&#34; /&gt;
      &lt;/settings&gt;
  &lt;/oracle.dataaccess.client&gt;
&lt;/configuration&gt;
</pre>
<p class="subhead2"><a id="CJACBDHC"></a><a id="ODPNT328"></a>Sample Application That Uses the Configuration File</p>
<pre>using System;
using System.Data;
using Oracle.DataAccess.Client;
 
class Program
{
  static void Main(string[] args)
  {
    try
    {
      // Open a connection
      string constr =
        &#34;User Id=scott;Password=tiger;Data Source=inst1&#34;;
      OracleConnection con = new OracleConnection(constr);
      con.Open();
 
      // Use implicit REF CURSOR binding 
      //   to execute SCOTT.GETEMP function
      // Use bind by position as configured 
      //   in app.config for SCOT.GETEMP
      OracleCommand cmd = con.CreateCommand();
      cmd.CommandText = &#34;SCOTT.GETEMP&#34;;
      cmd.CommandType = CommandType.StoredProcedure;
      cmd.BindByName = false;
      OracleParameter empid = cmd.Parameters.Add(&#34;empid&#34;, 
        OracleDbType.Int32, ParameterDirection.Input);
      empid.Value = 7654;
 
      // Populate the DataSet
      OracleDataAdapter adapter = new OracleDataAdapter(cmd);
      DataSet ds = new DataSet();
      adapter.Fill(ds);
      Console.WriteLine(&#34;Retrieved {0} row from EMP&#34;, 
        ds.Tables[0].Rows.Count);
 
      // Use implicit REF CURSOR binding 
      //   to execute &#34;SCOTT&#34;.&#34;GetEmpAndDept&#34; procedure
      // Use bind by name as configured 
      //   in app.config for &#34;SCOTT&#34;.&#34;GetEmpAndDept&#34;
      cmd = con.CreateCommand();
      cmd.CommandText = &#34;\&#34;SCOTT\&#34;.\&#34;GetEmpAndDept\&#34;&#34;;
      cmd.CommandType = CommandType.StoredProcedure;
      cmd.BindByName = true;
      adapter = new OracleDataAdapter(cmd);
      adapter.Fill(ds);
      Console.WriteLine(&#34;Retrieved {0} rows from DEPT&#34;, 
        ds.Tables[1].Rows.Count);
    }
    catch (Exception ex)
    {
      // Output the message
      Console.WriteLine(ex.Message);
      if (ex.InnerException != null)
      {
        // If any details are available regarding
        // errors in the app.config, print them out
        Console.WriteLine(ex.InnerException.Message);
        if (ex.InnerException.InnerException != null)
        {
          Console.WriteLine(
            ex.InnerException.InnerException.Message);
        }
      }
    }
  }
}
</pre></div>
<!-- class="sect2" -->
<a id="CJAHJDHH"></a>
<div id="ODPNT329" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Usage C<a id="sthref466"></a>onsiderations</h2>
<p>This section discusses the following usage considerations when using implicit <code>REF CURSOR</code>:</p>
<ul>
<li>
<p><a href="#CJAEJACC">CommandText Property Considerations</a></p>
</li>
<li>
<p><a href="#CJAGIBBE">Bind Considerations</a></p>
</li>
<li>
<p><a href="#CJAJJADI">Overloaded Stored Procedures</a></p>
</li>
<li>
<p><a href="#CJABBCCE">Type Initialization Exceptions</a></p>
</li>
<li>
<p><a href="#CJAIJCGG">Using Stored Functions with Function Import</a></p>
</li>
</ul>
<a id="CJAEJACC"></a>
<div id="ODPNT330" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">CommandText Property Considerations</h3>
<p>ODP.NET applications should ensure that the stored procedure name and the <code>OracleCommand CommandText</code> match exactly. Let&#39;s take a scenario where the stored procedure name in the database is <code>SCOTT.TESTPROC</code>. Now, if the <code>CommandText</code> uses <code>TESTPROC</code>, ODP.NET will look for entries matching <code>TESTPROC</code> only. The current schema name will not be automatically appended to <code>TESTPROC</code>. So, the correct <code>CommandText</code> to use in this scenario would be <code>SCOTT.TESTPROC</code>.</p>
<p>Also, the <code>CommandText</code> is case-sensitive and must use the same case as the stored procedure name in the database. So if the stored procedure name in the database is <code>SCOTT.Testproc</code>, then the <code>CommandText</code> must use <code>SCOTT.Testproc</code>.</p>
</div>
<!-- class="sect3" -->
<a id="CJAGIBBE"></a>
<div id="ODPNT331" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Bind Considerations</h3>
<p>If information about a <code>REF CURSOR</code> parameter has been added to the configuration file, then applications should not try to explicitly bind the <code>REF CURSOR</code> parameter to <code>OracleCommand</code>. ODP.NET automatically binds the <code>REF CURSOR</code> parameter at the appropriate locations based on the information provided in the configuration file. If the application stored procedure also has non-<code>REF CURSOR</code> parameters, then these parameters must still be explicitly bound to <code>OracleCommand</code>.</p>
<p>If the information specified in the configuration file for a stored procedure identifies the <code>REF CURSOR</code> parameter by name, then all the other non-<code>REF CURSOR</code> parameters should also be bound by name. Also the <code>BindByName</code> property for the <code>OracleCommand</code> object should be set to <code>true</code> in this case. Entity Framework always uses BindByName to run stored procedures. Your .NET configuration file parameter names must use the same case that was used when creating the stored procedure in the database.</p>
<p>If the <code>OracleCommand</code> <code>BindByName</code> property is set to <code>false</code> (default), then ODP.NET assumes that the parameters have been bound based on their position, and all parameters have been specified in the correct order. For such cases, the parameters specified in the configuration file are bound in the same order in which they appear in the configuration file.</p>
</div>
<!-- class="sect3" -->
<a id="CJAJJADI"></a>
<div id="ODPNT332" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Overloaded Stored Procedures</h3>
<p>ODP.NET does not support multiple stored procedures with the same name inside the configuration file. If an ODP.NET application uses an overloaded stored procedure, the application can store only one overloaded stored procedure information in the configuration file.</p>
</div>
<!-- class="sect3" -->
<a id="CJABBCCE"></a>
<div id="ODPNT333" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Type Initialization Exceptions</h3>
<p>Type initialization exceptions can be caused by invalid .NET configuration file entries. Evaluate the exception that is caught as well as its inner exceptions to determine the .NET configuration file entry or the attribute setting that is causing the exception.</p>
<p>ODP.NET tracing logs the valid and invalid .NET configuration file entries that ODP.NET has parsed. To look for .NET configuration file related entries, set the <code>TraceLevel</code> to the <span class="italic">Entry, exit, and SQL statement information</span> level setting. Trace entries related to implicit <code>REF CURSOR</code> binding have a <code>(REFCURSOR)</code> entry along with <code>(ERROR),</code> if any errors are encountered.</p>
</div>
<!-- class="sect3" -->
<a id="CJAIJCGG"></a>
<div id="ODPNT334" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Using Stored Functions with Function Import</h3>
<p>Function Import only supports stored procedures, and does not support functions. When using the <span class="bold">Add Function Import</span> dialog for the Entity Data Model that you have created, the <span class="bold">Get Column Information</span> button does not return the metadata information for the <code>REF CURSOR</code> that is being returned by a stored function, even if it is configured properly in the .NET configuration file.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4219">
<tr>
<td class="cellalignment4226">
<table class="cellalignment4224">
<tr>
<td class="cellalignment4223"><a href="featRefCursor.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4223"><a href="featLOBsupp.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4228">
<table class="cellalignment4222">
<tr>
<td class="cellalignment4223"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4223"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4223"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4223"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4223"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4223"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>