<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79209"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/PL%2FSQL%20REF%20CURSOR%20and%20OracleRefCursor"></a><title>PL/SQL REF CURSOR and OracleRefCursor</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-10-14T19:43:26Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Provider for .NET Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17732-11"/>
<meta name="dcterms.isVersionOf" content="ODPNT"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="featData.htm" title="Previous" type="text/html"/>
<link rel="Next" href="featImplRefCursor.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17732-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">30/172</span> <!-- End Header --><a id="i1007990"></a>
<div id="ODPNT311" class="sect1">
<h1 class="sect1">PL/SQL REF CURSOR and OracleRefCursor<a id="sthref430"></a><a id="sthref431"></a><a id="sthref432"></a><a id="sthref433"></a></h1>
<p>The <code>REF</code> <code>CURSOR</code> is a data type in the Oracle PL/SQL language. It represents a cursor or a result set in Oracle Database. The <code>OracleRefCursor</code> object is a corresponding ODP.NET type for the <code>REF</code> <code>CURSOR</code> type.</p>
<p>This section discusses the following aspects of using the <code>REF</code> <code>CURSOR</code> data type and <code>OracleRefCursor</code> objects:</p>
<ul>
<li>
<p><a href="#i1008026">Obtaining an OracleRefCursor Object</a></p>
</li>
<li>
<p><a href="#i1008031">Obtaining a REF CURSOR Data Type</a></p>
</li>
<li>
<p><a href="#i1008035">Populating an OracleDataReader from a REF CURSOR</a></p>
</li>
<li>
<p><a href="#i1008041">Populating the DataSet from a REF CURSOR</a></p>
</li>
<li>
<p><a href="#i1008049">Populating an OracleRefCursor from a REF CURSOR</a></p>
</li>
<li>
<p><a href="#i1008056">Updating a DataSet Obtained from a REF CURSOR</a></p>
</li>
<li>
<p><a href="#i1008061">Behavior of ExecuteScalar Method for REF CURSOR</a></p>
</li>
<li>
<p><a href="#CJAGGEIJ">Passing a REF CURSOR to a Stored Procedure</a></p>
</li>
</ul>
<a id="i1008026"></a>
<div id="ODPNT312" class="sect2">
<h2 class="sect2">Obtaining an OracleRefCursor Object<a id="sthref434"></a></h2>
<p>There are no constructors for <code>OracleRefCursor</code> objects. They can be acquired only as parameter values from PL/SQL stored procedures, stored functions, or anonymous blocks.</p>
<p>An <code>OracleRefCursor</code> object is a connected object. The connection used to execute the command returning an <code>OracleRefCursor</code> object is required for its lifetime. Once the connection associated with an <code>OracleRefCursor object</code> is closed, the <code>OracleRefCursor</code> object cannot be used.</p>
</div>
<!-- class="sect2" -->
<a id="i1008031"></a>
<div id="ODPNT313" class="sect2">
<h2 class="sect2">Obtaining a REF CURSOR Data Type<a id="sthref435"></a><a id="sthref436"></a></h2>
<p>A <code>REF</code> <code>CURSOR</code> data type can be obtained as an <code>OracleDataReader</code>, <code>DataSet</code>, or <code>OracleRefCursor</code> object. If the <code>REF</code> <code>CURSOR</code> data type is obtained as an <code>OracleRefCursor</code> object, it can be used to create an <code>OracleDataReader</code> object or populate a <code>DataSet</code> from it. When accessing a <code>REF</code> <code>CURSOR</code> data type, always bind it as an <code>OracleDbType.RefCursor</code> parameter.</p>
</div>
<!-- class="sect2" -->
<a id="i1008035"></a>
<div id="ODPNT314" class="sect2">
<h2 class="sect2">Populating an OracleDataReader from a REF CURSOR<a id="sthref437"></a><a id="sthref438"></a><a id="sthref439"></a></h2>
<p>A <code>REF</code> <code>CURSOR</code> data type can be obtained as an <code>OracleDataReader</code> object by calling the <code>ExecuteReader</code> method of the <code>OracleCommand</code> object. The output parameter with the <code>OracleDbType</code> property set is bound to <code>OracleDbType.RefCursor</code>. None of the output parameters of type <code>OracleDbType.RefCursor</code> is populated after the <code>ExecuteReader</code> method is invoked.</p>
<p>If there are multiple output <code>REF</code> <code>CURSOR</code> parameters, use the <code>NextResult</code> method of the <code>OracleDataReader</code> object to access the next <code>REF</code> <code>CURSOR</code> data type. The <code>OracleDataReader</code> <code>NextResult</code> method provides sequential access to the <code>REF</code> <code>CURSOR</code> data types; only one <code>REF</code> <code>CURSOR</code> data type can be accessed at a given time.</p>
<p>The order in which <code>OracleDataReader</code> objects are created for the corresponding <code>REF</code> <code>CURSOR</code> data types depends on the order in which the parameters are bound. If a PL/SQL stored function returns a <code>REF</code> <code>CURSOR</code> data type, then it becomes the first <code>OracleDataReader</code> object and all the output <code>REF</code> <code>CURSOR</code> data types follow the order in which the parameters are bound.</p>
</div>
<!-- class="sect2" -->
<a id="i1008041"></a>
<div id="ODPNT315" class="sect2">
<h2 class="sect2">Populating the DataSet from a REF CURSOR<a id="sthref440"></a><a id="sthref441"></a><a id="sthref442"></a><a id="sthref443"></a><a id="sthref444"></a><a id="sthref445"></a><a id="sthref446"></a><a id="sthref447"></a></h2>
<p>For the <code>Fill</code> method to populate the <code>DataSet</code> properly, the <code>SelectCommand</code> property of the <code>OracleDataAdapter</code> class must be bound with an output parameter of type <code>OracleDbType.RefCursor</code>. If the <code>Fill</code> method is successful, the <code>DataSet</code> is populated with a <code>DataTable</code> that represents a <code>REF</code> <code>CURSOR</code> data type.</p>
<p>If the command execution returns multiple <code>REF</code> <code>CURSOR</code> data types, the <code>DataSet</code> is populated with multiple <code>DataTable</code> objects.</p>
<p>With Oracle Data Provider for .NET release 11.1.0.6.20, the extended property, <code>REFCursorName</code>, has been introduced on the <code>DataTable</code>, to identify the <code>REF</code> <code>CURSOR</code> that populates the <code>DataTable</code>.</p>
<p>This property is particularly useful when a <code>DataSet</code> is being populated with more than one <code>REF</code> <code>CURSOR</code>, one or more of which is <code>NULL</code>. For example, if a <code>DataSet</code> is populated by executing a stored procedure that returns three <code>REF</code> <code>CURSOR</code>s and the second <code>REF</code> <code>CURSOR</code> is <code>NULL</code>, the <code>REFCursorName</code> property value for the first <code>DataTable</code> is <code>REFCursor</code> and for the second <code>DataTable</code>, <code>REFCursor2</code> . No <code>DataTable</code> is populated for the <code>NULL</code> <code>REF</code> <code>CURSOR</code>.</p>
</div>
<!-- class="sect2" -->
<a id="i1008049"></a>
<div id="ODPNT316" class="sect2">
<h2 class="sect2">Populating an OracleRefCursor from a REF CURSOR<a id="sthref448"></a><a id="sthref449"></a><a id="sthref450"></a></h2>
<p>When the <code>ExecuteNonQuery</code> method is invoked on a command that returns one or more <code>REF</code> <code>CURSOR</code> data types, each of the <code>OracleCommand</code> parameters that are bound as an <code>OracleDbType.RefCursor</code> gets a reference to an <code>OracleRefCursor</code> object.</p>
<p>To create an <code>OracleDataReader</code> object from an <code>OracleRefCursor</code> object, invoke the <code>GetDataReader</code> method from the <code>OracleRefCursor</code> object. Subsequent calls to the <code>GetDataReader</code> method return a reference to the same <code>OracleDataReader</code> object.</p>
<p>To populate a <code>DataSet</code> with an <code>OracleRefCursor</code> object, the application can invoke a <code>Fill</code> method of the <code>OracleDataAdapter</code> class that takes an <code>OracleRefCursor</code> object. Similar to the <code>OracleDataReader</code> object, an <code>OracleRefCursor</code> object is forward-only. Therefore, once a row is read from an <code>OracleRefCursor</code> object, that same row cannot be obtained again from it unless it is populated again from a query.</p>
<p>When multiple <code>REF</code> <code>CURSOR</code> data types are returned from a command execution as <code>OracleRefCursor</code> objects, the application can choose to create an <code>OracleDataReader</code> object or populate a <code>DataSet</code> with a particular <code>OracleRefCursor</code> object. All the <code>OracleDataReader</code> objects or <code>DataSet</code> objects created from the <code>OracleRefCursor</code> objects are active at the same time, and can be accessed in any order.</p>
</div>
<!-- class="sect2" -->
<a id="i1008056"></a>
<div id="ODPNT317" class="sect2">
<h2 class="sect2">Updating a DataSet Obtained from a REF CURSOR<a id="sthref451"></a><a id="sthref452"></a></h2>
<p><code>REF</code> <code>CURSOR</code> types cannot be updated. However, data that is retrieved into a <code>DataSet</code> can be updated. Therefore, the <code>OracleDataAdapter</code> class requires a custom SQL statement to flush any <code>REF</code> <code>CURSOR</code> data updates to the database.</p>
<p>The <code>OracleCommandBuilder</code> object cannot be used to generate SQL statements for <code>REF</code> <code>CURSOR</code> updates.</p>
</div>
<!-- class="sect2" -->
<a id="i1008061"></a>
<div id="ODPNT318" class="sect2">
<h2 class="sect2">Behavior of ExecuteScalar Method for REF CURSOR<a id="sthref453"></a><a id="sthref454"></a><a id="sthref455"></a><a id="sthref456"></a></h2>
<p>The <code>ExecuteScalar</code> method returns the value of the first column of the first row of the <code>REF</code> <code>CURSOR</code> if it is one of the following:</p>
<ul>
<li>
<p>A return value of a stored function execution</p>
</li>
<li>
<p>The first bind parameter of a stored procedure execution</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADLOB" href="../ADLOB/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for more information</div>
</div>
<!-- class="sect2" -->
<a id="CJAGGEIJ"></a>
<div id="ODPNT319" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Passing a REF CURSOR to a Stored Procedure<a id="sthref457"></a><a id="sthref458"></a></h2>
<p>An application can retrieve a <code>REF</code> <code>CURSOR</code> type from a PL/SQL stored procedure or function and pass it to another stored procedure or function. This feature is useful in scenarios where a stored procedure or a function returns a <code>REF</code> <code>CURSOR</code> type to the .NET application, and based on the application logic, the application passes this <code>REF</code> <code>CURSOR</code> to another stored procedure for processing. Note that if you retrieve the data from a <code>REF</code> <code>CURSOR</code> type in the .NET application, you cannot pass it back to another stored procedure.</p>
<p>The following example demonstrate passing a <code>REF</code> <code>CURSOR</code>:</p>
<pre>/*
connect scott/tiger@oracle
create table test (col1 number);
insert into test(col1) values (1);
commit;
 
create or replace package testPkg as type empCur is REF Cursor;
end testPkg;
/
 
create or replace procedure testSP(param1 IN testPkg.empCur, param2 OUT NUMBER)
as
begin
FETCH param1 into param2;
end;
/
*/
 
// C#
 
 
using System;
using Oracle.DataAccess.Client;
using System.Data;
 
class InRefCursorParameterSample
{
  static void Main()
  {
    OracleConnection conn = new OracleConnection
      (&#34;User Id=scott; Password=tiger; Data Source=oracle&#34;);
 
    conn.Open(); // Open the connection to the database
 
    // Command text for getting the REF Cursor as OUT parameter
    String cmdTxt1 = &#34;begin open :1 for select col1 from test; end;&#34;;
 
    // Command text to pass the REF Cursor as IN parameter
    String cmdTxt2 = &#34;begin testSP (:1, :2); end;&#34;;
 
    // Create the command object for executing cmdTxt1 and cmdTxt2
    OracleCommand cmd = new OracleCommand(cmdTxt1, conn);
 
    // Bind the Ref cursor to the PL/SQL stored procedure
    OracleParameter outRefPrm = cmd.Parameters.Add(&#34;outRefPrm&#34;,
      OracleDbType.RefCursor, DBNull.Value, ParameterDirection.Output);
 
    cmd.ExecuteNonQuery(); // Execute the anonymous PL/SQL block
 
    // Reset the command object to execute another anonymous PL/SQL block
    cmd.Parameters.Clear();
    cmd.CommandText = cmdTxt2;
 
    // REF Cursor obtained from previous execution is passed to this 
    // procedure as IN parameter
    OracleParameter inRefPrm = cmd.Parameters.Add(&#34;inRefPrm&#34;,
      OracleDbType.RefCursor, outRefPrm.Value, ParameterDirection.Input);
 
    // Bind another Number parameter to get the REF Cursor column value
    OracleParameter outNumPrm = cmd.Parameters.Add(&#34;outNumPrm&#34;,
      OracleDbType.Int32, DBNull.Value, ParameterDirection.Output);
 
    cmd.ExecuteNonQuery(); //Execute the stored procedure
 
    // Display the out parameter value
    Console.WriteLine(&#34;out parameter is: &#34; + outNumPrm.Value.ToString());
  }
}
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4219">
<tr>
<td class="cellalignment4226">
<table class="cellalignment4224">
<tr>
<td class="cellalignment4223"><a href="featData.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4223"><a href="featImplRefCursor.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4228">
<table class="cellalignment4222">
<tr>
<td class="cellalignment4223"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4223"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4223"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4223"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4223"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4223"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>