<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-79196"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Database%20Advanced%20Queuing%20Support"></a><title>Oracle Database Advanced Queuing Support</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-10-14T19:43:26Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Provider for .NET Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17732-11"/>
<meta name="dcterms.isVersionOf" content="ODPNT"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="featBulkCopy.htm" title="Previous" type="text/html"/>
<link rel="Next" href="featChange.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17732-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">36/172</span> <!-- End Header --><a id="CJAGABAE"></a>
<div id="ODPNT408" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Oracle Database Advanced Queuing Support</h1>
<p>Oracle Database Advanced Queuing (AQ) provides database-integrated message queuing functionality. Oracle Database AQ is built on top of Oracle Streams and leverages the functions of Oracle Database so that messages can be stored persistently, propagated between queues on different computers and databases, and transmitted using Oracle Net Services and HTTP(S).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
ODP.NET, Managed Driver does not support the AQ .NET classes.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADQUE" href="../ADQUE/toc.htm"><span class="italic">Oracle Database Advanced Queuing User&#39;s Guide</span></a></div>
<p>As Oracle Database AQ is implemented in database tables, all operational benefits of high availability, scalability, and reliability are also applicable to queue data. Oracle Database AQ supports standard database features such as recovery, restart, and security.</p>
<p>The following items discuss Oracle Database AQ concepts:</p>
<ul>
<li>
<p>Queues and Queue Tables</p>
<p>Messages enqueued in a queue are stored in a queue table. A queue table must be created before creating a queue based on it. Use the <code>DBMS_AQADM</code> PL/SQL package or Oracle Developer Tools for Visual Studio to create and administer queue tables and queues.</p>
<p>Queues are represented by <code>OracleAQQueue</code> objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleAQQueueClass.htm#CHDGCJBB">&#34;OracleAQQueue Class&#34;</a></div>
</li>
<li>
<p>Single-Consumer and Multiple-Consumer Queues</p>
<p>A single-consumer queue is created based on a single consumer queue table. Messages enqueued in a single-consumer queue can be dequeued by only a single consumer.</p>
<p>A multiple-consumer queue is based on a multiple-consumer queue table. This queue supports queue subscribers and message recipients.</p>
</li>
<li>
<p>Message Recipients</p>
<p>A message producer can submit a list of recipients when enqueuing a message. This allows for a unique set of recipients for each message in the queue. The recipient list associated with the message overrides the subscriber list, if any, associated with the queue. The recipients need not be in the subscriber list. However, recipients can be selected from among the subscribers.The <code>Recipients</code> property of an <code>OracleAQMessage</code> can be used to specify the recipients to a specific message in terms of <code>OracleAQAgent</code> objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleAQMessageClass.htm#CHDIHJBA">&#34;Recipients&#34;</a></p>
</li>
<li>
<p><a href="OracleAQAgentClass.htm#CBADCHHG">&#34;OracleAQAgent Class&#34;</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Enqueue</p>
<p>Messages are enqueued when producer applications push the messages into a queue. This is accomplished by calling the <code>Enqueue</code> method on an <code>OracleAQQueue</code> object. Multiple messages can be enqueued using the <code>EnqueueArray</code> method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleAQQueueClass.htm#CHDJEAEA">&#34;Enqueue&#34;</a></p>
</li>
<li>
<p><a href="OracleAQQueueClass.htm#CHDJAGIH">&#34;EnqueueArray&#34;</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Dequeue</p>
<p>Messages are dequeued when consumer applications pull the messages from a queue. This is accomplished by calling the <code>Dequeue</code> method on an <code>OracleAQQueue</code> object. Multiple messages can be dequeued using the <code>DequeueArray</code> method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleAQQueueClass.htm#CHDHIHHD">&#34;Dequeue&#34;</a></p>
</li>
<li>
<p><a href="OracleAQQueueClass.htm#CHDBIBBF">&#34;DequeueArray&#34;</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Listen</p>
<p>Subscriber applications can use a <code>Listen</code> call to monitor multiple queues for subscriptions on different queues. This is a more scalable solution for cases where a subscriber application has subscribed to many queues and wishes to receive messages that arrive in any of the queues.This is accomplished by calling the <code>Listen</code> method of the <code>OracleAQQueue</code> class, passing the list of subscriptions in form of an array.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleAQQueueClass.htm#CHDBFFIG">&#34;Listen&#34;</a></div>
</li>
<li>
<p>Notification</p>
<p>Subscriber applications can utilize the notification mechanism to get notifications about message availability in a queue. The applications can decide to skip or dequeue the message from the queue based on the information received.</p>
<p>A subscriber application must register for event notification on the queues from which it wants to receive notifications. This is represented by the <code>MessageAvailable</code> event on <code>OracleAQQueue</code>. The event is triggered when messages matching the subscriptions arrive.</p>
<p>Notifications can be registered as regular or grouping notifications. A time out value for these notifications can also be specified. Various notification options can be set using the <code>OracleAQQueue.Notification</code> property. Notifications set on an <code>OracleAQQueue</code> object gets cancelled automatically when the object gets disposed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="OracleAQQueueClass.htm#CHDFICAF">&#34;MessageAvailable Event&#34;</a></p>
</li>
<li>
<p><a href="OracleAQQueueClass.htm#CHDHBDDJ">&#34;Notification&#34;</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Buffered Messaging</p>
<p>In buffered messaging, messages reside in a shared memory area. This makes it faster than persistent messaging. The messages are written to disk only when the total memory consumption of buffered messages approaches the available shared memory limit. Buffered messaging is ideal for applications that do not require the reliability and transaction support of Oracle Database AQ persistent messaging.</p>
<p>Buffered and persistent messages use the same single-consumer or multi-consumer queues, and the same administrative and operational interfaces. They are distinguished from each other by a delivery mode parameter. When an application enqueues a message to an Oracle Database AQ queue, it sets the delivery mode parameter as well.</p>
<p>The delivery mode parameter can be set on <code>OracleAQMessage</code> by modifying the <code>DeliveryMode</code> property. Buffered messaging is supported in all queue tables created with compatibility 8.1 or higher.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="OracleAQMessageClass.htm#CHDCAGJG">&#34;DeliveryMode&#34;</a></div>
</li>
</ul>
<div id="ODPNT409" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref633"></a>
<h2 class="sect2">Using ODP.NET for Advanced Queuing</h2>
<p>.NET applications can use ODP.NET to access all the operational features of AQ such as Enqueuing, Dequeuing, Listen, and Notification.</p>
<p><a href="#CJACAJHD">Table 3-25</a> maps the AQ features to their corresponding ODP.NET implementation.</p>
<div id="ODPNT410" class="tblformal">
<p class="titleintable"><a id="sthref634"></a><a id="CJACAJHD"></a>Table 3-25 Mapping AQ Features with their ODP.NET Implementation</p>
<table class="cellalignment4231" title="Mapping AQ Features with their ODP.NET Implementation" summary="Mapping AQ features with their ODP.NET implementation" dir="ltr">
<thead>
<tr class="cellalignment4220">
<th class="cellalignment4230" id="r1c1-t121">Functionality</th>
<th class="cellalignment4230" id="r1c2-t121">ODP.NET Implementation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r2c1-t121" headers="r1c1-t121">
<p>Create a Message</p>
</td>
<td class="cellalignment4226" headers="r2c1-t121 r1c2-t121">
<p>Create an <code>OracleAQMessage</code> object</p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r3c1-t121" headers="r1c1-t121">
<p>Enqueue a single message</p>
</td>
<td class="cellalignment4226" headers="r3c1-t121 r1c2-t121">
<p>Specify the message as <code>OracleAQMessage</code>, queue as <code>OracleAQQueue</code> and enqueue options on <code>OracleAQQueue</code>, call <code>OracleAQQueue.</code><a href="OracleAQQueueClass.htm#CHDJEAEA">Enqueue</a></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r4c1-t121" headers="r1c1-t121">
<p>Enqueue multiple messages</p>
</td>
<td class="cellalignment4226" headers="r4c1-t121 r1c2-t121">
<p>Specify the messages as an <code>OracleAQMessage</code> array in <code>OracleAQQueue.</code><a href="OracleAQQueueClass.htm#CHDJAGIH">EnqueueArray</a></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r5c1-t121" headers="r1c1-t121">
<p>Dequeue a single message</p>
</td>
<td class="cellalignment4226" headers="r5c1-t121 r1c2-t121">
<p>Specify dequeue options on <code>OracleAQQueue</code> and call <code>OracleAQQueue.</code><a href="OracleAQQueueClass.htm#CHDHIHHD">Dequeue</a></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r6c1-t121" headers="r1c1-t121">
<p>Dequeue multiple messages</p>
</td>
<td class="cellalignment4226" headers="r6c1-t121 r1c2-t121">
<p>Call <code>OracleAQQueue.</code><a href="OracleAQQueueClass.htm#CHDBIBBF">DequeueArray</a></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r7c1-t121" headers="r1c1-t121">
<p>Listen for messages on Queue(s)</p>
</td>
<td class="cellalignment4226" headers="r7c1-t121 r1c2-t121">
<p>Call <code>OracleAQQueue.</code><a href="OracleAQQueueClass.htm#CHDBFFIG">Listen</a>.To listen on multiple queues use static <a href="OracleAQQueueClass.htm#CHDJHFID">Listen</a> method of <code>OracleAQQueue</code></p>
</td>
</tr>
<tr class="cellalignment4220">
<td class="cellalignment4226" id="r8c1-t121" headers="r1c1-t121">
<p>Message Notifications</p>
</td>
<td class="cellalignment4226" headers="r8c1-t121 r1c2-t121">
<p>Use <code>OracleAQQueue.</code><a href="OracleAQQueueClass.htm#CHDFICAF">MessageAvailable Event</a> along with the <code>NotificationConsumers</code> property</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
AQ samples are provided in the <code><span class="codeinlineitalic">ORACLE_BASE</span></code><code>\</code><code><span class="codeinlineitalic">ORACLE_HOME</span></code><code>\ODP.NET\Samples</code> directory.</div>
<div id="ODPNT411" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref635"></a>
<h3 class="sect3">Enqueuing and Dequeuing Example</h3>
<p>The following example demonstrates enqueuing and dequeuing messages using a single consumer queue. The first part of the example performs the requisite database setup for the database user, <code>SCOTT</code>. The second part of the example demonstrates enqueuing and dequeuing messages.</p>
<pre>-- Part I: Database setup required for this demo
 
------------------------------------------------------------------
-- SQL to grant appropriate privilege to database user, SCOTT
------------------------------------------------------------------
SQL&gt; ALTER USER SCOTT ACCOUNT UNLOCK IDENTIFIED BY Pwd4Sct;
User altered.
SQL&gt; GRANT ALL ON DBMS_AQADM TO scott;
 
------------------------------------------------------------------
-- PL/SQL to create queue-table and queue and start queue for SCOTT
------------------------------------------------------------------
BEGIN
  DBMS_AQADM.CREATE_QUEUE_TABLE(
    queue_table=&gt;&#39;scott.test_q_tab&#39;, 
    queue_payload_type=&gt;&#39;RAW&#39;, 
    multiple_consumers=&gt;FALSE);
 
  DBMS_AQADM.CREATE_QUEUE(
    queue_name=&gt;&#39;scott.test_q&#39;, 
    queue_table=&gt;&#39;scott.test_q_tab&#39;);
 
  DBMS_AQADM.START_QUEUE(queue_name=&gt;&#39;scott.test_q&#39;);
END;
/
 
------------------------------------------------------------------
-- PL/SQL to stop queue and drop queue &amp; queue-table from SCOTT
------------------------------------------------------------------
BEGIN
  DBMS_AQADM.STOP_QUEUE(&#39;scott.test_q&#39;);
 
  DBMS_AQADM.DROP_QUEUE(
    queue_name =&gt; &#39;scott.test_q&#39;, 
    auto_commit =&gt; TRUE);
 
  DBMS_AQADM.DROP_QUEUE_TABLE(
    queue_table =&gt; &#39;scott.test_q_tab&#39;,
    force =&gt; FALSE, 
    auto_commit =&gt; TRUE);
END;
/
-- End of Part I, database setup.

//Part II: Enqueuing and dequeuing messages
//C#
using System;
using System.Text;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
 
namespace ODPSample
{
  /// &lt;summary&gt;
  /// Demonstrates Enqueuing and Dequeuing raw message 
  /// using a single consumer queue
  /// &lt;/summary&gt;
  class EnqueueDequeue
  {
    static void Main(string[] args)
    {
      // Create connection
      string constr = &#34;user id=scott;password=Pwd4Sct;data source=oracle&#34;;
      OracleConnection con = new OracleConnection(constr);
 
      // Create queue
      OracleAQQueue queue = new OracleAQQueue(&#34;scott.test_q&#34;, con);
 
      try
      {
        // Open connection
        con.Open();
 
        // Begin txn for enqueue
        OracleTransaction txn = con.BeginTransaction();
 
        // Set message type for the queue
        queue.MessageType = OracleAQMessageType.Raw;
 
        // Prepare message and RAW payload
        OracleAQMessage enqMsg = new OracleAQMessage();
        byte[] bytePayload = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        enqMsg.Payload = bytePayload;
 
        // Prepare to Enqueue
        queue.EnqueueOptions.Visibility = OracleAQVisibilityMode.OnCommit;
 
        // Enqueue message
        queue.Enqueue(enqMsg);
 
        Console.WriteLine(&#34;Enqueued Message Payload      : &#34;
          + ByteArrayToString(enqMsg.Payload as byte[]));
        Console.WriteLine(&#34;MessageId of Enqueued Message : &#34;
          + ByteArrayToString(enqMsg.MessageId));
 
        // Enqueue txn commit
        txn.Commit();
 
        // Begin txn for Dequeue
        txn = con.BeginTransaction();
 
        // Prepare to Dequeue
        queue.DequeueOptions.Visibility = OracleAQVisibilityMode.OnCommit;
        queue.DequeueOptions.Wait = 10;
 
        // Dequeue message
        OracleAQMessage deqMsg = queue.Dequeue();
 
        Console.WriteLine(&#34;Dequeued Message Payload      : &#34;
          + ByteArrayToString(deqMsg.Payload as byte[]));
        Console.WriteLine(&#34;MessageId of Dequeued Message : &#34;
          + ByteArrayToString(deqMsg.MessageId));
 
        // Dequeue txn commit
        txn.Commit();
      }
      catch (Exception e)
      {
        Console.WriteLine(&#34;Error: {0}&#34;, e.Message);
      }
      finally
      {
        // Close/Dispose objects
        queue.Dispose();
        con.Close();
        con.Dispose();
      }
    }
 
    // Function to convert byte[] to string
    static private string ByteArrayToString(byte[] byteArray)
    {
      StringBuilder sb = new StringBuilder();
      for (int n = 0; n &lt; byteArray.Length; n++)
      {
        sb.Append((int.Parse(byteArray[n].ToString())).ToString(&#34;X&#34;));
      }
      return sb.ToString();
    }
  }
}
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4219">
<tr>
<td class="cellalignment4226">
<table class="cellalignment4224">
<tr>
<td class="cellalignment4223"><a href="featBulkCopy.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4223"><a href="featChange.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4228">
<table class="cellalignment4222">
<tr>
<td class="cellalignment4223"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4223"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4223"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4223"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4223"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4223"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>