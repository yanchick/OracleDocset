<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1002"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Messaging%20Gateway%20Message%20Conversion"></a><title>Oracle Messaging Gateway Message Conversion</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-07-01T0:30:48Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Queuing User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17945-14"/>
<meta name="dcterms.isVersionOf" content="ADQUE"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="mg_work.htm" title="Previous" type="text/html"/>
<link rel="Next" href="mg_trble.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17945-14.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">27/34</span> <!-- End Header -->
<div id="ADQUE2000" class="chapter"><a id="g1017953"></a> <a id="i1007772"></a>
<h1 class="chapter"><span class="secnum">20</span> Oracle Messaging Gateway Message Conversion</h1>
<p>This chapter discusses how Oracle Messaging Gateway (MGW) converts <a href="glossary.htm#CBACDHGB"><span class="xrefglossterm">message</span></a> formats from one messaging system to another. A conversion is generally necessary when moving messages between Oracle Database Advanced Queuing and another system, because different messaging systems have different message formats. <a href="glossary.htm#i432286"><span class="xrefglossterm">Java Message Service</span></a> (JMS) messages are a special case. A <a href="glossary.htm#CBADEAAI"><span class="xrefglossterm">JMS message</span></a> can be propagated only to a JMS destination, making conversion a simple process.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1005789">Converting Oracle Messaging Gateway Non-JMS Messages</a></p>
</li>
<li>
<p><a href="#i1006267">Message Conversion for WebSphere MQ</a></p>
</li>
<li>
<p><a href="#i1007109">Message Conversion for TIB/Rendezvous</a></p>
</li>
<li>
<p><a href="#i1007453">JMS Messages</a></p>
</li>
</ul>
<a id="i1005789"></a>
<div id="ADQUE3351" class="sect1">
<h2 class="sect1">Converting Oracle Messaging Gateway Non-JMS Messages</h2>
<p>MGW converts the native message format of the source messaging system to the native message format of the destination messaging system during <a href="glossary.htm#CBADIFJC"><span class="xrefglossterm">propagation</span></a>. MGW uses <a href="glossary.htm#CBACEFAE"><span class="xrefglossterm">canonical</span></a> types and a model centering on Oracle Database Advanced Queuing for the conversion.</p>
<div id="ADQUE3352" class="sect2"><a id="sthref1956"></a>
<h3 class="sect2"><a id="sthref1957"></a><a id="sthref1958"></a><a id="sthref1959"></a>Overview of the Non-JMS Message Conversion Process</h3>
<p>When a message is propagated by MGW, the message is converted from the native format of the source <a href="glossary.htm#CBAHIIAB"><span class="xrefglossterm">queue</span></a> to the native format of the destination queue.</p>
<p>A native message usually contains a message header and a message body. The header contains the fixed header fields that all messages in that messaging system have, such as message properties in Oracle Database Advanced Queuing and the fixed header in WebSphere MQ. The body contains message contents, such as the Oracle Database Advanced Queuing payload, the WebSphere MQ message body, or the entire TIB/Rendezvous message. MGW converts both message header and message body components.</p>
<p><a href="#i1005857">Figure 20-1</a> shows how non-JMS messages are converted in two stages. A message is first converted from the native format of the source queue to the MGW internal message format, and then it is converted from the internal message format to the native format of the destination queue.</p>
<div id="ADQUE3353" class="figure">
<p class="titleinfigure"><a id="i1005857"></a>Figure 20-1 Non-JMS Message Conversion</p>
<img width="496" height="256" src="img/adqmg003.gif" alt="Description of Figure 20-1 follows"/><br/>
<a id="sthref1960" href="img_text/adqmg003.htm">Description of &#34;Figure 20-1 Non-JMS Message Conversion&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The MGW agent uses an internal message format consisting of a header that is similar to the Oracle Database Advanced Queuing message properties and a body that is a representation of an MGW canonical type.</p>
</div>
<!-- class="sect2" -->
<a id="i1005863"></a>
<div id="ADQUE3354" class="sect2">
<h3 class="sect2"><a id="sthref1961"></a><a id="sthref1962"></a><a id="sthref1963"></a><a id="sthref1964"></a><a id="sthref1965"></a><a id="sthref1966"></a>Oracle Messaging Gateway Canonical Types</h3>
<p>MGW defines canonical types to support message conversion between Oracle Database Advanced Queuing and non-Oracle messaging systems. A canonical type is a message type representation in the form of a PL/SQL Oracle type in Oracle Database. The canonical types are <code>RAW</code>, <code>SYS.MGW_BASIC_MSG_T</code>, and <code>SYS.MGW_TIBRV_MSG_T</code>.</p>
<p>WebSphere MQ propagation supports the canonical types <code>SYS.MGW_BASIC_MSG_T</code> and <code>RAW</code>. TIB/Rendezvous propagation supports the canonical types <code>SYS.MGW_TIBRV_MSG_T</code> and <code>RAW</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;DBMS_MGWMSG&#34; in <a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for Syntax and attribute information for <code>SYS.MGW_BASIC_MSG_T</code> and <code>SYS.MGW_TIBRV_MSG_T</code></div>
</div>
<!-- class="sect2" -->
<div id="ADQUE3355" class="sect2"><a id="sthref1967"></a>
<h3 class="sect2"><a id="sthref1968"></a><a id="sthref1969"></a><a id="sthref1970"></a>Message Header Conversion</h3>
<p>MGW provides default mappings between Oracle Database Advanced Queuing message properties and non-Oracle message header fields that have a counterpart in Oracle Database Advanced Queuing message properties with the same semantics. Where MGW does not provide a mapping, the message header fields are set to a default value, usually the default value defined by the messaging system.</p>
</div>
<!-- class="sect2" -->
<div id="ADQUE2001" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1971"></a>
<h3 class="sect2"><a id="sthref1972"></a><a id="sthref1973"></a>Handling Arbitrary Payload Types Using Message Transformations</h3>
<p>When converting to or from Oracle Database Advanced Queuing messages, the MGW agent uses only its canonical types. Arbitrary payload types are supported, however, with the assistance of user-defined Oracle Database Advanced Queuing message transformations to convert between an Oracle Database Advanced Queuing queue payload and an MGW canonical type.</p>
<p>For MGW to propagate messages from an Oracle Database Advanced Queuing queue with an arbitrary <a href="glossary.htm#CBAFEIGB"><span class="xrefglossterm">ADT</span></a> payload (outbound propagation), you must provide a mapping to an MGW canonical ADT. The <a href="glossary.htm#CBACGHDB"><span class="xrefglossterm">transformation</span></a> is invoked when the MGW agent dequeues messages from the Oracle Database Advanced Queuing queue. Similarly, for MGW to propagate messages to an Oracle Database Advanced Queuing queue with an arbitrary ADT payload (inbound propagation), you must provide a mapping from an MGW canonical ADT. The transformation is invoked when the MGW agent enqueues messages to the Oracle Database Advanced Queuing queue.</p>
<div id="ADQUE3356" class="figure">
<p class="titleinfigure"><a id="i1005948"></a>Figure 20-2 Oracle Database Advanced Queuing Message Conversion</p>
<img width="496" height="256" src="img/adqmg004.gif" alt="Description of Figure 20-2 follows"/><br/>
<a id="sthref1974" href="img_text/adqmg004.htm">Description of &#34;Figure 20-2 Oracle Database Advanced Queuing Message Conversion&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The transformation is always executed in the context of the MGW agent, which means that the MGW agent user (the user specified using <code>DBMS_MGWADM</code>.<code>CREATE_AGENT</code> or <code>DBMS_MGWADM</code>.<code>ALTER_AGENT</code>) must have <code>EXECUTE</code> privileges on the transformation function and the Oracle Database Advanced Queuing payload type. This can be accomplished by granting the <code>EXECUTE</code> privilege to <code>PUBLIC</code> or by granting the <code>EXECUTE</code> privilege directly to the MGW agent user.</p>
<p>To configure a MGW propagation job with a transformation:</p>
<ol>
<li>
<p>Create the transformation function.</p>
</li>
<li>
<p>Grant <code>EXECUTE</code> to the MGW agent user or to <code>PUBLIC</code> on the function and the object types it references.</p>
</li>
<li>
<p>Call <code>DBMS_TRANSFORM.CREATE_TRANSFORMATION</code> to register the transformation.</p>
</li>
<li>
<p>Call <code>DBMS_MGWADM</code>.<code>CREATE_JOB</code> to create a MGW propagation job using the transformation, or <code>DBMS_MGWADM</code>.<code>ALTER_JOB</code> to alter an existing job.</p>
</li>
</ol>
<p>The value passed in the transformation parameter for these APIs must be the registered transformation name and not the function name. For example, <code>trans_sampleadt_to_mgw_basic</code> is a stored procedure representing a transformation function with the signature shown in <a href="#i1005674">Example 20-1</a>.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
All commands in the examples must be run as a user granted <code>MGW_ADMINISTRATOR_ROLE</code>, except for the commands to create transformations.</div>
<div id="ADQUE3357" class="example">
<p class="titleinexample"><a id="i1005674"></a>Example 20-1 Transformation Function Signature</p>
<pre>FUNCTION trans_sampleadt_to_mgw_basic(in_msg IN mgwuser.sampleADT)
RETURN SYS.MGW_BASIC_MSG_T;
</pre>
<p>You can create a transformation using <code>DBMS_TRANSFORM.CREATE_TRANSFORMATION</code>, as shown in <a href="#CBBJFDAD">Example 20-2</a>.</p>
</div>
<!-- class="example" -->
<div id="ADQUE3358" class="example">
<p class="titleinexample"><a id="CBBJFDAD"></a>Example 20-2 Creating a Transformation</p>
<pre>BEGIN
  DBMS_TRANSFORM.CREATE_TRANSFORMATION(
        schema         =&gt; &#39;mgwuser&#39;,
        name           =&gt; &#39;sample_adt_to_mgw_basic&#39;,
        from_schema    =&gt; &#39;mgwuser&#39;,
        from_type      =&gt; &#39;sampleadt&#39;,
        to_schema      =&gt; &#39;sys&#39;,
        to_type        =&gt; &#39;MGW_BASIC_MSG_T&#39;,
        transformation =&gt; &#39;mgwuser.trans_sampleadt_to_mgw_basic(user_data)&#39;);
END;
</pre></div>
<!-- class="example" -->
<p>Once created, this transformation can be registered with MGW when creating a propagation job. <a href="#i1005710">Example 20-3</a> creates job <code>job_aq2mq</code>, for whom messages are propagated from Oracle Database Advanced Queuing queue <code>mgwuser.srcq</code> to non-Oracle messaging system queue <code>destq@mqlink</code> using transformation <code>mgwuser.sample_adt_to_mgw_basic</code>.</p>
<div id="ADQUE3359" class="example">
<p class="titleinexample"><a id="i1005710"></a>Example 20-3 Registering a Transformation</p>
<pre>BEGIN
  DBMS_MGWADM.CREATE_JOB(
    job_name          =&gt;   &#39;job_aq2mq&#39;,
    propagation_type  =&gt;    DBMS_MGWADM.OUTBOUND_PROPAGATION,
    source            =&gt;   &#39;mgwuser.srcq&#39;,
    destination       =&gt;   &#39;destq.mqlink&#39;,
    transformation    =&gt;   &#39;mgwuser.sample_adt_to_mgw_basic&#39;,
    exception_queue   =&gt;   &#39;mgwuser.excq&#39;);
END;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;DBMS_MGWADM&#34;, &#34;DBMS_MGWMSG&#34;, and &#34;DBMS_TRANSFORM&#34; in <a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></div>
<p>An error that occurs while attempting a user-defined transformation is usually considered a message conversion exception, and the message is moved to the <a href="glossary.htm#CBAHHGJI"><span class="xrefglossterm">exception queue</span></a> if it exists.</p>
</div>
<!-- class="sect2" -->
<a id="BABBEBHC"></a>
<div id="ADQUE3360" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref1975"></a><a id="sthref1976"></a><a id="sthref1977"></a>Handling Logical Change Records</h3>
<p>MGW provides facilities to propagate Logical Change Records (LCRs). Routines are provided to help in creating transformations to handle the propagation of both row LCRs and DDL LCRs stored in queues with payload type <code>ANYDATA</code>. An LCR is propagated as an XML string stored in the appropriate message type.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For LCR propagation, you must load the XDB package.</div>
<p>Because Oracle Streams uses <code>ANYDATA</code> queues to store LCRs, an <code>ANYDATA</code> queue is the source for outbound propagation. The transformation must first convert the <code>ANYDATA</code> object containing an LCR into an XMLType object using the MGW routine <code>DBMS_MGWMSG.LCR_TO_XML</code>. If the <code>ANYDATA</code> object does not contain an LCR, then this routine raises an error. The XML document string of the LCR is then extracted from the XMLType and placed in the appropriate MGW canonical type (<code>SYS.MGW_BASIC_MSG_T</code> or <code>SYS.MGW_TIBRV_MSG_T</code>).</p>
<p><a href="#BABCGJEH">Example 20-4</a> illustrates a simplified transformation used for LCR outbound propagation. The transformation converts an <code>ANYDATA</code> payload containing an LCR to a <code>SYS.MGW_TIBRV_MSG_T</code> object. The string representing the LCR as an XML document is put in a field named <code>ORACLE_LCR</code>.</p>
<div id="ADQUE3361" class="example">
<p class="titleinexample"><a id="BABCGJEH"></a>Example 20-4 Outbound LCR Transformation</p>
<pre>create or replace function any2tibrv(adata in anydata)
return SYS.MGW_TIBRV_MSG_T is
    v_xml   XMLType;
    v_text  varchar2(2000);
    v_tibrv sys.mgw_tibrv_msg_t;
BEGIN
    v_xml   := dbms_mgwmsg.lcr_to_xml(adata);
    -- assume the lcr is smaller than 2000 characters long.
    v_text  := v_xml.getStringVal();
    v_tibrv := SYS.MGW_TIBRV_MSG_T.CONSTRUCT;
    v_tibrv.add_string(&#39;ORACLE_LCR&#39;, 0, v_text);
    return v_tibrv;
END any2tibrv;
</pre></div>
<!-- class="example" -->
<p>For LCR inbound propagation, an MGW canonical type (<code>SYS.MGW_BASIC_MSG_T</code> or <code>SYS.MGW_TIBRV_MSG_T</code>) is the transformation source type. A string in the format of an XML document representing an LCR must be contained in the canonical type. The transformation function must extract the string from the message, create an XMLType object from it, and convert it to an <code>ANYDATA</code> object containing an LCR with the MGW routine <code>DBMS_MGWMSG.XML_TO_LCR</code>. If the original XML document does not represent an LCR, then this routine raises an error.</p>
<p><a href="#BABDEJAG">Example 20-5</a> illustrates a simplified transformation used for LCR inbound propagation. The transformation converts a <code>SYS.MGW_TIBRV_MSG_T</code> object with a field containing an XML string representing an LCR to an <code>ANYDATA</code> object. The string representing the LCR as an XML document is taken from a field named <code>ORACLE_LCR</code>.</p>
<div id="ADQUE3362" class="example">
<p class="titleinexample"><a id="BABDEJAG"></a>Example 20-5 Inbound LCR Transformation</p>
<pre>create or replace function tibrv2any(tdata in sys.mgw_tibrv_msg_t)
return anydata is 
    v_field   sys.mgw_tibrv_field_t;
    v_xml     XMLType;
    v_text    varchar2(2000);
    v_any     anydata;
BEGIN
    v_field := tdata.get_field_by_name(&#39;ORACLE_LCR&#39;);
    -- type checking
    v_text  := v_field.text_value;
    -- assume it is not null
    v_xml  := XMLType.createXML(v_text);
    v_any  := dbms_mgwmsg.xml_to_lcr(v_xml); 
    return v_any;
END tibrv2any;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>&#34;DBMS_MGWMSG&#34; in <a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</li>
<li>
<p><code><span class="codeinlineitalic">ORACLE_HOME</span></code><code>/mgw/samples/lcr</code> for complete examples of LCR transformations</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006267"></a>
<div id="ADQUE3363" class="sect1">
<h2 class="sect1"><a id="sthref1978"></a><a id="sthref1979"></a><a id="sthref1980"></a>Message Conversion for WebSphere MQ</h2>
<p>MGW converts between the MGW canonical types and the WebSphere MQ native message format. WebSphere MQ native messages consist of a fixed message header and a message body. The message body is treated as either a <code>TEXT</code> value or <code>RAW</code> (bytes) value. The canonical types supported for WebSphere MQ propagation are <code>SYS.MGW_BASIC_MSG_T</code> and <code>RAW</code>.</p>
<div id="ADQUE3364" class="figure">
<p class="titleinfigure"><a id="CBBEIJCA"></a>Figure 20-3 Message Conversion for WebSphere MQ Using MGW_BASIC_MSG_T</p>
<img width="496" height="256" src="img/adqmg005.gif" alt="Description of Figure 20-3 follows"/><br/>
<a id="sthref1981" href="img_text/adqmg005.htm">Description of &#34;Figure 20-3 Message Conversion for WebSphere MQ Using MGW_BASIC_MSG_T&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#CBBEIJCA">Figure 20-3</a> illustrates the message conversion performed by the MGW WebSphere MQ driver when using the canonical type <code>SYS.MGW_BASIC_MSG_T</code>. For outbound propagation, the driver maps the Oracle Database Advanced Queuing message properties and canonical message to a WebSphere MQ message having a fixed header and a message body. For inbound propagation, the driver maps a native message to a set of Oracle Database Advanced Queuing message properties and a canonical message. When the canonical type is <code>RAW</code>, the mappings are the same, except no canonical headers exist.</p>
<a id="i1006320"></a>
<div id="ADQUE3365" class="sect2">
<h3 class="sect2"><a id="sthref1982"></a><a id="sthref1983"></a>WebSphere MQ Message Header Mappings</h3>
<p>When the MGW canonical type used in an outbound propagation job is <code>RAW</code>, no WebSphere MQ header information is set from the <code>RAW</code> message body. Similarly, for inbound propagation no WebSphere MQ header information is preserved in the <code>RAW</code> message body. MGW canonical type <code>SYS.MGW_BASIC_MSG_T</code>, however, has a header that can be used to specify WebSphere MQ header fields for outbound propagation, and preserve WebSphere MQ header fields for inbound propagation.</p>
<p>This section describes the message properties supported for the WebSphere MQ messaging system when using <code>SYS.MGW_BASIC_MSG_T</code> as the canonical type. <a href="#g1011356">Table 20-1</a> defines the MGW {name, value} pairs used to describe the WebSphere MQ header properties. The first column refers to valid string values for the <code>SYS.MGW_NAME_VALUE_T.NAME</code> field in the <code>SYS.MGW_BASIC_MSG_T</code> header. The second column refers to the <code>SYS.MGW_NAME_VALUE_T.TYPE</code> value corresponding to the name. (Refer to <a href="#i1006616">&#34;Notes on Table 20-1&#34;</a> for explanations of the numbers in parentheses.)</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;DBMS_MGWMSG&#34; in <a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></div>
<p>For inbound propagation, the WebSphere MQ driver generates {name,value} pairs based on the source message header and stores them in the header part of the canonical message of the <code>SYS.MGW_BASIC_MSG_T</code> type. For outbound propagation, the WebSphere MQ driver sets the message header and enqueue options from {name,value} pairs for these properties stored in the header part of the <code>SYS.MGW_BASIC_MSG_T</code> canonical message.</p>
<div id="ADQUE3366" class="tblformalwide">
<p class="titleintable"><a id="sthref1984"></a><a id="g1011356"></a>Table 20-1 MGW Names for WebSphere MQ Header Values</p>
<table class="cellalignment1000" title="MGW Names for WebSphere MQ Header Values " summary="Rows correspond to Messaging Gateway names. The first column is the name, the second column is its Messaging Gateway type, the third column is the corresponding WebSphere MQ property name, and the fourth column indicates what it is used for." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t8">MGW Name</th>
<th class="cellalignment1001" id="r1c2-t8">MGW Type</th>
<th class="cellalignment1001" id="r1c3-t8">WebSphere MQ Property Name</th>
<th class="cellalignment1001" id="r1c4-t8">Used For</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_accountingToken
</pre></td>
<td class="cellalignment1002" headers="r2c1-t8 r1c2-t8">
<pre>RAW_VALUE (size 32)
</pre></td>
<td class="cellalignment1002" headers="r2c1-t8 r1c3-t8">
<pre>accountingToken
</pre></td>
<td class="cellalignment1002" headers="r2c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_applicationIdData
</pre></td>
<td class="cellalignment1002" headers="r3c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 32)
</pre></td>
<td class="cellalignment1002" headers="r3c1-t8 r1c3-t8">
<pre>applicationIdData 
</pre></td>
<td class="cellalignment1002" headers="r3c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_applicationOriginData
</pre></td>
<td class="cellalignment1002" headers="r4c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 4)
</pre></td>
<td class="cellalignment1002" headers="r4c1-t8 r1c3-t8">
<pre>applicationOriginData
</pre></td>
<td class="cellalignment1002" headers="r4c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_backoutCount
</pre></td>
<td class="cellalignment1002" headers="r5c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r5c1-t8 r1c3-t8">
<pre>backoutCount
</pre></td>
<td class="cellalignment1002" headers="r5c1-t8 r1c4-t8">
<p>Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_characterSet
</pre></td>
<td class="cellalignment1002" headers="r6c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r6c1-t8 r1c3-t8">
<pre>characterSet
</pre></td>
<td class="cellalignment1002" headers="r6c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_correlationId
</pre></td>
<td class="cellalignment1002" headers="r7c1-t8 r1c2-t8">
<pre>RAW_VALUE (size 24)
</pre></td>
<td class="cellalignment1002" headers="r7c1-t8 r1c3-t8">
<pre>correlationId
</pre></td>
<td class="cellalignment1002" headers="r7c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r8c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_encoding
</pre></td>
<td class="cellalignment1002" headers="r8c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r8c1-t8 r1c3-t8">
<pre>encoding
</pre></td>
<td class="cellalignment1002" headers="r8c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r9c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_expiry
</pre></td>
<td class="cellalignment1002" headers="r9c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r9c1-t8 r1c3-t8">
<pre>expiry
</pre></td>
<td class="cellalignment1002" headers="r9c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r10c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_feedback
</pre></td>
<td class="cellalignment1002" headers="r10c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r10c1-t8 r1c3-t8">
<pre>feedback
</pre></td>
<td class="cellalignment1002" headers="r10c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r11c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_format
</pre></td>
<td class="cellalignment1002" headers="r11c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 8)
</pre></td>
<td class="cellalignment1002" headers="r11c1-t8 r1c3-t8">
<pre>format
</pre></td>
<td class="cellalignment1002" headers="r11c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r12c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_groupId
</pre></td>
<td class="cellalignment1002" headers="r12c1-t8 r1c2-t8">
<pre>RAW_VALUE (size 24)
</pre></td>
<td class="cellalignment1002" headers="r12c1-t8 r1c3-t8">
<pre>groupId
</pre></td>
<td class="cellalignment1002" headers="r12c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r13c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_messageFlags
</pre></td>
<td class="cellalignment1002" headers="r13c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r13c1-t8 r1c3-t8">
<pre>messageFlags
</pre></td>
<td class="cellalignment1002" headers="r13c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r14c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_messageId
</pre></td>
<td class="cellalignment1002" headers="r14c1-t8 r1c2-t8">
<pre>RAW_VALUE (size 24)
</pre></td>
<td class="cellalignment1002" headers="r14c1-t8 r1c3-t8">
<pre>messageId
</pre></td>
<td class="cellalignment1002" headers="r14c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r15c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_messageSequenceNumber
</pre></td>
<td class="cellalignment1002" headers="r15c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r15c1-t8 r1c3-t8">
<pre>messageSequenceNumber
</pre></td>
<td class="cellalignment1002" headers="r15c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r16c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_messageType
</pre></td>
<td class="cellalignment1002" headers="r16c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r16c1-t8 r1c3-t8">
<pre>messageType
</pre></td>
<td class="cellalignment1002" headers="r16c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r17c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_offset
</pre></td>
<td class="cellalignment1002" headers="r17c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r17c1-t8 r1c3-t8">
<pre>offset
</pre></td>
<td class="cellalignment1002" headers="r17c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r18c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_originalLength
</pre></td>
<td class="cellalignment1002" headers="r18c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r18c1-t8 r1c3-t8">
<pre>originalLength
</pre></td>
<td class="cellalignment1002" headers="r18c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r19c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_persistence
</pre></td>
<td class="cellalignment1002" headers="r19c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r19c1-t8 r1c3-t8">
<pre>persistence
</pre></td>
<td class="cellalignment1002" headers="r19c1-t8 r1c4-t8">
<p>Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r20c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_priority
</pre></td>
<td class="cellalignment1002" headers="r20c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r20c1-t8 r1c3-t8">
<pre>priority
</pre></td>
<td class="cellalignment1002" headers="r20c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r21c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_putApplicationName
</pre></td>
<td class="cellalignment1002" headers="r21c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 28)
</pre></td>
<td class="cellalignment1002" headers="r21c1-t8 r1c3-t8">
<pre>putApplicationName
</pre></td>
<td class="cellalignment1002" headers="r21c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r22c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_putApplicationType
</pre></td>
<td class="cellalignment1002" headers="r22c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r22c1-t8 r1c3-t8">
<pre>putApplicationType
</pre></td>
<td class="cellalignment1002" headers="r22c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r23c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_putDateTime
</pre></td>
<td class="cellalignment1002" headers="r23c1-t8 r1c2-t8">
<pre>DATE_VALUE
</pre></td>
<td class="cellalignment1002" headers="r23c1-t8 r1c3-t8">
<pre>putDateTime
</pre></td>
<td class="cellalignment1002" headers="r23c1-t8 r1c4-t8">
<p>Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r24c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_putMessageOptions
</pre></td>
<td class="cellalignment1002" headers="r24c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r24c1-t8 r1c3-t8">
<pre>putMessageOptions
</pre></td>
<td class="cellalignment1002" headers="r24c1-t8 r1c4-t8">
<p>Outbound (1) (2)</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r25c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_replyToQueueManagerName
</pre></td>
<td class="cellalignment1002" headers="r25c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 48)
</pre></td>
<td class="cellalignment1002" headers="r25c1-t8 r1c3-t8">
<pre>replyToQueueManagerName
</pre></td>
<td class="cellalignment1002" headers="r25c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r26c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_replyToQueueName
</pre></td>
<td class="cellalignment1002" headers="r26c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 48)
</pre></td>
<td class="cellalignment1002" headers="r26c1-t8 r1c3-t8">
<pre>replyToQueueName
</pre></td>
<td class="cellalignment1002" headers="r26c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r27c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_report
</pre></td>
<td class="cellalignment1002" headers="r27c1-t8 r1c2-t8">
<pre>INTEGER_VALUE
</pre></td>
<td class="cellalignment1002" headers="r27c1-t8 r1c3-t8">
<pre>report
</pre></td>
<td class="cellalignment1002" headers="r27c1-t8 r1c4-t8">
<p>Outbound (1), Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r28c1-t8" headers="r1c1-t8">
<pre>MGW_MQ_userId
</pre></td>
<td class="cellalignment1002" headers="r28c1-t8 r1c2-t8">
<pre>TEXT_VALUE (size 12)
</pre></td>
<td class="cellalignment1002" headers="r28c1-t8 r1c3-t8">
<pre>userId
</pre></td>
<td class="cellalignment1002" headers="r28c1-t8 r1c4-t8">
<p>Outbound, Inbound</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p class="subhead1"><a id="i1006616"></a><a id="ADQUE3367"></a>Notes on <a href="#g1011356">Table 20-1</a></p>
<ol>
<li>
<p>This use is subject to WebSphere MQ restrictions. For example, if <code>MGW_MQ_accountingToken</code> is set for an outgoing message, then WebSphere MQ overrides its value unless <code>MGW_MQ_putMessageOptions</code> is set to the WebSphere MQ constant <code>MQPMD_SET_ALL_CONTEXT</code>.</p>
</li>
<li id="i1006631">
<p><code>MGW_MQ_putMessageOptions</code> is used as the <code>putMessageOptions</code> argument to the WebSphere MQ Base Java <code>Queue.put()</code> method. It is not part of the WebSphere MQ header information and is therefore not an actual message property.</p>
<p>The value for the <code>openOptions</code> argument of the WebSphere MQ Base Java <code>MQQueueManager.accessQueue</code> method is specified when the WebSphere MQ queue is registered using the <code>DBMS_MGWADM.REGISTER_FOREIGN_QUEUE</code> call. Dependencies can exist between the two. For instance, for <code>MGW_MQ_putMessageOptions</code> to include <code>MQPMD_SET_ALL_CONTEXT,</code> <code>the MQ_openMessageOptions</code> queue option must include <code>MQOO_SET_CONTEXT</code>.</p>
<p>The MGW agent adds the value <code>MQPMO_SYNCPOINT</code> to any value that you can specify.</p>
</li>
</ol>
<p>MGW sets default values for two WebSphere MQ message header fields: <code>messageType</code> defaults to <code>MQMT_DATAGRAM</code> and <code>putMessageOptions</code> defaults to <code>MQPMO_SYNCPOINT</code>.</p>
<p>MGW provides two default mappings between Oracle Database Advanced Queuing message properties and WebSphere MQ header fields.</p>
<p>One maps the Oracle Database Advanced Queuing message property <code>expiration</code>, representing the time-to-live of the message at the time the message becomes available in the queue, to the WebSphere MQ header field <code>expiry</code>, representing the time-to-live of the message. For outbound propagation, the value used for <code>expiry</code> is determined by subtracting the time the message was available in the queue from the <code>expiration</code>, converted to tenths of a second. Oracle Database Advanced Queuing value <code>NEVER</code> is mapped to <code>MQEI_UNLIMITED</code>. For inbound propagation, the value of <code>expiration</code> is simply <code>expiry</code> converted to seconds. WebSphere MQ value <code>MQEI_UNLIMITED</code> is mapped to <code>NEVER</code>.</p>
<p>The other default maps Oracle Database Advanced Queuing message property <code>priority</code> with the WebSphere MQ header field <code>priority</code>. It is described in <a href="#BABFCEIH">Table 20-2</a>.</p>
<div id="ADQUE3368" class="tblformal">
<p class="titleintable"><a id="sthref1985"></a><a id="BABFCEIH"></a>Table 20-2 Default Priority Mappings for Propagation</p>
<table class="cellalignment1005" title="Default Priority Mappings for Propagation" summary="The first column is propagation type, the second column is messaging system, and the third through twelfth columns are the corresponding priority values." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t9">Propagation Type</th>
<th class="cellalignment1001" id="r1c2-t9">Message System</th>
<th class="cellalignment1008" id="r1c3-t9" colspan="10">Priority Values</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t9" headers="r1c1-t9">
<p>Outbound</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c2-t9">
<p>Oracle Database Advanced Queuing</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>0</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>1</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>2</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>3</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>4</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>5</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>6</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>7</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>8</p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c3-t9">
<p>9</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t9" headers="r1c1-t9">
<p>Outbound</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c2-t9">
<p>WebSphere MQ</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>9</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>8</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>7</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>6</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>5</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>4</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>3</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>2</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>1</p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c3-t9">
<p>0</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t9" headers="r1c1-t9">
<p>Inbound</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c2-t9">
<p>Oracle Database Advanced Queuing</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>9</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>8</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>7</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>6</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>5</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>4</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>3</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>2</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>1</p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c3-t9">
<p>0</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t9" headers="r1c1-t9">
<p>Inbound</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c2-t9">
<p>WebSphere MQ</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>0</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>1</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>2</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>3</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>4</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>5</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>6</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>7</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>8</p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c3-t9">
<p>9</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
For outbound propagation, Oracle Database Advanced Queuing priority values less than 0 are mapped to WebSphere MQ priority 9, and Oracle Database Advanced Queuing priority values greater than 9 are mapped to WebSphere MQ priority 0.</div>
</div>
<!-- class="sect2" -->
<a id="BABCGIFJ"></a>
<div id="ADQUE3369" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref1986"></a><a id="sthref1987"></a>WebSphere MQ Outbound Propagation</h3>
<p>If no message transformation is provided for outbound propagation, then the Oracle Database Advanced Queuing source queue payload type must be either <code>SYS.MGW_BASIC_MSG_T</code> or <code>RAW</code>. If a message transformation is specified, then the target ADT of the transformation must be <code>SYS.MGW_BASIC_MSG_T</code>, but the source ADT can be any ADT supported by Oracle Database Advanced Queuing.</p>
<p>If the Oracle Database Advanced Queuing queue payload is RAW, then the resulting WebSphere MQ message has the message body set to the value of the RAW bytes and, by default, the <code>format</code> field set to the value &#34;<code>MGW_Byte</code>&#34;.</p>
<p>If the Oracle Database Advanced Queuing queue payload or transformation target ADT is <code>SYS.MGW_BASIC_MSG_T</code>, then the message is mapped to a WebSphere MQ native message as follows:</p>
<ul>
<li>
<p>The WebSphere MQ fixed header fields are based on the internal Oracle Database Advanced Queuing message properties and the <code>SYS.MGW_BASIC_MSG_T.header</code> attribute of the canonical message, as described in <a href="#i1006320">&#34;WebSphere MQ Message Header Mappings&#34;</a>.</p>
</li>
<li>
<p>If the canonical message has a <code>TEXT</code> body, then the WebSphere MQ format header field is set to <code>MQFMT_STRING</code> unless overridden by the header property <code>MGW_MQ_format</code>. The message body is treated as text.</p>
</li>
<li>
<p>If the canonical message has a <code>RAW</code> body, then the WebSphere MQ format header field is set to &#34;<code>MGW_Byte</code>&#34; unless overridden by the header property <code>MGW_MQ_format</code>. The message body is treated as raw bytes.</p>
</li>
<li>
<p>If the canonical message has both a <code>TEXT</code> and <code>RAW</code> body, then message conversion fails.</p>
</li>
<li>
<p>If the canonical message has neither a <code>TEXT</code> nor <code>RAW</code> body, then no message body is set, and the WebSphere MQ format header field is <code>MQFMT_NONE</code>.</p>
</li>
<li>
<p>If the canonical message has a <code>TEXT</code> body with both small and large values set (<code>SYS.MGW_BASIC_MSG_T.TEXT_BODY.small_value</code> and <code>SYS.MGW_BASIC_MSG_T.TEXT_BODY.large_value</code> not empty), then message conversion fails.</p>
</li>
<li>
<p>If the canonical message has a <code>RAW</code> body with both small and large values set (<code>SYS.MGW_BASIC_MSG_T.RAW_BODY.small_value</code> and <code>SYS.MGW_BASIC_MSG_T.RAW_BODY.large_value</code> not empty), then message conversion fails.</p>
</li>
</ul>
<p>If the job option <code>PreserveMessageID</code> is specified with a value of <code>TRUE</code>, then the <code>correlationId</code> field of the WebSphere message header will be set to the AQ source message identifier. The <code>correlationId</code> value will be a 24-byte value of the form <code>&#34;AQMSGID:&#34;+</code><code><span class="codeinlineitalic">AQ_msgid</span></code> where <code><span class="codeinlineitalic">AQ_msgid</span></code> represents the 16-byte Database AQ message identifier.</p>
</div>
<!-- class="sect2" -->
<a id="BABGDGDD"></a>
<div id="ADQUE3370" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref1988"></a><a id="sthref1989"></a>WebSphere MQ Inbound Propagation</h3>
<p>If no message transformation is provided for inbound propagation, then the Oracle Database Advanced Queuing destination queue payload type must be either <code>SYS.MGW_BASIC_MSG_T</code> or <code>RAW</code>. If a message transformation is specified, then the source ADT of the transformation must be <code>SYS.MGW_BASIC_MSG_T</code>, but the destination ADT can be any ADT supported by Oracle Database Advanced Queuing.</p>
<p>If the Oracle Database Advanced Queuing queue payload is <code>RAW</code> and the incoming WebSphere MQ message has a <code>format</code> of <code>MQFMT_STRING</code>, then message conversion fails. Otherwise the message body is considered as raw bytes and enqueued directly to the destination queue. If the number of bytes is greater than 32KB, then message conversion fails. The actual limit is 32512 bytes rather than 32767 bytes.</p>
<p>If the Oracle Database Advanced Queuing queue payload or transformation source ADT is <code>SYS.MGW_BASIC_MSG_T</code>, then the WebSphere MQ message is mapped to a <code>SYS.MGW_BASIC_MSG_T</code> message as follows:</p>
<ul>
<li>
<p>Specific WebSphere MQ header fields are mapped to Oracle Database Advanced Queuing message properties as previously described.</p>
</li>
<li>
<p>The <code>SYS.MGW_BASIC_MSG_T.header</code> attribute of the canonical message is set to {name, value} pairs based on the WebSphere MQ header fields, as described in <a href="#g1011356">Table 20-1</a>. These values preserve the original content of the WebSphere MQ message header.</p>
</li>
<li>
<p>If the WebSphere MQ <code>format</code> header field is <code>MQFMT_STRING</code>, then the WebSphere MQ message body is treated as text, and its value is mapped to <code>SYS.MGW_BASIC_MSG_T.text_body</code>. For any other <code>format</code> value, the message body is treated as raw bytes, and its value is mapped to <code>SYS.MGW_BASIC_MSG_T.raw_body</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006320">&#34;WebSphere MQ Message Header Mappings&#34;</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007109"></a>
<div id="ADQUE3371" class="sect1">
<h2 class="sect1"><a id="sthref1990"></a><a id="sthref1991"></a><a id="sthref1992"></a>Message Conversion for TIB/Rendezvous</h2>
<p>MGW regards a TIB/Rendezvous message as a set of fields and supplementary information. <a href="#i1007171">Figure 20-4</a> shows how messages are converted between MGW and TIB/Rendezvous.</p>
<div id="ADQUE3372" class="figure">
<p class="titleinfigure"><a id="i1007171"></a>Figure 20-4 Message Conversion for TIB/Rendezvous</p>
<img width="464" height="176" src="img/adque447.gif" alt="Description of Figure 20-4 follows"/><br/>
<a id="sthref1993" href="img_text/adque447.htm">Description of &#34;Figure 20-4 Message Conversion for TIB/Rendezvous&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>When a message conversion failure occurs, messages are moved to an exception queue (if one has been provided), so that MGW can continue propagation of the remaining messages in the source queue. In inbound propagation from TIB/Rendezvous, an exception queue is a registered subject.</p>
<p>All TIB/Rendezvous wire format datatypes for TIB/Rendezvous fields are supported, except for the datatypes with unsigned integers and the nested message type. User-defined custom datatypes are not supported in this release. If a message contains data of the unsupported datatypes, then a message conversion failure occurs when the message is processed. A message conversion failure results in moving the failed message from the source queue to the exception queue, if an exception queue is provided.</p>
<p><a href="#BABECCJE">Table 20-3</a> shows the datatype mapping used when MGW converts between a native TIB/Rendezvous message and the canonical ADT. For each supported TIB/Rendezvous wire format type, it shows the Oracle type used to store the data and the <code>DBMS_MGWMSG</code> constant that represents that type.</p>
<div id="ADQUE3373" class="tblformal">
<p class="titleintable"><a id="sthref1994"></a><a id="BABECCJE"></a>Table 20-3 TIB/Rendezvous Datatype Mapping</p>
<table class="cellalignment1005" title="TIB/Rendezvous Datatype Mapping" summary="The first column is the TIB/Rendezvous Wire Format, the second column is the corresponding Oracle Type, and the third column is the corresponding ADT Field Type." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t12">TIB/Rendezvous Wire Format</th>
<th class="cellalignment1001" id="r1c2-t12">Oracle Type</th>
<th class="cellalignment1001" id="r1c3-t12">ADT Field Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t12" headers="r1c1-t12">
<p><code>Bool</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t12 r1c3-t12">
<p><code>TIBRVMSG_BOOL</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t12" headers="r1c1-t12">
<p><code>F32</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t12 r1c3-t12">
<p><code>TIBRVMSG_F32</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t12" headers="r1c1-t12">
<p><code>F64</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t12 r1c3-t12">
<p><code>TIBRVMSG_F64</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t12" headers="r1c1-t12">
<p><code>I8</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I8</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t12" headers="r1c1-t12">
<p><code>I16</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I16</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t12" headers="r1c1-t12">
<p><code>I32</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I32</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r8c1-t12" headers="r1c1-t12">
<p><code>I64</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I64</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r9c1-t12" headers="r1c1-t12">
<p><code>U8</code></p>
</td>
<td class="cellalignment1002" headers="r9c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r9c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r10c1-t12" headers="r1c1-t12">
<p><code>U16</code></p>
</td>
<td class="cellalignment1002" headers="r10c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r10c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r11c1-t12" headers="r1c1-t12">
<p><code>U32</code></p>
</td>
<td class="cellalignment1002" headers="r11c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r11c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r12c1-t12" headers="r1c1-t12">
<p><code>U64</code></p>
</td>
<td class="cellalignment1002" headers="r12c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r12c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r13c1-t12" headers="r1c1-t12">
<p><code>IPADDR32</code></p>
</td>
<td class="cellalignment1002" headers="r13c1-t12 r1c2-t12">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment1002" headers="r13c1-t12 r1c3-t12">
<p><code>TIBRVMSG_IPADDR32</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r14c1-t12" headers="r1c1-t12">
<p><code>IPPORT16</code></p>
</td>
<td class="cellalignment1002" headers="r14c1-t12 r1c2-t12">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1002" headers="r14c1-t12 r1c3-t12">
<p><code>TIBRVMSG_IPPORT16</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r15c1-t12" headers="r1c1-t12">
<p><code>DATETIME</code></p>
</td>
<td class="cellalignment1002" headers="r15c1-t12 r1c2-t12">
<p><code>DATE</code></p>
</td>
<td class="cellalignment1002" headers="r15c1-t12 r1c3-t12">
<p><code>TIBRVMSG_DATETIME</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r16c1-t12" headers="r1c1-t12">
<p><code>F32ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r16c1-t12 r1c2-t12">
<p><code>SYS.MGW_NUMBER_ARRAY_T</code></p>
</td>
<td class="cellalignment1002" headers="r16c1-t12 r1c3-t12">
<p><code>TIBRVMSG_F32ARRAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r17c1-t12" headers="r1c1-t12">
<p><code>F64ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r17c1-t12 r1c2-t12">
<p><code>SYS.MGW_NUMBER_ARRAY_T</code></p>
</td>
<td class="cellalignment1002" headers="r17c1-t12 r1c3-t12">
<p><code>TIBRVMSG_F64ARRAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r18c1-t12" headers="r1c1-t12">
<p><code>I8ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r18c1-t12 r1c2-t12">
<p><code>SYS.MGW_NUMBER_ARRAY_T</code></p>
</td>
<td class="cellalignment1002" headers="r18c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I8ARRAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r19c1-t12" headers="r1c1-t12">
<p><code>I16ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r19c1-t12 r1c2-t12">
<p><code>SYS.MGW_NUMBER_ARRAY_T</code></p>
</td>
<td class="cellalignment1002" headers="r19c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I16ARRAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r20c1-t12" headers="r1c1-t12">
<p><code>I32ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r20c1-t12 r1c2-t12">
<p><code>SYS.MGW_NUMBER_ARRAY_T</code></p>
</td>
<td class="cellalignment1002" headers="r20c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I32ARRAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r21c1-t12" headers="r1c1-t12">
<p><code>I64ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r21c1-t12 r1c2-t12">
<p><code>SYS.MGW_NUMBER_ARRAY_T</code></p>
</td>
<td class="cellalignment1002" headers="r21c1-t12 r1c3-t12">
<p><code>TIBRVMSG_I64ARRAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r22c1-t12" headers="r1c1-t12">
<p><code>U8ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r22c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r22c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r23c1-t12" headers="r1c1-t12">
<p><code>U16ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r23c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r23c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r24c1-t12" headers="r1c1-t12">
<p><code>U32ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r24c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r24c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r25c1-t12" headers="r1c1-t12">
<p><code>U64ARRAY</code></p>
</td>
<td class="cellalignment1002" headers="r25c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r25c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r26c1-t12" headers="r1c1-t12">
<p><code>MSG</code></p>
</td>
<td class="cellalignment1002" headers="r26c1-t12 r1c2-t12">
<p>not supported</p>
</td>
<td class="cellalignment1002" headers="r26c1-t12 r1c3-t12">
<p>not supported</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r27c1-t12" headers="r1c1-t12">
<p><code>OPAQUE</code></p>
</td>
<td class="cellalignment1002" headers="r27c1-t12 r1c2-t12">
<p><code>RAW</code> or <code>BLOB</code></p>
</td>
<td class="cellalignment1002" headers="r27c1-t12 r1c3-t12">
<p><code>TIBRVMSG_OPAQUE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r28c1-t12" headers="r1c1-t12">
<p><code>STRING</code></p>
</td>
<td class="cellalignment1002" headers="r28c1-t12 r1c2-t12">
<p><code>VARCHAR2</code> or <code>CLOB</code></p>
</td>
<td class="cellalignment1002" headers="r28c1-t12 r1c3-t12">
<p><code>TIBRVMSG_STRING</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r29c1-t12" headers="r1c1-t12">
<p><code>XML</code></p>
</td>
<td class="cellalignment1002" headers="r29c1-t12 r1c2-t12">
<p><code>RAW</code> or <code>BLOB</code></p>
</td>
<td class="cellalignment1002" headers="r29c1-t12 r1c3-t12">
<p><code>TIBRVMSG_XML</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>For propagation between Oracle Database Advanced Queuing and TIB/Rendezvous, MGW provides direct support for the Oracle Database Advanced Queuing payload types <code>RAW</code> and <code>SYS.MGW_TIBRV_MSG_T</code>. To support any other Oracle Database Advanced Queuing payload type, you must supply a transformation.</p>
<div id="ADQUE3374" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1995"></a>
<h3 class="sect2"><a id="sthref1996"></a><a id="sthref1997"></a>AQ Message Property Mapping for TIB/Rendezvous</h3>
<p>This section describes the mapping between Oracle Database AQ message properties and TIB/Rendezvous fields. This mapping is used to preserve Database AQ message properties during outbound propagation, and set Database AQ message properties during inbound propagation.</p>
<p><a href="#g1011586">Table 20-4</a> describes the Database AQ message properties supported using TIB/Rendezvous fields. The first column indicates the <code>DBMS_AQ.MESSAGE_PROPERTIES_T</code> field for the Database AQ message property. The second and third columns indicate the name and datatype used for the TIB/Rendezvous field. The last column indicates if the message property is supported for inbound and outbound propagation.</p>
<div id="ADQUE3375" class="tblformalwide">
<p class="titleintable"><a id="sthref1998"></a><a id="g1011586"></a>Table 20-4 TIB/Rendezvous and MGW Names for Oracle Database Advanced Queuing Message Properties</p>
<table class="cellalignment1000" title="TIB/Rendezvous and MGW Names for Oracle Database Advanced Queuing Message Properties" summary="Rows correspond to Oracle Streams AQ message properties. The first column is the message property name, the second column is the corresponding Messaging Gateway name, the third column is the corresponding TIB/Rendezvous wire format datatype, and the fourth column indicates what it is used for." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t13">Oracle Database Advanced Queuing Message Property</th>
<th class="cellalignment1001" id="r1c2-t13">MGW Name</th>
<th class="cellalignment1001" id="r1c3-t13">TIB/Rendezvous Wire Format Datatype</th>
<th class="cellalignment1001" id="r1c4-t13">Used For</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t13" headers="r1c1-t13">
<p><code>priority</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t13 r1c2-t13">
<p><code>MGW_AQ_priority</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t13 r1c3-t13">
<p><code>TibrvMsg.I32</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t13 r1c4-t13">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t13" headers="r1c1-t13">
<p><code>expiration</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t13 r1c2-t13">
<p><code>MGW_AQ_expiration</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t13 r1c3-t13">
<p><code>TibrvMsg.I32</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t13 r1c4-t13">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t13" headers="r1c1-t13">
<p><code>delay</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t13 r1c2-t13">
<p><code>MGW_AQ_delay</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t13 r1c3-t13">
<p><code>TibrvMsg.I32</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t13 r1c4-t13">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t13" headers="r1c1-t13">
<p><code>correlation</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t13 r1c2-t13">
<p><code>MGW_AQ_correlation</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t13 r1c3-t13">
<p><code>TibrvMsg.STRING</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t13 r1c4-t13">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t13" headers="r1c1-t13">
<p><code>exception_queue</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t13 r1c2-t13">
<p><code>MGW_AQ_exception_queue</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t13 r1c3-t13">
<p><code>TibrvMsg.STRING</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t13 r1c4-t13">
<p>Outbound, Inbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t13" headers="r1c1-t13">
<p><code>enqueue_time</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t13 r1c2-t13">
<p><code>MGW_AQ_enqueue_time</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t13 r1c3-t13">
<p><code>TibrvMsg.DATETIME</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t13 r1c4-t13">
<p>Outbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r8c1-t13" headers="r1c1-t13">
<p><code>original_msgid</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t13 r1c2-t13">
<p><code>MGW_AQ_original_msgid</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t13 r1c3-t13">
<p><code>TibrvMsg.OPAQUE</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t13 r1c4-t13">
<p>Outbound</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r9c1-t13" headers="r1c1-t13">
<p><code>msgid</code> (1)</p>
</td>
<td class="cellalignment1002" headers="r9c1-t13 r1c2-t13">
<p><code>MGW_AQ_messageID</code></p>
</td>
<td class="cellalignment1002" headers="r9c1-t13 r1c3-t13">
<p><code>TibrvMsg.OPAQUE</code></p>
</td>
<td class="cellalignment1002" headers="r9c1-t13 r1c4-t13">
<p>Outbound</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p class="subhead1"><a id="ADQUE3376"></a>Notes on <a href="#g1011586">Table 20-4</a>:</p>
<ol>
<li>
<p>The <code>msgid</code> Database AQ property represents the Database AQ message identifier, rather than a particular field of the <code>DBMS_AQ.MESSAGE_PROPERTIES_T</code> record.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div id="ADQUE3377" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1999"></a>
<h3 class="sect2"><a id="sthref2000"></a><a id="sthref2001"></a>TIB/Rendezvous Outbound Propagation</h3>
<p>If no propagation transformation is provided for outbound propagation, then the Oracle Database Advanced Queuing source queue payload type must be either <code>SYS.MGW_TIBRV_MSG_T</code> or <code>RAW</code>. If a propagation transformation is specified, then the target ADT of the transformation must be <code>SYS.MGW_TIBRV_MSG_T</code>, but the source ADT can be any ADT supported by Oracle Database Advanced Queuing.</p>
<p>If the Oracle Database Advanced Queuing queue payload or transformation target ADT is <code>SYS.MGW_TIBRV_MSG_T</code>, then:</p>
<ul>
<li>
<p>Every field in the source message is converted to a TIB/Rendezvous message field of the resulting TIB/Rendezvous message.</p>
</li>
<li>
<p>If the <code>reply_subject</code> attribute is not <code>NULL</code>, then the reply subject supplementary information is set.</p>
</li>
<li>
<p>The <code>send_subject</code> field is ignored.</p>
</li>
</ul>
<p>If the Oracle Database Advanced Queuing queue payload is <code>RAW</code>, then:</p>
<ul>
<li>
<p>The resulting message contains a field named <code>MGW_RAW_MSG</code> with value <code>TibrvMsg.OPAQUE</code>. The field ID is set to 0.</p>
</li>
</ul>
<p>If the job option <code>AQ_MsgProperties</code> is specified with a value of <code>TRUE</code>, then the MGW agent generates fields to preserve the Database AQ message properties in the TIB/Rendezvous message according to <a href="#g1011586">Table 20-4</a>.</p>
<p>If the <code>PreserveMessageID</code> job option is specified with a value of <code>TRUE</code>, then the Database AQ message identifier (<code>msgid</code>) is preserved in the TIB/Rendezvous message according to <a href="#g1011586">Table 20-4</a>.</p>
</div>
<!-- class="sect2" -->
<div id="ADQUE3378" class="sect2"><a id="sthref2002"></a>
<h3 class="sect2"><a id="sthref2003"></a><a id="sthref2004"></a>TIB/Rendezvous Inbound Propagation</h3>
<p>If no propagation transformation is provided for inbound propagation, then the Oracle Database Advanced Queuing destination queue payload type must be either <code>RAW</code> or <code>SYS.MGW_TIBRV_MSG_T</code>. If a propagation transformation is specified, then the target ADT of the transformation can be any ADT supported by Oracle Database Advanced Queuing, but the source ADT of the transformation must be <code>SYS.MGW_TIBRV_MSG_T</code>.</p>
<p>If the Oracle Database Advanced Queuing queue payload or transformation source ADT is <code>SYS.MGW_TIBRV_MSG_T</code>, then:</p>
<ul>
<li>
<p>Every field in the source TIB/Rendezvous message is converted to a field of the resulting message of the <code>SYS.MGW_TIBRV_MSG_T</code> type.</p>
</li>
<li>
<p>The MGW agent extracts the send subject name from the source TIB/Rendezvous message and sets the <code>send_subject</code> attribute in <code>SYS.MGW_TIBRV_MSG_T</code>. The send subject name is usually the same as the subject name of the registered propagation source queue, but it might be different when wildcards are used.</p>
</li>
<li>
<p>The MGW agent extracts the reply subject name from the source TIB/Rendezvous message, if it exists, and sets the <code>reply_subject</code> attribute in <code>SYS.MGW_TIBRV_MSG_T</code>.</p>
</li>
<li>
<p>If the source TIB/Rendezvous message contains more than three large text fields (greater than 4000 bytes of text) or more than three large bytes fields (greater than 2000 bytes), then message conversion fails.</p>
</li>
</ul>
<p>If the Oracle Database Advanced Queuing queue payload is <code>RAW</code>, then:</p>
<ul>
<li>
<p>The Oracle Database Advanced Queuing message payload is the field data if the source TIB/Rendezvous message has a field named <code>MGW_RAW_MSG</code> of type <code>TibrvMsg.OPAQUE</code> or <code>TibrvMsg.XML</code>. The field name and ID are ignored. If no such field exists or has an unexpected type, then a message conversion failure occurs.</p>
</li>
<li>
<p>A message conversion failure occurs if the <code>RAW</code> data size is greater than 32KB. This is due to a restriction on the data size allowed for a bind variable. Also, the actual limit is 32512 rather than 32767.</p>
</li>
</ul>
<p>If the job option <code>AQ_MsgProperties</code> is specified with a value of <code>TRUE</code>, then the MGW agent searches for fields in the original TIB/Rendezvous messages with reserved field names. <a href="#g1011586">Table 20-4</a> shows the field name strings and the corresponding values used in the TIB/Rendezvous message.</p>
<p>If such fields exist, then the MGW agent uses the field value to set the corresponding Oracle Database Advanced Queuing message properties, instead of using the default values. If there is more than one such field with the same name, then only the first one is used. Such fields are removed from the resulting payload only if the Oracle Database Advanced Queuing queue payload is <code>RAW</code>. If a field with the reserved name does not have the expected datatype, then it causes a message conversion failure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;DBMS_MGWMSG&#34; in <a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for the value datatypes</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007453"></a>
<div id="ADQUE3379" class="sect1">
<h2 class="sect1"><a id="sthref2005"></a><a id="sthref2006"></a><a id="sthref2007"></a>JMS Messages</h2>
<p>MGW propagates only JMS messages between Oracle JMS and non-Oracle JMS systems, without changing the message content. <a href="#i1007470">Figure 20-5</a> shows JMS message propagation.</p>
<p>MGW supports only the standard JMS message types. It does not support:</p>
<ul>
<li>
<p>JMS provider extensions, because any such extensions would not be recognized by the destination JMS system. An attempt to propagate any such non-JMS message results in an error.</p>
</li>
<li>
<p>User transformations for JMS propagation.</p>
</li>
<li>
<p>Propagation of Logical Change Records (LCRs).</p>
</li>
</ul>
<div id="ADQUE3380" class="figure">
<p class="titleinfigure"><a id="i1007470"></a>Figure 20-5 JMS Message Propagation</p>
<img width="600" height="216" src="img/adque450.gif" alt="Description of Figure 20-5 follows"/><br/>
<a id="sthref2008" href="img_text/adque450.htm">Description of &#34;Figure 20-5 JMS Message Propagation&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>For the purposes of this discussion, a JMS message is a Java object of a class that implements one of the five JMS message interfaces. <a href="#g1011642">Table 20-5</a> shows the JMS message interfaces and the corresponding Oracle JMS ADTs. The table also shows the interface, <code>javax.jms.Message</code>, which can be any one of the five specific types, and the corresponding generic Oracle JMS type <code>SYS.AQ$_JMS_MESSAGE</code>.</p>
<div id="ADQUE3381" class="tblformal">
<p class="titleintable"><a id="sthref2009"></a><a id="g1011642"></a>Table 20-5 Oracle JMS Message Conversion</p>
<table class="cellalignment1005" title="Oracle JMS Message Conversion" summary="The first column lists JMS message types, and the second column lists corresponding ADT message types." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t15">JMS Message</th>
<th class="cellalignment1001" id="r1c2-t15">ADT</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t15" headers="r1c1-t15">
<p><code>javax.jms.TextMessage</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t15 r1c2-t15">
<p><code>SYS.AQ$_JMS_TEXT_MESSAGE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t15" headers="r1c1-t15">
<p><code>javax.jms.BytesMessage</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t15 r1c2-t15">
<p><code>SYS.AQ$_JMS_BYTES_MESSAGE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t15" headers="r1c1-t15">
<p><code>javax.jms.MapMessage</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t15 r1c2-t15">
<p><code>SYS.AQ$_JMS_MAP_MESSAGE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t15" headers="r1c1-t15">
<p><code>javax.jms.StreamMessage</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t15 r1c2-t15">
<p><code>SYS.AQ$_JMS_STREAM_MESSAGE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t15" headers="r1c1-t15">
<p><code>javax.jms.ObjectMessage</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t15 r1c2-t15">
<p><code>SYS.AQ$_JMS_OBJECT_MESSAGE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t15" headers="r1c1-t15">
<p><code>javax.jms.Message</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t15 r1c2-t15">
<p><code>SYS.AQ$_JMS_MESSAGE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>When a propagation job is activated, the MGW agent checks the Oracle Database Advanced Queuing payload type for the propagation source or destination. If the type is one of those listed in <a href="#g1011642">Table 20-5</a> or <code>ANYDATA</code>, then message propagation is attempted. Otherwise an exception is logged and propagation is not attempted.</p>
<p>The MGW agent may add a JMS <code>String</code> property named <code>OracleMGW_OriginalMessageID</code> to the JMS message sent to the destination queue in order to preserve the original message identifier of the source message. This property is added if the <code>PreserveMessageID</code> job option is specified with a value of <code>TRUE</code>. It will also be added for any message moved to an exception queue upon a message conversion failure.</p>
<div id="ADQUE3382" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2010"></a>
<h3 class="sect2"><a id="sthref2011"></a><a id="sthref2012"></a>JMS Outbound Propagation</h3>
<p>When dequeuing a message from an Oracle Database Advanced Queuing queue, Oracle JMS converts instances of the ADTs shown in <a href="#g1011642">Table 20-5</a> into JMS messages. In addition it can convert instances of <code>ANYDATA</code> into JMS messages, depending on the content.</p>
<p>A queue with payload type <code>ANYDATA</code> can hold messages that do not map to a JMS message. MGW fails to dequeue such a message. An error is logged and propagation of messages from that queue does not continue until the message is removed.</p>
</div>
<!-- class="sect2" -->
<div id="ADQUE3383" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2013"></a>
<h3 class="sect2"><a id="sthref2014"></a><a id="sthref2015"></a>JMS Inbound Propagation</h3>
<p>Every message successfully dequeued using WebSphere MQ JMS is a JMS message. No message conversion is necessary prior to enqueuing using Oracle JMS. However, if the payload ADT of the propagation destination does not accept the type of the inbound message, then an exception is logged and an attempt is made to place the message in an exception queue. An example of such type mismatches is a JMS <code>TextMessage</code> and a queue payload type <code>SYS.AQ$_JMS_BYTES_MESSAGE</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment993">
<tr>
<td class="cellalignment1002">
<table class="cellalignment998">
<tr>
<td class="cellalignment997"><a href="mg_work.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment997"><a href="mg_trble.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1004">
<table class="cellalignment996">
<tr>
<td class="cellalignment997"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment997"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment997"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment997"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment997"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment997"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>