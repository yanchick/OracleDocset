<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-965"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Basic%20Components"></a><title>Basic Components</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-07-01T0:30:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Queuing User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17945-14"/>
<meta name="dcterms.isVersionOf" content="ADQUE"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="aq_intro.htm" title="Previous" type="text/html"/>
<link rel="Next" href="aq_envir.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17945-14.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/34</span> <!-- End Header -->
<div id="ADQUE0200" class="chapter"><a id="g1012311"></a> <a id="i1006451"></a>
<h1 class="chapter"><span class="secnum">2</span> Basic Components</h1>
<p>This chapter describes the Oracle Database Advanced Queuing (AQ) basic components.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#i1005632">Object Name</a></p>
</li>
<li>
<p><a href="#i1005649">Type Name</a></p>
</li>
<li>
<p><a href="#i1005687">AQ Agent Type</a></p>
</li>
<li>
<p><a href="#i1005734">AQ Recipient List Type</a></p>
</li>
<li>
<p><a href="#i1005743">AQ Agent List Type</a></p>
</li>
<li>
<p><a href="#i1005752">AQ Subscriber List Type</a></p>
</li>
<li>
<p><a href="#i1005761">AQ Registration Information List Type</a></p>
</li>
<li>
<p><a href="#i1005770">AQ Post Information List Type</a></p>
</li>
<li>
<p><a href="#i1005777">AQ Registration Information Type</a></p>
</li>
<li>
<p><a href="#i1006661">AQ Notification Descriptor Type</a></p>
</li>
<li>
<p><a href="#CHDFIIGG">AQ Message Properties Type</a></p>
</li>
<li>
<p><a href="#i1005969">AQ Post Information Type</a></p>
</li>
<li>
<p><a href="#CHDFIDCB">AQ$_NTFN_MSGID_ARRAY Type</a></p>
</li>
<li>
<p><a href="#i1006002">Enumerated Constants for AQ Administrative Interface</a></p>
</li>
<li>
<p><a href="#i1006041">Enumerated Constants for AQ Operational Interface</a></p>
</li>
<li>
<p><a href="#i1006106">AQ Background Processes</a></p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a href="aq_admin.htm#g1020486">Chapter 8, &#34;Oracle Database Advanced Queuing Administrative Interface&#34;</a></p>
</li>
<li>
<p><a href="aq_opers.htm#g1025822">Chapter 10, &#34;Oracle Database Advanced Queuing Operations Using PL/SQL&#34;</a></p>
</li>
</ul>
</div>
</li>
<li>
<p><a href="#CHDJJFDB">AQ Background Architecture</a></p>
</li>
</ul>
<a id="i1005632"></a>
<div id="ADQUE2511" class="sect1">
<h2 class="sect1"><a id="sthref262"></a>Object Name</h2>
<pre>object_name := VARCHAR2
object_name := [<span class="italic">schema_name</span>.]<span class="italic">name</span>
</pre>
<p>This component names database objects. This naming convention applies to queues, queue tables, and object types.</p>
<p>Names for objects are specified by an optional <a href="glossary.htm#CBACBEEF"><span class="xrefglossterm">schema</span></a> name and a name. If the schema name is not specified, then the current schema is assumed. The name must follow the reserved character guidelines in <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference.</span></a> The schema name, agent name, and the <a href="glossary.htm#CBAGCEHG"><span class="xrefglossterm">object type</span></a> name can each be up to 30 bytes long. However, <a href="glossary.htm#CBAHIIAB"><span class="xrefglossterm">queue</span></a> names and <a href="glossary.htm#CBAFHDDD"><span class="xrefglossterm">queue table</span></a> names can be a maximum of 24 bytes.</p>
</div>
<!-- class="sect1" -->
<a id="i1005649"></a>
<div id="ADQUE2512" class="sect1">
<h2 class="sect1"><a id="sthref263"></a>Type Name</h2>
<pre>type_name := VARCHAR2
type_name := <span class="italic">object_type</span> | &#34;RAW&#34;
</pre>
<p>This component defines queue types. The maximum number of attributes in the object type is limited to 900.</p>
<p>To store payloads of type <code>RAW</code>, Oracle Database Advanced Queuing creates a queue table with a <a href="glossary.htm#CBAEGFFF"><span class="xrefglossterm">LOB</span></a> column as the payload repository. The size of the payload is limited to 32K bytes of data. Because <code>LOB</code> columns are used for storing <code>RAW</code> payload, the Oracle Database Advanced Queuing administrator can choose the <code>LOB</code> tablespace and configure the <code>LOB</code> storage by constructing a <code>LOB</code> storage string in the <code>storage_clause</code> parameter during queue table creation time.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Payloads containing LOBs require users to grant explicit <code>Select</code>, <code>Insert</code> and <code>Update</code> privileges on the queue table for doing enqueues and dequeues.</div>
</div>
<!-- class="sect1" -->
<a id="i1005687"></a>
<div id="ADQUE2513" class="sect1">
<h2 class="sect1"><a id="sthref264"></a><a id="sthref265"></a>AQ Agent Type</h2>
<pre>TYPE AQ$_AGENT IS OBJECT (
   name            VARCHAR2(30), 
   address         VARCHAR2(1024),
   protocol        NUMBER);
</pre>
<p>This component identifies a <a href="glossary.htm#CBAJDCHC"><span class="xrefglossterm">producer</span></a> or a <a href="glossary.htm#CBAJDFJA"><span class="xrefglossterm">consumer</span></a> of a <a href="glossary.htm#CBACDHGB"><span class="xrefglossterm">message</span></a>.</p>
<p>All consumers that are added as subscribers to a multiconsumer queue must have unique values for the <code>AQ$_AGENT</code> parameters. Two subscribers cannot have the same values for the <code>NAME</code>, <code>ADDRESS,</code> and <code>PROTOCOL</code> attributes for the <code>AQ$_AGENT</code> type. At least one of the three attributes must be different for two subscribers.</p>
<p>You can add subscribers by repeatedly using the <code>DBMS_AQADM.ADD_SUBSCRIBER</code> procedure up to a maximum of 1024 subscribers for a multiconsumer queue.</p>
<p>This type has three attributes:</p>
<ul>
<li>
<p><code>name</code></p>
<p>This attribute specifies the name of a producer or consumer of a message. It can be the name of an application or a name assigned by an application. A queue can itself be an agent, enqueuing or dequeuing from another queue. The name must follow the reserved character guidelines in <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
</li>
<li>
<p><code>address</code></p>
<p>This attribute is interpreted in the context of <code>protocol</code>. If <code>protocol</code> is 0 (default), then <code>address</code> is of the form <code>[schema.]queue[@dblink]</code>.</p>
</li>
<li>
<p><code>protocol</code></p>
<p>This attribute specifies the protocol to interpret the address and propagate the message. The default value is 0.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1005734"></a>
<div id="ADQUE2514" class="sect1">
<h2 class="sect1"><a id="sthref266"></a><a id="sthref267"></a>AQ Recipient List Type</h2>
<pre>TYPE AQ$_RECIPIENT_LIST_T IS TABLE OF aq$_agent
           INDEX BY BINARY_INTEGER;
 
</pre>
<p>This component identifies the list of agents that receive a message.</p>
</div>
<!-- class="sect1" -->
<a id="i1005743"></a>
<div id="ADQUE2515" class="sect1">
<h2 class="sect1"><a id="sthref268"></a><a id="sthref269"></a>AQ Agent List Type</h2>
<pre>TYPE AQ$_AGENT_LIST_T IS TABLE OF aq$_agent 
           INDEX BY BINARY INTEGER; 
</pre>
<p>This component identifies the list of agents for <code>DBMS_AQ.LISTEN</code> to listen for.</p>
</div>
<!-- class="sect1" -->
<a id="i1005752"></a>
<div id="ADQUE2516" class="sect1">
<h2 class="sect1"><a id="sthref270"></a><a id="sthref271"></a>AQ Subscriber List Type</h2>
<pre>TYPE AQ$_SUBSCRIBER_LIST_T IS TABLE OF aq$_agent
          INDEX BY BINARY INTEGER;
</pre>
<p>This component identifies the list of subscribers that subscribe to this queue.</p>
</div>
<!-- class="sect1" -->
<a id="i1005761"></a>
<div id="ADQUE2517" class="sect1">
<h2 class="sect1"><a id="sthref272"></a><a id="sthref273"></a>AQ Registration Information List Type</h2>
<pre>TYPE AQ$_REG_INFO_LIST AS VARRAY(1024) OF sys.aq$_reg_info;
</pre>
<p>This component identifies the list of registrations to a queue.</p>
</div>
<!-- class="sect1" -->
<a id="i1005770"></a>
<div id="ADQUE2518" class="sect1">
<h2 class="sect1"><a id="sthref274"></a><a id="sthref275"></a><a id="sthref276"></a><a id="sthref277"></a>AQ Post Information List Type</h2>
<pre>TYPE AQ$_POST_INFO_LIST AS VARRAY(1024) OF sys.aq$_post_info;
</pre>
<p>This component identifies the list of anonymous subscriptions to which messages are posted.</p>
</div>
<!-- class="sect1" -->
<a id="i1005777"></a>
<div id="ADQUE2519" class="sect1">
<h2 class="sect1"><a id="sthref278"></a><a id="sthref279"></a>AQ Registration Information Type</h2>
<pre>TYPE SYS.AQ$_REG_INFO IS OBJECT (
   name                              VARCHAR2(128),
   namespace                         NUMBER,
   callback                          VARCHAR2(4000),
   context                           RAW(2000)  DEFAULT NULL,
   qosflags                          NUMBER,
   timeout                           NUMBER
   ntfn_grouping_class               NUMBER,
   ntfn_grouping_value               NUMBER    DEFAULT 600,
   ntfn_grouping_type                NUMBER,
   ntfn_grouping_start_time          TIMESTAMP WITH TIME ZONE,
   ntfn_grouping_repeat_count   NUMBER);
</pre>
<p>This component identifies a producer or a consumer of a message. Its attributes are described in the following list. Attributes <code>qosflags</code> and <code>timeout</code> are part of Oracle Database Advanced Queuing 10<span class="italic">g</span> Release 2 (10.2) notification enhancements.</p>
<div id="ADQUE2520" class="tblformal">
<p class="titleintable"><a id="sthref280"></a><a id="CBAIDJBB"></a>Table 2-1 AQ$_REG_INFO Type Attributes</p>
<table class="cellalignment1005" title="AQ$_REG_INFO Type Attributes " summary="This table describes Attributes of the Oracle AQ Streams Type SYS.AQ$_REG_INFO." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t4">Attribute</th>
<th class="cellalignment1001" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t4" headers="r1c1-t4">
<p><code>name</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t4 r1c2-t4">
<p>Specifies the name of the subscription. The subscription name is of the form <code><span class="codeinlineitalic">schema.queue</span></code> if the registration is for a single consumer queue or <code><span class="codeinlineitalic">schema.queue:consumer_name</span></code> if the registration is for a multiconsumer queues.</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t4" headers="r1c1-t4">
<p><code>namespace</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t4 r1c2-t4">
<p>Specifies the namespace of the subscription. To receive notification from Oracle Database AQ queues, the namespace must be <code>DBMS_AQ.NAMESPACE_AQ.</code> To receive notifications from other applications through <code>DBMS_AQ.POST</code> or <code>OCISubscriptionPost(),</code> the namespace must be <code>DBMS_AQ.NAMESPACE_ANONYMOUS.</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t4" headers="r1c1-t4">
<p><code>callback</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t4 r1c2-t4">
<p>Specifies the action to be performed on message notification. For HTTP notifications, use <code>http://www.company.com:8080</code>. For e-mail notifications, use <code>mailto://xyz@company.com</code>. For raw message payload for the <code>PLSQLCALLBACK</code> procedure, use <code>plsql://</code><code><span class="codeinlineitalic">schema</span></code><code>.</code><code><span class="codeinlineitalic">procedure?</span></code><code>PR=0</code>. For user-defined type message payload converted to XML for the <code>PLSQLCALLBACK</code> procedure, use <code>plsql://</code><code><span class="codeinlineitalic">schema</span></code><code>.</code><code><span class="codeinlineitalic">procedure?</span></code><code>PR=1</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t4" headers="r1c1-t4">
<p><code>context</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t4 r1c2-t4">
<p>Specifies the context that is to be passed to the callback function</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t4" headers="r1c1-t4">
<p><code>qosflags</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t4 r1c2-t4">
<p>Can be set to one or more of the following values to specify the notification quality of service:</p>
<ul>
<li>
<p><code>NTFN_QOS_RELIABLE</code>- This value specifies that reliable notification is required. Reliable notifications persist across instance and database restarts.</p>
</li>
<li>
<p><code>NTFN_QOS_PAYLOAD</code> - This value specifies that payload delivery is required. It is supported only for client notification and only for <code>RAW</code> queues.</p>
</li>
<li>
<p><code>NTFN_QOS_PURGE_ON_NTFN</code> - This value specifies that the registration is to be purged automatically when the first notification is delivered to this registration location.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t4" headers="r1c1-t4">
<p><code>ntfn_grouping_class</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t4 r1c2-t4">
<p>Currently, only the following flag can be set to specify criterion for grouping. The default value will be 0. If <code>ntfn_grouping_class</code> is 0, all other notification grouping attributes must be 0.</p>
<ul>
<li>
<p><code>NTFN_GROUPING_CLASS_TIME</code> - Notifications grouped by time, that is, the user specifies a time value and a single notification gets published at the end of that time.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r8c1-t4" headers="r1c1-t4">
<p><code>ntfn_grouping_value</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t4 r1c2-t4">
<p>Time-period of grouping notifications specified in seconds, meaning the time after which grouping notification would be sent periodically until <code>ntfn_grouping_repeat_count</code> is exhausted.</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r9c1-t4" headers="r1c1-t4">
<p><code>ntfn_grouping_type</code></p>
</td>
<td class="cellalignment1002" headers="r9c1-t4 r1c2-t4">
<ul>
<li>
<p><code>NTFN_GROUPING_TYPE_SUMMARY</code> - Summary of all notifications that occurred in the time interval. (Default)</p>
</li>
<li>
<p><code>NTFN_GROUPING_TYPE_LAST</code> - Last notification that occurred in the interval.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r10c1-t4" headers="r1c1-t4">
<p><code>ntfn_grouping_start_time</code></p>
</td>
<td class="cellalignment1002" headers="r10c1-t4 r1c2-t4">
<p>Notification grouping start time. Notification grouping can start from a user-specified time that should a valid timestamp with time zone. If <code>ntfn_grouping_start_time</code> is not specified when using grouping, the default is to current timestamp with time zone</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r11c1-t4" headers="r1c1-t4">
<p><code>ntfn_grouping_repeat_count</code></p>
</td>
<td class="cellalignment1002" headers="r11c1-t4 r1c2-t4">
<p>Grouping notifications will be sent as many times as specified by the notification grouping repeat count and after that revert to regular notifications. The ntfn_grouping_repeat_count, if not specified, will default to</p>
<ul>
<li>
<p><code>NTFN_GROUPING_FOREVER</code> - Keep sending grouping notifications forever.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i1006661"></a>
<div id="ADQUE2521" class="sect1">
<h2 class="sect1"><a id="sthref281"></a><a id="sthref282"></a>AQ Notification Descriptor Type</h2>
<pre>TYPE SYS.AQ$_DESCRIPTOR IS OBJECT (
   queue_name      VARCHAR2(61),
   consumer_name   VARCHAR2(30),
   msg_id          RAW(16),
   msg_prop        MSG_PROP_T,
   gen_desc        AQ$_NTFN_DESCRIPTOR,
   msgid_array     SYS.AQ$_NTFN_MSGID_ARRAY, 
   ntfnsRecdInGrp  NUMBER);
</pre>
<p>This component specifies the Oracle Database Advanced Queuing descriptor received by Oracle Database Advanced Queuing PL/SQL callbacks upon notification. It has the following attributes:</p>
<div id="ADQUE2522" class="tblformal">
<p class="titleintable"><a id="sthref283"></a><a id="CBAHHFAG"></a>Table 2-2 AQ$_DESCRIPTOR Attributes</p>
<table class="cellalignment1005" title="AQ$_DESCRIPTOR Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type SYS.AQ$_DESCRIPTOR." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t5">Attribute</th>
<th class="cellalignment1001" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t5" headers="r1c1-t5">
<p><code>queue_name</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t5 r1c2-t5">
<p>Name of the queue in which the message was enqueued which resulted in the notification</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t5" headers="r1c1-t5">
<p><code>consumer_name</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t5 r1c2-t5">
<p>Name of the consumer for the multiconsumer queue</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t5" headers="r1c1-t5">
<p><code>msg_id</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t5 r1c2-t5">
<p>Identification number of the message</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t5" headers="r1c1-t5">
<p><code>msg_prop</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t5 r1c2-t5">
<p>Message properties specified by the <code>MSG_PROP_T</code> type</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t5" headers="r1c1-t5">
<p><code>gen_desc</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t5 r1c2-t5">
<p>Indicates the timeout specifications</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t5" headers="r1c1-t5">
<p><code>msgid_array</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t5 r1c2-t5">
<p>Group notification message ID list</p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r8c1-t5" headers="r1c1-t5">
<p><code>ntfnsRecdInGrp</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t5 r1c2-t5">
<p>Notifications received in group</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="CHDFIIGG"></a>
<div id="ADQUE2523" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref284"></a>AQ Message Properties Type</h2>
<p>The message properties type <code>msg_prop_t</code> has the following components:</p>
<pre>TYPE AQ$_MSG_PROP_T IS OBJECT(
   priority         number,
   delay            number,
   expiration       number,
   correlation      varchar2(128),
   attempts         number,
   recipent_list    aq$_recipient_list_t,
   exception_queue  varchar2(51),
   enqueue_time     date,
   state            number,
   sender_id        aq$_agent,
   original_misgid  raw(16),
   delivery_mode    number);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;MESSAGE_PROPERTIES_T Type&#34; in <a class="olink ARPLS301" href="../ARPLS/t_aq.htm#ARPLS301"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></div>
<p>The timeout specifications type <code>AQ$_NTFN_DESCRIPTOR</code> has a single component:</p>
<pre>TYPE AQ$_NTFN_DESCRIPTOR IS OBJECT(
   NTFN_FLAGS   number);
</pre>
<p><code>NTFN_FLAGS</code> is set to <code>1</code> if the notifications are already removed after a stipulated timeout; otherwise the value is <code>0</code>.</p>
</div>
<!-- class="sect1" -->
<a id="i1005969"></a>
<div id="ADQUE2524" class="sect1">
<h2 class="sect1"><a id="sthref285"></a><a id="sthref286"></a>AQ Post Information Type</h2>
<pre>TYPE SYS.AQ$_POST_INFO IS OBJECT (
  name       VARCHAR2(128),
  namespace  NUMBER,
  payload    RAW(2000));
</pre>
<p>This component specifies anonymous subscriptions to which you want to post messages. It has three attributes:</p>
<ul>
<li>
<p><code>name</code></p>
<p>This attribute specifies the name of the anonymous subscription to which you want to post.</p>
</li>
<li>
<p><code>namespace</code></p>
<p>This attribute specifies the namespace of the anonymous subscription. To receive notifications from other applications using <code>DBMS_AQ.POST</code> or <code>OCISubscriptionPost()</code>, the namespace must be <code>DBMS_AQ.NAMESPACE_ANONYMOUS</code>.</p>
</li>
<li>
<p><code>payload</code></p>
<p>This attribute specifies the payload to be posted to the anonymous subscription. The default is <code>NULL</code>.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CHDFIDCB"></a>
<div id="ADQUE2525" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">AQ$_NTFN_MSGID_ARRAY Type</h2>
<pre>TYPE SYS.AQ$_NTFN_MSGID_ARRAY   AS VARRAY(1073741824)OF RAW(16);
</pre>
<p>This component is for storing grouping notification data for AQ namespace, value 2<sup>30</sup> which is the max varray size.</p>
</div>
<!-- class="sect1" -->
<a id="i1006002"></a>
<div id="ADQUE2526" class="sect1">
<h2 class="sect1"><a id="sthref287"></a>Enumerated Constants for AQ Administrative Interface</h2>
<p>When enumerated constants such as <code>INFINITE</code>, <code>TRANSACTIONAL</code>, and <code>NORMAL_QUEUE</code> are selected as values, the symbol must be specified with the scope of the packages defining it. All types associated with the administrative interfaces must be prepended with <code>DBMS_AQADM</code>. For example:</p>
<pre>DBMS_AQADM.NORMAL_QUEUE
</pre>
<p><a href="#g1009388">Table 2-3</a> lists the enumerated constants in the Oracle Database Advanced Queuing administrative interface.</p>
<div id="ADQUE2527" class="tblformal">
<p class="titleintable"><a id="sthref288"></a><a id="g1009388"></a>Table 2-3 Enumerated Constants in the Oracle Database Advanced Queuing Administrative Interface</p>
<table class="cellalignment1005" title="Enumerated Constants in the Oracle Database Advanced Queuing Administrative Interface" summary="Rows are parameters. For each parameter, the first column is its name, and the second column lists the options for that parameter." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t7">Parameter</th>
<th class="cellalignment1001" id="r1c2-t7">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t7" headers="r1c1-t7">
<p><code><a id="sthref289"></a>retention</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t7 r1c2-t7">
<p><code>0,1,2...INFINITE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t7" headers="r1c1-t7">
<p><code><a id="sthref290"></a>message_grouping</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t7 r1c2-t7">
<p><code>TRANSACTIONAL</code>, <code>NONE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t7" headers="r1c1-t7">
<p><code><a id="sthref291"></a>queue_type</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t7 r1c2-t7">
<p><code>NORMAL_QUEUE</code>, <code>EXCEPTION_QUEUE,NON_PERSISTENT_QUEUE</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t7" headers="r1c1-t7">
<p><code>delivery_mode</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t7 r1c2-t7">
<p><code>BUFFERED</code>, <code>PERSISTENT</code>, <code>PERSISTENT_OR_BUFFERED</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Nonpersistent queues are deprecated in Oracle Database Advanced Queuing 10<span class="italic">g</span> Release 2 (10.2). Oracle recommends that you use buffered messaging instead.</div>
</div>
<!-- class="sect1" -->
<a id="i1006041"></a>
<div id="ADQUE2528" class="sect1">
<h2 class="sect1"><a id="sthref292"></a>Enumerated Constants for AQ Operational Interface</h2>
<p>When using enumerated constants such as <code>BROWSE</code>, <code>LOCKED</code>, and <code>REMOVE</code>, the PL/SQL constants must be specified with the scope of the packages defining them. All types associated with the operational interfaces must be prepended with <code>DBMS_AQ</code>. For example:</p>
<pre>DBMS_AQ.BROWSE
</pre>
<p><a href="#g1009404">Table 2-4</a> lists the enumerated constants in the Oracle Database Advanced Queuing operational interface.</p>
<div id="ADQUE2529" class="tblformal">
<p class="titleintable"><a id="sthref293"></a><a id="g1009404"></a>Table 2-4 Enumerated Constants in the Oracle Database Advanced Queuing Operational Interface</p>
<table class="cellalignment1005" title="Enumerated Constants in the Oracle Database Advanced Queuing Operational Interface" summary="Rows are parameters. For each parameter, the first column is its name, and the second column lists the options for that parameter." dir="ltr">
<thead>
<tr class="cellalignment994">
<th class="cellalignment1001" id="r1c1-t9">Parameter</th>
<th class="cellalignment1001" id="r1c2-t9">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r2c1-t9" headers="r1c1-t9">
<p><code><a id="sthref294"></a>visibility</code></p>
</td>
<td class="cellalignment1002" headers="r2c1-t9 r1c2-t9">
<p><code>IMMEDIATE</code>, <code>ON_COMMIT</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r3c1-t9" headers="r1c1-t9">
<p><code><a id="sthref295"></a>dequeue mode</code></p>
</td>
<td class="cellalignment1002" headers="r3c1-t9 r1c2-t9">
<p><code>BROWSE</code>, <code>LOCKED</code>, <code>REMOVE,</code> <code>REMOVE_NODATA</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r4c1-t9" headers="r1c1-t9">
<p><code><a id="sthref296"></a>navigation</code></p>
</td>
<td class="cellalignment1002" headers="r4c1-t9 r1c2-t9">
<p><code>FIRST_MESSAGE</code>, <code>NEXT_MESSAGE</code>, <code>NEXT_TRANSACTION</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r5c1-t9" headers="r1c1-t9">
<p><code><a id="sthref297"></a>state</code></p>
</td>
<td class="cellalignment1002" headers="r5c1-t9 r1c2-t9">
<p><code>WAITING</code>, <code>READY</code>, <code>PROCESSED</code>, <code>EXPIRED</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r6c1-t9" headers="r1c1-t9">
<p><code><a id="sthref298"></a>wait</code></p>
</td>
<td class="cellalignment1002" headers="r6c1-t9 r1c2-t9">
<p><code>FOREVER</code>, <code>NO_WAIT</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r7c1-t9" headers="r1c1-t9">
<p><code><a id="sthref299"></a>delay</code></p>
</td>
<td class="cellalignment1002" headers="r7c1-t9 r1c2-t9">
<p><code>NO_DELAY</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r8c1-t9" headers="r1c1-t9">
<p><code><a id="sthref300"></a>expiration</code></p>
</td>
<td class="cellalignment1002" headers="r8c1-t9 r1c2-t9">
<p><code>NEVER</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r9c1-t9" headers="r1c1-t9">
<p><code><a id="sthref301"></a>namespace</code></p>
</td>
<td class="cellalignment1002" headers="r9c1-t9 r1c2-t9">
<p><code>NAMESPACE_AQ</code>, <code>NAMESPACE_ANONYMOUS</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r10c1-t9" headers="r1c1-t9">
<p><a id="sthref302"></a><code>delivery_mode</code></p>
</td>
<td class="cellalignment1002" headers="r10c1-t9 r1c2-t9">
<p><code>BUFFERED</code>, <code>PERSISTENT</code>, <code>PERSISTENT_OR_BUFFERED</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r11c1-t9" headers="r1c1-t9">
<p><a id="sthref303"></a><code>quosflags</code></p>
</td>
<td class="cellalignment1002" headers="r11c1-t9 r1c2-t9">
<p><code>NTFN_QOS_RELIABLE</code>, <code>NTFN_QOS_PAYLOAD</code>, <code>NTFN_QOS_PURGE_ON_NTFN</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r12c1-t9" headers="r1c1-t9">
<p><code><a id="sthref304"></a>ntfn_grouping_class</code></p>
</td>
<td class="cellalignment1002" headers="r12c1-t9 r1c2-t9">
<p><code>NFTN_GROUPING_CLASS_TIME</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r13c1-t9" headers="r1c1-t9">
<p><a id="sthref305"></a><code>ntfn_grouping_type</code></p>
</td>
<td class="cellalignment1002" headers="r13c1-t9 r1c2-t9">
<p><code>NTFN_GROUPING_TYPE_SUMMARY</code>, <code>NTFN_GROUPING_TYPE_LAST</code></p>
</td>
</tr>
<tr class="cellalignment994">
<td class="cellalignment1002" id="r14c1-t9" headers="r1c1-t9">
<p><a id="sthref306"></a><code>ntfn_grouping_repeat_count</code></p>
</td>
<td class="cellalignment1002" headers="r14c1-t9 r1c2-t9">
<p><code>NTFN_GROUPING_FOREVER</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i1006106"></a>
<div id="ADQUE2530" class="sect1">
<h2 class="sect1"><a id="sthref307"></a>AQ Background Processes</h2>
<ul>
<li>
<p><a href="#i1006539">Queue Monitor Processes</a></p>
</li>
<li>
<p><a href="#CHDIFCGC">Job Queue Processes</a></p>
</li>
<li>
<p><a href="#CHDJJFDB">AQ Background Architecture</a></p>
</li>
</ul>
<a id="i1006539"></a>
<div id="ADQUE2531" class="sect2">
<h3 class="sect2"><a id="sthref308"></a><a id="sthref309"></a>Queue Monitor Processes</h3>
<p>Many Streams AQ or Streams tasks are executed in the background. These include converting messages with <code>DELAY</code> specified into the <code>READY</code> state, expiring messages, moving messages to exception queues, spilling and recovering of buffered messages, and similar operations.</p>
<p>It is no longer necessary to set <code>AQ_TM_PROCESSES</code> when Oracle Database AQ or Streams is used. If a value is specified, that value is taken into account when starting the <code>Qxx</code> processes. However, the number of Qxx processes can be different from what was specified by <code>AQ_TM_PROCESSES</code>.</p>
<p>No separate <a href="glossary.htm#CBAIGGDE"><span class="xrefglossterm">API</span></a> is needed to disable or enable the background processes. This is controlled by setting <code>AQ_TM_PROCESSES</code> to zero or nonzero. Oracle recommends, however, that you leave the <code>AQ_TM_PROCESSES</code> parameter unspecified and let the system autotune.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you want to disable the <a id="sthref310"></a>Queue Monitor Coordinator, then you must set <code>AQ_TM_PROCESSES = 0</code> in your <code>pfile</code> or <code>spfile</code>. Oracle strongly recommends that you do NOT set <code><a id="sthref311"></a>AQ_TM_PROCESSES = 0</code>. If you are using Oracle Streams, then setting this parameter to zero (which Oracle Database respects no matter what) can cause serious problems.</div>
</div>
<!-- class="sect2" -->
<a id="CHDIFCGC"></a>
<div id="ADQUE2532" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Job Queue Processes</h3>
<p>Propagation and PL/SQL notifications are handled by job queue (Jnnn) processes. The parameter <code>JOB_QUEUE_PROCESSES</code> no longer needs to be specified. The database scheduler automatically starts the job queue processes that are needed for the propagation and notification jobs.</p>
</div>
<!-- class="sect2" -->
<a id="CHDJJFDB"></a>
<div id="ADQUE3663" class="sect2">
<h3 class="sect2">AQ Background Architecture</h3>
<p>Oracle Database Advanced Queuing 12c Release 1 (12.1) introduces a new <a id="sthref312"></a>AQ background architecture with a 3-tier design:</p>
<ul>
<li>
<p>Tier1 (AQPC): Asingle background process called the Advanced Queueing Process Coordinator is created at instance startup. It will be responsible for creating and managing various master processes. The coordinator statistics can be viewed using <code>G<a id="sthref313"></a>V$AQ_BACKGROUND_COORDINATOR</code>.</p>
</li>
<li>
<p>Tier2 (QM**): There will be many master processes named Queue Monitors. Each will be responsible for handling a distinct type of job. Jobs could be of type notification(Emon pool), queue monitors (handling sharded queues time manager etc) , cross process etc.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The old processes like QMNC and EMNC will be subsumed within one of new master processes.</div>
<p>A job can be defined as a type of work which needs own scheduling mechanism across multiple server processes (Q***) to perform its task . The master process statistics and their jobs can be viewed using <code>G<a id="sthref314"></a>V$AQ_JOB_COORDINATOR</code>.</p>
</li>
<li>
<p>Tier3(Q***): There will be a single pool of server processes for all above mentioned master processes. Each process will be associated to a single master process at a time. But can be rescheduled to another once original master relinquishes its need to use it.These servers will perform jobs for respective masters providing performance and scalability. The server process statistics and its current master association can be viewed using <code>G<a id="sthref315"></a>V$AQ_SERVER_POOL</code>.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment993">
<tr>
<td class="cellalignment1002">
<table class="cellalignment998">
<tr>
<td class="cellalignment997"><a href="aq_intro.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment997"><a href="aq_envir.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1004">
<table class="cellalignment996">
<tr>
<td class="cellalignment997"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment997"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment997"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment997"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment997"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment997"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>