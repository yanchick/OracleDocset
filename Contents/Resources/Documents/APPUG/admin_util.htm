<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-2123"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Procedural%20Gateway%20Administration%20Utility"></a><title>Procedural Gateway Administration Utility</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1090"/>
<meta name="dcterms.created" content="2017-06-08T15:9:56Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Gateway for APPC User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17931-04"/>
<meta name="dcterms.isVersionOf" content="APPUG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="intro.htm" title="Previous" type="text/html"/>
<link rel="Next" href="tip.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17931-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/20</span> <!-- End Header -->
<div id="APPUG200" class="chapter"><a id="g1029659"></a>
<h1 class="chapter"><span class="secnum">2</span> Procedural Gateway Administration Utility</h1>
<p>The Procedural Gateway Administration Utility (PGAU)<a id="sthref295"></a> is a utility that assists the PGA administrator or user to define the data which is to be exchanged with remote transaction programs. It generates the PL/SQL Transaction Interface Packages (TIPs) discussed in <a href="tip.htm#g1011602">Chapter 3, &#34;Creating a TIP&#34;</a>, <a href="apf.htm#g638154">Appendix E, &#34;Tip Internals&#34;</a> and, depending upon your communication protocol, either <a href="app_sna.htm#g1020838">Chapter 4, &#34;Client Application Development (SNA Only)&#34;</a> or <a href="app_tcp.htm#g1017213">Chapter 7, &#34;Client Application Development (TCP/IP Only)&#34;</a>.</p>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#i1008398">&#34;Overview of PGAU&#34;</a></p>
</li>
<li>
<p><a href="#i1006592">&#34;COMMIT/ROLLBACK Processing&#34;</a></p>
</li>
<li>
<p><a href="#i1006613">&#34;Invoking PGAU&#34;</a></p>
</li>
<li>
<p><a href="#i1006642">&#34;Definitions and Generation in PGAU&#34;</a></p>
</li>
<li>
<p><a href="#i1010356">&#34;Process to Define and Test a TIP&#34;</a></p>
</li>
<li>
<p><a href="#i1008253">&#34;PGAU Commands&#34;</a></p>
</li>
</ul>
<a id="i1008398"></a>
<div id="APPUG925" class="sect1">
<h2 class="sect1">Overview of PGAU <a id="sthref296"></a></h2>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you have existing TIPs that were generated previously on a gateway using the SNA protocol and you want to utilize the new TCP/IP feature, then the TIPs will have to be regenerated by PGAU with mandatory <code dir="ltr">NLS_LANGUAGE</code> and Side Profile Settings. Specify the appropriate ASCII character set in the <code dir="ltr">DEFINE TRANSACTION</code> command.
<p>This is due to the fact that the gateway assumes that the appropriate &#34;user exit&#34; in IMS Connect is being used, which would translate between the appropriate ASCII and EBCDIC character sets.</p>
</div>
<p>PGAU maintains a data dictionary, <a id="sthref297"></a>PG DD, which is a collection of tables in an Oracle database. These tables hold the definitions of the remote transaction data and how that data is to be exchanged with the remote transaction program. Refer to <a href="app_sna.htm#i1006907">&#34;Ensuring TIP and Remote Transaction Program Correspondence&#34;</a> for a discussion of the correlation between TIPs and their respective remote transaction programs. The PG DD contents define this correlation.</p>
<p>The <a id="sthref298"></a>PGA administrator or user defines the correlation between TIPs and the remote transaction program using the following <a id="sthref299"></a>PGAU commands (also called &#34;statements&#34;):</p>
<ul>
<li>
<p><a id="CHDEBCHI"></a><a id="sthref300"></a>PGAU <code dir="ltr">DEFINE DATA</code> statements, which describe the data to be exchanged.</p>
</li>
<li>
<p><a id="CHDHJJAD"></a><a id="sthref301"></a>PGAU <code dir="ltr">DEFINE CALL</code> statements, which describe the exchange sequences.</p>
</li>
<li>
<p><a id="sthref302"></a>PGAU <code dir="ltr">DEFINE TRANSACTION</code> statements, which group the preceding <code dir="ltr">CALL</code> and <code dir="ltr">DATA</code> commands together and describe certain aspects unique to the remote transaction program, such as its network name or location.</p>
</li>
<li>
<p><a id="CHDFAEGI"></a><a id="sthref303"></a>PGAU <code dir="ltr">GENERATE</code> statement, which the PGA administrator or user uses to specify and create the TIP specifications, after the TIP/transaction correlation has been defined in the PG DD. Additional PGAU commands needed to alter and delete definitions in the PG DD are described in <a href="#i1008253">&#34;PGAU Commands&#34;</a> later in this chapter.</p>
</li>
</ul>
<p>The PGAU commands are known collectively as <a id="sthref304"></a>Procedural Gateway Definition Language (PGDL). Any references to PGDL are to the collection of PGAU commands defined in this chapter.</p>
<p>PGAU provides editing and spooling facilities and the ability to issue SQL commands.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Caution</span>:</p>
Do not use PGAU instead of SQL*Plus for general database administration.</div>
<p>Alternatively, <a id="sthref305"></a>PGAU commands can be supplied in a control file. The <a id="sthref306"></a>control file contains one or more PGAU commands for manipulating the <a id="sthref307"></a>PG DD or generating TIP specifications.</p>
<p>PGAU issues status messages on each operation. The message text is provided through Globalization Support message support. PGAU processes each command in sequence. An error on a single command causes PGAU to skip that command.</p>
<p>To run PGAU, the PG DD tables must already have been created. Refer to the gateway configuration chapters corresponding to your communications protocol in the <a class="olink APPCI" href="../APPCI/toc.htm"><span class="italic">Oracle Database Gateway for APPC Installation and Configuration Guide for IBM AIX on POWER Systems (64-Bit), Linux x86-64, Oracle Solaris on SPARC (64-Bit), and HP-UX Itanium</span></a> or <a class="olink APPCW" href="../APPCW/toc.htm"><span class="italic">Oracle Database Gateway for APPC Installation and Configuration Guide for Microsoft Windows</span></a>.</p>
</div>
<!-- class="sect1" -->
<a id="i1006592"></a>
<div id="APPUG926" class="sect1">
<h2 class="sect1">COMMIT/ROLLBACK Processing</h2>
<p>The following sections provide information on <code dir="ltr">COMMIT/ROLLBACK</code> processing.</p>
<div id="APPUG927" class="sect2"><a id="sthref308"></a>
<h3 class="sect2">COMMIT Processing<a id="sthref309"></a><a id="sthref310"></a></h3>
<p>PGAU never issues <a id="sthref311"></a><a id="sthref312"></a><code dir="ltr">COMMIT</code> commands. As the user, it is your responsibility to <code dir="ltr">COMMIT</code> PG DD changes when all the changes are implemented. Otherwise Oracle issues a <code dir="ltr">COMMIT</code> command by default when you exit the PGAU session. If PG&nbsp;DD changes are not to be committed, you must run a <a id="sthref313"></a><a id="sthref314"></a><code dir="ltr">ROLLBACK</code> command before exiting.</p>
</div>
<!-- class="sect2" -->
<div id="APPUG928" class="sect2"><a id="sthref315"></a>
<h3 class="sect2">ROLLBACK Processing<a id="sthref316"></a><a id="sthref317"></a></h3>
<p>PGAU sets a savepoint at the beginning of each PGAU command that alters the PG&nbsp;DD and at the beginning of a PGAU <code dir="ltr">GROUP</code>. PGAU rolls back to the savepoint upon any PGAU command or group failure.</p>
<p>You can code <a id="sthref318"></a><code dir="ltr">COMMIT</code> or <a id="sthref319"></a><code dir="ltr">ROLLBACK</code> commands within PGAU scripts, or interactively in PGAU, but not within a <code dir="ltr">GROUP</code>.</p>
<p>Neither <code dir="ltr">COMMIT</code> nor <code dir="ltr">ROLLBACK</code> is issued for <code dir="ltr">PGAU GENERATE</code> or <code dir="ltr">REPORT</code> commands.</p>
<p>For information about grouping PGAU commands together to roll back changes in case of failure, refer to the discussion of the PGAU <a href="#i1007285">&#34;GROUP&#34;</a> command later in this chapter.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006613"></a>
<div id="APPUG929" class="sect1">
<h2 class="sect1">Invoking PGAU <a id="sthref320"></a></h2>
<p>Before you can invoke PGAU, your Oracle database should already be set up. If it is not, refer to the chapter on configuring your Oracle Database Gateway for APPC, in the <a class="olink APPCW" href="../APPCW/toc.htm"><span class="italic">Oracle Database Gateway for APPC Installation and Configuration Guide for Microsoft Windows</span></a> or <a class="olink APPCI" href="../APPCI/toc.htm"><span class="italic">Oracle Database Gateway for APPC Installation and Configuration Guide for IBM AIX on POWER Systems (64-Bit), Linux x86-64, Oracle Solaris on SPARC (64-Bit), and HP-UX Itanium</span></a>.</p>
<p>Before executing PGAU, you must set the <code dir="ltr">ORACLE_HOME</code> environment variable to the directory into which the gateway server was installed.</p>
<p>If you want to receive PGAU messages in a language other than English, set the <code dir="ltr">LANGUAGE</code> environment variable to the appropriate value.</p>
<p>PGAU is invoked by entering the<a id="sthref321"></a> <code dir="ltr">pgau</code> command. You can run prepared scripts of PGAU commands directly from the operating system prompt by specifying a command string on the command line using the following syntax:</p>
<p>For Microsoft Windows:</p>
<pre dir="ltr">C:\&gt; pgau <span class="italic">@command_file</span> 
C:\&gt; pgau <span class="italic">command=@command_file</span> 
C:\&gt; pgau <span class="italic">command=&#34;@command_file&#34;</span> 
  
</pre>
<p>For UNIX based systems:</p>
<pre dir="ltr">$ pgau <span class="italic">@command_file</span> 
$ pgau <span class="italic">command=@command_file</span> 
$ pgau <span class="italic">command=&#34;@command_file&#34;</span> 
  
</pre>
<p>The default extension is <code dir="ltr">.sql</code>. Use the last form if the command filename contains non-alphanumeric characters.</p>
<p>To perform <a id="sthref322"></a>PG DD maintenance and <a id="sthref323"></a>PL/SQL package generation, you must connect to the Oracle database from PGAU as user <code dir="ltr">PGAADMIN</code>, using the<a id="sthref324"></a><a id="sthref325"></a> <code dir="ltr">CONNECT</code> command. The <a href="#i1008253">&#34;PGAU Commands&#34;</a> section discusses how to use the <a href="#i1006723">&#34;CONNECT&#34;</a> command.</p>
</div>
<!-- class="sect1" -->
<a id="i1006642"></a>
<div id="APPUG930" class="sect1">
<h2 class="sect1">Definitions and Generation in PGAU<a id="sthref326"></a><a id="sthref327"></a></h2>
<p>This version of PGAU supports the definition of remote transaction data in COBOL, entered interactively or in a file. File input is supported for the <code dir="ltr">DEFINE</code> and <code dir="ltr">REDEFINE DATA</code> commands, and standard COBOL data division macros or &#34;copybooks&#34; can be supplied.</p>
<p>PGAU and the <a id="sthref328"></a>PG DD support different versions of user data and remote transaction definitions. This facilitates alteration and testing of data formats and transactions without affecting production usage.</p>
<p>Multiple versions of any data or transaction definitions might exist. You must ensure that versions stored and used in the PG DD are synchronized with the remote transactions. Neither the gateway, PGAU, nor generated TIPs provide this synchronization, but they will issue messages as error conditions are detected.</p>
<p>Data definitions must exist before being referenced by call definitions. Call definitions must exist before being referenced by transaction definitions.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It is your responsibility to ensure that the data transaction definition versions that are stored and used in the PG DD are synchronized with the remote transactions. The gateway, PGAU and generated TIPs do not provide this synchronization, but issue messages as error conditions are detected.</div>
</div>
<!-- class="sect1" -->
<a id="i1010356"></a>
<div id="APPUG931" class="sect1">
<h2 class="sect1">Process to Define and Test a TIP<a id="sthref329"></a><a id="sthref330"></a></h2>
<p>The general process for defining and testing a TIP for a given transaction is as follows:</p>
<ol>
<li>
<p>Define input and output using COBOL data definitions.</p>
</li>
<li>
<p>Redefine the default datanames and PL/SQL variable names created by the above process (optional).</p>
</li>
<li>
<p>Define PL/SQL <code dir="ltr">FUNCTION</code> calls to be generated as part of the PL/SQL package.</p>
</li>
<li>
<p>Define a transaction that groups the above functions.</p>
</li>
<li>
<p>Generate the TIP specifications from the previously stored <code dir="ltr">TRANSACTION</code>, <code dir="ltr">CALL</code>, and <code dir="ltr">DATA</code> definitions.</p>
</li>
<li>
<p>Generate the TIP PL/SQL stored procedures.</p>
</li>
<li>
<p>Test the TIP by calling it from a high-level application.</p>
</li>
</ol>
<p>Refer to <a href="tip.htm#g1011602">Chapter 3, &#34;Creating a TIP&#34;</a> for more information about TIPs.</p>
<div id="APPUG932" class="sect2"><a id="sthref331"></a>
<h3 class="sect2">Definition Names<a id="sthref332"></a></h3>
<p>Definition names are unique identifiers that you designate through PGAU. The name is a string of 1 to 30 bytes. If punctuation or white space is included, the name must be specified within double quotes.</p>
<p>Names are assumed to be unique within the PG DD, except when duplicate names are intentionally distinguished by a unique version number. It is your responsibility to ensure name uniqueness.</p>
<p>Valid characters for <a id="sthref333"></a>PG DD definition names are:</p>
<ul>
<li>
<p>A through Z</p>
</li>
<li>
<p>a through z</p>
</li>
<li>
<p>0 through 9</p>
</li>
<li>
<p>#</p>
</li>
<li>
<p>$</p>
</li>
<li>
<p>_ (underscore)</p>
</li>
</ul>
<p>Note that unless defaults are overridden, transaction definition names might be PL/SQL package names, and transaction call names might be PL/SQL procedure names. Therefore, choose names that are syntactically correct for PL/SQL, making certain that they are also unique names within that system. As the user, it is your responsibility to ensure PL/SQL name compatibility.</p>
</div>
<!-- class="sect2" -->
<div id="APPUG933" class="sect2"><a id="sthref334"></a>
<h3 class="sect2">Definition Versioning<a id="sthref335"></a><a id="sthref336"></a></h3>
<p>The <a id="sthref337"></a>PG Data Dictionary tables contain the descriptions of transactions and data structures. There might be more than one version of a definition. Old versions are retained indefinitely.</p>
<p>In all PG DD operations, a definition or package is referred to by its name. That name can be qualified by a specific version number.</p>
<p>All version numbers:</p>
<ul>
<li>
<p>are supplied by Oracle Sequence Objects</p>
</li>
<li>
<p>are purely numeric</p>
</li>
<li>
<p>must be free from user alteration, suffixing, or prefixing</p>
</li>
</ul>
<p>Refer to <a href="apa.htm#g650736">Appendix A, &#34;Database Gateway for APPC Data Dictionary&#34;</a> and the<a id="sthref338"></a><a id="sthref339"></a> <code dir="ltr">pgddcr8.sql</code> file in the <code dir="ltr">%ORACLE_HOME%\dg4appc\admin</code> directory on Microsoft Windows or <code dir="ltr">$ORACLE_HOME/dg4appc/admin</code> directory on UNIX based systems for the specific names of the Oracle Sequence Objects used for version number generation.</p>
<p>If an explicit version number is specified, it is presumed to be the version number of an existing definition, not a new definition. Such explicit references are used when:</p>
<ul>
<li>
<p>generating a TIP from a specific remote transaction version</p>
</li>
<li>
<p>defining a remote transaction based on a specific data version</p>
</li>
</ul>
<p>If no explicit version is specified:</p>
<ul>
<li>
<p>The latest (highest number) is assumed when a definition is being referenced. This is the <code dir="ltr">MAX</code> value selected from the <code dir="ltr">VERSION</code> column for all rows with the same definition name, not the <code dir="ltr">CURRVAL</code> number.</p>
</li>
<li>
<p>The next (<code dir="ltr">NEXTVAL</code> number) is assumed when a definition is being added.</p>
</li>
</ul>
<p>Version numbers might not be contiguous. Although version numbers are always increasing, multiple versions of a given definition might skip numbers. This is because the sequence object is shared for all definitions of the same type (<code dir="ltr">TRANSACTION</code>, <code dir="ltr">CALL</code>, or <code dir="ltr">DATA</code>), and sequence object <code dir="ltr">NEXTVAL</code> is not restored in event of an Oracle database transaction <code dir="ltr">ROLLBACK</code>. Thus, <code dir="ltr">NEXTVAL</code> might be assigned to a different definition before the next version of the same definition.</p>
<p>Examples of valid definition names:</p>
<pre dir="ltr">DEFINE TRANSACTION|CALL|DATA
    payroll                             (new or latest definition)
    payroll_xaction                     (new or latest definition)
    payroll_xaction VERSION(3)...(an existing definition)
</pre>
<p>No attempt is made by PGAU to synchronize versions. Although the existence of dependent items is assured at definition time, deletion is done without reference to dependencies. For example, generating a TIP requires prior definition of the transaction, which requires prior definition of the calls, which require prior definition of the data. But nothing prevents PGAU from deleting an active data definition while a call definition still references it.</p>
</div>
<!-- class="sect2" -->
<div id="APPUG934" class="sect2"><a id="sthref340"></a>
<h3 class="sect2">Keywords<a id="sthref341"></a><a id="sthref342"></a><a id="sthref343"></a></h3>
<p>All PGAU keywords can be specified in upper or lower case and are not reserved words. Reservation is not necessary because all keywords have known spelling and appear in predictable places, and because all data is delimited by parentheses, apostrophes, quotes, or blanks.</p>
<p>Note that all unquoted values specified by keywords are stored in the <a id="sthref344"></a>PG Data Dictionary in uppercase unless otherwise specified in the keyword description.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1008253"></a>
<div id="APPUG935" class="sect1">
<h2 class="sect1">PGAU Commands<a id="sthref345"></a></h2>
<p>PGAU allows you to enter Procedural Gateway Administration commands (commands), such as <code dir="ltr">DEFINE</code>, <code dir="ltr">UNDEFINE</code>, <code dir="ltr">REDEFINE</code>, and <code dir="ltr">GENERATE</code>, in addition to normal SQL commands. The <code dir="ltr">SET</code> and <code dir="ltr">SHOW</code> commands are also implemented. In addition, the PGAU commands listed in the following section are available to you.</p>
<a id="i1006723"></a>
<div id="APPUG936" class="sect2">
<h3 class="sect2">CONNECT<a id="sthref346"></a></h3>
<p class="subhead1"><a id="APPUG1179"></a>Purpose</p>
<p>This command enables you to make a connection to PGAU. Use the <code dir="ltr">CONNECT</code> command to log on to an Oracle database, optionally specifying the user&nbsp;ID and password in addition to the Oracle instance. The <a id="sthref347"></a><code dir="ltr">CONNECT</code> command has the following syntax:</p>
<p class="subhead1"><a id="APPUG1180"></a>Syntax</p>
<p>For Microsoft Windows:</p>
<pre dir="ltr"><span class="italic">CONNECT [username|username/password|username@connect-string|username\password@connect-string</span> 
</pre>
<p>For UNIX based systems:</p>
<pre dir="ltr"><span class="italic">CONNECT [username|username/password|username@connect-string|username/password@connect-string</span> 
</pre>
<p class="subhead1"><a id="APPUG1181"></a>Parameters<a id="sthref348"></a></p>
<p><code dir="ltr"><span class="codeinlineitalic">username\password</span></code> for Microsoft Windows and <code dir="ltr">username/password</code> for UNIX based systems are the usernames and passwords used to connect to PGAU,</p>
<p>and</p>
<p><code dir="ltr"><span class="codeinlineitalic">connect-string</span></code> specifies the service name of the remote database.</p>
<p>Refer to the <a class="olink NETAG" href="../NETAG/toc.htm"><span class="italic">Oracle Database Net Services Administrator&#39;s Guide Services Administrator&#39;s Guide</span></a> for more information about specifying remote databases.</p>
<p class="subhead1"><a id="APPUG1182"></a>Examples</p>
<pre dir="ltr">CONNECT              
CONNECT SCOTT/TIGER  
CONNECT SCOTT@OTHERSYS
</pre>
<p class="subhead1"><a id="APPUG1183"></a>CONNECT Usage Notes</p>
<ul>
<li>
<p>Before connecting, you must set <code dir="ltr">ORACLE_SID</code> to the database <code dir="ltr">SIDname</code>.</p>
</li>
<li>
<p>If you want to connect to a remote database, you must set <code dir="ltr">TNS_ADMIN</code> to the full pathname of the directory in which the file <code dir="ltr">tnsnames.ora</code> is stored.</p>
</li>
<li>
<p>You do not need to place a semi colon (;) at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006743"></a>
<div id="APPUG937" class="sect2">
<h3 class="sect2">DEFINE CALL<a id="sthref349"></a><a id="sthref350"></a></h3>
<p class="subhead1"><a id="APPUG1184"></a>Purpose</p>
<p><a id="sthref351"></a>This command creates a new version of the PL/SQL call definition in the PG Data Dictionary.</p>
<p class="subhead1"><a id="APPUG1185"></a>Syntax</p>
<pre dir="ltr">DEFINE CALL <span class="italic">cname</span> 
   [PKGCALL(<span class="italic">pcname</span>)]
   [PARMS( <span class="italic">(dname</span> 
           {IN | OUT | IN OUT}
           [VERSion(<span class="italic">datavers</span>)]), ...)];   
</pre>
<p>Where <a href="#g1018665">Table 2-1</a> describes the parameters in this syntax:</p>
<div id="APPUG1186" class="tblformal">
<p class="titleintable"><a id="sthref352"></a><a id="g1018665"></a>Table 2-1 DEFINE CALL Parameter Descriptions</p>
<table class="cellalignment6315" title="DEFINE CALL Parameter Descriptions" summary="describes the parameters in the DEFINE CALL syntax" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t5">Parameter</th>
<th class="cellalignment6316" id="r1c2-t5">Definition</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr"><span class="codeinlineitalic">CALL cname</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t5 r1c2-t5">
<p>is a mandatory parameter. It is the name of the call definition to be created.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">PKGCALL</code> <code dir="ltr">(</code><code dir="ltr"><span class="codeinlineitalic">pcname)</span></code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t5 r1c2-t5">
<p>is an optional parameter. It specifies the name of the <a id="sthref353"></a>PL/SQL package procedure or function by which the application might invoke the call. The default value, <code dir="ltr"><span class="codeinlineitalic">cname</span></code>, is assumed if this operand is omitted, in which case <code dir="ltr"><span class="codeinlineitalic">cname</span></code> must also be valid in PL/SQL syntax and unique within the transactions and TIPs referencing this call.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">PARMS</code>( (<code dir="ltr"><span class="codeinlineitalic">dname</span></code></p>
<p>{<code dir="ltr">IN|OUT|IN OUT</code>} [</p>
<p><code dir="ltr">VERSION(</code><code dir="ltr"><span class="codeinlineitalic">datavers</span></code><code dir="ltr">)]),</code> <code dir="ltr">.</code> <code dir="ltr">.</code> <code dir="ltr">.)</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t5 r1c2-t5">
<p>is an optional parameter. It specifies a list of previously defined data input to and output from this PL/SQL function call, and the type of each parameter (input to the call, output from, or both). The order in which the parameters are specified determines the order in which they must appear in subsequent calls to the TIP from an application.</p>
<p>Each <code dir="ltr"><span class="codeinlineitalic">dname</span></code> specifies a previously defined data item, and is mandatory. <code dir="ltr">{IN | OUT | IN OUT}</code> specifies the PL/SQL call mode of the parameter and indicates whether the <code dir="ltr">dname</code> data is sent, received, or both in the exchange with the remote transaction program. One must be chosen. <code dir="ltr">VERS</code>(<code dir="ltr"><span class="codeinlineitalic">datavers</span></code>) is an optional specific version number of the <code dir="ltr"><span class="codeinlineitalic">dname</span></code> data definition, if not the latest. If this operand is omitted, it is assumed that the call takes no parameters.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1187"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634298">&#34;Sample PGAU DEFINE CALL Statements&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">DEFINE CALL</code> commands.</p>
<p class="subhead1"><a id="i1006771"></a><a id="APPUG1188"></a>DEFINE CALL Usage Notes</p>
<ul>
<li>
<p>Version of the <code dir="ltr">CALL</code> definition is not specified and defaults to <code dir="ltr">NEXTVAL</code> of the Oracle Sequence Object for <code dir="ltr">CALL</code>.</p>
</li>
<li>
<p><code dir="ltr">PKGCALL</code> and <code dir="ltr">PARMS</code> can be specified in either order.</p>
</li>
<li>
<p>You need to place a semi colon (;) at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006776"></a>
<div id="APPUG938" class="sect2">
<h3 class="sect2">DEFINE DATA<a id="sthref354"></a></h3>
<p class="subhead1"><a id="APPUG1189"></a>Purpose</p>
<p>This command creates a new version of the data definition in the PG DD.</p>
<p class="subhead1"><a id="APPUG1190"></a>Syntax</p>
<pre dir="ltr">DEFINE DATA <span class="italic">dname</span> 
   [PLSDNAME(<span class="italic">plsdvar)</span>]
   [USAGE({PASS|ASIS|SKIP})]
   [COMPOPTS (&#39;options&#39;)]
   LANGUAGE<span class="italic">(language)</span> 
   {<span class="italic">(definition)</span>|INFILE(&#34;<span class="italic">filespec</span>&#34;)};  
</pre>
<p class="subhead1"><a id="APPUG1191"></a><a id="sthref355"></a>Parameters</p>
<p><a href="#g1018685">Table 2-2</a> describes the <code dir="ltr">DEFINE DATA</code> parameters:</p>
<div id="APPUG1192" class="tblformal">
<p class="titleintable"><a id="sthref356"></a><a id="g1018685"></a>Table 2-2 DEFINE DATA Parameter Descriptions</p>
<table class="cellalignment6315" title="DEFINE DATA Parameter Descriptions" summary="describes the DEFINE DATA parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t6">Parameter</th>
<th class="cellalignment6316" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">DATA</code> <code dir="ltr"><span class="codeinlineitalic">dname</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t6 r1c2-t6">
<p>is a mandatory parameter. It is the name of the data definition to be created.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">PLSDNAME (</code><code dir="ltr"><span class="codeinlineitalic">plsdvar</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t6 r1c2-t6">
<p>is an optional parameter. It is the name of the PL/SQL variable associated with <code dir="ltr">dname</code>. It becomes the name of a PL/SQL variable if the <code dir="ltr">dname</code> item is atomic data, or a PL/SQL record variable if the <code dir="ltr">dname</code> item is aggregate data (such as a record or structure), when the TIP is generated.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">USAGE({PASS|ASIS|</code></p>
<p><code dir="ltr">SKIP})</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t6 r1c2-t6">
<p>is an optional parameter. It specifies the way the TIP handles the data items when exchanged in calls with the remote transaction.</p>
<p><code dir="ltr">PASS</code> indicates that the item should be translated and exchanged with the transaction.</p>
<p><code dir="ltr">ASIS</code> indicates the item is binary and, though exchanged, should not be translated.</p>
<p><code dir="ltr">SKIP</code> indicates the item should be deleted from all exchanges.</p>
<p>The default value, <code dir="ltr">PASS</code>, is assumed if this parameter is omitted.</p>
<p>The <code dir="ltr">USAGE(NULL)</code> keyword on <code dir="ltr">DEFINE</code> or <code dir="ltr">REDEFINE DATA</code> PGAU statements is not supported.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t6" headers="r1c1-t6">
<p><code dir="ltr">COMPOPTS</code></p>
<p><code dir="ltr">(&#39;options&#39;)</code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t6 r1c2-t6">
<p>is an optional parameter. It specifies the compiler options used when compiling the data definition on the remote host. The only option currently supported is &#39;<code dir="ltr">TRUNC(BIN)</code>&#39;. Note that the options must be enclosed in apostrophes (&#39;) or quotes (&#34;). <code dir="ltr">TRUNC(BIN)</code> is a COBOL option that affects the way halfword and fullword binary values are handled.</p>
<p>Refer to <a href="#i1006847">&#34;DEFINE DATA Usage Notes&#34;</a> for further information on this option.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t6" headers="r1c1-t6">
<p><code dir="ltr">LANGUAGE</code></p>
<p><code dir="ltr">(</code><code dir="ltr"><span class="codeinlineitalic">language</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t6 r1c2-t6">
<p>is a mandatory parameter. It specifies the name of the programming language in the supplied definition. PGAU presently supports only COBOL.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t6" headers="r1c1-t6">
<p><code dir="ltr"><span class="codeinlineitalic">(definition)</span></code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t6 r1c2-t6">
<p>is mutually exclusive with the <code dir="ltr">INFILE</code> parameter. It is an inline description of the data. The description must be provided in COBOL syntax, as indicated above. This inline description must begin with an opening parenthesis and end with a closing parenthesis. The opening parenthesis must be the last non-blank character on the line and the COBOL data definition must start on a new line, following the standard COBOL rules for column usage and continuations. The closing parenthesis and terminating semicolon must be on a separate line following the last line of the COBOL data definition. In COBOL, the specification is a COBOL data item or structure, defined in accordance with COBOL. Margins are assumed to be standard, and explicit or implicit continuation is supported. Datanames containing invalid characters (for example, &#34;-&#34;) for PL/SQL use are translated to their closest equivalent and truncated as required.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t6" headers="r1c1-t6">
<p><code dir="ltr">INFILE (</code><code dir="ltr"><span class="codeinlineitalic">&#34;filespec&#34;</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t6 r1c2-t6">
<p>is mutually exclusive with the <span class="italic">(</span><code dir="ltr">definition</code><span class="italic">)</span> parameter. It indicates that the definition is to be read from the user disk file described by <code dir="ltr"><span class="codeinlineitalic">filespec,</span></code> instead of an inline definition described by <code dir="ltr">(definition)</code>.</p>
<p>Note that <code dir="ltr"><span class="codeinlineitalic">filespec</span></code> must be enclosed in double quotes.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1193"></a>Examples</p>
<p>Refer to <a href="apg.htm#i635215">&#34;Sample PGAU DEFINE DATA Statements&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">DEFINE DATA</code> commands.</p>
<p class="subhead1"><a id="i1006847"></a><a id="APPUG1194"></a>DEFINE DATA Usage Notes</p>
<ul>
<li>
<p>Version of the <code dir="ltr">DATA</code> definition is not specified and defaults to <code dir="ltr">NEXTVAL</code> of the Oracle Sequence Object for <code dir="ltr">DATA</code>.</p>
</li>
<li>
<p><code dir="ltr">PLSDNAME</code>, <code dir="ltr">USAGE</code>, and <code dir="ltr">LANGUAGE</code> can be specified in any order.</p>
</li>
<li>
<p><code dir="ltr">INFILE</code> (&#34;<code dir="ltr"><span class="codeinlineitalic">filespec&#34;</span></code>) is a platform-specific designation of a disk file.</p>
</li>
<li>
<p><code dir="ltr">COMPOPTS (&#39;TRUNC(BIN)&#39;)</code> should be used only when the remote host transaction was compiled using COBOL with the <code dir="ltr">TRUNC(BIN)</code> compiler option specified. When this option is used, binary data items defined as <code dir="ltr">PIC 9(4)</code> or <code dir="ltr">PIC S9(4)</code> can actually contain values with 5 digits, and binary data items defined as <code dir="ltr">PIC 9(9)</code> or <code dir="ltr">PIC S9(9)</code> can actually contain values with 10 digits. Without <code dir="ltr">COMPOPTS (&#39;TRUNC(BIN)&#39;)</code>, PGAU generates <code dir="ltr">NUMBER(4,0)</code> or <code dir="ltr">NUMBER(9,0)</code> fields for these data items, resulting in possible truncation of the values.</p>
<p>When <code dir="ltr">COMPOPTS (&#39;TRUNC(BIN)&#39;)</code> is specified, PGAU generates <code dir="ltr">NUMBER(5,0)</code> or <code dir="ltr">NUMBER(10, 0)</code> fields for these data items, avoiding any truncation of the values. Care must be taken when writing the client application to ensure that invalid values are not sent to the remote host transaction.</p>
<p>For a <code dir="ltr">PIC 9(4)</code> the value must be within the range <code dir="ltr">0</code> to <code dir="ltr">32767</code>, for a <code dir="ltr">PIC S9(4)</code> the value must be within the range <code dir="ltr">-32767</code> to <code dir="ltr">+32767</code>, for a <code dir="ltr">PIC 9(9)</code> the value must be within the range <code dir="ltr">0</code> to <code dir="ltr">2,147,483,647</code>, and for a <code dir="ltr">PIC S9(9)</code> the value must be within the range <code dir="ltr">-2,147,483,647</code> to <code dir="ltr">+2,147,483,647</code>. COBOL always reserves the high-order bit of binary fields for a sign, so the value ranges for unsigned fields are limited to the absolute values of the value ranges for signed fields. For further information, refer to the appropriate IBM COBOL programming manuals.</p>
</li>
<li>
<p>Refer to <a href="apd.htm#g640399">&#34;USAGE(PASS)&#34;</a> in <a href="apd.htm#g640607">Appendix D, &#34;Datatype Conversions&#34;</a> for information about how PGAU converts COBOL statements.</p>
</li>
<li>
<p>You need to place a semi colon (;) at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006863"></a>
<div id="APPUG939" class="sect2">
<h3 class="sect2">DEFINE TRANSACTION<a id="sthref357"></a><a id="sthref358"></a></h3>
<p class="subhead1"><a id="APPUG1195"></a>Purpose</p>
<p>This command creates a new version of the transaction definition in the <a id="sthref359"></a>PG Data Dictionary.</p>
<p class="subhead1"><a id="APPUG1196"></a>Syntax</p>
<pre dir="ltr">DEFINE TRANSACTION <span class="italic">tname</span> 
CALL(<span class="italic">cname</span> [VERS(<span class="italic">callvers</span>)], ...   
    [ENVIRONMENT(<span class="italic">name</span>)]
    {SIDEPROFILE(<span class="italic">name</span>) [LUNAME(<span class="italic">name</span>)] [TPNAME(<span class="italic">name</span>)]
                                      [LOGMODE(<span class="italic">name</span><span class="codeinlineitalic">)</span>] |
    LUNAME(<span class="italic">name</span>) TPNAME(<span class="italic">name</span>) LOGMODE(<span class="italic">name</span>)}
    [SYNCLEVEL(0|1|2)]
    [NLS_LANGUAGE(<span class="italic">&#34;nlsname&#34;</span>)];
    [REMOTE_MBCS(&#34;nlsname&#34;)]
    [LOCAL_MBCS(&#34;nlsname&#34;)];   
</pre>
<p class="subhead1"><a id="APPUG1197"></a>Parameters<a id="sthref360"></a><a id="sthref361"></a></p>
<p><a href="#g1018327">Table 2-3</a> describes the <code dir="ltr">DEFINE TRANSACTION</code> parameters:</p>
<div id="APPUG1198" class="tblformal">
<p class="titleintable"><a id="sthref362"></a><a id="g1018327"></a>Table 2-3 DEFINE TRANSACTION Parameter Descriptions</p>
<table class="cellalignment6315" title="DEFINE TRANSACTION Parameter Descriptions" summary="describes the DEFINE TRANSACTION parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t7">Parameter</th>
<th class="cellalignment6316" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a id="sthref363"></a>TRANSACTION</code> <code dir="ltr"><span class="codeinlineitalic">tname</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t7 r1c2-t7">
<p>A mandatory parameter. It is the name of the transaction definition to be created. If you do not specify a package name (TIP name) in the <code dir="ltr">GENERATE</code> statement, the transaction name specified here will become the package name, by default. In that case, the <code dir="ltr"><span class="codeinlineitalic">tname</span></code> must be unique and must be in valid PL/SQL syntax within the database containing the PL/SQL packages.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">CALL(</code><code dir="ltr"><span class="codeinlineitalic">cname</span></code> <code dir="ltr">[VERS(</code><code dir="ltr"><span class="codeinlineitalic">callvers</span></code><code dir="ltr">)], ...)</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t7 r1c2-t7">
<p>A mandatory parameter. It specifies a list of previously defined calls (created with <code dir="ltr">DEFINE CALL</code>) which, taken together, comprise this transaction. The order in which the calls are specified here determines the order in which they are created by <code dir="ltr">GENERATE</code>, but not necessarily the order in which they might be called by an application. <code dir="ltr">VERS</code>(<code dir="ltr">callvers)</code> is an optional specific version number of the call definition, if not the latest.</p>
<p>The relative position of each <code dir="ltr"><span class="codeinlineitalic">cname</span></code> in its left-to-right sequence is the seq# column in <code dir="ltr">pga_trans_calls</code>. For example:</p>
<p><code dir="ltr">CALL (cname1, cname2,cname3)</code></p>
<p><code dir="ltr">pga_trans_calls(seq#) = 1</code></p>
<p><code dir="ltr">2 3</code></p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr">ENVIRONMENT (</code><code dir="ltr"><span class="codeinlineitalic">name</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t7 r1c2-t7">
<p>Specifies the name of the host environment for this transaction, for example, <code dir="ltr">IBM370</code>. If this parameter is omitted, <code dir="ltr">IBM370</code> is assumed. <code dir="ltr">IBM370</code> is the only environment supported by this version of PGAU.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a id="sthref364"></a>SIDEPROFILE (</code><code dir="ltr"><span class="codeinlineitalic">name</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t7 r1c2-t7">
<p><span class="bold">This parameter is optional for a gateway using SNA, but if omitted, the user must specify</span> the parameters for <code dir="ltr">LUNAME</code>, <code dir="ltr">TPNAME</code>, and <code dir="ltr">LOGMODE</code>. It specifies the name of an SNA Side Information Profile which directs the APPC connection to the transaction manager. This name can be <code dir="ltr">1</code> to <code dir="ltr">8</code> characters in length. Name values can be alphanumeric with&#39;@&#39;, &#39;#&#39;, and &#39;$&#39; characters only if unquoted. Quoted values can contain any character, and delimited by quotes (&#34;), or apostrophes (&#39;). Case is preserved for all values.</p>
<p><span class="bold">This parameter is mandatory for a gateway using the TCP/IP connection</span>. It has no comparable SNA meaning.</p>
<p>You need to run the <a id="sthref365"></a><code dir="ltr">pg4tcpmap</code> tool to map this name to the hostname, port number, subsystem ID and any other desired attribute of IMS Connect.</p>
<p>This name represents a group of IMS transactions with similar IMS Connect attributes. You can re-use the same name as long as they share the same IMS Connect attributes, such as subsystem ID, TIME delay or socket type. Refer to <a href="tcpmap.htm#g1011686">Chapter 6, &#34;PG4TCPMAP Commands (TCP/IP Only)&#34;</a> for details.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t7" headers="r1c1-t7">
<p><code dir="ltr">LUNAME</code><code dir="ltr"><span class="codeinlineitalic">(name</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t7 r1c2-t7">
<p><span class="bold">This parameter is optional on a gateway using SNA:</span> Overrides the LUNAME within the Side Information Profile, if the Side Information Profile was specified. It specifies the SNA Logical Unit name of the transaction manager (OLTP).</p>
<p>This is either the fully-qualified LU name, <code dir="ltr">3</code> to <code dir="ltr">17</code> characters in length, or an LU alias <code dir="ltr">1</code> to <code dir="ltr">8</code> characters in length (when the SNA software on your gateway system supports LU aliases).</p>
<p>Name values can be alphanumeric with&#39;@&#39;, &#39;#&#39;, and&#39;$&#39; characters and a single period &#39;.&#39;, to delimit the network from the LU, as in netname.luname, if fully qualified. Quoted values can contain any character, and delimited by quotes (&#34;), or apostrophes (&#39;). Case is preserved for all values.</p>
<p><span class="bold">This parameter is not applicable when using the TCP/IP communication protocol</span>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t7" headers="r1c1-t7">
<p><code dir="ltr">TPNAME (</code><code dir="ltr"><span class="codeinlineitalic">name</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t7 r1c2-t7">
<p><span class="bold">This parameter is optional on a gateway using SNA:</span> Overrides the <code dir="ltr">TPNAME</code> within the Side Profile, if the Side profile was specified. It specifies the partner Transaction Program name to be invoked.</p>
<ul>
<li>
<p>For CICS, this must be the CICS Transaction ID and is <code dir="ltr">1</code> to <code dir="ltr">4</code> characters in length.</p>
</li>
<li>
<p>For IMS, this must be the IMS Transaction Name and is <code dir="ltr">1</code> to <code dir="ltr">8</code> characters in length.</p>
</li>
<li>
<p>For AS/400, this must be specified as &#34;library/program&#34; and cannot exceed <code dir="ltr">21</code> bytes.</p>
</li>
</ul>
<p>Name values can be alphanumeric with&#39;@&#39;, &#39;#&#39;, and&#39;$&#39; characters only if unquoted. Quoted values can contain any character, and delimited by quotes (&#34;), or apostrophes (&#39;). Case is preserved for all values.</p>
<p>This parameter is required for a gateway using TCP/IP support for IMS Connect. It must be the IMS Transaction Name.</p>
<ul>
<li>
<p>The IMS Transaction Name must be <code dir="ltr">1</code> to <code dir="ltr">8</code> characters in length.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t7" headers="r1c1-t7">
<p><code dir="ltr">LOGMODE(</code><code dir="ltr"><span class="codeinlineitalic">name</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t7 r1c2-t7">
<p><span class="bold">This parameter is optional on a gateway using SNA:</span> Overrides the <code dir="ltr">LOGMODE</code> within the <a id="sthref366"></a>Side Information Profile, if the Side Information Profile was specified. It specifies the name of a VTAM logmode table entry to be used to communicate with this transaction, and is 1-8 characters in length.</p>
<p>Name values can be alphanumeric with &#39;@&#39;, &#39;#&#39;, and &#39;$&#39; characters only. Values cannot be quoted. Case is not preserved and always translated to upper case.</p>
<p><span class="bold">This parameter is not applicable when using the TCP/IP communication protocol</span>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r9c1-t7" headers="r1c1-t7">
<p><code dir="ltr">SYNCLEVEL (0|1)</code></p>
</td>
<td class="cellalignment6317" headers="r9c1-t7 r1c2-t7">
<p><span class="bold">This parameter is optional on a gateway using SNA:</span> It specifies the APPC <code dir="ltr">SYNCLEVEL</code> of this transaction (&#39;<code dir="ltr">0</code>&#39; or &#39;<code dir="ltr">1</code>&#39;). The default value of <code dir="ltr">0</code> is assumed if this operand is omitted, indicating the remote transaction program does not support synchronization. A value of &#39;1&#39; indicates that <code dir="ltr">CONFIRM</code> is supported.</p>
<p><span class="bold">On a gateway using TCP/IP</span>: The default of this parameter is &#39;0&#39;, which is the only accepted value.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r10c1-t7" headers="r1c1-t7">
<p><code dir="ltr">NLS_LANGUAGE</code> <code dir="ltr"><span class="codeinlineitalic">(&#34;nlsname&#34;)</span></code></p>
</td>
<td class="cellalignment6317" headers="r10c1-t7 r1c2-t7">
<p>This is an optional parameter. The default value is &#34;<code dir="ltr">american_america.we8ebcdic37c</code>&#34;. It is an Globalization Support name in the <code dir="ltr">language_territory.charset</code> format. It specifies the Globalization Support name in which the remote host data for all single-byte character set fields in the transaction are encoded.</p>
<p><span class="bold">Note that if you are using TCP/IP, make sure that you set this parameter to &#34;american_america.us7ascii&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r11c1-t7" headers="r1c1-t7">
<p><code dir="ltr">REMOTE_MBCS</code> <code dir="ltr"><span class="codeinlineitalic">(&#34;nlsname&#34;)</span></code></p>
</td>
<td class="cellalignment6317" headers="r11c1-t7 r1c2-t7">
<p>This is an optional parameter. The default value is &#34;<code dir="ltr">japanese_japan.jal6dbcs</code>&#34;. It is an Globalization Support name in the <code dir="ltr">language_territory.charset</code> format. It specifies the Globalization Support name in which the remote host data for all multi-byte character set fields in the transaction are encoded.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r12c1-t7" headers="r1c1-t7">
<p><code dir="ltr">LOCAL_MBCS</code></p>
<p><code dir="ltr"><span class="codeinlineitalic">(&#34;nlsname&#34;)</span></code></p>
</td>
<td class="cellalignment6317" headers="r12c1-t7 r1c2-t7">
<p>This is an optional parameter. The default value is &#34;<code dir="ltr">japanese_japan.jal6dbcs</code>&#34;. It is an Globalization Support name in the <code dir="ltr">language_territory.charset</code> format. It specifies the Globalization Support name in which the local host data for all multi-byte character set fields in the transaction are encoded.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1199"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634308">&#34;Sample PGAU DEFINE TRANSACTION Statement&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">DEFINE TRANSACTION</code>s commands.</p>
<p class="subhead1"><a id="APPUG1200"></a>DEFINE TRANSACTION Usage Notes:</p>
<ul>
<li>
<p><code dir="ltr">NLS_LANGUAGE</code> and the Oracle database&#39;s <code dir="ltr">LANGUAGE</code> specify default character sets to be used for conversion of all single-byte character fields for the entire transaction. These defaults can be overridden for each SBCS field by the <code dir="ltr">REDEFINE DATA REMOTE_LANGUAGE</code> or <code dir="ltr">LOCAL_LANGUAGE</code> parameters.</p>
</li>
<li>
<p>The version of the <code dir="ltr">TRANSACTION</code> definition is not specified and defaults to <code dir="ltr">NEXTVAL</code> of the Oracle Sequence Object for <code dir="ltr">TRANS</code>.</p>
</li>
<li>
<p><code dir="ltr">REMOTE_MBCS</code> and <code dir="ltr">LOCAL_MBCS</code> specify the default multi-byte character sets to be used for conversion of all DBCS or MBCS fields for the entire transaction. This default can be overridden for each DBCS or MBCS field by the <code dir="ltr">REDEFINE DATA REMOTE_LANGUAGE</code> or <code dir="ltr">LOCAL_LANGUAGE</code> parameters.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG940" class="sect2"><a id="sthref367"></a>
<h3 class="sect2">DESCRIBE<a id="sthref368"></a></h3>
<p class="subhead1"><a id="APPUG1201"></a>Purpose</p>
<p><a id="sthref369"></a>Use this command to describe a table, view, stored procedure, or function. If neither <code dir="ltr">TABLE</code>, <code dir="ltr">VIEW</code>, nor <code dir="ltr">PROCEDURE</code> are explicitly specified, the table or view with the specified name is described.</p>
<p class="subhead1"><a id="APPUG1202"></a>Syntax</p>
<p>The <code dir="ltr">DESCRIBE</code> command has the following syntax:</p>
<pre dir="ltr">DESCRIBE [TABLE <span class="italic">table</span>|VIEW <span class="italic">view</span>|PROCEDURE <span class="italic">proc|some_name</span>]
</pre>
<p class="subhead1"><a id="APPUG1203"></a>Parameters<a id="sthref370"></a></p>
<p><a href="#g1018367">Table 2-4</a> describes the <code dir="ltr">DESCRIBE</code> parameter:</p>
<div id="APPUG1204" class="tblformal">
<p class="titleintable"><a id="sthref371"></a><a id="g1018367"></a>Table 2-4 DESCRIBE Parameter Descriptions</p>
<table class="cellalignment6315" title="DESCRIBE Parameter Descriptions" summary="describes the DESCRIBE parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t8">Parameter</th>
<th class="cellalignment6316" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">table</code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t8 r1c2-t8">
<p>is the tablename</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">view</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t8 r1c2-t8">
<p>is the viewname</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">proc</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t8 r1c2-t8">
<p>is the procedurename</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1205"></a>Examples</p>
<pre dir="ltr">DESCRIBE PROCEDURE SCOTT.ADDEMP   
DESCRIBE SYS.DUAL
DESCRIBE TABLE SCOTT.PERSONNEL
DESCRIBE VIEW SCOTT.PVIEW
</pre>
<p class="subhead1"><a id="APPUG1206"></a>DESCRIBE Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG941" class="sect2"><a id="sthref372"></a>
<h3 class="sect2">DISCONNECT<a id="sthref373"></a></h3>
<p class="subhead1"><a id="APPUG1207"></a>Purpose</p>
<p><a id="sthref374"></a>Use this command to disconnect from an Oracle database.</p>
<p class="subhead1"><a id="APPUG1208"></a>Syntax</p>
<p>The <code dir="ltr">DISCONNECT</code> command has the following syntax:</p>
<pre dir="ltr">DISCONNECT    
</pre>
<p class="subhead1"><a id="APPUG1209"></a><a id="sthref375"></a>Parameters</p>
<p>None</p>
<p class="subhead1"><a id="APPUG1210"></a>Examples</p>
<p>None</p>
<p class="subhead1"><a id="APPUG1211"></a>DISCONNECT Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG942" class="sect2"><a id="sthref376"></a>
<h3 class="sect2">EXECUTE<a id="sthref377"></a></h3>
<p class="subhead1"><a id="APPUG1212"></a>Purpose</p>
<p><a id="sthref378"></a>Use this command to execute a one-line PL/SQL statement.</p>
<p class="subhead1"><a id="APPUG1213"></a>Syntax</p>
<p>The <code dir="ltr">EXECUTE</code> command has the following syntax:</p>
<pre dir="ltr">EXECUTE <span class="italic">pl/sql block</span>  
</pre>
<p class="subhead1"><a id="APPUG1214"></a>Parameters<a id="sthref379"></a></p>
<p><code dir="ltr"><span class="codeinlineitalic">pl/sql block</span></code> is any valid pl/sql block. Refer to the <a class="olink LNPLS" href="../LNPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information.</p>
<p class="subhead1"><a id="APPUG1215"></a>Examples</p>
<pre dir="ltr">EXECUTE :balance := get_balance(333)
</pre>
<p class="subhead1"><a id="APPUG1216"></a>EXECUTE Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG943" class="sect2"><a id="sthref380"></a>
<h3 class="sect2">EXIT<a id="sthref381"></a></h3>
<p class="subhead1"><a id="APPUG1217"></a>Purpose</p>
<p><a id="sthref382"></a>Use this command to terminate PGAU.</p>
<p class="subhead1"><a id="APPUG1218"></a>Syntax</p>
<p>The <code dir="ltr">EXIT</code> command has the syntax:</p>
<pre dir="ltr">EXIT
</pre>
<p class="subhead1"><a id="APPUG1219"></a>Parameters<a id="sthref383"></a></p>
<p>None</p>
<p class="subhead1"><a id="APPUG1220"></a>Examples</p>
<p>None</p>
<p class="subhead1"><a id="APPUG1221"></a>EXIT Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
<li>
<p>The &#34;quit&#34; command is not a valid statement in PGAU.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1007070"></a>
<div id="APPUG944" class="sect2">
<h3 class="sect2">GENERATE<a id="sthref384"></a></h3>
<p class="subhead1"><a id="APPUG1222"></a>Purpose</p>
<p><a id="i1007074"></a>A PL/SQL package is built and written to the indicated output files. The PG Data Dictionary is not updated by this command.</p>
<p class="subhead1"><a id="APPUG1223"></a>Syntax</p>
<pre dir="ltr">GENERATE <span class="italic">tname</span> 
  [VERSion(<span class="italic">tranvers</span>)]
  [PKGNAME(<span class="italic">pname</span>)]
  [PGANODE(<span class="italic">dblink_name</span>)]
  [OUTFILE(&#34;[<span class="italic">specpath</span>]{<span class="italic">specname</span>}[.{<span class="italic">spectype</span>}]&#34;)]
          [,&#34;[<span class="italic">bodypath</span>]{<span class="italic">bodyname</span><span class="codeinlineitalic">}</span>[.{<span class="italic">bodytype</span>}]]&#34;)
  [DIAGNOSE ({[TRACE({[SE] [,IT] [,QM] [,IO] [,OC] [,DD] [,TG] })]
             [PKGEX({[DC][,DR]})])};   
</pre>
<p class="subhead1"><a id="APPUG1224"></a>Parameters<a id="sthref385"></a></p>
<p><a href="#g1018383">Table 2-5</a> describes the <code dir="ltr">GENERATE</code> parameters:</p>
<div id="APPUG1225" class="tblformal">
<p class="titleintable"><a id="sthref386"></a><a id="g1018383"></a>Table 2-5 GENERATE Parameter Descriptions</p>
<table class="cellalignment6315" title="GENERATE Parameter Descriptions" summary="describes the GENERATE parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t9">Parameter</th>
<th class="cellalignment6316" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">tname</code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t9 r1c2-t9">
<p>is a mandatory parameter. It is the transaction name defined in a <code dir="ltr">DEFINE TRANSACTION</code> statement.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">VERSion(</code><code dir="ltr"><span class="codeinlineitalic">transvers</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t9 r1c2-t9">
<p>is an optional parameter. It specifies which transaction definition is to be used. The <code dir="ltr">VERsion</code> parameter defaults to highest numbered transaction if not specified.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t9" headers="r1c1-t9">
<p><code dir="ltr">PKGNAME(</code><code dir="ltr"><span class="codeinlineitalic">pname</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t9 r1c2-t9">
<p>is an optional parameter. It specifies the name of the PL/SQL package to be created. If this operand is omitted, the package name is assumed to be the same as the transaction name.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t9" headers="r1c1-t9">
<p><code dir="ltr">PGANODE (</code><code dir="ltr"><span class="codeinlineitalic">dblink_name</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t9 r1c2-t9">
<p>is an optional parameter. It specifies the Oracle database link name to the gateway server. If this operand is omitted, &#34;PGA&#34; is assumed to be the <code dir="ltr"><span class="codeinlineitalic">dblink_name</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t9" headers="r1c1-t9">
<p><code dir="ltr">OUTFILE</code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t9 r1c2-t9">
<p>is an optional parameter. If this parameter is specified, <code dir="ltr"><span class="codeinlineitalic">specname</span></code> must also be specified.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t9" headers="r1c1-t9">
<p><code dir="ltr"><span class="codeinlineitalic">specpath</span></code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t9 r1c2-t9">
<p>is the optional directory path of the TIP specification and the TIP content documentation. It defaults to the current directory. The value must end with a backslash (\) for Microsoft Windows and a slash (/) for UNIX based systems.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t9" headers="r1c1-t9">
<p><code dir="ltr"><span class="codeinlineitalic">specname</span></code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t9 r1c2-t9">
<p>is the filename of the TIP specification and the TIP content documentation. It defaults to <code dir="ltr"><span class="codeinlineitalic">pname</span></code>, if specified, or else <code dir="ltr">pgau</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r9c1-t9" headers="r1c1-t9">
<p><code dir="ltr"><span class="codeinlineitalic">spectype</span></code></p>
</td>
<td class="cellalignment6317" headers="r9c1-t9 r1c2-t9">
<p>is the optional file extension of the TIP specification and defaults to <code dir="ltr">pkh</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r10c1-t9" headers="r1c1-t9">
<p><code dir="ltr"><span class="codeinlineitalic">bodypath</span></code></p>
</td>
<td class="cellalignment6317" headers="r10c1-t9 r1c2-t9">
<p>is the optional directory path of the TIP body. It defaults to <code dir="ltr"><span class="codeinlineitalic">specpath</span></code>, if specified, or else the current directory. The value must end with a backslash (\) for Microsoft Windows and a slash (/) for UNIX based systems.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r11c1-t9" headers="r1c1-t9">
<p><code dir="ltr"><span class="codeinlineitalic">bodyname</span></code></p>
</td>
<td class="cellalignment6317" headers="r11c1-t9 r1c2-t9">
<p>is the optional file name of the TIP body. It defaults to <code dir="ltr"><span class="codeinlineitalic">specname</span></code>, if specified, or else <code dir="ltr"><span class="codeinlineitalic">pname</span></code>, if specified, or else <code dir="ltr"><span class="codeinlineitalic">pgau</span></code>. If <code dir="ltr"><span class="codeinlineitalic">bodyname</span></code> defaults to <span class="italic">s</span><code dir="ltr"><span class="codeinlineitalic">pecname,</span></code> the leftmost period of <code dir="ltr"><span class="codeinlineitalic">specname</span></code> is used to extract <code dir="ltr"><span class="codeinlineitalic">bodyname</span></code> when <code dir="ltr"><span class="codeinlineitalic">specname</span></code> contains multiple qualifiers.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r12c1-t9" headers="r1c1-t9">
<p><code dir="ltr"><span class="codeinlineitalic">bodytype</span></code></p>
</td>
<td class="cellalignment6317" headers="r12c1-t9 r1c2-t9">
<p>is the optional file extension of the TIP body and defaults to <code dir="ltr">pkb</code>.</p>
<p>The TIP Content output path defaults to <code dir="ltr">specpath</code> or else the current directory. The file id defaults to <code dir="ltr"><span class="codeinlineitalic">specname</span></code>, if specified, or else <code dir="ltr"><span class="codeinlineitalic">pname</span></code><code dir="ltr">,</code> if specified, or else <code dir="ltr">pgau,</code> and always has an extension of <code dir="ltr">.doc</code>.</p>
<p>Refer to the <a href="#i1007278">&#34;GENERATE Usage Notes:&#34;</a> for more examples, and <a href="apf.htm#g638154">Appendix E, &#34;Tip Internals&#34;</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r13c1-t9" headers="r1c1-t9">
<p><code dir="ltr">DIAGNOSE</code></p>
</td>
<td class="cellalignment6317" headers="r13c1-t9 r1c2-t9">
<p>is an optional parameter with two options, <code dir="ltr">TRACE</code> and <code dir="ltr">PKGEX</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r14c1-t9" headers="r1c1-t9">
<p><code dir="ltr">TRACE</code></p>
</td>
<td class="cellalignment6317" headers="r14c1-t9 r1c2-t9">
<p>specifies that an internal trace of the execution of PGAU is written to output file <a id="sthref387"></a><a id="sthref388"></a><code dir="ltr">pgau.trc</code> in the user&#39;s current directory.</p>
<p><code dir="ltr">TRACE</code> suboptions are delimited by commas.</p>
<p>Trace messages are provided as a diagnostic tool to Oracle Support Services and other Oracle representatives to assist them in diagnosing customer problems when generating TIPs. They are part of an Oracle reserved function for which the usage, interface, and documentation might change without notice at Oracle&#39;s sole discretion. This information is provided so customers might document problem symptoms.</p>
<ul>
<li>
<p>SE - Subroutine Entry/Exit</p>
</li>
</ul>
<p>Messages are written tracing subroutine name and arguments upon entry, and subroutine name and conditions at exit.</p>
<ul>
<li>
<p>IT - Initialization/Termination</p>
</li>
</ul>
<p>Messages are written tracing PGAU initialization and termination functions.</p>
<ul>
<li>
<p>QM - Queue Management</p>
</li>
</ul>
<p>Messages are written tracing control block allocation, queuing, searching, dequeuing, and deletion.</p>
<ul>
<li>
<p>IO - Input/Output</p>
</li>
</ul>
<p>Messages are written tracing input, output, and control operations for <code dir="ltr">.dat</code> input files and <code dir="ltr">.wrk</code> and package output files.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r15c1-t9" headers="r1c1-t9">
<p>&nbsp;</p>
</td>
<td class="cellalignment6317" headers="r15c1-t9 r1c2-t9">
<ul>
<li>
<p>DD - PG DD Definitions</p>
</li>
</ul>
<p>Messages are written tracing the loading of transaction, call, data parameter, field, attribute, environment and compiler information from the PG DD.</p>
<ul>
<li>
<p>OC - Oracle Calls</p>
</li>
</ul>
<p>Messages are written tracing the Oracle UPI call results for SQL statement processing and <code dir="ltr">SELECT</code>s from the PG DD.</p>
<ul>
<li>
<p>TG - TIP Generation</p>
</li>
</ul>
<p>Messages are written tracing steps completed in TIP Generation, typically a record for each call, parameter, and data field for which a PL/SQL code segment has been generated.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r16c1-t9" headers="r1c1-t9">
<p><code dir="ltr">PKGEX</code></p>
</td>
<td class="cellalignment6317" headers="r16c1-t9 r1c2-t9">
<p>causes additional TIP execution time diagnostic logic to be included within the generated <a id="sthref389"></a>PL/SQL package.</p>
<p><code dir="ltr">PKGEX</code> suboptions are delimited by commas.</p>
<ul>
<li>
<p>DC - Data Conversion</p>
</li>
</ul>
<p>Enables runtime checking of repeating group limits and the raising of exceptions when such limits are exceeded.</p>
<p>Enables warning messages to be passed from the <code dir="ltr">UTL_PG</code> data conversion functions:</p>
<ul>
<li>
<p><code dir="ltr">NUMBER_TO_RAW</code></p>
</li>
<li>
<p><code dir="ltr">RAW_TO_NUMBER</code></p>
</li>
<li>
<p><code dir="ltr">MAKE_NUMBER_TO_RAW_FORMAT</code></p>
</li>
<li>
<p><code dir="ltr">MAKE_RAW_TO_NUMBER_FORMAT</code></p>
</li>
</ul>
<p>The additional logic checks for the existence of warnings and, if present, causes them to be displayed using <code dir="ltr">DBMS_OUTPUT</code> calls.</p>
<p>The TIP generation default is to suppress such warnings on the presumption that a TIP has been tested with production data and that data conversion anomalies either do not exist, or are known and to be ignored.</p>
<p>If errors occur which might be due to data conversion problems, regeneration of the TIP with <code dir="ltr">PKGEX(DC)</code> enabled might provide additional information.</p>
<p><span class="bold">Note:</span> A runtime switch is also required to execute the warning logic. <code dir="ltr">PKGEX(DC)</code> only causes the warning logic to be included in the TIP. Refer to <a href="pro_det.htm#i1006980">&#34;Controlling TIP Runtime Conversion Warnings&#34;</a> in <a href="pro_det.htm#g1026955">Chapter 8, &#34;Troubleshooting&#34;</a>.</p>
<p>Additional messages are written to a named pipe for tracing the data conversion steps performed by the TIP as it executes.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r17c1-t9" headers="r1c1-t9">&nbsp;</td>
<td class="cellalignment6317" headers="r17c1-t9 r1c2-t9">
<p>This option only causes the trace logic to be generated in the TIP. It must be enabled when the TIP is initialized.</p>
<p>Refer to<a href="pro_det.htm#i1006980">&#34;Controlling TIP Runtime Conversion Warnings&#34;</a> in <a href="pro_det.htm#g1026955">Chapter 8, &#34;Troubleshooting&#34;</a> for more information.</p>
<ul>
<li>
<p>DR - Dictionary Reference</p>
</li>
</ul>
<p>PL/SQL single line Comments are included in TIPs which reference the PG DD id numbers for the definitions causing the TIP function calls and conversions.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1226"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634319">&#34;Sample PGAU GENERATE Statement&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">GENERATE</code> commands.</p>
<p class="subhead1"><a id="i1007278"></a><a id="APPUG1227"></a>GENERATE Usage Notes:</p>
<ul>
<li>
<p>All PGAU <code dir="ltr">GENERATE</code> trace messages are designated PGU-39<span class="italic">nnn</span>. Refer to the <code dir="ltr">%ORACLE_HOME%\dg4appc\mesg\pguus.msg</code> file on Microsoft Windows or <code dir="ltr">$ORACLE_HOME/dg4appc/mesg/pguus.msg</code> on UNIX based systems for further information on any given trace message.</p>
</li>
<li>
<p>The<a id="sthref390"></a><a id="sthref391"></a> <code dir="ltr">pgau.trc</code> trace message output file is overwritten by the next invocation of <code dir="ltr">GENERATE</code>, regardless of the <code dir="ltr">TRACE</code> specification. A trace header record is always written to the <code dir="ltr">pgau.trc</code> file. If a particular trace file is to be saved, it must be copied to another file before the next invocation of <code dir="ltr">GENERATE</code>.</p>
</li>
<li>
<p><code dir="ltr">TRACE</code> options can be specified in any order or combination, and can also be specified with <code dir="ltr">PKGEX</code> operand on the same <code dir="ltr">GENERATE</code> statement.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1007285"></a>
<div id="APPUG945" class="sect2">
<h3 class="sect2">GROUP<a id="sthref392"></a></h3>
<p class="subhead1"><a id="APPUG1228"></a>Purpose</p>
<p>Multiple PGAU commands can be grouped together for purposes of updating the PG DD, and for rolling back all changes resulting from the commands in the group, if any one statement fails.</p>
<p>No <code dir="ltr">COMMIT</code> processing is performed, even if all commands within the group succeed. You perform the <code dir="ltr">COMMIT</code> either by coding <code dir="ltr">COMMIT</code> commands in the PGAU script, outside of <code dir="ltr">GROUP</code>s, or by issuing <code dir="ltr">COMMIT</code> interactively to PGAU.</p>
<p>PGAU issues a savepoint <code dir="ltr">ROLLBACK</code> to conditions before processing the group if any statement within the group fails.</p>
<p class="subhead1"><a id="APPUG1229"></a>Syntax</p>
<pre dir="ltr">GROUP (<span class="italic">pgaustmt1; pgaustmt2; ... pgaustmtN)</span>;  
</pre>
<p class="subhead1"><a id="APPUG1230"></a>Parameters<a id="sthref393"></a></p>
<p><code dir="ltr"><span class="codeinlineitalic">pgaustmtN:</span></code> is a <code dir="ltr">PGAU DEFINE</code>, <code dir="ltr">REDEFINE</code>, or <code dir="ltr">UNDEFINE</code> statement</p>
<p class="subhead1"><a id="APPUG1231"></a>Examples</p>
<pre dir="ltr">GROUP (
       DEFINE DATA EMPNO
            PLSDNAME (EMPNO)
            USAGE (PASS)
            LANGUAGE (IBMVSCOBOLII)
            (
            01 EMP-NO PIC X(6).
            ); 

       DEFINE CALL DB2IMAIN
              PKGCALL (PGADB2I_MAIN)
              PARMS ( (EMPNO      IN ),
                      (EMPREC     OUT)  );

       DEFINE TRANSACTION DB2I
          CALL (   DB2IMAIN,
                   DB2IDIAG   )
          SIDEPROFILE(CICSPROD)
          TPNAME(DB2I)
          LOGMODE(ORAPLU62)
   SYNCLEVEL(0)
   NLS_LANGUAGE(&#34;AMERICAN_AMERICA.WE8EBCDIC37C&#34;);

GENERATE DB2I
   PKGNAME(PGADB2I)
   OUTFILE(&#34;pgadb2i&#34;););
   
</pre>
<p class="subhead1"><a id="i1007330"></a><a id="APPUG1232"></a>GROUP Usage Notes:</p>
<ul>
<li>
<p>No non-PGAU commands, such as ORACLE or SQL, can be placed inside the parentheses delimiting the group.</p>
</li>
<li>
<p>A PGAU script can contain multiple <code dir="ltr">GROUP</code>s. Each <code dir="ltr">GROUP</code> can be interspersed with SQL commands, such as <code dir="ltr">COMMIT</code> or <code dir="ltr">SELECT</code> or with PGAU commands, such as <code dir="ltr">GENERATE</code> or <code dir="ltr">REPORT</code>.</p>
</li>
<li>
<p>The first failing PGAU statement within the group causes a savepoint <code dir="ltr">ROLLBACK</code> to conditions at the beginning of the group. All subsequent commands within the group are flushed and not examined. PGAU execution resumes with the statement following the group. If that statement is a <code dir="ltr">COMMIT</code>, all PG DD changes made before the failing group are committed.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG946" class="sect2"><a id="sthref394"></a>
<h3 class="sect2">HOST<a id="sthref395"></a></h3>
<p class="subhead1"><a id="APPUG1233"></a>Purpose</p>
<p><a id="sthref396"></a>Use this command to execute an operating system command without exiting PGAU.</p>
<p class="subhead1"><a id="APPUG1234"></a>Syntax</p>
<p>The <code dir="ltr">HOST</code> command has the syntax:</p>
<pre dir="ltr">HOST <span class="italic">host_command</span> 
</pre>
<p class="subhead1"><a id="APPUG1235"></a><a id="sthref397"></a>Parameters</p>
<p><code dir="ltr"><span class="codeinlineitalic">host_command</span></code> is any valid operating system command.</p>
<p class="subhead1"><a id="APPUG1236"></a>Examples</p>
<pre dir="ltr">HOST  vi log.out
HOST  ls -la
HOST  pwd
</pre>
<p class="subhead1"><a id="APPUG1237"></a>HOST Usage Notes</p>
<ul>
<li>
<p>Using the <code dir="ltr">HOST</code> command starts a new command shell under which to execute the specified operating system command. This means that any environment changes caused by the executed command affect only the new command shell started by PGAU, and not the command shell under which PGAU itself is executing. For example, a &#34;cd&#34; command executed by the <code dir="ltr">HOST</code> command does not change the current directory in the PGAU execution environment.</p>
</li>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG947" class="sect2"><a id="sthref398"></a>
<h3 class="sect2">PRINT<a id="sthref399"></a></h3>
<p class="subhead1"><a id="APPUG1238"></a>Purpose</p>
<p><a id="sthref400"></a>Use this command to print the value of a variable defined with the <code dir="ltr">VARIABLE</code> command.</p>
<p class="subhead1"><a id="APPUG1239"></a>Syntax</p>
<p>The <code dir="ltr">PRINT</code> command has the syntax:</p>
<pre dir="ltr">PRINT <span class="italic">varname</span> 
</pre>
<p class="subhead1"><a id="APPUG1240"></a><a id="sthref401"></a>Parameters</p>
<p><code dir="ltr"><span class="codeinlineitalic">varname</span></code> is a variable name which is defined by a variable command.</p>
<p class="subhead1"><a id="APPUG1241"></a>Examples</p>
<pre dir="ltr">PRINT ename   
PRINT balance
</pre>
<p class="subhead1"><a id="APPUG1242"></a>PRINT Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1007380"></a>
<div id="APPUG948" class="sect2">
<h3 class="sect2">REDEFINE DATA<a id="sthref402"></a></h3>
<p class="subhead1"><a id="APPUG1243"></a>Purpose</p>
<p>The existing data definition in the PG Data Dictionary is modified. PG DD column values for <code dir="ltr">DATA#</code>, <code dir="ltr">FLD#</code>, and <code dir="ltr">POS</code> remain the same for redefined data items. This permits existing <code dir="ltr">CALL</code> and <code dir="ltr">DATA</code> definitions to utilize the redefined data. <code dir="ltr">REDEFINE</code> does not create a different version of a data definition and the version number is not updated.</p>
<p class="subhead1"><a id="APPUG1244"></a>Syntax</p>
<pre dir="ltr">REDEFINE DATA <span class="italic">dname</span> 
    [VERSion(<span class="italic">datavers</span>)]
    [PLSDNAME(<span class="italic">plsdvar</span>)]
    [FIELD(<span class="italic">fname</span>) [PLSFNAME(<span class="italic">plsfvar</span>)]] 
    [USAGE({PASS|ASIS|SKIP})]
    [COMPOPTS (&#39;options&#39;)]
    [REMOTE_LANGUAGE(<span class="italic">&#34;nlsname&#34;)</span>]
    [LOCAL_LANGUAGE(<span class="codeinlineitalic">&#34;</span><span class="italic">nlsname&#34;</span>)]
    LANGUAGE(<span class="italic">language</span>)
    &lt;(<span class="italic">definition</span>) | INFILE(&#34;<span class="italic">filespec</span>&#34;)&gt;;   
</pre>
<p class="subhead1"><a id="APPUG1245"></a><a id="sthref403"></a>Parameters</p>
<p><a href="#g1018438">Table 2-6</a> describes the <code dir="ltr">REDEFINE DATA</code> parameters:</p>
<div id="APPUG1246" class="tblformal">
<p class="titleintable"><a id="sthref404"></a><a id="g1018438"></a>Table 2-6 REDEFINE DATA Parameter Descriptions</p>
<table class="cellalignment6315" title="REDEFINE DATA Parameter Descriptions" summary="describes the REDEFINE DATA parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t10">Parameter</th>
<th class="cellalignment6316" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">DATA</code> <code dir="ltr"><span class="codeinlineitalic">dname</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t10 r1c2-t10">
<p>is a mandatory parameter. It is the name of the data definition to be modified.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">VERSion(</code><code dir="ltr"><span class="codeinlineitalic">datavers</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t10 r1c2-t10">
<p>is an optional parameter. It specifies which version of <code dir="ltr"><span class="codeinlineitalic">dname</span></code> is to be modified, and if specified, the updated <code dir="ltr"><span class="codeinlineitalic">dname</span></code> information retains the same version number; a new version is not created. It defaults to the highest version if omitted.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t10" headers="r1c1-t10">
<p><code dir="ltr">PLSDNAME</code><code dir="ltr"><span class="codeinlineitalic">(plsdvar)</span></code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t10 r1c2-t10">
<p>is an optional parameter. It is the name of the PL/SQL variable associated with the <code dir="ltr"><span class="codeinlineitalic">dname</span></code> above. It becomes the name of a PL/SQL variable if the <code dir="ltr"><span class="codeinlineitalic">dname</span></code> item is atomic data, or a PL/SQL record variable if the <code dir="ltr"><span class="codeinlineitalic">dname</span></code> item is aggregate data (such as a record or structure), when the TIP is generated. This name replaces any <code dir="ltr"><span class="codeinlineitalic">plsdvar</span></code> name previously specified by <code dir="ltr">DEFINE DATA</code> into <code dir="ltr">pga_data</code><code dir="ltr">(plsdvar)</code> of the PG DD.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t10" headers="r1c1-t10">
<p><code dir="ltr">FIELD</code><code dir="ltr"><span class="codeinlineitalic">(fname)</span></code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t10 r1c2-t10">
<p>is an optional parameter. It is the name of a field or group within the <code dir="ltr"><span class="codeinlineitalic">dname</span></code> item, if aggregate data is being redefined (such as changing a field within a record).</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t10" headers="r1c1-t10">
<p><code dir="ltr">PLSFNAME</code><code dir="ltr"><span class="codeinlineitalic">(plsfvar)</span></code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t10 r1c2-t10">
<p>is an optional parameter if <code dir="ltr">FIELD</code> is specified. It is the name of the PL/SQL variable associated with the <code dir="ltr"><span class="codeinlineitalic">fname</span></code> above. It becomes the name of a PL/SQL field variable within a PL/SQL record variable when the TIP is generated. This name replaces any <code dir="ltr"><span class="codeinlineitalic">plsfvar</span></code> name previously specified by <code dir="ltr">REDEFINE DATA</code> into <code dir="ltr">pga_data</code>(<code dir="ltr"><span class="codeinlineitalic">plsfvar</span></code>) of the PG DD.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t10" headers="r1c1-t10">
<p><code dir="ltr">USAGE({PASS|ASIS</code></p>
<p><code dir="ltr">|SKIP})</code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t10 r1c2-t10">
<p>is optional. If omitted, the last usage specified is retained. It specifies the way the TIP handles the data items when exchanged in calls with the remote transaction:</p>
<ul>
<li>
<p><code dir="ltr">PASS</code> indicates that the item should be translated and exchanged with the transaction.</p>
</li>
<li>
<p><code dir="ltr">ASIS</code> indicates the item is binary and, though exchanged, should not be translated.</p>
</li>
<li>
<p><code dir="ltr">SKIP</code> indicates the item should be deleted from all exchanges.</p>
</li>
</ul>
<p>If specified, all affected fields are updated with the same <code dir="ltr">USAGE</code> value. (Refer to the notes pertaining to single or multiple field redefinition, under <code dir="ltr">FIELD</code>).</p>
<p>The <code dir="ltr">USAGE(NULL)</code> keyword on <code dir="ltr">DEFINE</code> or <code dir="ltr">REDEFINE DATA</code> PGAU statements is not supported.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t10" headers="r1c1-t10">
<p><code dir="ltr">COMPOPTS (&#39;options&#39;)</code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t10 r1c2-t10">
<p>is optional. If omitted, the last options specified are retained. If specified as a null string (&#39;&#39;) then the last options specified are removed. If a non-null value is specified, then the last options specified are all replaced with the new options. The only option currently supported is &#39;<code dir="ltr">TRUNC(BIN)</code>&#39;. Note that the options must be enclosed in apostrophes (&#39;) or quotes (&#34;). <code dir="ltr">TRUNC(BIN)</code> is a COBOL option that affects the way halfword and fullword binary values are handled. Refer to <a href="#i1007480">&#34;REDEFINE DATA Usage Notes:&#34;</a> for further information on this option.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r9c1-t10" headers="r1c1-t10">
<p><code dir="ltr">REMOTE_LANGUAGE (</code><code dir="ltr"><span class="codeinlineitalic">&#34;nlsname&#34;</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r9c1-t10 r1c2-t10">
<p>is an optional parameter. The default value is &#34;<code dir="ltr">american_america.we8ebcdic37c</code>&#34; or as overridden by the <code dir="ltr">NLS_LANGUAGE</code> parameter of <code dir="ltr">DEFINE TRANSACTION</code>. It is an Globalization Support name in the <code dir="ltr">language_territory.charset</code> format. It specifies the Globalization Support name in which the remote host data for the specific character field being redefined is encoded. The field can be single byte or multi-byte character data.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r10c1-t10" headers="r1c1-t10">
<p><code dir="ltr">LOCAL_LANGUAGE</code> <code dir="ltr"><span class="codeinlineitalic">(&#34;nlsname&#34;)</span></code></p>
</td>
<td class="cellalignment6317" headers="r10c1-t10 r1c2-t10">
<p>is an optional parameter. The default value is initialized from the <code dir="ltr">LANGUAGE</code> variable of the local Oracle database when the TIP executes. It is an Globalization Support name in the l<code dir="ltr"><span class="codeinlineitalic">anguage_territory.charset</span></code> format. It specifies the Globalization Support name in which the local Oracle data for the specific character field being redefined is encoded. The field can be single byte or multi-byte character data.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r11c1-t10" headers="r1c1-t10">
<p><code dir="ltr">LANGUAGE</code> <code dir="ltr">(</code><code dir="ltr"><span class="codeinlineitalic">&#34;language&#34;</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r11c1-t10 r1c2-t10">
<p>is a mandatory parameter if definition input is specified. It specifies the name of the programming language in the supplied definition. PGAU presently supports only COBOL.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r12c1-t10" headers="r1c1-t10">
<p><code dir="ltr"><span class="codeinlineitalic">(definition)</span></code></p>
</td>
<td class="cellalignment6317" headers="r12c1-t10 r1c2-t10">
<p>is mutually exclusive with the <code dir="ltr">INFILE</code> parameter. It is an inline description of the data. The description must be provided in COBOL syntax. This inline description must begin with an opening parenthesis and end with a closing parenthesis. The opening parenthesis must be the last non-blank character on the line and the COBOL data definition must start on a new line, following the standard COBOL rules for column usage and continuations. The closing parenthesis and terminating semicolon must be on a separate line following the last line of the COBOL data definition. If in COBOL, the specification is a COBOL data item or structure, defined according to the rules for COBOL. Margins are assumed to be standard, explicit or implicit continuation is supported. Datanames containing invalid characters (for example, &#34;-&#34;) for PL/SQL use are translated to their closest equivalent and truncated as required.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r13c1-t10" headers="r1c1-t10">
<p><code dir="ltr">INFILE (</code><code dir="ltr"><span class="codeinlineitalic">&#34;filespec&#34;</span></code><code dir="ltr">)</code></p>
</td>
<td class="cellalignment6317" headers="r13c1-t10 r1c2-t10">
<p>is mutually exclusive with the <code dir="ltr"><span class="codeinlineitalic">(definition)</span></code> parameter. It indicates that the definition is to be read from the operating system file described by <code dir="ltr"><span class="codeinlineitalic">filespec,</span></code> instead of an inline definition described by <code dir="ltr"><span class="codeinlineitalic">(definition)</span></code>.</p>
<p>Note that &#34;<code dir="ltr"><span class="codeinlineitalic">filespec</span></code>&#34; must be enclosed in double quotes.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1247"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634479">&#34;Sample PGAU REDEFINE DATA Statements&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">REDEFINE</code> commands.</p>
<p class="subhead1"><a id="i1007480"></a><a id="APPUG1248"></a>REDEFINE DATA Usage Notes:</p>
<ul>
<li>
<p>Specification of either <code dir="ltr">PLSDNAME</code>, <code dir="ltr">FIELD</code>, or <code dir="ltr">PLSFNAME</code> allows redefinition of a single data item&#39;s names while the <code dir="ltr"><span class="codeinlineitalic">(definition)</span></code> parameter redefines the named data item&#39;s content.</p>
</li>
<li>
<p>The presence of <code dir="ltr">FIELD</code> denotes only a single data field (single PG DD row uniquely identified by <code dir="ltr"><span class="codeinlineitalic">dname</span></code>, <code dir="ltr"><span class="codeinlineitalic">fname</span></code>, and <code dir="ltr"><span class="codeinlineitalic">version)</span></code> is updated. The absence of <code dir="ltr">FIELD</code> denotes that multiple data fields (multiple PG DD rows identified by <code dir="ltr"><span class="codeinlineitalic">dname</span></code> and <code dir="ltr"><span class="codeinlineitalic">version</span></code>) are updated or replaced by the definition input.</p>
</li>
<li>
<p><code dir="ltr">REMOTE_LANGUAGE</code> and <code dir="ltr">LOCAL_LANGUAGE</code> override the character sets used for conversion of any individual SBCS, DBCS, or MBCS character data field.</p>
</li>
<li>
<p><code dir="ltr">LANGUAGE</code> <code dir="ltr"><span class="codeinlineitalic">(language)</span></code> and <code dir="ltr"><span class="codeinlineitalic">(definition)|</span></code><code dir="ltr">INFILE</code><code dir="ltr">(</code><code dir="ltr"><span class="codeinlineitalic">&#34;filespec&#34;)</span></code> are mandatory as a group. If data definitions are to be supplied, then a <code dir="ltr">LANGUAGE</code> parameter must be specified and then either the inline definition or <code dir="ltr">INFILE</code> must also be specified.</p>
</li>
<li>
<p>The presence of <code dir="ltr"><span class="codeinlineitalic">(definition)</span></code> <code dir="ltr">|</code> <code dir="ltr">INFILE</code><code dir="ltr"><span class="codeinlineitalic">(&#34;filespec&#34;</span></code>) denotes that multiple data fields (those PG DD rows identified by <code dir="ltr"><span class="codeinlineitalic">dname</span></code> and version) are updated or replaced by the definition input. Fewer, equal, or greater numbers of fields might result from the replacement.</p>
</li>
<li>
<p><code dir="ltr">INFILE</code><code dir="ltr"><span class="codeinlineitalic">(&#34;filespec&#34;)</span></code> is a platform-specific designation of a disk file.</p>
</li>
<li>
<p><code dir="ltr">COMPOPTS (&#39;TRUNC(BIN)&#39;)</code> should be used only when the remote host transaction was compiled using COBOL with the <code dir="ltr">TRUNC(BIN)</code> compiler option specified. When this option is used, binary data items defined as <code dir="ltr">PIC 9(4)</code> or <code dir="ltr">PIC S9(4)</code> can actually contain values with 5 digits, and binary data items defined as <code dir="ltr">PIC 9(9)</code> or <code dir="ltr">PIC S9(9)</code> can actually contain values with 10 digits. Without <code dir="ltr">COMPOPTS (&#39;TRUNC(BIN)&#39;)</code>, PGAU generates <code dir="ltr">NUMBER(4,0)</code> or <code dir="ltr">NUMBER(9,0)</code> fields for these data items, resulting in possible truncation of the values. When <code dir="ltr">COMPOPTS (&#39;TRUNC(BIN)&#39;)</code> is specified, PGAU generates <code dir="ltr">NUMBER(5,0)</code> or <code dir="ltr">NUMBER(10, 0)</code> fields for these data items, avoiding any truncation of the values. Care must be taken when writing the client application to ensure that invalid values are not sent to the remote host transaction. For a <code dir="ltr">PIC 9(4)</code> the value must be within the range <code dir="ltr">0</code> to <code dir="ltr">32767</code>, for a <code dir="ltr">PIC S9(4)</code> the value must be within the range <code dir="ltr">-32767</code> to <code dir="ltr">+32767</code>, for a <code dir="ltr">PIC 9(9)</code> the value must be within the range <code dir="ltr">0</code> to <code dir="ltr">2,147,483,647</code>, and for a <code dir="ltr">PIC S9(9)</code> the value must be within the range <code dir="ltr">-2,147,483,647</code> to <code dir="ltr">+2,147,483,647</code>. COBOL always reserves the high-order bit of binary fields for a sign, so the value ranges for unsigned fields are limited to the absolute values of the value ranges for signed fields. For further information, refer to the appropriate IBM COBOL programming manuals.</p>
</li>
<li>
<p>Refer to <a href="apd.htm#g640399">&#34;USAGE(PASS)&#34;</a> in <a href="apd.htm#g640607">Appendix D, &#34;Datatype Conversions&#34;</a> for information about how PGAU converts COBOL statements.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG949" class="sect2"><a id="sthref405"></a>
<h3 class="sect2">REM<a id="sthref406"></a></h3>
<p class="subhead1"><a id="APPUG1249"></a>Purpose</p>
<p>Comments can either be introduced by the <code dir="ltr">REM</code> command or started with the two-character sequence /* and terminated with the two-character sequence */.</p>
<p><a id="sthref407"></a>Use the <code dir="ltr">REM</code> command to start a Comment line.</p>
<p class="subhead1"><a id="APPUG1250"></a>Syntax</p>
<p>The <code dir="ltr">REM</code> command has the syntax:</p>
<pre dir="ltr">REM <span class="italic">Comment</span> 
</pre>
<p class="subhead1"><a id="APPUG1251"></a><a id="sthref408"></a>Parameters</p>
<p><code dir="ltr"><span class="codeinlineitalic">Comment</span></code> is any strings.</p>
<p class="subhead1"><a id="APPUG1252"></a>Examples</p>
<pre dir="ltr">REM This is a Comment....
</pre>
<p class="subhead1"><a id="APPUG1253"></a>REM Usage Notes</p>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</div>
<!-- class="sect2" -->
<div id="APPUG950" class="sect2"><a id="sthref409"></a>
<h3 class="sect2">REPORT<a id="sthref410"></a></h3>
<p class="subhead1"><a id="APPUG1254"></a>Purpose</p>
<p>This command produces a report of selected data from the <a id="sthref411"></a>PG Data Dictionary. Selection criteria might determine that:</p>
<ul>
<li>
<p>a single <code dir="ltr">TRANSACTION</code>, <code dir="ltr">CALL</code>, or <code dir="ltr">DATA</code> entity (with or without an explicit version) is reported, or</p>
</li>
<li>
<p>that all <code dir="ltr">TRANSACTION</code>, <code dir="ltr">CALL</code>, or <code dir="ltr">DATA</code> entities with a given name be reported or that all entities in the PG DD be reported, or</p>
</li>
<li>
<p>that all invalid <code dir="ltr">TRANSACTION</code>s or <code dir="ltr">CALL</code>s and all unreferenced <code dir="ltr">CALL</code>s, or <code dir="ltr">DATA</code> entities be reported.</p>
</li>
</ul>
<p class="subhead1"><a id="APPUG1255"></a>Syntax</p>
<pre dir="ltr">REPORT { { TRANSACTION <span class="italic">tname</span> | CALL <span class="italic">cname</span> | DATA <span class="italic">dname</span> } [VERSION(<span class="italic">ver1...</span>)]  
         | ALL { TRANSACTIONS [<span class="italic">tname</span>] | CALLS [<span class="italic">cname</span>] | DATA [<span class="italic">dname</span>] } }
         [WITH { CALLS | DATA | DEBUG } ... ]
         | ISOLATED;
</pre>
<p class="subhead1"><a id="APPUG1256"></a><a id="sthref412"></a>Parameters</p>
<p><a href="#g1018481">Table 2-7</a> describes the <code dir="ltr">REPORT</code> parameter:</p>
<div id="APPUG1257" class="tblformal">
<p class="titleintable"><a id="sthref413"></a><a id="g1018481"></a>Table 2-7 REPORT Parameters Descriptions</p>
<table class="cellalignment6315" title="REPORT Parameters Descriptions" summary="describes the REPORT parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t11">Parameter</th>
<th class="cellalignment6316" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">TRANSACTION</code> <code dir="ltr"><span class="codeinlineitalic">tname</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t11 r1c2-t11">
<p>Reports the PG DD contents for the latest or selected versions of the transaction <code dir="ltr"><span class="codeinlineitalic">tname</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">CALL</code> <code dir="ltr"><span class="codeinlineitalic">cname</span></code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t11 r1c2-t11">
<p>Reports the PG DD contents for the latest or selected versions of the call <code dir="ltr"><span class="codeinlineitalic">cname</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DATA</code> <code dir="ltr"><span class="codeinlineitalic">dname</span></code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t11 r1c2-t11">
<p>Reports the PG DD contents for the latest or selected versions of the data <code dir="ltr"><span class="codeinlineitalic">dname</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t11" headers="r1c1-t11">
<p><code dir="ltr">VERSION(</code><code dir="ltr"><span class="codeinlineitalic">ver1</span></code><code dir="ltr">, [</code><code dir="ltr"><span class="codeinlineitalic">ver2 ...</span></code><code dir="ltr">])</code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t11 r1c2-t11">
<p>Reports selected versions of the indicated entry and is mutually exclusive with <code dir="ltr">ALL</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ALL TRANSACTIONS</code> <code dir="ltr"><span class="codeinlineitalic">[tname]</span></code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t11 r1c2-t11">
<p>Reports the PG DD contents for all existing versions of every transaction entry or optionally a specific transaction <code dir="ltr"><span class="codeinlineitalic">tname</span></code>, and is mutually exclusive with <code dir="ltr">TRANSACTION</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ALL CALLS</code> <code dir="ltr"><span class="codeinlineitalic">[cname]</span></code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t11 r1c2-t11">
<p>Reports the PG DD contents for all existing versions of every call entry or optionally a specific call <code dir="ltr"><span class="codeinlineitalic">cname</span></code>, and is mutually exclusive with <code dir="ltr">CALL</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ALL DATA</code> <code dir="ltr"><span class="codeinlineitalic">[dname]</span></code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t11 r1c2-t11">
<p>Reports the PG DD contents for all existing versions of every data entry or optionally a specific data <code dir="ltr"><span class="codeinlineitalic">dname</span></code>, and is mutually exclusive with <code dir="ltr">DATA</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r9c1-t11" headers="r1c1-t11">
<p><code dir="ltr">WITH CALLS</code></p>
</td>
<td class="cellalignment6317" headers="r9c1-t11 r1c2-t11">
<p>Reports call entries associated with the specified transactions.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r10c1-t11" headers="r1c1-t11">
<p><code dir="ltr">WITH DATA</code></p>
</td>
<td class="cellalignment6317" headers="r10c1-t11 r1c2-t11">
<p>Reports data entries associated with the specified calls, and when specified for transactions, implies <code dir="ltr">WITH CALLS</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r11c1-t11" headers="r1c1-t11">
<p><code dir="ltr">WITH DEBUG</code></p>
</td>
<td class="cellalignment6317" headers="r11c1-t11 r1c2-t11">
<p>Reports PG DD column values for <code dir="ltr">tran#</code>, <code dir="ltr">call#</code>, <code dir="ltr">parm#</code>, <code dir="ltr">data#</code>, and <code dir="ltr">attr#</code> as appropriate, depending on the type of items being reported.</p>
<p>This report is useful with TIPs generated with PG DD Diagnostic references. Refer to the <code dir="ltr">GENERATE DIAGNOSE PGEX(OR)</code> option for more information.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r12c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ISOLATED</code></p>
</td>
<td class="cellalignment6317" headers="r12c1-t11 r1c2-t11">
<p>Mutually exclusive with all other parameters. All unreferenced <code dir="ltr">CALL</code> and <code dir="ltr">DATA</code> entries are reported along with <code dir="ltr">TRANSACTION</code>s that reference missing <code dir="ltr">CALL</code>s and <code dir="ltr">DATA</code> and <code dir="ltr">CALL</code>s that reference missing <code dir="ltr">DATA</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="i1007595"></a><a id="APPUG1258"></a>REPORT Usage Notes:</p>
<ul>
<li>
<p>Report output is to the terminal and can be spooled, saved, and printed.</p>
</li>
<li>
<p>Data reports are formatted according to their original compiler language, and preceded by a <a id="sthref414"></a><a id="sthref415"></a>PGAU <code dir="ltr">DEFINE DATA</code> command which defines the data to the PG DD.</p>
</li>
<li>
<p><a id="sthref416"></a><code dir="ltr">CALL</code> and <code dir="ltr">TRANSACTION</code> reports are formatted as <a id="sthref417"></a>PGAU <code dir="ltr">DEFINE CALL</code> or <a id="sthref418"></a><code dir="ltr">TRANSACTION</code> commands (also called &#34;statements&#34;), which effectively define the entry to the PG DD.</p>
</li>
<li>
<p>The following command reports the single most recent data definition specified by data name <code dir="ltr">dname</code>, or optionally, for those specific versions given.</p>
<pre dir="ltr">REPORT DATA dname;
REPORT DATA dname VERSION(version#1,version#2);
</pre>
<p>This command reports all data definitions specified by data name <code dir="ltr">dname</code>:</p>
<pre dir="ltr">REPORT ALL DATA dname;
</pre></li>
<li>
<p>The following command reports the single most recent call definitions specified by call name <code dir="ltr">cname</code>, or optionally for those specific versions given.</p>
<pre dir="ltr">REPORT CALL cname;
REPORT CALL cname VERSION(version#1,version#2) WITH DATA;
</pre>
<p>This command reports all call definitions specified by call name cname:</p>
<pre dir="ltr">REPORT ALL CALLS cname WITH DATA;
</pre>
<p>This command reports all call definitions in the PG DD:</p>
<pre dir="ltr">REPORT ALL CALLS WITH DATA;
</pre>
<p>When <code dir="ltr">WITH DATA</code> is specified, all the data definitions associated with each selected call are also reported. The data definitions precede each corresponding selected call in the report output.</p>
</li>
<li>
<p>The following command reports the single most recent transaction definitions specified by transaction name <code dir="ltr">tname</code>, or optionally for those specific versions given.</p>
<pre dir="ltr">REPORT TRANSACTION tname
REPORT TRANSACTION tname VERSION(version#1,version#2)
WITH DATA WITH CALLS;
</pre>
<p>This command reports all transaction definitions specified by transaction name tname:</p>
<pre dir="ltr">REPORT ALL TRANSACTIONS tname WITH DATA WITH CALLS;
</pre>
<p>This command reports all transaction definitions in the PG DD:</p>
<pre dir="ltr">REPORT ALL TRANSACTIONS WITH DATA WITH CALLS;
</pre>
<p>When <code dir="ltr">WITH CALLS</code> option is specified, all call definitions associated with each selected transaction are also reported (the call definitions precede each corresponding selected transaction in the report output).</p>
<p>When <code dir="ltr">WITH DATA</code> is specified, all the data definitions associated with each selected call are also reported (the data definitions precede each corresponding selected call in the report output).</p>
<p>For transaction reports, specification of <code dir="ltr">WITH DATA</code> implies specification of <code dir="ltr">WITH CALL</code>.</p>
</li>
<li>
<p>The following command reports any unreferenced <code dir="ltr">CALL</code> or <code dir="ltr">DATA</code> definitions. It also reports any <code dir="ltr">TRANSACTION</code> or <code dir="ltr">CALL</code> definitions that reference missing <code dir="ltr">CALL</code> or <code dir="ltr">DATA</code> definitions respectively.</p>
<pre dir="ltr">REPORT ISOLATED;
</pre></li>
<li>
<p>The following command reports all definitions in the PG DD.</p>
<pre dir="ltr">REPORT ALL;
</pre>
<p>Data definitions are reported, followed by their associated call definitions, followed by the associated transaction definition.</p>
<p>This sequence is repeated for every defined call and transaction in the PG DD.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG951" class="sect2"><a id="sthref419"></a>
<h3 class="sect2">SET <a id="sthref420"></a></h3>
<p class="subhead1"><a id="APPUG1259"></a><a id="sthref421"></a>Parameters</p>
<p><a id="sthref422"></a><a href="#g1018521">Table 2-8</a> describes the <code dir="ltr">SET</code> parameters:</p>
<div id="APPUG1260" class="tblformal">
<p class="titleintable"><a id="sthref423"></a><a id="g1018521"></a>Table 2-8 SET Parameter Descriptions</p>
<table class="cellalignment6315" title="SET Parameter Descriptions" summary="describes the SET parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t12">Parameter</th>
<th class="cellalignment6316" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ARRAYSIZE</code> <code dir="ltr"><span class="codeinlineitalic">[n]</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t12 r1c2-t12">
<p>Sets the number of rows fetched at a time from the database. The default is <code dir="ltr">20</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">CHARWIDTH</code> <code dir="ltr"><span class="codeinlineitalic">[n]</span></code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t12 r1c2-t12">
<p>Sets the column display width for <code dir="ltr">CHAR</code> data. If entered with no argument, it returns the setting to <code dir="ltr">9</code>, which is the default.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">DATEWIDTH</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t12 r1c2-t12">
<p>Sets the column display width for <code dir="ltr">DATE</code> data. If entered with no argument, it returns the setting to <code dir="ltr">9</code>, which is the default.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ECHO {ON|OFF}</code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t12 r1c2-t12">
<p>Sets echoing of commands entered from command files to <code dir="ltr">ON</code> or <code dir="ltr">OFF</code>. The default is <code dir="ltr">OFF</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t12" headers="r1c1-t12">
<p><code dir="ltr">FETCHROWS</code> <code dir="ltr"><span class="codeinlineitalic">[n]</span></code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t12 r1c2-t12">
<p>Sets the number of rows returned by a query. This is useful with ordered queries for finding a certain number of items in a category, the top ten items for example. It is also useful with unordered queries for finding the first <code dir="ltr"><span class="codeinlineitalic">n</span></code> records that satisfy a certain criteria.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t12" headers="r1c1-t12">
<p><code dir="ltr">LONGWIDTH</code> <code dir="ltr"><span class="codeinlineitalic">[n]</span></code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t12 r1c2-t12">
<p>Sets the column display width for <code dir="ltr">LONG</code> data. If entered with no argument, it returns the setting to <code dir="ltr">80</code>, which is the default.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t12" headers="r1c1-t12">
<p><code dir="ltr">MAXDATA</code> <code dir="ltr"><span class="codeinlineitalic">[n]</span></code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t12 r1c2-t12">
<p>Sets the maximum data size. It indicates the maximum data that can be received in a single fetch during a <code dir="ltr">SELECT</code> command. The default is <code dir="ltr">20480 bytes (20K)</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r9c1-t12" headers="r1c1-t12">
<p><code dir="ltr">NUMWIDTH</code> <code dir="ltr"><span class="codeinlineitalic">[n]</span></code></p>
</td>
<td class="cellalignment6317" headers="r9c1-t12 r1c2-t12">
<p>Sets the column display width for <code dir="ltr">NUMBER</code> data. If entered with no argument, it returns the setting to <code dir="ltr">10</code>, which is the default.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r10c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SERVEROUTPUT {OFF|ON [SIZE</code> <code dir="ltr"><span class="codeinlineitalic">n|n]}</span></code></p>
</td>
<td class="cellalignment6317" headers="r10c1-t12 r1c2-t12">
<p>Sets debugging output from stored procedures that use <code dir="ltr">DBMS_OUTPUT PUT</code> and <code dir="ltr">PUT_LINE</code> commands to <code dir="ltr">ON</code> or <code dir="ltr">OFF</code>. You can specify the size in bytes of the message buffer using <code dir="ltr">SIZE</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code>. The size specified is the total number of bytes of all messages sent that can be accumulated at one time. The minimum is <code dir="ltr">2000</code> bytes. If the buffer fills before calls to the get-message routines make room for additional message bytes, an error is returned to the program sending the message. <code dir="ltr">SERVEROUTPUT</code> with no parameters is the same as <code dir="ltr">SERVEROUTPUT ON</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r11c1-t12" headers="r1c1-t12">
<p><code dir="ltr">STOPONERROR {ON|OFF}</code></p>
</td>
<td class="cellalignment6317" headers="r11c1-t12 r1c2-t12">
<p>Indicates whether execution of a command file should stop if an error occurs. Specifying <code dir="ltr">OFF</code> disables <code dir="ltr">STOPONERROR</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r12c1-t12" headers="r1c1-t12">
<p><code dir="ltr">TERMOUT {ON|OFF}</code></p>
</td>
<td class="cellalignment6317" headers="r12c1-t12 r1c2-t12">
<p>Enables or disables terminal output for SQL commands. It is useful for preventing output to the terminal when spooling output to files. The default is <code dir="ltr">OFF</code>, which disables terminal output.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r13c1-t12" headers="r1c1-t12">
<p><code dir="ltr">TIMING {ON|OFF}</code></p>
</td>
<td class="cellalignment6317" headers="r13c1-t12 r1c2-t12">
<p>Enables or disables display of parse, execute, and fetch times (both CPU and elapsed) for each executed SQL statement. The default is <code dir="ltr">OFF</code>, which disables the <code dir="ltr">TIMING</code> display.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1261"></a>Examples</p>
<pre dir="ltr">PGAU&gt; set arraysize 30

PGAU&gt; set CHARWIDTH
</pre>
<p class="subhead1"><a id="APPUG1262"></a>SET Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG952" class="sect2"><a id="sthref424"></a>
<h3 class="sect2">SHOW<a id="sthref425"></a></h3>
<p class="subhead1"><a id="APPUG1263"></a><a id="sthref426"></a>Parameters</p>
<p><a href="#g1018564">Table 2-9</a> describes the <code dir="ltr">SHOW</code> parameters:</p>
<div id="APPUG1264" class="tblformal">
<p class="titleintable"><a id="sthref427"></a><a id="g1018564"></a>Table 2-9 SHOW Parameter Descriptions</p>
<table class="cellalignment6315" title="SHOW Parameter Descriptions" summary="describes the SHOW parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t13">Parameters</th>
<th class="cellalignment6316" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ALL</code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t13 r1c2-t13">
<p>Shows all valid <code dir="ltr">SET</code> parameters</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ARRAYSIZE</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t13 r1c2-t13">
<p>Shows the number of rows fetched at a time from the database.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">CHARWIDTH</code></p>
</td>
<td class="cellalignment6317" headers="r4c1-t13 r1c2-t13">
<p>Shows the column display width for <code dir="ltr">CHAR</code> data.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">DATEWIDTH</code></p>
</td>
<td class="cellalignment6317" headers="r5c1-t13 r1c2-t13">
<p>Shows the column display width for <code dir="ltr">DATE</code> data.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r6c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ECHO</code></p>
</td>
<td class="cellalignment6317" headers="r6c1-t13 r1c2-t13">
<p>Shows echoing of commands entered from command files to <code dir="ltr">ON</code> or <code dir="ltr">OFF</code>.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r7c1-t13" headers="r1c1-t13">
<p><code dir="ltr">FETCHROWS</code></p>
</td>
<td class="cellalignment6317" headers="r7c1-t13 r1c2-t13">
<p>Shows the number of rows returned by a query.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r8c1-t13" headers="r1c1-t13">
<p><code dir="ltr">LONGWIDTH</code></p>
</td>
<td class="cellalignment6317" headers="r8c1-t13 r1c2-t13">
<p>Shows the column display width for <code dir="ltr">LONG</code> data.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r9c1-t13" headers="r1c1-t13">
<p><code dir="ltr">MAXDATA</code></p>
</td>
<td class="cellalignment6317" headers="r9c1-t13 r1c2-t13">
<p>Shows the maximum data size.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r10c1-t13" headers="r1c1-t13">
<p><code dir="ltr">NUMWIDTH</code></p>
</td>
<td class="cellalignment6317" headers="r10c1-t13 r1c2-t13">
<p>Shows the column display width for <code dir="ltr">NUMBER</code> data.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r11c1-t13" headers="r1c1-t13">
<p><code dir="ltr">SERVEROUTPUT</code></p>
</td>
<td class="cellalignment6317" headers="r11c1-t13 r1c2-t13">
<p>Shows debugging output from stored procedures that use <code dir="ltr">DBMS_OUTPUT PUT</code> and <code dir="ltr">PUT_LINE</code> commands.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r12c1-t13" headers="r1c1-t13">
<p><code dir="ltr">STOPONERROR</code></p>
</td>
<td class="cellalignment6317" headers="r12c1-t13 r1c2-t13">
<p>Indicates whether execution of a command file should stop if an error occurs.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r13c1-t13" headers="r1c1-t13">
<p><code dir="ltr">TERMOUT</code></p>
</td>
<td class="cellalignment6317" headers="r13c1-t13 r1c2-t13">
<p>Shows whether the terminal output for SQL commands is enabled or disabled.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r14c1-t13" headers="r1c1-t13">
<p><code dir="ltr">TIMING</code></p>
</td>
<td class="cellalignment6317" headers="r14c1-t13 r1c2-t13">
<p>Shows whether display of parse, execute, and fetch times (both CPU and elapsed) for each executed SQL statement is enabled or disabled.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r15c1-t13" headers="r1c1-t13">
<p><code dir="ltr">VAR</code></p>
</td>
<td class="cellalignment6317" headers="r15c1-t13 r1c2-t13">
<p>Is the same as the <code dir="ltr">PRINT</code> command; in addition, it shows all variables and their datatypes.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1265"></a>Examples</p>
<p>Note that when you issue a <code dir="ltr">SET</code> command, there will be no output if it is successful. If you want to check whether your statement was executed successfully, issue a <code dir="ltr">SHOW</code> command like the following:</p>
<pre dir="ltr">PGAU&gt; show arraysize
Arraysize                       30

PGAU&gt; show CHARWIDTH
Charwidth                       80

PGAU&gt; show all
Instance                        local
Spool                           OFF
Timing                          OFF
Termout                         ON
Echo                            OFF
Stoponerror                     OFF
Maxdata                         20480
Arraysize                       20
Fetchrows                       100

Numwidth                        10
Charwidth                       80
Longwidth                       80
Datewidth                       9
ServerOutput                    OFF
</pre>
<p class="subhead1"><a id="APPUG1266"></a>SHOW Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG953" class="sect2"><a id="sthref428"></a>
<h3 class="sect2">SPOOL<a id="sthref429"></a></h3>
<p class="subhead1"><a id="APPUG1267"></a>Purpose</p>
<p><a id="sthref430"></a>Use this command to specify a filename that captures PGAU output. All output is directed to the terminal unless <code dir="ltr">TERMOUT</code> is off.</p>
<p class="subhead1"><a id="APPUG1268"></a>Syntax</p>
<p>The <code dir="ltr">SPOOL</code> command has the syntax:</p>
<pre dir="ltr">SPOOL [<span class="italic">filename</span>|OFF]   
</pre>
<p class="subhead1"><a id="APPUG1269"></a><a id="sthref431"></a>Parameters</p>
<p>If a simple filename is specified, with no periods, then <code dir="ltr">.log</code> is appended to the filename.</p>
<p><code dir="ltr"><span class="codeinlineitalic">filename</span></code> is where the output of your executed commands is placed.</p>
<p class="subhead1"><a id="APPUG1270"></a>Examples</p>
<pre dir="ltr">SPOOL log.outfile  
SPOOL out
SPOOL OFF
</pre>
<p class="subhead1"><a id="APPUG1271"></a>SPOOL Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG954" class="sect2"><a id="sthref432"></a>
<h3 class="sect2">UNDEFINE CALL<a id="sthref433"></a></h3>
<p class="subhead1"><a id="APPUG1272"></a>Purpose</p>
<p>Use this command to remove an occurrence of the <code dir="ltr">CALL</code> definition from PG DD.</p>
<p class="subhead1"><a id="APPUG1273"></a>Syntax</p>
<pre dir="ltr">UNDEFINE CALL <span class="italic">cname</span>        [VERSion(<span class="italic">callvers</span>|ALL)];
</pre>
<p class="subhead1"><a id="APPUG1274"></a><a id="sthref434"></a>Parameters</p>
<p><a href="#g1018613">Table 2-10</a> describes the <code dir="ltr">UNDEFINE CALL</code> parameters:</p>
<div id="APPUG1275" class="tblformal">
<p class="titleintable"><a id="sthref435"></a><a id="g1018613"></a>Table 2-10 UNDEFINE CALL Parameter Descriptions</p>
<table class="cellalignment6315" title="UNDEFINE CALL Parameter Descriptions" summary="describes the UNDEFINE CALL parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t14">Parameter</th>
<th class="cellalignment6316" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">CALL</code> <code dir="ltr"><span class="codeinlineitalic">cname</span></code><code dir="ltr">|</code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t14 r1c2-t14">
<p>A mandatory parameter. It specifies the name associated with the item to be dropped; if no version is specified only the latest (highest numbered) version is removed.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">VERSion(</code><code dir="ltr"><span class="codeinlineitalic">{datavers</span></code><code dir="ltr">|</code></p>
<p><code dir="ltr"><span class="codeinlineitalic">callvers</span></code><code dir="ltr">|</code></p>
<p><code dir="ltr"><span class="codeinlineitalic">transvers</span></code><code dir="ltr">|</code><code dir="ltr">ALL})</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t14 r1c2-t14">
<p>An optional parameter. It specifies which singular version of a definition is to be removed, or if <code dir="ltr">ALL</code>, then all definitions are removed, for the given definition named. The default of the highest numbered version of the named definition is assumed if <code dir="ltr">VERSION</code> is omitted.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1276"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634522">&#34;Sample PGAU UNDEFINE Statements&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">UNDEFINE CALL</code> commands.</p>
<p class="subhead1"><a id="APPUG1277"></a>UNDEFINE CALL Usage Notes:</p>
<ul>
<li>
<p>Removing definitions only prevents <a id="sthref436"></a>PL/SQL packages from being subsequently generated. TIPs can still be recreated if the <code dir="ltr">.pkh</code> and <code dir="ltr">.pkb</code> specification files exist and those previous TIPS can be invoked if they remain in the database of the Oracle database. Whether such TIPs execute successfully depends on whether the corresponding remote transaction programs are still active.</p>
</li>
<li>
<p>Remove a <code dir="ltr">CALL</code> definition only after all <code dir="ltr">TRANSACTION</code>s which reference it are removed. No integrity checking is done.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG955" class="sect2"><a id="sthref437"></a>
<h3 class="sect2"><a id="sthref438"></a>UNDEFINE DATA</h3>
<p class="subhead1"><a id="APPUG1278"></a>Purpose</p>
<p>Use this command to remove an occurrence of the <code dir="ltr">DATA</code> definition in the PG Data Dictionary.</p>
<p class="subhead1"><a id="APPUG1279"></a>Syntax</p>
<pre dir="ltr">UNDEFINE DATA <span class="italic">dname</span>        [VERSion(<span class="italic">datavers</span>|ALL)];
</pre>
<p class="subhead1"><a id="APPUG1280"></a><a id="sthref439"></a>Parameters</p>
<p><a href="#g1018626">Table 2-11</a> describes the <code dir="ltr">UNDEFINE DATA</code> parameters:</p>
<div id="APPUG1281" class="tblformal">
<p class="titleintable"><a id="sthref440"></a><a id="g1018626"></a>Table 2-11 UNDEFINE DATA Parameter Descriptions</p>
<table class="cellalignment6315" title="UNDEFINE DATA Parameter Descriptions" summary="describes the UNDEFINE DATA parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t15">Parameter</th>
<th class="cellalignment6316" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">DATA</code> <code dir="ltr"><span class="codeinlineitalic">dname</span></code><code dir="ltr">|</code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t15 r1c2-t15">
<p>A mandatory parameter. It specifies the name associated with the item to be dropped. If no version is specified, only the latest (highest numbered) version is removed.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t15" headers="r1c1-t15">
<p><code dir="ltr">VERSion(</code><code dir="ltr"><span class="codeinlineitalic">{datavers</span></code><code dir="ltr">|</code></p>
<p><code dir="ltr"><span class="codeinlineitalic">callvers|</span></code></p>
<p><code dir="ltr"><span class="codeinlineitalic">transvers|ALL})</span></code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t15 r1c2-t15">
<p>An optional parameter. It specifies which singular version of a definition is to be removed, or if <code dir="ltr">ALL</code>, then all definitions are removed, for the given definition named. The default of the highest numbered version of the named definition is assumed if <code dir="ltr">VERSION</code> is omitted.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1282"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634522">&#34;Sample PGAU UNDEFINE Statements&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">UNDEFINE DATA</code> commands.</p>
<p class="subhead1"><a id="APPUG1283"></a>UNDEFINE DATA Usage Notes</p>
<ul>
<li>
<p>Removing definitions only prevents PL/SQL packages (TIPs) from being subsequently generated. Previously generated TIPs can still be recreated if the <code dir="ltr">.pkh</code> and <code dir="ltr">.pkb</code> specification files remain in existence. Previously created TIPs can still be invoked if they remain in the database of the Oracle database. Whether such TIPs execute successfully depends on whether the corresponding remote transaction programs are still active.</p>
</li>
<li>
<p>Remove a <code dir="ltr">DATA</code> definition only after all <code dir="ltr">CALL</code>s and all <code dir="ltr">TRANSACTION</code>s which reference it are removed. No integrity checking is done.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG956" class="sect2"><a id="sthref441"></a>
<h3 class="sect2"><a id="sthref442"></a>UNDEFINE TRANSACTION</h3>
<p class="subhead1"><a id="APPUG1284"></a>Purpose</p>
<p>This command removes an occurrence of the <code dir="ltr">TRANSACTION</code> definition in the PG Data Dictionary.</p>
<p class="subhead1"><a id="APPUG1285"></a>Syntax</p>
<pre dir="ltr">UNDEFINE TRANSACTION <span class="italic">tname</span> [VERSion(<span class="italic">tranvers</span>|ALL)]; 
</pre>
<p class="subhead1"><a id="APPUG1286"></a><a id="sthref443"></a>Parameters</p>
<p><a href="#g1018639">Table 2-12</a> describes the <code dir="ltr">UNDEFINE TRANSACTION</code> parameters:</p>
<div id="APPUG1287" class="tblformal">
<p class="titleintable"><a id="sthref444"></a><a id="g1018639"></a>Table 2-12 UNDEFINE TRANSACTION Parameter Descriptions</p>
<table class="cellalignment6315" title="UNDEFINE TRANSACTION Parameter Descriptions" summary="describes the UNDEFINE TRANSACTION parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t16">Parameter</th>
<th class="cellalignment6316" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">TRANSACTION</code> <code dir="ltr"><span class="codeinlineitalic">tname}</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t16 r1c2-t16">
<p>Mandatory parameter. It specifies the name associated with the item to be dropped. If no version is specified, only the latest (highest numbered) version is removed.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">VERSion({</code><code dir="ltr"><span class="codeinlineitalic">datavers</span></code><code dir="ltr">|</code></p>
<p><code dir="ltr"><span class="codeinlineitalic">callvers</span></code><code dir="ltr">|</code></p>
<p><code dir="ltr"><span class="codeinlineitalic">transvers|ALL</span></code><code dir="ltr">})</code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t16 r1c2-t16">
<p>Optional parameter. It specifies which singular version of a definition is to be removed, or if <code dir="ltr">ALL</code>, then all definitions are removed, for the given definition named. The default of the highest numbered version of the named definition is assumed if <code dir="ltr">VERSION</code> is omitted.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1288"></a>Examples</p>
<p>Refer to <a href="apg.htm#i634522">&#34;Sample PGAU UNDEFINE Statements&#34;</a> in <a href="apg.htm#g644868">Appendix F</a> for examples of <code dir="ltr">UNDEFINE TRANSACTION</code> commands.</p>
<p class="subhead1"><a id="APPUG1289"></a>UNDEFINE TRANSACTION Usage Notes</p>
<ul>
<li>
<p>Removing definitions only prevents <a id="sthref445"></a>PL/SQL packages from being subsequently generated. TIPs can still be recreated if the <code dir="ltr">.pkh</code> and <code dir="ltr">.pkb</code> specification files remain in existence. Previously created TIPs can be invoked if they remain in the database of the Oracle database. Whether such TIPs execute successfully depends on whether the corresponding remote transaction programs are still active.</p>
</li>
<li>
<p>A <code dir="ltr">TRANSACTION</code> definition can be removed at any time.</p>
</li>
<li>
<p>You must place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="APPUG957" class="sect2"><a id="sthref446"></a>
<h3 class="sect2">VARIABLE<a id="sthref447"></a></h3>
<p class="subhead1"><a id="APPUG1290"></a>Purpose</p>
<p><a id="sthref448"></a>Use this command to declare a bind variable for use in the current session with the <code dir="ltr">EXECUTE</code> or <code dir="ltr">PRINT</code> command, or for use with a PL/SQL block.</p>
<p class="subhead1"><a id="APPUG1291"></a>Syntax</p>
<p>The <code dir="ltr">VARIABLE</code> command has the syntax:</p>
<pre dir="ltr">VARIABLE <span class="italic">name type</span> 
</pre>
<p class="subhead1"><a id="APPUG1292"></a><a id="sthref449"></a>Parameters</p>
<p><a href="#g1018652">Table 2-13</a> describes the <code dir="ltr">VARIABLE</code> parameters.</p>
<div id="APPUG1293" class="tblformal">
<p class="titleintable"><a id="sthref450"></a><a id="g1018652"></a>Table 2-13 VARIABLE Parameter Descriptions</p>
<table class="cellalignment6315" title="VARIABLE Parameter Descriptions" summary="describes the VARIABLE parameters" dir="ltr">
<thead>
<tr class="cellalignment6309">
<th class="cellalignment6316" id="r1c1-t17">Parameter</th>
<th class="cellalignment6316" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr"><span class="codeinlineitalic">name</span></code></p>
</td>
<td class="cellalignment6317" headers="r2c1-t17 r1c2-t17">
<p>Is a variable name.</p>
</td>
</tr>
<tr class="cellalignment6309">
<td class="cellalignment6317" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr"><span class="codeinlineitalic">type</span></code></p>
</td>
<td class="cellalignment6317" headers="r3c1-t17 r1c2-t17">
<p>Is the variable datatype</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="APPUG1294"></a>Examples</p>
<pre dir="ltr">VARIABLE balance NUMBER
VARIABLE emp_name VARCHAR2
</pre>
<p class="subhead1"><a id="APPUG1295"></a>VARIABLE Usage Notes</p>
<ul>
<li>
<p>You do not need to place &#34;;&#34; at the end of the command.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6308">
<tr>
<td class="cellalignment6317">
<table class="cellalignment6313">
<tr>
<td class="cellalignment6312"><a href="intro.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6312"><a href="tip.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6320">
<table class="cellalignment6311">
<tr>
<td class="cellalignment6312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>