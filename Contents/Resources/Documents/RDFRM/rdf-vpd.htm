<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-88576"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Virtual%20Private%20Database%20Support%20in%20RDF%20Semantic%20Graph"></a><title>Virtual Private Database Support in RDF Semantic Graph</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="virtual private database (VPD), using with RDF data, Virtual Private Database (VPD), RDFVPD_POLICIES view, RDFVPD_MODELS view, RDFVPD_POLICY_CONSTRAINTS view, RDFVPD_PREDICATE_MDATA view, RDFVPD_RESOURCE_REL view"/>
<meta name="dcterms.created" content="2017-06-29T10:38:43Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph RDF Semantic Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E51611-08"/>
<meta name="dcterms.isVersionOf" content="RDFRM"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2005, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="sem-match-spatial.htm" title="Previous" type="text/html"/>
<link rel="Next" href="GUID-E57849D7-DDB7-4219-8687-90D870DD8630.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E51611-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-AB0B079B-4334-49FE-B3D2-FB72C438735C"></a> <span id="PAGE" style="display:none;">26/28</span> <!-- End Header -->
<a id="RDFRM723"></a>
<h1 id="RDFRM-GUID-AB0B079B-4334-49FE-B3D2-FB72C438735C" class="sect1"><span class="enumeration_chapter">C</span> Virtual Private Database Support in RDF Semantic Graph</h1>
<div>
<div class="infobox-note" id="GUID-AB0B079B-4334-49FE-B3D2-FB72C438735C__GUID-1ECA9B13-9C03-4840-9180-93582414172F">
<p class="notep1">Note:</p>
<p>Effective with Oracle Database Release 12<span class="italic">c</span> (12.1), Virtual Private Database (VPD) support in RDF Semantic Graph is deprecated for providing fine-grained access control, and will be removed in an upcoming major release.</p>
<p>You should not develop new RDF Semantic Graph applications that depend on VPD, and you should transition existing RDF Semantic Graph applications that depend on VPD to use Oracle Label Security (OLS) instead. (Support for OLS is described in <a href="fine-grained-access.htm#GUID-7F7007CB-F6CA-4AD4-B30D-4AC9EF4DB8D8">Fine-Grained Access Control for RDF Data</a> .)</p>
<p>For more information, see My Oracle Support Note <a href="https://support.oracle.com/CSP/main/article?cmd=show&amp;type=NOT&amp;id=1468273.1" target="_blank"><span>1468273.1</span></a>.</p>
</div>
<p>Virtual Private Database (VPD) for RDF data allows security administrators to define policies that conditionally restrict a user&#39;s access to triples that involve instances of a specific RDF class or property. Using VPD, the data stored in the RDF models is classified using its metadata and each user query is rewritten to include context-dependent data access constraints that enforce access restrictions.</p>
<p>For information about using VPD, see <a class="olink DBSEG007" target="_blank" href="../DBSEG/vpd.htm#DBSEG007"><span class="italic">Oracle Database Security Guide</span></a>.</p>
<p>Some factors to consider in choosing whether use VPD or OLS with RDF data include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>OLS, when enabled for RDF data, is enforced at the network level, while VPD can be enforced for individual RDF models.</p>
</li>
<li>
<p>You cannot use both VPD and OLS for RDF data at the same time in an Oracle instance.</p>
</li>
</ul>
<p>The application programming interface (API) for implementing VPD or OLS with semantic data is provided in the SEM_RDFSA PL/SQL package. <a href="sem-rdfsa-ref.htm#GUID-A221D4F5-FDCF-4AAB-A806-6A06630D2B4F">SEM_RDFSA Package Subprograms</a> provides reference information about the programs in the SEM_RDFSA package.</p>
<p>VPD and OLS support for RDF data is included in the RDF Semantic Graph support for Oracle Database. (For information about enabling, downgrading, or removing RDF Semantic Graph support, see <a href="enabling-rdf.htm#GUID-D2F1EC6E-09A6-4845-A9E2-5EA2633F318E">Enabling_ Downgrading_ or Removing RDF Semantic Graph Support</a>.)</p>
<p>VPD for RDF cannot be used in a CDB (multitenant container database) environment.</p>
</div>
<a id="RDFRM99942"></a>
<div class="props_rev_3"><a id="GUID-927BCAEC-8129-4B72-8858-0E5923F0156E"></a>
<h2 id="RDFRM-GUID-927BCAEC-8129-4B72-8858-0E5923F0156E" class="sect2"><span class="enumeration_section">C.1</span> Virtual Private Database (VPD) for RDF Data</h2>
<div>
<p>The Virtual Private Database (VPD) feature is a row-level security mechanism that restricts access to specific rows in a relational table or view using a security policy and an application context. The security policy includes a policy function that dynamically generates predicates that are enforced for each row returned for the user query. The security predicates returned by the policy function associated with a table are typically expressed using the columns in the table and are thus dependent on the table metadata. Effectively, the security predicates ensure that the rows returned for a user query satisfy additional conditions that are applied on the contents of the row.</p>
<p>When the relational data is mapped to RDF, the data stored in a specific relational table represent triples describing instances of a specific RDF class. In this representation, the columns in the relational table map to RDF properties that are used to describe a resource. This mapping may be further extended to the application of VPD policies.</p>
<p>A VPD policy applied to RDF data restricts users&#39; access to instances of a specific RDF class or property by applying predicates, in the form of graph patterns and filter conditions, on the instance data. For example, a VPD policy may be defined to restrict access to instances of a <code class="codeph">Contract</code> RDF class only to the users belonging to a specific department. Furthermore, access to the <code class="codeph">hasContractValue</code> property for a resource identified as instance of the <code class="codeph">Contract</code> RDF class may be restricted only to the manager of the contract. VPD support for RDF data allows security conditions or data access constraints to be associated with RDF classes and properties, so that access to corresponding instance data is restricted.</p>
<p>A data access constraint associated with an RDF class or property specifies a graph query pattern that must be enforced for all corresponding data instances that are returned as the query result. For example, a SPARQL query pattern to find the due dates for all instances of a <code class="codeph">Contract</code> class, <code class="codeph">{?contract :hasDueDate ?due}</code>, may activate a data access constraint that ensures that the information returned pertains to contracts belonging to a specific department. This is achieved by logically rewriting the user&#39;s graph query pattern to include additional graph patterns, as shown in the following example:</p>
<pre dir="ltr">{ ?contract   :hasDueDate  ?due . 
  ?contract   :drivenBy    dept:Dept1 }
</pre>
<p>Furthermore, the values bound into the rewritten graph query pattern may make use of session context to enforce dynamic access restrictions. In the following example, the <code class="codeph">sys_context</code> function in the object position of the triple pattern binds the appropriate department value based on the session context:</p>
<pre dir="ltr">{ ?contract   :hasDueDate   ?due . 
  ?contract   :drivenBy
             <span class="bold">&#34;sys_context(&#39;sa$appctx&#39;,&#39;user_dept&#39;}&#34;^^orardf:instruction</span> }
</pre>
<p>In a relational data model, the metadata, in the form of table definition, always exists along with the data (the rows stored in the table); thus, the VPD policies defined using the metadata are well formed and the security conditions are generated using a procedural logic in the policy function.</p>
<p>However, the RDF data model allows data with no accompanying metadata, and therefore the class information for instance data may not always be available for a given RDF graph. For example, in an RDF graph a resource known to be a contract might not accompany a triple that asserts that the resource is an instance of <code class="codeph">Contract</code> class. Usually such triples can be inferred using available domain and range specifications for the properties describing the resource.</p>
<p>Similarly, a VPD policy relies on the properties&#39; domain and range specifications for deriving the class information for the instance data and for enforcing appropriate data access constraints. However, to avoid runtime dependencies on the user data, a VPD policy maintains the minimal metadata required to derive the class information in its dictionary, separate from the asserted and inferred triples. This also ensures that the metadata maintained by a VPD policy is complete even when some necessary information is missing from the asserted triples and that a VPD policy, with its data access constraints and the metadata, is self-contained and portable with no external dependencies.</p>
<p>A VPD policy with specific data access constraints and RDF metadata specifications can be used to enforce access restrictions for the data stored in an RDF model. Each SPARQL query issued on the model is analyzed to deduce the class information for the resources accessed in the query, and appropriate data access constraints are applied. To facilitate the compile-time analysis and derivation of class information for instance data, a graph query pattern with an unbound predicate is restricted when a VPD policy is in effect. For example, a graph pattern of the following form, anywhere in a SPARQL query pattern, raises an exception when any underlying model has a VPD policy:</p>
<pre dir="ltr">{ &lt;contract:projectHLS&gt;  <span class="bold">?pred</span>  ?obj }
</pre>
<p>VPD policies are only enforced for SEM_MATCH queries expressed in SPARQL syntax. All other forms of data access (such as classic syntax for graph pattern or direct query on the model view) are not permitted.</p>
</div>
<a id="RDFRM99943"></a>
<div class="props_rev_3"><a id="GUID-C2E1F3FB-97D2-4270-A1BD-601C7A1E6579"></a>
<h3 id="RDFRM-GUID-C2E1F3FB-97D2-4270-A1BD-601C7A1E6579" class="sect3"><span class="enumeration_section">C.1.1</span> VPD Policy for RDF Data</h3>
<div>
<p>A VPD policy for RDF data is a named dictionary entity that can be used to enforce access restrictions for the data stored in one or more RDF models. A VPD policy defined for RDF data has unique characteristics, and it cannot be reused to enforce security policies for relational data. An RDF-VPD policy defined in the database includes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The RDF Schema statements or metadata necessary for deriving class information for the data referenced in a SPARQL user query</p>
</li>
<li>
<p>The data access constraints that enforce access restrictions for the instance data</p>
</li>
<li>
<p>Application context that allows conditional inclusions of groups of data access constraints based on the runtime environment</p>
</li>
</ul>
<p>An RDF-VPD policy is defined, owned, and maintained by a user with a security administrator role in an organization. This user must have at least EXECUTE privileges on the SYS.DBMS_RLS package. The owner of an RDF-VPD policy can maintain the metadata associated with the policy, define new data access constraints, and apply the policy to one or more RDF models.</p>
<p>A SPARQL query issued on an RDF model with a VPD policy is analyzed, and zero or more data access constraints defined in the policy are enforced such that the data instances that are returned as the query result also satisfy these constraints. The exact data access constraints enforced for a user query vary, based on the resources referenced in the query and the application context. For example, a policy that restricts a manager&#39;s access to the <code class="codeph">hasContractValue</code> property may be relaxed for a user with the Vice President role.</p>
<p>Based on the role of the user, as captured in the application context, specific constraints to be applied are determined at runtime. To facilitate this dynamic inclusion of subsets of constraints defined in a VPD policy, the data access constraints are arranged into named groups that can be activated and deactivated based on the application context. During query analysis, only the constraints defined in the active groups are considered for enforcement.</p>
<p>The constraint groups within a VPD policy are managed using an application context and its package implementation. Each VPD policy can specify the namespace for a context created with the CREATE CONTEXT command. Each attribute associated with the context is treated as the name of a constraint group that can be activated by initializing its value to 1. For example, setting the value for <code class="codeph">MANAGER</code> attribute of the context associated with a VPD policy to 1 will activate the constraints associated with <code class="codeph">MANAGER</code> group for the user session. The logic that initializes specific constraint groups based on the user context is typically embedded in the package associated with the context type. The following example shows an excerpt from a sample implementation for one such package:</p>
<pre dir="ltr">CREATE CONTEXT contracts_constr_ctx using sec_admin.contracts_ctx_pack;
 
begin
  -- create the VPD policy with a context -- 
  sem_rdfsa.create_vpd_policy(policy_name    =&gt; &#39;CONTRACTS_POLICY&#39;,
                              policy_context =&gt; &#39;contracts_constr_ctx&#39;);
end;
/
 
create or replace package sec_admin.contracts_ctx_pack as
  procedure init_constr_groups;
end;
/
 
create or replace package body sec_admin.contracts_ctx_pack as
  procedure init_contr_groups is 
    hrdata EmpRole%rowtype; 
  begin
    -- specific users with FULL access to the data associated with 
    -- the policy -- 
    if (sys_context(&#39;userenv&#39;, &#39;session_user&#39;) = &#39;RDF_ADMIN&#39;) then 
      dbms_session.set_context(&#39;contracts_constr_ctx&#39;,
                                sem_rdfsa.VPD_FULL_ACCESS, 1); 
      return;
    end if; 
 
    SELECT * into hrdata FROM EmpRole WHERE guid = 
                          sys_context(&#39;userenv&#39;,&#39;session_user&#39;);
 
    if (hrdata.emprole = &#39;VP&#39;) then 
      -- if the user logged in has VP role, activate the constraint
      -- group named VP and keep all other groups inactive. 
      dbms_session.set_context(&#39;contracts_constr_ctx&#39;,&#39;VP&#39;, &#39;1&#39;); 
    elsif (hrdata.emprole = &#39;MANAGER&#39;) then 
      dbms_session.set_context(&#39;contracts_constr_ctx&#39;, &#39;MANAGER&#39;, &#39;1&#39;); 
    elsif ...
      ...  
    else 
      raise_application_error(-20010, &#39;unknown user role&#39;); 
    end if;
 
  exception when others then 
    -- enforce constraints for all groups --
    dbms_session.clear_all_context(&#39;contracts_constr_ctx&#39;);
  end init_contr_groups; 
end;
/
</pre>
<p>By default, when a namespace is not associated with an RDF-VPD policy or when a specific constraint group is not activated in a session, all the constraints defined in the policy are active and they are enforced for each user query. However, when a specific constraint group is activated by setting the corresponding namespace-attribute value to 1, only the constraints belonging to the group and any other constraints that are not associated with any group are enforced. For a given session, one or more constraint groups may be activated, in which case all the applicable constraints are enforced conjunctively.</p>
<p>At the time of creation, the data access constraints defined in a RDF-VPD policy may specify the name of a constraint group (explained in <a href="rdf-vpd.htm#GUID-E8CEEB85-CF9B-4842-89A0-CED223A7874D">Data Access Constraints</a>). Within a database session, appropriate groups of constraints are activated based on the session context set by the context package. For all subsequent SPARQL queries in the database session, the constraints belonging to the active groups are consulted for enforcing appropriate security policies.</p>
<p>Maintenance operations on an RDF model with a VPD policy require unconditional access to data in the model. These operations include creation of an entailment using at least one VPD protected model, and load or data manipulation operations. You can grant unconditional access to the data stored in an RDF model by initializing a reserved attribute for the namespace associated with the VPD policy. The reserved attribute is defined by the package constant <code class="codeph">sem_rdfsa.VPD_FULL_ACCESS</code>, and the context package implementation shown in the preceding example grants FULL access to the RDF_ADMIN user.</p>
<p>DML operations on the application table are not validated for VPD constraint violations, so only a user with FULL access to the corresponding model can add or modify existing triples.</p>
<p>You can use the SEM_MATCH operator to query an RDF model with a VPD policy in a standard SQL query, and to perform a multi-model query on a combination of VPD-enabled models and models with no VPD policy. However, when more than one model in a multi-model query is VPD-enabled, they must all be associated with the same VPD policy. A VPD policy associated with an RDF model is automatically extended to any data inferred from the model. When multiple RDF models are specified during inference, all VPD-enabled models within the set should use the same VPD policy.</p>
</div>
</div>
<a id="RDFRM99944"></a>
<div class="props_rev_3"><a id="GUID-252B22E0-293D-402F-A1B7-5417D57DE9BC"></a>
<h3 id="RDFRM-GUID-252B22E0-293D-402F-A1B7-5417D57DE9BC" class="sect3"><span class="enumeration_section">C.1.2</span> RDF Metadata for Enforcing VPD Policies</h3>
<div>
<p>The types of RDF metadata used to enforce VPD policies include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Domain and range information for the properties used in the graph</p>
</li>
<li>
<p>Subclass relationships in the graph</p>
</li>
<li>
<p>Subproperty relationships in the graph</p>
</li>
<li>
<p>Equivalent properties in the graph</p>
</li>
</ul>
<p>The RDF metadata associated with a VPD policy is specified as one or more RDF Schema statements using one of the following property URIs:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">http://www.w3.org/2000/01/rdf-schema#domain</code></p>
</li>
<li>
<p><code class="codeph">http://www.w3.org/2000/01/rdf-schema#range</code></p>
</li>
<li>
<p><code class="codeph">http://www.w3.org/2000/01/rdf-schema#subClassOf</code></p>
</li>
<li>
<p><code class="codeph">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</code></p>
</li>
<li>
<p><code class="codeph">http://www.w3.org/2002/07/owl#equivalentProperty</code></p>
</li>
</ul>
<p>For example, the following RDF Schema statement associated with <code class="codeph">contracts_policy</code> asserts that the domain of the <code class="codeph">hasContractValue</code> property is a <code class="codeph">Contract</code> class. Note that range specification for the predicates can be skipped if they are not relevant or if they are of literal type</p>
<pre dir="ltr">begin
  sem_rdfsa.maint_vpd_metadata(
        policy_name =&gt; &#39;contracts_policy&#39;,
        t_subject   =&gt; &#39;&lt;http://www.myorg.com/pred/hasContractValue&gt;&#39;,
        t_predicate =&gt; &#39;&lt;http://www.w3.org/2000/01/rdf-schema#domain&gt;&#39;,
        t_object    =&gt; &#39;&lt;http://www.myorg.com/classes/Contract&gt;&#39;);
end;
/
</pre>
<p>An RDF-VPD policy maintains its metadata separate from the asserted and inferred triples. You can derive this metadata programmatically from the RDF models and the corresponding entailments. For example, if the domain and range information for the properties and subclass and subproperty relationships are already established in the asserted or inferred triples, you can use a SQL query on the underlying model views to populate the metadata for an RDF-VPD policy.</p>
<p>The domain and range information for the properties aid the query analysis in determining the RDF class type for the terms and unbound variables referenced in the query. This information is further used to enforce appropriate data access constraints on the data accessed by the query. The metadata relating to the subclass property is used to ensure that a data access constraint defined for a specific class in a class hierarchy is automatically enforced for all its subclasses. Similarly, the subproperty specification in a VPD policy is used to enforce any constraints associated with a property to all its subproperties.</p>
<p>The RDF Schema statements associated with a VPD policy are not used to infer additional statements, and the security administrator should ensure that the metadata captured in a VPD policy is complete by cross checking it with inferred data. For example, a subproperty schema statement does not automatically infer the domain and range information for the property based on the domain and range specified for the super-property.</p>
<p>Certain owl and rdfs properties in the asserted triples, when left unchecked, may be used to infer data that may be used to circumvent the VPD policies. For example, when the new property is defined as a super-property of a property that has a specific data access constraint, the inferred data may duplicate all instances of the subproperty using the super-property. Unless the VPD policy explicitly defines access constraints for the super-property, the inferred data may be used to circumvent the access restrictions.</p>
<p>The ability to infer new data is only granted to users with FULL access, and such users should ensure that the metadata associated with the VPD policy is complete in light of newly inferred data. Specifically, the metadata associated with the VPD policy should be maintained if some new <code class="codeph">rdfs:subClassOf</code>, <code class="codeph">rdfs:superClassOf</code>, <code class="codeph">rdfs:subPropertyOf</code>, <code class="codeph">rdfs:superPropertyOf</code>, or <code class="codeph">owl:equivalentProperty</code> assertions are generated during inference. Also, any new properties introduced by the rulebases used for inference may need domain and range specifications, as well as data access constraints, if they are associated with some sensitive information.</p>
<p>In a VPD policy, a property can be declared to be equivalent to another property so that the domain and range information, as well as any constraints defined for the original property, are automatically duplicated for the equivalent property. However, within a VPD policy, additional metadata or data access constraints cannot be directly assigned to the property declared to be an equivalent of another property.</p>
</div>
</div>
<a id="RDFRM99945"></a>
<div class="props_rev_3"><a id="GUID-E8CEEB85-CF9B-4842-89A0-CED223A7874D"></a>
<h3 id="RDFRM-GUID-E8CEEB85-CF9B-4842-89A0-CED223A7874D" class="sect3"><span class="enumeration_section">C.1.3</span> Data Access Constraints</h3>
<div>
<p>The data access constraints associated with a VPD policy fall into two general categories, based on the types of access restrictions that they enforce:</p>
<ul style="list-style-type: disc;">
<li>
<p>Those that restrict access to instances of specific RDF classes</p>
</li>
<li>
<p>Those that restrict to assertions using specific RDF properties</p>
</li>
</ul>
<p>The access restrictions are enforced conditionally, based on the application context and the characteristics of the resources being accessed in a SPARQL query. Data access constraints restrict access to instances of an RDF class or property using some properties associated with the resource. For example, access to a resource that is a member of the <code class="codeph">Contract</code> class may be restricted only to the users who work on the contract, identified using the <code class="codeph">hasMember</code> property associated with the resource. Similarly, access to the <code class="codeph">hasContractValue</code> property for a resource may be restricted to a user identified as the manager of the contract using <code class="codeph">hasManager</code> property associated with the same resource.</p>
<p>Each data access constraint is expressed using two graph patterns identified as a match pattern and an apply pattern. <a id="d75177e448" class="indexterm-anchor"></a>The <span class="bold">match pattern</span> of a constraint determines the type of access restriction it enforces and binds one or more variables to the corresponding data instances accessed in the user query. For example, the following match pattern is defined for instances of the <code class="codeph">Contract</code> class, and it binds a variable to all such instances accessed through a SPARQL query:</p>
<pre dir="ltr">{ ?contract  rdf:type  &lt;http://www.myorg.com/classes/Contract&gt; }
</pre>
<p>Similarly, a match pattern for a constraint involving an RDF property matches the instances of the property accessed in a SPARQL query, and binds two variables to the resources in the subject and object position of such instances. For example, the match pattern for a constraint on the <code class="codeph">hasContractValue</code> property is defined as follows:</p>
<pre dir="ltr">{ ?contract  &lt;http://www.myorg.com/pred/hasContractValue&gt;  ?cvalue }
</pre>
<p><a id="d75177e467" class="indexterm-anchor"></a>The <span class="bold">apply pattern</span> of a data access constraint defines additional graph patterns to be applied on the resources that match the match pattern before they can be used to construct the query results. One or more variables defined in the match pattern of a data access constraint are used in the corresponding apply pattern to enforce the access restrictions on the identified resources. For example, the following match pattern and apply pattern combination ensures that the <code class="codeph">hasContractValue</code> of a contract can be accessed only if <code class="codeph">Andy</code> is the manager of the contract being accessed.:</p>
<pre dir="ltr">Match:  { ?contract  pred:hasContractValue  ?cvalue  }
Apply:  { ?contract  pred:hasManager        emp:Andy }
</pre>
<p>A data access constraint with its match and apply patterns expressed in SPARQL syntax can be added to a VPD policy to enforce access restrictions on the data stored in RDF models that are associated with the VPD policy. The following example, which adds a constraint to the VPD policy, assumes that the VPD policy is defined with appropriate namespace map for the <code class="codeph">pred</code> and <code class="codeph">emp</code> namespace prefixes. (To associate a namespace map with a VPD policy, use the <a href="sem-rdfsa-ref.htm#GUID-B8D68568-37B3-4E79-92C0-98EA22C303DE">SEM_RDFSA.CREATE_VPD_POLICY</a> procedure.)</p>
<pre dir="ltr">begin
  sem_rdfsa.add_vpd_constraint(
          policy_name   =&gt; &#39;contracts_policy&#39;,
          constr_name   =&gt; &#39;andy_constraint_1&#39;,
          <span class="bold">match_pattern =&gt; &#39;{?contract  pred:hasContractValue ?cvalue }&#39;</span>,
          <span class="bold">apply_pattern =&gt; &#39;{?contract  pred:hasManager       emp:Andy }&#39;</span>, 
          constr_group  =&gt; &#39;andy&#39;);
end;
/
</pre>
<p>The ability to arrange data access constraints into groups could ensure that the previous constraint is applied only for the sessions associated with <code class="codeph">Andy</code>. However, to avoid proliferation of structurally similar constraints for each user, you can define a common constraint that uses the application context in the object position of the apply graph patterns, as shown in the following example:</p>
<pre dir="ltr">begin
  sem_rdfsa.add_vpd_constraint(
          policy_name   =&gt; &#39;contracts_policy&#39;,
          constr_name   =&gt; &#39;manager_constraint_1&#39;,
          match_pattern =&gt; &#39;{?contract  pred:hasContractValue ?cvalue }&#39;,
          apply_pattern =&gt; &#39;{?contract  pred:hasManager     
             <span class="bold">&#34;sys_context(&#39;&#39;sa$appctx&#39;&#39;,&#39;&#39;app_user_uri&#39;&#39;}&#34;^^orardf:instruction</span> }&#39;,
          constr_group  =&gt; &#39;manager&#39;);
end;
/
</pre>
<p>In the preceding example. the data access constraint, defined within the <code class="codeph">manager</code> constraint group, can be activated for all sessions involving users with a manager role. In this case, the secure application context can be programmed to initialize the attribute <code class="codeph">app_user_uri</code> of the <code class="codeph">sa$appctx</code> namespace with the URI for the user logged in. For example, when user <code class="codeph">Andy</code> logs into the application, the <code class="codeph">app_user_uri</code> attribute can be initialized to &lt;http://www.myorg.com/employee/Andy&gt;, in which case the constraint will ensure that user <code class="codeph">Andy</code> can view the value for a contract only if user <code class="codeph">Andy</code> manages the contract. Generally, the <code class="codeph">sys_context</code> function can be used in the object position of any graph pattern to allow dynamic URIs or literal values to be bound at the time of query execution. Note that if the context is not initialized properly, the preceding constraint will fail for all data instances and effectively restrict the user from accessing any data.</p>
<p>A SPARQL query issued on an RDF model with a VPD policy is analyzed using the match patterns of all the active data access constraints that are defined in the policy. In the next example, the SPARQL query refers to the <code class="codeph">hasContractValue</code> property, thereby enforcing the constraint if the group is active. Logically, the enforcement of a constraint is equivalent to rewriting the original SPARQL graph pattern to include the apply patterns for all the relevant constraints, using appropriate variables and terms from the user query. With the previous access restriction on the <code class="codeph">hasContractValue</code> property, the following SPARQL graph pattern passed to a SEM_MATCH operator is logically rewritten as shown in the following example:</p>
<pre dir="ltr">Query:     
{ ?contr  pred:drivenBy         ?dept . 
  ?contr  pred:hasContractValue ?val }
 
Rewritten query:     
{ ?contr  pred:drivenBy         ?dept . 
  ?contr  pred:hasContractValue ?val .
  <span class="bold">?contr  pred:hasManager</span>
                <span class="bold">&#34;sys_context(&#39;sa$appctx&#39;,&#39;app_user_uri&#39;}&#34;^^orardf:instruction }</span>
</pre>
<p>When the match pattern of a data access constraint on an RDF property matches the pattern being accessed in a user query, the equivalent VPD-enforced query appends the corresponding apply patterns to the SPARQL query using the variables and terms appearing in the matched pattern. When a SPARQL query has nested graph patterns, the data access constraints are applied to appropriate basic query graph pattern block. In the following example, the <code class="codeph">hasContractValue</code> property is referenced in the <code class="codeph">OPTIONAL</code> graph pattern, and therefore the corresponding apply pattern is enforced just for this block of the graph pattern.</p>
<pre dir="ltr">Query:     
{ ?contr  pred:drivenBy         ?dept . 
   OPTIONAL { ?contr  pred:hasContractValue ?val } } 
 
Rewritten query:     
{ ?contr  pred:drivenBy         ?dept . 
   OPTIONAL { ?contr  pred:hasContractValue ?val .
              ?contr  pred:hasManager
                &#34;sys_context(&#39;sa$appctx&#39;,&#39;app_user_uri&#39;}&#34;^^orardf:instruction }
</pre>
<p>The apply pattern for a data access constraint can be any valid basic graph pattern with multiple triple patterns and a FILTER clause. For example, the access constraint on the <code class="codeph">hasContractValue</code> property for a user with <code class="codeph">VP</code> role may stipulate that the user can access the property only if he or she is the Vice President of the department driving the contract. The match and apply patterns for such constraint can be defined as follows:</p>
<pre dir="ltr">Match:  { ?contract  pred:hasContractValue  ?cvalue  }
Apply:  { ?contract  pred:drivenBy          <span class="bold">?dept</span> . 
          <span class="bold">?dept</span>      pred:hasVP
               &#34;sys_context(&#39;sa$appctx&#39;,&#39;app_user_uri&#39;}&#34;^^orardf:instruction }
</pre>
<p>A match pattern defined for a data access constraint associated with an RDF class identifies all variables and terms that are known to be instances of the class. The RDF metadata defined in the VPD policy is used to determine the type for each variable and the term in a SPARQL query, and the appropriate access constraints are applied on these variables and terms. For example, the following VPD constraint ensures that a resource that is a member of the <code class="codeph">Contract</code> class can only be accessed by a user who has a <code class="codeph">hasMember</code> relationship with the resource:</p>
<pre dir="ltr">Match:  { ?contract  rdf:type  &lt;http://www.myorg.com/classes/Contract&gt; }
Apply:  { ?contract  pred:hasMember           
               &#34;sys_context(&#39;sa$appctx&#39;,&#39;app_user_uri&#39;}&#34;^^orardf:instruction }
</pre>
<p>The class information for a variable or term appearing in a SPARQL query is derived using the domain and range information for the properties appearing in the query. In the SPARQL query in the next example, if the VPD policy has an RDF Schema statement that asserts that the domain of the <code class="codeph">drivenBy</code> property is the <code class="codeph">Contract</code> class, the variable <code class="codeph">?contr</code> is known to hold instances of the <code class="codeph">Contract</code> class. Therefore, with the previously defined access restriction for the <code class="codeph">Contract</code> class, the user query is rewritten to include an appropriate apply pattern, as shown in the following example:</p>
<pre dir="ltr">Query:     
{ <span class="bold">?contr</span>  pred:drivenBy    ?dept . 
  ?contr  pred:hasDueDate  ?due } 
 
Rewritten query: 
{ ?contr  pred:drivenBy    ?dept . 
  ?contr  pred:hasDueDate  ?due  . 
  ?contr  pred:hasMember           
               &#34;sys_context(&#39;sa$appctx&#39;,&#39;app_user_uri&#39;}&#34;^^orardf:instruction }
</pre>
<p>When a basic graph pattern in a SPARQL query matches multiple data access constraints, the corresponding apply patterns are combined to form a conjunctive graph pattern, which is subsequently enforced for the specific graph pattern by logically rewriting the SPARQL query. While considering the data access constraints to be enforced for a given SPARQL query, the class and property hierarchy associated with the VPD policy is consulted to automatically enforce all applicable constraints.</p>
<ul style="list-style-type: disc;">
<li>
<p>A variable or term identified as an instance of a specific RDF class enforces constraints associated with the class and all its superclasses.</p>
</li>
<li>
<p>A constraint associated with a property is enforced when the user query references the property or any property defined as its subproperty or an equivalent property.</p>
</li>
</ul>
<p>You can use the <code class="codeph">sys_context</code> function in a data access constraint to enforce context-dependent access restrictions with structurally similar graph patterns. You can dynamically activate and deactivate constraint groups, based on the application context, to enforce alternate access restrictions using structurally different graph patterns.</p>
</div>
</div>
<a id="RDFRM99947"></a><a id="RDFRM99946"></a>
<div class="props_rev_3"><a id="GUID-BD3FFABD-EDB4-4E0A-9D45-FDE2439A856D"></a>
<h3 id="RDFRM-GUID-BD3FFABD-EDB4-4E0A-9D45-FDE2439A856D" class="sect3"><span class="enumeration_section">C.1.4</span> RDFVPD_POLICIES View</h3>
<div>
<p>The MDSYS.RDFVPD_POLICIES view contains information about all VPD policies defined in the schema or the policies to which the user has FULL access. If the same policy is associated with multiple models, this view has one entry for each such association. This view exists only after the semantic network and a VPD policy have been created.</p>
<p>The MDSYS.RDFVPD_POLICIES view contains the columns shown in <a href="rdf-vpd.htm#GUID-BD3FFABD-EDB4-4E0A-9D45-FDE2439A856D__CIHDDGCJ" title="MDSYS.RDFVPD_POLICIES view columns">Table C-1</a>.</p>
<div class="tblformal" id="GUID-BD3FFABD-EDB4-4E0A-9D45-FDE2439A856D__CIHDDGCJ">
<p class="titleintable">Table C-1 MDSYS.RDFVPD_POLICIES View Columns</p>
<table class="cellalignment4510" title="MDSYS.RDFVPD_POLICIES View Columns" summary="MDSYS.RDFVPD_POLICIES view columns">
<thead>
<tr class="cellalignment4501">
<th class="cellalignment4511" id="d75177e694">Column Name</th>
<th class="cellalignment4512" id="d75177e697">Data Type</th>
<th class="cellalignment4513" id="d75177e700">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e705" headers="d75177e694">
<p>POLICY_OWNER</p>
</td>
<td class="cellalignment4515" headers="d75177e705 d75177e697">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e705 d75177e700">
<p>Owner of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e715" headers="d75177e694">
<p>POLICY_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e715 d75177e697">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e715 d75177e700">
<p>Name of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e725" headers="d75177e694">
<p>NAMESPACE_MAP</p>
</td>
<td class="cellalignment4515" headers="d75177e725 d75177e697">
<p>RDF_ALIASES</p>
</td>
<td class="cellalignment4516" headers="d75177e725 d75177e700">
<p>Mapping for namespace entries that are used in the VPD constraint definitions.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e735" headers="d75177e694">
<p>CONTEXT_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e735 d75177e697">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e735 d75177e700">
<p>Name of the context used to manage constraint groups.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="RDFRM99949"></a><a id="RDFRM99948"></a>
<div class="props_rev_3"><a id="GUID-CCAFACF0-1CE9-4DE7-AA6F-24F68825590A"></a>
<h3 id="RDFRM-GUID-CCAFACF0-1CE9-4DE7-AA6F-24F68825590A" class="sect3"><span class="enumeration_section">C.1.5</span> RDFVPD_MODELS View</h3>
<div>
<p>The MDSYS.RDFVPD_MODELS view contains information about RDF models and their associated VPD policies. This view exists only after the semantic network and a VPD policy have been created.</p>
<p>The MDSYS.RDFVPD_MODELS view contains the columns shown in <a href="rdf-vpd.htm#GUID-CCAFACF0-1CE9-4DE7-AA6F-24F68825590A__CIHBJHFH" title="MDSYS.RDFVPD_MODELS view columns">Table C-2</a>.</p>
<div class="tblformal" id="GUID-CCAFACF0-1CE9-4DE7-AA6F-24F68825590A__CIHBJHFH">
<p class="titleintable">Table C-2 MDSYS.RDFVPD_MODELS View Columns</p>
<table class="cellalignment4510" title="MDSYS.RDFVPD_MODELS View Columns" summary="MDSYS.RDFVPD_MODELS view columns">
<thead>
<tr class="cellalignment4501">
<th class="cellalignment4511" id="d75177e810">Column Name</th>
<th class="cellalignment4512" id="d75177e813">Data Type</th>
<th class="cellalignment4513" id="d75177e816">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e821" headers="d75177e810">
<p>MODEL_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e821 d75177e813">
<p>VARCHAR2(25)</p>
</td>
<td class="cellalignment4516" headers="d75177e821 d75177e816">
<p>Name of the model.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e831" headers="d75177e810">
<p>POLICY_OWNER</p>
</td>
<td class="cellalignment4515" headers="d75177e831 d75177e813">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e831 d75177e816">
<p>Owner of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e841" headers="d75177e810">
<p>POLICY_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e841 d75177e813">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e841 d75177e816">
<p>Name of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e851" headers="d75177e810">
<p>OPERATION_TYPE</p>
</td>
<td class="cellalignment4515" headers="d75177e851 d75177e813">
<p>VARCHAR2(9)</p>
</td>
<td class="cellalignment4516" headers="d75177e851 d75177e816">
<p>Type of operation for which the VPD policy is enforced: <code class="codeph">QUERY</code> or <code class="codeph">DML</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="RDFRM99951"></a><a id="RDFRM99950"></a>
<div class="props_rev_3"><a id="GUID-ED64842F-5016-4645-9D1B-59262063959A"></a>
<h3 id="RDFRM-GUID-ED64842F-5016-4645-9D1B-59262063959A" class="sect3"><span class="enumeration_section">C.1.6</span> RDFVPD_POLICY_CONSTRAINTS View</h3>
<div>
<p>The MDSYS.RDFVPD_POLICY_CONSTRAINTS view contains information about the constraints defined in the VPD policy that are accessible to the current user. This view exists only after the semantic network and a VPD policy have been created.</p>
<p>The MDSYS.RDFVPD_POLICY_CONSTRAINTS view contains the columns shown in <a href="rdf-vpd.htm#GUID-ED64842F-5016-4645-9D1B-59262063959A__CIHHGDIB" title="MDSYS.RDFVPD_POLICY_CONSTRAINTS view columns">Table C-3</a>.</p>
<div class="tblformal" id="GUID-ED64842F-5016-4645-9D1B-59262063959A__CIHHGDIB">
<p class="titleintable">Table C-3 MDSYS.RDFVPD_POLICY_CONSTRAINTS View Columns</p>
<table class="cellalignment4510" title="MDSYS.RDFVPD_POLICY_CONSTRAINTS View Columns" summary="MDSYS.RDFVPD_POLICY_CONSTRAINTS view columns">
<thead>
<tr class="cellalignment4501">
<th class="cellalignment4511" id="d75177e933">Column Name</th>
<th class="cellalignment4512" id="d75177e936">Data Type</th>
<th class="cellalignment4513" id="d75177e939">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e944" headers="d75177e933">
<p>POLICY_OWNER</p>
</td>
<td class="cellalignment4515" headers="d75177e944 d75177e936">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e944 d75177e939">
<p>Owner of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e954" headers="d75177e933">
<p>POLICY_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e954 d75177e936">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e954 d75177e939">
<p>Name of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e964" headers="d75177e933">
<p>CONSTRAINT_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e964 d75177e936">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e964 d75177e939">
<p>Name of the constraint.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e974" headers="d75177e933">
<p>MATCH_PATTERN</p>
</td>
<td class="cellalignment4515" headers="d75177e974 d75177e936">
<p>VARCHAR2(1000)</p>
</td>
<td class="cellalignment4516" headers="d75177e974 d75177e939">
<p>Match pattern for the constraint.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e984" headers="d75177e933">
<p>APPLY_PATTERN</p>
</td>
<td class="cellalignment4515" headers="d75177e984 d75177e936">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e984 d75177e939">
<p>Apply pattern for the constraint.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e994" headers="d75177e933">
<p>CONSTRAINT_GROUP</p>
</td>
<td class="cellalignment4515" headers="d75177e994 d75177e936">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e994 d75177e939">
<p>Name of the constraint group to which the constraint belongs. (Not case-sensitive.).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="RDFRM99953"></a><a id="RDFRM99952"></a>
<div class="props_rev_3"><a id="GUID-C37D0691-0FDE-4A1D-B1E1-07606D68E346"></a>
<h3 id="RDFRM-GUID-C37D0691-0FDE-4A1D-B1E1-07606D68E346" class="sect3"><span class="enumeration_section">C.1.7</span> RDFVPD_PREDICATE_MDATA View</h3>
<div>
<p>The MDSYS.RDFVPD_PREDICATE_MDATA view contains information about the predicate metadata associated with a VPD policy. This view exists only after the semantic network and a VPD policy have been created.</p>
<p>The MDSYS.RDFVPD_PREDICATE_MDATA view contains the columns shown in <a href="rdf-vpd.htm#GUID-C37D0691-0FDE-4A1D-B1E1-07606D68E346__CIHEFAIH" title="MDSYS.RDFVPD_PREDICATE_MDATA view columns">Table C-4</a>.</p>
<div class="tblformal" id="GUID-C37D0691-0FDE-4A1D-B1E1-07606D68E346__CIHEFAIH">
<p class="titleintable">Table C-4 MDSYS.RDFVPD_PREDICATE_MDATA View Columns</p>
<table class="cellalignment4510" title="MDSYS.RDFVPD_PREDICATE_MDATA View Columns" summary="MDSYS.RDFVPD_PREDICATE_MDATA view columns">
<thead>
<tr class="cellalignment4501">
<th class="cellalignment4511" id="d75177e1069">Column Name</th>
<th class="cellalignment4512" id="d75177e1072">Data Type</th>
<th class="cellalignment4513" id="d75177e1075">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1080" headers="d75177e1069">
<p>POLICY_OWNER</p>
</td>
<td class="cellalignment4515" headers="d75177e1080 d75177e1072">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e1080 d75177e1075">
<p>Owner of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1090" headers="d75177e1069">
<p>POLICY_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e1090 d75177e1072">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e1090 d75177e1075">
<p>Name of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1100" headers="d75177e1069">
<p>PREDICATE</p>
</td>
<td class="cellalignment4515" headers="d75177e1100 d75177e1072">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e1100 d75177e1075">
<p>URI for the predicate for which the domain and range information is defined.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1110" headers="d75177e1069">
<p>HASDOMAIN</p>
</td>
<td class="cellalignment4515" headers="d75177e1110 d75177e1072">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e1110 d75177e1075">
<p>URI representing the domain of the predicate.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1120" headers="d75177e1069">
<p>HASRANGE</p>
</td>
<td class="cellalignment4515" headers="d75177e1120 d75177e1072">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e1120 d75177e1075">
<p>URI representing the range of the predicate.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="RDFRM99955"></a><a id="RDFRM99954"></a>
<div class="props_rev_3"><a id="GUID-166F9910-A458-444E-8CD2-FD90250DBCE4"></a>
<h3 id="RDFRM-GUID-166F9910-A458-444E-8CD2-FD90250DBCE4" class="sect3"><span class="enumeration_section">C.1.8</span> RDFVPD_RESOURCE_REL View</h3>
<div>
<p>The MDSYS.RDFVPD_RESOURCE_REL view contains information about the subclass, subproperty, and equivalence property relationships that are defined between resources in a VPD policy. This view exists only after the semantic network and a VPD policy have been created.</p>
<p>The MDSYS.RDFVPD_RESOURCE_REL view contains the columns shown in <a href="rdf-vpd.htm#GUID-166F9910-A458-444E-8CD2-FD90250DBCE4__CIHGHEII" title="MDSYS.RDFVPD_RESOURCE_REL view columns">Table C-5</a>.</p>
<div class="tblformal" id="GUID-166F9910-A458-444E-8CD2-FD90250DBCE4__CIHGHEII">
<p class="titleintable">Table C-5 MDSYS.RDFVPD_RESOURCE_REL View Columns</p>
<table class="cellalignment4510" title="MDSYS.RDFVPD_RESOURCE_REL View Columns" summary="MDSYS.RDFVPD_RESOURCE_REL view columns">
<thead>
<tr class="cellalignment4501">
<th class="cellalignment4511" id="d75177e1195">Column Name</th>
<th class="cellalignment4512" id="d75177e1198">Data Type</th>
<th class="cellalignment4513" id="d75177e1201">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1206" headers="d75177e1195">
<p>POLICY_OWNER</p>
</td>
<td class="cellalignment4515" headers="d75177e1206 d75177e1198">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e1206 d75177e1201">
<p>Owner of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1216" headers="d75177e1195">
<p>POLICY_NAME</p>
</td>
<td class="cellalignment4515" headers="d75177e1216 d75177e1198">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment4516" headers="d75177e1216 d75177e1201">
<p>Name of the VPD policy.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1226" headers="d75177e1195">
<p>SUBJECT_RESOURCE</p>
</td>
<td class="cellalignment4515" headers="d75177e1226 d75177e1198">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e1226 d75177e1201">
<p>Subject resource.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1236" headers="d75177e1195">
<p>OBJECT_RESOURCE</p>
</td>
<td class="cellalignment4515" headers="d75177e1236 d75177e1198">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e1236 d75177e1201">
<p>Object resource.</p>
</td>
</tr>
<tr class="cellalignment4501">
<td class="cellalignment4514" id="d75177e1246" headers="d75177e1195">
<p>RELATIONSHIP_TYPE</p>
</td>
<td class="cellalignment4515" headers="d75177e1246 d75177e1198">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment4516" headers="d75177e1246 d75177e1201">
<p>Relationship that exists between the subject resource and the object resource.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4500">
<tr>
<td class="cellalignment4507">
<table class="cellalignment4505">
<tr>
<td class="cellalignment4504"><a href="sem-match-spatial.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4504"><a href="GUID-E57849D7-DDB7-4219-8687-90D870DD8630.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2005, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4509">
<table class="cellalignment4503">
<tr>
<td class="cellalignment4504"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4504"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4504"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4504"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4504"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4504"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>