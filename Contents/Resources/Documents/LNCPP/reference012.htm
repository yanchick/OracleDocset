<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73915"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Consumer%20Class"></a><title>Consumer Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1082"/>
<meta name="dcterms.created" content="2016-06-01T12:8:11Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="C++ Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48221-07"/>
<meta name="dcterms.isVersionOf" content="LNCPP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="reference011.htm" title="Previous" type="text/html"/>
<link rel="Next" href="reference013.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48221-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">32/54</span> <!-- End Header --><a id="CACBGCEB"></a>
<div id="LNCPP1030" class="refsect1">
<h1 class="refsect1">Consumer <a id="sthref747"></a><a id="sthref748"></a><a id="sthref749"></a>Class</h1>
<p>The <code dir="ltr">Consumer</code> class supports dequeuing of <code dir="ltr">Message</code>s and controls the dequeuing options.</p>
<div id="LNCPP20850" class="tblformal">
<p class="titleintable"><a id="sthref750"></a><a id="BBACHCJH"></a>Table 13-14 Enumerated Values Used by Consumer Class</p>
<table class="cellalignment2203" title="Enumerated Values Used by Consumer Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t135">Attribute</th>
<th class="cellalignment2204" id="r1c2-t135">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t135" headers="r1c1-t135">
<pre dir="ltr">DequeMode
</pre></td>
<td class="cellalignment2205" headers="r2c1-t135 r1c2-t135">
<ul>
<li>
<p><code dir="ltr">DEQ_BROWSE</code> indicates that the message should be read without acquiring a lock; equivalent to a <code dir="ltr">SELECT</code>.</p>
</li>
<li>
<p><code dir="ltr">DEQ_LOCKED</code> indicates that the message should be read. Get its write lock, which lasts s for the duration of the transaction; equivalent to a <code dir="ltr">SELECT FOR UPDATE</code>.</p>
</li>
<li>
<p><code dir="ltr">DEQ_REMOVE</code> indicates that the message should be read. Update or delete it; the message can be retained in the queue table based on the retention properties. This is the default setting.</p>
</li>
<li>
<p><code dir="ltr">DEQ_REMOVE_NODATA</code> indicates that the receipt of the message should be confirmed, but its actual content should not be delivered.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t135" headers="r1c1-t135">
<pre dir="ltr">Navigation
</pre></td>
<td class="cellalignment2205" headers="r3c1-t135 r1c2-t135">
<ul>
<li>
<p><code dir="ltr">DEQ_FIRST_MSG</code> indicates that the first available message on the queue that matches the search criteria must be retrieved. Resets the position to the beginning of the queue.</p>
</li>
<li>
<p><code dir="ltr">DEQ_NEXT_TRANSACTION</code> indicates that the next available message on the queue that matches the search criteria must be retrieved. If the previous message belongs to a message group, AQ retrieves the next available message that matches the search criteria and belongs to the message group. This is the default setting.</p>
</li>
<li>
<p><code dir="ltr">DEQ_NEXT_MSG</code> indicates that the remainder of the current transaction group, if any, should be skipped. The first message of the next transaction group may then be retrieved. This option can only be used if message grouping is enabled for the current queue.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t135" headers="r1c1-t135">
<pre dir="ltr">Visibility
</pre></td>
<td class="cellalignment2205" headers="r4c1-t135 r1c2-t135">
<ul>
<li>
<p><code dir="ltr">DEQ_IMMEDIATE</code> indicates that the dequeued message is not part of the current transaction. It constitutes a transaction on its own.</p>
</li>
<li>
<p><code dir="ltr">DEQ_ON_COMMIT</code> indicates that the dequeue is part of the current transaction. This is the default setting.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t135" headers="r1c1-t135">
<pre dir="ltr">DequeWaitOption
</pre></td>
<td class="cellalignment2205" headers="r5c1-t135 r1c2-t135">
<ul>
<li>
<p><code dir="ltr">DEQ_WAIT_FOREVER</code> indicates that the consumer waits for the <code dir="ltr">Message</code> indefinitely.</p>
</li>
<li>
<p><code dir="ltr">DEQ_NO_WAIT</code> indicates that there should be not wait if there are no messages on the queue.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP20851" class="tblformal">
<p class="titleintable"><a id="sthref751"></a><a id="sthref752"></a>Table 13-15 Summary of <a id="sthref753"></a><a id="sthref754"></a>Consumer Methods</p>
<table class="cellalignment2203" title="Summary of Consumer Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t136">Method</th>
<th class="cellalignment2204" id="r1c2-t136">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t136" headers="r1c1-t136">
<p><a href="#CACJEFAG">Consumer()</a></p>
</td>
<td class="cellalignment2205" headers="r2c1-t136 r1c2-t136">
<p><code dir="ltr">Consumer</code> class constructor.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t136" headers="r1c1-t136">
<p><a href="#CACBEEJC">getConsumerName()</a></p>
</td>
<td class="cellalignment2205" headers="r3c1-t136 r1c2-t136">
<p>Retrieves the name of the <code dir="ltr">Consumer</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t136" headers="r1c1-t136">
<p><a href="#CACFACAH">getCorrelationId()</a></p>
</td>
<td class="cellalignment2205" headers="r4c1-t136 r1c2-t136">
<p>Retrieves she correlation id of the message that is to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t136" headers="r1c1-t136">
<p><a href="#CACDAGIC">getDequeueMode()</a></p>
</td>
<td class="cellalignment2205" headers="r5c1-t136 r1c2-t136">
<p>Retrieves the dequeue mode of the <code dir="ltr">Consumer</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t136" headers="r1c1-t136">
<p><a href="#CACHDBEB">getMessageIdToDequeue()</a></p>
</td>
<td class="cellalignment2205" headers="r6c1-t136 r1c2-t136">
<p>Retrieves the id of the message that is dequeued.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t136" headers="r1c1-t136">
<p><a href="#CIAEFEBD">getQueueName()</a></p>
</td>
<td class="cellalignment2205" headers="r7c1-t136 r1c2-t136">
<p>Gets the name of the queue used by the consumer.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t136" headers="r1c1-t136">
<p><a href="#CACEGJII">getPositionOfMessage()</a></p>
</td>
<td class="cellalignment2205" headers="r8c1-t136 r1c2-t136">
<p>Retrieves the position of the Message that is dequeued.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t136" headers="r1c1-t136">
<p><a href="#CIAJHBDF">getTransformation()</a></p>
</td>
<td class="cellalignment2205" headers="r9c1-t136 r1c2-t136">
<p>Retrieves the transformation applied before a <code dir="ltr">Message</code> is dequeued.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t136" headers="r1c1-t136">
<p><a href="#CACDIJIA">getVisibility()</a></p>
</td>
<td class="cellalignment2205" headers="r10c1-t136 r1c2-t136">
<p>Retrieves the transactional behavior of the dequeue operation.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t136" headers="r1c1-t136">
<p><a href="#CACBCJJF">getWaitTime()</a></p>
</td>
<td class="cellalignment2205" headers="r11c1-t136 r1c2-t136">
<p>Retrieves the specified behavior of the <code dir="ltr">Consumer</code> when waiting for a <code dir="ltr">Message</code> with matching search criteria.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t136" headers="r1c1-t136">
<p><a href="#CACDCBCD">isNull()</a></p>
</td>
<td class="cellalignment2205" headers="r12c1-t136 r1c2-t136">
<p>Tests whether the <code dir="ltr">Consumer</code> object is <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t136" headers="r1c1-t136">
<p><a href="#BBAJEEAE">operator=()</a></p>
</td>
<td class="cellalignment2205" headers="r13c1-t136 r1c2-t136">
<p>Assignment operator for the <code dir="ltr">Consumer</code> class.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t136" headers="r1c1-t136">
<p><a href="#CACGIAEF">receive()</a></p>
</td>
<td class="cellalignment2205" headers="r14c1-t136 r1c2-t136">
<p>Receives and dequeues a <code dir="ltr">Message</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t136" headers="r1c1-t136">
<p><a href="#CACGHEBG">setAgent()</a></p>
</td>
<td class="cellalignment2205" headers="r15c1-t136 r1c2-t136">
<p>Sets the <code dir="ltr">Agent</code>&#39;s name and address (queue name) on the consumer.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t136" headers="r1c1-t136">
<p><a href="#CACBCFCE">setConsumerName()</a></p>
</td>
<td class="cellalignment2205" headers="r16c1-t136 r1c2-t136">
<p>Sets the <code dir="ltr">Consumer</code> name.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t136" headers="r1c1-t136">
<p><a href="#CACEEIEB">setCorrelationId()</a></p>
</td>
<td class="cellalignment2205" headers="r17c1-t136 r1c2-t136">
<p>Specifies the correlation identifier of the message to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t136" headers="r1c1-t136">
<p><a href="#CACCAFHA">setDequeueMode()</a></p>
</td>
<td class="cellalignment2205" headers="r18c1-t136 r1c2-t136">
<p>Specifies the locking behavior associated with dequeuing.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r19c1-t136" headers="r1c1-t136">
<p><a href="#CACDHCAH">setMessageIdToDequeue()</a></p>
</td>
<td class="cellalignment2205" headers="r19c1-t136 r1c2-t136">
<p>Specifies the identifier of the <code dir="ltr">Message</code> to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r20c1-t136" headers="r1c1-t136">
<p><a href="#CACDGIGJ">setNull()</a></p>
</td>
<td class="cellalignment2205" headers="r20c1-t136 r1c2-t136">
<p>Nullifies the <code dir="ltr">Consumer</code>; frees the memory associated with this object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r21c1-t136" headers="r1c1-t136">
<p><a href="#CACFFIBB">setPositionOfMessage()</a></p>
</td>
<td class="cellalignment2205" headers="r21c1-t136 r1c2-t136">
<p>Specifies position of the <code dir="ltr">Message</code> to be retrieved.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r22c1-t136" headers="r1c1-t136">
<p><a href="#CACIFDEG">setQueueName()</a></p>
</td>
<td class="cellalignment2205" headers="r22c1-t136 r1c2-t136">
<p>Specifies the name of a queue before dequeuing <code dir="ltr">Message</code>s.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r23c1-t136" headers="r1c1-t136">
<p><a href="#CIAHBJJA">setTransformation()</a></p>
</td>
<td class="cellalignment2205" headers="r23c1-t136 r1c2-t136">
<p>Specifies transformation applied before dequeuing a <code dir="ltr">Message</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r24c1-t136" headers="r1c1-t136">
<p><a href="#CACEJJHI">setVisibility()</a></p>
</td>
<td class="cellalignment2205" headers="r24c1-t136 r1c2-t136">
<p>Specifies if <code dir="ltr">Message</code> should be dequeued as part of the current transaction.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r25c1-t136" headers="r1c1-t136">
<p><a href="#CACECHFB">setWaitTime()</a></p>
</td>
<td class="cellalignment2205" headers="r25c1-t136 r1c2-t136">
<p>Specifies wait conditions if there are no <code dir="ltr">Message</code>s with matching criteria.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP20852" class="refsect2"><a id="CACJEFAG"></a>
<h2 class="refsect2">Consumer()</h2>
<p>Consumer class constructor.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of Consumer() constructor" summary="First column lists versions of the constructor; second column provides description of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t137">Syntax</th>
<th class="cellalignment2204" id="r1c2-t137">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t137" headers="r1c1-t137">
<pre dir="ltr">Consumer(
   const Connection *conn);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t137 r1c2-t137">Creates a new <code dir="ltr">Consumer</code> object with the specified <code dir="ltr">Connection</code> handle.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t137" headers="r1c1-t137">
<pre dir="ltr">Consumer(
   const Connection *conn
   const Agent&amp; agent);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t137 r1c2-t137">Creates a new <code dir="ltr">Consumer</code> object with specified <code dir="ltr">Connection</code> and properties of the specified <code dir="ltr">Agent</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t137" headers="r1c1-t137">
<pre dir="ltr">Consumer(
   const Connection *conn,
   const string&amp; queue);
</pre></td>
<td class="cellalignment2205" headers="r4c1-t137 r1c2-t137">Creates a new <code dir="ltr">Consumer</code> object with specified <code dir="ltr">Connection</code> and queue.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t137" headers="r1c1-t137">
<pre dir="ltr">Consumer(
   const Consumer&amp; consumer);
</pre></td>
<td class="cellalignment2205" headers="r5c1-t137 r1c2-t137">Copy constructor.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of Consumer() constructor" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t138">Parameter</th>
<th class="cellalignment2204" id="r1c2-t138">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t138" headers="r1c1-t138">
<pre dir="ltr">conn
</pre></td>
<td class="cellalignment2205" headers="r2c1-t138 r1c2-t138">The connection in which the <code dir="ltr">Consumer</code> is created.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t138" headers="r1c1-t138">
<pre dir="ltr">agent
</pre></td>
<td class="cellalignment2205" headers="r3c1-t138 r1c2-t138">Agent assigned to the <code dir="ltr">Consumer</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t138" headers="r1c1-t138">
<pre dir="ltr">queue
</pre></td>
<td class="cellalignment2205" headers="r4c1-t138 r1c2-t138">Queue at which the <code dir="ltr">Consumer</code> retrieves messages.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t138" headers="r1c1-t138">
<pre dir="ltr">consumer
</pre></td>
<td class="cellalignment2205" headers="r5c1-t138 r1c2-t138">Original <code dir="ltr">Consumer</code> object.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20853" class="refsect2"><a id="CACBEEJC"></a>
<h2 class="refsect2">getConsumerName()</h2>
<p>Retrieves the name of the <code dir="ltr">Consumer</code>.</p>
<p class="subhead1"><a id="LNCPP20854"></a>Syntax</p>
<pre dir="ltr">string getConsumerName() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20855" class="refsect2"><a id="CACFACAH"></a>
<h2 class="refsect2">getCorrelationId()</h2>
<p>Retrieves she correlation id of the message that is to be dequeued</p>
<p class="subhead1"><a id="LNCPP20856"></a>Syntax</p>
<pre dir="ltr">string geCorrelationId() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20857" class="refsect2"><a id="CACDAGIC"></a>
<h2 class="refsect2">getDequeueMode()</h2>
<p>Retrieves the dequeue mode of the <code dir="ltr">Consumer</code>. <code dir="ltr">DequeueMode</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20858"></a>Syntax</p>
<pre dir="ltr">DequeueMode getDequeueMode() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20859" class="refsect2"><a id="CACHDBEB"></a>
<h2 class="refsect2">getMessageIdToDequeue()</h2>
<p>Retrieves the id of the message that is dequeued.</p>
<p class="subhead1"><a id="LNCPP20860"></a>Syntax</p>
<pre dir="ltr">Bytes getMessageToDequeue() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20861" class="refsect2"><a id="CACEGJII"></a>
<h2 class="refsect2">getPositionOfMessage()</h2>
<p>Retrieves the position, or navigation, of the message that is dequeued. <code dir="ltr">Navigation</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20862"></a>Syntax</p>
<pre dir="ltr">Navigation getPositionOfMessage() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20863" class="refsect2"><a id="CIAEFEBD"></a>
<h2 class="refsect2">getQueueName()</h2>
<p>Gets the name of the queue used by the consumer.</p>
<p class="subhead1"><a id="LNCPP20864"></a>Syntax</p>
<pre dir="ltr">string getQueueName() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20865" class="refsect2"><a id="CIAJHBDF"></a>
<h2 class="refsect2">getTransformation()</h2>
<p>Retrieves the transformation applied before a <code dir="ltr">Message</code> is dequeued.</p>
<p class="subhead1"><a id="LNCPP20866"></a>Syntax</p>
<pre dir="ltr">string getTransformation() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20867" class="refsect2"><a id="CACDIJIA"></a>
<h2 class="refsect2">getVisibility()</h2>
<p>Retrieves the transactional behavior of the dequeue operation, or visibility. <code dir="ltr">Visibility</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20868"></a>Syntax</p>
<pre dir="ltr">Visibility getVisibility() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20869" class="refsect2"><a id="CACBCJJF"></a>
<h2 class="refsect2">getWaitTime()</h2>
<p>Retrieves the specified behavior of the <code dir="ltr">Consumer</code> when waiting for a <code dir="ltr">Message</code> with matching search criteria. <code dir="ltr">DequeWaitOption</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20870"></a>Syntax</p>
<pre dir="ltr">DequeWaitOption getWaitTime() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20871" class="refsect2"><a id="CACDCBCD"></a>
<h2 class="refsect2">isNull()</h2>
<p>Tests whether the <code dir="ltr">Consumer</code> object is <code dir="ltr">NULL</code>. If the <code dir="ltr">Consumer</code> object is <code dir="ltr">NULL</code>, <code dir="ltr">TRUE</code> is returned; otherwise, <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20872"></a>Syntax</p>
<pre dir="ltr">bool isNull() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20873" class="refsect2"><a id="BBAJEEAE"></a>
<h2 class="refsect2">operator=()</h2>
<p>Assignment operator for <code dir="ltr">Consumer</code> class.</p>
<p class="subhead2"><a id="LNCPP20874"></a>Syntax</p>
<pre dir="ltr">void operator=(
   const Consumer&amp; consumer); 
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of operator=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t139">Parameter</th>
<th class="cellalignment2204" id="r1c2-t139">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t139" headers="r1c1-t139">
<pre dir="ltr">consumer
</pre></td>
<td class="cellalignment2205" headers="r2c1-t139 r1c2-t139">The original <code dir="ltr">Consumer</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20875" class="refsect2"><a id="CACGIAEF"></a>
<h2 class="refsect2">receive()</h2>
<p>Receives and dequeues a <code dir="ltr">Message</code>.</p>
<p class="subhead2"><a id="LNCPP20876"></a>Syntax</p>
<pre dir="ltr">Message receive(
   Message::PayloadType pType,
   const string&amp; type=&#34;&#34;,
   const string&amp; schema=&#34;&#34;);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of receive() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t140">Parameter</th>
<th class="cellalignment2204" id="r1c2-t140">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t140" headers="r1c1-t140">
<pre dir="ltr">pType
</pre></td>
<td class="cellalignment2205" headers="r2c1-t140 r1c2-t140">The type of payload expected. Payload Type is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t140" headers="r1c1-t140">
<pre dir="ltr">type
</pre></td>
<td class="cellalignment2205" headers="r3c1-t140 r1c2-t140">The type of the payload when <code dir="ltr">type</code> is <code dir="ltr">OBJECT</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t140" headers="r1c1-t140">
<pre dir="ltr">schema
</pre></td>
<td class="cellalignment2205" headers="r4c1-t140 r1c2-t140">The schema in which the type is defined when <code dir="ltr">pType</code> is <code dir="ltr">OBJECT</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20877" class="refsect2"><a id="CACGHEBG"></a>
<h2 class="refsect2">setAgent()</h2>
<p>Sets the <code dir="ltr">Agent</code>&#39;s name and address (queue name) on the consumer.</p>
<p class="subhead1"><a id="LNCPP20878"></a>Syntax</p>
<pre dir="ltr">void setAgent(
   const Agent&amp; agent);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of setAgent() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t141">Parameter</th>
<th class="cellalignment2204" id="r1c2-t141">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t141" headers="r1c1-t141">
<pre dir="ltr">agent
</pre></td>
<td class="cellalignment2205" headers="r2c1-t141 r1c2-t141">Name of the <code dir="ltr">Agent</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20879" class="refsect2"><a id="CACBCFCE"></a>
<h2 class="refsect2">setConsumerName()</h2>
<p>Sets the <code dir="ltr">Consumer</code> name. Only messages with matching consumer name can be accessed. If a queue is not set up for multiple consumer, this option should be set to <code dir="ltr">NULL</code>.</p>
<p class="subhead1"><a id="LNCPP20880"></a>Syntax</p>
<pre dir="ltr">void setConsumerName(
   const string&amp; name);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of setConsumerName() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t142">Parameter</th>
<th class="cellalignment2204" id="r1c2-t142">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t142" headers="r1c1-t142">
<pre dir="ltr">name
</pre></td>
<td class="cellalignment2205" headers="r2c1-t142 r1c2-t142">Name of the <code dir="ltr">Consumer</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20881" class="refsect2"><a id="CACEEIEB"></a>
<h2 class="refsect2">setCorrelationId()</h2>
<p>Specifies the correlation identifier of the message to be dequeued. Special pattern matching characters, such as the percent sign (%) and the underscore(_) can be used. If several messages satisfy the pattern, the order of dequeuing is undetermined.</p>
<p class="subhead1"><a id="LNCPP20882"></a>Syntax</p>
<pre dir="ltr">void setCorrelationId
   const string&amp; id);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of setCorrelationId() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t143">Parameter</th>
<th class="cellalignment2204" id="r1c2-t143">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t143" headers="r1c1-t143">
<pre dir="ltr">id
</pre></td>
<td class="cellalignment2205" headers="r2c1-t143 r1c2-t143">The identifier of the <code dir="ltr">Message</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20883" class="refsect2"><a id="CACCAFHA"></a>
<h2 class="refsect2">setDequeueMode()</h2>
<p>Specifies the locking behavior associated with dequeuing.</p>
<p class="subhead1"><a id="LNCPP20884"></a>Syntax</p>
<pre dir="ltr">void setDequeueMode(
   DequeueMode mode);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of setDequeueMode() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t144">Parameter</th>
<th class="cellalignment2204" id="r1c2-t144">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t144" headers="r1c1-t144">
<pre dir="ltr">mode
</pre></td>
<td class="cellalignment2205" headers="r2c1-t144 r1c2-t144">Behavior of enqueuing. <code dir="ltr">DequeMode</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20885" class="refsect2"><a id="CACDHCAH"></a>
<h2 class="refsect2">setMessageIdToDequeue()</h2>
<p>Specifies the identifier of the <code dir="ltr">Message</code> to be dequeued.</p>
<p class="subhead1"><a id="LNCPP20886"></a>Syntax</p>
<pre dir="ltr">void setMessageIdToDequeue(
   const Bytes&amp; msgid);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of setMessageIdToDeque() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t145">Parameter</th>
<th class="cellalignment2204" id="r1c2-t145">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t145" headers="r1c1-t145">
<pre dir="ltr">msgid
</pre></td>
<td class="cellalignment2205" headers="r2c1-t145 r1c2-t145">Identifier of the <code dir="ltr">Message</code> to be dequeued.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20887" class="refsect2"><a id="CACDGIGJ"></a>
<h2 class="refsect2">setNull()</h2>
<p>Nullifies the <code dir="ltr">Consumer</code>; frees the memory associated with this object.</p>
<p class="subhead1"><a id="LNCPP20888"></a>Syntax</p>
<pre dir="ltr">void setNull();
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20889" class="refsect2"><a id="CACFFIBB"></a>
<h2 class="refsect2">setPositionOfMessage()</h2>
<p>Specifies position of the <code dir="ltr">Message</code> to be retrieved.</p>
<p class="subhead1"><a id="LNCPP20890"></a>Syntax</p>
<pre dir="ltr">void setPositionOfMessage(
   Navigation pos);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="prameters of setPositionOfMessage() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t146">Parameter</th>
<th class="cellalignment2204" id="r1c2-t146">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t146" headers="r1c1-t146">
<pre dir="ltr">pos
</pre></td>
<td class="cellalignment2205" headers="r2c1-t146 r1c2-t146">Position of the message, <code dir="ltr">Navigation</code>, is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20891" class="refsect2"><a id="CACIFDEG"></a>
<h2 class="refsect2">setQueueName()</h2>
<p>Specifies the name of a queue before dequeuing <code dir="ltr">Message</code>s. Typically used when dequeuing multiple messages from the same queue.</p>
<p class="subhead1"><a id="LNCPP20892"></a>Syntax</p>
<pre dir="ltr">void setQueueName(
   const string&amp; queue);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setQueueName() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t147">Parameter</th>
<th class="cellalignment2204" id="r1c2-t147">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t147" headers="r1c1-t147">
<pre dir="ltr">queue
</pre></td>
<td class="cellalignment2205" headers="r2c1-t147 r1c2-t147">The name of a valid queue in the database.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20893" class="refsect2"><a id="CIAHBJJA"></a>
<h2 class="refsect2">setTransformation()</h2>
<p>Specifies transformation applied before dequeuing the <code dir="ltr">Message</code>.</p>
<p class="subhead1"><a id="LNCPP20894"></a>Syntax</p>
<pre dir="ltr">void setTransformation(
   string &amp;fName);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setTransformation() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t148">Parameter</th>
<th class="cellalignment2204" id="r1c2-t148">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t148" headers="r1c1-t148">
<pre dir="ltr">fName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t148 r1c2-t148">SQL transformation function.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20895" class="refsect2"><a id="CACEJJHI"></a>
<h2 class="refsect2">setVisibility()</h2>
<p>Specifies if <code dir="ltr">Message</code> should be dequeued as part of the current transaction. Visibility parameter is ignored when in <code dir="ltr">DEQ_BROWSE</code> mode.</p>
<p class="subhead1"><a id="LNCPP20896"></a>Syntax</p>
<pre dir="ltr">void setVisibility(
   Visibility option);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setVisibility() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t149">Parameter</th>
<th class="cellalignment2204" id="r1c2-t149">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t149" headers="r1c1-t149">
<pre dir="ltr">option
</pre></td>
<td class="cellalignment2205" headers="r2c1-t149 r1c2-t149">Visibility option being set, defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20897" class="refsect2"><a id="CACECHFB"></a>
<h2 class="refsect2">setWaitTime()</h2>
<p>Specifies wait conditions if there are no <code dir="ltr">Message</code>s with matching criteria. The <code dir="ltr">wait</code> parameter is ignored if messages in the same group are being dequeued.</p>
<p class="subhead1"><a id="LNCPP20898"></a>Syntax</p>
<pre dir="ltr">void setWaitTime(
   DequeWaitOption wait);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setWaitTime() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t150">Parameter</th>
<th class="cellalignment2204" id="r1c2-t150">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t150" headers="r1c1-t150">
<pre dir="ltr">wait
</pre></td>
<td class="cellalignment2205" headers="r2c1-t150 r1c2-t150">Waiting conditions. <code dir="ltr">DequeWaitOption</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2196">
<tr>
<td class="cellalignment2205">
<table class="cellalignment2201">
<tr>
<td class="cellalignment2200"><a href="reference011.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2200"><a href="reference013.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2208">
<table class="cellalignment2199">
<tr>
<td class="cellalignment2200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>