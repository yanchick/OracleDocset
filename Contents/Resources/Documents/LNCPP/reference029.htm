<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73932"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/StatelessConnectionPool%20Class"></a><title>StatelessConnectionPool Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1082"/>
<meta name="dcterms.created" content="2016-06-01T12:8:12Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="C++ Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48221-07"/>
<meta name="dcterms.isVersionOf" content="LNCPP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="reference028.htm" title="Previous" type="text/html"/>
<link rel="Next" href="reference030.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48221-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">49/54</span> <!-- End Header --><a id="i1155046"></a>
<div id="LNCPP1021" class="refsect1">
<h1 class="refsect1">StatelessConnectionPool <a id="sthref902"></a><a id="sthref903"></a><a id="sthref904"></a>Class</h1>
<p>This class represents a pool of stateless, authenticated connections to the database.</p>
<div id="LNCPP21576" class="tblformal">
<p class="titleintable"><a id="sthref905"></a><a id="BBAFHGEG"></a>Table 13-41 Enumerated Values Used by StatelessConnectionPool Class</p>
<table class="cellalignment2203" title="Enumerated Values Used by StatelessConnectionPool Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t434">Attribute</th>
<th class="cellalignment2204" id="r1c2-t434">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t434" headers="r1c1-t434">
<pre dir="ltr">PoolType
</pre></td>
<td class="cellalignment2205" headers="r2c1-t434 r1c2-t434">
<ul>
<li>
<p><code dir="ltr">HETEROGENEOUS</code> is the default state; connections with different authentication contexts can be created in the same pool. This pool type also supports external authentication.</p>
</li>
<li>
<p><code dir="ltr">HOMOGENEOUS</code> indicates that all connections in the pool are authenticated with the username and password provided during pool creation. No proxy connections can be created. <code dir="ltr">minConn</code> and <code dir="ltr">incrConn</code> values are considered only in these <code dir="ltr">HOMOGENEOUS</code> pools.</p>
</li>
<li>
<p><code dir="ltr">NO_RLB</code> turns off run-time load balancing in the connection pool. Can be used with both <code dir="ltr">HETEROGENEOUS</code> and <code dir="ltr">HOMOGENEOUS</code> pools.</p>
</li>
<li>
<p><code dir="ltr">USES_EXT_AUTH</code> indicates that the connections in the pool support external authentication. Can only be used with <code dir="ltr">HETEROGENEOUS</code> pools.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t434" headers="r1c1-t434">
<pre dir="ltr">BusyOption
</pre></td>
<td class="cellalignment2205" headers="r3c1-t434 r1c2-t434">
<ul>
<li>
<p><code dir="ltr">WAIT</code> indicates that the thread waits and blocks until the connection becomes free.</p>
</li>
<li>
<p><code dir="ltr">NOWAIT</code> throws and error.</p>
</li>
<li>
<p><code dir="ltr">FORCEGET</code> indicates that a new connection is created, even when maximum number of connections is opened and all are busy.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t434" headers="r1c1-t434">
<pre dir="ltr">DestroyMode
</pre></td>
<td class="cellalignment2205" headers="r4c1-t434 r1c2-t434">
<ul>
<li>
<p><code dir="ltr">DEFAULT</code> indicates that if are still active busy connections in the pool, <code dir="ltr">ORA24422</code> error is thrown</p>
</li>
<li>
<p><code dir="ltr">SPD_FORCE</code> indicates that any busy connections in the pool are forcefully terminated and the pool is destroyed; the user loses memory corresponding to the number of connections forcefully terminated.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP21577" class="tblformal">
<p class="titleintable"><a id="sthref906"></a><a id="sthref907"></a>Table 13-42 Summary <a id="sthref908"></a><a id="sthref909"></a>of StatelessConnectionPool Methods</p>
<table class="cellalignment2203" title="Summary of StatelessConnectionPool Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t435">Method</th>
<th class="cellalignment2204" id="r1c2-t435">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t435" headers="r1c1-t435">
<p><a href="#CHEFGDCE">getAnyTaggedConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r2c1-t435 r1c2-t435">
<p>Returns a pointer to the connection object, without the restriction of a matching tag.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t435" headers="r1c1-t435">
<p><a href="#CHEFDDJF">getAnyTaggedProxyConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r3c1-t435 r1c2-t435">
<p>Returns a proxy connection from a connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t435" headers="r1c1-t435">
<p><a href="#CHEHHFHG">getBusyConnections()</a></p>
</td>
<td class="cellalignment2205" headers="r4c1-t435 r1c2-t435">
<p>Returns the number of busy connections in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t435" headers="r1c1-t435">
<p><a href="#CHEHAJIF">getBusyOption()</a></p>
</td>
<td class="cellalignment2205" headers="r5c1-t435 r1c2-t435">
<p>Returns the behavior of the stateless connection pool when all the connections in the pool are busy and the number of connections have reached maximum</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t435" headers="r1c1-t435">
<p><a href="#CHEJHBEH">getConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r6c1-t435 r1c2-t435">
<p>Returns a pointer to the <code dir="ltr">Connection</code> object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t435" headers="r1c1-t435">
<p><a href="#CHEFEAHC">getIncrConnections()</a></p>
</td>
<td class="cellalignment2205" headers="r7c1-t435 r1c2-t435">
<p>Returns the number of incremental connections in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t435" headers="r1c1-t435">
<p><a href="#CHEJGJEJ">getMaxConnections()</a></p>
</td>
<td class="cellalignment2205" headers="r8c1-t435 r1c2-t435">
<p>Returns the maximum number of connections in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t435" headers="r1c1-t435">
<p><a href="#CHEGIBFD">getMinConnections()</a></p>
</td>
<td class="cellalignment2205" headers="r9c1-t435 r1c2-t435">
<p>Returns the minimum number of connections in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t435" headers="r1c1-t435">
<p><a href="#CHEECIBJ">getOpenConnections()</a></p>
</td>
<td class="cellalignment2205" headers="r10c1-t435 r1c2-t435">
<p>Returns the number of open connections in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t435" headers="r1c1-t435">
<p><a href="#CHEHEFEJ">getPoolName()</a></p>
</td>
<td class="cellalignment2205" headers="r11c1-t435 r1c2-t435">
<p>Returns the name of the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t435" headers="r1c1-t435">
<p><a href="#CHEEECCC">getProxyConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r12c1-t435 r1c2-t435">
<p>Returns a proxy connection from a connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t435" headers="r1c1-t435">
<p><a href="#CHEJIBJJ">getTimeOut()</a></p>
</td>
<td class="cellalignment2205" headers="r13c1-t435 r1c2-t435">
<p>Returns the timeout period of a connection in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t435" headers="r1c1-t435">
<p><a href="#CHEJHHBI">releaseConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r14c1-t435 r1c2-t435">
<p>Releases the connection back to the pool with an optional tag.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t435" headers="r1c1-t435">
<p><a href="#CHEHCCBA">setBusyOption()</a></p>
</td>
<td class="cellalignment2205" headers="r15c1-t435 r1c2-t435">
<p>Specifies the behavior of the stateless connection pool when:</p>
<ul>
<li>
<p>all the connections in the pool are busy, and</p>
</li>
<li>
<p>the number of connections have reached maximum.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t435" headers="r1c1-t435">
<p><a href="#CHEJDIBI">setPoolSize()</a></p>
</td>
<td class="cellalignment2205" headers="r16c1-t435 r1c2-t435">
<p>Sets the maximum, minimum, and incremental number of pooled connections for the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t435" headers="r1c1-t435">
<p><a href="#CHEIAGCH">setTimeOut()</a></p>
</td>
<td class="cellalignment2205" headers="r17c1-t435 r1c2-t435">
<p>Sets the timeout period of a connection in the connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t435" headers="r1c1-t435">
<p><a href="#CHEHDHHI">terminateConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r18c1-t435 r1c2-t435">
<p>Closes the connection and remove it from the pool.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP21578" class="refsect2"><a id="CHEFGDCE"></a>
<h2 class="refsect2">getAnyTaggedConnection()</h2>
<p>Returns a pointer to the connection object, without the restriction of a matching tag.</p>
<p>This method works in an environment with enabled database resident connection pooling.</p>
<p>During the execution of this call, the pool is first searched based on the tag provided. If a connection with the specified tag exists, it is returned to the user. If a matching connection is not available, an appropriately authenticated untagged connection (with a <code dir="ltr">NULL</code> tag) is returned. In cases where an undated connection is not free, an appropriately authenticated connection with a different tag is returned.</p>
<p>A <code dir="ltr">getTag()</code> call to the <code dir="ltr">Connection</code> verifies that the connection tag is received.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of getAnyTaggedConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t436">Syntax</th>
<th class="cellalignment2204" id="r1c2-t436">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t436" headers="r1c1-t436">
<pre dir="ltr">Connection *getAnyTaggedConnection(
   string &amp;tag=&#34;&#34;)=0;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t436 r1c2-t436">Returns a pointer to the connection object from a homogeneous stateless connection pool, without the restriction of a matching tag; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t436" headers="r1c1-t436">
<pre dir="ltr">Connection* getAnyTaggedConnection(
   const UString &amp;tag)=0; 
</pre></td>
<td class="cellalignment2205" headers="r3c1-t436 r1c2-t436">Returns a pointer to the connection object from a homogeneous stateless connection pool, without the restriction of a matching tag; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t436" headers="r1c1-t436">
<pre dir="ltr">Connection *getAnyTaggedConnection(
   const string &amp;userNname,
   const string &amp;password,
   const string &amp;tag=&#34;&#34;)=0;
</pre></td>
<td class="cellalignment2205" headers="r4c1-t436 r1c2-t436">Returns a pointer to the connection object from a heterogeneous stateless connection pool, without the restriction of a matching tag; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t436" headers="r1c1-t436">
<pre dir="ltr">Connection* getAnyTaggedConnection(
   const UString &amp;userName, 
   const UString &amp;Password, 
   const UString &amp;tag)=0 ;
</pre></td>
<td class="cellalignment2205" headers="r5c1-t436 r1c2-t436">Returns a pointer to the connection object from a heterogeneous stateless connection pool, without the restriction of a matching tag; <code dir="ltr">UString</code> support.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getAnyTaggedConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t437">Parameter</th>
<th class="cellalignment2204" id="r1c2-t437">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t437" headers="r1c1-t437">
<pre dir="ltr">userName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t437 r1c2-t437">The database username</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t437" headers="r1c1-t437">
<pre dir="ltr">password
</pre></td>
<td class="cellalignment2205" headers="r3c1-t437 r1c2-t437">The database password.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t437" headers="r1c1-t437">
<pre dir="ltr">tag
</pre></td>
<td class="cellalignment2205" headers="r4c1-t437 r1c2-t437">User-defined type of connection requested. This parameter can be ignored if a default connection is requested.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21579" class="refsect2"><a id="CHEFDDJF"></a>
<h2 class="refsect2">getAnyTaggedProxyConnection()</h2>
<p>Returns a proxy connection from a connection pool.</p>
<p>This method works in an environment with enabled database resident connection pooling.</p>
<p>During the execution of this call, the pool is first searched based on the tag provided. If a connection with the specified tag exists, it is returned to the user. If a matching connection is not available, an appropriately authenticated connection with a different tag is returned. In cases where an undated connection is not free, an appropriately authenticated connection with a different tag is returned.</p>
<p>Restrictions for matching the tag may be removed by passing an empty tag argument parameter.</p>
<p>A <code dir="ltr">getTag()</code> call to the connection verifies the connection tag received.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of getAnyTaggedProxyConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t438">Syntax</th>
<th class="cellalignment2204" id="r1c2-t438">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t438" headers="r1c1-t438">
<pre dir="ltr">Connection *getAnyTaggedProxyConnection(
   const string &amp;name,
   string roles[],
   unsigned int numRoles,
   const string tag=&#34;&#34;,
   Connection::ProxyType 
      proxyType=Connection::PROXY_DEFAULT);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t438 r1c2-t438">Get a proxy connection with role specifications from a connection pool; includes support for roles and <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t438" headers="r1c1-t438">
<pre dir="ltr">Connection* getAnyTaggedProxyConnection(
   const UString &amp;name,
   string roles[],
   unsigned int numRoles,
   const UString &amp;tag,
   Connection::ProxyType 
      proxyType = Connection::PROXY_DEFAULT);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t438 r1c2-t438">Get a proxy connection with role specifications from a connection pool; includes support for roles and <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t438" headers="r1c1-t438">
<pre dir="ltr">Connection *getAnyTaggedProxyConnection(
   const string &amp;name,
   const string tag=&#34;&#34;,
   Connection::ProxyType       proxyType=Connection::PROXY_DEFAULT);
</pre></td>
<td class="cellalignment2205" headers="r4c1-t438 r1c2-t438">Get a proxy connection with role specifications from a connection pool; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t438" headers="r1c1-t438">
<pre dir="ltr">Connection* getAnyTaggedProxyConnection(
   const UString &amp;name,
   const UString &amp;tag,
   Connection::ProxyType 
      proxyType = Connection::PROXY_DEFAULT);
</pre></td>
<td class="cellalignment2205" headers="r5c1-t438 r1c2-t438">Get a proxy connection within role specifications from the connection pool; <code dir="ltr">UString</code> support.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getAnyTaggedProxyConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t439">Parameter</th>
<th class="cellalignment2204" id="r1c2-t439">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t439" headers="r1c1-t439">
<pre dir="ltr">name
</pre></td>
<td class="cellalignment2205" headers="r2c1-t439 r1c2-t439">The username.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t439" headers="r1c1-t439">
<pre dir="ltr">roles
</pre></td>
<td class="cellalignment2205" headers="r3c1-t439 r1c2-t439">The roles to activate on the database server</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t439" headers="r1c1-t439">
<pre dir="ltr">numRoles
</pre></td>
<td class="cellalignment2205" headers="r4c1-t439 r1c2-t439">The number of roles to activate on the database server</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t439" headers="r1c1-t439">
<pre dir="ltr">tag
</pre></td>
<td class="cellalignment2205" headers="r5c1-t439 r1c2-t439">User defined tag associated with the connection.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t439" headers="r1c1-t439">
<pre dir="ltr">proxyType
</pre></td>
<td class="cellalignment2205" headers="r6c1-t439 r1c2-t439">The type of proxy authentication to perform; <code dir="ltr">ProxyType</code> is defined in <a href="reference010.htm#BBAEAHAH">Table 13-11</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21580" class="refsect2"><a id="CHEHHFHG"></a>
<h2 class="refsect2">getBusyConnections()</h2>
<p>Returns the number of busy connections in the connection pool. When using database resident connection pooling, this is the number of persistent connections to the Connection Broker.</p>
<p class="subhead1"><a id="LNCPP21581"></a>Syntax</p>
<pre dir="ltr">unsigned int getBusyConnections() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21582" class="refsect2"><a id="CHEHAJIF"></a>
<h2 class="refsect2">getBusyOption()</h2>
<p>Returns the behavior of the stateless connection pool when all the connections in the pool are busy, and when the number of connections have reached maximum. The return values are defined for <code dir="ltr">BusyOption</code> in <a href="#BBAFHGEG">Table 13-41</a>.</p>
<p class="subhead1"><a id="LNCPP21583"></a>Syntax</p>
<pre dir="ltr">BusyOption getBusyOption()=0; 
 
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21584" class="refsect2"><a id="CHEJHBEH"></a>
<h2 class="refsect2">getConnection()</h2>
<p>Returns a pointer to the connection object of a <code dir="ltr">StatelessConnectionPool</code>.</p>
<p>This method works in an environment with enabled database resident connection pooling.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of getConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t440">Syntax</th>
<th class="cellalignment2204" id="r1c2-t440">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection *getConnection()=0;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t440 r1c2-t440">Returns a connection that can be authenticated externally.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection *getConnection(
   string &amp;tag=&#34;&#34;)=0;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t440 r1c2-t440">Returns an authenticated connection, with a connection pool username and password; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection* getConnection(
   const UString &amp;tag)=0;
</pre></td>
<td class="cellalignment2205" headers="r4c1-t440 r1c2-t440">Returns an authenticated connection, with a connection pool username and password; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection *getConnection(
   const string &amp;userName,
   const string &amp;password,
   const string &amp;tag=&#34;&#34;)=0;
</pre></td>
<td class="cellalignment2205" headers="r5c1-t440 r1c2-t440">Returns a pointer to the connection object from a heterogeneous stateless connection pool; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection* getConnection(
   const UString &amp;userName,
   const UString &amp;password,
   const UString &amp;tag)=0;
</pre></td>
<td class="cellalignment2205" headers="r6c1-t440 r1c2-t440">Returns a pointer to the connection object from a heterogeneous stateless connection pool; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection *getConnection(
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r7c1-t440 r1c2-t440">Returns a pointer to the connection object from a database resident connection pool; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection* getConnection(
   const UString &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r8c1-t440 r1c2-t440">Returns a pointer to the connection object from a database resident connection pool; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection *getConnection(
   const string &amp;userName,
   const string &amp;password,
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r9c1-t440 r1c2-t440">Returns a pointer to the connection object from a database resident connection pool; user name and password authentication; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection* getConnection(
   const UString &amp;userName,
   const UString &amp;password,
   const UString &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r10c1-t440 r1c2-t440">Returns a pointer to the connection object from a database resident connection pool; user name and password authentication; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection *getConnection(
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity,
   const string &amp;tag)=0;
</pre></td>
<td class="cellalignment2205" headers="r11c1-t440 r1c2-t440">Returns a tagged connection object from a database resident connection pool; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t440" headers="r1c1-t440">
<pre dir="ltr">Connection* getConnection(
   const UString &amp;connectionClass,
   const Connection::Purity &amp;purity,
   const UString &amp;tag)=0;
</pre></td>
<td class="cellalignment2205" headers="r12c1-t440 r1c2-t440">Returns a tagged connection object from a database resident connection pool; <code dir="ltr">UString</code> support.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t441">Parameter</th>
<th class="cellalignment2204" id="r1c2-t441">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t441" headers="r1c1-t441">
<pre dir="ltr">userName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t441 r1c2-t441">The database username.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t441" headers="r1c1-t441">
<pre dir="ltr">password
</pre></td>
<td class="cellalignment2205" headers="r3c1-t441 r1c2-t441">The database password.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t441" headers="r1c1-t441">
<pre dir="ltr">tag
</pre></td>
<td class="cellalignment2205" headers="r4c1-t441 r1c2-t441">The user defined tag associated with the connection. During the call, the pool is first searched based on the tag provided. If a connection with the specified tag exists it is returned; otherwise a new connection is created and returned.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t441" headers="r1c1-t441">
<pre dir="ltr">connectionClass
</pre></td>
<td class="cellalignment2205" headers="r5c1-t441 r1c2-t441">The class of connection used by database resident connection pool.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t441" headers="r1c1-t441">
<pre dir="ltr">purity
</pre></td>
<td class="cellalignment2205" headers="r6c1-t441 r1c2-t441">The purity of connection used by database resident connection pool; either <code dir="ltr">SELF</code> or <code dir="ltr">NEW</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21585" class="refsect2"><a id="CHEFEAHC"></a>
<h2 class="refsect2">getIncrConnections()</h2>
<p>Returns the number of incremental connections in the connection pool. This call is useful only in cases of homogeneous connection pools. When using database resident connection pooling, this is the number of persistent connections to the Connection Broker.</p>
<p class="subhead1"><a id="LNCPP21586"></a>Syntax</p>
<pre dir="ltr">unsigned int getIncrConnections() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21587" class="refsect2"><a id="CHEJGJEJ"></a>
<h2 class="refsect2">getMaxConnections()</h2>
<p>Returns the maximum number of connections in the connection pool. When using database resident connection pooling, this is the number of persistent connections to the Connection Broker.</p>
<p class="subhead1"><a id="LNCPP21588"></a>Syntax</p>
<pre dir="ltr">unsigned int getMaxConnections() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21589" class="refsect2"><a id="CHEGIBFD"></a>
<h2 class="refsect2">getMinConnections()</h2>
<p>Returns the minimum number of connections in the connection pool. When using database resident connection pooling, this is the number of persistent connections to the Connection Broker.</p>
<p class="subhead1"><a id="LNCPP21590"></a>Syntax</p>
<pre dir="ltr">unsigned int getMinConnections() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21591" class="refsect2"><a id="CHEECIBJ"></a>
<h2 class="refsect2">getOpenConnections()</h2>
<p>Returns the number of open connections in the connection pool. When using database resident connection pooling, this is the number of persistent connections to the Connection Broker.</p>
<p class="subhead1"><a id="LNCPP21592"></a>Syntax</p>
<pre dir="ltr">unsigned int getOpenConnections() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21593" class="refsect2"><a id="CHEHEFEJ"></a>
<h2 class="refsect2">getPoolName()</h2>
<p>Returns the name of the connection pool.</p>
<p class="subhead1"><a id="LNCPP21594"></a>Syntax</p>
<pre dir="ltr">string getPoolName() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21595" class="refsect2"><a id="CHEEECCC"></a>
<h2 class="refsect2">getProxyConnection()</h2>
<p>Returns a proxy connection from a connection pool.</p>
<p>This method works in an environment with enabled database resident connection pooling.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of getProxyConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t442">Syntax</th>
<th class="cellalignment2204" id="r1c2-t442">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection *getProxyConnection(
   const string &amp;userName,
   string roles[],
   unsigned int numRoles,
   const string&amp; tag=&#34;&#34;,
   Connection::ProxyType 
      proxyType=Connection::PROXY_DEFAULT)=0;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t442 r1c2-t442">Get a proxy connection with role specifications from a connection pool; support for roles and <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection* getProxyConnection(
   const UString &amp;userName,
   UString roles[], 
   unsigned int numRoles, 
   const UString &amp;tag, 
   Connection::ProxyType 
      proxyType = Connection::PROXY_DEFAULT);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t442 r1c2-t442">Get a proxy connection with role specifications from a connection pool; support for roles and <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection *getProxyConnection(
   const string &amp;userName,
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r4c1-t442 r1c2-t442">Get a proxy connection from a database resident connection pool; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection *getProxyConnection(
   const UString &amp;userName,
   const UString &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r5c1-t442 r1c2-t442">Get a proxy connection from a database resident connection pool; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection *getProxyConnection(
   const string &amp;userName,
   string roles[],
   unsigned int numRoles,
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r6c1-t442 r1c2-t442">Get a proxy connection with role specifications from a connection pool; support for roles and database resident connection pooling; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection* getProxyConnection(
   const UString &amp;userName,
   UString roles[], 
   unsigned int numRoles, 
   const UString &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r7c1-t442 r1c2-t442">Get a proxy connection with role specifications from a connection pool; support for roles and database resident connection pooling; <code dir="ltr">UString</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection *getProxyConnection(
   const string &amp;userName,
   const string&amp; tag=&#34;&#34;,
   Connection::ProxyType 
      proxyType=Connection::PROXY_DEFAULT)=0;
</pre></td>
<td class="cellalignment2205" headers="r8c1-t442 r1c2-t442">Get a proxy connection without role specifications from a connection pool; <code dir="ltr">string</code> support.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t442" headers="r1c1-t442">
<pre dir="ltr">Connection* getProxyConnection(
   const UString &amp;userName,
   const UString &amp;tag,
   Connection::ProxyType 
   proxyType = Connection::PROXY_DEFAULT)
</pre></td>
<td class="cellalignment2205" headers="r9c1-t442 r1c2-t442">Get a proxy connection without role specifications from a connection pool; <code dir="ltr">UString</code> support.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getProxyConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t443">Parameter</th>
<th class="cellalignment2204" id="r1c2-t443">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t443" headers="r1c1-t443">
<pre dir="ltr">userName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t443 r1c2-t443">The user name.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t443" headers="r1c1-t443">
<pre dir="ltr">roles
</pre></td>
<td class="cellalignment2205" headers="r3c1-t443 r1c2-t443">The roles to activate on the database server.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t443" headers="r1c1-t443">
<pre dir="ltr">numRoles
</pre></td>
<td class="cellalignment2205" headers="r4c1-t443 r1c2-t443">The number of roles to activate on the database server.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t443" headers="r1c1-t443">
<pre dir="ltr">tag
</pre></td>
<td class="cellalignment2205" headers="r5c1-t443 r1c2-t443">The user defined tag associated with the connection. During the execution of this call, the pool is first searched based on the tag provided. If a connection with the specified tag exists it is returned; otherwise, a new connection is created and returned.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t443" headers="r1c1-t443">
<pre dir="ltr">proxyType
</pre></td>
<td class="cellalignment2205" headers="r6c1-t443 r1c2-t443">The type of proxy authentication to perform; <code dir="ltr">ProxyType</code> is defined in <a href="reference010.htm#BBAEAHAH">Table 13-11</a>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t443" headers="r1c1-t443">
<pre dir="ltr">connectionClass
</pre></td>
<td class="cellalignment2205" headers="r7c1-t443 r1c2-t443">The class of connection used by database resident connection pool.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t443" headers="r1c1-t443">
<pre dir="ltr">purity
</pre></td>
<td class="cellalignment2205" headers="r8c1-t443 r1c2-t443">The purity of connection used by database resident connection pool; either <code dir="ltr">SELF</code> or <code dir="ltr">NEW</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21596" class="refsect2"><a id="CIAHGADF"></a>
<h2 class="refsect2">getStmtCacheSize()</h2>
<p>Retrieves the size of the statement cache.</p>
<p class="subhead1"><a id="LNCPP21597"></a>Syntax</p>
<pre dir="ltr">unsigned int getStmtCacheSize() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21598" class="refsect2"><a id="CHEJIBJJ"></a>
<h2 class="refsect2">getTimeOut()</h2>
<p>Returns the timeout period of a connection in the connection pool.</p>
<p class="subhead1"><a id="LNCPP21599"></a>Syntax</p>
<pre dir="ltr">unsigned int getTimeOut() const=0;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21600" class="refsect2"><a id="CHEJHHBI"></a>
<h2 class="refsect2">releaseConnection()</h2>
<p>Releases the connection back to the pool with an optional tag.</p>
<p>This method works in an environment with enabled database resident connection pooling.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of getAnyTaggedProxyConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t444">Syntax</th>
<th class="cellalignment2204" id="r1c2-t444">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t444" headers="r1c1-t444">
<pre dir="ltr">void releaseConnection(
   Connection *connection,
   const string&amp; tag=&#34;&#34;);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t444 r1c2-t444">Support for <code dir="ltr">string</code> tag.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t444" headers="r1c1-t444">
<pre dir="ltr">void releaseConnection(
   Connection *connection,
   const UString &amp;tag);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t444 r1c2-t444">Support for <code dir="ltr">UString</code> tag.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<pre dir="ltr"></pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of releaseConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t445">Parameter</th>
<th class="cellalignment2204" id="r1c2-t445">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t445" headers="r1c1-t445">
<pre dir="ltr">connection
</pre></td>
<td class="cellalignment2205" headers="r2c1-t445 r1c2-t445">The connection to be released.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t445" headers="r1c1-t445">
<pre dir="ltr">tag
</pre></td>
<td class="cellalignment2205" headers="r3c1-t445 r1c2-t445">The user defined tag associated with the connection. The default of this parameter is <code dir="ltr">&#34;&#34;</code>, which untags the connection.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21601" class="refsect2"><a id="CHEHCCBA"></a>
<h2 class="refsect2">setBusyOption()</h2>
<p>Specifies the behavior of the stateless connection pool when all the connections in the pool are busy, and when the number of connections have reached maximum.</p>
<p class="subhead1"><a id="LNCPP21602"></a>Syntax</p>
<pre dir="ltr">void setBusyOption( 
   BusyOption busyOption)=0;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setBusyOption() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t446">Parameter</th>
<th class="cellalignment2204" id="r1c2-t446">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t446" headers="r1c1-t446">
<pre dir="ltr">busyOption
</pre></td>
<td class="cellalignment2205" headers="r2c1-t446 r1c2-t446">Valid values are defined in <code dir="ltr">BusyOption</code> in <a href="#BBAFHGEG">Table 13-41</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21603" class="refsect2"><a id="CHEJDIBI"></a>
<h2 class="refsect2">setPoolSize()</h2>
<p>Sets the maximum, minimum, and incremental number of pooled connections for the connection pool.</p>
<p class="subhead1"><a id="LNCPP21604"></a>Syntax</p>
<pre dir="ltr">void setPoolSize( 
   unsigned int maxConn=1,
   unsigned int minConn=0,
   unsigned int incrConn=1)=0;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setPoolSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t447">Parameter</th>
<th class="cellalignment2204" id="r1c2-t447">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t447" headers="r1c1-t447">
<pre dir="ltr">maxConn
</pre></td>
<td class="cellalignment2205" headers="r2c1-t447 r1c2-t447">The maximum number of connections in the connection pool.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t447" headers="r1c1-t447">
<pre dir="ltr">minConn
</pre></td>
<td class="cellalignment2205" headers="r3c1-t447 r1c2-t447">The minimum number of connections, in homogeneous pools only.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t447" headers="r1c1-t447">
<pre dir="ltr">incrConn
</pre></td>
<td class="cellalignment2205" headers="r4c1-t447 r1c2-t447">The incremental number of connections, in homogeneous pools only.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21605" class="refsect2"><a id="CHEIAGCH"></a>
<h2 class="refsect2">setTimeOut()</h2>
<p>Sets the time out period of a connection in the connection pool. OCCI terminates any connections related to this connection pool that have been idle for longer than the timeout period specified.</p>
<p>If this attribute is not set, the least recently used connection is timed out when pool space is required. Oracle only checks for timed out connections when it releases a connection back to the pool.</p>
<p class="subhead1"><a id="LNCPP21606"></a>Syntax</p>
<pre dir="ltr">void setTimeOut( 
   unsigned int connTimeOut=0)=0;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setTimeOut() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t448">Parameter</th>
<th class="cellalignment2204" id="r1c2-t448">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t448" headers="r1c1-t448">
<pre dir="ltr">connTimeOut
</pre></td>
<td class="cellalignment2205" headers="r2c1-t448 r1c2-t448">The time out period, given in seconds.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21607" class="refsect2"><a id="CIAICEFF"></a>
<h2 class="refsect2">setStmtCacheSize()</h2>
<p>Enables or disables statement caching. A nonzero value enables statement caching, with a cache of specified size. A zero value disables caching.</p>
<p>If the user changes the cache size of individual connections and subsequently returns the connection back to the pool with a tag, the cache size does not revert to the one set for the pool. If the connection is untagged, the cache size is reset to equal the cache size specified for the pool.</p>
<p class="subhead1"><a id="LNCPP21608"></a>Syntax</p>
<pre dir="ltr">void setStmtCacheSize(
   unsigned int cacheSize)=0;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setStmtCacheSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t449">Parameter</th>
<th class="cellalignment2204" id="r1c2-t449">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t449" headers="r1c1-t449">
<pre dir="ltr">cacheSize
</pre></td>
<td class="cellalignment2205" headers="r2c1-t449 r1c2-t449">The size of the statement cache</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21609" class="refsect2"><a id="CHEHDHHI"></a>
<h2 class="refsect2">terminateConnection()</h2>
<p>Closes the connection and removes it from the pool.</p>
<p>This method works in an environment with enabled database resident connection pooling.</p>
<p class="subhead1"><a id="LNCPP21610"></a>Syntax</p>
<pre dir="ltr">void terminateConnection( 
   Connection *connection)=0;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of terminateConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t450">Parameter</th>
<th class="cellalignment2204" id="r1c2-t450">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t450" headers="r1c1-t450">
<pre dir="ltr">connection
</pre></td>
<td class="cellalignment2205" headers="r2c1-t450 r1c2-t450">The connection to be terminated</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2196">
<tr>
<td class="cellalignment2205">
<table class="cellalignment2201">
<tr>
<td class="cellalignment2200"><a href="reference028.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2200"><a href="reference030.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2208">
<table class="cellalignment2199">
<tr>
<td class="cellalignment2200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>