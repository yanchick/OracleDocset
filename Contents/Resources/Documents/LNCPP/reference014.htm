<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73917"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Environment%20Class"></a><title>Environment Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1082"/>
<meta name="dcterms.created" content="2016-06-01T12:8:11Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="C++ Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48221-07"/>
<meta name="dcterms.isVersionOf" content="LNCPP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="reference013.htm" title="Previous" type="text/html"/>
<link rel="Next" href="reference015.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48221-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">34/54</span> <!-- End Header --><a id="i1119099"></a>
<div id="LNCPP1010" class="refsect1">
<h1 class="refsect1"><a id="sthref765"></a><a id="sthref766"></a><a id="sthref767"></a>Environment Class</h1>
<p>The Environment class provides an OCCI environment to manage memory and other resources for OCCI objects.</p>
<p>The application can have multiple OCCI environments. Each environment would have its own heap and thread-safety mutexes.</p>
<div id="LNCPP20943" class="tblformal">
<p class="titleintable"><a id="sthref768"></a><a id="BBAFGGHB"></a>Table 13-17 Enumerated Values Used by Environment Class</p>
<table class="cellalignment2203" title="Enumerated Values Used by Environment Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t179">Attribute</th>
<th class="cellalignment2204" id="r1c2-t179">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t179" headers="r1c1-t179">
<pre dir="ltr">Mode
</pre></td>
<td class="cellalignment2205" headers="r2c1-t179 r1c2-t179">
<ul>
<li>
<p><code dir="ltr">DEFAULT</code> is used for creating an Environment object; it has no thread safety or object support.</p>
</li>
<li>
<p><code dir="ltr">OBJECT</code> is for creating an Environment object; it uses object features.</p>
</li>
<li>
<p><code dir="ltr">NO_USERCALLBACKS</code> is for creating an Environment object; it does not support user callbacks.</p>
</li>
<li>
<p><code dir="ltr">THREADED_MUTEXED</code> is a thread safe mode for creating an Environment object, mutexed internally by OCCI.</p>
</li>
<li>
<p><code dir="ltr">THREADED_UNMUTEXED</code> is a thread safe mode for creating an Environment object; the client is responsible for mutexing.</p>
</li>
<li>
<p><code dir="ltr">EVENTS</code> supports registration for event notification used in Oracle Streams Advanced Queuing.</p>
</li>
<li>
<p><code dir="ltr">USE_LDAP</code> supports registration with LDAP.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP20944" class="tblformal">
<p class="titleintable"><a id="sthref769"></a><a id="sthref770"></a>Table 13-18 Summary of <a id="sthref771"></a><a id="sthref772"></a>Environment Methods</p>
<table class="cellalignment2203" title="Summary of Environment Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t180">Method</th>
<th class="cellalignment2204" id="r1c2-t180">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t180" headers="r1c1-t180">
<p><a href="#CHEEGFAI">createConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r2c1-t180 r1c2-t180">
<p>Establishes a connection to the specified database.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t180" headers="r1c1-t180">
<p><a href="#i1090287">createConnectionPool()</a></p>
</td>
<td class="cellalignment2205" headers="r3c1-t180 r1c2-t180">
<p>Creates a connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t180" headers="r1c1-t180">
<p><a href="#i1120739">createEnvironment()</a></p>
</td>
<td class="cellalignment2205" headers="r4c1-t180 r1c2-t180">
<p>Creates an <code dir="ltr">Environment</code> object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t180" headers="r1c1-t180">
<p><a href="#CHECBAHJ">createStatelessConnectionPool()</a></p>
</td>
<td class="cellalignment2205" headers="r5c1-t180 r1c2-t180">
<p>Creates a stateless connection pool.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t180" headers="r1c1-t180">
<p><a href="#CIAHDHFB">enableSubscription()</a></p>
</td>
<td class="cellalignment2205" headers="r6c1-t180 r1c2-t180">
<p>Enables subscription notification</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t180" headers="r1c1-t180">
<p><a href="#CIAFIHHC">disableSubscription()</a></p>
</td>
<td class="cellalignment2205" headers="r7c1-t180 r1c2-t180">
<p>Disables subscription notification</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t180" headers="r1c1-t180">
<p><a href="#i1131253">getCacheMaxSize()</a></p>
</td>
<td class="cellalignment2205" headers="r8c1-t180 r1c2-t180">
<p>Retrieves the Cache Max heap size.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t180" headers="r1c1-t180">
<p><a href="#i1131266">getCacheOptSize()</a></p>
</td>
<td class="cellalignment2205" headers="r9c1-t180 r1c2-t180">
<p>Retrieves the cache optimal heap size.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t180" headers="r1c1-t180">
<p><a href="#CIADFBJJ">getCacheSortedFlush()</a></p>
</td>
<td class="cellalignment2205" headers="r10c1-t180 r1c2-t180">
<p>Retrieves the setting of the cache sorting flag.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t180" headers="r1c1-t180">
<p><a href="reference010.htm#BBAJAFGC">getClientVersion()</a></p>
</td>
<td class="cellalignment2205" headers="r11c1-t180 r1c2-t180">
<p>Returns the version of the client library.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t180" headers="r1c1-t180">
<p><a href="#i1131122">getCurrentHeapSize()</a></p>
</td>
<td class="cellalignment2205" headers="r12c1-t180 r1c2-t180">
<p>Returns the current amount of memory allocated to all objects in the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t180" headers="r1c1-t180">
<p><a href="#CIAHDAGA">getLDAPAdminContext()</a></p>
</td>
<td class="cellalignment2205" headers="r13c1-t180 r1c2-t180">
<p>Returns the administrative context when using LDAP open notification registration.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t180" headers="r1c1-t180">
<p><a href="#CIAGBEJA">getLDAPAuthentication()</a></p>
</td>
<td class="cellalignment2205" headers="r14c1-t180 r1c2-t180">
<p>Returns the authentication mode when using LDAP open notification registration.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t180" headers="r1c1-t180">
<p><a href="#CIADBBHJ">getLDAPHost()</a></p>
</td>
<td class="cellalignment2205" headers="r15c1-t180 r1c2-t180">
<p>Returns the host on which the LDAP server runs.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t180" headers="r1c1-t180">
<p><a href="#CIAHAAIG">getLDAPPort()</a></p>
</td>
<td class="cellalignment2205" headers="r16c1-t180 r1c2-t180">
<p>Returns the port on which the LDAP server is listening.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t180" headers="r1c1-t180">
<p><a href="#i1090289">getMap()</a>()</p>
</td>
<td class="cellalignment2205" headers="r17c1-t180 r1c2-t180">
<p>Returns the Map for the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t180" headers="r1c1-t180">
<p><a href="#CIAHFIDF">getNLSLanguage()</a></p>
</td>
<td class="cellalignment2205" headers="r18c1-t180 r1c2-t180">
<p>Returns the NLS Language for the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r19c1-t180" headers="r1c1-t180">
<p><a href="#CIAEHGIE">getNLSTerritory()</a></p>
</td>
<td class="cellalignment2205" headers="r19c1-t180 r1c2-t180">
<p>Returns the NLS Territory for the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r20c1-t180" headers="r1c1-t180">
<p><a href="#i1090290">getOCIEnvironment()</a></p>
</td>
<td class="cellalignment2205" headers="r20c1-t180 r1c2-t180">
<p>Returns the OCI environment associated with the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r21c1-t180" headers="r1c1-t180">
<p><a href="#CHECHFHF">getXAConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r21c1-t180 r1c2-t180">
<p>Creates an XA connection to a database.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r22c1-t180" headers="r1c1-t180">
<p><a href="#CHEIJIHA">getXAEnvironment()</a></p>
</td>
<td class="cellalignment2205" headers="r22c1-t180 r1c2-t180">
<p>Creates an XA <code dir="ltr">Environment</code> object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r23c1-t180" headers="r1c1-t180">
<p><a href="#CHEICCEF">releaseXAConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r23c1-t180 r1c2-t180">
<p>Releases all resources allocated by a <a href="#CHECHFHF">getXAConnection()</a> call.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r24c1-t180" headers="r1c1-t180">
<p><a href="#i1089984">releaseXAEnvironment()</a></p>
</td>
<td class="cellalignment2205" headers="r24c1-t180 r1c2-t180">
<p>Releases all resources allocated by a <a href="#CHEIJIHA">getXAEnvironment()</a> call.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r25c1-t180" headers="r1c1-t180">
<p><a href="#i1131289">setCacheMaxSize()</a></p>
</td>
<td class="cellalignment2205" headers="r25c1-t180 r1c2-t180">
<p>Specifies the maximum size for the client-side object cache as a percentage of the optimal size.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r26c1-t180" headers="r1c1-t180">
<p><a href="#i1131311">setCacheOptSize()</a></p>
</td>
<td class="cellalignment2205" headers="r26c1-t180 r1c2-t180">
<p>Specifies the optimal size for the client-side object cache in bytes.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r27c1-t180" headers="r1c1-t180">
<p><a href="#CIAFACJG">setCacheSortedFlush()</a></p>
</td>
<td class="cellalignment2205" headers="r27c1-t180 r1c2-t180">
<p>Specifies whether to sort cache in table order before flushing.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r28c1-t180" headers="r1c1-t180">
<p><a href="#CIAGHDFG">setLDAPAdminContext()</a></p>
</td>
<td class="cellalignment2205" headers="r28c1-t180 r1c2-t180">
<p>Specifies the administrative context for the LDAP client.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r29c1-t180" headers="r1c1-t180">
<p><a href="#CIAJCGAC">setLDAPAuthentication()</a></p>
</td>
<td class="cellalignment2205" headers="r29c1-t180 r1c2-t180">
<p>Specifies the LDAP authentication mode.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r30c1-t180" headers="r1c1-t180">
<p><a href="#CIABIADF">setLDAPHostAndPort()</a></p>
</td>
<td class="cellalignment2205" headers="r30c1-t180 r1c2-t180">
<p>Specifies the LDAP server host and port.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r31c1-t180" headers="r1c1-t180">
<p><a href="#CIAHAAGE">setLDAPLoginNameAndPassword()</a></p>
</td>
<td class="cellalignment2205" headers="r31c1-t180 r1c2-t180">
<p>Specifies the login name and password when connecting to an LDAP server.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r32c1-t180" headers="r1c1-t180">
<p><a href="#CIAGIIBG">setNLSLanguage()</a></p>
</td>
<td class="cellalignment2205" headers="r32c1-t180 r1c2-t180">
<p>Specifies the NLS Language for the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r33c1-t180" headers="r1c1-t180">
<p><a href="#CIABDFAC">setNLSTerritory()</a></p>
</td>
<td class="cellalignment2205" headers="r33c1-t180 r1c2-t180">
<p>Specifies the NLS Territory for the current environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r34c1-t180" headers="r1c1-t180">
<p><a href="#i1079845">terminateConnection()</a></p>
</td>
<td class="cellalignment2205" headers="r34c1-t180 r1c2-t180">
<p>Closes the connection pool and free all related resources.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r35c1-t180" headers="r1c1-t180">
<p><a href="#i1090291">terminateConnectionPool()</a></p>
</td>
<td class="cellalignment2205" headers="r35c1-t180 r1c2-t180">
<p>Closes the connection pool and free all related resources.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r36c1-t180" headers="r1c1-t180">
<p><a href="#i1079857">terminateEnvironment()</a></p>
</td>
<td class="cellalignment2205" headers="r36c1-t180 r1c2-t180">
<p>Destroys the environment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r37c1-t180" headers="r1c1-t180">
<p><a href="#CHEDDEAJ">terminateStatelessConnectionPool()</a></p>
</td>
<td class="cellalignment2205" headers="r37c1-t180 r1c2-t180">
<p>Closes the stateless connection pool and free all related resources.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP20945" class="refsect2"><a id="CHEEGFAI"></a>
<h2 class="refsect2">createConnection()</h2>
<p>This method establishes a connection to the database specified.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of createConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t181">Syntax</th>
<th class="cellalignment2204" id="r1c2-t181">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t181" headers="r1c1-t181">
<pre dir="ltr">Connection * createConnection(
   const string &amp;userName,
   const string &amp;password,
   const string &amp;connectString=&#34;&#34;)=0;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t181 r1c2-t181">Creates a default connection; if the <code dir="ltr">userName</code> and <code dir="ltr">password</code> are <code dir="ltr">NULL</code>, the connection may be authenticated externally.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t181" headers="r1c1-t181">
<pre dir="ltr">Connection * createConnection(
   const UString &amp;userName,
   const UString &amp;password,
   const UString &amp;connectString)=0;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t181 r1c2-t181">Creates a connection (Unicode support). The client <code dir="ltr">Environment</code> should be initialized in <code dir="ltr">OCCIUTIF16</code> mode.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t181" headers="r1c1-t181">
<pre dir="ltr">Connection * createConnection(
   const string &amp;userName,
   const string &amp;password,
   const string &amp;connectString,
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r4c1-t181 r1c2-t181">Creates a connection for database resident connection pooling.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t181" headers="r1c1-t181">
<pre dir="ltr">Connection * createConnection(
   const UString &amp;userName,
   const UString &amp;password,
   const UString &amp;connectString,
   const UString &amp;connectionClass
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment2205" headers="r5c1-t181 r1c2-t181">Creates a connection for database resident connection pooling (Unicode support). The client <code dir="ltr">Environment</code> should be initialized in <code dir="ltr">OCCIUTIF16</code> mode.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of createConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t182">Parameter</th>
<th class="cellalignment2204" id="r1c2-t182">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t182" headers="r1c1-t182">
<pre dir="ltr">userName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t182 r1c2-t182">The name of the user with which to connect.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t182" headers="r1c1-t182">
<pre dir="ltr">password
</pre></td>
<td class="cellalignment2205" headers="r3c1-t182 r1c2-t182">The password of the user.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t182" headers="r1c1-t182">
<pre dir="ltr">connectString
</pre></td>
<td class="cellalignment2205" headers="r4c1-t182 r1c2-t182">The database to which the connection is made.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t182" headers="r1c1-t182">
<pre dir="ltr">purity
</pre></td>
<td class="cellalignment2205" headers="r5c1-t182 r1c2-t182">The purity of the connection used for database resident connection pooling; either <code dir="ltr">SELF</code> or <code dir="ltr">NEW</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t182" headers="r1c1-t182">
<pre dir="ltr">connectionClass
</pre></td>
<td class="cellalignment2205" headers="r6c1-t182 r1c2-t182">The connection class used for database resident connection pooling.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20946" class="refsect2"><a id="i1090287"></a>
<h2 class="refsect2">createConnectionPool()</h2>
<p>Creates a connection pool based on the parameters specified.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of createConnectionPool() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t183">Syntax</th>
<th class="cellalignment2204" id="r1c2-t183">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t183" headers="r1c1-t183">
<pre dir="ltr">ConnectionPool* createConnectionPool(
   const string &amp;poolUserName,
   const string &amp;poolPassword,
   const string &amp;connectString = &#34;&#34;,
   unsigned int minConn = 0,
   unsigned int maxConn = 1,
   unsigned int incrConn = 1)=0;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t183 r1c2-t183">Creates a default connection pool.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t183" headers="r1c1-t183">
<pre dir="ltr">ConnectionPool* createConnectionPool(
   const UString &amp;poolUserName,
   const UString &amp;poolPassword,
   const UString &amp;connectString,
   unsigned int minConn = 0,
   unsigned int maxConn = 1,
   unsigned int incrConn = 1)=0;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t183 r1c2-t183">Creates a connection pool (Unicode support). The client <code dir="ltr">Environment</code> should be initialized in <code dir="ltr">OCCIUTIF16</code> mode.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of createConnectionPool() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t184">Parameter</th>
<th class="cellalignment2204" id="r1c2-t184">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t184" headers="r1c1-t184">
<pre dir="ltr">poolUserName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t184 r1c2-t184">The pool user name.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t184" headers="r1c1-t184">
<pre dir="ltr">poolPassword
</pre></td>
<td class="cellalignment2205" headers="r3c1-t184 r1c2-t184">The pool password.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t184" headers="r1c1-t184">
<pre dir="ltr">connectString
</pre></td>
<td class="cellalignment2205" headers="r4c1-t184 r1c2-t184">The connection string for the server</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t184" headers="r1c1-t184">
<pre dir="ltr">minConn
</pre></td>
<td class="cellalignment2205" headers="r5c1-t184 r1c2-t184">The minimum number of connections in the pool. The minimum number of connections are opened by this method. Additional connections are opened only when necessary. Generally, <code dir="ltr">minConn</code> should be set to the number of concurrent statements the application is expected to run.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t184" headers="r1c1-t184">
<pre dir="ltr">maxConn
</pre></td>
<td class="cellalignment2205" headers="r6c1-t184 r1c2-t184">The maximum number of connections in the pool. Valid values are 1 and greater.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t184" headers="r1c1-t184">
<pre dir="ltr">incrConn
</pre></td>
<td class="cellalignment2205" headers="r7c1-t184 r1c2-t184">The increment by which to increase the number of connections to be opened if the current number of connections is less than <code dir="ltr">maxConn</code>. Valid values are 1 and greater.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20947" class="refsect2"><a id="i1120739"></a>
<h2 class="refsect2">createEnvironment()</h2>
<p>Creates an <code dir="ltr">Environment</code> object. It is created with the specified memory management functions specified in the <code dir="ltr">setMemMgrFunctions()</code> method. If no memory manager functions are specified, then OCCI uses its own default functions. An <code dir="ltr">Environment</code> object must eventually be closed to free all the system resources it has acquired.</p>
<p>If the <code dir="ltr">Mode</code> is specified is either <code dir="ltr">THREADED_MUTEXED</code> or T<code dir="ltr">HREADED_UNMUTEXED</code> as defined in <a href="#BBAFGGHB">Table 13-17</a>, then all three memory management functions must be thread-safe.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of createEnvironment() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t185">Syntax</th>
<th class="cellalignment2204" id="r1c2-t185">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t185" headers="r1c1-t185">
<pre dir="ltr">static Environment * createEnvironment(
   Mode mode = DEFAULT,
   void *ctxp = 0,
   void *(*malocfp)(void *ctxp,
                    size_t size) = 0,
   void *(*ralocfp)(void *ctxp, 
                    void *memptr,
                    size_t newsize) = 0,
   void (*mfreefp)(void *ctxp,
                   void *memptr) = 0);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t185 r1c2-t185">Creates a default environment.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t185" headers="r1c1-t185">
<pre dir="ltr">static Environment * createEnvironment(
   const string &amp;charset,
   const string &amp;ncharset,
   Mode mode = DEFAULT,
   void *ctxp = 0,
   void *(*malocfp)(void *ctxp,
                    size_t size) = 0,
   void *(*ralocfp)(void *ctxp, 
                    void *memptr,
                    size_t newsize) = 0,
   void (*mfreefp)(void *ctxp,
                   void *memptr) = 0);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t185 r1c2-t185">Creates an environment with the specified character set and <code dir="ltr">NCHAR</code> character set ids (Unicode support). The client <code dir="ltr">Environment</code> should be initialized in <code dir="ltr">OCCIUTIF16</code> mode.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of createEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t186">Parameter</th>
<th class="cellalignment2204" id="r1c2-t186">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t186" headers="r1c1-t186">
<pre dir="ltr">mode
</pre></td>
<td class="cellalignment2205" headers="r2c1-t186 r1c2-t186">Values are defined as part of <code dir="ltr">Mode</code> in <a href="#BBAFGGHB">Table 13-17</a>: <code dir="ltr">DEFAULT</code>, <code dir="ltr">THREADED_MUTEXED</code>, <code dir="ltr">THREADED_UNMUTEXED</code>, <code dir="ltr">OBJECT</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t186" headers="r1c1-t186">
<pre dir="ltr">ctxp
</pre></td>
<td class="cellalignment2205" headers="r3c1-t186 r1c2-t186">Context pointer for user-defined memory management function.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t186" headers="r1c1-t186">
<pre dir="ltr">size
</pre></td>
<td class="cellalignment2205" headers="r4c1-t186 r1c2-t186">The size of the memory allocated by user-defined memory allocation function.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t186" headers="r1c1-t186">
<pre dir="ltr">newsize
</pre></td>
<td class="cellalignment2205" headers="r5c1-t186 r1c2-t186">The new size of the memory to be reallocated.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t186" headers="r1c1-t186">
<pre dir="ltr">memptr
</pre></td>
<td class="cellalignment2205" headers="r6c1-t186 r1c2-t186">The existing memory that must be reallocated to new size.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t186" headers="r1c1-t186">
<pre dir="ltr">malocfp
</pre></td>
<td class="cellalignment2205" headers="r7c1-t186 r1c2-t186">User-defined memory allocation function.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t186" headers="r1c1-t186">
<pre dir="ltr">ralocfp
</pre></td>
<td class="cellalignment2205" headers="r8c1-t186 r1c2-t186">User-defined memory reallocation function.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t186" headers="r1c1-t186">
<pre dir="ltr">mfreefp
</pre></td>
<td class="cellalignment2205" headers="r9c1-t186 r1c2-t186">User-defined memory free function.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t186" headers="r1c1-t186">
<pre dir="ltr">charset
</pre></td>
<td class="cellalignment2205" headers="r10c1-t186 r1c2-t186">Character set id that replaces the one specified in <code dir="ltr">NLS_LANG</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t186" headers="r1c1-t186">
<pre dir="ltr">ncharset
</pre></td>
<td class="cellalignment2205" headers="r11c1-t186 r1c2-t186">Character set id that replaces the one specified in <code dir="ltr">NLS_NCHAR</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20948" class="refsect2"><a id="CHECBAHJ"></a>
<h2 class="refsect2">createStatelessConnectionPool()</h2>
<p>Creates a <code dir="ltr">StatelessConnectionPool</code> object with specified pool attributes.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of createEnvironment() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t187">Syntax</th>
<th class="cellalignment2204" id="r1c2-t187">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t187" headers="r1c1-t187">
<pre dir="ltr">StatelessConnectionPool* createStatelessConnectionPool(
   const string &amp;poolUserName,
   const string &amp;poolPassword,
   const string connectString=&#34;&#34;,
   unsigned int maxConn=1,
   unsigned int minConn=0,
   unsigned int incrConn=1,
   StatelessConnectionPool::PoolType
      pType=StatelessConnectionPool::HETEROGENEOUS);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t187 r1c2-t187">Support for <code dir="ltr">string</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t187" headers="r1c1-t187">
<pre dir="ltr">StatelessConnectionPool* createStatelessConnectionPool(
   const UString &amp;poolUserName,
   const UString &amp;poolPassword,
   const UString &amp;connectString,
   unsigned int maxConn = 1,
   unsigned int minConn = 0,
   unsigned int incrConn = 1,
   StatelessConnectionPool::PoolType 
   pType=StatelessConnectionPool::HETEROGENEOUS);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t187 r1c2-t187">Support for <code dir="ltr">UString</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of createStatelessConnectionPool() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t188">Parameter</th>
<th class="cellalignment2204" id="r1c2-t188">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t188" headers="r1c1-t188">
<pre dir="ltr">poolUserName
</pre></td>
<td class="cellalignment2205" headers="r2c1-t188 r1c2-t188">The pool user name.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t188" headers="r1c1-t188">
<pre dir="ltr">poolPassword
</pre></td>
<td class="cellalignment2205" headers="r3c1-t188 r1c2-t188">The pool password.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t188" headers="r1c1-t188">
<pre dir="ltr">connectString
</pre></td>
<td class="cellalignment2205" headers="r4c1-t188 r1c2-t188">The connection string for the server.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t188" headers="r1c1-t188">
<pre dir="ltr">maxConn
</pre></td>
<td class="cellalignment2205" headers="r5c1-t188 r1c2-t188">The maximum number of connections that can be opened the pool; additional sessions cannot be open.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t188" headers="r1c1-t188">
<pre dir="ltr">minConn
</pre></td>
<td class="cellalignment2205" headers="r6c1-t188 r1c2-t188">The number of connections initially created in a pool. This parameter is considered only if the <code dir="ltr">PoolType</code> is set to <code dir="ltr">HOMOGENEOUS</code>, as defined in <a href="reference029.htm#BBAFHGEG">Table 13-41</a> .</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t188" headers="r1c1-t188">
<pre dir="ltr">incrConn
</pre></td>
<td class="cellalignment2205" headers="r7c1-t188 r1c2-t188">The number of connections by which to increment the pool if all open connections are busy, up to a maximum open connections specified by <code dir="ltr">maxConn</code> parameter. This parameter is considered only if the <code dir="ltr">PoolType</code> is set to <code dir="ltr">HOMOGENEOUS</code>, as defined in <a href="reference029.htm#BBAFHGEG">Table 13-41</a> .</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t188" headers="r1c1-t188">
<pre dir="ltr">pType
</pre></td>
<td class="cellalignment2205" headers="r8c1-t188 r1c2-t188">The <code dir="ltr">PoolType</code> of the connection pool, defined in <a href="reference029.htm#BBAFHGEG">Table 13-41</a> .</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20949" class="refsect2"><a id="CIAHDHFB"></a>
<h2 class="refsect2">enableSubscription()</h2>
<p>Enables subscription notification.</p>
<p class="subhead1"><a id="LNCPP20950"></a>Syntax</p>
<pre dir="ltr">void enableSubscription(
   const aq::Subscription &amp;sub);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of enableSubscription() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t189">Parameter</th>
<th class="cellalignment2204" id="r1c2-t189">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t189" headers="r1c1-t189">
<pre dir="ltr">sub
</pre></td>
<td class="cellalignment2205" headers="r2c1-t189 r1c2-t189">The Subscription.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20951" class="refsect2"><a id="CIAFIHHC"></a>
<h2 class="refsect2">disableSubscription()</h2>
<p>Disables subscription notification.</p>
<p class="subhead1"><a id="LNCPP20952"></a>Syntax</p>
<pre dir="ltr">void disableSubscription(
   Subscription &amp;subscr);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of disableSubscription() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t190">Parameter</th>
<th class="cellalignment2204" id="r1c2-t190">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t190" headers="r1c1-t190">
<pre dir="ltr">subscr
</pre></td>
<td class="cellalignment2205" headers="r2c1-t190 r1c2-t190">The Subscription.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20953" class="refsect2"><a id="i1131253"></a>
<h2 class="refsect2">getCacheMaxSize()</h2>
<p>Retrieves the maximum size of the cache.</p>
<p class="subhead1"><a id="LNCPP20954"></a>Syntax</p>
<pre dir="ltr">unsigned int getCacheMaxSize() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20955" class="refsect2"><a id="i1131266"></a>
<h2 class="refsect2">getCacheOptSize()</h2>
<p>Retrieves the Cache optimal heap size.</p>
<p class="subhead1"><a id="LNCPP20956"></a>Syntax</p>
<pre dir="ltr">unsigned int getCacheOptSize() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20957" class="refsect2"><a id="CIADFBJJ"></a>
<h2 class="refsect2">getCacheSortedFlush()</h2>
<p>Retrieves the current setting of the cache sorting flag; <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>.</p>
<p class="subhead1"><a id="LNCPP20958"></a>Syntax</p>
<pre dir="ltr">bool getCacheSortedFlush() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20959" class="refsect2"><a id="i1131122"></a>
<h2 class="refsect2">getCurrentHeapSize()</h2>
<p>Returns the amount of memory currently allocated to all objects in this environment.</p>
<p class="subhead1"><a id="LNCPP20960"></a>Syntax</p>
<pre dir="ltr">unsigned int getCurrentHeapSize() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20961" class="refsect2"><a id="CIAHDAGA"></a>
<h2 class="refsect2">getLDAPAdminContext()</h2>
<p>Returns the administrative context when using LDAP open notification registration.</p>
<p class="subhead1"><a id="LNCPP20962"></a>Syntax</p>
<pre dir="ltr">string getLDAPAdminContext() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20963" class="refsect2"><a id="CIAGBEJA"></a>
<h2 class="refsect2">getLDAPAuthentication()</h2>
<p>Returns the authentication mode when using LDAP open notification registration.</p>
<p class="subhead1"><a id="LNCPP20964"></a>Syntax</p>
<pre dir="ltr">unsigned int getLDAPAuthentication() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20965" class="refsect2"><a id="CIADBBHJ"></a>
<h2 class="refsect2">getLDAPHost()</h2>
<p>Returns the host on which the LDAP server runs.</p>
<p class="subhead1"><a id="LNCPP20966"></a>Syntax</p>
<pre dir="ltr">string getLDAPHost() const;
 
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20967" class="refsect2"><a id="CIAHAAIG"></a>
<h2 class="refsect2">getLDAPPort()</h2>
<p>Returns the port on which the LDAP server is listening.</p>
<p class="subhead1"><a id="LNCPP20968"></a>Syntax</p>
<pre dir="ltr">unsigned int getLDAPPort() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20969" class="refsect2"><a id="i1090289"></a>
<h2 class="refsect2">getMap()</h2>
<p>Returns a pointer to the map for this environment.</p>
<p class="subhead1"><a id="LNCPP20970"></a>Syntax</p>
<pre dir="ltr">Map *getMap() const;
</pre></div>
<!-- class="refsect2" -->
<div class="refsect2"><a id="CIAHFIDF"></a>
<h2 class="refsect2">getNLSLanguage()</h2>
<p>Returns the NLS Language for the current environment.</p>
<p class="subhead1"><a id="sthref773"></a>Syntax</p>
<pre dir="ltr">string getNLSLanguage() const;
</pre></div>
<!-- class="refsect2" -->
<div class="refsect2"><a id="CIAEHGIE"></a>
<h2 class="refsect2">getNLSTerritory()</h2>
<p>Returns the NLS Territory for the current environment.</p>
<p class="subhead1"><a id="sthref774"></a>Syntax</p>
<pre dir="ltr">string getNLSTerritory() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20971" class="refsect2"><a id="i1090290"></a>
<h2 class="refsect2">getOCIEnvironment()</h2>
<p>Returns a pointer to the OCI environment associated with this environment.</p>
<p class="subhead1"><a id="LNCPP20972"></a>Syntax</p>
<pre dir="ltr">OCIEnv *getOCIEnvironment() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP20973" class="refsect2"><a id="CHECHFHF"></a>
<h2 class="refsect2">getXAConnection()</h2>
<p>Returns a pointer to an OCCI Connection object that corresponds to the one opened by the XA library.</p>
<p class="subhead1"><a id="LNCPP20974"></a>Syntax</p>
<pre dir="ltr">Connection* getXAConnection(
   const string &amp;dbname);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getXAConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t191">Parameter</th>
<th class="cellalignment2204" id="r1c2-t191">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t191" headers="r1c1-t191">
<pre dir="ltr">dbname
</pre></td>
<td class="cellalignment2205" headers="r2c1-t191 r1c2-t191">The database name; same as the optional <code dir="ltr">dbname</code> provided in the Open String (and used in connection to the Resource Manager).</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20975" class="refsect2"><a id="CHEIJIHA"></a>
<h2 class="refsect2">getXAEnvironment()</h2>
<p>Returns a pointer to an OCCI Environment object that corresponds to the one opened by the XA library.</p>
<p class="subhead1"><a id="LNCPP20976"></a>Syntax</p>
<pre dir="ltr">Environment *getXAEnvironment(
   const string &amp;dbname);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getXAEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t192">Parameter</th>
<th class="cellalignment2204" id="r1c2-t192">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t192" headers="r1c1-t192">
<pre dir="ltr">dbname
</pre></td>
<td class="cellalignment2205" headers="r2c1-t192 r1c2-t192">The database name; same as the optional <code dir="ltr">dbname</code> provided in the Open String (and used in connection to the Resource Manager).</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20977" class="refsect2"><a id="CHEICCEF"></a>
<h2 class="refsect2">releaseXAConnection()</h2>
<p>Release/deallocate all resources allocated by the <a href="#CHECHFHF">getXAConnection()</a> method.</p>
<p class="subhead1"><a id="LNCPP20978"></a>Syntax</p>
<pre dir="ltr">void releaseXAConnection(
   Connection* conn);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of releaseXAConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t193">Parameter</th>
<th class="cellalignment2204" id="r1c2-t193">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t193" headers="r1c1-t193">
<pre dir="ltr">conn
</pre></td>
<td class="cellalignment2205" headers="r2c1-t193 r1c2-t193">The connection returned by the <a href="#CHECHFHF">getXAConnection()</a> method.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20979" class="refsect2"><a id="i1089984"></a>
<h2 class="refsect2">releaseXAEnvironment()</h2>
<p>Release/deallocate all resources allocated by the <a href="#CHEIJIHA">getXAEnvironment()</a> method.</p>
<p class="subhead1"><a id="LNCPP20980"></a>Syntax</p>
<pre dir="ltr">void releaseXAEnvironment(
   Environment* env);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of releaseXAEnvironment() method" summary="parameters" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t194">Parameter</th>
<th class="cellalignment2204" id="r1c2-t194">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t194" headers="r1c1-t194">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment2205" headers="r2c1-t194 r1c2-t194">The environment returned by the <a href="#CHEIJIHA">getXAEnvironment()</a> method.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20981" class="refsect2"><a id="i1131289"></a>
<h2 class="refsect2">setCacheMaxSize()</h2>
<p>Sets the maximum size for the client-side object cache as a percentage of the optimal size. The default value is 10%.</p>
<p class="subhead1"><a id="LNCPP20982"></a>Syntax</p>
<pre dir="ltr">void setCacheMaxSize(
   unsigned int maxSize);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setCacheMaxSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t195">Parameter</th>
<th class="cellalignment2204" id="r1c2-t195">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t195" headers="r1c1-t195">
<pre dir="ltr">maxSize
</pre></td>
<td class="cellalignment2205" headers="r2c1-t195 r1c2-t195">The value of the maximum size, as a percentage.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20983" class="refsect2"><a id="i1131311"></a>
<h2 class="refsect2">setCacheOptSize()</h2>
<p>Sets the optimal size for the client-side object cache in bytes. The default value is 8MB.</p>
<p class="subhead1"><a id="LNCPP20984"></a>Syntax</p>
<pre dir="ltr">void setCacheOptSize(
   unsigned int optSize);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setCacheMaxSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t196">Parameter</th>
<th class="cellalignment2204" id="r1c2-t196">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t196" headers="r1c1-t196">
<pre dir="ltr">optSize
</pre></td>
<td class="cellalignment2205" headers="r2c1-t196 r1c2-t196">The value of the optimal size, in bytes.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20985" class="refsect2"><a id="CIAFACJG"></a>
<h2 class="refsect2">setCacheSortedFlush()</h2>
<p>Sets the cache flushing protocol. By default, objects in cache are flushed in the order they are modified; <code dir="ltr">flag=FALSE</code>. To improve server-side performance, set <code dir="ltr">flag=TRUE</code>, so that the objects in cache are sorted in table order before flushing from client cache.</p>
<p class="subhead1"><a id="LNCPP20986"></a>Syntax</p>
<pre dir="ltr">void setCacheSortedFlush(
   bool flag);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setCacheSortedFlush() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t197">Parameter</th>
<th class="cellalignment2204" id="r1c2-t197">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t197" headers="r1c1-t197">
<pre dir="ltr">flag
</pre></td>
<td class="cellalignment2205" headers="r2c1-t197 r1c2-t197"><code dir="ltr">FALSE</code> (default): no sorting; <code dir="ltr">TRUE</code>: sorting in table order</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20987" class="refsect2"><a id="CIAGHDFG"></a>
<h2 class="refsect2">setLDAPAdminContext()</h2>
<p>Sets the administrative context of the client. This is usually the root of the Oracle RDBMS LDAP schema in the LDAP server.</p>
<p class="subhead1"><a id="LNCPP20988"></a>Syntax</p>
<pre dir="ltr">void setLDAPAdminContext(
   const string &amp;ctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setLDAPAdminContext() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t198">Parameter</th>
<th class="cellalignment2204" id="r1c2-t198">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t198" headers="r1c1-t198">
<pre dir="ltr">ctx
</pre></td>
<td class="cellalignment2205" headers="r2c1-t198 r1c2-t198">The client context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20989" class="refsect2"><a id="CIAJCGAC"></a>
<h2 class="refsect2">setLDAPAuthentication()</h2>
<p>Specifies the authentication mode. Currently the only supported value is 0x1: Simple authentication; username/password authentication.</p>
<p class="subhead1"><a id="LNCPP20990"></a>Syntax</p>
<pre dir="ltr">void setLDAPAuthentication(
   unsigned int mode);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setLDAPAuthentication() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t199">Parameter</th>
<th class="cellalignment2204" id="r1c2-t199">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t199" headers="r1c1-t199">
<pre dir="ltr">mode
</pre></td>
<td class="cellalignment2205" headers="r2c1-t199 r1c2-t199">The authentication mode</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20991" class="refsect2"><a id="CIABIADF"></a>
<h2 class="refsect2">setLDAPHostAndPort()</h2>
<p>Specifies the host on which the LDAP server is running, and the port on which it is listening for requests.</p>
<p class="subhead2"><a id="LNCPP20992"></a>Syntax</p>
<pre dir="ltr">void setLDAPHostAndPort(
   const string &amp;host,
   unsigned int port);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setLDAPHostAndPort() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t200">Parameter</th>
<th class="cellalignment2204" id="r1c2-t200">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t200" headers="r1c1-t200">
<pre dir="ltr">host
</pre></td>
<td class="cellalignment2205" headers="r2c1-t200 r1c2-t200">The host for LDAP</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t200" headers="r1c1-t200">
<pre dir="ltr">port
</pre></td>
<td class="cellalignment2205" headers="r3c1-t200 r1c2-t200">The port for LDAP</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20993" class="refsect2"><a id="CIAHAAGE"></a>
<h2 class="refsect2">setLDAPLoginNameAndPassword()</h2>
<p>Specifies the login distinguished name and password used when connecting to an LDAP server.</p>
<p class="subhead1"><a id="LNCPP20994"></a>Syntax</p>
<pre dir="ltr">void setLDAPLoginNameAndPassword(
   const string &amp;login,
   const &amp;passwd);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setLDAPLoginNameAndPassword() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t201">Parameter</th>
<th class="cellalignment2204" id="r1c2-t201">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t201" headers="r1c1-t201">
<pre dir="ltr">login
</pre></td>
<td class="cellalignment2205" headers="r2c1-t201 r1c2-t201">The login name</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t201" headers="r1c1-t201">
<pre dir="ltr">passwd
</pre></td>
<td class="cellalignment2205" headers="r3c1-t201 r1c2-t201">The login password</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div class="refsect2"><a id="CIAGIIBG"></a>
<h2 class="refsect2">setNLSLanguage()</h2>
<p>Specifies the NLS Language for the current environment. The setting is effective for the connections created after this method has been called. The setting overrides the value set through the process environment variable <code dir="ltr">NLS_LANG</code>.</p>
<p class="subhead1"><a id="sthref775"></a>Syntax</p>
<pre dir="ltr">void setNLSLanguage(
   const string &amp;lang);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setNLSLanguage() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t202">Parameter</th>
<th class="cellalignment2204" id="r1c2-t202">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t202" headers="r1c1-t202">
<pre dir="ltr">lang
</pre></td>
<td class="cellalignment2205" headers="r2c1-t202 r1c2-t202">The language of the current environment</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div class="refsect2"><a id="CIABDFAC"></a>
<h2 class="refsect2">setNLSTerritory()</h2>
<p>Specifies the NLS Territory for the current environment. The setting is effective for the connections created after this method has been called. The setting overrides the value set through the process environment variable <code dir="ltr">NLS_LANG</code>.</p>
<p class="subhead1"><a id="sthref776"></a>Syntax</p>
<pre dir="ltr">void setNLSTerritory(
   const string &amp;Terr);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setNLSLanguage() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t203">Parameter</th>
<th class="cellalignment2204" id="r1c2-t203">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t203" headers="r1c1-t203">
<pre dir="ltr">Terr
</pre></td>
<td class="cellalignment2205" headers="r2c1-t203 r1c2-t203">The territory of the current environment</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20995" class="refsect2"><a id="i1079845"></a>
<h2 class="refsect2">terminateConnection()</h2>
<p>Closes the connection to the environment, and frees all related system resources.</p>
<p class="subhead1"><a id="LNCPP20996"></a>Syntax</p>
<pre dir="ltr">void terminateConnection(
   Connection *connection);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of terminateConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t204">Parameter</th>
<th class="cellalignment2204" id="r1c2-t204">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t204" headers="r1c1-t204">
<pre dir="ltr">connection
</pre></td>
<td class="cellalignment2205" headers="r2c1-t204 r1c2-t204">A pointer to the connection instance to be terminated.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20997" class="refsect2"><a id="i1090291"></a>
<h2 class="refsect2">terminateConnectionPool()</h2>
<p>Closes the connections in the connection pool, and frees all related system resources.</p>
<p class="subhead1"><a id="LNCPP20998"></a>Syntax</p>
<pre dir="ltr">void terminateConnectionPool(
   ConnectionPool *poolPointer);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of terminateConnectionPool() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t205">Parameter</th>
<th class="cellalignment2204" id="r1c2-t205">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t205" headers="r1c1-t205">
<pre dir="ltr">poolPointer
</pre></td>
<td class="cellalignment2205" headers="r2c1-t205 r1c2-t205">A pointer to the connection pool instance to be terminated.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP20999" class="refsect2"><a id="i1079857"></a>
<h2 class="refsect2">terminateEnvironment()</h2>
<p>Closes the environment, and frees all related system resources.</p>
<p class="subhead1"><a id="LNCPP21000"></a>Syntax</p>
<pre dir="ltr">void terminateEnvironment(
   Environment *env);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of terminateEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t206">Parameter</th>
<th class="cellalignment2204" id="r1c2-t206">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t206" headers="r1c1-t206">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment2205" headers="r2c1-t206 r1c2-t206">Environment to be closed.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21001" class="refsect2"><a id="CHEDDEAJ"></a>
<h2 class="refsect2">terminateStatelessConnectionPool()</h2>
<p>Destroys the specified <code dir="ltr">StatelessConnectionPool</code>.</p>
<p class="subhead1"><a id="LNCPP21002"></a>Syntax</p>
<pre dir="ltr">void termimnateStatelessConnectionPool(
   StatelessConnectionPool* poolPointer,
   StatelessConnectionPool::DestroyMode mode=StatelessConnectionPool::DEFAULT);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getXAEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t207">Parameter</th>
<th class="cellalignment2204" id="r1c2-t207">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t207" headers="r1c1-t207">
<pre dir="ltr">poolPointer
</pre></td>
<td class="cellalignment2205" headers="r2c1-t207 r1c2-t207">The <code dir="ltr">StatelessConnectionPool</code> to be destroyed.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t207" headers="r1c1-t207">mode</td>
<td class="cellalignment2205" headers="r3c1-t207 r1c2-t207"><code dir="ltr">DestroyMode</code> as defined <a href="reference029.htm#BBAFHGEG">Table 13-41</a>: <code dir="ltr">DEFAULT</code> or <code dir="ltr">SPF_FORCE</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2196">
<tr>
<td class="cellalignment2205">
<table class="cellalignment2201">
<tr>
<td class="cellalignment2200"><a href="reference013.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2200"><a href="reference015.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2208">
<table class="cellalignment2199">
<tr>
<td class="cellalignment2200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>