<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73936"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Timestamp%20Class"></a><title>Timestamp Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1082"/>
<meta name="dcterms.created" content="2016-06-01T12:8:13Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="C++ Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48221-07"/>
<meta name="dcterms.isVersionOf" content="LNCPP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="reference032.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48221-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">53/54</span> <!-- End Header --><a id="i1118557"></a>
<div id="LNCPP1024" class="refsect1">
<h1 class="refsect1">Timest<a id="sthref934"></a><a id="sthref935"></a>amp Class</h1>
<p>This class supports the SQL standard <code dir="ltr">TIMESTAMP WITH TIME ZONE</code> and <code dir="ltr">TIMESTAMP WITHOUT TIME ZONE</code> types, and works with all database <code dir="ltr">TIMESTAMP</code> types: <code dir="ltr">TIMESTAMP</code>, <code dir="ltr">TIMESTAMP WITH TIME ZONE</code>, and <code dir="ltr">TIMESTAMP WITH LOCAL TIME ZONE</code>.</p>
<p><code dir="ltr">Timestamp</code> time components, such as hour, minute, second and fractional section are in the time zone specified for the <code dir="ltr">Timestamp</code>. This is new behavior for the 10<span class="italic">g</span> release; previous versions supported GMT values of time components. Time components were only converted to the time zone specified by <code dir="ltr">Timestamp</code> when they were stored in the database. For example, the following <a href="#i1145510">Timestamp()</a> call constructs a <code dir="ltr">Timestamp</code> value <code dir="ltr">13-Nov 2003 17:24:30.0</code> in timezone <code dir="ltr">+5:30</code>.</p>
<pre dir="ltr">Timestamp ts(env, 2003, 11, 13, 17, 24, 30, 0, 5, 30);
</pre>
<p>The behavior of this call in previous releases would interpret the timestamp components as GMT, resulting in a timestamp value of <code dir="ltr">13-Nov 2003 11:54:30.0</code> in timezone <code dir="ltr">+5:30</code>. Users were forced to convert the timestamps to GMT before invoking the constructor. Note that for GMT timezone, both hour and minute equal <code dir="ltr">0</code>.</p>
<p>This behavior change also applies to <a href="#i1094877">setDate()</a> and <a href="#CACEDCFC">setTime()</a> methods.</p>
<p>The fields of <code dir="ltr">Timestamp</code> class and their legal ranges are provided in <a href="#g1244211">Table 13-49</a>. An <code dir="ltr">SQLException</code> occurs if a parameter is out of range.</p>
<div id="LNCPP21849" class="tblformal">
<p class="titleintable"><a id="sthref936"></a><a id="g1244211"></a>Table 13-49 Fields of Timestamp and Their<a id="sthref937"></a> Legal Ranges</p>
<table class="cellalignment2203" title="Fields of Timestamp and Their Legal Ranges" summary="First column lists fields of timestamp; second column provides the type of the field; third column provides the minimum legal value; fourth column provides the maximum legal value." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t566">Field</th>
<th class="cellalignment2204" id="r1c2-t566">Type</th>
<th class="cellalignment2204" id="r1c3-t566">Minimum Value</th>
<th class="cellalignment2204" id="r1c4-t566">Maximum value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t566" headers="r1c1-t566">
<p><code dir="ltr">year</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t566 r1c2-t566">
<p>int</p>
</td>
<td class="cellalignment2205" headers="r2c1-t566 r1c3-t566">
<p><code dir="ltr">-4713</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t566 r1c4-t566">
<p><code dir="ltr">9999</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t566" headers="r1c1-t566">
<p><code dir="ltr">month</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t566 r1c2-t566">
<p>unsigned int</p>
</td>
<td class="cellalignment2205" headers="r3c1-t566 r1c3-t566">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t566 r1c4-t566">
<p><code dir="ltr">12</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t566" headers="r1c1-t566">
<p><code dir="ltr">day</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t566 r1c2-t566">
<p>unsigned int</p>
</td>
<td class="cellalignment2205" headers="r4c1-t566 r1c3-t566">
<p><code dir="ltr">1</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t566 r1c4-t566">
<p><code dir="ltr">31</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t566" headers="r1c1-t566">
<p><code dir="ltr">hour</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t566 r1c2-t566">
<p>unsigned int</p>
</td>
<td class="cellalignment2205" headers="r5c1-t566 r1c3-t566">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t566 r1c4-t566">
<p><code dir="ltr">23</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t566" headers="r1c1-t566">
<p><code dir="ltr">min</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t566 r1c2-t566">
<p>unsigned int</p>
</td>
<td class="cellalignment2205" headers="r6c1-t566 r1c3-t566">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t566 r1c4-t566">
<p><code dir="ltr">59</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t566" headers="r1c1-t566">
<p><code dir="ltr">sec</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t566 r1c2-t566">
<p>unsigned int</p>
</td>
<td class="cellalignment2205" headers="r7c1-t566 r1c3-t566">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t566 r1c4-t566">
<p><code dir="ltr">61</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t566" headers="r1c1-t566">
<p><code dir="ltr">tzhour</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t566 r1c2-t566">
<p>int</p>
</td>
<td class="cellalignment2205" headers="r8c1-t566 r1c3-t566">
<p><code dir="ltr">-12</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t566 r1c4-t566">
<p><code dir="ltr">14</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t566" headers="r1c1-t566">
<p><code dir="ltr">tzmin</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t566 r1c2-t566">
<p>int</p>
</td>
<td class="cellalignment2205" headers="r9c1-t566 r1c3-t566">
<p><code dir="ltr">-59</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t566 r1c4-t566">
<p><code dir="ltr">59</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP21850" class="tblformal">
<p class="titleintable"><a id="sthref938"></a><a id="sthref939"></a>Table 13-50 Summary of <a id="sthref940"></a><a id="sthref941"></a>Timestamp Methods</p>
<table class="cellalignment2203" title="Summary of Timestamp Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t567">Method</th>
<th class="cellalignment2204" id="r1c2-t567">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t567" headers="r1c1-t567">
<p><a href="#i1145510">Timestamp()</a></p>
</td>
<td class="cellalignment2205" headers="r2c1-t567 r1c2-t567">
<p><code dir="ltr">Timestamp</code> class constructor.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t567" headers="r1c1-t567">
<p><a href="#i1094697">fromText()</a></p>
</td>
<td class="cellalignment2205" headers="r3c1-t567 r1c2-t567">
<p>Sets the time stamp from the values provided by the string.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t567" headers="r1c1-t567">
<p><a href="#i1094829">getDate()</a></p>
</td>
<td class="cellalignment2205" headers="r4c1-t567 r1c2-t567">
<p>Gets the date from the <code dir="ltr">Timestamp</code> object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t567" headers="r1c1-t567">
<p><a href="#i1079289">getTime()</a></p>
</td>
<td class="cellalignment2205" headers="r5c1-t567 r1c2-t567">
<p>Gets the time from the <code dir="ltr">TimeStamp</code> object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t567" headers="r1c1-t567">
<p><a href="#i1079296">getTimeZoneOffset()</a></p>
</td>
<td class="cellalignment2205" headers="r6c1-t567 r1c2-t567">
<p>Returns the time zone hour and minute offset value.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t567" headers="r1c1-t567">
<p><a href="#i1094802">intervalAdd()</a></p>
</td>
<td class="cellalignment2205" headers="r7c1-t567 r1c2-t567">
<p>Returns a <code dir="ltr">Timestamp</code> object with value (this + interval).</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t567" headers="r1c1-t567">
<p><a href="#i1094814">intervalSub()</a></p>
</td>
<td class="cellalignment2205" headers="r8c1-t567 r1c2-t567">
<p>Returns a <code dir="ltr">Timestamp</code> object with value (this - interval).</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t567" headers="r1c1-t567">
<p><a href="#i1094846">isNull()</a></p>
</td>
<td class="cellalignment2205" headers="r9c1-t567 r1c2-t567">
<p>Checks if <code dir="ltr">Timestamp</code> is <code dir="ltr">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t567" headers="r1c1-t567">
<p><a href="#i1094854">operator=()</a></p>
</td>
<td class="cellalignment2205" headers="r10c1-t567 r1c2-t567">
<p>Simple assignment.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t567" headers="r1c1-t567">
<p><a href="#i1079327">operator==()</a></p>
</td>
<td class="cellalignment2205" headers="r11c1-t567 r1c2-t567">
<p>Checks if a and b are equal.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t567" headers="r1c1-t567">
<p><a href="#i1108012">operator!=()</a></p>
</td>
<td class="cellalignment2205" headers="r12c1-t567 r1c2-t567">
<p>Checks if a and b are not equal.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t567" headers="r1c1-t567">
<p><a href="#i1094869">operator&gt;()</a></p>
</td>
<td class="cellalignment2205" headers="r13c1-t567 r1c2-t567">
<p>Checks if a is greater than b.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t567" headers="r1c1-t567">
<p><a href="#i1108046">operator&gt;=()</a></p>
</td>
<td class="cellalignment2205" headers="r14c1-t567 r1c2-t567">
<p>Checks if a is greater than or equal to b.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t567" headers="r1c1-t567">
<p><a href="#i1094763">operator&lt;()</a></p>
</td>
<td class="cellalignment2205" headers="r15c1-t567 r1c2-t567">
<p>Checks if a is less than b.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t567" headers="r1c1-t567">
<p><a href="#i1108061">operator&lt;=()</a></p>
</td>
<td class="cellalignment2205" headers="r16c1-t567 r1c2-t567">
<p>Checks if a is less than or equal to b.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t567" headers="r1c1-t567">
<p><a href="#i1094877">setDate()</a></p>
</td>
<td class="cellalignment2205" headers="r17c1-t567 r1c2-t567">
<p>Sets the year, month, day components contained for this timestamp.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t567" headers="r1c1-t567">
<p><a href="#i1079334">setNull()</a></p>
</td>
<td class="cellalignment2205" headers="r18c1-t567 r1c2-t567">
<p>Sets the value of Timestamp to <code dir="ltr">NULL</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r19c1-t567" headers="r1c1-t567">
<p><a href="#CACEDCFC">setTime()</a></p>
</td>
<td class="cellalignment2205" headers="r19c1-t567 r1c2-t567">
<p>Sets the day, hour, minute, second and fractional second components for this timestamp.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r20c1-t567" headers="r1c1-t567">
<p><a href="#i1079341">setTimeZoneOffset()</a></p>
</td>
<td class="cellalignment2205" headers="r20c1-t567 r1c2-t567">
<p>Sets the hour and minute offset for time zone.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r21c1-t567" headers="r1c1-t567">
<p><a href="#i1079391">subDS()</a></p>
</td>
<td class="cellalignment2205" headers="r21c1-t567 r1c2-t567">
<p>Returns a <code dir="ltr">IntervalDS</code> representing this - <code dir="ltr">val</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r22c1-t567" headers="r1c1-t567">
<p><a href="#i1094892">subYM()</a></p>
</td>
<td class="cellalignment2205" headers="r22c1-t567 r1c2-t567">
<p>Returns a <code dir="ltr">IntervalYM</code> representing this - <code dir="ltr">val</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r23c1-t567" headers="r1c1-t567">
<p><a href="#i1094912">toText()</a></p>
</td>
<td class="cellalignment2205" headers="r23c1-t567 r1c2-t567">
<p>Returns a <code dir="ltr">string</code> representation for the timestamp in the format specified.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP21851" class="refsect2"><a id="i1145510"></a>
<h2 class="refsect2">Timestamp()</h2>
<p><code dir="ltr">Timestamp</code> class constructor.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of Timestamp() constructor" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t568">Syntax</th>
<th class="cellalignment2204" id="r1c2-t568">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t568" headers="r1c1-t568">
<pre dir="ltr">Timestamp(
   const Environment *env,
   int year=1,
   unsigned int month=1,
   unsigned int day=1,
   unsigned int hour=0,
   unsigned int min=0,
   unsigned int sec=0,
   unsigned int fs=0,
   int tzhour=0,
   int tzmin=0);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t568 r1c2-t568">Returns a default <code dir="ltr">Timestamp</code> object. Time components are understood to be in the specified time zone.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t568" headers="r1c1-t568">
<pre dir="ltr">Timestamp();
</pre></td>
<td class="cellalignment2205" headers="r3c1-t568 r1c2-t568">Returns a <code dir="ltr">NULL Timestamp</code> object. A <code dir="ltr">NULL</code> timestamp can be initialized by assignment or calling the <a href="#i1094697">fromText()</a> method. Methods that can be called on <code dir="ltr">NULL</code> timestamp objects are <a href="#i1079334">setNull()</a>, <a href="reference006.htm#i1078396">isNull()</a> and <a href="reference006.htm#i1091091">operator=()</a>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t568" headers="r1c1-t568">
<pre dir="ltr">Timestamp(
   const Environment *env,
   int year,
   unsigned int month,
   unsigned int day,
   unsigned int hour,
   unsigned int min,
   unsigned int sec,
   unsigned int fs,
   const string &amp;timezone);
</pre></td>
<td class="cellalignment2205" headers="r4c1-t568 r1c2-t568">Multibyte support. The timezone can be passed as region, &#34;US/Eastern&#34;, or as an offset from GMT, &#34;+05:30&#34;. If an empty string is passed, then the time is considered to be in the current session&#39;s time zone. Used for constructing values for <code dir="ltr">TIMESTAMP WITH LOCAL TIME ZONE</code> types.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t568" headers="r1c1-t568">
<pre dir="ltr">Timestamp(
   const Environment *env,
   int year,
   unsigned int month,
   unsigned int day,
   unsigned int hour,
   unsigned int min,
   unsigned int sec,
   unsigned int fs,
   const UString &amp;timezone);
</pre></td>
<td class="cellalignment2205" headers="r5c1-t568 r1c2-t568">UTF16 (<code dir="ltr">UString</code>) support. The timezone can be passed as region, &#34;US/Eastern&#34;, or as an offset from GMT, &#34;+05:30&#34;. If an empty string is passed, then the time is considered to be in the current session&#39;s time zone. Used for constructing values for <code dir="ltr">TIMESTAMP WITH LOCAL TIME ZONE</code> types.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t568" headers="r1c1-t568">
<pre dir="ltr">Timestamp(
   const Timestamp &amp;src);
</pre></td>
<td class="cellalignment2205" headers="r6c1-t568 r1c2-t568">Copy constructor.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of Timestamp() constructor" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t569">Parameter</th>
<th class="cellalignment2204" id="r1c2-t569">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t569" headers="r1c1-t569">
<pre dir="ltr">year
</pre></td>
<td class="cellalignment2205" headers="r2c1-t569 r1c2-t569">Year component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t569" headers="r1c1-t569">
<pre dir="ltr">month
</pre></td>
<td class="cellalignment2205" headers="r3c1-t569 r1c2-t569">Month component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t569" headers="r1c1-t569">
<pre dir="ltr">day
</pre></td>
<td class="cellalignment2205" headers="r4c1-t569 r1c2-t569">Day component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t569" headers="r1c1-t569">
<pre dir="ltr">hour
</pre></td>
<td class="cellalignment2205" headers="r5c1-t569 r1c2-t569">Hour component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t569" headers="r1c1-t569">
<pre dir="ltr">minute
</pre></td>
<td class="cellalignment2205" headers="r6c1-t569 r1c2-t569">Minute component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t569" headers="r1c1-t569">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r7c1-t569 r1c2-t569">Second component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t569" headers="r1c1-t569">
<pre dir="ltr">fs
</pre></td>
<td class="cellalignment2205" headers="r8c1-t569 r1c2-t569">Fractional second component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t569" headers="r1c1-t569">
<pre dir="ltr">tzhour
</pre></td>
<td class="cellalignment2205" headers="r9c1-t569 r1c2-t569">Time zone difference hour component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t569" headers="r1c1-t569">
<pre dir="ltr">tzmin
</pre></td>
<td class="cellalignment2205" headers="r10c1-t569 r1c2-t569">Timezone difference minute component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t569" headers="r1c1-t569">
<pre dir="ltr">src
</pre></td>
<td class="cellalignment2205" headers="r11c1-t569 r1c2-t569">The original <code dir="ltr">Timezone</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div id="LNCPP21852" class="example">
<p class="titleinexample"><a id="sthref942"></a>Example 13-11 Using Default Timestamp Constructor</p>
<p>This example demonstrates that the default constructor creates a <code dir="ltr">NULL</code> value, and how you can assign a non-<code dir="ltr">NULL</code> value to a <code dir="ltr">Timestamp</code> and perform operations on it:</p>
<pre dir="ltr">Environment *env = Environment::createEnvironment();

//create a null timestamp
Timestamp ts;
if(ts.isNull())
   cout &lt;&lt; &#34;\n ts is Null&#34;;

//assign a non null value to ts
Timestamp notNullTs(env, 2000, 8, 17, 12, 0, 0, 0, 5, 30);
ts = notNullTs;

//now all operations are valid on ts
int yr;
unsigned int mth, day;
ts.getDate(yr, mth, day);
</pre></div>
<!-- class="example" -->
<div id="LNCPP21853" class="example">
<p class="titleinexample"><a id="sthref943"></a>Example 13-12 Using fromText() method to Initialize a NULL Timestamp Instance</p>
<p>The following code example demonstrates how to use the <a href="#i1094697">fromText()</a> method to initialize a <code dir="ltr">NULL</code> timestamp:</p>
<pre dir="ltr">Environment *env = Environment::createEnvironment();

Timestamp ts1;
ts1.fromText(&#34;01:16:17.12 04/03/1825&#34;, &#34;hh:mi:ssxff dd/mm/yyyy&#34;, &#34;&#34;, env);
</pre></div>
<!-- class="example" -->
<div id="LNCPP21854" class="example">
<p class="titleinexample"><a id="sthref944"></a>Example 13-13 Comparing Timestamps Stored in the Database</p>
<p>The following code example demonstrates how to get the timestamp column from a result set, check whether the timestamp is <code dir="ltr">NULL</code>, get the timestamp value in string format, and determine the difference between 2 timestamps:</p>
<pre dir="ltr">Timestamp reft(env, 2001, 1, 1);
ResultSet *rs=stmt-&gt;executeQuery(
   &#34;select order_date from orders where customer_id=1&#34;);
rs-&gt;next();

//retrieve the timestamp column from result set
Timestamp ts=rs-&gt;getTimestamp(1);

//check timestamp for null
if(!ts.isNull())
{
   string tsstr=ts.toText(           //get the timestamp value in string format
      &#34;dd/mm/yyyy hh:mi:ss [tzh:tzm]&#34;,0);
   if(reft&lt;ts                        //compare timestamps
      IntervalDS ds=reft.subDS(ts);  //get difference between timestamps
}
</pre></div>
<!-- class="example" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21855" class="refsect2"><a id="i1094697"></a>
<h2 class="refsect2">fromText()</h2>
<p>Sets the timestamp value from the string. The string is expected to be in the format specified. If <code dir="ltr">nlsParam</code> is specified, this determines the NLS parameters to be used for the conversion. If <code dir="ltr">nlsParam</code> is not specified, the NLS parameters are picked up from the environment which has been passed. In case environment is not passed, Globalization Support parameters are obtained from the environment associated with the instance, if any.</p>
<p>Sets <code dir="ltr">Timestamp</code> object to value represented by a <code dir="ltr">string</code> or <code dir="ltr">UString</code>.</p>
<p>The value is interpreted based on the <code dir="ltr">fmt</code> and <code dir="ltr">nlsParam</code> parameters. In cases where <code dir="ltr">nlsParam</code> is not passed, the Globalization Support settings of the <code dir="ltr">envp</code> parameter are used.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information on <a class="olink SQLRF06132" href="../SQLRF/functions219.htm#SQLRF06132"><code dir="ltr">TO_DATE</code></a></div>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of fromTextt() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t571">Syntax</th>
<th class="cellalignment2204" id="r1c2-t571">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t571" headers="r1c1-t571">
<pre dir="ltr">void fromText(
   const string &amp;timestmpStr,
   const string &amp;fmt,
   const string &amp;nlsParam = &#34;&#34;,
   const Environment *env = NULL);
</pre></td>
<td class="cellalignment2205" headers="r2c1-t571 r1c2-t571">Sets <code dir="ltr">Timestamp</code> object to value represented by a <code dir="ltr">string</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t571" headers="r1c1-t571">
<pre dir="ltr">void fromText(
   const UString &amp;timestmpStr,
   const UString &amp;fmt,
   const UString &amp;nlsParam,
   const Environment *env = NULL);
</pre></td>
<td class="cellalignment2205" headers="r3c1-t571 r1c2-t571">Sets <code dir="ltr">Timestamp</code> object to value represented by a <code dir="ltr">UString</code>; globalization enabled.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of fromText() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t572">Parameter</th>
<th class="cellalignment2204" id="r1c2-t572">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t572" headers="r1c1-t572">
<pre dir="ltr">timestmpStr
</pre></td>
<td class="cellalignment2205" headers="r2c1-t572 r1c2-t572">The timestamp <code dir="ltr">string</code> or <code dir="ltr">UString</code> to be converted to a <code dir="ltr">Timestamp</code> object.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t572" headers="r1c1-t572">
<pre dir="ltr">fmt
</pre></td>
<td class="cellalignment2205" headers="r3c1-t572 r1c2-t572">The format string.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t572" headers="r1c1-t572">
<pre dir="ltr">nlsParam
</pre></td>
<td class="cellalignment2205" headers="r4c1-t572 r1c2-t572">The NLS parameters string. If <code dir="ltr">nlsParam</code> is specified, this determines the NLS parameters to be used for the conversion. If <code dir="ltr">nlsParam</code> is not specified, the NLS parameters are picked up from <code dir="ltr">envp</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t572" headers="r1c1-t572">
<pre dir="ltr">env
</pre></td>
<td class="cellalignment2205" headers="r5c1-t572 r1c2-t572">The OCCI environment. In globalization enabled version of the method, used to determine <code dir="ltr">NLS_CALENDAR</code> for interpreting <code dir="ltr">timestampStr</code>. If <code dir="ltr">env</code> is not passed, the environment associated with the object controls the setting. Should be a non-<code dir="ltr">NULL</code> value if called on a <code dir="ltr">NULL</code> <code dir="ltr">Timestamp</code> object.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21856" class="refsect2"><a id="i1094829"></a>
<h2 class="refsect2">getDate()</h2>
<p>Returns the year, month and day values of the <code dir="ltr">Timestamp</code>.</p>
<p class="subhead1"><a id="LNCPP21857"></a>Syntax</p>
<pre dir="ltr">void getDate(
   int &amp;year,
   unsigned int &amp;month,
   unsigned int &amp;day) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getDate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t573">Parameter</th>
<th class="cellalignment2204" id="r1c2-t573">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t573" headers="r1c1-t573">
<pre dir="ltr">year
</pre></td>
<td class="cellalignment2205" headers="r2c1-t573 r1c2-t573">Year component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t573" headers="r1c1-t573">
<pre dir="ltr">month
</pre></td>
<td class="cellalignment2205" headers="r3c1-t573 r1c2-t573">Month component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t573" headers="r1c1-t573">
<pre dir="ltr">day
</pre></td>
<td class="cellalignment2205" headers="r4c1-t573 r1c2-t573">Day component.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21858" class="refsect2"><a id="i1079289"></a>
<h2 class="refsect2">getTime()</h2>
<p>Returns the hour, minute, second, and fractional second components</p>
<p class="subhead1"><a id="LNCPP21859"></a>Syntax</p>
<pre dir="ltr">void getTime(
   unsigned int &amp;hour,
   unsigned int &amp;minute,
   unsigned int &amp;second,
   unsigned int &amp;fs) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getTime() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t574">Parameter</th>
<th class="cellalignment2204" id="r1c2-t574">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t574" headers="r1c1-t574">
<pre dir="ltr">hour
</pre></td>
<td class="cellalignment2205" headers="r2c1-t574 r1c2-t574">Hour component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t574" headers="r1c1-t574">
<pre dir="ltr">minute
</pre></td>
<td class="cellalignment2205" headers="r3c1-t574 r1c2-t574">Minute component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t574" headers="r1c1-t574">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r4c1-t574 r1c2-t574">Second component.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t574" headers="r1c1-t574">
<pre dir="ltr">fs
</pre></td>
<td class="cellalignment2205" headers="r5c1-t574 r1c2-t574">Fractional second component.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21860" class="refsect2"><a id="i1079296"></a>
<h2 class="refsect2">getTimeZoneOffset()</h2>
<p>Returns the time zone offset in hours and minutes.</p>
<p class="subhead1"><a id="LNCPP21861"></a>Syntax</p>
<pre dir="ltr">void getTimeZoneOffset(
   int &amp;hour,
   int &amp;minute) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getTimeZoneOffset() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t575">Parameter</th>
<th class="cellalignment2204" id="r1c2-t575">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t575" headers="r1c1-t575">
<pre dir="ltr">hour
</pre></td>
<td class="cellalignment2205" headers="r2c1-t575 r1c2-t575">Time zone hour.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t575" headers="r1c1-t575">
<pre dir="ltr">minute
</pre></td>
<td class="cellalignment2205" headers="r3c1-t575 r1c2-t575">Time zone minute.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21862" class="refsect2"><a id="i1094802"></a>
<h2 class="refsect2">intervalAdd()</h2>
<p>Adds an interval to timestamp.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of intervalAdd() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t576">Syntax</th>
<th class="cellalignment2204" id="r1c2-t576">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t576" headers="r1c1-t576">
<pre dir="ltr">const Timestamp intervalAdd(
   const IntervalDS&amp; val) const;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t576 r1c2-t576">Adds an IntervalDS interval to the timestamp.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t576" headers="r1c1-t576">
<pre dir="ltr">const Timestamp intervalAdd(
   const IntervalYM&amp; val) const;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t576 r1c2-t576">Adds an IntervalYM interval to the timestamp.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of intervalAdd() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t577">Parameter</th>
<th class="cellalignment2204" id="r1c2-t577">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t577" headers="r1c1-t577">
<pre dir="ltr">val
</pre></td>
<td class="cellalignment2205" headers="r2c1-t577 r1c2-t577">Interval to be added.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21863" class="refsect2"><a id="i1094814"></a>
<h2 class="refsect2">intervalSub()</h2>
<p>Subtracts an interval from a timestamp and returns the result as a timestamp. Returns a <code dir="ltr">Timestamp</code> with the value of this - <code dir="ltr">val</code>.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of intervalSub() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t578">Syntax</th>
<th class="cellalignment2204" id="r1c2-t578">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t578" headers="r1c1-t578">
<pre dir="ltr">const Timestamp intervalSub(
   const IntervalDS&amp; val) const;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t578 r1c2-t578">Subtracts an <code dir="ltr">IntervalDS</code> interval to the timestamp.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t578" headers="r1c1-t578">
<pre dir="ltr">const Timestamp intervalsUB(
   const IntervalYM&amp; val) const;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t578 r1c2-t578">Subtracts an <code dir="ltr">IntervalYM</code> interval to the timestamp.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of intervalSub() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t579">Parameter</th>
<th class="cellalignment2204" id="r1c2-t579">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t579" headers="r1c1-t579">
<pre dir="ltr">val
</pre></td>
<td class="cellalignment2205" headers="r2c1-t579 r1c2-t579">Interval to be subtracted.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21864" class="refsect2"><a id="i1094846"></a>
<h2 class="refsect2">isNull()</h2>
<p>Returns <code dir="ltr">TRUE</code> if <code dir="ltr">Timestamp</code> is <code dir="ltr">NULL</code> or <code dir="ltr">FALSE</code> otherwise.</p>
<p class="subhead1"><a id="LNCPP21865"></a>Syntax</p>
<pre dir="ltr">bool isNull() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21866" class="refsect2"><a id="i1094854"></a>
<h2 class="refsect2">operator=()</h2>
<p>Assigns a given timestamp object to this object.</p>
<p class="subhead1"><a id="LNCPP21867"></a>Syntax</p>
<pre dir="ltr">Timestamp &amp; operator=(
   const Timestamp &amp;src);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t580">Parameter</th>
<th class="cellalignment2204" id="r1c2-t580">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t580" headers="r1c1-t580">
<pre dir="ltr">src
</pre></td>
<td class="cellalignment2205" headers="r2c1-t580 r1c2-t580">Value to be assigned.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21868" class="refsect2"><a id="i1079327"></a>
<h2 class="refsect2">operator==()</h2>
<p>Compares the timestamps specified. If the timestamps are equal, returns <code dir="ltr">TRUE</code>, <code dir="ltr">FALSE</code> otherwise. If either <code dir="ltr">a</code> or <code dir="ltr">b</code> is <code dir="ltr">NULL</code> then <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21869"></a>Syntax</p>
<pre dir="ltr">bool operator==(
   const Timestamp &amp;first,
   const Timestamp &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator==() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t581">Parameter</th>
<th class="cellalignment2204" id="r1c2-t581">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t581" headers="r1c1-t581">
<pre dir="ltr">first
</pre></td>
<td class="cellalignment2205" headers="r2c1-t581 r1c2-t581">First timestamp to be compared.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t581" headers="r1c1-t581">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r3c1-t581 r1c2-t581">Second timestamp to be compared.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21870" class="refsect2"><a id="i1108012"></a>
<h2 class="refsect2">operator!=()</h2>
<p>Compares the timestamps specified. If the timestamps are not equal then <code dir="ltr">TRUE</code> is returned; otherwise, <code dir="ltr">FALSE</code> is returned. If either timestamp is <code dir="ltr">NULL</code> then <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21871"></a>Syntax</p>
<pre dir="ltr">bool operator!=(
   const Timestamp &amp;first,
   const Timestamp &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator!=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t582">Parameter</th>
<th class="cellalignment2204" id="r1c2-t582">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t582" headers="r1c1-t582">
<pre dir="ltr">first
</pre></td>
<td class="cellalignment2205" headers="r2c1-t582 r1c2-t582">First timestamp to be compared.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t582" headers="r1c1-t582">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r3c1-t582 r1c2-t582">Second timestamp to be compared.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21872" class="refsect2"><a id="i1094869"></a>
<h2 class="refsect2">operator&gt;()</h2>
<p>Returns <code dir="ltr">TRUE</code> if <code dir="ltr">first</code> is greater than <code dir="ltr">second</code>, <code dir="ltr">FALSE</code> otherwise. If either is <code dir="ltr">NULL</code> then <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21873"></a>Syntax</p>
<pre dir="ltr">bool operator&gt;(
   const Timestamp &amp;first,
   const Timestamp &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator&gt;() method" summary="parameters" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t583">Parameter</th>
<th class="cellalignment2204" id="r1c2-t583">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t583" headers="r1c1-t583">
<pre dir="ltr">first
</pre></td>
<td class="cellalignment2205" headers="r2c1-t583 r1c2-t583">First timestamp to be compared.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t583" headers="r1c1-t583">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r3c1-t583 r1c2-t583">Second timestamp to be compared.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21874" class="refsect2"><a id="i1108046"></a>
<h2 class="refsect2">operator&gt;=()</h2>
<p>Compares the timestamps specified. If the <code dir="ltr">first</code> timestamp is greater than or equal to the <code dir="ltr">second</code> timestamp then <code dir="ltr">TRUE</code> is returned; otherwise, <code dir="ltr">FALSE</code> is returned. If either timestamp is <code dir="ltr">NULL</code> then <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21875"></a>Syntax</p>
<pre dir="ltr">bool operator&gt;=(
   const Timestamp &amp;first,
   const Timestamp &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator&gt;=() method" summary="parameters" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t584">Parameter</th>
<th class="cellalignment2204" id="r1c2-t584">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t584" headers="r1c1-t584">
<pre dir="ltr">first
</pre></td>
<td class="cellalignment2205" headers="r2c1-t584 r1c2-t584">First timestamp to be compared.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t584" headers="r1c1-t584">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r3c1-t584 r1c2-t584">Second timestamp to be compared.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21876" class="refsect2"><a id="i1094763"></a>
<h2 class="refsect2">operator&lt;()</h2>
<p>Returns <code dir="ltr">TRUE</code> if <code dir="ltr">first</code> is less than <code dir="ltr">second</code>, <code dir="ltr">FALSE</code> otherwise. If either <code dir="ltr">a</code> or <code dir="ltr">b</code> is <code dir="ltr">NULL</code> then <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21877"></a>Syntax</p>
<pre dir="ltr">bool operator&lt;(
   const Timestamp &amp;first,
   const Timestamp &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator&lt;() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t585">Parameter</th>
<th class="cellalignment2204" id="r1c2-t585">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t585" headers="r1c1-t585">
<pre dir="ltr">first
</pre></td>
<td class="cellalignment2205" headers="r2c1-t585 r1c2-t585">First timestamp to be compared.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t585" headers="r1c1-t585">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r3c1-t585 r1c2-t585">Second timestamp to be compared.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21878" class="refsect2"><a id="i1108061"></a>
<h2 class="refsect2">operator&lt;=()</h2>
<p>Compares the timestamps specified. If the first timestamp is less than or equal to the second timestamp then <code dir="ltr">TRUE</code> is returned; otherwise, <code dir="ltr">FALSE</code> is returned. If either timestamp is <code dir="ltr">NULL</code> then <code dir="ltr">FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21879"></a>Syntax</p>
<pre dir="ltr">bool operator&lt;=(
   const Timestamp &amp;first,
   const Timestamp &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator&lt;=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t586">Parameter</th>
<th class="cellalignment2204" id="r1c2-t586">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t586" headers="r1c1-t586">
<pre dir="ltr">first
</pre></td>
<td class="cellalignment2205" headers="r2c1-t586 r1c2-t586">First timestamp to be compared.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t586" headers="r1c1-t586">
<pre dir="ltr">second
</pre></td>
<td class="cellalignment2205" headers="r3c1-t586 r1c2-t586">Second timestamp to be compared.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21880" class="refsect2"><a id="i1094877"></a>
<h2 class="refsect2">setDate()</h2>
<p>Sets the year, month, day components contained for this timestamp</p>
<p class="subhead1"><a id="LNCPP21881"></a>Syntax</p>
<pre dir="ltr">void setDate(
   int year,
   unsigned int month,
   unsigned int day);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setDate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t587">Parameter</th>
<th class="cellalignment2204" id="r1c2-t587">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t587" headers="r1c1-t587">
<pre dir="ltr">year
</pre></td>
<td class="cellalignment2205" headers="r2c1-t587 r1c2-t587">Year component. Valid values are -4713 through 9999.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t587" headers="r1c1-t587">
<pre dir="ltr">month
</pre></td>
<td class="cellalignment2205" headers="r3c1-t587 r1c2-t587">Month component. Valid values are 1 through 12.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t587" headers="r1c1-t587">
<pre dir="ltr">day
</pre></td>
<td class="cellalignment2205" headers="r4c1-t587 r1c2-t587">Day component. Valid values are 1 through 31.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21882" class="refsect2"><a id="i1079334"></a>
<h2 class="refsect2">setNull()</h2>
<p>Sets the timestamp to <code dir="ltr">NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21883"></a>Syntax</p>
<pre dir="ltr">void setNull();
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21884" class="refsect2"><a id="CACEDCFC"></a>
<h2 class="refsect2">setTime()</h2>
<p>Sets the day, hour, minute, second and fractional second components for this timestamp.</p>
<p class="subhead1"><a id="LNCPP21885"></a>Syntax</p>
<pre dir="ltr">void setTime(
   unsigned int hour,
   unsigned int minute,
   unsigned int second,
   unsigned int fs);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setTime() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t588">Parameter</th>
<th class="cellalignment2204" id="r1c2-t588">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t588" headers="r1c1-t588">hour</td>
<td class="cellalignment2205" headers="r2c1-t588 r1c2-t588">Hour component. Valid values are 0 through 23.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t588" headers="r1c1-t588">minute</td>
<td class="cellalignment2205" headers="r3c1-t588 r1c2-t588">Minute component. Valid values are 0 through 59.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t588" headers="r1c1-t588">second</td>
<td class="cellalignment2205" headers="r4c1-t588 r1c2-t588">Second component. Valid values are 0 through 59.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t588" headers="r1c1-t588">fs</td>
<td class="cellalignment2205" headers="r5c1-t588 r1c2-t588">Fractional second component.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21886" class="refsect2"><a id="i1079341"></a>
<h2 class="refsect2">setTimeZoneOffset()</h2>
<p>Sets the hour and minute offset for time zone.</p>
<p class="subhead1"><a id="LNCPP21887"></a>Syntax</p>
<pre dir="ltr">void setTimeZoneOffset(
   int hour,
   int minute);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of setTimeZoneOffset() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t589">Parameter</th>
<th class="cellalignment2204" id="r1c2-t589">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t589" headers="r1c1-t589">hour</td>
<td class="cellalignment2205" headers="r2c1-t589 r1c2-t589">Time zone hour. Valid values are -12 through 12.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t589" headers="r1c1-t589">minute</td>
<td class="cellalignment2205" headers="r3c1-t589 r1c2-t589">Time zone minute. Valid values are -59 through 59.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21888" class="refsect2"><a id="i1079391"></a>
<h2 class="refsect2">subDS()</h2>
<p>Computes the difference between this timestamp and the specified timestamp and return the difference as an <code dir="ltr">IntervalDS</code>.</p>
<p class="subhead1"><a id="LNCPP21889"></a>Syntax</p>
<pre dir="ltr">const IntervalDS subDS(
   const Timestamp&amp; val) const; 
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of subDS() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t590">Parameter</th>
<th class="cellalignment2204" id="r1c2-t590">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t590" headers="r1c1-t590">val</td>
<td class="cellalignment2205" headers="r2c1-t590 r1c2-t590">Timestamp to be subtracted.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21890" class="refsect2"><a id="i1094892"></a>
<h2 class="refsect2">subYM()</h2>
<p>Computes the difference between timestamp values and return the difference as an <code dir="ltr">IntervalYM</code>.</p>
<p class="subhead1"><a id="LNCPP21891"></a>Syntax</p>
<pre dir="ltr">const IntervalYM subYM(
   const Timestamp&amp; val) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of subYM() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t591">Parameter</th>
<th class="cellalignment2204" id="r1c2-t591">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t591" headers="r1c1-t591">
<pre dir="ltr">val
</pre></td>
<td class="cellalignment2205" headers="r2c1-t591 r1c2-t591"><code dir="ltr">Timestamp</code> to be subtracted.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21892" class="refsect2"><a id="i1094912"></a>
<h2 class="refsect2">toText()</h2>
<p>Returns a <code dir="ltr">string</code> or <code dir="ltr">UString</code> representation for the timestamp in the format specified.</p>
<p>If <code dir="ltr">nlsParam</code> is specified, this determines the NLS parameters used for the conversion. If <code dir="ltr">nlsParam</code> is not specified, the NLS parameters are picked up from the environment associated with the instance, if any.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information on <a class="olink SQLRF06132" href="../SQLRF/functions219.htm#SQLRF06132"><code dir="ltr">TO_DATE</code></a></div>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of toTextt() method" summary="First column lists method versions; second column provides description of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t593">Syntax</th>
<th class="cellalignment2204" id="r1c2-t593">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t593" headers="r1c1-t593">
<pre dir="ltr">string toText(
   const string &amp;fmt,
   unsigned int fsprec,
   const string &amp;nlsParam = &#34;&#34;) const;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t593 r1c2-t593">Returns a <code dir="ltr">string</code> representation for the timestamp in the format specified.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t593" headers="r1c1-t593">
<pre dir="ltr">UString toText(
   const UString &amp;fmt,
   unsigned int fsprec,
   const UString &amp;nlsParam) const;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t593 r1c2-t593">Returns a <code dir="ltr">UString</code> representation for the timestamp in the format specified; globalization enabled.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of toText() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t594">Parameter</th>
<th class="cellalignment2204" id="r1c2-t594">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t594" headers="r1c1-t594">
<pre dir="ltr">fmt
</pre></td>
<td class="cellalignment2205" headers="r2c1-t594 r1c2-t594">The format string.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t594" headers="r1c1-t594">
<pre dir="ltr">fsprec
</pre></td>
<td class="cellalignment2205" headers="r3c1-t594 r1c2-t594">The precision for the fractional second component of <code dir="ltr">Timestamp</code>.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t594" headers="r1c1-t594">
<pre dir="ltr">nlsParam
</pre></td>
<td class="cellalignment2205" headers="r4c1-t594 r1c2-t594">The <code dir="ltr">NLS</code> parameters string. If <code dir="ltr">nlsParam</code> is specified, this determines the NLS parameters to be used for the conversion. If <code dir="ltr">nlsParam</code> is not specified, the <code dir="ltr">NLS</code> parameters are picked up from <code dir="ltr">envp</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<!-- class="chapter" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2196">
<tr>
<td class="cellalignment2205">
<table class="cellalignment2201">
<tr>
<td class="cellalignment2200"><a href="reference032.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2208">
<table class="cellalignment2199">
<tr>
<td class="cellalignment2200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>