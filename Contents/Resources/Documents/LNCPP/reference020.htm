<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73923"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/MetaData%20Class"></a><title>MetaData Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1082"/>
<meta name="dcterms.created" content="2016-06-01T12:8:12Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="C++ Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48221-07"/>
<meta name="dcterms.isVersionOf" content="LNCPP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="reference019.htm" title="Previous" type="text/html"/>
<link rel="Next" href="reference021.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48221-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">40/54</span> <!-- End Header --><a id="i1079046"></a>
<div id="LNCPP1014" class="refsect1">
<h1 class="refsect1">MetaData<a id="sthref831"></a><a id="sthref832"></a><a id="sthref833"></a> Class</h1>
<p>A <code dir="ltr">MetaData</code> object can be used to describe the types and properties of the columns in a <code dir="ltr">ResultSet</code> or the existing schema objects in the database. It also provides information about the database as a whole. The enumerated values of MetaData are in <a href="#BBAJJDDG">Table 13-27</a>, and the summary of its methods is in <a href="#BBAFBGEH">Table 13-28</a>.</p>
<div id="LNCPP21185" class="tblformal">
<p class="titleintable"><a id="sthref834"></a><a id="BBAJJDDG"></a>Table 13-27 Enumerated Values Used by MetaData Class</p>
<table class="cellalignment2203" title="Enumerated Values Used by MetaData Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t280">Attribute</th>
<th class="cellalignment2204" id="r1c2-t280">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t280" headers="r1c1-t280">
<pre dir="ltr"><a id="BBAHIAFC"></a><a id="BBAGAJGH"></a>
ParamType
</pre></td>
<td class="cellalignment2205" headers="r2c1-t280 r1c2-t280">
<p>The parameter types for objects are:</p>
<ul>
<li>
<p><a id="BBAIFGIA"></a><code dir="ltr">PTYPE_ARG</code> is the argument of a function or procedure.</p>
</li>
<li>
<p><a id="BBAGIEAF"></a><code dir="ltr">PTYPE_COL</code> is the column of a table or view.</p>
</li>
<li>
<p><a id="BBAHCJBB"></a><code dir="ltr">PTYPE_DATABASE</code> is the database.</p>
</li>
<li>
<p><a id="BBAGBIHB"></a><code dir="ltr">PTYPE_FUNC</code> is the function.</p>
</li>
<li>
<p><a id="BBAGAAFD"></a><code dir="ltr">PTYPE_PKG</code> is the package.</p>
</li>
<li>
<p><a id="BBACHFAH"></a><code dir="ltr">PTYPE_PROC</code> is the procedure.</p>
</li>
<li>
<p><a id="BBAHIFBF"></a><code dir="ltr">PTYPE_SCHEMA</code> is the schema.</p>
</li>
<li>
<p><a id="BBAHIBEJ"></a><code dir="ltr">PTYPE_SEQ</code> is the sequence.</p>
</li>
<li>
<p><a id="BBADEBID"></a><code dir="ltr">PTYPE_SYN</code> is the synonym.</p>
</li>
<li>
<p><a id="BBABCHIH"></a><code dir="ltr">PTYPE_TABLE</code> is the table.</p>
</li>
<li>
<p><a id="BBACCDHE"></a><code dir="ltr">PTYPE_TYPE</code> is the type.</p>
</li>
<li>
<p><a id="BBAIHEAD"></a><code dir="ltr">PTYPE_TYPE_ARG</code> is the argument of a type method.</p>
</li>
<li>
<p><a id="BBABDFJD"></a><code dir="ltr">PTYPE_TYPE_ATTR</code> is the attribute of a type.</p>
</li>
<li>
<p><a id="BBAGBFJD"></a><code dir="ltr">PTYPE_TYPE_COLL</code> is the collection type information.</p>
</li>
<li>
<p><a id="BBAICHEH"></a><code dir="ltr">PTYPE_TYPE_METHOD</code> is the method of a type.</p>
</li>
<li>
<p><a id="BBAHDFDG"></a><code dir="ltr">PTYPE_TYPE_RESULT</code> is the results of a method.</p>
</li>
<li>
<p><code dir="ltr">PTYPE_UNK</code> is the object of an unknown type.</p>
</li>
<li>
<p><a id="BBAHEFAD"></a><code dir="ltr">PTYPE_VIEW</code> is the view.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> common to all parameters</p>
</td>
<td class="cellalignment2205" headers="r3c1-t280 r1c2-t280">
<p>Attributes of all parameters:</p>
<ul>
<li>
<p><code dir="ltr">ATTR_OBJ_ID</code> is the object or schema id.</p>
</li>
<li>
<p><code dir="ltr">ATTR_OBJ_NAME</code> is either the database name, or the object name in a schema.</p>
</li>
<li>
<p><code dir="ltr">ATTR_OBJ_SCHEMA</code> is the name of the schema describing the object.</p>
</li>
<li>
<p><code dir="ltr">ATTR_PTYPE</code> is the type of information described by a parameter, <a href="#BBAHIAFC">ParamType</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_TIMESTAMP</code> is the timestamp of an object.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Tables and Views</p>
</td>
<td class="cellalignment2205" headers="r4c1-t280 r1c2-t280">
<p>Parameters for a table or view (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBABCHIH">PTYPE_TABLE</a> and <a href="#BBAHEFAD">PTYPE_VIEW</a>) have the following type-specific attributes:</p>
<ul>
<li>
<p><code dir="ltr">ATTR_OBJID</code> is the object id</p>
</li>
<li>
<p><code dir="ltr">ATTR_NUM_COLS</code> is the number of columns</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_COLUMNS</code> is the column list</p>
</li>
<li>
<p><code dir="ltr">ATTR_REF_TDO</code> is the <code dir="ltr">REF</code> to the <code dir="ltr">TDO</code> of the base type in case of extent tables</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_TEMPORARY</code> indicates the table is temporary</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_TYPED</code> indicates the table is typed</p>
</li>
<li>
<p><code dir="ltr">ATTR_DURATION</code> is the duration of a temporary table. Values can be <a href="#BBABEBDF">DURATION_SESSION</a>, <a href="#BBAHECDA">DURATION_TRANS</a>, and <a href="#BBAICGCH">DURATION_NULL</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Tables only</p>
</td>
<td class="cellalignment2205" headers="r5c1-t280 r1c2-t280">
<p>Parameters for a tables only (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBABCHIH">PTYPE_TABLE</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_RDBA</code> indicates the data block address of the segment header</p>
</li>
<li>
<p><code dir="ltr">ATTR_TABLESPACE</code> indicates the tablespace the table resides in</p>
</li>
<li>
<p><code dir="ltr">ATTR_CLUSTERED</code> indicates the table is clustered</p>
</li>
<li>
<p><code dir="ltr">ATTR_PARTITIONED</code> indicates the table is partitioned</p>
</li>
<li>
<p><code dir="ltr">ATTR_INDEX_ONLY</code> indicates the table is index-only</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Functions and Procedures</p>
</td>
<td class="cellalignment2205" headers="r6c1-t280 r1c2-t280">
<p>Parameters for functions and procedures (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAGBIHB">PTYPE_FUNC</a> and <a href="#BBACHFAH">PTYPE_PROC</a>, respectively):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code> indicates the argument list</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_INVOKER_RIGHTS</code> indicates the procedure or function has invoker&#39;s rights</p>
</li>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the name of the procedure or function</p>
</li>
<li>
<p><code dir="ltr">ATTR_OVERLOAD_ID</code> indicates the overloading ID number, relevant when the procedure or function is part of a class and it is overloaded; values returned may be different from direct query of a PL/SQL function or procedure</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Packages</p>
</td>
<td class="cellalignment2205" headers="r7c1-t280 r1c2-t280">
<p>Parameters for packages (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAGAAFD">PTYPE_PKG</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_LIST_SUBPROGRAMS</code> indicates the subprogram list</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_INVOKER_RIGHTS</code> indicates the procedure or function has invoker&#39;s rights</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Types</p>
</td>
<td class="cellalignment2205" headers="r8c1-t280 r1c2-t280">
<p>Parameter is for types (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBACCDHE">PTYPE_TYPE</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_REF_TDO</code> indicates the in-memory <code dir="ltr">REF</code> of the type descriptor for the type, if the column type is an object type. If space has not been reserved, then it is allocated implicitly in the cache. The caller can then pin the object.</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPECODE</code> indicates the data type code</p>
</li>
<li>
<p><code dir="ltr">ATTR_COLLECTION_TYPECODE</code> indicates the typecode of collection, if type is collection</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_INCOMPLETE_TYPE</code> indicates that this is an incomplete type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_SYSTEM_TYPE</code> indicates that this is a system generated type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_PREDEFINED_TYPE</code> indicates that this is a predefined type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_TRANSIENT_TYPE</code> indicates that this is a transient type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_SYSTEM_GENERATED_TYPE</code> indicates that this is a system generated type</p>
</li>
<li>
<p><code dir="ltr">ATTR_HAS_NESTED_TABLE</code> indicates that this type contains a nested table attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_HAS_LOB</code> indicates that this type contains a <code dir="ltr">LOB</code> attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_HAS_FILE</code> indicates that this type contains a <code dir="ltr">BFILE</code> attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_COLLECTION_ELEMENT</code> indicates a reference to a collection element</p>
</li>
<li>
<p><code dir="ltr">ATTR_NUM_TYPE_ATTRS</code> indicates the number of type attributes</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_TYPE_ATTRS</code> indicates the list of type attributes</p>
</li>
<li>
<p><code dir="ltr">ATTR_NUM_TYPE_METHODS</code> indicates the number of type methods</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_TYPE_METHODS</code> indicates the list of type methods</p>
</li>
<li>
<p><code dir="ltr">ATTR_MAP_METHOD</code> indicates the map method of the type</p>
</li>
<li>
<p><code dir="ltr">ATTR_ORDER_METHOD</code> indicates the order method of the type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_INVOKER_RIGHTS</code> indicates the type has invoker&#39;s rights</p>
</li>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the type attribute name</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCHEMA_NAME</code> indicates the schema where the type is created</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_FINAL_TYPE</code> indicates this is a final type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_INSTANTIABLE_TYPE</code> indicates this is an instantiable type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_SUBTYPE</code> indicates this is a subtype</p>
</li>
<li>
<p><code dir="ltr">ATTR_SUPERTYPE_SCHEMA_NAME</code> indicates the name of the schema that contains the supertype</p>
</li>
<li>
<p><code dir="ltr">ATTR_SUPERTYPE_NAME</code> indicates the name of the supertype</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Type Attributes</p>
</td>
<td class="cellalignment2205" headers="r9c1-t280 r1c2-t280">
<p>Parameter is for attributes of types (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBABDFJD">PTYPE_TYPE_ATTR</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_DATA_SIZE</code> indicates the maximum size of the type attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPECODE</code> indicates the data type code</p>
</li>
<li>
<p><code dir="ltr">ATTR_DATA_TYPE</code> indicates the data type of the type attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the name of the procedure or function</p>
</li>
<li>
<p><code dir="ltr">ATTR_PRECISION</code> indicates the precision of numeric type attributes.</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCALE</code> indicates the scale of the numeric type attributes</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPE_NAME</code> indicates a type name</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCHEMA_NAME</code> indicates the name of the schema where the type has been created</p>
</li>
<li>
<p><code dir="ltr">ATTR_REF_TDO</code> indicates the in-memory <code dir="ltr">REF</code> of the type, if the column type is an object type. If the space has not been reserved, it is allocated implicitly in the cache. The caller can then pin the object.</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_ID</code> indicates the characterset ID</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_FORM</code> indicates the characterset form</p>
</li>
<li>
<p><code dir="ltr">ATTR_FSPRECISION</code> indicates the fractional seconds precision of a <code dir="ltr">Timestamp</code>, <code dir="ltr">IntervalDS</code> or <code dir="ltr">IntervalYM</code></p>
</li>
<li>
<p><code dir="ltr">ATTR_LFPRECISION</code> indicates the leading field precision of an <code dir="ltr">IntervalDS</code> or <code dir="ltr">IntervalYM</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Type Methods</p>
</td>
<td class="cellalignment2205" headers="r10c1-t280 r1c2-t280">
<p>Parameter is for methods of types (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAICHEH">PTYPE_TYPE_METHOD</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the name of the procedure or function</p>
</li>
<li>
<p><code dir="ltr">ATTR_ENCAPSULATION</code> indicates the method&#39;s level of encapsulation</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code> indicates the argument list</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_CONSTRUCTOR</code> indicates the method is a constructor</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_DESTRUCTOR</code> indicates the method is a destructor</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_OPERATOR</code> indicates the method is an operator</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_SELFISH</code> indicates the method is selfish</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_MAP</code> indicates the method is a map method</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_ORDER</code> indicates the method is an order method</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_RNDS</code> indicates that the method is in &#34;read no data&#34; state</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_RNPS</code> indicates that the method is in a &#34;read no process&#34; state</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_WNDS</code> indicates that the method is in &#34;write no data&#34; state</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_WNPS</code> indicates that the method is in &#34;write no process&#34; state</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_FINAL_METHOD</code> indicates that this is a final method</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_INSTANTIABLE_METHOD</code> indicates that this is an instantiable method</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_OVERRIDING_METHOD</code> indicates that this is an overriding method</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Collections</p>
</td>
<td class="cellalignment2205" headers="r11c1-t280 r1c2-t280">
<p>Parameter is for collections (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAGBFJD">PTYPE_TYPE_COLL</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_DATA_SIZE</code> indicates ...</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPECODE</code> indicates ...</p>
</li>
<li>
<p><code dir="ltr">ATTR_DATA_TYPE</code> indicates the data type of the type attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_NUM_ELEMS</code> indicates the number of elements in a collection</p>
</li>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the name of the type attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_PRECISION</code> indicates the precision of a numeric attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCALE</code> indicates the scale of a numeric attribute</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPE_NAME</code> indicates the type name</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCHEMA_NAME</code> indicates the schema where the type has been created</p>
</li>
<li>
<p><code dir="ltr">ATTR_REF_TDO</code> indicates the in-memory <code dir="ltr">REF</code> of the type, if the column type is an object type. If the space has not been reserved, it is allocated implicitly in the cache. The caller can then pin the object.</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_ID</code> indicates the characterset id</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_FORM</code> indicates the characterset form</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_IDENTITY</code> indicates that the column may be auto-incremented</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Synonyms</p>
</td>
<td class="cellalignment2205" headers="r12c1-t280 r1c2-t280">
<p>Parameter is for synonyms (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBADEBID">PTYPE_SYN</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_OBJID</code> indicates the object id</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCHEMA_NAME</code> indicates the schema name of the synonym translation</p>
</li>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates a <code dir="ltr">NULL</code>-terminated object name of the synonym translation</p>
</li>
<li>
<p><code dir="ltr">ATTR_LINK</code> indicates a <code dir="ltr">NULL-</code>terminated database link name of the synonym installation</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Sequences</p>
</td>
<td class="cellalignment2205" headers="r13c1-t280 r1c2-t280">
<p>Parameter is for sequences (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAHIBEJ">PTYPE_SEQ</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_OBJID</code> indicates the object id</p>
</li>
<li>
<p><code dir="ltr">ATTR_MIN</code> indicates the minimum value</p>
</li>
<li>
<p><code dir="ltr">ATTR_MAX</code> indicates the maximum value</p>
</li>
<li>
<p><code dir="ltr">ATTR_INCR</code> indicates the increment</p>
</li>
<li>
<p><code dir="ltr">ATTR_CACHE</code> indicates the number of sequence numbers cached; 0 if the sequence is not cached</p>
</li>
<li>
<p><code dir="ltr">ATTR_ORDER</code> indicates whether the sequence is ordered</p>
</li>
<li>
<p><code dir="ltr">ATTR_HW_MARK</code> indicates the &#34;high-water mark&#34;</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Columns</p>
</td>
<td class="cellalignment2205" headers="r14c1-t280 r1c2-t280">
<p>Parameter is for columns of tables or views (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAGIEAF">PTYPE_COL</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_CHAR_USED</code> indicates the type of length semantics of the column. <code dir="ltr">0</code> means byte-length semantics and <code dir="ltr">1</code> means character-length semantics.</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHAR_SIZE</code> indicates the column character length, or number of characters allowed in a column</p>
</li>
<li>
<p><code dir="ltr">ATTR_DATA_SIZE</code> indicates the maximum size of a column, or number of bytes allowed in a column</p>
</li>
<li>
<p><code dir="ltr">ATTR_DATA_TYPE</code> indicates the data type of the column</p>
</li>
</ul>
<ul>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the column name</p>
</li>
</ul>
<ul>
<li>
<p><code dir="ltr">ATTR_PRECISION</code> indicates the precision of numeric columns</p>
</li>
</ul>
<ul>
<li>
<p><code dir="ltr">ATTR_SCALE</code> indicates the scale of numeric columns</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_NULL</code> indicates <code dir="ltr">0</code> if <code dir="ltr">NULL</code> values are not permitted for the column</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPE_NAME</code> indicates a type name</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCHEMA_NAME</code> indicates the schema where the type was created</p>
</li>
<li>
<p><code dir="ltr">ATTR_REF_TDO</code> indicates the <code dir="ltr">REF</code> for the type, if the column is of object type</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_ID</code> indicates the characterset ID</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_FORM</code> indicates the characterset form</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Arguments and Results</p>
</td>
<td class="cellalignment2205" headers="r15c1-t280 r1c2-t280">
<p>Parameter for arguments of a procedure or function (<a href="#BBAIFGIA">PTYPE_ARG</a>), a method (<a href="#BBAIHEAD">PTYPE_TYPE_ARG</a>), or a result (<a href="#BBAHDFDG">PTYPE_TYPE_RESULT</a>)</p>
<ul>
<li>
<p><code dir="ltr">ATTR_NAME</code> indicates the argument name</p>
</li>
<li>
<p><code dir="ltr">ATTR_POSITION</code> indicates the position of the argument in the list</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPECODE</code> indicates the typecode</p>
</li>
<li>
<p><code dir="ltr">ATTR_DATA_TYPE</code> indicates the data type</p>
</li>
<li>
<p><code dir="ltr">ATTR_DATA_SIZE</code> indicates the size of the data type</p>
</li>
<li>
<p><code dir="ltr">ATTR_PRECISION</code> indicates the precision of a numeric argument</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCALE</code> indicates the scale of a numeric argument</p>
</li>
<li>
<p><code dir="ltr">ATTR_LEVEL</code> indicates the data type level</p>
</li>
<li>
<p><code dir="ltr">ATTR_HAS_DEFAULT</code> indicates whether an argument has a default</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code> indicates the list of arguments at the next level, for records or table types</p>
</li>
<li>
<p><code dir="ltr">ATTR_IOMODE</code> indicates the argument mode: <code dir="ltr">0</code> for <code dir="ltr">IN</code>, <code dir="ltr">1</code> for <code dir="ltr">OUT</code>, <code dir="ltr">2</code> for <code dir="ltr">IN/OUT</code></p>
</li>
<li>
<p><code dir="ltr">ATTR_RADIX</code> indicates the radix of a number type</p>
</li>
<li>
<p><code dir="ltr">ATTR_IS_NULL</code> indicates <code dir="ltr">0</code> if <code dir="ltr">NULL</code> values are not permitted</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPE_NAME</code> indicates the type name</p>
</li>
<li>
<p><code dir="ltr">ATTR_SCHEMA_NAME</code> indicates the schema name where the type was created</p>
</li>
<li>
<p><code dir="ltr">ATTR_SUB_NAME</code> indicates the type name for package local types</p>
</li>
<li>
<p><code dir="ltr">ATTR_LINK</code> indicates a <code dir="ltr">NULL-</code>terminated database link name where the type is defined, for package local types when the package is remote</p>
</li>
<li>
<p><code dir="ltr">ATTR_REF_TDO</code> is the <code dir="ltr">REF</code> to the <code dir="ltr">TDO</code> of the type if the argument is an object</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_ID</code> indicates the characterset ID</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_FORM</code> indicates the characterset form</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Schemas</p>
</td>
<td class="cellalignment2205" headers="r16c1-t280 r1c2-t280">
<p>Parameter is for schemas (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAHIFBF">PTYPE_SCHEMA</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_LIST_OBJECTS</code> indicates the list of objects in the schema</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Lists</p>
</td>
<td class="cellalignment2205" headers="r17c1-t280 r1c2-t280">
<p>Parameter is for list of columns, arguments or subprograms:</p>
<ul>
<li>
<p><code dir="ltr">ATTR_LIST_COLUMNS</code> indicates a column list</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code> indicates a procedure or function argument list</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_SUBPROGRAMS</code> indicates a subprogram list</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_TYPE_ATTRIBS</code> indicates a type attribute list</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPE_METHODS</code> indicates a type method list</p>
</li>
<li>
<p><code dir="ltr">ATTR_TYPE_OBJECTS</code> indicates a list of objects in a schema</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_SCHEMAS</code> indicates a list of schemas in a database</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t280" headers="r1c1-t280">
<p><code dir="ltr">AttrId</code> for Databases</p>
</td>
<td class="cellalignment2205" headers="r18c1-t280 r1c2-t280">
<p>Parameter is for list of columns, arguments or subprograms (<a href="#BBAGAJGH">ParamType</a> of <a href="#BBAHCJBB">PTYPE_DATABASE</a>):</p>
<ul>
<li>
<p><code dir="ltr">ATTR_VERSION</code> indicates the database version</p>
</li>
<li>
<p><code dir="ltr">ATTR_CHARSET_ID</code> indicates the characterset ID of the database</p>
</li>
<li>
<p><code dir="ltr">ATTR_NCHARSET_ID</code> indicates the national characterset of the database</p>
</li>
<li>
<p><code dir="ltr">ATTR_LIST_SCHEMAS</code> indicates the list of schemas, <a href="#BBAHIFBF">PTYPE_SCHEMA</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_MAX_PROC_LEN</code> indicates the maximum length of a procedure name</p>
</li>
<li>
<p><code dir="ltr">ATTR_MAX_COLUMN_LEN</code> indicates the maximum length of a column name</p>
</li>
<li>
<p><code dir="ltr">ATTR_CURSOR_COMMIT_BEHAVIOR</code> indicates how a commit affects cursors and prepared statements. Values can be <a href="#BBAHJJHJ">CURSOR_OPEN</a> and <a href="#BBAJDHHE">CURSER_CLOSED</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_MAX_CATALOG_NAMELEN</code> indicates the maximum length of a database (catalog) name</p>
</li>
<li>
<p><code dir="ltr">ATTR_CATALOG_LOCATION</code> indicates the position of the catalog in a qualified table. Values can be <a href="#BBAJIICC">CL_START</a> and <a href="#BBAGFDIC">CL_END</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_SAVEPOINT_SUPPORT</code> indicates whether the database supports savepoints. Values can be <a href="#BBAHAFBF">SP_SUPPORTED</a> and <a href="#BBABJHHG">SP_UNSUPPORTED</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_NOWAIT_SUPPORT</code> indicates whether the database supports the &#34;no wait&#34; condition. Values can be <a href="#BBAJEIDF">NW_SUPPORTED</a> and <a href="#BBABDCBJ">NW_UNSUPPORTED</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_AUTOCOMMIT_DDL</code> indicates if an autocommit mode is required for DDL statements. Values can be <a href="#BBAGIDCE">AC_DDL</a> and <a href="#BBAIDGGG">NO_AC_DDL</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
<li>
<p><code dir="ltr">ATTR_LOCKING_MODE</code> indicates the locking mode for the database. Values can be <a href="#BBACDIJI">LOCK_IMMEDIATE</a> and <a href="#BBAHAFAC">LOCK_DELAYED</a>, as defined for attribute <a href="#BBAFDABH">AttrValues</a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r19c1-t280" headers="r1c1-t280">
<pre dir="ltr"><a id="BBAIBJGE"></a><a id="BBAFDABH"></a>
AttrValues
</pre></td>
<td class="cellalignment2205" headers="r19c1-t280 r1c2-t280">
<p>Attribute values are returned on executing a <code dir="ltr">get</code><code dir="ltr"><span class="codeinlineitalic">xxx</span></code><code dir="ltr">()</code> method and passing in an attribute, for which these are the results:</p>
<ul>
<li>
<p><a id="BBABEBDF"></a><code dir="ltr">DURATION_SESSION</code> is the duration of a temporary table: session.</p>
</li>
<li>
<p><a id="BBAHECDA"></a><code dir="ltr">DURATION_TRANS</code> is the duration of a temporary table: transaction.</p>
</li>
<li>
<p><a id="BBAICGCH"></a><code dir="ltr">DURATION_NULL</code> is the duration of a temporary table: table not temporary.</p>
</li>
<li>
<p><code dir="ltr">TYPEENCAP_PRIVATE</code> is the encapsulation level of the method: private.</p>
</li>
<li>
<p><code dir="ltr">TYPEENCAP_PUBLIC</code> is the encapsulation level of the method: public.</p>
</li>
<li>
<p><code dir="ltr">TYPEPARAM_IN</code> is the argument mode: <code dir="ltr">IN</code>.</p>
</li>
<li>
<p><code dir="ltr">TYPEPARAM_OUT</code> is the argument mode: <code dir="ltr">OUT</code>.</p>
</li>
<li>
<p><code dir="ltr">TYPEPARAM_INOUT</code> is the argument mode: <code dir="ltr">IN/OUT</code>.</p>
</li>
<li>
<p><a id="BBAHJJHJ"></a><code dir="ltr">CURSOR_OPEN</code> is the effect of <code dir="ltr">COMMIT</code> operation on cursors and prepared statements in the database: preserve cursor state as before the <code dir="ltr">COMMIT</code> operation.</p>
</li>
<li>
<p><a id="BBAJDHHE"></a><code dir="ltr">CURSER_CLOSED</code> is the effect of <code dir="ltr">COMMIT</code> operation on cursors and prepared statements in the database: cursors are closed on <code dir="ltr">COMMIT</code>, but the application can still rerun the statement without preparing it again.</p>
</li>
<li>
<p><a id="BBAJIICC"></a><code dir="ltr">CL_START</code> is the position of the catalog in a qualified table: start.</p>
</li>
<li>
<p><a id="BBAGFDIC"></a><code dir="ltr">CL_END</code> is the position of the catalog in a qualified table: end.</p>
</li>
<li>
<p><a id="BBAHAFBF"></a><code dir="ltr">SP_SUPPORTED</code> is the database supports savepoints.</p>
</li>
<li>
<p><a id="BBABJHHG"></a><code dir="ltr">SP_UNSUPPORTED</code> is the database does not support savepoints.</p>
</li>
<li>
<p><a id="BBAJEIDF"></a><code dir="ltr">NW_SUPPORTED</code> is the database supports nowait clause.</p>
</li>
<li>
<p><a id="BBABDCBJ"></a><code dir="ltr">NW_UNSUPPORTED</code> is the database does not supports nowait clause.</p>
</li>
<li>
<p><a id="BBAGIDCE"></a><code dir="ltr">AC_DDL</code> is the autocommit mode required for DDL statements.</p>
</li>
<li>
<p><a id="BBAIDGGG"></a><code dir="ltr">NO_AC_DDL</code> is the autocommit mode not required for DDL statements.</p>
</li>
<li>
<p><a id="BBACDIJI"></a><code dir="ltr">LOCK_IMMEDIATE</code> is the locking mode for the database: immediate.</p>
</li>
<li>
<p><a id="BBAHAFAC"></a><code dir="ltr">LOCK_DELAYED</code> is the locking mode for the database: delayed.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r20c1-t280" headers="r1c1-t280">
<p><code dir="ltr">ColumnAttrId</code></p>
</td>
<td class="cellalignment2205" headers="r20c1-t280 r1c2-t280">
<p>Attributes for column identity enable automatic increment support. Possible values are:</p>
<ul>
<li>
<p><code dir="ltr">ATTR_COL_IS_IDENTITY</code> is <code dir="ltr">true</code> when column is an identity column.</p>
</li>
<li>
<p><code dir="ltr">ATTR_COL_IS_GEN_ALWAYS</code> is <code dir="ltr">true</code> when the column is always generated.</p>
</li>
<li>
<p><code dir="ltr">ATTR_COL_IS_GEN_BY_DEF_ON_NULL</code> is <code dir="ltr">true</code> when the identity column is generated by default on <code dir="ltr">null</code>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP21186" class="tblformal">
<p class="titleintable"><a id="sthref835"></a><a id="BBAFBGEH"></a>Table 13-28 <a id="sthref836"></a><a id="sthref837"></a>Summary of MetaData Methods</p>
<table class="cellalignment2203" title="Summary of MetaData Methods" summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t281">Method</th>
<th class="cellalignment2204" id="r1c2-t281">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t281" headers="r1c1-t281">
<p><a href="#i1147108">MetaData()</a></p>
</td>
<td class="cellalignment2205" headers="r2c1-t281 r1c2-t281">
<p><code dir="ltr">MetaData</code> class constructor.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t281" headers="r1c1-t281">
<p><a href="#i1070855">getAttributeCount()</a></p>
</td>
<td class="cellalignment2205" headers="r3c1-t281 r1c2-t281">
<p>Gets the count of the attribute as a <code dir="ltr">MetaData</code> object</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t281" headers="r1c1-t281">
<p><a href="#i1070862">getAttributeId()</a></p>
</td>
<td class="cellalignment2205" headers="r4c1-t281 r1c2-t281">
<p>Gets the ID of the specified attribute</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t281" headers="r1c1-t281">
<p><a href="#i1070873">getAttributeType()</a></p>
</td>
<td class="cellalignment2205" headers="r5c1-t281 r1c2-t281">
<p>Gets the type of the specified attribute.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t281" headers="r1c1-t281">
<p><a href="#i1070883">getBoolean()</a></p>
</td>
<td class="cellalignment2205" headers="r6c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a C++ <code dir="ltr">boolean</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t281" headers="r1c1-t281">
<p><a href="#i1070894">getInt()</a></p>
</td>
<td class="cellalignment2205" headers="r7c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a C++ <code dir="ltr">int</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t281" headers="r1c1-t281">
<p><a href="#i1070904">getMetaData()</a></p>
</td>
<td class="cellalignment2205" headers="r8c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a <code dir="ltr">MetaData</code> object</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t281" headers="r1c1-t281">
<p><a href="#i1070914">getNumber()</a></p>
</td>
<td class="cellalignment2205" headers="r9c1-t281 r1c2-t281">
<p>Returns the specified attribute as a <code dir="ltr">Number</code> object.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t281" headers="r1c1-t281">
<p><a href="#i1070924">getRef()</a></p>
</td>
<td class="cellalignment2205" headers="r10c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a <code dir="ltr">Ref&lt;T&gt;</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t281" headers="r1c1-t281">
<p><a href="#i1070935">getString()</a></p>
</td>
<td class="cellalignment2205" headers="r11c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a string.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t281" headers="r1c1-t281">
<p><a href="#i1070945">getTimeStamp()</a></p>
</td>
<td class="cellalignment2205" headers="r12c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a <code dir="ltr">Timestamp</code> object</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t281" headers="r1c1-t281">
<p><a href="#i1070955">getUInt()</a></p>
</td>
<td class="cellalignment2205" headers="r13c1-t281 r1c2-t281">
<p>Gets the value of the attribute as a C++ <code dir="ltr">unsigned int</code>.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t281" headers="r1c1-t281">
<p><a href="#CHEIFCGH">getUString()</a></p>
</td>
<td class="cellalignment2205" headers="r14c1-t281 r1c2-t281">
<p>Returns the value of the attribute as a <code dir="ltr">UString</code> in the character set associated with the metadata.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t281" headers="r1c1-t281">
<p><a href="#i1070965">getVector()</a></p>
</td>
<td class="cellalignment2205" headers="r15c1-t281 r1c2-t281">
<p>Gets the value of the attribute as an C++ vector.</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t281" headers="r1c1-t281">
<p><a href="#i1104737">operator=()</a></p>
</td>
<td class="cellalignment2205" headers="r16c1-t281 r1c2-t281">
<p>Assigns one metadata object to another.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP21187" class="refsect2"><a id="i1147108"></a>
<h2 class="refsect2">MetaData()</h2>
<p><code dir="ltr">MetaData</code> class constructor.</p>
<p class="subhead1"><a id="LNCPP21188"></a>Syntax</p>
<pre dir="ltr">MetaData(
   const MetaData &amp;omd);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of MetaData() constructor" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t282">Parameter</th>
<th class="cellalignment2204" id="r1c2-t282">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t282" headers="r1c1-t282">
<pre dir="ltr">cmd
</pre></td>
<td class="cellalignment2205" headers="r2c1-t282 r1c2-t282">The source that the <code dir="ltr">MetaData</code> object is copied from.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21189" class="refsect2"><a id="i1070855"></a>
<h2 class="refsect2">getAttributeCount()</h2>
<p>This method returns the number of attributes related to the metadata object.</p>
<p class="subhead1"><a id="LNCPP21190"></a>Syntax</p>
<pre dir="ltr">unsigned int getAttributeCount() const;
</pre></div>
<!-- class="refsect2" -->
<div id="LNCPP21191" class="refsect2"><a id="i1070862"></a>
<h2 class="refsect2">getAttributeId()</h2>
<p>This method returns the attribute ID, such as <code dir="ltr">ATTR_NUM_COLS</code>, of the attribute represented by the attribute number specified.</p>
<p class="subhead1"><a id="LNCPP21192"></a>Syntax</p>
<pre dir="ltr">AttrId getAttributeId(
   unsigned int attributeNum) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getAttributeId() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t283">Parameter</th>
<th class="cellalignment2204" id="r1c2-t283">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t283" headers="r1c1-t283">
<pre dir="ltr">attributeNum
</pre></td>
<td class="cellalignment2205" headers="r2c1-t283 r1c2-t283">The number of the attribute for which the attribute ID is to be returned.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21193" class="refsect2"><a id="i1070873"></a>
<h2 class="refsect2">getAttributeType()</h2>
<p>This method returns the attribute type, such as <code dir="ltr">NUMBER</code> or <code dir="ltr">INT</code>, of the attribute represented by attribute number specified.</p>
<p class="subhead1"><a id="LNCPP21194"></a>Syntax</p>
<pre dir="ltr">Type getAttributeType(
   unsigned int attributeNum) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getAttributeType() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t284">Parameter</th>
<th class="cellalignment2204" id="r1c2-t284">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t284" headers="r1c1-t284">
<pre dir="ltr">attributeNum
</pre></td>
<td class="cellalignment2205" headers="r2c1-t284 r1c2-t284">The number of the attribute for which the attribute type is to be returned.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21195" class="refsect2"><a id="i1070883"></a>
<h2 class="refsect2">getBoolean()</h2>
<p>This method returns the value of the attribute as a C++ <code dir="ltr">boolean</code>. If the value is a SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">FALSE</code>. The overloaded version returns the value of the column attribute.</p>
<div class="inftblinformal">
<table class="cellalignment2206" title="versions of Number() constructor" summary="First column lists versions of the constructor; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t285">Syntax</th>
<th class="cellalignment2204" id="r1c2-t285">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t285" headers="r1c1-t285">
<pre dir="ltr">bool getBoolean(
   MetaData::AttrId attributeId) const;
</pre></td>
<td class="cellalignment2205" headers="r2c1-t285 r1c2-t285">Returns the value of the attribute.</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t285" headers="r1c1-t285">
<pre dir="ltr">bool getBoolean(
   MetaData::ColumnAttrId colAttributeId) const;
</pre></td>
<td class="cellalignment2205" headers="r3c1-t285 r1c2-t285">Returns the value of the column attribute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getBoolean() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t286">Parameter</th>
<th class="cellalignment2204" id="r1c2-t286">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t286" headers="r1c1-t286">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t286 r1c2-t286">The attribute ID</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t286" headers="r1c1-t286">
<pre dir="ltr">colAttributeId
</pre></td>
<td class="cellalignment2205" headers="r3c1-t286 r1c2-t286">The column attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21197" class="refsect2"><a id="i1070894"></a>
<h2 class="refsect2">getInt()</h2>
<p>This method returns the value of the attribute as a C++ <code dir="ltr">int</code>. If the value is SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">0</code>.</p>
<p class="subhead1"><a id="LNCPP21198"></a>Syntax</p>
<pre dir="ltr">int getInt(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getInt() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t287">Parameter</th>
<th class="cellalignment2204" id="r1c2-t287">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t287" headers="r1c1-t287">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t287 r1c2-t287">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21199" class="refsect2"><a id="i1070904"></a>
<h2 class="refsect2">getMetaData()</h2>
<p>This method returns a <code dir="ltr">MetaData</code> instance holding the attribute value. A metadata attribute value can be retrieved as a <code dir="ltr">MetaData</code> instance. This method can only be called on attributes of the metadata type.</p>
<p class="subhead1"><a id="LNCPP21200"></a>Syntax</p>
<pre dir="ltr">MetaData getMetaData(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getMetaData() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t288">Parameter</th>
<th class="cellalignment2204" id="r1c2-t288">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t288" headers="r1c1-t288">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t288 r1c2-t288">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21201" class="refsect2"><a id="i1070914"></a>
<h2 class="refsect2">getNumber()</h2>
<p>This method returns the value of the attribute as a <code dir="ltr">Number</code> object. If the value is a SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21202"></a>Syntax</p>
<pre dir="ltr">Number getNumber(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getNumber() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t289">Parameter</th>
<th class="cellalignment2204" id="r1c2-t289">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t289" headers="r1c1-t289">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t289 r1c2-t289">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21203" class="refsect2"><a id="i1070924"></a>
<h2 class="refsect2">getRef()</h2>
<p>This method returns the value of the attribute as a <code dir="ltr">RefAny</code>, or <code dir="ltr">Ref</code> to a <code dir="ltr">TDO</code>. If the value is SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21204"></a>Syntax</p>
<pre dir="ltr">RefAny getRef(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getRef() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t290">Parameter</th>
<th class="cellalignment2204" id="r1c2-t290">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t290" headers="r1c1-t290">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t290 r1c2-t290">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21205" class="refsect2"><a id="i1070935"></a>
<h2 class="refsect2">getString()</h2>
<p>This method returns the value of the attribute as a string. If the value is SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21206"></a>Syntax</p>
<pre dir="ltr">string getString(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getString() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t291">Parameter</th>
<th class="cellalignment2204" id="r1c2-t291">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t291" headers="r1c1-t291">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t291 r1c2-t291">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21207" class="refsect2"><a id="i1070945"></a>
<h2 class="refsect2">getTimeStamp()</h2>
<p>This method returns the value of the attribute as a <code dir="ltr">Timestamp</code> object. If the value is a SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21208"></a>Syntax</p>
<pre dir="ltr">Timestamp getTimestamp(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getTimeStamp() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t292">Parameter</th>
<th class="cellalignment2204" id="r1c2-t292">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t292" headers="r1c1-t292">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t292 r1c2-t292">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21209" class="refsect2"><a id="i1070955"></a>
<h2 class="refsect2">getUInt()</h2>
<p>This method returns the value of the attribute as a C++ unsigned <code dir="ltr">int</code>. If the value is a SQL <code dir="ltr">NULL</code>, the result is <code dir="ltr">0</code>.</p>
<p class="subhead1"><a id="LNCPP21210"></a>Syntax</p>
<pre dir="ltr">unsigned int getUInt(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getUInt() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t293">Parameter</th>
<th class="cellalignment2204" id="r1c2-t293">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t293" headers="r1c1-t293">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t293 r1c2-t293">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21211" class="refsect2"><a id="CHEIFCGH"></a>
<h2 class="refsect2">getUString()</h2>
<p>Returns the value of an attribute as a <code dir="ltr">UString</code> in the character set associated with the metadata.</p>
<p class="subhead1"><a id="LNCPP21212"></a>Syntax</p>
<pre dir="ltr">UString getUString(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getUString() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t294">Parameter</th>
<th class="cellalignment2204" id="r1c2-t294">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t294" headers="r1c1-t294">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t294 r1c2-t294">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21213" class="refsect2"><a id="i1070965"></a>
<h2 class="refsect2">getVector()</h2>
<p>This method returns a C++ vector containing the attribute value. A collection attribute value can be retrieved as a C++ vector instance. This method can only be called on attributes of a list type.</p>
<p class="subhead1"><a id="LNCPP21214"></a>Syntax</p>
<pre dir="ltr">vector&lt;MetaData&gt; getVector(
   MetaData::AttrId attributeId) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of getVector() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t295">Parameter</th>
<th class="cellalignment2204" id="r1c2-t295">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t295" headers="r1c1-t295">
<pre dir="ltr">attributeId
</pre></td>
<td class="cellalignment2205" headers="r2c1-t295 r1c2-t295">The attribute ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="LNCPP21215" class="refsect2"><a id="i1104737"></a>
<h2 class="refsect2">operator=()</h2>
<p>This method assigns one <code dir="ltr">MetaData</code> object to another. This increments the reference count of the <code dir="ltr">MetaData</code> object that is assigned.</p>
<p class="subhead1"><a id="LNCPP21216"></a>Syntax</p>
<pre dir="ltr">void operator=(
   const MetaData &amp;omd);
</pre>
<div class="inftblinformal">
<table class="cellalignment2206" title="parameters of operator=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t296">Parameter</th>
<th class="cellalignment2204" id="r1c2-t296">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t296" headers="r1c1-t296">
<pre dir="ltr">cmd
</pre></td>
<td class="cellalignment2205" headers="r2c1-t296 r1c2-t296">MetaData object to be assigned</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2196">
<tr>
<td class="cellalignment2205">
<table class="cellalignment2201">
<tr>
<td class="cellalignment2200"><a href="reference019.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2200"><a href="reference021.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2208">
<table class="cellalignment2199">
<tr>
<td class="cellalignment2200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>