<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-73897"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Metadata"></a><title>Metadata</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1082"/>
<meta name="dcterms.created" content="2016-06-01T12:8:10Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="C++ Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48221-07"/>
<meta name="dcterms.isVersionOf" content="LNCPP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="types.htm" title="Previous" type="text/html"/>
<link rel="Next" href="lobs.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48221-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/54</span> <!-- End Header -->
<div id="LNCPP006" class="chapter"><a id="CIACHFEI"></a> <a id="i1000982"></a>
<h1 class="chapter"><span class="secnum">6</span> Metadata</h1>
<p>This chapter describes how to retrieve metadata about result sets or the database as a whole.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1006288">Overview of Metadata</a></p>
</li>
<li>
<p><a href="#BGBFADJJ">Identity Column Metadata</a></p>
</li>
<li>
<p><a href="#i1005289">Describing Database Metadata</a></p>
</li>
<li>
<p><a href="#i1005294">Attribute Reference</a></p>
</li>
</ul>
<a id="i1006288"></a>
<div id="LNCPP20275" class="sect1">
<h2 class="sect1">Overview of M<a id="sthref464"></a>etadata</h2>
<p>Database objects have various attributes that describe them; you can obtain information about a particular schema object by performing a <code dir="ltr">DESCRIBE</code> operation. The result can be accessed as an object of the <code dir="ltr">Metadata</code> class by passing object attributes as arguments to the various methods of the <code dir="ltr">Metadata</code> class.</p>
<p>You can perform an explicit <code dir="ltr">DESCRIBE</code> operation on the database as a whole, on the types and properties of the columns contained in a <code dir="ltr">ResultSet</code> class, or on any of the following schema and subschema objects, such as tables, types, sequences, views, type attributes, columns, procedures, type methods, arguments, functions, collections, results, packages, synonyms, and lists</p>
<p>You must specify the type of the attribute you are looking for. By using the <code dir="ltr">getAttributeCount()</code>, <code dir="ltr">getAttributeId()</code>, and <code dir="ltr">getAttributeType()</code> methods of the <code dir="ltr">MetaData</code> class, you can scan through each available attribute.</p>
<p>All <code dir="ltr">DESCRIBE</code> information is cached until the last reference to it is deleted. Users are in this way prevented from accidentally trying to access <code dir="ltr">DESCRIBE</code> information that is freed.</p>
<p>You obtain metadata by calling the <code dir="ltr">getMetaData()</code> method on the <code dir="ltr">Connection</code> class in case of an explicit describe, or by calling the <code dir="ltr">getColumnListMetaData()</code> method on the <code dir="ltr">ResultSet</code> class to get the metadata of the result set columns. Both methods return a <code dir="ltr">MetaData</code> object with the describing information. The <code dir="ltr">MetaData</code> class provides the <code dir="ltr">get</code><code dir="ltr"><span class="codeinlineitalic">xxx</span></code><code dir="ltr">()</code> methods to access this information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="reference020.htm#BBAJJDDG">Table 13-27, &#34;Enumerated Values Used by MetaData Class&#34;</a></div>
<p>When performing <code dir="ltr">DESCRIBE</code> operations, be aware of the following issues:</p>
<ul>
<li>
<p>The <code dir="ltr">ATTR_TYPECODE</code> returns type codes that represent the type supplied when you created a new type by using the <code dir="ltr">CREATE</code> <code dir="ltr">TYPE</code> statement. These type codes are of the enumerated type <code dir="ltr">TypeCode</code>, which are represented by <code dir="ltr">OCCI_TYPECODE</code> constants. Internal PL/SQL types (boolean, indexed table) are not supported</p>
</li>
<li>
<p>The <code dir="ltr">ATTR_DATA_TYPE</code> returns types that represent the data types of the database columns. These values are of enumerated type <code dir="ltr">Type</code>. For example, <code dir="ltr">LONG</code> types return <code dir="ltr">OCCI_SQLT_LNG</code> types.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BGBFADJJ"></a>
<div id="LNCPP21912" class="sect1">
<h2 class="sect1"><a id="sthref465"></a>Identity Column Metadata</h2>
<p>Starting with Oracle Database Release 12<span class="italic">c</span>, columns may be created as identity columns. When new rows are inserted into tables, the values for these columns are generated automatically.</p>
<p>This feature adds a new <code dir="ltr">ColumnAttrId enum</code> to the <a href="reference020.htm#i1079046">MetaData Class</a> (see <a href="reference020.htm#BBAJJDDG">Table 13-27</a>), and an overloaded form of <a href="reference020.htm#i1070883">getBoolean()</a> method in the <a href="reference020.htm#i1079046">MetaData Class</a>. <a href="#BGBIFEHF">Example 6-1</a> shows how to use this feature.</p>
<div id="LNCPP21922" class="example">
<p class="titleinexample"><a id="BGBIFEHF"></a>Example 6-1 How to use Identity Column Metadata</p>
<pre dir="ltr">vector&lt;MetaData&gt; v1;
MetaData metaData = conn-&gt;getMetaData(tableName);
columnCount = metaData.getInt(MetaData::ATTR_NUM_COLS);
cout &lt;&lt; &#34;Number of Columns : &#34; &lt;&lt; columnCount &lt;&lt; endl;

v1 =  metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

for(int i=0; i &lt; v1.size(); i++) {
   MetaData md = v1[i];
   colNames[i] = md.getString(MetaData::ATTR_NAME);
   size[i] =  md.getInt(MetaData::ATTR_DATA_SIZE);
   precision[i] = md.getInt(MetaData::ATTR_PRECISION);
   scale[i] =  md.getInt(MetaData::ATTR_SCALE);

   if ( md.getBoolean(MetaData::ATTR_IS_NULL) )
      strcpy (isnull[i], &#34;YES&#34;);
   else
      strcpy (isnull[i], &#34;NO&#34;);

   if (md.getBoolean(MetaData::ATTR_COL_IS_IDENTITY))
      strcpy (isIdentity[i], &#34;YES&#34;);
   else
      strcpy (isIdentity[i], &#34;NO&#34;);

   if ( md.getBoolean(MetaData::ATTR_COL_IS_GEN_ALWAYS))
      strcpy (isGenAlways[i], &#34;YES&#34;);
   else
      strcpy (isGenAlways[i], &#34;NO&#34;);

   if (md.getBoolean(MetaData::ATTR_COL_IS_GEN_BY_DEF_ON_NULL))
      strcpy (isGenOnNull[i], &#34;YES&#34;);
   else
      strcpy (isGenOnNull[i], &#34;NO&#34;);
}

cout &lt;&lt; &#34;\n columnName  isNull   isIdentity   isGenAlways&#34;  &lt;&lt; &#34;  isGenOnNull &#34; 
   &lt;&lt; endl;
cout &lt;&lt;&#34;---------------------------------------------------------&#34; &lt;&lt; endl;

for(int i=0; i &lt; columnCount; ++i) {
   cout &lt;&lt; &#34;   &#34; &lt;&lt; colNames[i] &lt;&lt; &#34;  &#34;;
   printf(&#34;%10s%10s%12s%12s\n&#34;, isnull[i], isIdentity[i], isGenAlways[i],
      isGenOnNull[i]);
}
</pre></div>
<!-- class="example" -->
<p>For more information, see <a class="olink DRDAA109" href="../DRDAA/migr_tools_feat.htm#DRDAA109"><span class="italic">Oracle Database Migration Guide</span></a>, and <a class="olink SQLRF55657" href="../SQLRF/statements_7002.htm#SQLRF55657"><span class="italic">Oracle Database SQL Language Reference</span></a>. Additionally, see the changes to <a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a>:</p>
<ul>
<li>
<p>A new <code dir="ltr">IDENTITY_COLUMN</code> column for views <a class="olink REFRN20277" href="../REFRN/GUID-F218205C-7D76-4A83-8691-BFD2AD372B63.htm#REFRN20277"><code dir="ltr">ALL_TAB_COLUMNS</code></a>, <a class="olink REFRN23277" href="../REFRN/GUID-91F945AE-5778-45A6-A07E-775A006A9AA1.htm#REFRN23277"><code dir="ltr">DBA_TAB_COLUMNS</code></a>, <a class="olink REFRN26277" href="../REFRN/GUID-7DAA74E5-E165-49C8-9D4B-5701C876C28B.htm#REFRN26277"><code dir="ltr">USER_TAB_COLUMNS</code></a>, <a class="olink REFRN20276" href="../REFRN/GUID-85036F42-140A-406B-BE11-0AC49A00DBA3.htm#REFRN20276"><code dir="ltr">ALL_TAB_COLS</code></a>, <a class="olink REFRN23276" href="../REFRN/GUID-857C32FD-AE30-4AB9-811B-AC3A7B91A04D.htm#REFRN23276"><code dir="ltr">DBA_TAB_COLS</code></a>, and <a class="olink REFRN26276" href="../REFRN/GUID-B6443C20-7450-4D1A-8E35-7546C1137B92.htm#REFRN26276"><code dir="ltr">USER_TAB_COLS</code></a></p>
</li>
<li>
<p>A new <code dir="ltr">HAS_IDENTITY</code> column for views <a class="olink REFRN20286" href="../REFRN/GUID-6823CD28-0681-468E-950B-966C6F71325D.htm#REFRN20286"><code dir="ltr">ALL_TABLES</code></a>, <a class="olink REFRN23286" href="../REFRN/GUID-480A67CD-39FD-40B8-9395-164E92E439E6.htm#REFRN23286"><code dir="ltr">DBA_TABLES</code></a>, and <a class="olink REFRN26286" href="../REFRN/GUID-564CEA73-E79E-4664-AC32-0CBAB817CF5A.htm#REFRN26286"><code dir="ltr">USER_TABLES</code></a></p>
</li>
<li>
<p>The new views <a class="olink REFRN20830" href="../REFRN/GUID-2791B728-3670-4960-BEEE-EA750981C0DF.htm#REFRN20830"><code dir="ltr">ALL_TAB_IDENTITY_COLS</code></a>, <a class="olink REFRN23830" href="../REFRN/GUID-5B1E89F7-6AED-4425-93F6-48CA47D887B5.htm#REFRN23830"><code dir="ltr">DBA_TAB_IDENTITY_COLS</code></a>, and <a class="olink REFRN26830" href="../REFRN/GUID-BED8F54C-4AC8-47FF-89F7-F6C950F4CAD2.htm#REFRN26830"><code dir="ltr">USER_TAB_IDENTITY_COLS</code></a>, which display a table&#39;s identity column properties</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1005289"></a>
<div id="LNCPP20277" class="sect1">
<h2 class="sect1">Describing Datab<a id="sthref466"></a>ase Metadata</h2>
<p>Describing database metadata is equivalent to an explicit <code dir="ltr">DESCRIBE</code> operation. The object to describe must be an object in the schema. In describing a type, you call the <code dir="ltr">getMetaData()</code> method from the connection, passing the name of the object or a <code dir="ltr">RefAny</code> object. You must first initialize the environment in the <code dir="ltr">OBJECT</code> mode. The <code dir="ltr">getMetaData()</code> method returns an object of type <code dir="ltr">MetaData</code>. Each type of <code dir="ltr">MetaData</code> object has a list of attributes that are part of the describe tree. The describe tree can then be traversed recursively to point to subtrees that contain more information. More information about an object can be obtained by calling the <code dir="ltr">get</code><code dir="ltr"><span class="codeinlineitalic">xxx</span></code><code dir="ltr">()</code> methods.</p>
<p>If you must construct a browser that describes the database and its objects recursively, then you can access information regarding the number of attributes for each object in the database (including the database), the attribute ID listing, and the attribute types listing. By using this information, you can recursively traverse the describe tree from the top node (the database) to the columns in the tables, the attributes of a type, the parameters of a procedure or function, and so on.</p>
<p>For example, consider the typical case of describing a table and its contents. You call the <code dir="ltr">getMetaData()</code> method from the connection, passing the name of the table to be described. The <code dir="ltr">MetaData</code> object returned contains the table information. Because you are aware of the type of the object you want to describe (table, column, type, collection, function, procedure, and so on), you can obtain the attribute list. You can retrieve the value into a variable of the type specified in the table by calling the corresponding <code dir="ltr">get</code><code dir="ltr"><span class="codeinlineitalic">xxx</span></code><code dir="ltr">()</code> method.</p>
<div id="LNCPP20278" class="tblformal">
<p class="titleintable"><a id="sthref467"></a><a id="g1015055"></a>Table 6-1 Attribute Gro<a id="sthref468"></a>upings</p>
<table class="cellalignment2203" title="Attribute Groupings " summary="First column lists attribute types; second column provides description of these attribute types." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t3">Attribute Type</th>
<th class="cellalignment2204" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t3" headers="r1c1-t3">
<p><a id="sthref469"></a><a href="#i1001465">Parameter Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r2c1-t3 r1c2-t3">
<p>Attri<a id="sthref470"></a>butes belonging to all elements</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#i1008968">Table and View Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r3c1-t3 r1c2-t3">
<p>Attr<a id="sthref471"></a>ibutes belonging to tables and views</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#i1002632">Procedure, Function, and Subprogram Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r4c1-t3 r1c2-t3">
<p>Attr<a id="sthref472"></a>ibutes belonging to procedures, functions, and package subprograms</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#i1001477">Package Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r5c1-t3 r1c2-t3">
<p>Attri<a id="sthref473"></a>butes belonging to packages</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#i1001481">Type Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r6c1-t3 r1c2-t3">
<p>Att<a id="sthref474"></a>ributes belonging to types</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#i1001485">Type Attribute Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r7c1-t3 r1c2-t3">
<p>Attributes belonging to type attributes<a id="sthref475"></a></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#i1001489">Type Method Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r8c1-t3 r1c2-t3">
<p>Attr<a id="sthref476"></a>ibutes belonging to type methods</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#i1001493">Collection Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r9c1-t3 r1c2-t3">
<p>Attrib<a id="sthref477"></a>utes belonging to collection types</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#i1001497">Synonym Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r10c1-t3 r1c2-t3">
<p>Attri<a id="sthref478"></a>butes belonging to synonyms</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#i1001501">Sequence Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r11c1-t3 r1c2-t3">
<p>Attr<a id="sthref479"></a>ibutes belonging to sequences</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#i1001505">Column Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r12c1-t3 r1c2-t3">
<p>Attri<a id="sthref480"></a>butes belonging to columns of tables or views</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#i1001533">Argument and Result Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r13c1-t3 r1c2-t3">
<p>Attri<a id="sthref481"></a>butes belonging to arguments / results</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#i1001537">List Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r14c1-t3 r1c2-t3">
<p>Att<a id="sthref482"></a>ributes that designate the list type</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#i1001541">Schema Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r15c1-t3 r1c2-t3">
<p>A<a id="sthref483"></a>ttributes specific to schemas</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#i1001545">Database Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r16c1-t3 r1c2-t3">
<p>Att<a id="sthref484"></a>ributes specific to databases</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="LNCPP20279" class="sect2"><a id="sthref485"></a>
<h3 class="sect2">Metadata Cod<a id="sthref486"></a>e Examples</h3>
<p>This section provides code examples for using metadata:</p>
<ul>
<li>
<p><a href="#BABEEHDB">Example 6-2, &#34;How to Obtain Metadata About Attributes of a Simple Database Table&#34;</a></p>
</li>
<li>
<p><a href="#BABGCCFE">Example 6-3, &#34;How to Obtain Metadata from a Column Containing User-Defined Types&#34;</a></p>
</li>
<li>
<p><a href="#BABFGDEG">Example 6-4, &#34;How to Obtain Object Metadata from a Reference&#34;</a></p>
</li>
<li>
<p><a href="#BABFEDDJ">Example 6-5, &#34;How to Obtain Metadata About a Select List from a ResultSet Object&#34;</a></p>
</li>
</ul>
<div id="LNCPP20280" class="example">
<p class="titleinexample"><a id="BABEEHDB"></a>Example 6-2 How to Obtain Metadata About Attributes of a Simple Database Table</p>
<p>This example demonstrates how to obtain metadata about attributes of a simple database table:</p>
<pre dir="ltr">/* Create an environment and a connection to the HR database */
.
.
/* Call the getMetaData method on the Connection object obtainedv*/
MetaData emptab_metaData = connection-&gt;getMetaData(
      &#34;EMPLOYEES&#34;, MetaData::PTYPE_TABLE);
/* Now that you have the metadata information on the EMPLOYEES table,
   call the getxxx methods using the appropriate attributes */

/* Call getString */
cout&lt;&lt;&#34;Schema:&#34;&lt;&lt;
              (emptab_metaData.getString(MetaData::ATTR_OBJ_SCHEMA))&lt;&lt;endl;

if(emptab_metaData.getInt(
              emptab_metaData::ATTR_PTYPE)==MetaData::PTYPE_TABLE)
   cout&lt;&lt;&#34;EMPLOYEES is a table&#34;&lt;&lt;endl;
else
    cout&lt;&lt;&#34;EMPLOYEES is not a table&#34;&lt;&lt;endl;

/* Call getInt to get the number of columns in the table */
int columnCount=emptab_metaData.getInt(MetaData::ATTR_NUM_COLS);
cout&lt;&lt;&#34;Number of Columns:&#34;&lt;&lt;columnCount&lt;&lt;endl;

/* Call getTimestamp to get the timestamp of the table object */
Timestamp tstamp = emptab_metaData.getTimestamp(MetaData::ATTR_TIMESTAMP);
/* Now that you have the value of the attribute as a Timestamp object,
   you can call methods to obtain the components of the timestamp */
int year;
unsigned int month, day;
tstamp.getData(year, month, day);

/* Call getVector for attributes of list type, such as ATTR_LIST_COLUMNS */
vector&lt;MetaData&gt;listOfColumns;
listOfColumns=emptab_metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

/* Each of the list elements represents a column metadata,
   so now you can access the column attributes*/
for (int i=0;i&lt;listOfColumns.size();i++
{
   MetaData columnObj=listOfColumns[i];
   cout&lt;&lt;&#34;Column Name:&#34;&lt;&lt;(columnObj.getString(MetaData::ATTR_NAME))&lt;&lt;endl;
   cout&lt;&lt;&#34;Data Type:&#34;&lt;&lt;(columnObj.getInt(MetaData::ATTR_DATA_TYPE))&lt;&lt;endl;
   .
   .
   /* and so on to obtain metadata on other column specific attributes */
}
</pre></div>
<!-- class="example" -->
<div id="LNCPP20281" class="example">
<p class="titleinexample"><a id="BABGCCFE"></a>Example 6-3 How to Obtain Metadata from a Column Containing User-Defined Types</p>
<p>This example demonstrates how to obtain metadata from a column that contains user-defined types database table.</p>
<pre dir="ltr">/* Create an environment and a connection to the HR database */
...
/* Call the getMetaData method on the Connection object obtained */
MetaData custtab_metaData = connection-&gt;getMetaData(
      &#34;CUSTOMERS&#34;, MetaData::PTYPE_TABLE);

/* Have metadata information on CUSTOMERS table; call the getxxx methods */
/* Call getString */
cout&lt;&lt;&#34;Schema:&#34;&lt;&lt;(custtab_metaData.getString(MetaData::ATTR_OBJ_SCHEMA))
     &lt;&lt;endl;
if(custtab_metaData.getInt(custtab_metaData::ATTR_PTYPE)==MetaData::PTYPE_TABLE)
   cout&lt;&lt;&#34;CUSTOMERS is a table&#34;&lt;&lt;endl;
else
   cout&lt;&lt;&#34;CUSTOMERS is not a table&#34;&lt;&lt;endl;

/* Call getVector to obtain list of columns in the CUSTOMERS table */
vector&lt;MetaData&gt;listOfColumns;
listOfColumns=custtab_metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

/* Assuming metadata for column cust_address_typ is fourth element in list*/
MetaData customer_address=listOfColumns[3];

/* Obtain the metadata for the customer_address attribute */
int typcode = customer_address.getInt(MetaData::ATTR_TYPECODE);
if(typcode==OCCI_TYPECODE_OBJECT)
   cout&lt;&lt;&#34;customer_address is an object type&#34;&lt;&lt;endl;
else
   cout&lt;&lt;&#34;customer_address is not an object type&#34;&lt;&lt;endl;

string objectName=customer_address.getString(MetaData::ATTR_OBJ_NAME);

/* Now that you have the name of the address object,
   the metadata of the attributes of the type can be obtained by using
   getMetaData on the connection by passing the object name
*/
MetaData address = connection-&gt;getMetaData(objectName);

/* Call getVector to obtain the list of the address object attributes */
vector&lt;MetaData&gt; attributeList = 
      address.getVector(MetaData::ATT_LIST_TYPE_ATTRS);

/* and so on to obtain metadata on other address object specific attributes */
</pre></div>
<!-- class="example" -->
<div id="LNCPP20282" class="example">
<p class="titleinexample"><a id="BABFGDEG"></a>Example 6-4 How to Obtain Object Metadata from a Reference</p>
<p>This example demonstrates how to obtain metadata about an object when using a reference to it:</p>
<pre dir="ltr">Type ADDRESS(street VARCHAR2(50), city VARCHAR2(20));
Table Person(id NUMBER, addr REF ADDRESS);

/* Create an environment and a connection to the HR database */
.
.
/* Call the getMetaData method on the Connection object obtained */
MetaData perstab_metaData = connection-&gt;getMetaData(
      &#34;Person&#34;, MetaData::PTYPE_TABLE);

/* Now that you have the metadata information on the Person table,
   call the getxxx methods using the appropriate attributes */
/* Call getString */
cout&lt;&lt;&#34;Schema:&#34;&lt;&lt;(perstab_metaData.getString(MetaData::ATTR_OBJ_SCHEMA))&lt;&lt;endl;

if(perstab_metaData.getInt(perstab_metaData::ATTR_PTYPE)==MetaData::PTYPE_TABLE)
   cout&lt;&lt;&#34;Person is a table&#34;&lt;&lt;endl;
else
   cout&lt;&lt;&#34;Person is not a table&#34;&lt;&lt;endl;

/* Call getVector to obtain the list of columns in the Person table*/
vector&lt;MetaData&gt;listOfColumns;
listOfColumns=perstab_metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

/* Each of the list elements represents a column metadata,
   so now get the data type of the column by passing ATTR_DATA_TYPE
   to getInt */
for(int i=0;i&lt;numCols;i++)
{
   int dataType=colList[i].getInt(MetaData::ATTR_DATA_TYPE);
   /* If the data type is a reference, get the Ref and obtain the metadata
      about the object by passing the Ref to getMetaData */
   if(dataType==SQLT_REF)
      RefAny refTdo=colList[i].getRef(MetaData::ATTR_REF_TDO);

   /* Now you can obtain the metadata about the object as shown
   MetaData tdo_metaData=connection-&gt;getMetaData(refTdo);

   /* Now that you have the metadata about the TDO, you can obtain the metadata
      about the object */
}
</pre></div>
<!-- class="example" -->
<div id="LNCPP20283" class="example">
<p class="titleinexample"><a id="BABFEDDJ"></a>Example 6-5 How to Obtain Metadata About a Select List from a ResultSet Object</p>
<p>This example demonstrates how to obtain metadata about a select list from a <code dir="ltr">ResultSet</code>.</p>
<pre dir="ltr">/* Create an environment and a connection to the database */
...
/* Create a statement and associate it with a select clause */
string sqlStmt=&#34;SELECT * FROM EMPLOYEES&#34;;
Statement *stmt=conn-&gt;createStatement(sqlStmt);

/* Execute the statement to obtain a ResultSet */
ResultSet *rset=stmt-&gt;executeQuery();

/* Obtain the metadata about the select list */
vector&lt;MetaData&gt;cmd=rset-&gt;getColumnListMetaData();

/* The metadata is a column list and each element is a column metaData */
int dataType=cmd[i].getInt(MetaData::ATTR_DATA_TYPE);
...
</pre>
<p>The <code dir="ltr">getMetaData</code> method is called for the <code dir="ltr">ATTR_COLLECTION_ELEMENT</code> attribute only.</p>
</div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005294"></a>
<div id="LNCPP20284" class="sect1">
<h2 class="sect1">Attribute <a id="sthref487"></a>Reference</h2>
<p>This section describes the attributes belonging to schema and subschema objects.</p>
<a id="i1001465"></a>
<div id="LNCPP20285" class="sect2">
<h3 class="sect2">Paramet<a id="sthref488"></a>er Attributes</h3>
<p>All elements have some attributes specific to that element and some generic attributes. <a href="#BGBJHFHC">Table 6-2</a> describes the attributes that belong to all elements:</p>
<div id="LNCPP20286" class="tblformalwidemax">
<p class="titleintable"><a id="sthref489"></a><a id="BGBJHFHC"></a>Table 6-2 Attributes that Belong to All Elements</p>
<table class="cellalignment2206" title="Attributes that Belong to All Elements" summary="First column lists attribute typess; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t4">Attribute</th>
<th class="cellalignment2204" id="r1c2-t4">Description</th>
<th class="cellalignment2204" id="r1c3-t4">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">ATTR_OBJ_ID</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t4 r1c2-t4">
<p>Object or schema ID</p>
</td>
<td class="cellalignment2205" headers="r2c1-t4 r1c3-t4">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">ATTR_OBJ_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t4 r1c2-t4">
<p>Object, schema, or database name</p>
</td>
<td class="cellalignment2205" headers="r3c1-t4 r1c3-t4">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t4" headers="r1c1-t4">
<p><code dir="ltr">ATTR_OBJ_SCHEMA</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t4 r1c2-t4">
<p>Schema where object is located</p>
</td>
<td class="cellalignment2205" headers="r4c1-t4 r1c3-t4">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">ATTR_OBJ_PTYPE</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t4 r1c2-t4">
<p>Type of information described by the parameter. Possible values are:</p>
<p><code dir="ltr">PTYPE_TABLE,</code> Table</p>
<p><code dir="ltr">PTYPE_VIEW,</code> View</p>
<p><code dir="ltr">PTYPE_PROC,</code> Procedure</p>
<p><code dir="ltr">PTYPE_FUNC,</code> Function</p>
<p><code dir="ltr">PTYPE_PKG,</code> Package</p>
<p><code dir="ltr">PTYPE_TYPE,</code> Type</p>
<p><code dir="ltr">PTYPE_TYPE_ATTR,</code> Attribute of a type</p>
<p><code dir="ltr">PTYPE_TYPE_COLL,</code> Collection type information</p>
<p><code dir="ltr">PTYPE_TYPE_METHOD,</code> A method of a type</p>
<p><code dir="ltr">PTYPE_SYN,</code> Synonym</p>
<p><code dir="ltr">PTYPE_SEQ,</code> Sequence</p>
<p><code dir="ltr">PTYPE_COL,</code> Column of a table or view</p>
<p><code dir="ltr">PTYPE_ARG,</code> Argument of a function or procedure</p>
<p><code dir="ltr">PTYPE_TYPE_ARG,</code> Argument of a type method</p>
<p><code dir="ltr">PTYPE_TYPE_RESULT,</code> Results of a method</p>
<p><code dir="ltr">PTYPE_SCHEMA,</code> Schema</p>
<p><code dir="ltr">PTYPE_DATABASE,</code> Database</p>
</td>
<td class="cellalignment2205" headers="r5c1-t4 r1c3-t4">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t4" headers="r1c1-t4">
<p><code dir="ltr">ATTR_TIMESTAMP</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t4 r1c2-t4">
<p>The <code dir="ltr">TIMESTAMP</code> of the object this description is based on (Oracle DATE format).</p>
</td>
<td class="cellalignment2205" headers="r6c1-t4 r1c3-t4">
<p><code dir="ltr">Timestamp</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwidemax" -->
<p>The sections that follow list attributes specific to different types of elements.</p>
</div>
<!-- class="sect2" -->
<a id="i1008968"></a>
<div id="LNCPP20287" class="sect2">
<h3 class="sect2">Table and View A<a id="sthref490"></a>ttributes</h3>
<p>A parameter for a table or view (type <code dir="ltr">PTYPE_TABLE</code> or <code dir="ltr">PTYPE_VIEW</code>) has the following type-specific attributes described in <a href="#g1014339">Table 6-3</a>:</p>
<div id="LNCPP20288" class="tblformalmax">
<p class="titleintable"><a id="sthref491"></a><a id="g1014339"></a>Table 6-3 Attributes that Belong to Tables or Views</p>
<table class="cellalignment2206" title="Attributes that Belong to Tables or Views " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t5">Attribute</th>
<th class="cellalignment2204" id="r1c2-t5">Description</th>
<th class="cellalignment2204" id="r1c3-t5">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_OBJID</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t5 r1c2-t5">
<p>Object ID</p>
</td>
<td class="cellalignment2205" headers="r2c1-t5 r1c3-t5">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_NUM_COLS</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t5 r1c2-t5">
<p>Number of columns</p>
</td>
<td class="cellalignment2205" headers="r3c1-t5 r1c3-t5">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_LIST_COLUMNS</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t5 r1c2-t5">
<p>Column list (type <code dir="ltr">PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment2205" headers="r4c1-t5 r1c3-t5">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t5 r1c2-t5">
<p><code dir="ltr">REF</code> to the object type that is being described</p>
</td>
<td class="cellalignment2205" headers="r5c1-t5 r1c3-t5">
<p><code dir="ltr">RefAny</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_IS_TEMPORARY</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t5 r1c2-t5">
<p>Identifies whether the table or view is temporary</p>
</td>
<td class="cellalignment2205" headers="r6c1-t5 r1c3-t5">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_IS_TYPED</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t5 r1c2-t5">
<p>Identifies whether the table or view is typed</p>
</td>
<td class="cellalignment2205" headers="r7c1-t5 r1c3-t5">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t5" headers="r1c1-t5">
<p><code dir="ltr">ATTR_DURATION</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t5 r1c2-t5">
<p>Duration of a temporary table. Values can be:</p>
<ul>
<li>
<p><code dir="ltr">DURATION_SESSION</code> (session)</p>
</li>
<li>
<p><code dir="ltr">DURATION_TRANS</code> (transaction)</p>
</li>
<li>
<p><code dir="ltr">DURATION_NULL</code> (table not temporary)</p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r8c1-t5 r1c3-t5">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" -->
<p>The additional attributes belonging to tables are described in <a href="#g1014375">Table 6-4</a>.</p>
<div id="LNCPP20289" class="tblformalmax">
<p class="titleintable"><a id="sthref492"></a><a id="g1014375"></a>Table 6-4 Attributes Specific to Tables</p>
<table class="cellalignment2206" title="Attributes Specific to Tables" summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t6">Attribute</th>
<th class="cellalignment2204" id="r1c2-t6">Description</th>
<th class="cellalignment2204" id="r1c3-t6">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">ATTR_DBA</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t6 r1c2-t6">
<p>Data block address of the segment header</p>
</td>
<td class="cellalignment2205" headers="r2c1-t6 r1c3-t6">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">ATTR_TABLESPACE</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t6 r1c2-t6">
<p>Tablespace the table resides on</p>
</td>
<td class="cellalignment2205" headers="r3c1-t6 r1c3-t6">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">ATTR_CLUSTERED</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t6 r1c2-t6">
<p>Identifies whether the table is clustered</p>
</td>
<td class="cellalignment2205" headers="r4c1-t6 r1c3-t6">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t6" headers="r1c1-t6">
<p><code dir="ltr">ATTR_PARTITIONED</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t6 r1c2-t6">
<p>Identifies whether the table is partitioned</p>
</td>
<td class="cellalignment2205" headers="r5c1-t6 r1c3-t6">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t6" headers="r1c1-t6">
<p><code dir="ltr">ATTR_INDEX_ONLY</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t6 r1c2-t6">
<p>Identifies whether the table is index only</p>
</td>
<td class="cellalignment2205" headers="r6c1-t6 r1c3-t6">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1002632"></a>
<div id="LNCPP20290" class="sect2">
<h3 class="sect2">Procedure, Fu<a id="sthref493"></a>nction, and Subprogram Attributes</h3>
<p>A parameter for a procedure or function (type <code dir="ltr">PTYPE_PROC</code> or <code dir="ltr">PTYPE_FUNC</code>) has the type-specific attributes described in <a href="#g1015019">Table 6-5</a>.</p>
<div id="LNCPP20291" class="tblformalmax">
<p class="titleintable"><a id="sthref494"></a><a id="g1015019"></a>Table 6-5 Attributes that Belong to Procedures or Functions</p>
<table class="cellalignment2206" title="Attributes that Belong to Procedures or Functions" summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t7">Attribute</th>
<th class="cellalignment2204" id="r1c2-t7">Description</th>
<th class="cellalignment2204" id="r1c3-t7">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t7 r1c2-t7">
<p>Argument list; refer to <a href="#i1001537">List Attributes</a> .</p>
</td>
<td class="cellalignment2205" headers="r2c1-t7 r1c3-t7">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t7 r1c2-t7">
<p>Identifies whether the procedure or function has invoker&#39;s rights.</p>
</td>
<td class="cellalignment2205" headers="r3c1-t7 r1c3-t7">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" -->
<p>The additional attributes belonging to package subprograms are described in <a href="#g1015035">Table 6-6</a>.</p>
<div id="LNCPP20292" class="tblformalmax">
<p class="titleintable"><a id="sthref495"></a><a id="g1015035"></a>Table 6-6 Attributes that Belong to Package Subprograms</p>
<table class="cellalignment2206" title="Attributes that Belong to Package Subprograms " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t8">Attribute</th>
<th class="cellalignment2204" id="r1c2-t8">Description</th>
<th class="cellalignment2204" id="r1c3-t8">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t8 r1c2-t8">
<p>Name of procedure or function</p>
</td>
<td class="cellalignment2205" headers="r2c1-t8 r1c3-t8">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">ATTR_OVERLOAD_ID</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t8 r1c2-t8">
<p>Overloading ID number (relevant in case the procedure or function is part of a package and is overloaded). Values returned may be different from direct query of a PL/SQL function or procedure.</p>
</td>
<td class="cellalignment2205" headers="r3c1-t8 r1c3-t8">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001477"></a>
<div id="LNCPP20293" class="sect2">
<h3 class="sect2">Package A<a id="sthref496"></a>ttributes</h3>
<p>A parameter for a package (type <code dir="ltr">PTYPE_PKG</code>) has the type-specific attributes described in <a href="#g1014403">Table 6-7</a>.</p>
<div id="LNCPP20294" class="tblformalmax">
<p class="titleintable"><a id="sthref497"></a><a id="g1014403"></a>Table 6-7 Attributes that Belong to Packages</p>
<table class="cellalignment2206" title="Attributes that Belong to Packages " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t9">Attribute</th>
<th class="cellalignment2204" id="r1c2-t9">Description</th>
<th class="cellalignment2204" id="r1c3-t9">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">ATTR_LIST_SUBPROGRAMS</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t9 r1c2-t9">
<p>Subprogram list; refer to <a href="#i1001537">List Attributes</a>.</p>
</td>
<td class="cellalignment2205" headers="r2c1-t9 r1c3-t9">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t9" headers="r1c1-t9">
<p><code dir="ltr">ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t9 r1c2-t9">
<p>Identifies whether the package has invoker&#39;s rights</p>
</td>
<td class="cellalignment2205" headers="r3c1-t9 r1c3-t9">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001481"></a>
<div id="LNCPP20295" class="sect2">
<h3 class="sect2">Type<a id="sthref498"></a> Attributes</h3>
<p>A parameter for a type (type <code dir="ltr">PTYPE_TYPE</code>) has attributes described in <a href="#g1014423">Table 6-8</a>.</p>
<div id="LNCPP20296" class="tblformalmax">
<p class="titleintable"><a id="sthref499"></a><a id="g1014423"></a>Table 6-8 Attributes that Belong to Types</p>
<table class="cellalignment2206" title="Attributes that Belong to Types " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t10">Attribute</th>
<th class="cellalignment2204" id="r1c2-t10">Description</th>
<th class="cellalignment2204" id="r1c3-t10">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t10 r1c2-t10">
<p>Returns the in-memory ref of the type descriptor object for the type, if the column type is an object type.</p>
</td>
<td class="cellalignment2205" headers="r2c1-t10 r1c3-t10">
<p><code dir="ltr">RefAny</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t10 r1c2-t10">
<p>Type code. Can be:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_TYPECODE_OBJECT</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_TYPECODE_NAMEDCOLLECTION</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r3c1-t10 r1c3-t10">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_COLLECTION_TYPECODE</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t10 r1c2-t10">
<p>Type code of collection if type is collection; invalid otherwise. Can be:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_TYPECODE_VARRAY</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_TYPECODE_TABLE</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r4c1-t10 r1c3-t10">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_VERSION</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t10 r1c2-t10">
<p>A <code dir="ltr">NULL</code>-terminated string containing the user-assigned version</p>
</td>
<td class="cellalignment2205" headers="r5c1-t10 r1c3-t10">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_FINAL_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t10 r1c2-t10">
<p>Identifies whether this is a final type</p>
</td>
<td class="cellalignment2205" headers="r6c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_INSTANTIABLE_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t10 r1c2-t10">
<p>Identifies whether this is an instantiable type</p>
</td>
<td class="cellalignment2205" headers="r7c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_SUBTYPE</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t10 r1c2-t10">
<p>Identifies whether this is a subtype</p>
</td>
<td class="cellalignment2205" headers="r8c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_SUPERTYPE_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t10 r1c2-t10">
<p>Name of the schema containing the supertype</p>
</td>
<td class="cellalignment2205" headers="r9c1-t10 r1c3-t10">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_SUPERTYPE_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t10 r1c2-t10">
<p>Name of the supertype</p>
</td>
<td class="cellalignment2205" headers="r10c1-t10 r1c3-t10">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t10 r1c2-t10">
<p>Identifies whether this type is invoker&#39;s rights</p>
</td>
<td class="cellalignment2205" headers="r11c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_INCOMPLETE_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t10 r1c2-t10">
<p>Identifies whether this type is incomplete</p>
</td>
<td class="cellalignment2205" headers="r12c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_SYSTEM_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r13c1-t10 r1c2-t10">
<p>Identifies whether this is a system type</p>
</td>
<td class="cellalignment2205" headers="r13c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_PREDEFINED_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r14c1-t10 r1c2-t10">
<p>Identifies whether this is a predefined type</p>
</td>
<td class="cellalignment2205" headers="r14c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_TRANSIENT_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r15c1-t10 r1c2-t10">
<p>Identifies whether this is a transient type</p>
</td>
<td class="cellalignment2205" headers="r15c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_IS_SYSTEM_GENERATED_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r16c1-t10 r1c2-t10">
<p>Identifies whether this is a system-generated type</p>
</td>
<td class="cellalignment2205" headers="r16c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_HAS_NESTED_TABLE</code></p>
</td>
<td class="cellalignment2205" headers="r17c1-t10 r1c2-t10">
<p>Identifies whether this type contains a nested table attribute</p>
</td>
<td class="cellalignment2205" headers="r17c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_HAS_LOB</code></p>
</td>
<td class="cellalignment2205" headers="r18c1-t10 r1c2-t10">
<p>Identifies whether this type contains a <code dir="ltr">LOB</code> attribute</p>
</td>
<td class="cellalignment2205" headers="r18c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r19c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_HAS_FILE</code></p>
</td>
<td class="cellalignment2205" headers="r19c1-t10 r1c2-t10">
<p>Identifies whether this type contains a <code dir="ltr">FILE</code> attribute</p>
</td>
<td class="cellalignment2205" headers="r19c1-t10 r1c3-t10">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r20c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_COLLECTION_ELEMENT</code></p>
</td>
<td class="cellalignment2205" headers="r20c1-t10 r1c2-t10">
<p>Handle to collection element</p>
<p>Refer to <a href="#i1001493">Collection Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r20c1-t10 r1c3-t10">
<p><code dir="ltr">MetaData</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r21c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_NUM_TYPE_ATTRS</code></p>
</td>
<td class="cellalignment2205" headers="r21c1-t10 r1c2-t10">
<p>Number of type attributes</p>
</td>
<td class="cellalignment2205" headers="r21c1-t10 r1c3-t10">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r22c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_LIST_TYPE_ATTRS</code></p>
</td>
<td class="cellalignment2205" headers="r22c1-t10 r1c2-t10">
<p>List of type attributes</p>
<p>Refer to <a href="#i1001537">List Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r22c1-t10 r1c3-t10">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r23c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_NUM_TYPE_METHODS</code></p>
</td>
<td class="cellalignment2205" headers="r23c1-t10 r1c2-t10">
<p>Number of type methods</p>
</td>
<td class="cellalignment2205" headers="r23c1-t10 r1c3-t10">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r24c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_LIST_TYPE_METHODS</code></p>
</td>
<td class="cellalignment2205" headers="r24c1-t10 r1c2-t10">
<p>List of type methods</p>
<p>Refer to <a href="#i1001537">List Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r24c1-t10 r1c3-t10">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r25c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_MAP_METHOD</code></p>
</td>
<td class="cellalignment2205" headers="r25c1-t10 r1c2-t10">
<p>Map method of type</p>
<p>Refer to <a href="#i1001489">Type Method Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r25c1-t10 r1c3-t10">
<p><code dir="ltr">MetaData</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r26c1-t10" headers="r1c1-t10">
<p><code dir="ltr">ATTR_ORDER_METHOD</code></p>
</td>
<td class="cellalignment2205" headers="r26c1-t10 r1c2-t10">
<p>Order method of type; refer to <a href="#i1001489">Type Method Attributes</a></p>
</td>
<td class="cellalignment2205" headers="r26c1-t10 r1c3-t10">
<p><code dir="ltr">MetaData</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001485"></a>
<div id="LNCPP20297" class="sect2">
<h3 class="sect2">Type Att<a id="sthref500"></a>ribute Attributes</h3>
<p>A parameter for an attribute of a type (type <code dir="ltr">PTYPE_TYPE_ATTR</code>) has the attributes described in <a href="#g1014531">Table 6-9</a>.</p>
<div id="LNCPP20298" class="tblformalmax">
<p class="titleintable"><a id="sthref501"></a><a id="g1014531"></a>Table 6-9 Attributes that Belong to Type Attributes</p>
<table class="cellalignment2206" title="Attributes that Belong to Type Attributes " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t11">Attribute</th>
<th class="cellalignment2204" id="r1c2-t11">Description</th>
<th class="cellalignment2204" id="r1c3-t11">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t11 r1c2-t11">
<p>Maximum size of the type attribute. This length is returned in bytes and not characters for strings and raws. Returns <code dir="ltr">22</code> for <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r2c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t11 r1c2-t11">
<p>Type code</p>
</td>
<td class="cellalignment2205" headers="r3c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t11 r1c2-t11">
<p>Data type of the type attribute</p>
</td>
<td class="cellalignment2205" headers="r4c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t11 r1c2-t11">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment2205" headers="r5c1-t11 r1c3-t11">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_PRECISION</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t11 r1c2-t11">
<p>Precision of numeric type attributes. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply by <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r6c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_SCALE</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t11 r1c2-t11">
<p>Scale of numeric type attributes. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply as <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r7c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t11 r1c2-t11">
<p>A string that is the type name. The returned value contains the type name if the data type is <code dir="ltr">SQLT_NTY</code> or <code dir="ltr">SQLT_REF</code>. If the data type is <code dir="ltr">SQLT_NTY</code>, then the name of the named data type&#39;s type is returned. If the data type is <code dir="ltr">SQLT_REF</code>, then the type name of the named data type pointed to by the <code dir="ltr">REF</code> is returned.</p>
</td>
<td class="cellalignment2205" headers="r8c1-t11 r1c3-t11">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t11 r1c2-t11">
<p>String with the schema name under which the type has been created</p>
</td>
<td class="cellalignment2205" headers="r9c1-t11 r1c3-t11">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t11 r1c2-t11">
<p>Returns the in-memory <code dir="ltr">REF</code> of the TDO for the type, if the column type is an object type.</p>
</td>
<td class="cellalignment2205" headers="r10c1-t11 r1c3-t11">
<p><code dir="ltr">RefAny</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t11 r1c2-t11">
<p>Character set ID, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment2205" headers="r11c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t11 r1c2-t11">
<p>Character set form, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment2205" headers="r12c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_FSPRECISION</code></p>
</td>
<td class="cellalignment2205" headers="r13c1-t11 r1c2-t11">
<p>The fractional seconds precision of a datetime or interval</p>
</td>
<td class="cellalignment2205" headers="r13c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t11" headers="r1c1-t11">
<p><code dir="ltr">ATTR_LFPRECISION</code></p>
</td>
<td class="cellalignment2205" headers="r14c1-t11 r1c2-t11">
<p>The leading field precision of an interval</p>
</td>
<td class="cellalignment2205" headers="r14c1-t11 r1c3-t11">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001489"></a>
<div id="LNCPP20299" class="sect2">
<h3 class="sect2">Type Me<a id="sthref502"></a>thod Attributes</h3>
<p>A parameter for a method of a type (type <code dir="ltr">PTYPE_TYPE_METHOD</code>) has the attributes described in <a href="#g1014591">Table 6-10</a>.</p>
<div id="LNCPP20300" class="tblformalmax">
<p class="titleintable"><a id="sthref503"></a><a id="g1014591"></a>Table 6-10 Attributes that Belong to Type Methods</p>
<table class="cellalignment2206" title="Attributes that Belong to Type Methods " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t12">Attribute</th>
<th class="cellalignment2204" id="r1c2-t12">Description</th>
<th class="cellalignment2204" id="r1c3-t12">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t12 r1c2-t12">
<p>Name of method (procedure or function)</p>
</td>
<td class="cellalignment2205" headers="r2c1-t12 r1c3-t12">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_ENCAPSULATION</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t12 r1c2-t12">
<p>Encapsulation level of the method; can be:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_TYPEENCAP_PRIVATE</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_TYPEENCAP_PUBLIC)</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r3c1-t12 r1c3-t12">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t12 r1c2-t12">
<p>Argument list</p>
</td>
<td class="cellalignment2205" headers="r4c1-t12 r1c3-t12">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_CONSTRUCTOR</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t12 r1c2-t12">
<p>Identifies whether the method is a constructor</p>
</td>
<td class="cellalignment2205" headers="r5c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_DESTRUCTOR</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t12 r1c2-t12">
<p>Identifies whether the method is a destructor</p>
</td>
<td class="cellalignment2205" headers="r6c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_OPERATOR</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t12 r1c2-t12">
<p>Identifies whether the method is an operator</p>
</td>
<td class="cellalignment2205" headers="r7c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_SELFISH</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t12 r1c2-t12">
<p>Identifies whether the method is selfish</p>
</td>
<td class="cellalignment2205" headers="r8c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_MAP</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t12 r1c2-t12">
<p>Identifies whether the method is a map method</p>
</td>
<td class="cellalignment2205" headers="r9c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_ORDER</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t12 r1c2-t12">
<p>Identifies whether the method is an order method</p>
</td>
<td class="cellalignment2205" headers="r10c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_RNDS</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t12 r1c2-t12">
<p>Identifies whether &#34;Read No Data State&#34; is set for the method</p>
</td>
<td class="cellalignment2205" headers="r11c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_RNPS</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t12 r1c2-t12">
<p>Identifies whether &#34;Read No Process State&#34; is set for the method</p>
</td>
<td class="cellalignment2205" headers="r12c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_WNDS</code></p>
</td>
<td class="cellalignment2205" headers="r13c1-t12 r1c2-t12">
<p>Identifies whether &#34;Write No Data State&#34; is set for the method</p>
</td>
<td class="cellalignment2205" headers="r13c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_WNPS</code></p>
</td>
<td class="cellalignment2205" headers="r14c1-t12 r1c2-t12">
<p>Identifies whether &#34;Write No Process State&#34; is set for the method</p>
</td>
<td class="cellalignment2205" headers="r14c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_FINAL_METHOD</code></p>
</td>
<td class="cellalignment2205" headers="r15c1-t12 r1c2-t12">
<p>Identifies whether this is a final method</p>
</td>
<td class="cellalignment2205" headers="r15c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_INSTANTIABLE_METHOD</code></p>
</td>
<td class="cellalignment2205" headers="r16c1-t12 r1c2-t12">
<p>Identifies whether this is an instantiable method</p>
</td>
<td class="cellalignment2205" headers="r16c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ATTR_IS_OVERRIDING_METHOD</code></p>
</td>
<td class="cellalignment2205" headers="r17c1-t12 r1c2-t12">
<p>Identifies whether this is an overriding method</p>
</td>
<td class="cellalignment2205" headers="r17c1-t12 r1c3-t12">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001493"></a>
<div id="LNCPP20301" class="sect2">
<h3 class="sect2">Colle<a id="sthref504"></a>ction Attributes</h3>
<p>A parameter for a collection type (type <code dir="ltr">PTYPE_COLL</code>) has the attributes described in <a href="#g1014663">Table 6-11</a>.</p>
<div id="LNCPP20302" class="tblformalmax">
<p class="titleintable"><a id="sthref505"></a><a id="g1014663"></a>Table 6-11 Attributes that Belong to Collection Types</p>
<table class="cellalignment2206" title="Attributes that Belong to Collection Types " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t13">Attribute</th>
<th class="cellalignment2204" id="r1c2-t13">Description</th>
<th class="cellalignment2204" id="r1c3-t13">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t13 r1c2-t13">
<p>Maximum size of the type attribute. This length is returned in bytes and not characters for strings and raws. Returns <code dir="ltr">22</code> for <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r2c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t13 r1c2-t13">
<p>Typecode.</p>
</td>
<td class="cellalignment2205" headers="r3c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t13 r1c2-t13">
<p>The data type of the type attribute.</p>
</td>
<td class="cellalignment2205" headers="r4c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_NUM_ELEMENTS</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t13 r1c2-t13">
<p>Number of elements in an array; only valid for collections that are arrays.</p>
</td>
<td class="cellalignment2205" headers="r5c1-t13 r1c3-t13">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t13 r1c2-t13">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment2205" headers="r6c1-t13 r1c3-t13">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_PRECISION</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t13 r1c2-t13">
<p>Precision of numeric type attributes. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply as <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r7c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_SCALE</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t13 r1c2-t13">
<p>Scale of numeric type attributes. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply a<code dir="ltr">s NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r8c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t13 r1c2-t13">
<p>String that is the type name. The returned value contains the type name if the data type is <code dir="ltr">SQLT_NTY</code> or <code dir="ltr">SQLT_REF</code>. If the data type is <code dir="ltr">SQLT_NTY</code>, then the name of the named data type&#39;s type is returned. If the data type is <code dir="ltr">SQLT_REF</code>, then the type name of the named data type pointed to by the <code dir="ltr">REF</code> is returned</p>
</td>
<td class="cellalignment2205" headers="r9c1-t13 r1c3-t13">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t13 r1c2-t13">
<p>String with the schema name under which the type has been created</p>
</td>
<td class="cellalignment2205" headers="r10c1-t13 r1c3-t13">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t13 r1c2-t13">
<p>Returns the in memory <code dir="ltr">REF</code> of the <code dir="ltr">TDO</code> for the type.</p>
</td>
<td class="cellalignment2205" headers="r11c1-t13 r1c3-t13">
<p><code dir="ltr">RefAny</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t13 r1c2-t13">
<p>Typecode.</p>
</td>
<td class="cellalignment2205" headers="r12c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t13" headers="r1c1-t13">
<p><code dir="ltr">ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment2205" headers="r13c1-t13 r1c2-t13">
<p>The data type of the type attribute.</p>
</td>
<td class="cellalignment2205" headers="r13c1-t13 r1c3-t13">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001497"></a>
<div id="LNCPP20303" class="sect2">
<h3 class="sect2">Synonym <a id="sthref506"></a>Attributes</h3>
<p>A parameter for a synonym (type <code dir="ltr">PTYPE_SYN</code>) has the attributes described in <a href="#g1014719">Table 6-12</a>.</p>
<div id="LNCPP20304" class="tblformalmax">
<p class="titleintable"><a id="sthref507"></a><a id="g1014719"></a>Table 6-12 Attributes that Belong to Synonyms</p>
<table class="cellalignment2206" title="Attributes that Belong to Synonyms " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t14">Attribute</th>
<th class="cellalignment2204" id="r1c2-t14">Description</th>
<th class="cellalignment2204" id="r1c3-t14">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">ATTR_OBJID</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t14 r1c2-t14">
<p>Object ID</p>
</td>
<td class="cellalignment2205" headers="r2c1-t14 r1c3-t14">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t14" headers="r1c1-t14">
<p><code dir="ltr">ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t14 r1c2-t14">
<p>Null-terminated string containing the schema name of the synonym translation</p>
</td>
<td class="cellalignment2205" headers="r3c1-t14 r1c3-t14">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t14" headers="r1c1-t14">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t14 r1c2-t14">
<p>Null-terminated string containing the object name of the synonym translation</p>
</td>
<td class="cellalignment2205" headers="r4c1-t14 r1c3-t14">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t14" headers="r1c1-t14">
<p><code dir="ltr">ATTR_LINK</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t14 r1c2-t14">
<p>Null-terminated string containing the database link name of the synonym translation</p>
</td>
<td class="cellalignment2205" headers="r5c1-t14 r1c3-t14">
<p><code dir="ltr">string</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001501"></a>
<div id="LNCPP20305" class="sect2">
<h3 class="sect2">Sequence A<a id="sthref508"></a>ttributes</h3>
<p>A parameter for a sequence (type <code dir="ltr">PTYPE_SEQ</code>) has the attributes described in <a href="#g1014743">Table 6-13</a>.</p>
<div id="LNCPP20306" class="tblformalmax">
<p class="titleintable"><a id="sthref509"></a><a id="g1014743"></a>Table 6-13 Attributes that Belong to Sequences</p>
<table class="cellalignment2206" title="Attributes that Belong to Sequences " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t15">Attribute</th>
<th class="cellalignment2204" id="r1c2-t15">Description</th>
<th class="cellalignment2204" id="r1c3-t15">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_OBJID</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t15 r1c2-t15">
<p>Object ID</p>
</td>
<td class="cellalignment2205" headers="r2c1-t15 r1c3-t15">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_MIN</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t15 r1c2-t15">
<p>Minimum value (in Oracle number format)</p>
</td>
<td class="cellalignment2205" headers="r3c1-t15 r1c3-t15">
<p><code dir="ltr">Number</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_MAX</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t15 r1c2-t15">
<p>Maximum value (in Oracle number format)</p>
</td>
<td class="cellalignment2205" headers="r4c1-t15 r1c3-t15">
<p><code dir="ltr">Number</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_INCR</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t15 r1c2-t15">
<p>Increment (in Oracle number format)</p>
</td>
<td class="cellalignment2205" headers="r5c1-t15 r1c3-t15">
<p><code dir="ltr">Number</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_CACHE</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t15 r1c2-t15">
<p>Number of sequence numbers cached; zero if the sequence is not a cached sequence (in Oracle number format)</p>
</td>
<td class="cellalignment2205" headers="r6c1-t15 r1c3-t15">
<p><code dir="ltr">Number</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_ORDER</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t15 r1c2-t15">
<p>Identifies whether the sequence is ordered</p>
</td>
<td class="cellalignment2205" headers="r7c1-t15 r1c3-t15">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t15" headers="r1c1-t15">
<p><code dir="ltr">ATTR_HW_MARK</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t15 r1c2-t15">
<p>High-water mark (in Oracle number format)</p>
</td>
<td class="cellalignment2205" headers="r8c1-t15 r1c3-t15">
<p><code dir="ltr">Number</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001505"></a>
<div id="LNCPP20307" class="sect2">
<h3 class="sect2">Column A<a id="sthref510"></a>ttributes</h3>
<p>A parameter for a column of a table or view (type <code dir="ltr">PTYPE_COL</code>) has the attributes described in <a href="#g1014779">Table 6-14</a>.</p>
<div id="LNCPP20308" class="tblformalmax">
<p class="titleintable"><a id="sthref511"></a><a id="g1014779"></a>Table 6-14 Attributes that Belong to Columns of Tables or Views</p>
<table class="cellalignment2206" title="Attributes that Belong to Columns of Tables or Views " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t16">Attribute</th>
<th class="cellalignment2204" id="r1c2-t16">Description</th>
<th class="cellalignment2204" id="r1c3-t16">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t16 r1c2-t16">
<p>Maximum size of the column. This length is returned in bytes and not characters for strings and raws. Returns <code dir="ltr">22</code> for <code dir="ltr">NUMBER</code>..</p>
</td>
<td class="cellalignment2205" headers="r2c1-t16 r1c3-t16">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t16 r1c2-t16">
<p>The data type of the column.</p>
</td>
<td class="cellalignment2205" headers="r3c1-t16 r1c3-t16">
<p><code dir="ltr">Type</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t16 r1c2-t16">
<p>Pointer to a string that is the column name.</p>
</td>
<td class="cellalignment2205" headers="r4c1-t16 r1c3-t16">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_PRECISION</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t16 r1c2-t16">
<p>Returns the precision.</p>
</td>
<td class="cellalignment2205" headers="r5c1-t16 r1c3-t16">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_SCALE</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t16 r1c2-t16">
<p>Scale of numeric columns. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply as <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r6c1-t16 r1c3-t16">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_IS_NULL</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t16 r1c2-t16">
<p>Returns <code dir="ltr">FALSE</code> if null values are not permitted for the column.</p>
</td>
<td class="cellalignment2205" headers="r7c1-t16 r1c3-t16">
<p><code dir="ltr">bool</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t16 r1c2-t16">
<p>Returns a string that is the type name. The returned value contains the type name if the data type is <code dir="ltr">OCCI_SQLT_NTY</code> or <code dir="ltr">OCCI_SQLT_REF</code>. If the data type is <code dir="ltr">OCCI_SQLT_NTY</code>, then the name of the named data type&#39;s type is returned. If the data type is <code dir="ltr">OCCI_SQLT_REF</code>, then the type name of the named data type pointed to by the <code dir="ltr">REF</code> is returned.</p>
</td>
<td class="cellalignment2205" headers="r8c1-t16 r1c3-t16">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t16 r1c2-t16">
<p>Returns a string with the schema name under which the type has been created.</p>
</td>
<td class="cellalignment2205" headers="r9c1-t16 r1c3-t16">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t16 r1c2-t16">
<p>The <code dir="ltr">REF</code> of the TDO for the type, if the column type is an object type.</p>
</td>
<td class="cellalignment2205" headers="r10c1-t16 r1c3-t16">
<p><code dir="ltr">RefAny</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t16 r1c2-t16">
<p>Character set ID for character column. If not set, the character set ID defaults to the character set ID set in the direct path context.</p>
</td>
<td class="cellalignment2205" headers="r11c1-t16 r1c3-t16">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t16" headers="r1c1-t16">
<p><code dir="ltr">ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t16 r1c2-t16">
<p>Character set form of the column. Setting this attribute specifies the use of the database or national character set on the client side.</p>
</td>
<td class="cellalignment2205" headers="r12c1-t16 r1c3-t16">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001533"></a>
<div id="LNCPP20309" class="sect2">
<h3 class="sect2">Argum<a id="sthref512"></a>ent and Result Attributes</h3>
<p>A parameter for an argument or a procedure or function type (type <code dir="ltr">PTYPE_ARG</code>), for a type method argument (type <code dir="ltr">PTYPE_TYPE_ARG</code>), or for method results (type <code dir="ltr">PTYPE_TYPE_RESULT</code>) has the attributes described in <a href="#g1014831">Table 6-15</a>.</p>
<div id="LNCPP20310" class="tblformalmax">
<p class="titleintable"><a id="sthref513"></a><a id="g1014831"></a>Table 6-15 Attributes that Belong to Arguments / Results</p>
<table class="cellalignment2206" title="Attributes that Belong to Arguments / Results " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t17">Attribute</th>
<th class="cellalignment2204" id="r1c2-t17">Description</th>
<th class="cellalignment2204" id="r1c3-t17">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t17 r1c2-t17">
<p>Returns a pointer to a string which is the argument name</p>
</td>
<td class="cellalignment2205" headers="r2c1-t17 r1c3-t17">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_POSITION</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t17 r1c2-t17">
<p>Position of the argument in the argument list. Always returns <code dir="ltr">0</code>.</p>
</td>
<td class="cellalignment2205" headers="r3c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t17 r1c2-t17">
<p>Typecode.</p>
</td>
<td class="cellalignment2205" headers="r4c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t17 r1c2-t17">
<p>Data type of the argument.</p>
</td>
<td class="cellalignment2205" headers="r5c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t17 r1c2-t17">
<p>Size of the data type of the argument. This length is returned in bytes and not characters for strings and raws. Returns <code dir="ltr">22</code> for <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r6c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_PRECISION</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t17 r1c2-t17">
<p>Precision of numeric arguments. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply as <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r7c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_SCALE</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t17 r1c2-t17">
<p>Scale of numeric arguments. If the precision is nonzero and scale is <code dir="ltr">-127</code>, then it is a <code dir="ltr">FLOAT</code>; otherwise a <code dir="ltr">NUMBER(p, s)</code>. If precision is <code dir="ltr">0</code>, then <code dir="ltr">NUMBER(p, s)</code> can be represented simply as <code dir="ltr">NUMBER</code>.</p>
</td>
<td class="cellalignment2205" headers="r8c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_LEVEL</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t17 r1c2-t17">
<p>Data type levels. This attribute always returns <code dir="ltr">0</code>.</p>
</td>
<td class="cellalignment2205" headers="r9c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_HAS_DEFAULT</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t17 r1c2-t17">
<p>Indicates whether an argument has a default</p>
</td>
<td class="cellalignment2205" headers="r10c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t17 r1c2-t17">
<p>The list of arguments at the next level (when the argument is of a record or table type)</p>
</td>
<td class="cellalignment2205" headers="r11c1-t17 r1c3-t17">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_IOMODE</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t17 r1c2-t17">
<p>Indicates the argument mode; valid values are:</p>
<ul>
<li>
<p><code dir="ltr">0</code> for <code dir="ltr">IN</code> (<code dir="ltr">OCCI_TYPEPARAM_IN</code>)</p>
</li>
<li>
<p><code dir="ltr">1</code> for <code dir="ltr">OUT</code> (<code dir="ltr">OCCI_TYPEPARAM_OUT</code>)</p>
</li>
<li>
<p><code dir="ltr">2</code> for <code dir="ltr">IN/OUT</code> (<code dir="ltr">OCCI_TYPEPARAM_INOUT</code>)</p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r12c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_RADIX</code></p>
</td>
<td class="cellalignment2205" headers="r13c1-t17 r1c2-t17">
<p>Returns a radix (if number type)</p>
</td>
<td class="cellalignment2205" headers="r13c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_IS_NULL</code></p>
</td>
<td class="cellalignment2205" headers="r14c1-t17 r1c2-t17">
<p>Returns <code dir="ltr">FALSE</code> if <code dir="ltr">NULL</code> values are not permitted for the column.</p>
</td>
<td class="cellalignment2205" headers="r14c1-t17 r1c3-t17">
<p>bool</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r15c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r15c1-t17 r1c2-t17">
<p>Returns a string that is the type name (or the package name for local package types). The returned value contains the type name if the data type is <code dir="ltr">SQLT_NTY</code> or <code dir="ltr">SQLT_REF</code>. If the data type is <code dir="ltr">SQLT_NTY</code>, then the name of the named data type&#39;s type is returned. If the data type is <code dir="ltr">SQLT_REF</code>, then the type name of the named data type pointed to by the <code dir="ltr">REF</code> is returned.</p>
</td>
<td class="cellalignment2205" headers="r15c1-t17 r1c3-t17">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r16c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r16c1-t17 r1c2-t17">
<p>For <code dir="ltr">SQLT_NTY</code> or <code dir="ltr">SQLT_REF</code>, returns a string with the schema name under which the type was created (or for local package types, the package name).</p>
</td>
<td class="cellalignment2205" headers="r16c1-t17 r1c3-t17">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r17c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_SUB_NAME</code></p>
</td>
<td class="cellalignment2205" headers="r17c1-t17 r1c2-t17">
<p>For <code dir="ltr">SQLT_NTY</code> or <code dir="ltr">SQLT_REF</code>, returns a string with the type name.</p>
</td>
<td class="cellalignment2205" headers="r17c1-t17 r1c3-t17">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r18c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_LINK</code></p>
</td>
<td class="cellalignment2205" headers="r18c1-t17 r1c2-t17">
<p>For <code dir="ltr">SQLT_NTY</code> or <code dir="ltr">SQLT_REF</code>, returns a string with the database link name of the database on which the type exists. This can happen only for package-ocal types, when the package is remote.</p>
</td>
<td class="cellalignment2205" headers="r18c1-t17 r1c3-t17">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r19c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment2205" headers="r19c1-t17 r1c2-t17">
<p>Returns the <code dir="ltr">REF</code> of the TDO for the type, if the argument type is an object.</p>
</td>
<td class="cellalignment2205" headers="r19c1-t17 r1c3-t17">
<p><code dir="ltr">RefAny</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r20c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment2205" headers="r20c1-t17 r1c2-t17">
<p>Returns the character set ID if the argument is of a string or character type.</p>
</td>
<td class="cellalignment2205" headers="r20c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r21c1-t17" headers="r1c1-t17">
<p><code dir="ltr">ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment2205" headers="r21c1-t17 r1c2-t17">
<p>Returns the character set form if the argument is of a string or character type.</p>
</td>
<td class="cellalignment2205" headers="r21c1-t17 r1c3-t17">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001537"></a>
<div id="LNCPP20311" class="sect2">
<h3 class="sect2">List Attrib<a id="sthref514"></a>utes</h3>
<p>A list type of attribute can be described for all the elements in the list. In case of a function argument list, position <code dir="ltr">0</code> has a parameter for return values (<code dir="ltr">PTYPE_ARG</code>).</p>
<p>The list is described iteratively for all the elements. The results are stored in a C++ <code dir="ltr">vector&lt;MetaData&gt;</code>. Call the <code dir="ltr">getVector()</code> method to describe list type of attributes. <a href="#g1014919">Table 6-16</a> displays the list attributes.</p>
<div id="LNCPP20312" class="tblformalmax">
<p class="titleintable"><a id="sthref515"></a><a id="g1014919"></a>Table 6-16 Values for ATTR_LIST_TYPE</p>
<table class="cellalignment2206" title="Values for ATTR_LIST_TYPE " summary="First column lists values; second column provides description of these values." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t18">Possible Values</th>
<th class="cellalignment2204" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_COLUMNS</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t18 r1c2-t18">
<p>Column list</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t18 r1c2-t18">
<p>Procedure or function arguments list</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_SUBPROGRAMS</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t18 r1c2-t18">
<p>Subprogram list</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_TYPE_ATTRIBUTES</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t18 r1c2-t18">
<p>Type attribute list</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_TYPE_METHODS</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t18 r1c2-t18">
<p>Type method list</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_OBJECTS</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t18 r1c2-t18">
<p>Object list within a schema</p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t18" headers="r1c1-t18">
<p><code dir="ltr">ATTR_LIST_SCHEMAS</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t18 r1c2-t18">
<p>Schema list within a database</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001541"></a>
<div id="LNCPP20313" class="sect2">
<h3 class="sect2">Schema Att<a id="sthref516"></a>ributes</h3>
<p>A parameter for a schema type (type <code dir="ltr">PTYPE_SCHEMA</code>) has the attributes described in <a href="#g1014947">Table 6-17</a>.</p>
<div id="LNCPP20314" class="tblformalmax">
<p class="titleintable"><a id="sthref517"></a><a id="g1014947"></a>Table 6-17 Attributes Specific to Schemas</p>
<table class="cellalignment2206" title="Attributes Specific to Schemas " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t19">Attribute</th>
<th class="cellalignment2204" id="r1c2-t19">Description</th>
<th class="cellalignment2204" id="r1c3-t19">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t19" headers="r1c1-t19">
<p><code dir="ltr">ATTR_LIST_OBJECTS</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t19 r1c2-t19">
<p>List of objects in the schema</p>
</td>
<td class="cellalignment2205" headers="r2c1-t19 r1c3-t19">
<p><code dir="ltr">string</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001545"></a>
<div id="LNCPP20315" class="sect2">
<h3 class="sect2">Databa<a id="sthref518"></a>se Attributes</h3>
<p>A parameter for a database (type <code dir="ltr">PTYPE_DATABASE</code>) has the attributes described in <a href="#g1014959">Table 6-18</a>.</p>
<div id="LNCPP20316" class="tblformalmax">
<p class="titleintable"><a id="sthref519"></a><a id="g1014959"></a>Table 6-18 Attributes Specific to Databases</p>
<table class="cellalignment2206" title="Attributes Specific to Databases " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment2197">
<th class="cellalignment2204" id="r1c1-t20">Attribute</th>
<th class="cellalignment2204" id="r1c2-t20">Description</th>
<th class="cellalignment2204" id="r1c3-t20">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r2c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_VERSION</code></p>
</td>
<td class="cellalignment2205" headers="r2c1-t20 r1c2-t20">
<p>Database version</p>
</td>
<td class="cellalignment2205" headers="r2c1-t20 r1c3-t20">
<p><code dir="ltr">string</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r3c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment2205" headers="r3c1-t20 r1c2-t20">
<p>Database character set ID from the server handle</p>
</td>
<td class="cellalignment2205" headers="r3c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r4c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_NCHARSET_ID</code></p>
</td>
<td class="cellalignment2205" headers="r4c1-t20 r1c2-t20">
<p>Database native character set ID from the server handle</p>
</td>
<td class="cellalignment2205" headers="r4c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r5c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_LIST_SCHEMAS</code></p>
</td>
<td class="cellalignment2205" headers="r5c1-t20 r1c2-t20">
<p>List of schemas (type <code dir="ltr">PTYPE_SCHEMA</code>) in the database</p>
</td>
<td class="cellalignment2205" headers="r5c1-t20 r1c3-t20">
<p><code dir="ltr">vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r6c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_MAX_PROC_LEN</code></p>
</td>
<td class="cellalignment2205" headers="r6c1-t20 r1c2-t20">
<p>Maximum length of a procedure name</p>
</td>
<td class="cellalignment2205" headers="r6c1-t20 r1c3-t20">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r7c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_MAX_COLUMN_LEN</code></p>
</td>
<td class="cellalignment2205" headers="r7c1-t20 r1c2-t20">
<p>Maximum length of a column name</p>
</td>
<td class="cellalignment2205" headers="r7c1-t20 r1c3-t20">
<p><code dir="ltr">unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r8c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_CURSOR_COMMIT_BEHAVIOR</code></p>
</td>
<td class="cellalignment2205" headers="r8c1-t20 r1c2-t20">
<p>How a <code dir="ltr">COMMIT</code> operation affects cursors and prepared statements in the database; values are:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_CURSOR_OPEN</code> for preserving cursor state as before the commit operation</p>
</li>
<li>
<p><code dir="ltr">OCCI_CURSOR_CLOSED</code> for cursors that are closed on <code dir="ltr">COMMIT</code>, although the application can execute the statement for the second time without preparing it again</p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r8c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r9c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_MAX_CATALOG_NAMELEN</code></p>
</td>
<td class="cellalignment2205" headers="r9c1-t20 r1c2-t20">
<p>Maximum length of a catalog (database) name</p>
</td>
<td class="cellalignment2205" headers="r9c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r10c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_CATALOG_LOCATION</code></p>
</td>
<td class="cellalignment2205" headers="r10c1-t20 r1c2-t20">
<p>Position of the catalog in a qualified table; values are:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_CL_START</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_CL_END</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r10c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r11c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_SAVEPOINT_SUPPORT</code></p>
</td>
<td class="cellalignment2205" headers="r11c1-t20 r1c2-t20">
<p>Identifies whether the database supports savepoints; values are:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_SP_SUPPORTED</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_SP_UNSUPPORTED</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r11c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r12c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_NOWAIT_SUPPORT</code></p>
</td>
<td class="cellalignment2205" headers="r12c1-t20 r1c2-t20">
<p>Identifies whether the database supports the nowait clause; values are:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_NW_SUPPORTED</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_NW_UNSUPPORTED</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r12c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r13c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_AUTOCOMMIT_DDL</code></p>
</td>
<td class="cellalignment2205" headers="r13c1-t20 r1c2-t20">
<p>Identifies whether the autocommit mode is required for DDL statements; values are:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_AC_DDL</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_NO_AC_DDL</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r13c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
<tr class="cellalignment2197">
<td class="cellalignment2205" id="r14c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ATTR_LOCKING_MODE</code></p>
</td>
<td class="cellalignment2205" headers="r14c1-t20 r1c2-t20">
<p>Locking mode for the database; values are:</p>
<ul>
<li>
<p><code dir="ltr">OCCI_LOCK_IMMEDIATE</code></p>
</li>
<li>
<p><code dir="ltr">OCCI_LOCK_DELAYED</code></p>
</li>
</ul>
</td>
<td class="cellalignment2205" headers="r14c1-t20 r1c3-t20">
<p><code dir="ltr">int</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2196">
<tr>
<td class="cellalignment2205">
<table class="cellalignment2201">
<tr>
<td class="cellalignment2200"><a href="types.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2200"><a href="lobs.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2208">
<table class="cellalignment2199">
<tr>
<td class="cellalignment2200"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2200"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2200"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2200"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2200"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2200"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>