<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-86525"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Label%20Security%20PL%2FSQL%20Packages"></a><title>Oracle Label Security PL/SQL Packages</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="Oracle Label Security provides a set of PL/SQL packages."/>
<meta name="keywords" content="policy_DBA role, required for Oracle Label Security auditing, SA_AUDIT_ADMIN PL/SQL package, about, SA_AUDIT_ADMIN, procedures, listed, packages, auditing, SA_AUDIT_ADMIN package, auditing policy_DBA role users, enabling, SA_AUDIT_ADMIN.AUDIT procedure, SA_AUDIT_ADMIN.AUDIT_LABEL procedure, recording policy labels, SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED procedure, SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED function, finding if labels are recorded, AUDIT_LABEL_ENABLED function, audit trails, views, SA_AUDIT_ADMIN.CREATE_VIEW procedure, creating audit view, SA_AUDIT_ADMIN.DROP_VIEW procedure, dropping audit view, SA_AUDIT_ADMIN.NOAUDIT procedure, SA_AUDIT_ADMIN.NOAUDIT_LABEL procedure, disabling, SA_COMPONENTS.ALTER_COMPARTMENT procedure, compartments, altering, SA_COMPONENTS.ALTER_GROUP procedure, groups, SA_COMPONENTS.ALTER_GROUP_PARENT procedure, altering parent groups, SA_COMPONENTS.ALTER_LEVEL procedure, levels, altering levels, SA_COMPONENTS.CREATE_COMPARTMENT procedure, creating, SA_COMPONENTS.CREATE_GROUP procedure, creating group parent, SA_COMPONENTS.CREATE_LEVEL procedure, SA_COMPONENTS.DROP_COMPARTMENT procedure, deleting, SA_COMPONENTS.DROP_GROUP procedure, SA_COMPONENTS.DROP_GROUP, SA_COMPONENTS.DROP_LEVEL procedure, required for label management, SA_LABEL_ADMIN PL/SQL package, SA_LABEL_ADMIN, labels, SA_LABEL_ADMIN package, SA_LABEL_ADMIN.ALTER_LABEL procedure, SA_LABEL_ADMIN.CREATE_LABEL procedure, TO_DATA_LABEL function, SA_LABEL_ADMIN.DROP_LABEL procedure, SA_POLICY_ADMIN PL/SQL package, SA_POLICY_ADMIN, policies, SA_POLICY_ADMIN package, SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY procedure, policies, schema, SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY procedure, applying, SA_POLICY_ADMIN.APPLY_TABLE_POLICY procedure, policies, table, policies, schema, disabling, SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY procedure, SA_POLICY_ADMIN.DISABLE_TABLE_POLICY procedure, SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY procedure, SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY policy, SA_POLICY_ADMIN.ENABLE_TABLE_POLICY procedure, SA_POLICY_ADMIN.POLICY_SUBSCRIBE procedure, OID subscription, SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE procedure, OID unsubscription, SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY procedure, SA_POLICY_ADMIN.REMOVE_TABLE_POLICY procedure, SET_LABEL procedure, definition, row labels, default, SA_SESSION PL/SQL package, SA_SESSION, procedures and functions, listed, sessions, SA_SESSION package, finding compartments user can read in session, SA_SESSION.COMP_READ function, compartments readable by user, finding compartments user can write to in session, SA_SESSION.COMP_WRITE function, compartments writeable by user, SA_SESSION.GROUP_READ function, SA_SESSION.GROUP_WRITE function, SA_SESSION.LABEL function, SA_SESSION.MAX_LEVEL function, SA_SESSION.MAX_READ_LABEL function, SA_SESSION.MAX_WRITE_LABEL function, SA_SESSION.MIN_LEVEL function, SA_SESSION.MIN_WRITE_LABEL function, SA_SESSION.PRIVS function, finding session privileges, SA_SESSION.PRIVS, SA_SESSION.SET_LABEL procedure, and SA_SESSION.RESTORE_DEFAULT_LABELS, restoring, session labels, restoring to default, SA_SESSION.RESTORE_DEFAULT_LABELS procedure, restoring default for session, SA_SESSION.RESTORE_DEFAULT_LABELS, SA_SESSION.ROW_LABEL function, finding row label, changing, SA_SESSION.SET_LABEL procedure, SA_SESSION.SA_USER_NAME function, SA_SESSION.SET_ACCESS_PROFILE procedure, finding current OLS user, saving defaults, SA_SESSION.SAVE_DEFAULT_LABELS procedure, saving default session label, setting OLS privileges for user, default row label, LABEL_DEFAULT option, with SA_SESSION.SET_ROW_LABEL, setting, SA_SESSION.SET_ROW_LABEL procedure, setting row label, SA_SYSDBA PL/SQL package, SA_SYSDBA, policy management, SA_SYSDBA package, schemas, applying policies to, HIDE, SA_SYSDBA.ALTER_POLICY procedure, altering policies, default policy options, HIDE option, SA_SYSDBA.CREATE_POLICY procedure, creating policies, SA_SYSDBA.DISABLE_POLICY procedure, disabling policies, SA_SYSDBA.DROP_POLICY procedure, SA_SYSDBA.DROP_POLICY policy, deleting policies, SA_SYSDBA.ENABLE_POLICY procedure, enabling policies, SA_USER_ADMIN PL/SQL package, SA_USER_ADMIN package, SA_USER_ADMIN, SA_USER_ADMIN package, SA_USER_ADMIN.ADD_COMPARTMENTS procedure, SA_USER_ADMIN.ADD_COMPARTMENTS procedure, user authorizations, adding for compartments, SA_USER_ADMIN.ADD_GROUPS procedure, SA_USER_ADMIN.ADD_GROUPS procedure, adding for groups, SA_USER_ADMIN.ALTER_COMPARTMENTS procedure, SA_USER_ADMIN.ALTER_COMPARTMENTS, altering for compartments, SA_USER_ADMIN.ALTER_GROUPS procedure, altering for groups, SA_USER_ADMIN.DROP_ALL_COMPARTMENTS procedure, components, dropping for all compartments, SA_USER_ADMIN.DROP_ALL_GROUPS procedure, dropping for all groups, SA_USER_ADMIN.DROP_COMPARTMENTS procedure, dropping for specified compartments, SA_USER_ADMIN.DROP_GROUPS procedure, dropping for specified groups, SA_USER_ADMIN.DROP_USER_ACCESS procedure, removing all OLS privileges from user, SA_USER_ADMIN.SET_COMPARTMENTS procedure, setting compartments, SA_USER_ADMIN.SET_DEFAULT_LABEL procedure, setting user initial, SA_USER_ADMIN.SET_GROUPS procedure, setting groups, SA_USER_ADMIN.SET_LEVELS procedure, setting levels, SET_PROG_PRIVS function, required for SA_USER_ADMIN.SET_PROG_PRIVS procedure, administering stored program units, SA_USER_ADMIN.SET_ROW_LABEL procedure, setting for user&rsquo;s initial use, SA_USER_ADMIN.SET_USER_LABELS procedure, required for SA_USER_ADMIN.SET_USER_PRIVS procedure, SA_USER_ADMIN.SET_USER_PRIVS procedure, privileges, PL/SQL, SA_UTL package, SA_UTL PL/SQL package, SA_UTL, utilities, SA_UTL.CHECK_LABEL_CHANGE function, checking if changed, SA_UTL.CHECK_READ function, table rows, checking if user can read, CHECK_WRITE function, SA_UTL.CHECK_WRITE function, checking if user can write to, SA_UTL.DATA_LABEL function, checking if a data label, data labels, checking if label is data label, SA_UTL.GREATEST_LBOUND function, finding greatest lower bound, SA_UTL.LEAST_UBOUND function, SA_UTL.LEAST_UBOUNDfunction, finding least upper bound, SA_UTL.NUMERIC_LABEL function, finding, finding session label number, viewing, SA_UTL.NUMERIC_ROW_LABEL function, finding current, SA_UTL.NUMERIC_ROW_LABEL function, TO_LBAC_DATA_LABEL function, example of using, SA_UTL.SET_LABEL procedure, setting label for database session, setting label for, SA_UTL.SET_LABEL, SA_UTL.SET_ROW_LABEL procedure, setting for current database session, setting row label for"/>
<meta name="dcterms.created" content="2017-03-14T13:38:49Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Label Security Administrator&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48437-08"/>
<meta name="dcterms.isVersionOf" content="OLSAG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2015, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="appxd.htm" title="Previous" type="text/html"/>
<link rel="Next" href="appc.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48437-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-D899F3FE-5A3B-47A0-9E9E-EC6F23F71C88"></a> <span id="PAGE" style="display:none;">26/29</span> <!-- End Header -->
<a id="OLSAG3812"></a>
<h1 id="OLSAG-GUID-D899F3FE-5A3B-47A0-9E9E-EC6F23F71C88" class="sect1"><span class="enumeration_appendix">E</span> Oracle Label Security PL/SQL Packages</h1>
<div>
<p>Oracle Label Security provides a set of PL/SQL packages.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="packages.htm#GUID-C4FB5E20-D9B8-48A1-9DDB-1ACA4722846E" title="For a non-unified auditing environment, the SA_AUDIT_ADMIN PL/SQL package configures auditing that is specific to Oracle Label Security.">SA_AUDIT_ADMIN Oracle Label Security Auditing PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-582E2D69-0891-4C5B-A287-E5E50A0307B1" title="The SA_COMPONENTS PL/SQL package manages the component definitions of an Oracle Label Security label.">SA_COMPONENTS Label Components PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-37A51947-C20F-4FDA-95FA-DB1A0A6579B9" title="The SA_LABEL_ADMIN PL/SQL package provides an administrative interface to manage the labels used by a policy.">SA_LABEL_ADMIN Label Management PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-5A1345FF-404B-468E-A5EA-792511E386DB" title="The SA_POLICY_ADMIN PL/SQL package manages Oracle Label Security policies as a whole.">SA_POLICY_ADMIN Policy Administration PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7" title="The SA_SESSION PL/SQL package manages session behavior for user authorizations.">SA_SESSION Session Management PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-520B4DCF-487C-4DFB-972B-0E4A9AA5E497" title="The SA_SYSDBA PL/SQL package manages Oracle Label Security policies, such as creating, altering, or disabling them.">SA_SYSDBA Policy Management PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-6567095A-13E5-43F8-9A2C-30A84E095B87" title="The SA_USER_ADMIN PL/SQL package manages user labels by label component.">SA_USER_ADMIN PL/SQL Package</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1" title="The SA_UTL PL/SQL package contains utility functions and procedures that are used in PL/SQL programs.">SA_UTL PL/SQL Utility Functions and Procedures</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-D899F3FE-5A3B-47A0-9E9E-EC6F23F71C88__GUID-FB7F1CA6-B6CD-4D81-830C-08F959B19256">
<p class="notep1">See Also:</p>
<p><a href="appxa.htm#GUID-CD606D67-78AE-427D-B397-627C68E77B84" title="Oracle Label Security provides functions to control dominance.">Using Dominance Functions</a> for additional standalone Oracle Label Security functions</p>
</div>
</div>
<a id="OLSAG3813"></a><a id="OLSAG076"></a>
<div class="props_rev_3"><a id="GUID-C4FB5E20-D9B8-48A1-9DDB-1ACA4722846E"></a>
<h2 id="OLSAG-GUID-C4FB5E20-D9B8-48A1-9DDB-1ACA4722846E" class="sect2">SA_AUDIT_ADMIN Oracle Label Security Auditing PL/SQL Package</h2>
<div>
<p>For a non-unified auditing environment, the <code class="codeph">SA_AUDIT_ADMIN</code> PL/SQL package configures auditing that is specific to Oracle Label Security.</p>
<p>If you are using unified auditing, then see <a class="olink DBSEG454" target="_blank" href="../DBSEG/audit_config.htm#DBSEG454"><span class="italic">Oracle Database Security Guide</span></a> for information about creating unified audit policies for Oracle Label Security. In a unified auditing environment, no new audit records will be generated as a result of setting the procedures that are described in this section.</p>
<p>After you have enabled systemwide auditing, you can use <code class="codeph">SA_AUDIT_ADMIN</code> PL/SQL package procedures to enable or disable Oracle Label Security auditing. To use this package, you must be granted the <span class="italic"><code class="codeph">policy</code></span><code class="codeph">_DBA</code> role (for example, <code class="codeph">HR_OLS_POL_DBA</code> for a role for the <code class="codeph">hr_ols_pol</code> policy) and the <code class="codeph">EXECUTE</code> privilege for the <code class="codeph">SA_AUDIT_ADMIN</code> package.</p>
<p><a href="packages.htm#GUID-C4FB5E20-D9B8-48A1-9DDB-1ACA4722846E__CIHCIHCC" title="SA_AUDIT_ADMIN procedures and functions">Table E-1</a> lists the <code class="codeph">SA_AUDIT_ADMIN</code> PL/SQL package procedures.</p>
<div class="tblformal" id="GUID-C4FB5E20-D9B8-48A1-9DDB-1ACA4722846E__CIHCIHCC">
<p class="titleintable">Table E-1 SA_AUDIT_ADMIN PL/SQL Package Contents</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN PL/SQL Package Contents" summary="SA_AUDIT_ADMIN procedures and functions">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3863" id="d74734e251">Procedure</th>
<th class="cellalignment3864" id="d74734e254">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e259" headers="d74734e251">
<p><a href="packages.htm#GUID-2807C91E-A1F3-4A9F-A25E-121666850D7A" title="The SA_AUDIT_ADMIN.AUDIT procedure enables policy-specific auditing.">SA_AUDIT_ADMIN.AUDIT</a></p>
</td>
<td class="cellalignment3866" headers="d74734e259 d74734e254">
<p>Enables policy-specific auditing. Auditing of each policy is independent of the others</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e273" headers="d74734e251">
<p><a href="packages.htm#GUID-46CDB6A6-EE59-4F41-B2AC-C5FAAE30C003" title="The SA_AUDIT_ADMIN.AUDIT_LABEL procedure records policy labels during auditing.">SA_AUDIT_ADMIN.AUDIT_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e273 d74734e254">
<p>Shows whether labels are being recorded in audit records for the policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e287" headers="d74734e251">
<p><a href="packages.htm#GUID-4AB3B141-20A6-4E14-8C70-9993DE14217D" title="The SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED function shows whether labels are being recorded in audit records for the policy.">SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED</a></p>
</td>
<td class="cellalignment3866" headers="d74734e287 d74734e254">
<p>Shows whether labels are being recorded in audit records for the policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e301" headers="d74734e251">
<p><a href="packages.htm#GUID-A18A3403-9B57-40A1-AD9D-E7BCACB56B48" title="The SA_AUDIT_ADMIN.CREATE_VIEW procedure creates an audit trail view named DBA_policyname_AUDIT_TRAIL.">SA_AUDIT_ADMIN.CREATE_VIEW</a></p>
</td>
<td class="cellalignment3866" headers="d74734e301 d74734e254">
<p>Creates an audit trail view named <code class="codeph">DBA_</code><span class="italic"><code class="codeph">policyname</code></span><code class="codeph">_AUDIT_TRAIL</code>, which contains the specified policy&#39;s label column as well as all the entries in the audit trail written on behalf of this policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e331" headers="d74734e251">
<p><a href="packages.htm#GUID-5F5C5C7E-AEB1-4CF1-9777-9A7DFECF610C" title="The SA_AUDIT_ADMIN.DROP_VIEW procedure drops the audit trail view for the specified policy.">SA_AUDIT_ADMIN.DROP_VIEW</a></p>
</td>
<td class="cellalignment3866" headers="d74734e331 d74734e254">
<p>Drops the audit trail view (created by the <code class="codeph">SA_AUDIT_ADMIN.CREATE_VIEW</code> procedure) for the specified policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e348" headers="d74734e251">
<p><a href="packages.htm#GUID-CC71B684-06CF-4BDE-8F3A-3E88FC486D6D" title="The SA_AUDIT_ADMIN.NOAUDIT procedure disables Oracle Label Security policy-specific auditing.">SA_AUDIT_ADMIN.NOAUDIT</a></p>
</td>
<td class="cellalignment3866" headers="d74734e348 d74734e254">
<p>Disables Oracle Label Security policy-specific auditing</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e362" headers="d74734e251">
<p><a href="packages.htm#GUID-69D92340-9F41-4E70-8359-5B375124149C" title="The SA_AUDIT_ADMIN.NOAUDIT_LABEL procedure disables the auditing of policy labels.">SA_AUDIT_ADMIN.NOAUDIT_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e362 d74734e254">
<p>Disables the auditing of policy labels</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-C4FB5E20-D9B8-48A1-9DDB-1ACA4722846E__GUID-F2366370-65F8-429A-BDBB-DC8DC5026C74">
<p class="notep1">See Also:</p>
<p><a href="intro.htm#GUID-97B4941D-079A-48D1-BF98-04DDB128F990" title="Oracle Label Security administrators have a set of package- and role-based privileges.">Duties of Oracle Label Security Administrators</a> for information about the <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> role</p>
</div>
</div>
<a id="OLSAG3814"></a><a id="OLSAG3815"></a><a id="OLSAG3816"></a><a id="OLSAG3817"></a><a id="OLSAG3385"></a>
<div class="props_rev_3"><a id="GUID-2807C91E-A1F3-4A9F-A25E-121666850D7A"></a>
<h3 id="OLSAG-GUID-2807C91E-A1F3-4A9F-A25E-121666850D7A" class="sect3">SA_AUDIT_ADMIN.AUDIT</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.AUDIT</code> procedure enables policy-specific auditing.</p>
<div class="section">
<p>Auditing of each policy is independent of the others. The audit records capture Oracle Label Security administrative actions and the use of Oracle Label Security privileges that were used during logons, DML executions, and trusted stored procedure invocations.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.AUDIT (
     policy_name     IN VARCHAR2,
     users           IN VARCHAR2 DEFAULT NULL,
     audit_option    IN VARCHAR2 DEFAULT NULL,
     audit_type      IN VARCHAR2 DEFAULT NULL,
     success         IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-2807C91E-A1F3-4A9F-A25E-121666850D7A__GUID-725DE6CA-2095-4B42-A3EA-DDEB09462FE5">
<p class="titleintable">Table E-2 SA_AUDIT_ADMIN.AUDIT Parameters</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.AUDIT Parameters" summary="SA_AUDIT_ADMIN.AUDIT Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3861" id="d74734e475">Parameter</th>
<th class="cellalignment3867" id="d74734e478">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e483" headers="d74734e475">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3868" headers="d74734e483 d74734e478">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e497" headers="d74734e475">
<p><code class="codeph">users</code></p>
</td>
<td class="cellalignment3868" headers="d74734e497 d74734e478">
<p>Optional. A comma-delimited list of user names to audit, as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>If you are auditing OLS administrative actions, then ensure that the users you enter have the <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> role and the <code class="codeph">EXECUTE</code> privilege for the Oracle Label Security packages.</p>
</li>
<li>
<p>If you are auditing the use of OLS privileges, then these users do not need to be OLS administrators.</p>
</li>
<li>
<p>If you do not specify any users, then all users are audited.</p>
</li>
</ul>
<p>To find users who have privileges to modify Oracle Label Security policies, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USERS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e532" headers="d74734e475">
<p><code class="codeph">audit_option</code></p>
</td>
<td class="cellalignment3868" headers="d74734e532 d74734e478">
<p>Optional. A comma-delimited list of options to be audited. Options are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">APPLY</code>: Audits application of specified Oracle Label Security policies to tables and schemas</p>
</li>
<li>
<p><code class="codeph">REMOVE</code>: Audits removal of specified Oracle Label Security policies from tables and schemas</p>
</li>
<li>
<p><code class="codeph">SET</code>: Audits the setting of user authorizations, and user and program privileges</p>
</li>
<li>
<p><code class="codeph">PRIVILEGES</code>: Audits use of all policy-specific privileges</p>
</li>
</ul>
<p>If not specified, then all default options (that is, options not including privileges) are audited. Audit options for privileged operations should be set explicitly by specifying the <code class="codeph">PRIVILEGES</code> option, which sets audit options for all privileges.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e566" headers="d74734e475">
<p><code class="codeph">audit_type</code></p>
</td>
<td class="cellalignment3868" headers="d74734e566 d74734e478">
<p>Optional. <code class="codeph">BY</code> <code class="codeph">ACCESS</code> or <code class="codeph">BY</code> <code class="codeph">SESSION</code>. If not specified, then audit records are written <code class="codeph">BY SESSION</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e589" headers="d74734e475">
<p><code class="codeph">success</code></p>
</td>
<td class="cellalignment3868" headers="d74734e589 d74734e478">
<p>Optional. <code class="codeph">SUCCESSFUL</code> if the action was successful, or <code class="codeph">NOT</code> <code class="codeph">SUCCESSFUL</code>. If not specified, then audit is written for both.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example audits any failed <code class="codeph">APPLY</code> and <code class="codeph">REMOVE</code> attempts by the users <code class="codeph">psmith</code> and <code class="codeph">rlayton</code>.</p>
<pre dir="ltr">BEGIN
 SA_AUDIT_ADMIN.AUDIT(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  users            =&gt; &#39;jjones, rlayton&#39;,
  audit_option     =&gt; &#39;apply, remove&#39;,
  audit_type       =&gt; &#39;by access&#39;,
  success          =&gt; &#39;not successful&#39;);
END;
/
</pre>
<p>If the you do not specify any audit options, then all options except the privilege-related ones are audited. You must specify the auditing of privileges explicitly. For example, if you enter the following statement, then the default options are set for the <code class="codeph">hr_ols_pol</code> policy:</p>
<pre dir="ltr">EXEC SA_AUDIT_ADMIN.AUDIT (&#39;hr_ols_pol&#39;);
</pre>
<p>When you enable auditing, it will be performed on all users by session, whether their actions are successful or not.</p>
<p>When you set auditing parameters and options, the new values apply only to subsequent sessions, not to the current session.</p>
<p>Consider also a case in which one <code class="codeph">SA_AUDIT_ADMIN.AUDIT</code> call (with no users specified) enables auditing for <code class="codeph">APPLY</code> operations for all users, and then a second call enables auditing of <code class="codeph">REMOVE</code> operations for a specific user. For example:</p>
<pre dir="ltr">EXEC SA_AUDIT_ADMIN.AUDIT (&#39;hr_ols_pol&#39;, null, &#39;apply&#39;);
EXEC SA_AUDIT_ADMIN.AUDIT (&#39;hr_ols_pol&#39;, &#39;scott&#39;, &#39;remove&#39;);
</pre>
<p>In this case, <code class="codeph">SCOTT</code> is audited for both <code class="codeph">APPLY</code> and <code class="codeph">REMOVE</code> operations.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3818"></a><a id="OLSAG3819"></a><a id="OLSAG3820"></a><a id="OLSAG3821"></a><a id="OLSAG3390"></a>
<div class="props_rev_3"><a id="GUID-46CDB6A6-EE59-4F41-B2AC-C5FAAE30C003"></a>
<h3 id="OLSAG-GUID-46CDB6A6-EE59-4F41-B2AC-C5FAAE30C003" class="sect3">SA_AUDIT_ADMIN.AUDIT_LABEL</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.AUDIT_LABEL</code> procedure records policy labels during auditing.</p>
<div class="section">
<p>This procedure stores the user&#39;s session label in the audit table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.AUDIT_LABEL (
     policy_name     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-46CDB6A6-EE59-4F41-B2AC-C5FAAE30C003__GUID-F68F2911-50D0-41E6-9D6D-C492DD85A221">
<p class="titleintable">Table E-3 SA_AUDIT_ADMIN.AUDIT_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.AUDIT_LABEL Parameter" summary="SA_AUDIT_ADMIN.AUDIT_LABEL Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e745">Parameter</th>
<th class="cellalignment3823" id="d74734e748">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e753" headers="d74734e745">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e753 d74734e748">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example writes output indicating whether the Oracle Label Security labels are being audited for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_AUDIT_ADMIN.AUDIT_LABEL(
  policy_name      =&gt; &#39;hr_ols_pol&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3822"></a><a id="OLSAG3823"></a><a id="OLSAG3824"></a><a id="OLSAG3825"></a><a id="OLSAG3392"></a>
<div class="props_rev_3"><a id="GUID-4AB3B141-20A6-4E14-8C70-9993DE14217D"></a>
<h3 id="OLSAG-GUID-4AB3B141-20A6-4E14-8C70-9993DE14217D" class="sect3">SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED</code> function shows whether labels are being recorded in audit records for the policy.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED ( 
  policy_name IN VARCHAR2)
RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4AB3B141-20A6-4E14-8C70-9993DE14217D__GUID-413891AC-948A-4E87-ADD9-012E87303A8B">
<p class="titleintable">Table E-4 SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED Parameter</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED Parameter" summary="SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e860">Parameter</th>
<th class="cellalignment3823" id="d74734e863">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e868" headers="d74734e860">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e868 d74734e863">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example writes output indicating whether the Oracle Label Security labels are being audited for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
BEGIN 
 IF SA_AUDIT_ADMIN.AUDIT_LABEL_ENABLED(&#39;hr_ols_pol&#39;)  
  THEN DBMS_OUTPUT.PUT_LINE(&#39;OLS hr_ols_pol labels are being audited.&#39;);
 ELSE 
  DBMS_OUTPUT.PUT_LINE(&#39;OLS hr_ols_pol labels not being audited.&#39;); 
 END IF; 
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3826"></a><a id="OLSAG3827"></a><a id="OLSAG3828"></a><a id="OLSAG3829"></a><a id="OLSAG3393"></a>
<div class="props_rev_3"><a id="GUID-A18A3403-9B57-40A1-AD9D-E7BCACB56B48"></a>
<h3 id="OLSAG-GUID-A18A3403-9B57-40A1-AD9D-E7BCACB56B48" class="sect3">SA_AUDIT_ADMIN.CREATE_VIEW</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.CREATE_VIEW</code> procedure creates an audit trail view named <code class="codeph">DBA_</code><span class="italic"><code class="codeph">policyname</code></span><code class="codeph">_AUDIT_TRAIL</code>.</p>
<p>This view contains the specified policy&#39;s label column as well as all the entries in the audit trail written on behalf of this policy. If the view name exceeds the database limit of 30 characters, then the user can optionally specify a shorter view name.</p>
<div class="infoboxnotealso" id="GUID-A18A3403-9B57-40A1-AD9D-E7BCACB56B48__GUID-170A6C34-A2B6-46CB-9EF7-20DC99325780">
<p class="notep1">See Also:</p>
<p><a href="appc.htm#GUID-AF7C32DE-2349-4B33-9294-98D5B829A503" title="The SA_AUDIT_ADMIN.CREATE_VIEW procedure can be used to create an audit trail view for a specific policy.">Oracle Label Security User-Created Auditing View</a> to find the columns that are contained in the <code class="codeph">DBA_</code><span class="italic"><code class="codeph">policyname</code></span><code class="codeph">_AUDIT_TRAIL</code> view</p>
</div>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.CREATE_VIEW (
     policy_name     IN VARCHAR2,
     view_name       IN VARCHAR2    DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="section">
<div class="tblformal" id="GUID-A18A3403-9B57-40A1-AD9D-E7BCACB56B48__GUID-DBECA37C-D547-4C2D-A12E-60F8A0D90C99">
<p class="titleintable">Table E-5 SA_AUDIT_ADMIN.CREATE_VIEW Parameters</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.CREATE_VIEW Parameters" summary="SA_AUDIT_ADMIN.CREATE_VIEW Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e1011">Parameter</th>
<th class="cellalignment3823" id="d74734e1014">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1019" headers="d74734e1011">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1019 d74734e1014">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1033" headers="d74734e1011">
<p><code class="codeph">view_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1033 d74734e1014">
<p>Optional. Specifies the name of the view name. If you omit this setting, then the name defaults to <code class="codeph">DBA_</code><span class="italic"><code class="codeph">policyname</code></span><code class="codeph">_AUDIT_TRAIL</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a view called <code class="codeph">hr_ols_pol_view</code> for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_AUDIT_ADMIN.CREATE_VIEW(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  view_name        =&gt; &#39;hr_ols_pol_view&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3830"></a><a id="OLSAG3831"></a><a id="OLSAG3832"></a><a id="OLSAG3833"></a><a id="OLSAG3394"></a>
<div class="props_rev_3"><a id="GUID-5F5C5C7E-AEB1-4CF1-9777-9A7DFECF610C"></a>
<h3 id="OLSAG-GUID-5F5C5C7E-AEB1-4CF1-9777-9A7DFECF610C" class="sect3">SA_AUDIT_ADMIN.DROP_VIEW</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.DROP_VIEW</code> procedure drops the audit trail view for the specified policy.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.DROP_VIEW (
     policy_name     IN VARCHAR2,
     view_name       IN VARCHAR2    DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5F5C5C7E-AEB1-4CF1-9777-9A7DFECF610C__GUID-7E20BA5E-F8E6-4F14-93BC-9EF7C473E57C">
<p class="titleintable">Table E-6 SA_AUDIT_ADMIN.DROP_VIEW Parameters</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.DROP_VIEW Parameters" summary="SA_AUDIT_ADMIN.DROP_VIEW Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e1144">Parameter</th>
<th class="cellalignment3823" id="d74734e1147">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1152" headers="d74734e1144">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1152 d74734e1147">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1166" headers="d74734e1144">
<p><code class="codeph">view_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1166 d74734e1147">
<p>Specifies an existing view&#39;s name. You can find this view by first querying the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view to find the name of the policy on which the view was based, and then querying <code class="codeph">ALL_VIEWS</code> data dictionary view to find any views that have the name of the policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the view called <code class="codeph">hr_ols_pol_view</code> from the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_AUDIT_ADMIN.DROP_VIEW(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  view_name        =&gt; &#39;hr_ols_pol_view&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3834"></a><a id="OLSAG3835"></a><a id="OLSAG3836"></a><a id="OLSAG3837"></a><a id="OLSAG3386"></a>
<div class="props_rev_3"><a id="GUID-CC71B684-06CF-4BDE-8F3A-3E88FC486D6D"></a>
<h3 id="OLSAG-GUID-CC71B684-06CF-4BDE-8F3A-3E88FC486D6D" class="sect3">SA_AUDIT_ADMIN.NOAUDIT</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.NOAUDIT</code> procedure disables Oracle Label Security policy-specific auditing.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.NOAUDIT (
     policy_name     IN VARCHAR2,
     users           IN VARCHAR2 DEFAULT NULL,
     audit_option    IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CC71B684-06CF-4BDE-8F3A-3E88FC486D6D__GUID-746B31F1-0923-47D8-8A51-AB0317502E18">
<p class="titleintable">Table E-7 SA_AUDIT_ADMIN.NO_AUDIT Parameters</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.NO_AUDIT Parameters" summary="SA_AUDIT_ADMIN.NO_AUDIT Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e1266">Parameter</th>
<th class="cellalignment3823" id="d74734e1269">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1274" headers="d74734e1266">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1274 d74734e1269">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1288" headers="d74734e1266">
<p><code class="codeph">users</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1288 d74734e1269">
<p>Optional. A comma-delimited list of users who were audited. If not specified, then auditing is disabled for all users.</p>
<p>To find users who have privileges to modify Oracle Label Security policies, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">ALL_SA_AUDIT_OPTIONS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1304" headers="d74734e1266">
<p><code class="codeph">audit_option</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1304 d74734e1269">
<p>Optional. A comma-delimited list of options to be disabled. Options are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">APPLY</code>: Audits application of specified Oracle Label Security policies to tables and schemas</p>
</li>
<li>
<p><code class="codeph">REMOVE</code>: Audits removal of specified Oracle Label Security policies from tables and schemas</p>
</li>
<li>
<p><code class="codeph">SET</code>: Audits the setting of user authorizations, and user and program privileges</p>
</li>
<li>
<p><code class="codeph">PRIVILEGES</code>: Audits use of all policy-specific privileges</p>
</li>
</ul>
<p>If not specified, then all default options are disabled. Privileges must be disabled explicitly.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example disables auditing for failed <code class="codeph">APPLY</code> and <code class="codeph">REMOVE</code> attempts by the users <code class="codeph">psmith</code> and <code class="codeph">rlayton</code>.</p>
<pre dir="ltr">BEGIN
 SA_AUDIT_ADMIN.NOAUDIT(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  users            =&gt; &#39;jjones&#39;,
  audit_option     =&gt; &#39;apply, remove&#39;);
END;
/
</pre>
<p>You can disable auditing for all enabled options, or only for a subset of enabled options. All auditing for the specified options is disabled for all specified users (or all users, if the <span class="italic">users</span> parameter is <code class="codeph">NULL</code>). For example, the following statement disables auditing of the <code class="codeph">APPLY</code> and <code class="codeph">REMOVE</code> operations for users John, Mary, and Scott:</p>
<pre dir="ltr">EXEC SA_AUDIT_ADMIN.NOAUDIT (&#39;HR&#39;, &#39;JOHN, MARY, SCOTT&#39;, &#39;APPLY, REMOVE&#39;);
</pre>
<p>Consider also a case in which one <code class="codeph">AUDIT</code> call enables auditing for a specific user, and a second call (with no user specified) enables auditing for all users. For example:</p>
<pre dir="ltr">EXEC SA_AUDIT_ADMIN.AUDIT (&#39;HR&#39;, &#39;SCOTT&#39;);
EXEC SA_AUDIT_ADMIN.AUDIT (&#39;HR&#39;);
</pre>
<p>In this case, a subsequent call to <code class="codeph">NOAUDIT</code> with no users specified (such as the following statement) does not reverse the auditing that was set for <code class="codeph">SCOTT</code> explicitly in the first call. So, auditing continues to be performed on <code class="codeph">SCOTT</code>.</p>
<pre dir="ltr">EXEC SA_AUDIT_ADMIN.NOAUDIT (&#39;HR&#39;);
</pre>
<p>In this way, even if <code class="codeph">SA_AUDIT_ADMIN.NOAUDIT</code> is set for all users, Oracle Label Security still audits any users for whom auditing was explicitly set.</p>
<p>Auditing of privileged operations must be specified explicitly. If you run <code class="codeph">SA_AUDIT_ADMIN.NOAUDIT</code> with no options, the Oracle Label Security will nonetheless continue to audit privileged operations. For example, if auditing is enabled and you enter</p>
<pre dir="ltr">EXEC SA_AUDIT_ADMIN.NOAUDIT (&#39;HR&#39;);
</pre>
<p>then auditing will continue to be performed on the privileged operations (such as <code class="codeph">WRITEDOWN</code>).</p>
<p><code class="codeph">SA_AUDIT_ADMIN.NOAUDIT</code> parameters and options that you set apply only to subsequent sessions, not to current sessions.</p>
<p>If you try to enable an audit option that has already been set, or if you try to disable an audit option that has not been set, then Oracle Label Security processes the statement without indicating an error. An attempt to specify an invalid option results in an error message. You can find the status of audit options by querying the <code class="codeph">ALL_SA_AUDIT_OPTIONS</code> data dictionary view.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3838"></a><a id="OLSAG3839"></a><a id="OLSAG3840"></a><a id="OLSAG3841"></a><a id="OLSAG3391"></a>
<div class="props_rev_3"><a id="GUID-69D92340-9F41-4E70-8359-5B375124149C"></a>
<h3 id="OLSAG-GUID-69D92340-9F41-4E70-8359-5B375124149C" class="sect3">SA_AUDIT_ADMIN.NOAUDIT_LABEL</h3>
<div>
<p>The <code class="codeph">SA_AUDIT_ADMIN.NOAUDIT_LABEL</code> procedure disables the auditing of policy labels.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_AUDIT_ADMIN.NOAUDIT_LABEL (
   policy_name     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-69D92340-9F41-4E70-8359-5B375124149C__GUID-53BDBF66-4704-4F57-AE9E-F03D75A31818">
<p class="titleintable">Table E-8 SA_AUDIT_ADMIN.NO_AUDIT_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_AUDIT_ADMIN.NO_AUDIT_LABEL Parameter" summary="SA_AUDIT_ADMIN.NO_AUDIT_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e1501">Parameter</th>
<th class="cellalignment3823" id="d74734e1504">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1509" headers="d74734e1501">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1509 d74734e1504">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example disables auditing for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_AUDIT_ADMIN.NOAUDIT_LABEL(
  policy_name      =&gt; &#39;hr_ols_pol&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG3842"></a><a id="OLSAG045"></a>
<div class="props_rev_3"><a id="GUID-582E2D69-0891-4C5B-A287-E5E50A0307B1"></a>
<h2 id="OLSAG-GUID-582E2D69-0891-4C5B-A287-E5E50A0307B1" class="sect2">SA_COMPONENTS Label Components PL/SQL Package</h2>
<div>
<p>The <code class="codeph">SA_COMPONENTS</code> PL/SQL package manages the component definitions of an Oracle Label Security label.</p>
</div>
<a id="OLSAG3843"></a><a id="OLSAG3844"></a><a id="OLSAG3246"></a><a id="OLSAG3845"></a><a id="OLSAG3245"></a>
<div class="props_rev_3"><a id="GUID-DE14921F-F515-4C3F-88BA-EFDF3663DC8B"></a>
<h3 id="OLSAG-GUID-DE14921F-F515-4C3F-88BA-EFDF3663DC8B" class="sect3">SA_COMPONENTS.ALTER_COMPARTMENT</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.ALTER_COMPARTMENT</code> procedure changes the short name and long name associated with a compartment.</p>
<div class="section">
<p>Once set, the <code class="codeph">comp_num</code> parameter cannot be changed. If the <code class="codeph">comp_num</code> parameter is used in any existing label, then its short name <span class="italic">cannot</span> be changed but its long name <span class="italic">can</span> be changed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.ALTER_COMPARTMENT (
   policy_name       IN VARCHAR2,
   comp_num          IN NUMBER(38),
   new_short_name    IN VARCHAR2,
   new_long_name     IN VARCHAR2);

SA_COMPONENTS.ALTER_COMPARTMENT (
   policy_name       IN VARCHAR2,
   short_name        IN VARCHAR2 DEFAULT NULL,
   new_long_name     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-DE14921F-F515-4C3F-88BA-EFDF3663DC8B__GUID-7846AFD2-10FC-4BD0-9616-A034CF7EF970">
<p class="titleintable">Table E-9 SA_COMPONENTS.ALTER_COMPARTMENT Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.ALTER_COMPARTMENT Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.ALTER_COMPARTMENT.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3869" id="d74734e1677">Parameter</th>
<th class="cellalignment3870" id="d74734e1680">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3871" id="d74734e1685" headers="d74734e1677">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3872" headers="d74734e1685 d74734e1680">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3871" id="d74734e1699" headers="d74734e1677">
<p><code class="codeph">comp_num</code></p>
</td>
<td class="cellalignment3872" headers="d74734e1699 d74734e1680">
<p>Specifies the number of the compartment to be altered. To find a list of existing compartment numbers, query the <code class="codeph">COMP_NUM</code> column of the <code class="codeph">ALL_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3871" id="d74734e1713" headers="d74734e1677">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3872" headers="d74734e1713 d74734e1680">
<p>Specifies the short name of the compartment to be altered (up to 30 characters). To find the current compartment, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3871" id="d74734e1727" headers="d74734e1677">
<p><code class="codeph">new_short_name</code></p>
</td>
<td class="cellalignment3872" headers="d74734e1727 d74734e1680">
<p>Specifies the new short name of the compartment (up to 30 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3871" id="d74734e1735" headers="d74734e1677">
<p><code class="codeph">new_long_name</code></p>
</td>
<td class="cellalignment3872" headers="d74734e1735 d74734e1680">
<p>Specifies the new long name of the compartment (up to 80 characters).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example modifies the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.ALTER_COMPARTMENT (
   policy_name         =&gt; &#39;hr_ols_pol&#39;,
   comp_num            =&gt; &#39;48&#39;,
   new_short_name      =&gt; &#39;FIN&#39;,
   new_long_name       =&gt; &#39;FINANCE&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3846"></a><a id="OLSAG3847"></a><a id="OLSAG3252"></a><a id="OLSAG3848"></a><a id="OLSAG3251"></a>
<div class="props_rev_3"><a id="GUID-580E9A88-5A9C-484A-B985-16391E42641D"></a>
<h3 id="OLSAG-GUID-580E9A88-5A9C-484A-B985-16391E42641D" class="sect3">SA_COMPONENTS.ALTER_GROUP</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.ALTER_GROUP</code> procedure changes the short name and long name associated with a group.</p>
<div class="section">
<p>Once set, the <code class="codeph">group_num</code> parameter cannot be changed. If the group is used in any existing label, then its short name <span class="italic">cannot</span> be changed, but its long name <span class="italic">can</span> be changed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.ALTER_GROUP (
   policy_name    IN VARCHAR2,
   group_num      IN NUMBER(38),
   new_short_name IN VARCHAR2 DEFAULT NULL,
   new_long_name  IN VARCHAR2 DEFAULT NULL);

SA_COMPONENTS.ALTER_GROUP (
   policy_name    IN VARCHAR2,
   short_name     IN VARCHAR2,
   new_long_name  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-580E9A88-5A9C-484A-B985-16391E42641D__GUID-1063C937-ADED-429A-8A26-5DD764A04FF3">
<p class="titleintable">Table E-10 SA_COMPONENTS.ALTER_GROUP Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.ALTER_GROUP Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.ALTER_GROUP.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e1847">Parameter</th>
<th class="cellalignment3823" id="d74734e1850">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1855" headers="d74734e1847">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1855 d74734e1850">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1869" headers="d74734e1847">
<p><code class="codeph">group_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1869 d74734e1850">
<p>Specifies the existing group number to be altered. To find existing group numbers, query the <code class="codeph">GROUP_NUM</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1883" headers="d74734e1847">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1883 d74734e1850">
<p>Specifies the existing group short name to be altered. To find existing short names, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1897" headers="d74734e1847">
<p><code class="codeph">new_short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1897 d74734e1850">
<p>Specifies the new short name for the group (up to 30 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e1905" headers="d74734e1847">
<p><code class="codeph">new_long_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e1905 d74734e1850">
<p>Specifies the new long name for the group (up to 80 characters)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example modifies the <code class="codeph">long_name</code> setting for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.ALTER_GROUP (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   short_name      =&gt; &#39;ER_FIN&#39;,
   new_long_name   =&gt; &#39;ER_FINANCES&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3849"></a><a id="OLSAG3850"></a><a id="OLSAG3254"></a><a id="OLSAG3851"></a><a id="OLSAG3253"></a>
<div class="props_rev_3"><a id="GUID-1695AF8A-EB48-4354-908E-99D25B9D1763"></a>
<h3 id="OLSAG-GUID-1695AF8A-EB48-4354-908E-99D25B9D1763" class="sect3">SA_COMPONENTS.ALTER_GROUP_PARENT</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.ALTER_GROUP_PARENT</code> procedure changes the parent group associated with a particular group.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.ALTER_GROUP_PARENT (
   policy_name     IN VARCHAR2,
   group_num       IN NUMBER(38),
   new_parent_num  IN NUMBER(38));

SA_COMPONENTS.ALTER_GROUP_PARENT (
   policy_name     IN VARCHAR2,
   group_num       IN NUMBER(38),
   new_parent_name IN VARCHAR2);

SA_COMPONENTS.ALTER_GROUP_PARENT (
   policy_name     IN VARCHAR2,
   short_name      IN VARCHAR2,
   new_parent_name IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-1695AF8A-EB48-4354-908E-99D25B9D1763__GUID-0A6BBB60-0284-4450-A0F8-5D555852DF98">
<p class="titleintable">Table E-11 SA_COMPONENTS.ALTER_GROUP_PARENT Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.ALTER_GROUP_PARENT Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.ALTER_GROUP_PARENT.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2007">Parameter</th>
<th class="cellalignment3823" id="d74734e2010">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2015" headers="d74734e2007">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2015 d74734e2010">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2029" headers="d74734e2007">
<p><code class="codeph">group_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2029 d74734e2010">
<p>Specifies the existing group number to be altered. To find existing group numbers, query the <code class="codeph">GROUP_NUM</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2043" headers="d74734e2007">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2043 d74734e2010">
<p>Specifies the existing group short name to be altered. To find existing short names, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2057" headers="d74734e2007">
<p><code class="codeph">new_parent_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2057 d74734e2010">
<p>Specifies the number of an existing group as the parent group. To find existing parent groups, query the <code class="codeph">PARENT_NUM</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2071" headers="d74734e2007">
<p><code class="codeph">new_parent_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2071 d74734e2010">
<p>Specifies the short name of an existing group as the parent group. To find existing groups, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example modifies the parent name for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.ALTER_GROUP_PARENT (
   policy_name         =&gt; &#39;hr_ols_pol&#39;,
   group_num           =&gt; 2100,
   new_parent_name     =&gt; &#39;ER&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3852"></a><a id="OLSAG3853"></a><a id="OLSAG3240"></a><a id="OLSAG3854"></a><a id="OLSAG3239"></a>
<div class="props_rev_3"><a id="GUID-4E121FEF-7FC9-4937-9631-2DFB2806C865"></a>
<h3 id="OLSAG-GUID-4E121FEF-7FC9-4937-9631-2DFB2806C865" class="sect3">SA_COMPONENTS.ALTER_LEVEL</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.ALTER_LEVEL</code> procedure changes the short name and long name associated with a level.</p>
<div class="section">
<p>Once they are defined, level numbers cannot be changed. If a level is used in any existing label, then its short name <span class="italic">cannot</span> be changed, but its long name <span class="italic">can</span> be changed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.ALTER_LEVEL (
   policy_name     IN VARCHAR2,
   level_num       IN NUMBER(38),
   new_short_name  IN VARCHAR2 DEFAULT NULL,
   new_long_name   IN VARCHAR2 DEFAULT NULL);

SA_COMPONENTS.ALTER_LEVEL (
   policy_name     IN VARCHAR2,
   short_name      IN VARCHAR2,
   new_long_name   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4E121FEF-7FC9-4937-9631-2DFB2806C865__GUID-DDA521FE-D874-4AF3-99CF-5BC6D0698BB0">
<p class="titleintable">Table E-12 SA_COMPONENTS.ALTER_LEVEL Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.ALTER_LEVEL Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.ALTER_LEVEL.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2185">Parameter</th>
<th class="cellalignment3823" id="d74734e2188">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2193" headers="d74734e2185">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2193 d74734e2188">
<p>Specifies the policy, which much exist. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2207" headers="d74734e2185">
<p><code class="codeph">level_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2207 d74734e2188">
<p>Specifies the number of the level to be altered. To find existing levels, query the <code class="codeph">LEVEL_NUM</code> column of the <code class="codeph">ALL_SA_LEVELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2221" headers="d74734e2185">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2221 d74734e2188">
<p>Specifies the existing short name of the level. To find existing level short names, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_LEVELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2235" headers="d74734e2185">
<p><code class="codeph">new_short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2235 d74734e2188">
<p>Specifies the new short name for the level (up to 30 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2243" headers="d74734e2185">
<p><code class="codeph">new_long_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2243 d74734e2188">
<p>Specifies the new long name for the level (up to 80 characters)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example modifies the short and long names for the <code class="codeph">hr_ols_pol</code> policy level.</p>
<pre dir="ltr">BEGIN
 SA_COMPONENTS.ALTER_LEVEL (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   level_num       =&gt; 40,
   new_short_name  =&gt; &#39;TS&#39;,
   new_long_name   =&gt; &#39;TOP_SECRET&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3855"></a><a id="OLSAG3856"></a><a id="OLSAG3244"></a><a id="OLSAG3857"></a><a id="OLSAG3243"></a>
<div class="props_rev_3"><a id="GUID-119464B5-82FA-4820-A277-0659F79EA751"></a>
<h3 id="OLSAG-GUID-119464B5-82FA-4820-A277-0659F79EA751" class="sect3">SA_COMPONENTS.CREATE_COMPARTMENT</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.CREATE_COMPARTMENT</code> procedure creates a compartment and specify its short name and long name.</p>
<div class="section">
<p>The <code class="codeph">comp_num</code> parameter determines the order in which compartments are listed in the character string representation of labels.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.CREATE_COMPARTMENT (
   policy_name IN VARCHAR2,
   comp_num    IN NUMBER(38),
   short_name  IN VARCHAR2,
   long_name   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-119464B5-82FA-4820-A277-0659F79EA751__GUID-98BC0B83-DBD9-4421-83DB-60E2CE83EA5E">
<p class="titleintable">Table E-13 SA_COMPONENTS.CREATE_COMPARTMENT Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.CREATE_COMPARTMENT Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.CREATE_COMPARTMENT.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2349">Parameter</th>
<th class="cellalignment3823" id="d74734e2352">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2357" headers="d74734e2349">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2357 d74734e2352">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2371" headers="d74734e2349">
<p><code class="codeph">comp_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2371 d74734e2352">
<p>Specifies the compartment number (0-9999)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2379" headers="d74734e2349">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2379 d74734e2352">
<p>Specifies the short name for the compartment (up to 30 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2387" headers="d74734e2349">
<p><code class="codeph">long_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2387 d74734e2352">
<p>Specifies the long name for the compartment (up to 80 characters)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a compartment for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.CREATE_COMPARTMENT (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   comp_num        =&gt; &#39;48&#39;,
   short_name      =&gt; &#39;FIN&#39;,
   long_name       =&gt; &#39;FINANCE&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3858"></a><a id="OLSAG3859"></a><a id="OLSAG3250"></a><a id="OLSAG3860"></a><a id="OLSAG3249"></a>
<div class="props_rev_3"><a id="GUID-F0CA4AEB-6113-4E6E-AF79-241D7E48ECE5"></a>
<h3 id="OLSAG-GUID-F0CA4AEB-6113-4E6E-AF79-241D7E48ECE5" class="sect3">SA_COMPONENTS.CREATE_GROUP</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.CREATE_GROUP</code> procedure creates a group and specify its short name and long name, and optionally a parent group.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.CREATE_GROUP (
   policy_name IN VARCHAR2,
   group_num   IN NUMBER(38),
   short_name  IN VARCHAR2,
   long_name   IN VARCHAR2,
   parent_name IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-F0CA4AEB-6113-4E6E-AF79-241D7E48ECE5__GUID-E1550517-1F36-4CEF-98A5-7E53CB4D76FF">
<p class="titleintable">Table E-14 SA_COMPONENTS.CREATE_GROUP Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.CREATE_GROUP Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.CREATE_GROUP.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2486">Parameter</th>
<th class="cellalignment3823" id="d74734e2489">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2494" headers="d74734e2486">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2494 d74734e2489">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2508" headers="d74734e2486">
<p><code class="codeph">group_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2508 d74734e2489">
<p>Specifies the group number (0-9999)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2516" headers="d74734e2486">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2516 d74734e2489">
<p>Specifies the short name for the group (up to 30 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2524" headers="d74734e2486">
<p><code class="codeph">long_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2524 d74734e2489">
<p>Specifies the long name for the group (up to 80 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2532" headers="d74734e2486">
<p><code class="codeph">parent_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2532 d74734e2489">
<p>Specifies the short name of an existing group as the parent group. If <code class="codeph">NULL</code>, then the group is a top-level group.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>Note that the group number affects the order in which groups will be displayed when labels are selected.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>In the following examples, the first creates a parent group, <code class="codeph">ER</code>, and the second creates a second group that is part of the parent group.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.CREATE_GROUP (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   group_num       =&gt; 2000,
   short_name      =&gt; &#39;ER&#39;,
   long_name       =&gt; &#39;EAST_REGION&#39;);
END;
/
 
BEGIN
  SA_COMPONENTS.CREATE_GROUP (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   group_num       =&gt; 2100,
   short_name      =&gt; &#39;ER_FIN&#39;,
   long_name       =&gt; &#39;ER_FINANCES&#39;,
   parent_name     =&gt; &#39;ER&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-F0CA4AEB-6113-4E6E-AF79-241D7E48ECE5__GUID-0F4135F5-BDE2-4F2C-A1CA-3BAFFA2A4B1D">
<p class="notep1">See Also:</p>
<p><a href="labels.htm#GUID-29BE3851-93A9-47C1-92BF-57C7BF7D4181" title="Groups identify organizations owning or accessing the data, such as EASTERN_REGION, WESTERN_REGION, WR_SALES.">Group Components</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3861"></a><a id="OLSAG3862"></a><a id="OLSAG3238"></a><a id="OLSAG3863"></a><a id="OLSAG3237"></a>
<div class="props_rev_3"><a id="GUID-C266B7C5-DAF4-4A97-B17F-AF39D286F17D"></a>
<h3 id="OLSAG-GUID-C266B7C5-DAF4-4A97-B17F-AF39D286F17D" class="sect3">SA_COMPONENTS.CREATE_LEVEL</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.CREATE_LEVEL</code> procedure creates a level and specify its short name and long name.</p>
<div class="section">
<p>The numeric values assigned to the <code class="codeph">level_num</code> parameter determine the sensitivity ranking (that is, a lower number indicates less sensitive data).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.CREATE_LEVEL (
   policy_name       IN VARCHAR2,
   level_num         IN NUMBER(38),
   short_name        IN VARCHAR2,
   long_name         IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C266B7C5-DAF4-4A97-B17F-AF39D286F17D__GUID-D2BDF27C-73E4-432F-A9F6-A48CF1A84BF7">
<p class="titleintable">Table E-15 SA_COMPONENTS.CREATE_LEVEL Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.CREATE_LEVEL Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.CREATE_LEVEL.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2659">Parameter</th>
<th class="cellalignment3823" id="d74734e2662">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2667" headers="d74734e2659">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2667 d74734e2662">
<p>Specifies the policy, which must exist. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2681" headers="d74734e2659">
<p><code class="codeph">level_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2681 d74734e2662">
<p>Specifies the level number (0-9999)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2689" headers="d74734e2659">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2689 d74734e2662">
<p>Specifies the short name for the level (up to 30 characters)</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2697" headers="d74734e2659">
<p><code class="codeph">long_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2697 d74734e2662">
<p>Specifies the long name for the level (up to 80 characters)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a level for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_COMPONENTS.CREATE_LEVEL (
   policy_name   =&gt; &#39;hr_ols_pol&#39;,
   level_num     =&gt; 40,
   short_name    =&gt; &#39;HS&#39;,
   long_name     =&gt; &#39;HIGHLY_SENSITIVE&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3864"></a><a id="OLSAG3865"></a><a id="OLSAG3248"></a><a id="OLSAG3866"></a><a id="OLSAG3247"></a>
<div class="props_rev_3"><a id="GUID-526B0EC1-5D8C-4198-B040-7AA8B66E1154"></a>
<h3 id="OLSAG-GUID-526B0EC1-5D8C-4198-B040-7AA8B66E1154" class="sect3">SA_COMPONENTS.DROP_COMPARTMENT</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.DROP_COMPARTMENT</code> procedure removes a compartment.</p>
<div class="section">
<p>If the compartment is used in any existing label, then it <span class="italic">cannot</span> be dropped. You can find all existing labels by querying the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_DATA_LABELS</code> data dictionary view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.DROP_COMPARTMENT (
   policy_name IN VARCHAR2,
   comp_num    IN INTEGER);

SA_COMPONENTS.DROP_COMPARTMENT (
   policy_name IN VARCHAR2,
   short_name  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-526B0EC1-5D8C-4198-B040-7AA8B66E1154__GUID-FA937832-7F0E-4608-B768-D756F09D0692">
<p class="titleintable">Table E-16 SA_COMPONENTS.DROP_COMPARTMENT Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.DROP_COMPARTMENT Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.DROP_COMPARTMENT.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2809">Parameter</th>
<th class="cellalignment3823" id="d74734e2812">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2817" headers="d74734e2809">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2817 d74734e2812">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2831" headers="d74734e2809">
<p><code class="codeph">comp_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2831 d74734e2812">
<p>Specifies the number of an existing compartment for the policy. To find existing compartment numbers, query the <code class="codeph">COMP_NUM</code> column of the <code class="codeph">DBA_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2845" headers="d74734e2809">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2845 d74734e2812">
<p>Specifies the short name of an existing compartment for the policy. To find existing compartment short names, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">DBA_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes the <code class="codeph">FIN</code> compartment from the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.DROP_COMPARTMENT (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   short_name      =&gt; &#39;FIN&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3867"></a><a id="OLSAG3868"></a><a id="OLSAG3256"></a><a id="OLSAG3869"></a><a id="OLSAG3255"></a>
<div class="props_rev_3"><a id="GUID-78270FB1-01D7-44AA-AE03-C28D125E35F9"></a>
<h3 id="OLSAG-GUID-78270FB1-01D7-44AA-AE03-C28D125E35F9" class="sect3">SA_COMPONENTS.DROP_GROUP</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.DROP_GROUP</code> procedure removes a group.</p>
<div class="section">
<p>If the group is used in an existing label, then it cannot be dropped.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.DROP_GROUP (
   policy_name IN VARCHAR2,
   group_num   IN NUMBER(38));

SA_COMPONENTS.DROP_GROUP (
   policy_name IN VARCHAR2,
   short_name  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-78270FB1-01D7-44AA-AE03-C28D125E35F9__GUID-33D9D010-1071-4B08-862B-C2F1BF82A2B3">
<p class="titleintable">Table E-17 SA_COMPONENTS.DROP_GROUP Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.DROP_GROUP Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.DROP_GROUP.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e2956">Parameter</th>
<th class="cellalignment3823" id="d74734e2959">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2964" headers="d74734e2956">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2964 d74734e2959">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2978" headers="d74734e2956">
<p><code class="codeph">group_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2978 d74734e2959">
<p>Specifies the number of an existing group for the policy. To find existing group numbers, query the <code class="codeph">GROUP_NUM</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e2992" headers="d74734e2956">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e2992 d74734e2959">
<p>Specifies the short name of an existing group. To find existing group short names, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes a group based on the group number for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_COMPONENTS.DROP_GROUP (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   group_num       =&gt; 2000);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3870"></a><a id="OLSAG3871"></a><a id="OLSAG3242"></a><a id="OLSAG3872"></a><a id="OLSAG3241"></a>
<div class="props_rev_3"><a id="GUID-289D2214-9738-4EEE-916F-3EB406D928FC"></a>
<h3 id="OLSAG-GUID-289D2214-9738-4EEE-916F-3EB406D928FC" class="sect3">SA_COMPONENTS.DROP_LEVEL</h3>
<div>
<p>The <code class="codeph">SA_COMPONENTS.DROP_LEVEL</code> procedure removes a level.</p>
<div class="section">
<p>If the level is used in any existing label, then it cannot be dropped.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_COMPONENTS.DROP_LEVEL (
   policy_name IN VARCHAR2,
   level_num   IN NUMBER(38));

SA_COMPONENTS.DROP_LEVEL (
   policy_name IN VARCHAR2,
   short_name  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-289D2214-9738-4EEE-916F-3EB406D928FC__GUID-58A93224-EB63-4E16-962C-398A9C5F466E">
<p class="titleintable">Table E-18 SA_COMPONENTS.DROP_LEVEL Parameters</p>
<table class="cellalignment3821" title="SA_COMPONENTS.DROP_LEVEL Parameters" summary="This table gives the name and description for each parameter used by SA_COMPONENTS.DROP_LEVEL.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e3100">Parameter</th>
<th class="cellalignment3823" id="d74734e3103">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3108" headers="d74734e3100">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3108 d74734e3103">
<p>Specifies the policy, which much exist. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3122" headers="d74734e3100">
<p><code class="codeph">level_num</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3122 d74734e3103">
<p>Specifies the number of an existing level for the policy. To find existing level numbers, query the <code class="codeph">LEVEL_NUM</code> column of the <code class="codeph">ALL_SA_LEVELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3136" headers="d74734e3100">
<p><code class="codeph">short_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3136 d74734e3103">
<p>Specifies the short name for the level (up to 30 characters). To find existing level short names, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_LEVELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the level <code class="codeph">40</code> from the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_COMPONENTS.DROP_LEVEL (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   level_num       =&gt; 40);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG3873"></a><a id="OLSAG046"></a>
<div class="props_rev_3"><a id="GUID-37A51947-C20F-4FDA-95FA-DB1A0A6579B9"></a>
<h2 id="OLSAG-GUID-37A51947-C20F-4FDA-95FA-DB1A0A6579B9" class="sect2">SA_LABEL_ADMIN Label Management PL/SQL Package</h2>
<div>
<p>The <code class="codeph">SA_LABEL_ADMIN</code> PL/SQL package provides an administrative interface to manage the labels used by a policy.</p>
<p>To use this package, you must be granted the <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> role (for example, <code class="codeph">HR_OLS_POL_DBA</code> for a role for the <code class="codeph">hr_ols_pol</code> policy) and the <code class="codeph">EXECUTE</code> privilege on the <code class="codeph">SA_LABEL_ADMIN</code> package.</p>
<p><a href="packages.htm#GUID-37A51947-C20F-4FDA-95FA-DB1A0A6579B9__CIHBFHDI" title="SA_LABEL_ADMIN package">Table E-19</a> lists the <code class="codeph">SA_LABEL_ADMIN</code> package procedures.</p>
<div class="tblformal" id="GUID-37A51947-C20F-4FDA-95FA-DB1A0A6579B9__CIHBFHDI">
<p class="titleintable">Table E-19 SA_LABEL_ADMIN PL/SQL Package Contents</p>
<table class="cellalignment3821" title="SA_LABEL_ADMIN PL/SQL Package Contents" summary="SA_LABEL_ADMIN package">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3873" id="d74734e3273">Procedure</th>
<th class="cellalignment3874" id="d74734e3276">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3875" id="d74734e3281" headers="d74734e3273">
<p><a href="packages.htm#GUID-B50D3ED4-2B24-413A-82A5-D051BBA3FD6D" title="The SA_LABEL_ADMIN.ALTER_LABEL procedure changes the character string label definition associated with a label tag.">SA_LABEL_ADMIN.ALTER_LABEL</a></p>
</td>
<td class="cellalignment3876" headers="d74734e3281 d74734e3276">
<p>Alters an existing label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3875" id="d74734e3295" headers="d74734e3273">
<p><a href="packages.htm#GUID-844E5214-76ED-47E6-B332-2AB0180753ED" title="The SA_LABEL_ADMIN.CREATE_LABEL procedure creates data labels.">SA_LABEL_ADMIN.CREATE_LABEL</a></p>
</td>
<td class="cellalignment3876" headers="d74734e3295 d74734e3276">
<p>Creates a data label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3875" id="d74734e3309" headers="d74734e3273">
<p><a href="packages.htm#GUID-6EE1DD6A-C893-4C01-88A9-C1AE36F224E3" title="The SA_LABEL_ADMIN.DROP_LABEL procedure deletes a specified policy label.">SA_LABEL_ADMIN.DROP_LABEL</a></p>
</td>
<td class="cellalignment3876" headers="d74734e3309 d74734e3276">
<p>Removes a label</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-37A51947-C20F-4FDA-95FA-DB1A0A6579B9__GUID-55961A58-6083-48FF-9434-F75301814D45">
<p class="notep1">See Also:</p>
<p><a href="getstrtd.htm#GUID-3E253480-EC50-434F-A07B-24EF30658796" title="You can create data labels for an Oracle Label Security policy in Cloud Control.">Creating Data Labels for the Policy Using Cloud Control</a></p>
</div>
</div>
<a id="OLSAG3874"></a><a id="OLSAG3875"></a><a id="OLSAG3260"></a><a id="OLSAG3876"></a><a id="OLSAG3259"></a>
<div class="props_rev_3"><a id="GUID-B50D3ED4-2B24-413A-82A5-D051BBA3FD6D"></a>
<h3 id="OLSAG-GUID-B50D3ED4-2B24-413A-82A5-D051BBA3FD6D" class="sect3">SA_LABEL_ADMIN.ALTER_LABEL</h3>
<div>
<p>The <code class="codeph">SA_LABEL_ADMIN.ALTER_LABEL</code> procedure changes the character string label definition associated with a label tag.</p>
<div class="section">
<p>The label tag itself cannot be changed.</p>
<p>If you change the character string associated with a label tag, then the sensitivity of the data in the rows changes accordingly. For example, if the label character string <code class="codeph">TS:A</code> with an associated label tag value of <code class="codeph">4001</code> is changed to the label <code class="codeph">TS:B</code>, then access to the data changes accordingly. This is true even when the label tag value (<code class="codeph">4001</code>) has not changed. In this way, you can change the data&#39;s sensitivity without the need to update all the rows.</p>
<p>Ensure that when you specify a label to alter, you can refer to it either by its label tag or by its character string value.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_LABEL_ADMIN.ALTER_LABEL (
   policy_name       IN VARCHAR2,
   label_tag         IN BINARY_INTEGER,
   new_label_value   IN VARCHAR2 DEFAULT NULL,
   new_data_label    IN BOOLEAN  DEFAULT NULL);

SA_LABEL_ADMIN.ALTER_LABEL (
   policy_name       IN VARCHAR2,
   label_value       IN VARCHAR2,
   new_label_value   IN VARCHAR2 DEFAULT NULL,
   new_data_label    IN BOOLEAN  DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-B50D3ED4-2B24-413A-82A5-D051BBA3FD6D__GUID-EB586667-EFA5-4870-BBF3-7EF77C4121B2">
<p class="titleintable">Table E-20 SA_LABEL_ADMIN.ALTER_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_LABEL_ADMIN.ALTER_LABEL Parameters" summary="This table gives the name and description for each parameter used by SA_LABEL_ADMIN.ALTER_LABEL.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e3429">Parameter</th>
<th class="cellalignment3823" id="d74734e3432">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3437" headers="d74734e3429">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3437 d74734e3432">
<p>Specifies the name of an existing policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3451" headers="d74734e3429">
<p><code class="codeph">label_tag</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3451 d74734e3432">
<p>Identifies the integer tag assigned to the label to be altered. To find existing label tags, query the <code class="codeph">LABEL_TAG</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3465" headers="d74734e3429">
<p><code class="codeph">label_value</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3465 d74734e3432">
<p>Identifies the existing character string representation of the label to be altered. To find the existing label values, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3479" headers="d74734e3429">
<p><code class="codeph">new_label_value</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3479 d74734e3432">
<p>Specifies the new character string representation of the label value. If <code class="codeph">NULL</code>, the existing value is not changed.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3490" headers="d74734e3429">
<p><code class="codeph">new_data_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3490 d74734e3432">
<p><code class="codeph">TRUE</code> if the label can be used to label row data. If <code class="codeph">NULL</code>, the existing value is not changed.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example modifies the <code class="codeph">label_tag</code> and <code class="codeph">label_value</code> settings of <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_LABEL_ADMIN.ALTER_LABEL (
   policy_name       =&gt; &#39;hr_ols_pol&#39;,
   label_tag         =&gt; 1111,
   new_label_value   =&gt; &#39;HS&#39;,
   new_data_label    =&gt; TRUE);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3877"></a><a id="OLSAG3878"></a><a id="OLSAG3258"></a><a id="OLSAG3879"></a><a id="OLSAG3257"></a>
<div class="props_rev_3"><a id="GUID-844E5214-76ED-47E6-B332-2AB0180753ED"></a>
<h3 id="OLSAG-GUID-844E5214-76ED-47E6-B332-2AB0180753ED" class="sect3">SA_LABEL_ADMIN.CREATE_LABEL</h3>
<div>
<p>The <code class="codeph">SA_LABEL_ADMIN.CREATE_LABEL</code> procedure creates data labels.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_LABEL_ADMIN.CREATE_LABEL (
   policy_name IN VARCHAR2,
   label_tag   IN BINARY_INTEGER,
   label_value IN VARCHAR2,
   data_label  IN BOOLEAN DEFAULT TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-844E5214-76ED-47E6-B332-2AB0180753ED__GUID-015AE6F8-8FC0-476B-8E63-1AC807D44B3A">
<p class="titleintable">Table E-21 SA_LABEL_ADMIN.CREATE_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_LABEL_ADMIN.CREATE_LABEL Parameters" summary="This table gives the name and description for each parameter used by SA_LABEL_ADMIN.CREATE_LABEL.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e3603">Parameter</th>
<th class="cellalignment3823" id="d74734e3606">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3611" headers="d74734e3603">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3611 d74734e3606">
<p>Specifies the name of an existing policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3625" headers="d74734e3603">
<p><code class="codeph">label_tag</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3625 d74734e3606">
<p>Specifies a unique integer value representing the sort order of the label, relative to other policy labels (0-99999999). This value must be 1 to 8 digits long.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3633" headers="d74734e3603">
<p><code class="codeph">label_value</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3633 d74734e3606">
<p>Specifies the character string representation of the label to be created. Use the short name of the level, compartment, and group. You can find these values by querying the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_LEVELS</code>, <code class="codeph">ALL_SA_COMPARTMENTS</code>, and <code class="codeph">ALL_SA_GROUPS</code> views.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3653" headers="d74734e3603">
<p><code class="codeph">data_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3653 d74734e3606">
<p><code class="codeph">TRUE</code> if the label can be used to label row data. Use this to define the label as valid for data.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>When you identify valid labels, you specify which of all the possible combinations of levels, compartments, and groups can potentially be used to label data in tables.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a label for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_LABEL_ADMIN.CREATE_LABEL (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   label_tag       =&gt; 1111,
   label_value     =&gt; &#39;HS:FIN&#39;,
   data_label      =&gt; TRUE);
END;
/
</pre>
<div class="infobox-note" id="GUID-844E5214-76ED-47E6-B332-2AB0180753ED__GUID-BFFAAA2B-5327-4052-AE24-314C28E07131">
<p class="notep1">Note:</p>
<p>If you create a new label by using the <code class="codeph">TO_DATA_LABEL</code> procedure, then a system-generated label tag of 10 digits is generated automatically.</p>
<p>However, when Oracle Label Security is installed to work with Oracle Internet Directory, dynamic label generation is not permitted, because labels are managed centrally in Oracle Internet Directory, using <code class="codeph">olsadmintool</code> commands. Refer to <a href="appxb.htm#GUID-CEBDC422-8872-46C1-8A3B-F1161539DD22" title="Oracle Label Security provides command-line tools for using Oracle Internet Directory.">Command-line Tools for Label Security Using Oracle Internet Directory</a>.</p>
<p>So, when Oracle Label Security is directory-enabled, the <code class="codeph">TO_DATA_LABEL</code> function is not available and will generate an error message if used.</p>
</div>
<div class="infoboxnotealso" id="GUID-844E5214-76ED-47E6-B332-2AB0180753ED__GUID-66811EA5-64BF-4D1D-9A9F-A5D89438073D">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="getstrtd.htm#GUID-C919FC6E-A7A4-4577-9D85-687BAF559E8B" title="After defining the data label components, you can create a data label itself by associating it with an existing level.">About Associating the Policy Components with a Named Data Label</a></p>
</li>
<li>
<p><a href="worklabel.htm#GUID-2C84DF95-0A12-4BBA-94C8-4FF369C54128" title="You should understand how policy label columns in a table or schema are created and filled.">How Policy Label Column and Label Tags Work</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3880"></a><a id="OLSAG3881"></a><a id="OLSAG3262"></a><a id="OLSAG3882"></a><a id="OLSAG3261"></a>
<div class="props_rev_3"><a id="GUID-6EE1DD6A-C893-4C01-88A9-C1AE36F224E3"></a>
<h3 id="OLSAG-GUID-6EE1DD6A-C893-4C01-88A9-C1AE36F224E3" class="sect3">SA_LABEL_ADMIN.DROP_LABEL</h3>
<div>
<p>The <code class="codeph">SA_LABEL_ADMIN.DROP_LABEL</code> procedure deletes a specified policy label.</p>
<div class="section">
<p>Any subsequent reference to the label (in data rows, or in user or program unit labels) will raise an invalid label error.</p>
<p>Use this procedure only while setting up labels, prior to data population. If you should inadvertently drop a label that is being used, you can recover it by disabling the policy, fixing the problem, and then re-enabling the policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_LABEL_ADMIN.DROP_LABEL (
   policy_name       IN VARCHAR2,
   label_tag         IN BINARY_INTEGER);

SA_LABEL_ADMIN.DROP_LABEL (
   policy_name       IN VARCHAR2,
   label_value       IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6EE1DD6A-C893-4C01-88A9-C1AE36F224E3__GUID-C4E33212-5DE3-4D74-B443-B0EA48162FC8">
<p class="titleintable">Table E-22 SA_LABEL_ADMIN.DROP_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_LABEL_ADMIN.DROP_LABEL Parameters" summary="This table gives the name and description for each parameter used by SA_LABEL_ADMIN.DROP_LABEL.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e3800">Parameter</th>
<th class="cellalignment3823" id="d74734e3803">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3808" headers="d74734e3800">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3808 d74734e3803">
<p>Specifies the name of an existing policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3822" headers="d74734e3800">
<p><code class="codeph">label_tag</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3822 d74734e3803">
<p>Specifies the integer tag assigned to the label to be dropped. To find existing label tags, query the <code class="codeph">LABEL_TAG</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e3836" headers="d74734e3800">
<p><code class="codeph">label_value</code></p>
</td>
<td class="cellalignment3825" headers="d74734e3836 d74734e3803">
<p>Specifies the string value of the label to be dropped. To find existing label values, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="infoboxnotewarn" id="GUID-6EE1DD6A-C893-4C01-88A9-C1AE36F224E3__GUID-9F4D958C-4908-44FA-8848-1A32D99F2C28">
<p class="notep1">WARNING:</p>
<p>Do not drop a label that is in use anywhere in the database.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the <code class="codeph">hr_ols_pol</code> policy label based on its <code class="codeph">label_tag</code> setting.</p>
<pre dir="ltr">BEGIN
  SA_LABEL_ADMIN.DROP_LABEL (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   label_tag       =&gt; 1111);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG3884"></a><a id="OLSAG3883"></a>
<div class="props_rev_3"><a id="GUID-5A1345FF-404B-468E-A5EA-792511E386DB"></a>
<h2 id="OLSAG-GUID-5A1345FF-404B-468E-A5EA-792511E386DB" class="sect2">SA_POLICY_ADMIN Policy Administration PL/SQL Package</h2>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN</code> PL/SQL package manages Oracle Label Security policies as a whole.</p>
<p><a href="packages.htm#GUID-5A1345FF-404B-468E-A5EA-792511E386DB__CIHHCEGF" title="SA_POLICY procedures">Table E-23</a> describes the <code class="codeph">SA_POLICY_ADMIN</code> PL/SQL package procedures</p>
<p>To use this package, you must be granted the <span class="italic"><code class="codeph">policy</code></span><code class="codeph">_DBA</code> role (for example, <code class="codeph">HR_OLS_POL_DBA</code> for a role for the <code class="codeph">hr_ols_pol</code> policy) and the <code class="codeph">EXECUTE</code> privilege for the <code class="codeph">SA_POLICY_ADMIN</code> package.</p>
<div class="tblformalwide" id="GUID-5A1345FF-404B-468E-A5EA-792511E386DB__CIHHCEGF">
<p class="titleintable">Table E-23 SA_POLICY_ADMIN PL/SQL Package Contents</p>
<table class="cellalignment3816" title="SA_POLICY_ADMIN PL/SQL Package Contents" summary="SA_POLICY procedures">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3863" id="d74734e3971">Procedure</th>
<th class="cellalignment3864" id="d74734e3974">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e3979" headers="d74734e3971">
<p><a href="packages.htm#GUID-37315BB2-C1E5-468E-95CC-0B28E2294C63" title="The SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY procedure changes the default enforcement options for the policy.">SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e3979 d74734e3974">
<p>Changes the default enforcement options for the policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e3993" headers="d74734e3971">
<p><a href="packages.htm#GUID-D9E721AB-14D0-4086-9C79-6D402349F85A" title="The SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY procedure applies a policy to all of the tables in a schema and enables the policy for these tables.">SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e3993 d74734e3974">
<p>Applies the specified policy to all of the existing tables in a schema (that is, to those that do not already have the policy applied) and enables the policy for these tables</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4007" headers="d74734e3971">
<p><a href="packages.htm#GUID-5C1F501B-293A-436E-865D-51D34E3D0829" title="The SA_POLICY_ADMIN.APPLY_TABLE_POLICY procedure adds the specified policy to a table.">SA_POLICY_ADMIN.APPLY_TABLE_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4007 d74734e3974">
<p>Adds the specified policy to a table</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4021" headers="d74734e3971">
<p><a href="packages.htm#GUID-96887A8B-99BC-46F6-82B1-52147F143945" title="The SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY procedure disables the enforcement of the policy for all tables in a schema.">SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4021 d74734e3974">
<p>Disables the enforcement of the policy for all of the tables in the specified schema, without changing the enforcement options, labeling function, or predicate values</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4035" headers="d74734e3971">
<p><a href="packages.htm#GUID-0533DCE4-E817-49E4-9170-F0B6AFB37923" title="The SA_POLICY_ADMIN.DISABLE_TABLE_POLICY procedure disables the enforcement of the policy for a table without changing the enforcement options, labeling function, or predicate values.">SA_POLICY_ADMIN.DISABLE_TABLE_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4035 d74734e3974">
<p>Disables the enforcement of the policy for the specified table without changing the enforcement options, labeling function, or predicate values</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4049" headers="d74734e3971">
<p><a href="packages.htm#GUID-9AE78033-05A5-4586-8964-A0A459A2EA30" title="The SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY procedure reenables the current enforcement options, labeling function, and predicate for the tables in the specified schema.">SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4049 d74734e3974">
<p>Reenables the current enforcement options, labeling function, and predicate for the tables in the specified schema by re-applying the RLS predicate and DML triggers</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4063" headers="d74734e3971">
<p><a href="packages.htm#GUID-B9AFA5F2-88B4-463C-B0BD-E357655803E5" title="The SA_POLICY_ADMIN.ENABLE_TABLE_POLICY procedure reenables the current enforcement options, labeling function, and predicate for the specified table.">SA_POLICY_ADMIN.ENABLE_TABLE_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4063 d74734e3974">
<p>Reenables the current enforcement options, labeling function, and predicate for the specified table by reapplying the RLS predicate and DML triggers</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4077" headers="d74734e3971">
<p><a href="packages.htm#GUID-484E90CA-DEDE-482A-8147-BCB41396DE73" title="In an Oracle Internet Directory-enabled Oracle Label Security configuration, the SA_POLICY_ADMIN.POLICY_SUBSCRIBE procedure subscribes to the policy for usage in SA_POLICY_ADMIN.APPLY_TABLE_POLICY and SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY.">SA_POLICY_ADMIN.POLICY_SUBSCRIBE</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4077 d74734e3974">
<p>For an Oracle Internet Directory configuration, subscribes to the policy for usage in <code class="codeph">APPLY_TABLE_POLICY</code> and <code class="codeph">APPLY_SCHEMA_POLICY</code></p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4102" headers="d74734e3971">
<p><a href="packages.htm#GUID-EA2139A3-7E39-47E8-9D70-7217E2C92710" title="In an Oracle Internet Directory enabled Oracle Label Security configuration, the SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE procedure unsubscribes to the policy.">SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4102 d74734e3974">
<p>For an Oracle Internet Directory, unsubscribes from the policy for usage in <code class="codeph">APPLY_TABLE_POLICY</code> and <code class="codeph">APPLY_SCHEMA_POLICY</code></p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4121" headers="d74734e3971">
<p><a href="packages.htm#GUID-E892D156-74CF-4288-96BE-3EFE0EC6EDE9" title="The SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY procedure removes the specified policy from a schema.">SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4121 d74734e3974">
<p>Removes the specified policy from a schema</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e4135" headers="d74734e3971">
<p><a href="packages.htm#GUID-D9570E24-EC08-4700-BB0B-FBB247E6E04F" title="The SA_POLICY_ADMIN.REMOVE_TABLE_POLICY procedure removes the specified policy from a table.">SA_POLICY_ADMIN.REMOVE_TABLE_POLICY</a></p>
</td>
<td class="cellalignment3866" headers="d74734e4135 d74734e3974">
<p>Removes the specified policy from a table</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="OLSAG3885"></a><a id="OLSAG3886"></a><a id="OLSAG3887"></a><a id="OLSAG3888"></a><a id="OLSAG3352"></a>
<div class="props_rev_3"><a id="GUID-37315BB2-C1E5-468E-95CC-0B28E2294C63"></a>
<h3 id="OLSAG-GUID-37315BB2-C1E5-468E-95CC-0B28E2294C63" class="sect3">SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY</code> procedure changes the default enforcement options for the policy.</p>
<div class="section">
<p>Any new tables created in the schema will automatically have the new enforcement options applied. The existing tables in the schema are not affected.</p>
<p>To change enforcement options on a table (rather than a schema), you must first drop the policy from the table, make the change, and then reapply the policy.</p>
<p>If you alter the enforcement options on a schema, then this will take effect the next time a table is created in the schema. As a result, different tables within a schema may have different policy enforcement options in force.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY (
  policy_name         IN VARCHAR2,
  schema_name         IN VARCHAR2,
  default_options     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-37315BB2-C1E5-468E-95CC-0B28E2294C63__GUID-C9447370-606A-4C1A-8039-004CC384CF4E">
<p class="titleintable">Table E-24 SA_POLICY_ADMIN.ALTER_SCHEMA Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.ALTER_SCHEMA Parameters" summary="SA_POLICY_ADMIN.ALTER_SCHEMA Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e4236">Parameter</th>
<th class="cellalignment3823" id="d74734e4239">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4244" headers="d74734e4236">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4244 d74734e4239">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4258" headers="d74734e4236">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4258 d74734e4239">
<p>The schema that contains the table. To find existing schemas associated with this policy, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">SCHEMA_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4275" headers="d74734e4236">
<p><code class="codeph">default_options</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4275 d74734e4239">
<p>The default options to be used for new tables in the schema. Separate each option with a comma.</p>
<p>See <a href="enforce.htm#GUID-FA74FF7C-71A8-477E-B431-F3E5C1878EE6__G1018017" title="This table provides links to types of policy enforcement options and then lists and describes the options within each type. Columns are from left to right, Type of Enforcement, Option, and Description.">Table 8-2</a> for a listing of the default enforcement options.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds the <code class="codeph">UPDATE_CONTROL</code> default option to the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN 
 SA_POLICY_ADMIN.ALTER_SCHEMA_POLICY(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  schema_name      =&gt; &#39;HR&#39;,
  default_options  =&gt; &#39;read_control, write_control, update_control&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3889"></a><a id="OLSAG3890"></a><a id="OLSAG3891"></a><a id="OLSAG3892"></a><a id="OLSAG3350"></a>
<div class="props_rev_3"><a id="GUID-D9E721AB-14D0-4086-9C79-6D402349F85A"></a>
<h3 id="OLSAG-GUID-D9E721AB-14D0-4086-9C79-6D402349F85A" class="sect3">SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY</code> procedure applies a policy to all of the tables in a schema and enables the policy for these tables.</p>
<div class="section">
<p>That is, it applies to those tables that do not already have the policy applied. Then, whenever a new table is created in the schema, the policy is automatically applied to that table, using the schema&#39;s default options. No changes are made to existing tables in the schema that already have the policy applied.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3"><span class="bold">Syntax</span></p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY (
  policy_name        IN VARCHAR2,
  schema_name        IN VARCHAR2,
  default_options    IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D9E721AB-14D0-4086-9C79-6D402349F85A__GUID-A143AF9E-5146-46F6-9D2D-0A33DF0CD9DE">
<p class="titleintable">Table E-25 SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY Parameters" summary="SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e4389">Parameter</th>
<th class="cellalignment3823" id="d74734e4392">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4397" headers="d74734e4389">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4397 d74734e4392">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4411" headers="d74734e4389">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4411 d74734e4392">
<p>The schema that contains the table to protect</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4419" headers="d74734e4389">
<p><code class="codeph">default_options</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4419 d74734e4392">
<p>The default options to be used for tables in the schema. Separate each option with a comma. If the <code class="codeph">default_options</code> parameter is <code class="codeph">NULL</code>, then the policy&#39;s default options will be used to apply the policy to the tables in the schema.</p>
<p>See <a href="enforce.htm#GUID-FA74FF7C-71A8-477E-B431-F3E5C1878EE6__G1018017" title="This table provides links to types of policy enforcement options and then lists and describes the options within each type. Columns are from left to right, Type of Enforcement, Option, and Description.">Table 8-2</a> for a listing of the default enforcement options.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example applies the <code class="codeph">READ_CONTROL</code> and <code class="codeph">WRITE_CONTROL</code> options to the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN 
 SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  schema_name      =&gt; &#39;HR&#39;,
  default_options  =&gt; &#39;read_control, write_control&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3894"></a><a id="OLSAG3895"></a><a id="OLSAG3896"></a><a id="OLSAG3897"></a><a id="OLSAG3893"></a>
<div class="props_rev_3"><a id="GUID-5C1F501B-293A-436E-865D-51D34E3D0829"></a>
<h3 id="OLSAG-GUID-5C1F501B-293A-436E-865D-51D34E3D0829" class="sect3">SA_POLICY_ADMIN.APPLY_TABLE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.APPLY_TABLE_POLICY</code> procedure adds the specified policy to a table.</p>
<div class="section">
<p>A policy label column is added to the table if it does not exist, and is set to <code class="codeph">NULL</code>. When a policy is applied, it is automatically enabled. To change the table options, labeling function, or predicate, you must first remove the policy, and then reapply it.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.APPLY_TABLE_POLICY (
  policy_name       IN VARCHAR2,
  schema_name       IN VARCHAR2,
  table_name        IN VARCHAR2,
  table_options     IN VARCHAR2 DEFAULT NULL,
  label_function    IN VARCHAR2 DEFAULT NULL,
  predicate         IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5C1F501B-293A-436E-865D-51D34E3D0829__GUID-AE2F7A23-EA94-483A-9989-0BC688BD0BBE">
<p class="titleintable">Table E-26 SA_POLICY_ADMIN.APPLY_TABLE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.APPLY_TABLE_POLICY Parameters" summary="SA_POLICY_ADMIN.APPLY_TABLE_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e4543">Parameter</th>
<th class="cellalignment3823" id="d74734e4546">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4551" headers="d74734e4543">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4551 d74734e4546">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4565" headers="d74734e4543">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4565 d74734e4546">
<p>The schema that contains the table that the policy protects</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4573" headers="d74734e4543">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4573 d74734e4546">
<p>The table to be protected by the policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4581" headers="d74734e4543">
<p><code class="codeph">table_options</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4581 d74734e4546">
<p>A comma-delimited list of policy enforcement options to be used for the table. If <code class="codeph">NULL</code>, then the policy&#39;s default options are used.</p>
<p>See <a href="enforce.htm#GUID-FA74FF7C-71A8-477E-B431-F3E5C1878EE6__G1018017" title="This table provides links to types of policy enforcement options and then lists and describes the options within each type. Columns are from left to right, Type of Enforcement, Option, and Description.">Table 8-2</a> for a listing of the default enforcement options.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4599" headers="d74734e4543">
<p><code class="codeph">label_function</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4599 d74734e4546">
<p>A string calling a function to return a label value to use as the default. For example, <code class="codeph">my_label(:new.dept,:new.status)</code> computes the label based on the new values of the <code class="codeph">DEPT</code> and <code class="codeph">STATUS</code> columns in the row.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4616" headers="d74734e4543">
<p><code class="codeph">predicate</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4616 d74734e4546">
<p>An additional predicate to combine (using <code class="codeph">AND</code> or <code class="codeph">OR</code>) with the label-based predicate for <code class="codeph">READ_CONTROL</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following statement applies the <code class="codeph">hr_ols_pol</code> policy to the <code class="codeph">EMPLOYEES</code> table in the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.APPLY_TABLE_POLICY(
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  schema_name    =&gt; &#39;HR&#39;,
  table_name     =&gt; &#39;EMPLOYEES&#39;,
  table_options  =&gt; NULL,
  label_function =&gt; &#39;hs(:new.dept,:new.status)&#39;,
  predicate      =&gt; &#39;no_control&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3898"></a><a id="OLSAG3899"></a><a id="OLSAG3900"></a><a id="OLSAG3901"></a><a id="OLSAG3356"></a>
<div class="props_rev_3"><a id="GUID-96887A8B-99BC-46F6-82B1-52147F143945"></a>
<h3 id="OLSAG-GUID-96887A8B-99BC-46F6-82B1-52147F143945" class="sect3">SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY</code> procedure disables the enforcement of the policy for all tables in a schema.</p>
<div class="section">
<p>However, it does not change the enforcement options, labeling function, or predicate values.</p>
<p>This procedure removes the row level security predicate and DML triggers from all the tables in the schema.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY (
  policy_name    IN VARCHAR2,
  schema_name    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-96887A8B-99BC-46F6-82B1-52147F143945__GUID-3EF32AAE-452E-48C5-AEA1-CEBF22B2EC52">
<p class="titleintable">Table E-27 SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY Parameters" summary="SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e4734">Parameter</th>
<th class="cellalignment3823" id="d74734e4737">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4742" headers="d74734e4734">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4742 d74734e4737">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4756" headers="d74734e4734">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4756 d74734e4737">
<p>The schema that contains the table for this policy. To find this schema, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">SCHEMA_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example disables the <code class="codeph">hr_ols_pol</code> policy for the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.DISABLE_SCHEMA_POLICY(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  schema_name      =&gt; &#39;HR&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3902"></a><a id="OLSAG3903"></a><a id="OLSAG3904"></a><a id="OLSAG3905"></a><a id="OLSAG3344"></a>
<div class="props_rev_3"><a id="GUID-0533DCE4-E817-49E4-9170-F0B6AFB37923"></a>
<h3 id="OLSAG-GUID-0533DCE4-E817-49E4-9170-F0B6AFB37923" class="sect3">SA_POLICY_ADMIN.DISABLE_TABLE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.DISABLE_TABLE_POLICY</code> procedure disables the enforcement of the policy for a table without changing the enforcement options, labeling function, or predicate values.</p>
<div class="section">
<p>This procedure removes the row level security predicate and DML triggers from the table.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.DISABLE_TABLE_POLICY (
  policy_name      IN VARCHAR2,
  schema_name      IN VARCHAR2,
  table_name       IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0533DCE4-E817-49E4-9170-F0B6AFB37923__GUID-CF6152C1-927C-4F57-A496-131DC759E892">
<p class="titleintable">Table E-28 SA_POLICY_ADMIN.DISABLE_TABLE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.DISABLE_TABLE_POLICY Parameters" summary="SA_POLICY_ADMIN.DISABLE_TABLE_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e4871">Parameter</th>
<th class="cellalignment3823" id="d74734e4874">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4879" headers="d74734e4871">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4879 d74734e4874">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4893" headers="d74734e4871">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4893 d74734e4874">
<p>The schema that contains the table. To find this schema, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">SCHEMA_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e4910" headers="d74734e4871">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e4910 d74734e4874">
<p>The table in the schema specified by <code class="codeph">schema_name</code>. To find this table, query the <code class="codeph">POLICY_NAME</code>, <code class="codeph">SCHEMA_NAME</code>, and <code class="codeph">TABLE_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following statement disables the <code class="codeph">hr_ols_pos</code> policy on the <code class="codeph">EMPLOYEES</code> table in the <code class="codeph">HR</code> schema:</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.DISABLE_TABLE_POLICY(
  policy_name   =&gt; &#39;hr_ols_pol&#39;,
  schema_name   =&gt; &#39;HR&#39;,
  table_name    =&gt; &#39;EMPLOYEES&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3906"></a><a id="OLSAG3907"></a><a id="OLSAG3908"></a><a id="OLSAG3909"></a><a id="OLSAG3358"></a>
<div class="props_rev_3"><a id="GUID-9AE78033-05A5-4586-8964-A0A459A2EA30"></a>
<h3 id="OLSAG-GUID-9AE78033-05A5-4586-8964-A0A459A2EA30" class="sect3">SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY</code> procedure reenables the current enforcement options, labeling function, and predicate for the tables in the specified schema.</p>
<div class="section">
<p>It accomplishes this by re-applying the row level security predicate and DML triggers. The result is similar to enabling a policy for a table, but it covers all the tables in the schema.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY (
  policy_name    IN VARCHAR2,
  schema_name    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9AE78033-05A5-4586-8964-A0A459A2EA30__GUID-CFB03B74-DE87-4B47-A2B9-13A4F93B1348">
<p class="titleintable">Table E-29 SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY Parameters" summary="SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e5033">Parameter</th>
<th class="cellalignment3823" id="d74734e5036">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5041" headers="d74734e5033">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5041 d74734e5036">
<p>Specifies the policy. To find existing policies and their status, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">STATUS</code> columns of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5058" headers="d74734e5033">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5058 d74734e5036">
<p>The schema that contains the table. To find this schema, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">SCHEMA_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables the <code class="codeph">hr_ols_pol</code> policy for the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.ENABLE_SCHEMA_POLICY(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  schema_name      =&gt; &#39;HR&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3910"></a><a id="OLSAG3911"></a><a id="OLSAG3912"></a><a id="OLSAG3913"></a><a id="OLSAG3347"></a>
<div class="props_rev_3"><a id="GUID-B9AFA5F2-88B4-463C-B0BD-E357655803E5"></a>
<h3 id="OLSAG-GUID-B9AFA5F2-88B4-463C-B0BD-E357655803E5" class="sect3">SA_POLICY_ADMIN.ENABLE_TABLE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.ENABLE_TABLE_POLICY</code> procedure reenables the current enforcement options, labeling function, and predicate for the specified table.</p>
<div class="section">
<p>It accomplishes this by reapplying the row level security predicate and DML triggers.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.ENABLE_TABLE_POLICY (
  policy_name     IN VARCHAR2,
  schema_name     IN VARCHAR2,
  table_name      IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-B9AFA5F2-88B4-463C-B0BD-E357655803E5__GUID-9F370892-31F7-4CB0-9001-A46AAF26734F">
<p class="titleintable">Table E-30 SA_POLICY_ADMIN.ENABLE_TABLE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.ENABLE_TABLE_POLICY Parameters" summary="SA_POLICY_ADMIN.ENABLE_TABLE_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e5172">Parameter</th>
<th class="cellalignment3823" id="d74734e5175">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5180" headers="d74734e5172">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5180 d74734e5175">
<p>Specifies the policy. <code class="codeph">POLICY_NAME</code> and <code class="codeph">STATUS</code> columns of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5197" headers="d74734e5172">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5197 d74734e5175">
<p>The schema that contains the table. To find this schema, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">SCHEMA_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5214" headers="d74734e5172">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5214 d74734e5175">
<p>The table in the schema specified by <code class="codeph">schema_name</code>. To find this table, query the <code class="codeph">POLICY_NAME</code>, <code class="codeph">SCHEMA_NAME</code>, and <code class="codeph">TABLE_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following statement reenables the <code class="codeph">hr_ols_pol</code> policy on the <code class="codeph">EMPLOYEES</code> table in the <code class="codeph">HR</code> schema:</p>
<pre dir="ltr">BEGIN 
 SA_POLICY_ADMIN.ENABLE_TABLE_POLICY(
  policy_name   =&gt; &#39;hr_ols_pol&#39;,
  schema_name   =&gt; &#39;HR&#39;,
  table_name    =&gt; &#39;EMPLOYEES&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3914"></a><a id="OLSAG3915"></a><a id="OLSAG3916"></a><a id="OLSAG3917"></a><a id="OLSAG3331"></a>
<div class="props_rev_3"><a id="GUID-484E90CA-DEDE-482A-8147-BCB41396DE73"></a>
<h3 id="OLSAG-GUID-484E90CA-DEDE-482A-8147-BCB41396DE73" class="sect3">SA_POLICY_ADMIN.POLICY_SUBSCRIBE</h3>
<div>
<p>In an Oracle Internet Directory-enabled Oracle Label Security configuration, the <code class="codeph">SA_POLICY_ADMIN.POLICY_SUBSCRIBE</code> procedure subscribes to the policy for usage in <code class="codeph">SA_POLICY_ADMIN.APPLY_TABLE_POLICY</code> and <code class="codeph">SA_POLICY_ADMIN.APPLY_SCHEMA_POLICY</code>.</p>
<div class="section">
<p>You must call this procedure for a policy before that policy can be applied to a table or schema. Subscribing is needed only once, not for each use of the policy in a table or schema.</p>
<p>You cannot drop any subscribed policy unless it has been removed from any table or schema to which it was applied, and then unsubscribed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY.POLICY_SUBSCRIBE(
  policy_name     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-484E90CA-DEDE-482A-8147-BCB41396DE73__GUID-78087304-4B0A-439C-9135-73CB2621364C">
<p class="titleintable">Table E-31 SA_POLICY_ADMIN.POLICY_SUBSCRIBE Parameter</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.POLICY_SUBSCRIBE Parameter" summary="SA_POLICY_ADMIN.POLICY_SUBSCRIBE Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e5346">Parameter</th>
<th class="cellalignment3823" id="d74734e5349">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5354" headers="d74734e5346">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5354 d74734e5349">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="infobox-note" id="GUID-484E90CA-DEDE-482A-8147-BCB41396DE73__GUID-40E90E6A-2616-43BB-A1D8-4436FB10F66E">
<p class="notep1">Note:</p>
<p>This procedure must be used before policy usage only in the case of Oracle Internet Directory-enabled Oracle Label Security configuration. In the standalone Oracle Label Security case, the policy can be used in <code class="codeph">APPLY_TABLE_POLICY</code> and <code class="codeph">APPLY_SCHEMA_POLICY</code> directly without the need to subscribe.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following statement subscribes the database to the <code class="codeph">hr_ols_pol</code> policy so that it can used by applying on tables and schema.</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.POLICY_SUBSCRIBE(
  policy_name   =&gt; &#39;hr_ols_pol&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3918"></a><a id="OLSAG3919"></a><a id="OLSAG3920"></a><a id="OLSAG3921"></a><a id="OLSAG3334"></a>
<div class="props_rev_3"><a id="GUID-EA2139A3-7E39-47E8-9D70-7217E2C92710"></a>
<h3 id="OLSAG-GUID-EA2139A3-7E39-47E8-9D70-7217E2C92710" class="sect3">SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE</h3>
<div>
<p>In an Oracle Internet Directory enabled Oracle Label Security configuration, the <code class="codeph">SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE</code> procedure unsubscribes to the policy.</p>
<div class="section">
<p>You can use this procedure only if the policy is not in use; that is, it has not been applied to any table or schema. (If it has been applied to tables or schemas, then it must be removed from all of them before it can be unsubscribed.) A policy can be dropped in Oracle Internet Directory only if is not subscribed in any of the databases that have registered with that Oracle Internet Directory. (See <a href="appxb.htm#GUID-4F273224-0235-4BB0-A64B-887822350AC7" title="The olsadmintool dropprofile command removes the specified profile.">olsadmintool dropprofile</a> for more information.)</p>
<p>You cannot drop any subscribed policy unless it has been removed from any table or schema to which it was applied, and then unsubscribed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE(
  policy_name  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EA2139A3-7E39-47E8-9D70-7217E2C92710__GUID-62554C35-DB3C-4E43-B08C-CC52B813CB66">
<p class="titleintable">Table E-32 SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE Parameters" summary="SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e5483">Parameter</th>
<th class="cellalignment3823" id="d74734e5486">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5491" headers="d74734e5483">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5491 d74734e5486">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following statement unsubscribes the database to the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.POLICY_UNSUBSCRIBE(
  policy_name   =&gt; &#39;hr_ols_pol&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3922"></a><a id="OLSAG3923"></a><a id="OLSAG3924"></a><a id="OLSAG3925"></a><a id="OLSAG3354"></a>
<div class="props_rev_3"><a id="GUID-E892D156-74CF-4288-96BE-3EFE0EC6EDE9"></a>
<h3 id="OLSAG-GUID-E892D156-74CF-4288-96BE-3EFE0EC6EDE9" class="sect3">SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY</code> procedure removes the specified policy from a schema.</p>
<div class="section">
<p>The policy will be removed from all the tables in the schema and, optionally, the label column for the policy will be dropped from all the tables.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY (
  policy_name     IN VARCHAR2,
  schema_name     IN VARCHAR2,
  drop_column     IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E892D156-74CF-4288-96BE-3EFE0EC6EDE9__GUID-0296F7B7-A2B7-4DB6-BC91-13541A25B2EB">
<p class="titleintable">Table E-33 SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY Parameters" summary="SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e5599">Parameter</th>
<th class="cellalignment3823" id="d74734e5602">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5607" headers="d74734e5599">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5607 d74734e5602">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5621" headers="d74734e5599">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5621 d74734e5602">
<p>The schema that contains the table associated with this policy. To find this schema, query the <code class="codeph">SCHEMA_NAME</code> of the <code class="codeph">ALL_SA_SCHEMA_POLICIES</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5635" headers="d74734e5599">
<p><code class="codeph">drop_column</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5635 d74734e5602">
<p>If <code class="codeph">TRUE</code>, then the policy&#39;s column will be dropped from the tables, otherwise, the column will remain.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the <code class="codeph">human_resource</code> policy&#39;s column from the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.REMOVE_SCHEMA_POLICY(
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  schema_name      =&gt; &#39;HR&#39;,
  drop_column      =&gt; TRUE);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3926"></a><a id="OLSAG3927"></a><a id="OLSAG3928"></a><a id="OLSAG3929"></a><a id="OLSAG3341"></a>
<div class="props_rev_3"><a id="GUID-D9570E24-EC08-4700-BB0B-FBB247E6E04F"></a>
<h3 id="OLSAG-GUID-D9570E24-EC08-4700-BB0B-FBB247E6E04F" class="sect3">SA_POLICY_ADMIN.REMOVE_TABLE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_POLICY_ADMIN.REMOVE_TABLE_POLICY</code> procedure removes the specified policy from a table.</p>
<div class="section">
<p>The policy predicate and any DML triggers will be removed from the table, and the policy label column can optionally be dropped. Policies can be removed from tables belonging to a schema that is protected by the policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_POLICY_ADMIN.REMOVE_TABLE_POLICY (
policy_name        IN VARCHAR2,
schema_name        IN VARCHAR2,
table_name         IN VARCHAR2,
drop_column        IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D9570E24-EC08-4700-BB0B-FBB247E6E04F__GUID-43DD7D4A-2D6B-45FE-B211-8DC215C8EE5A">
<p class="titleintable">Table E-34 SA_POLICY_ADMIN.REMOVE_TABLE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_POLICY_ADMIN.REMOVE_TABLE_POLICY Parameters" summary="SA_POLICY_ADMIN.REMOVE_TABLE_POLICY Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e5744">Parameter</th>
<th class="cellalignment3823" id="d74734e5747">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5752" headers="d74734e5744">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5752 d74734e5747">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5766" headers="d74734e5744">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5766 d74734e5747">
<p>The schema that contains the table associated with this policy. To find this schema, query the <code class="codeph">SCHEMA_NAME</code> of the <code class="codeph">ALL_SA_SCHEMA_POLICIES</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5780" headers="d74734e5744">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5780 d74734e5747">
<p>The table in the schema specified by <code class="codeph">schema_name</code>. To find this table query the <code class="codeph">POLICY_NAME</code>, <code class="codeph">SCHEMA_NAME</code>, and <code class="codeph">TABLE_NAME</code> columns of the <code class="codeph">ALL_SA_TABLE_POLICIES</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e5803" headers="d74734e5744">
<p><code class="codeph">drop_column</code></p>
</td>
<td class="cellalignment3825" headers="d74734e5803 d74734e5747">
<p>Whether the column is to be dropped: if <code class="codeph">TRUE</code>, then the policy&#39;s column will be dropped from the table, otherwise, it will remain</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following statement removes the <code class="codeph">hr_ols_pol</code> policy from the <code class="codeph">EMPLOYEES</code> table in the <code class="codeph">HR</code> schema:</p>
<pre dir="ltr">BEGIN
 SA_POLICY_ADMIN.REMOVE_TABLE_POLICY(
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  schema_name    =&gt; &#39;HR&#39;,
  table_name     =&gt; &#39;EMPLOYEES&#39;,
  drop_column    =&gt; TRUE);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG3176"></a><a id="OLSAG025"></a>
<div class="props_rev_3"><a id="GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7"></a>
<h2 id="OLSAG-GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7" class="sect2">SA_SESSION Session Management PL/SQL Package</h2>
<div>
<p>The <code class="codeph">SA_SESSION</code> PL/SQL package manages session behavior for user authorizations.</p>
<p>Users can change labels during a session within the authorizations set by the administrator.</p>
<p>You do not need special privileges to use this package.</p>
<p><a href="packages.htm#GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7__G1014884" title="This table lists and describes the purpose for each of the functions available to change session labels.">Table E-35</a> lists the <code class="codeph">SA_SESSION</code> PL/SQL package procedures and functions.</p>
<div class="tblformal" id="GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7__G1014884">
<p class="titleintable">Table E-35 SA_SESSSION PL/SQL Package Contents</p>
<table class="cellalignment3821" title="SA_SESSSION PL/SQL Package Contents" summary="This table lists and describes the purpose for each of the functions available to change session labels.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3857" id="d74734e5927">Function</th>
<th class="cellalignment3877" id="d74734e5930">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e5935" headers="d74734e5927">
<p><a href="packages.htm#GUID-60425493-2DD8-4979-8920-5C7127943987" title="The SA_SESSION.COMP_READ function returns a comma-delimited list of compartments that the user is authorized to read.">SA_SESSION.COMP_READ</a></p>
</td>
<td class="cellalignment3878" headers="d74734e5935 d74734e5930">
<p>Returns a comma-delimited list of compartments that the user is authorized to read</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e5949" headers="d74734e5927">
<p><a href="packages.htm#GUID-F6A51396-881C-49E8-AD6B-E0D2E214C927" title="The SA_SESSION.COMP_WRITE function returns a comma-delimited list of compartments to which the user is authorized to write.">SA_SESSION.COMP_WRITE</a></p>
</td>
<td class="cellalignment3878" headers="d74734e5949 d74734e5930">
<p>Returns a comma-delimited list of compartments that the user is authorized to write.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e5963" headers="d74734e5927">
<p><a href="packages.htm#GUID-DD867115-4B22-4AE5-84D1-028C63027F08" title="The SA_SESSION.GROUP_READ function returns a comma-delimited list of groups that the user is authorized to read.">SA_SESSION.GROUP_READ</a></p>
</td>
<td class="cellalignment3878" headers="d74734e5963 d74734e5930">
<p>Returns a comma-delimited list of groups that the user is authorized to read</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e5977" headers="d74734e5927">
<p><a href="packages.htm#GUID-5071748C-44A4-49EA-B3B5-A8FD02705BC4" title="The SA_SESSION.GROUP_WRITE function returns a comma-delimited list of groups that the user is authorized to write.">SA_SESSION.GROUP_WRITE</a></p>
</td>
<td class="cellalignment3878" headers="d74734e5977 d74734e5930">
<p>Returns a comma-delimited list of groups that the user is authorized to write.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e5991" headers="d74734e5927">
<p><a href="packages.htm#GUID-36DD3F6F-12C6-4A03-AFCB-6D0F739B8C85" title="The SA_SESSION.LABEL function returns the label that is associated with the specified policy for the current session.">SA_SESSION.LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e5991 d74734e5930">
<p>Returns the label that is associated with the specified Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6005" headers="d74734e5927">
<p><a href="packages.htm#GUID-8CF6DEF4-B7BD-42F1-BFE9-824222969288" title="The SA_SESSION.MAX_LEVEL function returns the maximum Oracle Label Security level authorized for the session.">SA_SESSION.MAX_LEVEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6005 d74734e5930">
<p>Returns the maximum Oracle Label Security level authorized for the session</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6019" headers="d74734e5927">
<p><a href="packages.htm#GUID-581A52F3-129E-4972-846E-FC0AB82802C2" title="The SA_SESSION.MAX_READ_LABEL function returns the label string that was used to initialize the user&#39;s maximum authorized read label.">SA_SESSION.MAX_READ_LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6019 d74734e5930">
<p>Returns the label string that was used to initialize the user&#39;s maximum authorized read label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6033" headers="d74734e5927">
<p><a href="packages.htm#GUID-0A9A71B0-139B-44B9-9086-A94D783FA99F" title="The SA_SESSION.MAX_WRITE_LABEL function returns the label string that was used to initialize the user&#39;s maximum authorized write label.">SA_SESSION.MAX_WRITE_LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6033 d74734e5930">
<p>Returns the label string that was used to initialize the user&#39;s minimum authorized write label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6047" headers="d74734e5927">
<p><a href="packages.htm#GUID-B2F41310-8C90-4775-B184-20DFE008C1F4" title="The SA_SESSION.MIN_LEVEL function returns the minimum Oracle Label Security level authorized for the session.">SA_SESSION.MIN_LEVEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6047 d74734e5930">
<p>Returns the minimum level authorized for the session</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6061" headers="d74734e5927">
<p><a href="packages.htm#GUID-31D932EA-B6E7-4A8B-BA24-95FE9CFE3919" title="The SA_SESSION.MIN_WRITE_LABEL function retrieves the label string that was used to initialize the user&#39;s minimum authorized write label.">SA_SESSION.MIN_WRITE_LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6061 d74734e5930">
<p>Returns the minimum write privileges for a label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6075" headers="d74734e5927">
<p><a href="packages.htm#GUID-084B45BB-FBCB-4AE9-AE19-2AB27DDD1178" title="The SA_SESSION.PRIVS function returns the set of current session privileges, in a comma-delimited list.">SA_SESSION.PRIVS</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6075 d74734e5930">
<p>Returns the set of current session privileges, in a comma-delimited list</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6090" headers="d74734e5927">
<p><a href="packages.htm#GUID-EF5EC287-7C21-4E40-807E-D52FCB714D30" title="The SA_SESSION.RESTORE_DEFAULT_LABELS procedure restores the session label and row label to those stored in the data dictionary.">SA_SESSION.RESTORE_DEFAULT_LABELS</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6090 d74734e5930">
<p>Resets the current session label and row label to the stored default settings</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6104" headers="d74734e5927">
<p><a href="packages.htm#GUID-A82AA93F-2AEA-42D1-8592-1B944BEBF43D" title="The SA_SESSION.ROW_LABEL function returns the name of the row label that is associated with the policy for the current session.">SA_SESSION.ROW_LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6104 d74734e5930">
<p>Returns the name of the row label that is associated with the policy for the current session.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6118" headers="d74734e5927">
<p><a href="packages.htm#GUID-EAD9B87D-1C24-40D6-A240-878BA009B30A" title="The SA_SESSION.SA_USER_NAME function returns the name of the current Oracle Label Security user, as set by the SA_SESSION.SET_ACCESS_PROFILE procedure (or as established at login).">SA_SESSION.SA_USER_NAME</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6118 d74734e5930">
<p>Returns the user name associated with the current Oracle Label Security session</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6135" headers="d74734e5927">
<p><a href="packages.htm#GUID-78D16BA7-AEF5-4AA5-A512-6711F1B71475" title="The SA_SESSION.SAVE_DEFAULT_LABELS procedure stores the current session label and row label as your initial session label and default row label.">SA_SESSION.SAVE_DEFAULT_LABELS</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6135 d74734e5930">
<p>Lets the user store the current session label and row label as the default for future sessions</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6149" headers="d74734e5927">
<p><a href="packages.htm#GUID-337C9BA9-341B-49B5-8D66-49CEC02626C1" title="The SA_SESSION.SET_ACCESS_PROFILE procedure sets the Oracle Label Security authorizations and privileges of the database session to those of the specified user.">SA_SESSION.SET_ACCESS_PROFILE</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6149 d74734e5930">
<p>Sets the Oracle Label Security authorizations and privileges of the database session to those of the specified user</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6163" headers="d74734e5927">
<p><a href="packages.htm#GUID-890E83D9-182E-4ED0-9948-9746A1C0B023" title="The SA_SESSION.SET_LABEL procedure sets the label of the current database session.">SA_SESSION.SET_LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6163 d74734e5930">
<p>Sets a new level and new compartments and groups to which he or she has read access</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3860" id="d74734e6177" headers="d74734e5927">
<p><a href="packages.htm#GUID-C874C8DC-AF3D-459B-B18B-93C5CC3AAA8D" title="The SA_SESSION.SET_ROW_LABEL procedure sets the default row label value for the current database session.">SA_SESSION.SET_ROW_LABEL</a></p>
</td>
<td class="cellalignment3878" headers="d74734e6177 d74734e5930">
<p>Sets the default row label that will be applied to new rows</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7__GUID-422D5455-5F5B-4E18-BD72-5E7AB34059E5">
<p class="notep1">See Also:</p>
<p><a href="packages.htm#GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1" title="The SA_UTL PL/SQL package contains utility functions and procedures that are used in PL/SQL programs.">SA_UTL PL/SQL Utility Functions and Procedures</a> for additional functions that return numeric label tags and <code class="codeph">BOOLEAN</code> values</p>
</div>
</div>
<a id="OLSAG3931"></a><a id="OLSAG3932"></a><a id="OLSAG3933"></a><a id="OLSAG3934"></a><a id="OLSAG3930"></a>
<div class="props_rev_3"><a id="GUID-60425493-2DD8-4979-8920-5C7127943987"></a>
<h3 id="OLSAG-GUID-60425493-2DD8-4979-8920-5C7127943987" class="sect3">SA_SESSION.COMP_READ</h3>
<div>
<p>The <code class="codeph">SA_SESSION.COMP_READ</code> function returns a comma-delimited list of compartments that the user is authorized to read.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.COMP_READ ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-60425493-2DD8-4979-8920-5C7127943987__GUID-25990179-539E-4BC0-8070-40C8B09A370F">
<p class="titleintable">Table E-36 SA_SESSION.COMP_READ Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.COMP_READ Parameter" summary="SA_SESSION.COMP_READ Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6290">Parameter</th>
<th class="cellalignment3823" id="d74734e6293">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6298" headers="d74734e6290">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6298 d74734e6293">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the compartments that the user can read for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.COMP_READ (&#39;hr_ols_pol&#39;) FROM DUAL; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3936"></a><a id="OLSAG3937"></a><a id="OLSAG3938"></a><a id="OLSAG3939"></a><a id="OLSAG3935"></a>
<div class="props_rev_3"><a id="GUID-F6A51396-881C-49E8-AD6B-E0D2E214C927"></a>
<h3 id="OLSAG-GUID-F6A51396-881C-49E8-AD6B-E0D2E214C927" class="sect3">SA_SESSION.COMP_WRITE</h3>
<div>
<p>The <code class="codeph">SA_SESSION.COMP_WRITE</code> function returns a comma-delimited list of compartments to which the user is authorized to write.</p>
<div class="section">
<p>This function is a subset of <code class="codeph">SA_SESSION.COMP_READ</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.COMP_WRITE ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-F6A51396-881C-49E8-AD6B-E0D2E214C927__GUID-E79E6600-5120-48DA-8BB7-386BD23C0483">
<p class="titleintable">Table E-37 SA_SESSION.COMP_WRITE Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.COMP_WRITE Parameter" summary="SA_SESSION.COMP_WRITE Parameter. Columns are Parameter and Description">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6414">Parameter</th>
<th class="cellalignment3823" id="d74734e6417">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6422" headers="d74734e6414">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6422 d74734e6417">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the compartments that the user can modify for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.COMP_WRITE (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3941"></a><a id="OLSAG3942"></a><a id="OLSAG3943"></a><a id="OLSAG3944"></a><a id="OLSAG3940"></a>
<div class="props_rev_3"><a id="GUID-DD867115-4B22-4AE5-84D1-028C63027F08"></a>
<h3 id="OLSAG-GUID-DD867115-4B22-4AE5-84D1-028C63027F08" class="sect3">SA_SESSION.GROUP_READ</h3>
<div>
<p>The <code class="codeph">SA_SESSION.GROUP_READ</code> function returns a comma-delimited list of groups that the user is authorized to read.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.GROUP_READ ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-DD867115-4B22-4AE5-84D1-028C63027F08__GUID-812E5160-0325-49E2-957C-3F7D988330A0">
<p class="titleintable">Table E-38 SA_SESSION.GROUP_READ Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.GROUP_READ Parameter" summary="SA_SESSION.GROUP_READ Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6527">Parameter</th>
<th class="cellalignment3823" id="d74734e6530">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6535" headers="d74734e6527">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6535 d74734e6530">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the list of groups that a user can read for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.GROUP_READ (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3946"></a><a id="OLSAG3947"></a><a id="OLSAG3948"></a><a id="OLSAG3949"></a><a id="OLSAG3945"></a>
<div class="props_rev_3"><a id="GUID-5071748C-44A4-49EA-B3B5-A8FD02705BC4"></a>
<h3 id="OLSAG-GUID-5071748C-44A4-49EA-B3B5-A8FD02705BC4" class="sect3">SA_SESSION.GROUP_WRITE</h3>
<div>
<p>The <code class="codeph">SA_SESSION.GROUP_WRITE</code> function returns a comma-delimited list of groups that the user is authorized to write.</p>
<div class="section">
<p>This function is a subset of <code class="codeph">SA_SESSION.GROUP_READ</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.GROUP_WRITE ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5071748C-44A4-49EA-B3B5-A8FD02705BC4__GUID-D010C534-330B-4DEB-9640-32E999E7BC62">
<p class="titleintable">Table E-39 SA_SESSION.GROUP_WRITE Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.GROUP_WRITE Parameter" summary="SA_SESSION.GROUP_WRITE Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6646">Parameter</th>
<th class="cellalignment3823" id="d74734e6649">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6654" headers="d74734e6646">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6654 d74734e6649">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the groups the user is authorized to modify for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.GROUP_WRITE (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3951"></a><a id="OLSAG3952"></a><a id="OLSAG3953"></a><a id="OLSAG3954"></a><a id="OLSAG3950"></a>
<div class="props_rev_3"><a id="GUID-36DD3F6F-12C6-4A03-AFCB-6D0F739B8C85"></a>
<h3 id="OLSAG-GUID-36DD3F6F-12C6-4A03-AFCB-6D0F739B8C85" class="sect3">SA_SESSION.LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.LABEL</code> function returns the label that is associated with the specified policy for the current session.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.LABEL ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-36DD3F6F-12C6-4A03-AFCB-6D0F739B8C85__GUID-4E90AD85-0806-47E6-B635-A53DA5E80522">
<p class="titleintable">Table E-40 SA_SESSION.LABEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.LABEL Parameter" summary="SA_SESSION.LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6760">Parameter</th>
<th class="cellalignment3823" id="d74734e6763">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6768" headers="d74734e6760">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6768 d74734e6763">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the label that is associated with the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.LABEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3956"></a><a id="OLSAG3957"></a><a id="OLSAG3958"></a><a id="OLSAG3959"></a><a id="OLSAG3955"></a>
<div class="props_rev_3"><a id="GUID-8CF6DEF4-B7BD-42F1-BFE9-824222969288"></a>
<h3 id="OLSAG-GUID-8CF6DEF4-B7BD-42F1-BFE9-824222969288" class="sect3">SA_SESSION.MAX_LEVEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.MAX_LEVEL</code> function returns the maximum Oracle Label Security level authorized for the session.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.MAX_LEVEL ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8CF6DEF4-B7BD-42F1-BFE9-824222969288__GUID-5B10F386-F60F-487A-941F-EB44F6BDEA75">
<p class="titleintable">Table E-41 SA_SESSION.MAX_LEVEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.MAX_LEVEL Parameter" summary="SA_SESSION.MAX_LEVEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6873">Parameter</th>
<th class="cellalignment3823" id="d74734e6876">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6881" headers="d74734e6873">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6881 d74734e6876">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the maximum Oracle Label Security level that is authorized for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.MAX_LEVEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3961"></a><a id="OLSAG3962"></a><a id="OLSAG3963"></a><a id="OLSAG3964"></a><a id="OLSAG3960"></a>
<div class="props_rev_3"><a id="GUID-581A52F3-129E-4972-846E-FC0AB82802C2"></a>
<h3 id="OLSAG-GUID-581A52F3-129E-4972-846E-FC0AB82802C2" class="sect3">SA_SESSION.MAX_READ_LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.MAX_READ_LABEL</code> function returns the label string that was used to initialize the user&#39;s maximum authorized read label.</p>
<div class="section">
<p>The return string is composed of the user&#39;s maximum level, compartments authorized for read access, and groups authorized for read access.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.MAX_READ_LABEL ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-581A52F3-129E-4972-846E-FC0AB82802C2__GUID-88D8B170-89AF-4FE1-9F7A-E146D90ABE98">
<p class="titleintable">Table E-42 SA_SESSION.MAX_READ_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.MAX_READ_LABEL Parameter" summary="SA_SESSION.MAX_READ_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e6989">Parameter</th>
<th class="cellalignment3823" id="d74734e6992">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e6997" headers="d74734e6989">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e6997 d74734e6992">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the maximum read label privileges for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.MAX_READ_LABEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3966"></a><a id="OLSAG3967"></a><a id="OLSAG3968"></a><a id="OLSAG3969"></a><a id="OLSAG3965"></a>
<div class="props_rev_3"><a id="GUID-0A9A71B0-139B-44B9-9086-A94D783FA99F"></a>
<h3 id="OLSAG-GUID-0A9A71B0-139B-44B9-9086-A94D783FA99F" class="sect3">SA_SESSION.MAX_WRITE_LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.MAX_WRITE_LABEL</code> function returns the label string that was used to initialize the user&#39;s maximum authorized write label.</p>
<div class="section">
<p>This return string is composed of the user&#39;s maximum level, compartments authorized for write access, and groups authorized for write access.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.MAX_WRITE_LABEL ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0A9A71B0-139B-44B9-9086-A94D783FA99F__GUID-7623F5A9-9A18-493C-8A36-86C0ED88062A">
<p class="titleintable">Table E-43 SA_SESSION.MAX_WRITE_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.MAX_WRITE_LABEL Parameter" summary="SA_SESSION.MAX_WRITE_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7106">Parameter</th>
<th class="cellalignment3823" id="d74734e7109">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7114" headers="d74734e7106">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7114 d74734e7109">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the maximum write label privileges for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.MAX_WRITE_LABEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3971"></a><a id="OLSAG3972"></a><a id="OLSAG3973"></a><a id="OLSAG3974"></a><a id="OLSAG3970"></a>
<div class="props_rev_3"><a id="GUID-B2F41310-8C90-4775-B184-20DFE008C1F4"></a>
<h3 id="OLSAG-GUID-B2F41310-8C90-4775-B184-20DFE008C1F4" class="sect3">SA_SESSION.MIN_LEVEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.MIN_LEVEL</code> function returns the minimum Oracle Label Security level authorized for the session.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.MIN_LEVEL ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-B2F41310-8C90-4775-B184-20DFE008C1F4__GUID-8FEA5D1F-15F4-4316-B81C-513FA8F284C8">
<p class="titleintable">Table E-44 SA_SESSION.MIN_LEVEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.MIN_LEVEL Parameter" summary="SA_SESSION.MIN_LEVEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7219">Parameter</th>
<th class="cellalignment3823" id="d74734e7222">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7227" headers="d74734e7219">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7227 d74734e7222">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the current minimum level for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.MIN_LEVEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3976"></a><a id="OLSAG3977"></a><a id="OLSAG3978"></a><a id="OLSAG3979"></a><a id="OLSAG3975"></a>
<div class="props_rev_3"><a id="GUID-31D932EA-B6E7-4A8B-BA24-95FE9CFE3919"></a>
<h3 id="OLSAG-GUID-31D932EA-B6E7-4A8B-BA24-95FE9CFE3919" class="sect3">SA_SESSION.MIN_WRITE_LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.MIN_WRITE_LABEL</code> function retrieves the label string that was used to initialize the user&#39;s minimum authorized write label.</p>
<div class="section">
<p>The return string contains only the level, with no compartments or groups.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.MIN_WRITE_LABEL ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-31D932EA-B6E7-4A8B-BA24-95FE9CFE3919__GUID-0AC178C1-7919-4532-9F56-A87C2C40415B">
<p class="titleintable">Table E-45 SA_SESSION.MIN_WRITE_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.MIN_WRITE_LABEL Parameter" summary="SA_SESSION.MAX_WRITE_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7335">Parameter</th>
<th class="cellalignment3823" id="d74734e7338">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7343" headers="d74734e7335">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7343 d74734e7338">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the maximum write label privileges for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.MIN_WRITE_LABEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3981"></a><a id="OLSAG3982"></a><a id="OLSAG3983"></a><a id="OLSAG3984"></a><a id="OLSAG3980"></a>
<div class="props_rev_3"><a id="GUID-084B45BB-FBCB-4AE9-AE19-2AB27DDD1178"></a>
<h3 id="OLSAG-GUID-084B45BB-FBCB-4AE9-AE19-2AB27DDD1178" class="sect3">SA_SESSION.PRIVS</h3>
<div>
<p>The <code class="codeph">SA_SESSION.PRIVS</code> function returns the set of current session privileges, in a comma-delimited list.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.PRIVS ( 
  policy_name IN VARCHAR2) 
RETURN VARCHAR2;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-084B45BB-FBCB-4AE9-AE19-2AB27DDD1178__GUID-89CBCD69-8809-4B2D-9499-E737DBCB1926">
<p class="titleintable">Table E-46 SA_SESSION.Privs Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.Privs Parameter" summary="SA_SESSION.Privs Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7449">Parameter</th>
<th class="cellalignment3823" id="d74734e7452">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7457" headers="d74734e7449">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7457 d74734e7452">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the current session privileges for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.PRIVS (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3985"></a><a id="OLSAG3986"></a><a id="OLSAG3987"></a><a id="OLSAG3988"></a><a id="OLSAG3179"></a>
<div class="props_rev_3"><a id="GUID-EF5EC287-7C21-4E40-807E-D52FCB714D30"></a>
<h3 id="OLSAG-GUID-EF5EC287-7C21-4E40-807E-D52FCB714D30" class="sect3">SA_SESSION.RESTORE_DEFAULT_LABELS</h3>
<div>
<p>The <code class="codeph">SA_SESSION.RESTORE_DEFAULT_LABELS</code> procedure restores the session label and row label to those stored in the data dictionary.</p>
<div class="section">
<p>This command is useful to reset values after a <code class="codeph">SA_SESSION.SET_LABEL</code> command has been processed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.RESTORE_DEFAULT_LABELS (
 policy_name in VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EF5EC287-7C21-4E40-807E-D52FCB714D30__GUID-18D74064-FE56-4BC0-BC28-16BEF888B5E8">
<p class="titleintable">Table E-47 SA_SESSION.RESTORE_DEFAULT_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.RESTORE_DEFAULT_LABEL Parameter" summary="SA_SESSION.RESTORE_DEFAULT_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7584">Parameter</th>
<th class="cellalignment3823" id="d74734e7587">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7592" headers="d74734e7584">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7592 d74734e7587">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example restores the default labels for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_SESSION.RESTORE_DEFAULT_LABELS (
  policy_name         =&gt; &#39;hr_ols_pol&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3990"></a><a id="OLSAG3991"></a><a id="OLSAG3992"></a><a id="OLSAG3993"></a><a id="OLSAG3989"></a>
<div class="props_rev_3"><a id="GUID-A82AA93F-2AEA-42D1-8592-1B944BEBF43D"></a>
<h3 id="OLSAG-GUID-A82AA93F-2AEA-42D1-8592-1B944BEBF43D" class="sect3">SA_SESSION.ROW_LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.ROW_LABEL</code> function returns the name of the row label that is associated with the policy for the current session.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.ROW_LABEL ( 
  policy_name IN VARCHAR2)
RETURN VARCHAR2; 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-A82AA93F-2AEA-42D1-8592-1B944BEBF43D__GUID-65A3237C-1517-4829-9871-296F0562D711">
<p class="titleintable">Table E-48 SA_SESSION.ROW_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_SESSION.ROW_LABEL Parameters" summary="SA_SESSION.ROW_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7697">Parameter</th>
<th class="cellalignment3823" id="d74734e7700">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7705" headers="d74734e7697">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7705 d74734e7700">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the row label that is associated with the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.ROW_LABEL (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3994"></a><a id="OLSAG3995"></a><a id="OLSAG3996"></a><a id="OLSAG3997"></a><a id="OLSAG3177"></a>
<div class="props_rev_3"><a id="GUID-890E83D9-182E-4ED0-9948-9746A1C0B023"></a>
<h3 id="OLSAG-GUID-890E83D9-182E-4ED0-9948-9746A1C0B023" class="sect3">SA_SESSION.SET_LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.SET_LABEL</code> procedure sets the label of the current database session.</p>
<div class="section">
<p>You can set the session label to:</p>
<ul style="list-style-type: disc;">
<li>
<p>Any level equal to or less than the maximum, and equal to or greater than the minimum level</p>
</li>
<li>
<p>Include any compartments in the authorized compartment list</p>
</li>
<li>
<p>Include any groups in the authorized group list. (Subgroups of authorized groups are implicitly included in the authorized list.)</p>
</li>
</ul>
<p>Note that if you change the session label, this change may affect the value of the session&#39;s row label. The session&#39;s row label contains the subset of compartments and groups for which the user has write access. This may or may not be equivalent to the session label. For example, if you use the <code class="codeph">SA_SESSION.SET_LABEL</code> procedure to set your current session label to <code class="codeph">C:A,B:US</code> and you have write access only on the <code class="codeph">A</code> compartment, then your row label would be set to <code class="codeph">C:A</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.SET_LABEL (
 policy_name IN VARCHAR2,
 label       IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-890E83D9-182E-4ED0-9948-9746A1C0B023__GUID-C183EB57-300A-42CA-A525-BF83DD8562BB">
<p class="titleintable">Table E-49 SA_SESSION.SET_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_SESSION.SET_LABEL Parameters" summary="SA_SESSIONS.SET_LABEL parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7842">Parameter</th>
<th class="cellalignment3823" id="d74734e7845">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7850" headers="d74734e7842">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7850 d74734e7845">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7864" headers="d74734e7842">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7864 d74734e7845">
<p>The value to set as the label</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the label for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_SESSION.SET_LABEL (
  policy_name         =&gt; &#39;hr_ols_pol&#39;,
  label               =&gt; &#39;C:A,B:US&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-890E83D9-182E-4ED0-9948-9746A1C0B023__GUID-61AB3F65-BCD4-4DBD-BFEF-E76278D57F59">
<p class="notep1">See Also:</p>
<p><a href="packages.htm#GUID-CF8D31E3-D8DB-4FF6-86AD-A0C64E95D238" title="The SA_USER_ADMIN.SET_DEFAULT_LABEL procedure sets the user&#39;s initial session label to the one specified.">SA_USER_ADMIN.SET_DEFAULT_LABEL</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG3998"></a><a id="OLSAG3999"></a><a id="OLSAG3295"></a><a id="OLSAG4000"></a><a id="OLSAG053"></a>
<div class="props_rev_3"><a id="GUID-EAD9B87D-1C24-40D6-A240-878BA009B30A"></a>
<h3 id="OLSAG-GUID-EAD9B87D-1C24-40D6-A240-878BA009B30A" class="sect3">SA_SESSION.SA_USER_NAME</h3>
<div>
<p>The <code class="codeph">SA_SESSION.SA_USER_NAME</code> function returns the name of the current Oracle Label Security user, as set by the <code class="codeph">SA_SESSION.SET_ACCESS_PROFILE</code> procedure (or as established at login).</p>
<div class="section">
<p>This is how you can determine the identity of the current user in relation to Oracle Label Security, rather than in relation to your Oracle login name.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.SA_USER_NAME ( 
  policy_name IN VARCHAR2)
RETURN VARCHAR2; 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EAD9B87D-1C24-40D6-A240-878BA009B30A__GUID-A6E107A3-F84B-4F71-A15F-FD98F9172364">
<p class="titleintable">Table E-50 SA_SESSION.SA_USER_NAME Parameters</p>
<table class="cellalignment3821" title="SA_SESSION.SA_USER_NAME Parameters" summary="This table defines the meaning for each of the parameters used by the SA_SESSION.SA_USER_NAME procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e7986">Parameter</th>
<th class="cellalignment3823" id="d74734e7989">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e7994" headers="d74734e7986">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e7994 d74734e7989">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example finds the name of the Oracle Label Security user for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">SELECT SA_SESSION.SA_USER_NAME (&#39;hr_ols_pol&#39;) FROM DUAL;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4001"></a><a id="OLSAG4002"></a><a id="OLSAG4003"></a><a id="OLSAG4004"></a><a id="OLSAG3180"></a>
<div class="props_rev_3"><a id="GUID-78D16BA7-AEF5-4AA5-A512-6711F1B71475"></a>
<h3 id="OLSAG-GUID-78D16BA7-AEF5-4AA5-A512-6711F1B71475" class="sect3">SA_SESSION.SAVE_DEFAULT_LABELS</h3>
<div>
<p>The <code class="codeph">SA_SESSION.SAVE_DEFAULT_LABELS</code> procedure stores the current session label and row label as your initial session label and default row label.</p>
<div class="section">
<p>This procedure permits you to change your defaults to reflect your current session label and row label. The saved labels will be used as the initial default settings for future sessions.</p>
<p>When you log in to a database, your default session label and row label are used to initialize the session label and row label. When the administrator originally authorized your Oracle Label Security labels, he or she also defined your default level, default compartments, and default groups. If you change your session label and row label, and want to save these values as the default labels, you can use the <code class="codeph">SA_SESSION.SAVE_DEFAULT_LABELS</code> procedure.</p>
<p>This procedure is useful if you have multiple sessions and want to be sure that all additional sessions have the same labels. You can save the current labels as the default, and all future sessions will have these as the initial labels.</p>
<p>Consider a situation in which you connect to the database through Oracle Forms and want to run a report. By saving the current session labels as the default before you call Oracle Reports, you ensure that Oracle Reports will initialize at the same labels as are being used by Oracle Forms.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.SAVE_DEFAULT_LABELS ( 
  policy_name IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameter</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-78D16BA7-AEF5-4AA5-A512-6711F1B71475__GUID-691FFD57-C4F0-4BCA-BA50-0BAD35126B40">
<p class="titleintable">Table E-51 SA_SESSION.SAVE_DEFAULT_LABELS Parameter</p>
<table class="cellalignment3821" title="SA_SESSION.SAVE_DEFAULT_LABELS Parameter" summary="SA_SESSION.SAVE_DEFAULT_LABELS Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e8123">Parameter</th>
<th class="cellalignment3823" id="d74734e8126">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8131" headers="d74734e8123">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8131 d74734e8126">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example saves the label defaults for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_SESSION.SAVE_DEFAULT_LABELS (
  policy_name       =&gt; &#39;hr_ols_pol&#39;);
END;
/
</pre>
<div class="infobox-note" id="GUID-78D16BA7-AEF5-4AA5-A512-6711F1B71475__GUID-3C22191D-B089-464F-B068-322FCA30E132">
<p class="notep1">Note:</p>
<p>The <code class="codeph">SA_SESSION.SAVE_DEFAULT_LABELS</code> procedure overrides the settings established by the administrator.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4005"></a><a id="OLSAG4006"></a><a id="OLSAG3294"></a><a id="OLSAG4007"></a><a id="OLSAG052"></a>
<div class="props_rev_3"><a id="GUID-337C9BA9-341B-49B5-8D66-49CEC02626C1"></a>
<h3 id="OLSAG-GUID-337C9BA9-341B-49B5-8D66-49CEC02626C1" class="sect3">SA_SESSION.SET_ACCESS_PROFILE</h3>
<div>
<p>The <code class="codeph">SA_SESSION.SET_ACCESS_PROFILE</code> procedure sets the Oracle Label Security authorizations and privileges of the database session to those of the specified user.</p>
<div class="section">
<p>Note that the originating user retains the <code class="codeph">PROFILE_ACCESS</code> privilege.</p>
<p>The user who executes the <code class="codeph">SA_SESSION.SET_ACCESS_PROFILE</code> procedure must have the <code class="codeph">PROFILE_ACCESS</code> privilege. The logged-in database user (the Oracle user ID) does not change. That user assumes only the authorizations and privileges of the specified user. By contrast, the Oracle Label Security user name <span class="italic">is</span> changed.</p>
<p>This administrative procedure is useful for various tasks:</p>
<ul style="list-style-type: disc;">
<li>
<p>With <code class="codeph">SA_SESSION.SET_ACCESS_PROFILE</code>, you can see the result of the authorization and privilege settings for a particular user.</p>
</li>
<li>
<p>Applications need to have proxy accounts connect as (and assume the identity of) application users, for purposes of accessing labeled data. With the <code class="codeph">SA_SESSION.SET_ACCESS_PROFILE</code> privilege, the proxy account can act on behalf of the application users.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.SET_ACCESS_PROFILE (
  policy_name IN VARCHAR2
  user_name   IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="section"></div>
<!-- class="section" -->
<div class="tblformal" id="GUID-337C9BA9-341B-49B5-8D66-49CEC02626C1__GUID-7088F8CF-0710-4A75-A09A-1E7A6F82C7FF">
<p class="titleintable">Table E-52 SA_SESSION.SET_ACCESS_PROFILE Parameters</p>
<table class="cellalignment3821" title="SA_SESSION.SET_ACCESS_PROFILE Parameters" summary="This table defines the meaning for each of the parameters used by the SA_SESSION.SET_ACCESS_PROFILE procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e8276">Parameter</th>
<th class="cellalignment3823" id="d74734e8279">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8284" headers="d74734e8276">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8284 d74734e8279">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8298" headers="d74734e8276">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8298 d74734e8279">
<p>Name of the user whose authorizations and privileges should be assumed (typically, the user associated with this policy). To find this user, query the <code class="codeph">USER_NAME</code> and <code class="codeph">POLICY_NAME</code> columns of the <code class="codeph">DBA_SA_USERS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables user <code class="codeph">psmith</code> to have Oracle Label Security authorizations and privileges for the database session.</p>
<pre dir="ltr">BEGIN
 SA_SESSION.SET_ACCESS_PROFILE (
  policy_name       =&gt; &#39;hr_ols_pol&#39;,
  user_name         =&gt; &#39;jjones&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4008"></a><a id="OLSAG4009"></a><a id="OLSAG4010"></a><a id="OLSAG4011"></a><a id="OLSAG3178"></a>
<div class="props_rev_3"><a id="GUID-C874C8DC-AF3D-459B-B18B-93C5CC3AAA8D"></a>
<h3 id="OLSAG-GUID-C874C8DC-AF3D-459B-B18B-93C5CC3AAA8D" class="sect3">SA_SESSION.SET_ROW_LABEL</h3>
<div>
<p>The <code class="codeph">SA_SESSION.SET_ROW_LABEL</code> procedure sets the default row label value for the current database session.</p>
<div class="section">
<p>The compartments and groups in the label must be a subset of the compartments and groups in the session label to which the user has write access. When the <code class="codeph">LABEL_DEFAULT</code> option is set, this row label value is used on insert if the user does not explicitly specify the label.</p>
<p>If the <code class="codeph">SA_SESSION.SET_ROW_LABEL</code> procedure is not used to set the default row label value, then this value is automatically derived from the session label. It contains the level of the session label and the subset of the compartments and groups in the session label for which the user has write authorization.</p>
<p>The row label is automatically reset if the session label changes. For example, if you change your session level from <code class="codeph">HIGHLY_SENSITIVE</code> to <code class="codeph">SENSITIVE</code>, then the level component of the row label automatically changes to <code class="codeph">SENSITIVE</code>.</p>
<p>The user can set the row label independently, but only to include:</p>
<ul style="list-style-type: disc;">
<li>
<p>A level that is less than or equal to the level of the session label, and greater than or equal to the user&#39;s minimum level</p>
</li>
<li>
<p>A subset of the compartments and groups from the session label, for which the user is authorized to have write access</p>
</li>
</ul>
<p>If the user tries to set the row label to an invalid value, then the operation is not permitted and the row label value is unchanged.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SESSION.SET_ROW_LABEL (
 policy_name   IN VARCHAR2,
 row_label     IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C874C8DC-AF3D-459B-B18B-93C5CC3AAA8D__GUID-14A98963-FF17-4C58-8DD3-E41CBB50BD9D">
<p class="titleintable">Table E-53 SA_SESSION.SET_ROW_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_SESSION.SET_ROW_LABEL Parameters" summary="SA_SESSION.SET_ROW_LABEL Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e8453">Parameter</th>
<th class="cellalignment3823" id="d74734e8456">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8461" headers="d74734e8453">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8461 d74734e8456">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8475" headers="d74734e8453">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8475 d74734e8456">
<p>The value to set as the default row label</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the row label for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_SESSION.SET_ROW_LABEL (
  policy_name     =&gt; &#39;hr_ols_pol&#39;,
  label           =&gt; &#39;HR&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-C874C8DC-AF3D-459B-B18B-93C5CC3AAA8D__GUID-9D7D4E7C-2ECE-4DD8-9D6D-0B9603A5C4C3">
<p class="notep1">See Also:</p>
<p><a href="packages.htm#GUID-36FE5D8D-036F-481B-9729-2FD7116DC678" title="The SA_USER_ADMIN.SET_ROW_LABEL procedure sets a user&#39;s initial row label to the one specified.">SA_USER_ADMIN.SET_ROW_LABEL</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG4012"></a><a id="OLSAG044"></a>
<div class="props_rev_3"><a id="GUID-520B4DCF-487C-4DFB-972B-0E4A9AA5E497"></a>
<h2 id="OLSAG-GUID-520B4DCF-487C-4DFB-972B-0E4A9AA5E497" class="sect2">SA_SYSDBA Policy Management PL/SQL Package</h2>
<div>
<p>The <code class="codeph">SA_SYSDBA</code> PL/SQL package manages Oracle Label Security policies, such as creating, altering, or disabling them.</p>
<p><a href="packages.htm#GUID-520B4DCF-487C-4DFB-972B-0E4A9AA5E497__CIHJDAGH" title="SA_SYSDBA Procedures">Table E-54</a> lists the procedures of the <code class="codeph">SA_SYSDBA</code> package.</p>
<p>To use this package, you must be granted the <code class="codeph">LBAC_DBA</code> role and the <code class="codeph">EXECUTE</code> privilege on the <code class="codeph">SA_SYSDBA</code> package. The <code class="codeph">SA_SYSDBA</code> package is an invoker&rsquo;s rights package, so you must provide the following <code class="codeph">INHERIT PRIVILEGES</code> grant to the user <code class="codeph">SYS</code> before you can use this package:</p>
<pre dir="ltr">GRANT INHERIT PRIVILEGES ON USER SYS TO LBACSYS;
</pre>
<p>You only need to grant this privilege on user <code class="codeph">SYS.</code> You do not need to grant it on other users.</p>
<div class="tblformal" id="GUID-520B4DCF-487C-4DFB-972B-0E4A9AA5E497__CIHJDAGH">
<p class="titleintable">Table E-54 SA_SYSDBA PL/SQL Package Contents</p>
<table class="cellalignment3821" title="SA_SYSDBA PL/SQL Package Contents" summary="SA_SYSDBA Procedures">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3877" id="d74734e8615">Procedure</th>
<th class="cellalignment3857" id="d74734e8618">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3878" id="d74734e8623" headers="d74734e8615">
<p><a href="packages.htm#GUID-20B068BC-9178-4224-9264-AEE8A8F6C1C8" title="The SA_SYSDBA.ALTER_POLICY procedure sets and modifies column names that are associated with the policy.">SA_SYSDBA.ALTER_POLICY</a></p>
</td>
<td class="cellalignment3860" headers="d74734e8623 d74734e8618">
<p>Modifies an Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3878" id="d74734e8637" headers="d74734e8615">
<p><a href="packages.htm#GUID-D60E2279-6A51-496E-99F0-D779C3AE4959" title="The SA_SYSDBA.CREATE_POLICY procedure creates a new Oracle Label Security policy, defines a policy-specific column name, and specifies default policy options.">SA_SYSDBA.CREATE_POLICY</a></p>
</td>
<td class="cellalignment3860" headers="d74734e8637 d74734e8618">
<p>Creates an Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3878" id="d74734e8651" headers="d74734e8615">
<p><a href="packages.htm#GUID-C34ABD1F-DF7D-4A81-9CDF-0B52235CC42B" title="The SA_SYSDBA.DISABLE_POLICY procedure turns off enforcement of a policy, without removing it from the database.">SA_SYSDBA.DISABLE_POLICY</a></p>
</td>
<td class="cellalignment3860" headers="d74734e8651 d74734e8618">
<p>Disables an Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3878" id="d74734e8665" headers="d74734e8615">
<p><a href="packages.htm#GUID-F49BCF93-C5B4-43C2-A4C3-583439760812" title="The SA_SYSDBA.DROP_POLICY procedure deletes the policy and its associated user labels and data labels from the database.">SA_SYSDBA.DROP_POLICY</a></p>
</td>
<td class="cellalignment3860" headers="d74734e8665 d74734e8618">
<p>Drops an Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3878" id="d74734e8679" headers="d74734e8615">
<p><a href="packages.htm#GUID-2D9505EE-0E4D-4C50-889E-D0DDA3F0604A" title="The SA_SYSDBA.ENABLE_POLICY procedure enforces access control on the tables and schemas protected by the policy.">SA_SYSDBA.ENABLE_POLICY</a></p>
</td>
<td class="cellalignment3860" headers="d74734e8679 d74734e8618">
<p>Enables an Oracle Label Security policy</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-520B4DCF-487C-4DFB-972B-0E4A9AA5E497__GUID-993D3B4E-09F3-4015-BDD7-A5B519B020DA">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="getstrtd.htm#GUID-1A821EA4-A899-4F3C-AE96-E04918CEBFBF" title="The Oracle Label Security policy container is a storage place for the policy settings.">Step 1: Create the Label Security Policy Container</a></p>
</li>
<li>
<p><a href="intro.htm#GUID-97B4941D-079A-48D1-BF98-04DDB128F990" title="Oracle Label Security administrators have a set of package- and role-based privileges.">Duties of Oracle Label Security Administrators</a></p>
</li>
</ul>
</div>
</div>
<a id="OLSAG4013"></a><a id="OLSAG4014"></a><a id="OLSAG3229"></a><a id="OLSAG4015"></a><a id="OLSAG3228"></a>
<div class="props_rev_3"><a id="GUID-20B068BC-9178-4224-9264-AEE8A8F6C1C8"></a>
<h3 id="OLSAG-GUID-20B068BC-9178-4224-9264-AEE8A8F6C1C8" class="sect3">SA_SYSDBA.ALTER_POLICY</h3>
<div>
<p>The <code class="codeph">SA_SYSDBA.ALTER_POLICY</code> procedure sets and modifies column names that are associated with the policy.</p>
<div class="section">
<p><code class="codeph">SA_SYSDBA.ALTER_POLICY</code> can only be used to change column name for policies that are not applied on any user tables or schemas. Otherwise, this error appears:</p>
<pre dir="ltr">12474, 00000, &#34;cannot change column name for a policy in use&#34;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SYSDBA.ALTER_POLICY (
   policy_name       IN  VARCHAR2,
   default_options   IN  VARCHAR2 DEFAULT NULL,
   column_name       IN  VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-20B068BC-9178-4224-9264-AEE8A8F6C1C8__GUID-2DB0FA82-65F5-48AA-A2D8-FF7EC37DBCCC">
<p class="titleintable">Table E-55 SA_SYSDBA.ALTER_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_SYSDBA.ALTER_POLICY Parameters" summary="This table gives the name and description for each parameter used by SA_SYSDBA.ALTER_POLICY.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e8802">Parameter</th>
<th class="cellalignment3823" id="d74734e8805">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8810" headers="d74734e8802">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8810 d74734e8805">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8824" headers="d74734e8802">
<p><code class="codeph">default_options</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8824 d74734e8805">
<p>Specifies the default enforcement options to be used when the policy is applied and no table- or schema-specific options are specified. Includes enforcement options and the option to hide the label column. Separate each option with a comma.</p>
<p>See <a href="enforce.htm#GUID-FA74FF7C-71A8-477E-B431-F3E5C1878EE6" title="Oracle Label Security enforces policies using three categories: label management options, access control options, and overriding options.">Categories of Policy Enforcement Options</a> for a listing of the default enforcement options.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8840" headers="d74734e8802">
<p><code class="codeph">column_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8840 d74734e8805">
<p>Specifies the column name associated with the policy. To find this column name, query the <code class="codeph">COLUMN_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example updates the <code class="codeph">hr_ols_pol</code> policy to use a different set of default options. Because the name of the column does not need to change, the <code class="codeph">column_name</code> parameter is omitted.</p>
<pre dir="ltr">BEGIN
 SA_SYSDBA.ALTER_POLICY ( 
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  default_options  =&gt; &#39;read_control, delete_control&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4016"></a><a id="OLSAG4017"></a><a id="OLSAG3227"></a><a id="OLSAG4018"></a><a id="OLSAG3226"></a>
<div class="props_rev_3"><a id="GUID-D60E2279-6A51-496E-99F0-D779C3AE4959"></a>
<h3 id="OLSAG-GUID-D60E2279-6A51-496E-99F0-D779C3AE4959" class="sect3">SA_SYSDBA.CREATE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_SYSDBA.CREATE_POLICY</code> procedure creates a new Oracle Label Security policy, defines a policy-specific column name, and specifies default policy options.</p>
<div class="section">
<p>After you create the policy, a role for it is created and granted to you. The format of the role name is <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> (for example, <code class="codeph">my_ols_pol_DBA</code>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SYSDBA.CREATE_POLICY (
   policy_name       IN VARCHAR2,
   column_name       IN VARCHAR2 DEFAULT NULL,
   default_options   IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D60E2279-6A51-496E-99F0-D779C3AE4959__GUID-9A457152-A958-4E85-8D43-F899A5E96F12">
<p class="titleintable">Table E-56 SA_SYSDBA.CREATE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_SYSDBA.CREATE_POLICY Parameters" summary="This table gives the name and description for each parameter used by SA_SYSDBA.CREATE_POLICY.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e8971">Parameter</th>
<th class="cellalignment3823" id="d74734e8974">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e8979" headers="d74734e8971">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e8979 d74734e8974">
<p>Specifies the policy name, which must be unique within the database. It can have a maximum of 30 characters, but only the first 26 characters in the <code class="codeph">policy_name</code> are significant. Two policies may not have the same first 26 characters in the <code class="codeph">policy_name</code>.</p>
<p>To find a list of existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9001" headers="d74734e8971">
<p><code class="codeph">column_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9001 d74734e8974">
<p>Specifies the name of the column to be added to tables protected by the policy. If <code class="codeph">NULL</code>, then the name <span class="italic"><code class="codeph">policy_name</code></span><code class="codeph">_COL</code> is used. Two Oracle Label Security policies cannot share the same column name.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9018" headers="d74734e8971">
<p><code class="codeph">default_options</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9018 d74734e8974">
<p>Specifies the default options to be used when the policy is applied and no table- or schema-specific options are specified. Includes enforcement options and the option to hide the label column. Separate each option with a comma.</p>
<p>See <a href="enforce.htm#GUID-FA74FF7C-71A8-477E-B431-F3E5C1878EE6" title="Oracle Label Security enforces policies using three categories: label management options, access control options, and overriding options.">Categories of Policy Enforcement Options</a> for a listing of the default enforcement options.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a policy container whose default options are <code class="codeph">READ_CONTROL</code> and <code class="codeph">WRITE_CONTROL</code>. The <code class="codeph">WRITE_CONTROL</code> option encompasses the <code class="codeph">INSERT_CONTROL</code>, <code class="codeph">UPDATE_CONTROL</code>, and <code class="codeph">DELETE_CONTROL</code> options.</p>
<pre dir="ltr">BEGIN
 SA_SYSDBA.CREATE_POLICY ( 
  policy_name      =&gt; &#39;hr_ols_pol&#39;,
  column_name      =&gt; &#39;ols_col&#39;,
  default_options  =&gt; &#39;read_control, write_control&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-D60E2279-6A51-496E-99F0-D779C3AE4959__GUID-3EC245DD-E678-4345-BF5E-6208886AD4B0">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="packages.htm#GUID-5C1F501B-293A-436E-865D-51D34E3D0829" title="The SA_POLICY_ADMIN.APPLY_TABLE_POLICY procedure adds the specified policy to a table.">SA_POLICY_ADMIN.APPLY_TABLE_POLICY</a> for information about policy enforcement options for tables</p>
</li>
<li>
<p><a href="enforce.htm#GUID-D22D69D5-FD98-4999-9096-F2580346D64D" title="Oracle Label Security provides a set of policy enforcement options.">Oracle Label Security Policy Enforcement Options</a> and <a href="enforce.htm#GUID-26ABB868-ADB3-44D0-B5A0-3CAF9C5EC627" title="You can specify the HIDE policy configuration option when you add an Oracle Label Security policy column to a table.">How the HIDE Policy Column Option Works</a> for information about <code class="codeph">HIDE</code></p>
</li>
<li>
<p><a href="releas.htm#GUID-E700EA4A-754B-40FA-8D2E-DBEB5ECBDDF5" title="The SA_SYSDBA.CREATE_POLICY procedure creates the policy, defines an optional policy-specific column name, and specifies policy options.">SA_SYSDBA.CREATE_POLICY with Inverse Groups</a></p>
</li>
<li>
<p><a href="intro.htm#GUID-97B4941D-079A-48D1-BF98-04DDB128F990" title="Oracle Label Security administrators have a set of package- and role-based privileges.">Duties of Oracle Label Security Administrators</a> for information about the <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> role</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4019"></a><a id="OLSAG4020"></a><a id="OLSAG3231"></a><a id="OLSAG4021"></a><a id="OLSAG3230"></a>
<div class="props_rev_3"><a id="GUID-C34ABD1F-DF7D-4A81-9CDF-0B52235CC42B"></a>
<h3 id="OLSAG-GUID-C34ABD1F-DF7D-4A81-9CDF-0B52235CC42B" class="sect3">SA_SYSDBA.DISABLE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_SYSDBA.DISABLE_POLICY</code> procedure turns off enforcement of a policy, without removing it from the database.</p>
<div class="section">
<p>The policy is not enforced for all subsequent access to the database.</p>
<p>To disable a policy means that no access control is enforced on the tables and schemas protected by the policy. The administrator can continue to perform administrative operations while the policy is disabled.</p>
<div class="infobox-note" id="GUID-C34ABD1F-DF7D-4A81-9CDF-0B52235CC42B__GUID-692E44B9-5DA5-40F1-8DBF-3E4DE3A3CF22">
<p class="notep1">Note:</p>
<p>This feature is extremely powerful, and should be used with caution. When a policy is disabled, anyone who connects to the database can access all the data normally protected by the policy. So, your site should establish guidelines for use of this feature.</p>
</div>
<p>Normally, a policy should not be disabled in order to manage data. At times, however, an administrator may need to disable a policy to perform application debugging tasks. In this case, the database should be run in single-user mode. In a development environment, for example, you may need to observe data processing operations without the policy turned on. When you reenable the policy, all of the selected enforcement options become effective again.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SYSDBA.DISABLE_POLICY (
 policy_name IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C34ABD1F-DF7D-4A81-9CDF-0B52235CC42B__GUID-3A9BC27B-763B-4F3F-8E4F-88668C69DBF7">
<p class="titleintable">Table E-57 SA_SYSDBA.DISABLE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_SYSDBA.DISABLE_POLICY Parameters" summary="This table gives the name and description for each parameter used by SA_SYSDBA.DISABLE_POLICY.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e9207">Parameter</th>
<th class="cellalignment3823" id="d74734e9210">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9215" headers="d74734e9207">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9215 d74734e9210">
<p>Specifies the policy. To find existing policies and their status, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">STATUS</code> columns of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example disables the <code class="codeph">hr_ols_pol</code> policy:</p>
<pre dir="ltr">EXEC SA_SYSDBA.DISABLE_POLICY (&#39;hr_ols_pol&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4022"></a><a id="OLSAG4023"></a><a id="OLSAG3235"></a><a id="OLSAG4024"></a><a id="OLSAG3234"></a>
<div class="props_rev_3"><a id="GUID-F49BCF93-C5B4-43C2-A4C3-583439760812"></a>
<h3 id="OLSAG-GUID-F49BCF93-C5B4-43C2-A4C3-583439760812" class="sect3">SA_SYSDBA.DROP_POLICY</h3>
<div>
<p>The <code class="codeph">SA_SYSDBA.DROP_POLICY</code> procedure deletes the policy and its associated user labels and data labels from the database.</p>
<div class="section">
<p>This procedure purges the policy and these associations from the system entirely. You can optionally drop the label column from all tables controlled by the policy. The policy does not need to be disabled before you drop it.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SYSDBA.DROP_POLICY ( 
   policy_name IN VARCHAR2,
   drop_column  BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-F49BCF93-C5B4-43C2-A4C3-583439760812__GUID-14946D47-460D-4021-971D-41E41EAC871C">
<p class="titleintable">Table E-58 SA_SYSDBA.DROP_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_SYSDBA.DROP_POLICY Parameters" summary="This table gives the name and description for each parameter used by SA_SYSDBA.DROP_POLICY.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e9326">Parameter</th>
<th class="cellalignment3823" id="d74734e9329">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9334" headers="d74734e9326">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9334 d74734e9329">
<p>Specifies the policy to be dropped. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9348" headers="d74734e9326">
<p><code class="codeph">drop_column</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9348 d74734e9329">
<p>Indicates that the policy column should be dropped from protected tables (<code class="codeph">TRUE</code>)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">EXEC SA_SYSDBA.DROP_POLICY (&#39;hr_ols_pol&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4025"></a><a id="OLSAG4026"></a><a id="OLSAG3233"></a><a id="OLSAG4027"></a><a id="OLSAG3232"></a>
<div class="props_rev_3"><a id="GUID-2D9505EE-0E4D-4C50-889E-D0DDA3F0604A"></a>
<h3 id="OLSAG-GUID-2D9505EE-0E4D-4C50-889E-D0DDA3F0604A" class="sect3">SA_SYSDBA.ENABLE_POLICY</h3>
<div>
<p>The <code class="codeph">SA_SYSDBA.ENABLE_POLICY</code> procedure enforces access control on the tables and schemas protected by the policy.</p>
<div class="section">
<p>A policy is automatically enabled when it is created. After creation or enablement, the policy is enforced for all subsequent access to tables protected by the policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_SYSDBA.ENABLE_POLICY (policy_name IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-2D9505EE-0E4D-4C50-889E-D0DDA3F0604A__GUID-E2083A4A-BC18-4CA7-8E84-05AD58C05D36">
<p class="titleintable">Table E-59 SA_SYSDBA.ENABLE_POLICY Parameters</p>
<table class="cellalignment3821" title="SA_SYSDBA.ENABLE_POLICY Parameters" summary="This table gives the name and description for each parameter used by SA_SYSDBA.ENABLE_POLICY.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e9454">Parameter</th>
<th class="cellalignment3823" id="d74734e9457">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9462" headers="d74734e9454">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9462 d74734e9457">
<p>Specifies the policy. To find existing policies and their status, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">STATUS</code> columns of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">EXEC SA_SYSDBA.ENABLE_POLICY(&#39;hr_ols_pol&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG4028"></a><a id="OLSAG049"></a>
<div class="props_rev_3"><a id="GUID-6567095A-13E5-43F8-9A2C-30A84E095B87"></a>
<h2 id="OLSAG-GUID-6567095A-13E5-43F8-9A2C-30A84E095B87" class="sect2">SA_USER_ADMIN PL/SQL Package</h2>
<div>
<p>The <code class="codeph">SA_USER_ADMIN</code> PL/SQL package manages user labels by label component.</p>
<p><a href="packages.htm#GUID-6567095A-13E5-43F8-9A2C-30A84E095B87__CIHEEBJB" title="SA_USER_ADMIN package">Table E-60</a> lists the <code class="codeph">SA_USER_ADMIN</code> PL/SQL package procedures.</p>
<p>To use this package, you must be granted the <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> role (for example, <code class="codeph">HR_OLS_POL_DBA</code> for a role for the <code class="codeph">hr_ols_pol</code> policy) and the <code class="codeph">EXECUTE</code> privilege on the <code class="codeph">SA_USER_ADMIN</code> package.</p>
<div class="tblformalwide" id="GUID-6567095A-13E5-43F8-9A2C-30A84E095B87__CIHEEBJB">
<p class="titleintable">Table E-60 SA_USER_ADMIN PL/SQL Package Contents</p>
<table class="cellalignment3816" title="SA_USER_ADMIN PL/SQL Package Contents" summary="SA_USER_ADMIN package">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3818" id="d74734e9601">Procedure or Function</th>
<th class="cellalignment3817" id="d74734e9604">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9609" headers="d74734e9601">
<p><a href="packages.htm#GUID-33393586-D86A-4598-AC8F-208EE888D454" title="The SA_USER_ADMIN.ADD_COMPARTMENTS procedure adds (assigns) compartments to a user&#39;s authorizations, indicating if the compartments are authorized for write and read privileges.">SA_USER_ADMIN.ADD_COMPARTMENTS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9609 d74734e9604">
<p>Adds compartments to a user&#39;s authorizations, indicating whether the compartments are authorized for write as well as read</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9623" headers="d74734e9601">
<p><a href="packages.htm#GUID-6DCEEB8F-BA0D-4320-9821-85F7E5A8BA46" title="The SA_USER_ADMIN.ADD_GROUPS procedure adds (assigns) groups to a user, indicating if the groups are authorized for write and read privileges.">SA_USER_ADMIN.ADD_GROUPS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9623 d74734e9604">
<p>Adds groups to a user, indicating whether the groups are authorized for write as well as read</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9637" headers="d74734e9601">
<p><a href="packages.htm#GUID-68AE0D32-4A60-4435-AE67-C30CCBF210E6" title="The SA_USER_ADMIN.ALTER_COMPARTMENTS procedure changes the write access, default label indicator, and row label indicator for the specified compartments.">SA_USER_ADMIN.ALTER_COMPARTMENTS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9637 d74734e9604">
<p>Changes the write access, the default label indicator, and the row label indicator for each of the compartments in the list</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9651" headers="d74734e9601">
<p><a href="packages.htm#GUID-86484E99-ACA7-472B-A836-C688027E3257" title="The SA_USER_ADMIN.ALTER_GROUPS procedure changes the write access, default label indicator, and row label indicator for the specified groups.">SA_USER_ADMIN.ALTER_GROUPS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9651 d74734e9604">
<p>Changes the write access, the default label indicator, and the row label indicator for each of the groups in the list</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9665" headers="d74734e9601">
<p><a href="packages.htm#GUID-0514370F-84A8-4858-9A37-4C145F4FCA34" title="The SA_USER_ADMIN.DROP_ALL_COMPARTMENTS procedure drops all compartments from a user&#39;s authorizations.">SA_USER_ADMIN.DROP_ALL_COMPARTMENTS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9665 d74734e9604">
<p>Drops all compartments from a user&#39;s authorizations</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9679" headers="d74734e9601">
<p><a href="packages.htm#GUID-54DBC46E-8A11-4FB8-9E60-5199638AC251" title="The SA_USER_ADMIN.DROP_ALL_GROUPS procedure drops all groups from a user&#39;s authorizations.">SA_USER_ADMIN.DROP_ALL_GROUPS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9679 d74734e9604">
<p>Drops all groups from a user&#39;s authorizations</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9693" headers="d74734e9601">
<p><a href="packages.htm#GUID-73508482-D02E-410E-9EB8-C9C83227488C" title="The SA_USER_ADMIN.DROP_COMPARTMENTS procedure drops the specified compartments from a user&#39;s authorizations.">SA_USER_ADMIN.DROP_COMPARTMENTS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9693 d74734e9604">
<p>Drops the specified compartments from a user&#39;s authorizations</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9707" headers="d74734e9601">
<p><a href="packages.htm#GUID-07FAB983-D814-46E6-A47E-95BE4DE63447" title="The SA_USER_ADMIN.DROP_GROUPS procedure drops the specified groups from a user&#39;s authorizations.">SA_USER_ADMIN.DROP_GROUPS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9707 d74734e9604">
<p>Drops the specified groups from a user&#39;s authorizations</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9721" headers="d74734e9601">
<p><a href="packages.htm#GUID-BE934467-78C6-4B20-8549-9196B97220E9" title="The SA_USER_ADMIN.DROP_USER_ACCESS procedure removes all Oracle Label Security authorizations and privileges from the specified user.">SA_USER_ADMIN.DROP_USER_ACCESS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9721 d74734e9604">
<p>Removes all Oracle Label Security authorizations and privileges from the specified user</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9735" headers="d74734e9601">
<p><a href="packages.htm#GUID-625016B0-AB31-4553-996A-9EB09A5D803B" title="The SA_USER_ADMIN.SET_COMPARTMENTS procedure assigns compartments to a user and identifies default values for the user&#39;s session label and row label.">SA_USER_ADMIN.SET_COMPARTMENTS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9735 d74734e9604">
<p>Assigns compartments to a user and identifies default values for the user&#39;s session label and row label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9749" headers="d74734e9601">
<p><a href="packages.htm#GUID-CF8D31E3-D8DB-4FF6-86AD-A0C64E95D238" title="The SA_USER_ADMIN.SET_DEFAULT_LABEL procedure sets the user&#39;s initial session label to the one specified.">SA_USER_ADMIN.SET_DEFAULT_LABEL</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9749 d74734e9604">
<p>Sets the user&#39;s initial session label to the one specified</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9764" headers="d74734e9601">
<p><a href="packages.htm#GUID-391DCD88-1822-4D69-8A03-8D8CA995007B" title="The SA_USER_ADMIN.SET_GROUPS procedure assigns groups to a user and identifies default values for the user&#39;s session label and row label.">SA_USER_ADMIN.SET_GROUPS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9764 d74734e9604">
<p>Assigns groups to a user and identifies default values for the user&#39;s session label and row label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9778" headers="d74734e9601">
<p><a href="packages.htm#GUID-0A8BFF5A-B404-4A84-AB81-77C6B00B096F" title="The SA_USER_ADMIN.SET_LEVELS procedure assigns a user minimum and maximum levels and identifies default values for the user&#39;s session label and row label.">SA_USER_ADMIN.SET_LEVELS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9778 d74734e9604">
<p>Assigns minimum and maximum levels to a user and identifies default values for the user&#39;s session label and row label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9792" headers="d74734e9601">
<p><a href="packages.htm#GUID-ED613128-0715-43B0-9753-004403250E08" title="The SA_USER_ADMIN.SET_PROG_PRIVS procedure sets policy-specific privileges for program units.">SA_USER_ADMIN.SET_PROG_PRIVS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9792 d74734e9604">
<p>Sets policy-specific privileges for program units</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9806" headers="d74734e9601">
<p><a href="packages.htm#GUID-36FE5D8D-036F-481B-9729-2FD7116DC678" title="The SA_USER_ADMIN.SET_ROW_LABEL procedure sets a user&#39;s initial row label to the one specified.">SA_USER_ADMIN.SET_ROW_LABEL</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9806 d74734e9604">
<p>Sets the user&#39;s initial row label to the one specified</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9820" headers="d74734e9601">
<p><a href="packages.htm#GUID-69F5E278-E4CC-4BDF-B897-31D940F39C62" title="The SA_USER_ADMIN.SET_USER_LABELS procedure sets the user&#39;s levels, compartments, and groups using a set of labels, instead of the individual components.">SA_USER_ADMIN.SET_USER_LABELS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9820 d74734e9604">
<p>Sets the user&#39;s levels, compartments, and groups using a set of labels, instead of the individual components</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3820" id="d74734e9834" headers="d74734e9601">
<p><a href="packages.htm#GUID-73B905A4-6B4F-4BA0-A44E-9475F2AEC414" title="The SA_USER_ADMIN.SET_USER_PRIVS procedure sets policy-specific privileges for users.">SA_USER_ADMIN.SET_USER_PRIVS</a></p>
</td>
<td class="cellalignment3819" headers="d74734e9834 d74734e9604">
<p>Sets policy-specific privileges for users</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="OLSAG4029"></a><a id="OLSAG4030"></a><a id="OLSAG3272"></a><a id="OLSAG4031"></a><a id="OLSAG3271"></a>
<div class="props_rev_3"><a id="GUID-33393586-D86A-4598-AC8F-208EE888D454"></a>
<h3 id="OLSAG-GUID-33393586-D86A-4598-AC8F-208EE888D454" class="sect3">SA_USER_ADMIN.ADD_COMPARTMENTS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.ADD_COMPARTMENTS</code> procedure adds (assigns) compartments to a user&#39;s authorizations, indicating if the compartments are authorized for write and read privileges.</p>
<div class="section">
<p>This procedure is useful if you have already used the <code class="codeph">SA_USER_ADMIN.SET_COMPARTMENTS</code> procedure for the user but then decide that you want to grant this user authorization for additional compartments, or to update the current set of compartments. You also can use it in place of <code class="codeph">SA_USER_ADMIN.SET_COMPARTMENTS</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.ADD_COMPARTMENTS ( 
policy_name    IN VARCHAR2,
user_name      IN VARCHAR2,
comps          IN VARCHAR2,
access_mode    IN VARCHAR2 DEFAULT NULL,
in_def         IN VARCHAR2 DEFAULT NULL,
in_row         IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-33393586-D86A-4598-AC8F-208EE888D454__GUID-88D81F9B-E546-4DF0-930A-2DA1156221C6">
<p class="titleintable">Table E-61 SA_USER_ADMIN.ADD_COMPARTMENTS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.ADD_COMPARTMENTS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.ADD_COMPARTMENTS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e9937">Parameter</th>
<th class="cellalignment3823" id="d74734e9940">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9945" headers="d74734e9937">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9945 d74734e9940">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9959" headers="d74734e9937">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9959 d74734e9940">
<p>Specifies the user name. This user can be either a new user or a user who has already been authorized for this policy&#39;s compartments. To find an existing user, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9973" headers="d74734e9937">
<p><code class="codeph">comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9973 d74734e9940">
<p>A comma-delimited list of compartments to add, by short name only. To find existing compartments, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e9987" headers="d74734e9937">
<p><code class="codeph">access_mode</code></p>
</td>
<td class="cellalignment3825" headers="d74734e9987 d74734e9940">
<p>One of two public variables that contain string values that can specify the type of access authorized. The variable names, values, and meaning are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SA_UTL.READ_ONLY</code> indicates no write access</p>
</li>
<li>
<p><code class="codeph">SA_UTL.READ_WRITE</code> indicates that write is authorized</p>
</li>
<li>
<p>If <code class="codeph">access_mode</code> is <code class="codeph">NULL</code>, then it is set to <code class="codeph">SA_UTL.READ_ONLY</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10018" headers="d74734e9937">
<p><code class="codeph">in_def</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10018 d74734e9940">
<p>Specifies whether these compartments should be in the default compartments (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_def</code> is <code class="codeph">NULL</code>, then it is set to <code class="codeph">Y</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10043" headers="d74734e9937">
<p><code class="codeph">in_row</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10043 d74734e9940">
<p>Specifies whether these compartments should be in the row label (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_row</code> is <code class="codeph">NULL</code>, then it is set to <code class="codeph">N</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds compartments to the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.ADD_COMPARTMENTS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;,
  comps          =&gt; &#39;FIN&#39;,
  access_mode    =&gt; SA_UTL.READ_ONLY,
  in_def         =&gt; &#39;y&#39;,
  in_row         =&gt; &#39;y&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4032"></a><a id="OLSAG4033"></a><a id="OLSAG3278"></a><a id="OLSAG4034"></a><a id="OLSAG3277"></a>
<div class="props_rev_3"><a id="GUID-6DCEEB8F-BA0D-4320-9821-85F7E5A8BA46"></a>
<h3 id="OLSAG-GUID-6DCEEB8F-BA0D-4320-9821-85F7E5A8BA46" class="sect3">SA_USER_ADMIN.ADD_GROUPS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.ADD_GROUPS</code> procedure adds (assigns) groups to a user, indicating if the groups are authorized for write and read privileges.</p>
<div class="section">
<p>This procedure is useful if you have already used the <code class="codeph">SA_USER_ADMIN.SET_GROUPS</code> procedure for the user but then decide that you want to grant this user authorization for additional groups or to update the current set of groups. You also can use it in place of <code class="codeph">SA_USER_ADMIN.SET_GROUPS</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.ADD_GROUPS ( 
  policy_name       IN VARCHAR2,
  user_name         IN VARCHAR2,
  groups            IN VARCHAR2,
  access_mode       IN VARCHAR2 DEFAULT NULL,
  in_def            IN VARCHAR2 DEFAULT NULL,
  in_row            IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6DCEEB8F-BA0D-4320-9821-85F7E5A8BA46__GUID-C0414EC3-A84A-4877-A66B-B50916643EB8">
<p class="titleintable">Table E-62 SA_USER_ADMIN.ADD_GROUPS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.ADD_GROUPS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.ADD_GROUPS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3861" id="d74734e10169">Parameter</th>
<th class="cellalignment3867" id="d74734e10172">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e10177" headers="d74734e10169">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3868" headers="d74734e10177 d74734e10172">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e10191" headers="d74734e10169">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3868" headers="d74734e10191 d74734e10172">
<p>Specifies the user. This user can be either a new user or a user who has already been authorized for this policy&#39;s groups. To find an existing user, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e10205" headers="d74734e10169">
<p><code class="codeph">groups</code></p>
</td>
<td class="cellalignment3868" headers="d74734e10205 d74734e10172">
<p>A comma-delimited list of groups to add, by short name only. To find a list of existing groups, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e10219" headers="d74734e10169">
<p><code class="codeph">access_mode</code></p>
</td>
<td class="cellalignment3868" headers="d74734e10219 d74734e10172">
<p>One of two public variables that contain string values that can specify the type of access authorized. The variable names, values, and meaning are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SA_UTL.READ_ONLY</code> indicates no write access</p>
</li>
<li>
<p><code class="codeph">SA_UTL.READ_WRITE</code> indicates that write is authorized</p>
</li>
<li>
<p>If <code class="codeph">access_mode</code> is <code class="codeph">NULL</code>, then <code class="codeph">access_mode</code> is set to <code class="codeph">SA_UTL.READ_ONLY</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e10253" headers="d74734e10169">
<p><code class="codeph">in_def</code></p>
</td>
<td class="cellalignment3868" headers="d74734e10253 d74734e10172">
<p>Specifies whether these groups should be in the default groups (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_def</code> is <code class="codeph">NULL</code>, then it is set to <code class="codeph">Y</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3862" id="d74734e10278" headers="d74734e10169">
<p><code class="codeph">in_row</code></p>
</td>
<td class="cellalignment3868" headers="d74734e10278 d74734e10172">
<p>Specifies whether these groups should be in the row label (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_row</code> is <code class="codeph">NULL</code>, then it is set to <code class="codeph">N</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds several groups to the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.ADD_GROUPS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;,
  groups         =&gt; &#39;ER_FIN, SR_FIN, NR_FIN, WR_FIN&#39;,
  access_mode    =&gt; SA_UTL.READ_WRITE,
  in_def         =&gt; &#39;y&#39;,
  in_row         =&gt; &#39;y&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4035"></a><a id="OLSAG4036"></a><a id="OLSAG3270"></a><a id="OLSAG4037"></a><a id="OLSAG3269"></a>
<div class="props_rev_3"><a id="GUID-68AE0D32-4A60-4435-AE67-C30CCBF210E6"></a>
<h3 id="OLSAG-GUID-68AE0D32-4A60-4435-AE67-C30CCBF210E6" class="sect3">SA_USER_ADMIN.ALTER_COMPARTMENTS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.ALTER_COMPARTMENTS</code> procedure changes the write access, default label indicator, and row label indicator for the specified compartments.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.ALTER_COMPARTMENTS (
  policy_name  IN VARCHAR2,
  user_name    IN VARCHAR2,
  comps        IN VARCHAR2,
  access_mode  IN VARCHAR2 DEFAULT NULL,
  in_def       IN VARCHAR2 DEFAULT NULL,
  in_row       IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-68AE0D32-4A60-4435-AE67-C30CCBF210E6__GUID-CE640027-20B8-4A6E-BAD1-2CE9BE315634">
<p class="titleintable">Table E-63 SA_USER_ADMIN.ALTER_COMPARTMENTS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.ALTER_COMPARTMENTS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.ALTER_COMPARTMENTS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e10413">Parameter</th>
<th class="cellalignment3823" id="d74734e10416">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10421" headers="d74734e10413">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10421 d74734e10416">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10435" headers="d74734e10413">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10435 d74734e10416">
<p>Specifies the user who has been authorized for the compartment. To find authorized users, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10449" headers="d74734e10413">
<p><code class="codeph">comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10449 d74734e10416">
<p>A comma-delimited list of compartments to modify, using the short name only. To find existing compartments, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10463" headers="d74734e10413">
<p><code class="codeph">access_mode</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10463 d74734e10416">
<p>One of two public variables that contain string values that can specify the type of access authorized. The variable names, values, and meaning are as follows:</p>
<p><code class="codeph">SA_UTL.READ_ONLY</code> indicates no write access</p>
<p><code class="codeph">SA_UTL.READ_WRITE</code> indicates that write is authorized</p>
<p>If <code class="codeph">access_mode</code> is <code class="codeph">NULL</code>, then <code class="codeph">access_mode</code> for the compartment is unaltered.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10490" headers="d74734e10413">
<p><code class="codeph">in_def</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10490 d74734e10416">
<p>Specifies whether these compartments should be in the default compartments (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_def</code> is <code class="codeph">NULL</code>, then <code class="codeph">in_def</code> for the compartment is unaltered.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10515" headers="d74734e10413">
<p><code class="codeph">in_row</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10515 d74734e10416">
<p>Specifies whether these compartments should be in the row label (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_row</code> is <code class="codeph">NULL</code>, then <code class="codeph">in_row</code> for the compartment is unaltered.</p>
<p>If <code class="codeph">in_def</code> is <code class="codeph">N</code>, then <code class="codeph">in_row</code> cannot be <code class="codeph">Y</code>. This is because the row label compartments must be a subset of the session label compartments.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example modifies compartments for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.ALTER_COMPARTMENTS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;,
  comps          =&gt; &#39;FIN&#39;,
  access_mode    =&gt; SA_UTL.READ_ONLY,
  in_def         =&gt; &#39;y&#39;,
  in_row         =&gt; &#39;y&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4038"></a><a id="OLSAG4039"></a><a id="OLSAG3280"></a><a id="OLSAG4040"></a><a id="OLSAG3279"></a>
<div class="props_rev_3"><a id="GUID-86484E99-ACA7-472B-A836-C688027E3257"></a>
<h3 id="OLSAG-GUID-86484E99-ACA7-472B-A836-C688027E3257" class="sect3">SA_USER_ADMIN.ALTER_GROUPS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.ALTER_GROUPS</code> procedure changes the write access, default label indicator, and row label indicator for the specified groups.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.ALTER_GROUPS ( 
  policy_name      IN VARCHAR2,
  user_name        IN VARCHAR2,
  groups           IN VARCHAR2,
  access_mode      IN VARCHAR2 DEFAULT NULL,
  in_def           IN VARCHAR2 DEFAULT NULL,
  in_row           IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-86484E99-ACA7-472B-A836-C688027E3257__GUID-98FF9538-D14F-4B1F-A101-30998DED7029">
<p class="titleintable">Table E-64 SA_USER_ADMIN.ALTER_GROUPS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.ALTER_GROUPS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.ALTER_GROUPS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e10645">Parameter</th>
<th class="cellalignment3823" id="d74734e10648">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10653" headers="d74734e10645">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10653 d74734e10648">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10667" headers="d74734e10645">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10667 d74734e10648">
<p>Specifies the user who has been authorized for the group. To find existing users, query the <code class="codeph">USER_NAME</code> and <code class="codeph">GRP</code> columns of the <code class="codeph">DBA_SA_USER_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10684" headers="d74734e10645">
<p><code class="codeph">groups</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10684 d74734e10648">
<p>A comma-delimited list of groups to alter, by short name only. To find existing groups, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10698" headers="d74734e10645">
<p><code class="codeph">access_mode</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10698 d74734e10648">
<p>Two public variables contain string values that can specify the type of access authorized. The variable names, values, and meaning are as follows:</p>
<p><code class="codeph">SA_UTL.READ_ONLY</code> indicates no write access</p>
<p><code class="codeph">SA_UTL.READ_WRITE</code> indicates that write is authorized</p>
<p>If <code class="codeph">access_mode</code> is <code class="codeph">NULL</code>, then <code class="codeph">access_mode</code> for the group is unaltered.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10725" headers="d74734e10645">
<p><code class="codeph">in_def</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10725 d74734e10648">
<p>Specifies whether these groups should be in the default groups (<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_def</code> is <code class="codeph">NULL</code>, then <code class="codeph">in_def</code> for the group is unaltered.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10750" headers="d74734e10645">
<p><code class="codeph">in_row</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10750 d74734e10648">
<p>Specifies whether these groups should be in the row label ((<code class="codeph">Y</code>/<code class="codeph">N</code>)</p>
<p>If <code class="codeph">in_row</code> is <code class="codeph">NULL</code>, then <code class="codeph">in_row</code> for the group is unaltered.</p>
<p>If <code class="codeph">in_def</code> is <code class="codeph">N</code>, then <code class="codeph">in_row</code> cannot be <code class="codeph">Y</code>. This is because the row label groups must be a subset of the session label groups.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the access mode for the existing groups to be read only.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.ALTER_GROUPS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;,
  groups         =&gt; &#39;ER&#39;,
  access_mode    =&gt; SA_UTL.READ_ONLY);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4041"></a><a id="OLSAG4042"></a><a id="OLSAG3276"></a><a id="OLSAG4043"></a><a id="OLSAG3275"></a>
<div class="props_rev_3"><a id="GUID-0514370F-84A8-4858-9A37-4C145F4FCA34"></a>
<h3 id="OLSAG-GUID-0514370F-84A8-4858-9A37-4C145F4FCA34" class="sect3">SA_USER_ADMIN.DROP_ALL_COMPARTMENTS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.DROP_ALL_COMPARTMENTS</code> procedure drops all compartments from a user&#39;s authorizations.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.DROP_ALL_COMPARTMENTS (
 policy_name  IN VARCHAR2,
 user_name    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0514370F-84A8-4858-9A37-4C145F4FCA34__GUID-012DEF5A-4779-4F16-BA76-1C287F217D8D">
<p class="titleintable">Table E-65 SA_USER_ADMIN.DROP_ALL_COMPARTMENTS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.DROP_ALL_COMPARTMENTS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.DROP_ALL_COMPARTMENTS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e10878">Parameter</th>
<th class="cellalignment3823" id="d74734e10881">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10886" headers="d74734e10878">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10886 d74734e10881">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e10900" headers="d74734e10878">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e10900 d74734e10881">
<p>Specifies the user who has been authorized for the compartment. To find existing users, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops all compartments for the <code class="codeph">hr_ols_pol</code> policy for user <code class="codeph">jjones</code>.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.DROP_ALL_COMPARTMENTS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4044"></a><a id="OLSAG4045"></a><a id="OLSAG3284"></a><a id="OLSAG4046"></a><a id="OLSAG3283"></a>
<div class="props_rev_3"><a id="GUID-54DBC46E-8A11-4FB8-9E60-5199638AC251"></a>
<h3 id="OLSAG-GUID-54DBC46E-8A11-4FB8-9E60-5199638AC251" class="sect3">SA_USER_ADMIN.DROP_ALL_GROUPS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.DROP_ALL_GROUPS</code> procedure drops all groups from a user&#39;s authorizations.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.DROP_ALL_GROUPS (
  policy_name IN VARCHAR2,
  user_name   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-54DBC46E-8A11-4FB8-9E60-5199638AC251__GUID-01454BAF-2E3C-4313-A1E1-BBEE1BD34D01">
<p class="titleintable">Table E-66 SA_USER_ADMIN.DROP_ALL_GROUPS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.DROP_ALL_GROUPS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.DROP_ALL_GROUPS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e11008">Parameter</th>
<th class="cellalignment3823" id="d74734e11011">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11016" headers="d74734e11008">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11016 d74734e11011">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11030" headers="d74734e11008">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11030 d74734e11011">
<p>Specifies the user who has been authorized for the group. To find existing users, query the <code class="codeph">USER_NAME</code> and <code class="codeph">GRP</code> columns of the <code class="codeph">DBA_SA_USER_GROUPS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops all groups from the <code class="codeph">hr_ols_pol</code> policy for user <code class="codeph">jjones</code>.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.DROP_ALL_GROUPS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4047"></a><a id="OLSAG4048"></a><a id="OLSAG3274"></a><a id="OLSAG4049"></a><a id="OLSAG3273"></a>
<div class="props_rev_3"><a id="GUID-73508482-D02E-410E-9EB8-C9C83227488C"></a>
<h3 id="OLSAG-GUID-73508482-D02E-410E-9EB8-C9C83227488C" class="sect3">SA_USER_ADMIN.DROP_COMPARTMENTS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.DROP_COMPARTMENTS</code> procedure drops the specified compartments from a user&#39;s authorizations.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.DROP_COMPARTMENTS ( 
  policy_name     IN VARCHAR2,
  user_name       IN VARCHAR2,
  comps           IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-73508482-D02E-410E-9EB8-C9C83227488C__GUID-FFBDF16F-7735-492A-ACAB-7B7E75877EBA">
<p class="titleintable">Table E-67 SA_USER_ADMIN.DROP_COMPARTMENTS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.DROP_COMPARTMENTS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.DROP_COMPARTMENTS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e11141">Parameter</th>
<th class="cellalignment3823" id="d74734e11144">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11149" headers="d74734e11141">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11149 d74734e11144">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11163" headers="d74734e11141">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11163 d74734e11144">
<p>Specifies the user who has been authorized for the compartment. To find existing users, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11177" headers="d74734e11141">
<p><code class="codeph">comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11177 d74734e11144">
<p>A comma-delimited list of compartments to drop. To find all comps for this policy, query the <code class="codeph">POLICY_NAME</code> and <code class="codeph">COMP</code> columns of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the <code class="codeph">FINANCIAL</code> compartment from the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.DROP_COMPARTMENTS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;,
  comps          =&gt; &#39;HR&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4050"></a><a id="OLSAG4051"></a><a id="OLSAG3282"></a><a id="OLSAG4052"></a><a id="OLSAG3281"></a>
<div class="props_rev_3"><a id="GUID-07FAB983-D814-46E6-A47E-95BE4DE63447"></a>
<h3 id="OLSAG-GUID-07FAB983-D814-46E6-A47E-95BE4DE63447" class="sect3">SA_USER_ADMIN.DROP_GROUPS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.DROP_GROUPS</code> procedure drops the specified groups from a user&#39;s authorizations.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.DROP_GROUPS ( 
  policy_name IN VARCHAR2,
  user_name   IN VARCHAR2,
  groups      IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-07FAB983-D814-46E6-A47E-95BE4DE63447__GUID-C073B25B-E111-4E64-9373-EEAECAE3DA05">
<p class="titleintable">Table E-68 SA_USER_ADMIN.DROP_GROUPS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.DROP_GROUPS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.DROP_GROUPS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e11289">Parameter</th>
<th class="cellalignment3823" id="d74734e11292">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11297" headers="d74734e11289">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11297 d74734e11292">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11311" headers="d74734e11289">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11311 d74734e11292">
<p>Specifies the user who has been authorized for the group. To find existing users, query the <code class="codeph">USER_NAME</code> and <code class="codeph">GRP</code> columns of the <code class="codeph">DBA_SA_USER_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11328" headers="d74734e11289">
<p><code class="codeph">groups</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11328 d74734e11292">
<p>A comma-delimited list of groups to drop, by short name only. To find a list of groups, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the <code class="codeph">NR_FIN</code> group from the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.DROP_GROUPS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;,
  groups         =&gt; &#39;ER&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4053"></a><a id="OLSAG4054"></a><a id="OLSAG3292"></a><a id="OLSAG4055"></a><a id="OLSAG3291"></a>
<div class="props_rev_3"><a id="GUID-BE934467-78C6-4B20-8549-9196B97220E9"></a>
<h3 id="OLSAG-GUID-BE934467-78C6-4B20-8549-9196B97220E9" class="sect3">SA_USER_ADMIN.DROP_USER_ACCESS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.DROP_USER_ACCESS</code> procedure removes all Oracle Label Security authorizations and privileges from the specified user.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name      IN VARCHAR2,
  user_name        IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BE934467-78C6-4B20-8549-9196B97220E9__GUID-6D9D2451-3DE6-4E2F-BACE-E9139474F2A6">
<p class="titleintable">Table E-69 SA_USER_ADMIN.DROP_USER_ACCESS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.DROP_USER_ACCESS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.DROP_USER_ACCESS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e11432">Parameter</th>
<th class="cellalignment3823" id="d74734e11435">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11440" headers="d74734e11432">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11440 d74734e11435">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11454" headers="d74734e11432">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11454 d74734e11435">
<p>Specifies the user name. To find all users associated with this policy, query the <code class="codeph">USER_NAME</code> and <code class="codeph">POLICY_NAME</code> columns of the <code class="codeph">DBA_SA_USER_PRIVS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes user <code class="codeph">jjones</code>&#39;s authorization for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.DROP_USER_ACCESS (
  policy_name       =&gt; &#39;hr_ols_pol&#39;,
  user_name         =&gt; &#39;jjones&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4056"></a><a id="OLSAG4057"></a><a id="OLSAG3266"></a><a id="OLSAG4058"></a><a id="OLSAG3265"></a>
<div class="props_rev_3"><a id="GUID-625016B0-AB31-4553-996A-9EB09A5D803B"></a>
<h3 id="OLSAG-GUID-625016B0-AB31-4553-996A-9EB09A5D803B" class="sect3">SA_USER_ADMIN.SET_COMPARTMENTS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_COMPARTMENTS</code> procedure assigns compartments to a user and identifies default values for the user&#39;s session label and row label.</p>
<div class="section">
<p>After you have set the compartment, you can configure additional compartments by using the <code class="codeph">SA_USER_ADMIN.ADD_COMPARTMENTS</code> procedure. (See <a href="packages.htm#GUID-33393586-D86A-4598-AC8F-208EE888D454" title="The SA_USER_ADMIN.ADD_COMPARTMENTS procedure adds (assigns) compartments to a user&#39;s authorizations, indicating if the compartments are authorized for write and read privileges.">SA_USER_ADMIN.ADD_COMPARTMENTS</a>.)</p>
<p>All users must have their levels set before their authorized compartments can be established.</p>
<p>The write compartments, if specified, must be a subset of the read compartments. (The write compartments are those to which the user should have write access.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_COMPARTMENTS (
  policy_name   IN VARCHAR2,
  user_name     IN VARCHAR2,
  read_comps    IN VARCHAR2,
  write_comps   IN VARCHAR2 DEFAULT NULL,
  def_comps     IN VARCHAR2 DEFAULT NULL,
  row_comps     IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-625016B0-AB31-4553-996A-9EB09A5D803B__GUID-3EDDCA23-E47A-4F56-A23D-BA5FAE21F97F">
<p class="titleintable">Table E-70 SA_USER_ADMIN.SET_COMPARTMENTS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_COMPARTMENTS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_COMPARTMENTS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e11592">Parameter</th>
<th class="cellalignment3823" id="d74734e11595">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11600" headers="d74734e11592">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11600 d74734e11595">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11614" headers="d74734e11592">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11614 d74734e11595">
<p>Specifies the user name to assign compartments</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11622" headers="d74734e11592">
<p><code class="codeph">read_comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11622 d74734e11595">
<p>A comma-delimited list of compartments authorized for read access, by short name only</p>
<p>To find all compartments, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_COMPARTMENTS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11638" headers="d74734e11592">
<p><code class="codeph">write_comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11638 d74734e11595">
<p>A comma-delimited list of compartments authorized for write access (subset of <code class="codeph">read_comps</code>), by short name only. If <code class="codeph">write_comps</code> are <code class="codeph">NULL</code>, then they are set to the <code class="codeph">read_comps</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11658" headers="d74734e11592">
<p><code class="codeph">def_comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11658 d74734e11595">
<p>Specifies the default compartments, by short name only. This must be a subset of <code class="codeph">read_comps</code>. If the <code class="codeph">def_comps</code> are <code class="codeph">NULL</code>, then they are set to the <code class="codeph">read_comps</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11678" headers="d74734e11592">
<p><code class="codeph">row_comps</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11678 d74734e11595">
<p>Specifies the row compartments, by short name only. This must be a subset of <code class="codeph">write_comps</code> and <code class="codeph">def_comps</code>. If the <code class="codeph">row_comps</code> are <code class="codeph">NULL</code>, then they are set to the components in <code class="codeph">def_comps</code> that are authorized for write access.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets compartments for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
 SA_USER_ADMIN.SET_COMPARTMENTS (
  policy_name   =&gt; &#39;hr_ols_pol&#39;,
  user_name     =&gt; &#39;jjones&#39;, 
  read_comps    =&gt; &#39;FIN&#39;,
  write_comps   =&gt; &#39;FIN&#39;,
  def_comps     =&gt; &#39;FIN&#39;,
  row_comps     =&gt; &#39;FIN&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4059"></a><a id="OLSAG4060"></a><a id="OLSAG3288"></a><a id="OLSAG4061"></a><a id="OLSAG3287"></a>
<div class="props_rev_3"><a id="GUID-CF8D31E3-D8DB-4FF6-86AD-A0C64E95D238"></a>
<h3 id="OLSAG-GUID-CF8D31E3-D8DB-4FF6-86AD-A0C64E95D238" class="sect3">SA_USER_ADMIN.SET_DEFAULT_LABEL</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_DEFAULT_LABEL</code> procedure sets the user&#39;s initial session label to the one specified.</p>
<div class="section">
<p>As long as the row label will still be dominated by the new write label, you can set the session label to:</p>
<ul style="list-style-type: disc;">
<li>
<p>Any level equal to or less than his maximum, and equal to or greater than his minimum label</p>
</li>
<li>
<p>Include any compartments in the authorized compartment list</p>
</li>
<li>
<p>Include any groups in the authorized group list. (Subgroups of authorized groups are implicitly included in the authorized list.)</p>
</li>
</ul>
<p>The row label must be dominated by the new write label that will result from resetting the session label. If this condition is not true, then the <code class="codeph">SET_DEFAULT_LABEL</code> procedure will fail.</p>
<p>For example, suppose the current row label is <code class="codeph">S:A,B</code>, and that you have write access to both compartments. If you attempt to set the new default label to <code class="codeph">C:A,B</code>, then the <code class="codeph">SET_LABEL</code> procedure will fail. This is because the new write label would be <code class="codeph">C:A,B</code>, which does not dominate the current row label.</p>
<p>To successfully reset the session label in this case, you must first lower the row label to a value that will be dominated by the resulting session label.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_DEFAULT_LABELS (
  policy_name  IN VARCHAR2,
  user_name    IN VARCHAR2,
  def_label    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CF8D31E3-D8DB-4FF6-86AD-A0C64E95D238__GUID-D8E01023-A031-4386-9261-62EE36A7FAFF">
<p class="titleintable">Table E-71 SA_USER_ADMIN.SET_DEFAULT_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_DEFAULT_LABEL Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_DEFAULT_LABELS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e11828">Parameter</th>
<th class="cellalignment3823" id="d74734e11831">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11836" headers="d74734e11828">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11836 d74734e11831">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11850" headers="d74734e11828">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11850 d74734e11831">
<p>Specifies the user who has been authorized with label components. To find this user, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">ALL_SA_USER_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e11864" headers="d74734e11828">
<p><code class="codeph">def_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e11864 d74734e11831">
<p>Specifies the label string to be used to initialize the user&#39;s default labels. This label may contain any compartments and groups that are authorized for read access. To find existing labels, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the default label for <code class="codeph">hr_ols_pol</code> for user <code class="codeph">jjones</code>.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.SET_DEFAULT_LABEL (
  policy_name       =&gt; &#39;hr_ols_pol&#39;,
  user_name         =&gt; &#39;jjones&#39;,
  def_label         =&gt; &#39;HS&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-CF8D31E3-D8DB-4FF6-86AD-A0C64E95D238__GUID-35275F70-1321-4AEB-9DCB-48AEA5F12AF4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="packages.htm#GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7" title="The SA_SESSION PL/SQL package manages session behavior for user authorizations.">SA_SESSION Session Management PL/SQL Package</a></p>
</li>
<li>
<p><a href="releas.htm#GUID-2105EB6D-A67C-41CE-8189-71E08040FBD1" title="Inverse groups affect session labels and row labels.">Session Labels and Inverse Groups</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4062"></a><a id="OLSAG4063"></a><a id="OLSAG3268"></a><a id="OLSAG4064"></a><a id="OLSAG3267"></a>
<div class="props_rev_3"><a id="GUID-391DCD88-1822-4D69-8A03-8D8CA995007B"></a>
<h3 id="OLSAG-GUID-391DCD88-1822-4D69-8A03-8D8CA995007B" class="sect3">SA_USER_ADMIN.SET_GROUPS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_GROUPS</code> procedure assigns groups to a user and identifies default values for the user&#39;s session label and row label.</p>
<div class="section">
<p>All users must have their levels set before their authorized groups can be established. You can find information about a user&#39;s level authorization by querying the <code class="codeph">DBA_SA_USER_LEVELS</code> data dictionary view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_GROUPS (policy_name IN VARCHAR2,
  user_name        IN VARCHAR2,
  read_groups      IN VARCHAR2,
  write_groups     IN VARCHAR2 DEFAULT NULL,
  def_group        IN VARCHAR2 DEFAULT NULL,
  row_groups       IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-391DCD88-1822-4D69-8A03-8D8CA995007B__GUID-DFD29DEC-9706-4E22-BA69-E84AD2D096F1">
<p class="titleintable">Table E-72 SA_USER_ADMIN.SET_GROUPS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_GROUPS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_GROUPS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e12001">Parameter</th>
<th class="cellalignment3823" id="d74734e12004">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12009" headers="d74734e12001">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12009 d74734e12004">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12023" headers="d74734e12001">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12023 d74734e12004">
<p>Specifies the user name. This user is a first-time user for group authorization, but the user must already be authorized for levels. To find users who have been authorized for levels, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_LEVELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12037" headers="d74734e12001">
<p><code class="codeph">read_groups</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12037 d74734e12004">
<p>A comma-delimited list of groups authorized for read, by short name only.</p>
<p>To find existing groups, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_GROUPS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12053" headers="d74734e12001">
<p><code class="codeph">write_groups</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12053 d74734e12004">
<p>A comma-delimited list of groups authorized for write, by short name only. This must be a subset of <code class="codeph">read_groups</code>. If set to <code class="codeph">NULL</code>, then this setting defaults to <code class="codeph">read_groups</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12070" headers="d74734e12001">
<p><code class="codeph">def_groups</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12070 d74734e12004">
<p>Specifies the default groups, by short name only. This must be a subset of <code class="codeph">read_groups</code>. If set to <code class="codeph">NULL</code>, then this setting defaults to <code class="codeph">read_groups</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12087" headers="d74734e12001">
<p><code class="codeph">row_groups</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12087 d74734e12004">
<p>Specifies the row groups, by short name only. This must be a subset of <code class="codeph">write_groups</code> and <code class="codeph">def_groups</code>. If set to <code class="codeph">NULL</code>, then this setting defaults to the groups in <code class="codeph">def_groups</code> that are authorized for write access.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example defines groups for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.SET_GROUPS (
  policy_name    =&gt; &#39;hr_ols_pol&#39;,
  user_name      =&gt; &#39;jjones&#39;, 
  read_groups    =&gt; &#39;ER_FIN&#39;,
  write_groups   =&gt; &#39;ER_FIN&#39;,
  def_groups     =&gt; &#39;ER_FIN&#39;,
  row_groups     =&gt; &#39;ER_FIN&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4065"></a><a id="OLSAG4066"></a><a id="OLSAG3264"></a><a id="OLSAG4067"></a><a id="OLSAG3263"></a>
<div class="props_rev_3"><a id="GUID-0A8BFF5A-B404-4A84-AB81-77C6B00B096F"></a>
<h3 id="OLSAG-GUID-0A8BFF5A-B404-4A84-AB81-77C6B00B096F" class="sect3">SA_USER_ADMIN.SET_LEVELS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_LEVELS</code> procedure assigns a user minimum and maximum levels and identifies default values for the user&#39;s session label and row label.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_LEVELS (policy_name IN VARCHAR2,
   user_name        IN VARCHAR2,
   max_level        IN VARCHAR2,
   min_level        IN VARCHAR2 DEFAULT NULL,
   def_level        IN VARCHAR2 DEFAULT NULL,
   row_level        IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0A8BFF5A-B404-4A84-AB81-77C6B00B096F__GUID-CC735191-58C6-4315-8069-530D9CF7699B">
<p class="titleintable">Table E-73 SA_USER_ADMIN.SET_LEVELS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_LEVELS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_LEVELS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e12202">Parameter</th>
<th class="cellalignment3823" id="d74734e12205">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12210" headers="d74734e12202">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12210 d74734e12205">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12224" headers="d74734e12202">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12224 d74734e12205">
<p>Specifies the user name. This user does not need to have any Oracle Label Security authorizations before you run this procedure.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12232" headers="d74734e12202">
<p><code class="codeph">max_level</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12232 d74734e12205">
<p>The highest level for read and write access, by short name only.</p>
<p>To find existing levels, query the <code class="codeph">SHORT_NAME</code> column of the <code class="codeph">ALL_SA_LEVELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12248" headers="d74734e12202">
<p><code class="codeph">min_level</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12248 d74734e12205">
<p>The lowest level for write access, by short name only. If set to <code class="codeph">NULL</code>, then the default is the lowest level for the policy.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12259" headers="d74734e12202">
<p><code class="codeph">def_level</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12259 d74734e12205">
<p>Specifies the default level (equal to or greater than the minimum level, and equal to or less than the maximum level). Use the short name only. If set to <code class="codeph">NULL</code>, then the default is the <code class="codeph">max_level</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12273" headers="d74734e12202">
<p><code class="codeph">row_level</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12273 d74734e12205">
<p>Specifies the row level (equal to or greater than the minimum level, and equal to or less than the default level). Use the short name only. If set to <code class="codeph">NULL</code>, then it is set to the <code class="codeph">def_level</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets levels for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_USER_ADMIN.SET_LEVELS (
   policy_name     =&gt; &#39;hr_ols_pol&#39;,
   user_name       =&gt; &#39;jjones&#39;,
   max_level       =&gt; &#39;PUB&#39;,
   min_level       =&gt; &#39;HS&#39;);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4068"></a><a id="OLSAG4069"></a><a id="OLSAG4070"></a><a id="OLSAG4071"></a><a id="OLSAG070"></a>
<div class="props_rev_3"><a id="GUID-ED613128-0715-43B0-9753-004403250E08"></a>
<h3 id="OLSAG-GUID-ED613128-0715-43B0-9753-004403250E08" class="sect3">SA_USER_ADMIN.SET_PROG_PRIVS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_PROG_PRIVS</code> procedure sets policy-specific privileges for program units.</p>
<div class="section">
<p>If the <code class="codeph">privileges</code> parameter is <code class="codeph">NULL</code>, then the program unit&#39;s privileges for the policy are removed.</p>
<p>To grant privileges to a stored program unit, you must have the <span class="italic"><code class="codeph">policy</code></span><code class="codeph">_DBA</code> role, and the <code class="codeph">EXECUTE</code> permission on the <code class="codeph">SA_USER_ADMIN.SA_USER_ADMIN</code> package. You can use either the <code class="codeph">SA_USER_ADMIN</code> package or Oracle Enterprise Manager to manage Oracle Label Security privileges.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_PROG_PRIVS (
  policy_name           IN VARCHAR2,
  schema_name           IN VARCHAR2,
  program_unit_name     IN VARCHAR2,
  privileges            IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-ED613128-0715-43B0-9753-004403250E08__GUID-54DCC345-F9C9-41CD-A860-104D4C580B51">
<p class="titleintable">Table E-74 SA_SESSION.SET_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_SESSION.SET_LABEL Parameters" summary="SA_SESSIONS.SET_LABEL parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e12405">Parameter</th>
<th class="cellalignment3823" id="d74734e12408">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12413" headers="d74734e12405">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12413 d74734e12408">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12427" headers="d74734e12405">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12427 d74734e12408">
<p>The name of the schema that contains the program unit</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12435" headers="d74734e12405">
<p><code class="codeph">program_unit_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12435 d74734e12408">
<p>Specifies the program unit to be granted privileges</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12443" headers="d74734e12405">
<p><code class="codeph">privileges</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12443 d74734e12408">
<p>A comma-delimited character string of policy-specific privileges. If you set privileges to <code class="codeph">NULL</code>, then the program unit&#39;s privileges for the policy are removed.</p>
<p>See <a href="getstrtd.htm#GUID-180AE22F-C31A-48A9-AE4A-2CAB334746E8" title="After you have authorized users for policy levels, compartments, and groups, you are ready to grant the user privileges.">About Granting Privileges to Users and Trusted Program Units for the Policy</a> for list of available privileges to grant.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example gives the <code class="codeph">READ</code> privilege to the <code class="codeph">SUM_PURCHASES</code> function (described in <a href="storproc.htm#GUID-C546DFB9-89FE-4161-BBFA-4629785E5AC8" title="A trusted stored program unit with the READ privilege can read all unprotected data and all data protected by this policy.">Example of a Trusted Stored Program Unit</a>):</p>
<pre dir="ltr">BEGIN
 SA_USER_ADMIN.SET_PROG_PRIVS (
  policy_name         =&gt; &#39;hr_ols_pol&#39;,
  schema_name         =&gt; &#39;HR&#39;,
  program_unit_name   =&gt; &#39;check_emp_hours&#39;,
  privileges          =&gt; &#39;READ&#39;);
END;
/
</pre>
<p>When the <code class="codeph">check_emp_hours</code> procedure is then called, it runs with the <code class="codeph">READ</code> privilege as well as the current user&#39;s Oracle Label Security privileges. Using this technique, the user can be allowed to find the value of the total employee hours that were logged, without learning what hours any individual employee logged.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4072"></a><a id="OLSAG4073"></a><a id="OLSAG3290"></a><a id="OLSAG4074"></a><a id="OLSAG3289"></a>
<div class="props_rev_3"><a id="GUID-36FE5D8D-036F-481B-9729-2FD7116DC678"></a>
<h3 id="OLSAG-GUID-36FE5D8D-036F-481B-9729-2FD7116DC678" class="sect3">SA_USER_ADMIN.SET_ROW_LABEL</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_ROW_LABEL</code> procedure sets a user&#39;s initial row label to the one specified.</p>
<div class="section">
<p>The user can set the row label independently, but only to:</p>
<ul style="list-style-type: disc;">
<li>
<p>A level that is less than or equal to the level of the session label, and greater than or equal to the user&#39;s minimum level</p>
</li>
<li>
<p>Include a subset of the compartments and groups from the session label, for which the user is authorized to have write access</p>
</li>
</ul>
<p>If you try to set the row label to an invalid value, then the operation is disallowed, and the row label value is unchanged.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_ROW_LABEL (
  policy_name   IN VARCHAR2,
  user_name     IN VARCHAR2,
  row_label     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-36FE5D8D-036F-481B-9729-2FD7116DC678__GUID-C7A240F1-5339-404F-B8FD-9636BFE197F3">
<p class="titleintable">Table E-75 SA_USER_ADMIN.SET_ROW_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_ROW_LABEL Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_ROW_LABEL procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e12585">Parameter</th>
<th class="cellalignment3823" id="d74734e12588">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12593" headers="d74734e12585">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12593 d74734e12588">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12607" headers="d74734e12585">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12607 d74734e12588">
<p>Specifies the user name. This user must have the sufficient compartment, group, and level authorizations. To find this user, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code>, <code class="codeph">DBA_SA_USER_GROUPS</code>, and <code class="codeph">DBA_SA_USER_LEVELS</code> views.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12627" headers="d74734e12585">
<p><code class="codeph">row_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12627 d74734e12588">
<p>Specifies the label string to be used to initialize the user&#39;s row label. The label must contain only those compartments and groups from the default label that are authorized for write access. To find existing compartments and groups, query the <code class="codeph">ALL_SA_COMPARTMENTS</code> and <code class="codeph">ALL_SA_GROUPS</code> views.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the row label for the <code class="codeph">hr_ols_pol</code> policy for user <code class="codeph">jjones</code>.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.SET_ROW_LABEL (
  policy_name       =&gt; &#39;hr_ols_pol&#39;,
  user_name         =&gt; &#39;jjones&#39;,
  row_label         =&gt; &#39;HS&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-36FE5D8D-036F-481B-9729-2FD7116DC678__GUID-C993DE71-1494-4A24-BBB6-34FF61EC6F26">
<p class="notep1">See Also:</p>
<p><a href="packages.htm#GUID-C874C8DC-AF3D-459B-B18B-93C5CC3AAA8D" title="The SA_SESSION.SET_ROW_LABEL procedure sets the default row label value for the current database session.">SA_SESSION.SET_ROW_LABEL</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4075"></a><a id="OLSAG4076"></a><a id="OLSAG3286"></a><a id="OLSAG4077"></a><a id="OLSAG3285"></a>
<div class="props_rev_3"><a id="GUID-69F5E278-E4CC-4BDF-B897-31D940F39C62"></a>
<h3 id="OLSAG-GUID-69F5E278-E4CC-4BDF-B897-31D940F39C62" class="sect3">SA_USER_ADMIN.SET_USER_LABELS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_USER_LABELS</code> procedure sets the user&#39;s levels, compartments, and groups using a set of labels, instead of the individual components.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_USER_LABELS (
  policy_name      IN VARCHAR2,
  user_name        IN VARCHAR2,
  max_read_label   IN VARCHAR2,
  max_write_label  IN VARCHAR2 DEFAULT NULL,
  min_write_label  IN VARCHAR2 DEFAULT NULL,
  def_label        IN VARCHAR2 DEFAULT NULL,
  row_label        IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-69F5E278-E4CC-4BDF-B897-31D940F39C62__GUID-2CD520B1-A844-4EED-AD84-A525BA999F44">
<p class="titleintable">Table E-76 SA_USER_ADMIN.SET_USER_LABELS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_USER_LABELS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_USER_LABELS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e12741">Parameter</th>
<th class="cellalignment3823" id="d74734e12744">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12749" headers="d74734e12741">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12749 d74734e12744">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12763" headers="d74734e12741">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12763 d74734e12744">
<p>Specifies the user name. This user does not need any Oracle Label Security authorizations before you run this procedure.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12771" headers="d74734e12741">
<p><code class="codeph">max_read_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12771 d74734e12744">
<p>Specifies the label string to be used to initialize the user&#39;s maximum authorized read label. Composed of the user&#39;s maximum level, compartments authorized for read access, and groups authorized for read access.</p>
<p>To find information for these settings, query the <code class="codeph">DBA_SA_USERS</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12784" headers="d74734e12741">
<p><code class="codeph">max_write_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12784 d74734e12744">
<p>Specifies the label string to be used to initialize the user&#39;s maximum authorized write label. Composed of the user&#39;s maximum level, compartments authorized for write access, and groups authorized for write access. If <code class="codeph">max_write_label</code> is not specified, then it is set to <code class="codeph">max_read_label</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12798" headers="d74734e12741">
<p><code class="codeph">min_write_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12798 d74734e12744">
<p>Specifies the label string to be used to initialize the user&#39;s minimum authorized write label. Contains only the level, with no compartments or groups. If <code class="codeph">min_write_label</code> is not specified, then it is set to the lowest defined level for the policy, with no compartments or groups.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12809" headers="d74734e12741">
<p><code class="codeph">def_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12809 d74734e12744">
<p>Specifies the label string to be used to initialize the user&#39;s session label, including level, compartments, and groups (a subset of <code class="codeph">max_read_label</code>). If <code class="codeph">default_label</code> is not specified, then it is set to <code class="codeph">max_read_label</code>.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12826" headers="d74734e12741">
<p><code class="codeph">row_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12826 d74734e12744">
<p>Specifies the label string to be used to initialize the program&#39;s row label. Includes level, components, and groups: subsets of <code class="codeph">max_write_label</code> and <code class="codeph">def_label</code>. If <code class="codeph">row_label</code> is not specified, then it is set to <code class="codeph">def_label</code>, with only the compartments and groups authorized for write access.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets user labels for the <code class="codeph">hr_ols_pol</code> policy for user <code class="codeph">jjones</code>.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.SET_USER_LABELS (
  policy_name       =&gt; &#39;hr_ols_pol&#39;,
  user_name         =&gt; &#39;jjones&#39;,
  max_read_label    =&gt; &#39;HS:FIN&#39;,
  max_write_label   =&gt; &#39;HS&#39;,
  def_label         =&gt; &#39;HS&#39;,
  row_label         =&gt; &#39;HS&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-69F5E278-E4CC-4BDF-B897-31D940F39C62__GUID-47D9684D-2771-4187-A45B-9D3B2F0A5DB2">
<p class="notep1">See Also:</p>
<p><a href="packages.htm#GUID-ED613128-0715-43B0-9753-004403250E08" title="The SA_USER_ADMIN.SET_PROG_PRIVS procedure sets policy-specific privileges for program units.">SA_USER_ADMIN.SET_PROG_PRIVS</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4078"></a><a id="OLSAG4079"></a><a id="OLSAG3293"></a><a id="OLSAG4080"></a><a id="OLSAG051"></a>
<div class="props_rev_3"><a id="GUID-73B905A4-6B4F-4BA0-A44E-9475F2AEC414"></a>
<h3 id="OLSAG-GUID-73B905A4-6B4F-4BA0-A44E-9475F2AEC414" class="sect3">SA_USER_ADMIN.SET_USER_PRIVS</h3>
<div>
<p>The <code class="codeph">SA_USER_ADMIN.SET_USER_PRIVS</code> procedure sets policy-specific privileges for users.</p>
<div class="section">
<p>These privileges do not become effective until the next time the user logs into the database. The new set of privileges replaces any existing privileges. A <code class="codeph">NULL</code> value for the privileges parameter removes the user&#39;s privileges for the policy.</p>
<p>To assign policy privileges to users, you must have the <code class="codeph">EXECUTE</code> privilege for the <code class="codeph">SA_USER_ADMIN</code> package, and must have been granted the <span class="italic"><code class="codeph">policy_</code></span><code class="codeph">DBA</code> role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_USER_ADMIN.SET_USER_PRIVS (
  policy_name     IN VARCHAR2,
  user_name       IN VARCHAR2,
  privileges      IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-73B905A4-6B4F-4BA0-A44E-9475F2AEC414__GUID-7AE51F88-0B98-4CE4-9B84-E5B200EFC842">
<p class="titleintable">Table E-77 SA_USER_ADMIN.SET_USER_PRIVS Parameters</p>
<table class="cellalignment3821" title="SA_USER_ADMIN.SET_USER_PRIVS Parameters" summary="This table defines the meaning for each of the parameters used by the SA_USER_ADMIN.SET_USER_PRIVS procedure.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e12982">Parameter</th>
<th class="cellalignment3823" id="d74734e12985">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e12990" headers="d74734e12982">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e12990 d74734e12985">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13004" headers="d74734e12982">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13004 d74734e12985">
<p>The name of the user to be granted privileges. This user should already have been authorized for policy levels, compartments, and groups. To find this user, query the <code class="codeph">USER_NAME</code> column of the <code class="codeph">DBA_SA_USER_COMPARTMENTS</code>, <code class="codeph">DBA_SA_USER_GROUPS</code>, and <code class="codeph">DBA_SA_USER_LABELS</code> views.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13024" headers="d74734e12982">
<p><code class="codeph">privileges</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13024 d74734e12985">
<p>A character string of policy-specific privileges separated by commas. See <a href="getstrtd.htm#GUID-180AE22F-C31A-48A9-AE4A-2CAB334746E8" title="After you have authorized users for policy levels, compartments, and groups, you are ready to grant the user privileges.">About Granting Privileges to Users and Trusted Program Units for the Policy</a> for list of available privileges to grant.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example grants user <code class="codeph">jgodfrey</code> full privileges for the <code class="codeph">hr_ols_pol</code> policy settings.</p>
<pre dir="ltr">BEGIN 
 SA_USER_ADMIN.SET_USER_PRIVS (
  policy_name       =&gt; &#39;hr_ols_pol&#39;,
  user_name         =&gt; &#39;jgodfrey&#39;,
  privileges        =&gt; &#39;FULL&#39;);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-73B905A4-6B4F-4BA0-A44E-9475F2AEC414__GUID-E715FBDA-8903-430A-9D98-2E032DA4A6B6">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="getstrtd.htm#GUID-180AE22F-C31A-48A9-AE4A-2CAB334746E8" title="After you have authorized users for policy levels, compartments, and groups, you are ready to grant the user privileges.">About Granting Privileges to Users and Trusted Program Units for the Policy</a></p>
</li>
<li>
<p><a href="packages.htm#GUID-ED613128-0715-43B0-9753-004403250E08" title="The SA_USER_ADMIN.SET_PROG_PRIVS procedure sets policy-specific privileges for program units.">SA_USER_ADMIN.SET_PROG_PRIVS</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="OLSAG4081"></a><a id="OLSAG072"></a>
<div class="props_rev_3"><a id="GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1"></a>
<h2 id="OLSAG-GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1" class="sect2">SA_UTL PL/SQL Utility Functions and Procedures</h2>
<div>
<p>The <code class="codeph">SA_UTL</code> PL/SQL package contains utility functions and procedures that are used in PL/SQL programs.</p>
<p>These programs return information about the current values of the session security attributes, as numeric label values. They are primarily for use in trusted stored program units. You do not need special privileges to use this package.</p>
<p><a href="packages.htm#GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1__CIHGECAC" title="PL/SQL Package Functions and Procedures">Table E-78</a> lists the <code class="codeph">SA_UTL</code> PL/SQL package functions and procedures.</p>
<div class="tblformal" id="GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1__CIHGECAC">
<p class="titleintable">Table E-78 SA_UTL PL/SQL PL/SQL Package Contents</p>
<table class="cellalignment3821" title="SA_UTL PL/SQL PL/SQL Package Contents" summary="PL/SQL Package Functions and Procedures">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3863" id="d74734e13161">Function or Procedure</th>
<th class="cellalignment3864" id="d74734e13164">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13169" headers="d74734e13161">
<p><a href="packages.htm#GUID-D1C8564D-7107-4E7F-977A-F4A631E81D1E" title="The SA_UTL.CHECK_LABEL_CHANGE function checks if the user can change the data label for a policy protected table row.">SA_UTL.CHECK_LABEL_CHANGE</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13169 d74734e13164">
<p>Checks if the user can change the data label for a policy protected table row</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13183" headers="d74734e13161">
<p><a href="packages.htm#GUID-916D73D9-E2D8-4220-821F-27CD66BAD9E2" title="The SA_UTL.CHECK_READ function checks if a user can read a policy-protected table row.">SA_UTL.CHECK_READ</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13183 d74734e13164">
<p>Checks if the user can read a policy-protected table row</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13197" headers="d74734e13161">
<p><a href="packages.htm#GUID-44C51F1B-E2D1-4950-ACCA-B5A25FAE2CE0" title="The SA_UTL.CHECK_WRITE function to checks if the user can insert, update, or delete data in a policy protected table row.">SA_UTL.CHECK_WRITE</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13197 d74734e13164">
<p>Checks if the user can insert, update, or delete data in a policy protected table row</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13211" headers="d74734e13161">
<p><a href="packages.htm#GUID-EEB006E1-D638-491D-B053-1E0E688570C7" title="The SA_UTL.DATA_LABEL function returns TRUE if the label is a data label.">SA_UTL.DATA_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13211 d74734e13164">
<p>Returns <code class="codeph">TRUE</code> if the label is a <span class="italic">data</span> label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13234" headers="d74734e13161">
<p><a href="packages.htm#GUID-E72185A1-1685-4EC0-868D-3521F989CF6C" title="The SA_UTL.GREATEST_LBOUND function returns a label that is the greatest lower bound of the two label arguments.">SA_UTL.GREATEST_LBOUND</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13234 d74734e13164">
<p>Returns a label that is the greatest lower bound of the two label arguments</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13248" headers="d74734e13161">
<p><a href="packages.htm#GUID-A2B6C5D2-FAC5-4CDE-AF58-66AF3E9444DC" title="The SA_UTL.LEAST_UBOUND function returns a label that is the least upper bound of the label arguments.">SA_UTL.LEAST_UBOUND</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13248 d74734e13164">
<p>Returns a label that is the least upper bound of the label arguments</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13262" headers="d74734e13161">
<p><a href="packages.htm#GUID-AC5AF8D8-B663-4FCF-8253-C1D56FFE7000" title="The SA_UTL.NUMERIC_LABEL function returns the current session label.">SA_UTL.NUMERIC_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13262 d74734e13164">
<p>Returns the current session label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13276" headers="d74734e13161">
<p><a href="packages.htm#GUID-E652BBA0-043F-4EEC-AE0E-1825C4135BBD" title="The SA_UTL.NUMERIC_ROW_LABEL function returns the current row label. .">SA_UTL.NUMERIC_ROW_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13276 d74734e13164">
<p>Returns the current row label</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13290" headers="d74734e13161">
<p><a href="packages.htm#GUID-FCB3F3C1-CD41-4F5F-B8EF-1F67B1515FF7" title="The SA_UTL.SET_LABEL procedure sets the label of the current database session.">SA_UTL.SET_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13290 d74734e13164">
<p>Sets the label of the current database session</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3865" id="d74734e13304" headers="d74734e13161">
<p><a href="packages.htm#GUID-A6D5DF03-72B3-4A7F-A6B4-8418D4A8A736" title="The SA_UTL.SET_ROW_LABEL procedure sets the row label of the current database session.">SA_UTL.SET_ROW_LABEL</a></p>
</td>
<td class="cellalignment3866" headers="d74734e13304 d74734e13164">
<p>Set the row label of the current database session</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-24F0A51B-B7C1-4788-9E97-719AE28FAEA1__GUID-82DF2BBE-82BC-40AC-9768-9354C2D3A572">
<p class="notep1">See Also:</p>
<p><a href="storproc.htm#GUID-0DFE3CD2-E511-4CAD-AA6F-CABC13670856" title="The SA_UTL package has functions to return information about current values of session security attributes using numeric label values.">How Setting and Returning Label Information Works</a></p>
</div>
</div>
<a id="OLSAG4082"></a><a id="OLSAG4083"></a><a id="OLSAG4084"></a><a id="OLSAG4085"></a><a id="OLSAG3375"></a>
<div class="props_rev_3"><a id="GUID-D1C8564D-7107-4E7F-977A-F4A631E81D1E"></a>
<h3 id="OLSAG-GUID-D1C8564D-7107-4E7F-977A-F4A631E81D1E" class="sect3">SA_UTL.CHECK_LABEL_CHANGE</h3>
<div>
<p>The <code class="codeph">SA_UTL.CHECK_LABEL_CHANGE</code> function checks if the user can change the data label for a policy protected table row.</p>
<div class="section">
<p>This function returns <code class="codeph">1</code> if the user can change the data label. It returns <code class="codeph">0</code> if the user cannot change the data label. The input values are the policy name, the current data label, and the new data label.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.CHECK_LABEL_CHANGE (
  policy_name     IN VARCHAR2,
  current_label   IN NUMBER,
  new_label       IN NUMBER)
RETURN NUMBER; 
</pre>
<div class="infobox-note" id="GUID-D1C8564D-7107-4E7F-977A-F4A631E81D1E__GUID-C73391A7-344B-4604-B259-D9D51533B229">
<p class="notep1">Note:</p>
<p>You must have update privileges on the table to write any data into the table.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D1C8564D-7107-4E7F-977A-F4A631E81D1E__GUID-63CABB44-BD0A-4B3E-ADBB-CCD9B871A4B0">
<p class="titleintable">Table E-79 SA_UTL.CHECK_LABEL_CHANGE Parameters</p>
<table class="cellalignment3821" title="SA_UTL.CHECK_LABEL_CHANGE Parameters" summary="SA_UTL..CHECK_LABEL_CHANGE Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e13420">Parameter</th>
<th class="cellalignment3823" id="d74734e13423">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13428" headers="d74734e13420">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13428 d74734e13423">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13442" headers="d74734e13420">
<p><code class="codeph">current_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13442 d74734e13423">
<p>The current value of the label. To find existing label values, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13456" headers="d74734e13420">
<p><code class="codeph">new_label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13456 d74734e13423">
<p>The new value for the label</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example indicates if users can change data labels in policy-protected rows.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
BEGIN
  IF SA_UTL.CHECK_LABEL_CHANGE(&#39;hr_ols_pol&#39;,2000, 2200) = 1 
   THEN DBMS_OUTPUT.PUT_LINE(&#39;Users can chagne data labels in policy-protected rows.&#39;);
  ELSE
   DBMS_OUTPUT.PUT_LINE(&#39;Users cannot change data labels in policy-protected rows.&#39;);
  END IF;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4086"></a><a id="OLSAG4087"></a><a id="OLSAG4088"></a><a id="OLSAG4089"></a><a id="OLSAG3373"></a>
<div class="props_rev_3"><a id="GUID-916D73D9-E2D8-4220-821F-27CD66BAD9E2"></a>
<h3 id="OLSAG-GUID-916D73D9-E2D8-4220-821F-27CD66BAD9E2" class="sect3">SA_UTL.CHECK_READ</h3>
<div>
<p>The <code class="codeph">SA_UTL.CHECK_READ</code> function checks if a user can read a policy-protected table row.</p>
<div class="section">
<p>This function returns <code class="codeph">1</code> if the user can read the table row. It returns <code class="codeph">0</code> if the user cannot read the table row.</p>
<div class="infobox-note" id="GUID-916D73D9-E2D8-4220-821F-27CD66BAD9E2__GUID-FA09C7F6-A27F-4E95-8859-6AE58E491407">
<p class="notep1">Note:</p>
<p>The user must have the <code class="codeph">SELECT</code> privilege on the table to read any data from the table.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.CHECK_READ (
  policy_name     IN VARCHAR2,
  label           IN NUMBER) 
RETURN NUMBER; 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-916D73D9-E2D8-4220-821F-27CD66BAD9E2__GUID-9B27092F-A913-48A2-81C7-41A15D0D83F3">
<p class="titleintable">Table E-80 SA_UTL.CHECK_READ Parameters</p>
<table class="cellalignment3821" title="SA_UTL.CHECK_READ Parameters" summary="SA_UTL..CHECK_READ Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e13568">Parameter</th>
<th class="cellalignment3823" id="d74734e13571">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13576" headers="d74734e13568">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13576 d74734e13571">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13590" headers="d74734e13568">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13590 d74734e13571">
<p>The label to be checked. To find existing label values, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example indicates if users can read a policy-protected row.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
BEGIN
  IF SA_UTL.CHECK_READ(&#39;hr_ols_pol&#39;,2000) = 1 
   THEN DBMS_OUTPUT.PUT_LINE(&#39;Users can read policy-protected rows.&#39;);
  ELSE
   DBMS_OUTPUT.PUT_LINE(&#39;Users cannot read policy-protected rows.&#39;);
  END IF;
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4090"></a><a id="OLSAG4091"></a><a id="OLSAG4092"></a><a id="OLSAG4093"></a><a id="OLSAG3374"></a>
<div class="sect3"><a id="GUID-44C51F1B-E2D1-4950-ACCA-B5A25FAE2CE0"></a>
<h3 id="OLSAG-GUID-44C51F1B-E2D1-4950-ACCA-B5A25FAE2CE0" class="sect3">SA_UTL.CHECK_WRITE</h3>
<div>
<p>The <code class="codeph">SA_UTL.CHECK_WRITE</code> function to checks if the user can insert, update, or delete data in a policy protected table row.</p>
<p>The user should already have the <code class="codeph">UPDATE</code> privilege on the table to write any data into the table. This function returns <code class="codeph">1</code> if the user can write to the table row. It returns <code class="codeph">0</code> if the user cannot write to the table row. The input values are the policy name and the row data label.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<pre dir="ltr">SA_UTL.CHECK_WRITE (
  policy_name     IN VARCHAR2,
  label           IN NUMBER) 
RETURN NUMBER; 
</pre>
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-44C51F1B-E2D1-4950-ACCA-B5A25FAE2CE0__GUID-A1B1EF18-3531-4D75-9718-7004843961E0">
<p class="titleintable">Table E-81 SA_UTL.CHECK_WRITE Parameters</p>
<table class="cellalignment3821" title="SA_UTL.CHECK_WRITE Parameters" summary="SA_UTL.CHECK_WRITE Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e13704">Parameter</th>
<th class="cellalignment3823" id="d74734e13707">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13712" headers="d74734e13704">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13712 d74734e13707">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13726" headers="d74734e13704">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13726 d74734e13707">
<p>The label to be checked. To find existing label values, query the <code class="codeph">LABEL</code> and <code class="codeph">TAG</code> columns of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<p>The following example indicates if users can write to policy-protected rows.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
BEGIN
  IF SA_UTL.CHECK_WRITE(&#39;hr_ols_pol&#39;,2000) = 1 
   THEN DBMS_OUTPUT.PUT_LINE(&#39;Users can write to policy-protected rows.&#39;);
  ELSE
   DBMS_OUTPUT.PUT_LINE(&#39;Users cannot write to policy-protected rows.&#39;);
  END IF;
END;
/
</pre></div>
</div>
<a id="OLSAG4094"></a><a id="OLSAG4095"></a><a id="OLSAG4096"></a><a id="OLSAG4097"></a><a id="OLSAG3371"></a>
<div class="props_rev_3"><a id="GUID-EEB006E1-D638-491D-B053-1E0E688570C7"></a>
<h3 id="OLSAG-GUID-EEB006E1-D638-491D-B053-1E0E688570C7" class="sect3">SA_UTL.DATA_LABEL</h3>
<div>
<p>The <code class="codeph">SA_UTL.DATA_LABEL</code> function returns <code class="codeph">TRUE</code> if the label is a data label.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.DATA_LABEL( 
 label IN NUMBER) 
RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EEB006E1-D638-491D-B053-1E0E688570C7__GUID-2DC426B6-8FE9-48A1-A194-B1BD2798D20C">
<p class="titleintable">Table E-82 SA_UTL.DATA_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_UTL.DATA_LABEL Parameter" summary="SA_UTL.DATA_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e13841">Parameter</th>
<th class="cellalignment3823" id="d74734e13844">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13849" headers="d74734e13841">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13849 d74734e13844">
<p>The label to be checked. To find existing label values, query the <code class="codeph">LABEL</code> and <code class="codeph">TAG</code> columns of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example indicates if the label <code class="codeph">2000</code> is a data label.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
BEGIN 
 IF SA_UTL.DATA_LABEL(2000)
  THEN DBMS_OUTPUT.PUT_LINE(&#39;Label 2000 is a data label.&#39;);
 ELSE 
  DBMS_OUTPUT.PUT_LINE(&#39;Label 2000 is not a data label.&#39;); 
 END IF; 
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4098"></a><a id="OLSAG4099"></a><a id="OLSAG4100"></a><a id="OLSAG4101"></a><a id="OLSAG3380"></a>
<div class="props_rev_3"><a id="GUID-E72185A1-1685-4EC0-868D-3521F989CF6C"></a>
<h3 id="OLSAG-GUID-E72185A1-1685-4EC0-868D-3521F989CF6C" class="sect3">SA_UTL.GREATEST_LBOUND</h3>
<div>
<p>The <code class="codeph">SA_UTL.GREATEST_LBOUND</code> function returns a label that is the greatest lower bound of the two label arguments.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.GREATEST_LBOUND (
 label1 IN NUMBER,
 label2 IN NUMBER)
RETURN NUMBER; 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E72185A1-1685-4EC0-868D-3521F989CF6C__GUID-33F9636E-4B3C-46CF-AFC5-C727550ABF7F">
<p class="titleintable">Table E-83 SA_UTL.GREATEST_LBOUND Parameters</p>
<table class="cellalignment3821" title="SA_UTL.GREATEST_LBOUND Parameters" summary="SA_UTL.GREATEST_LBOUND Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e13958">Parameter</th>
<th class="cellalignment3823" id="d74734e13961">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13966" headers="d74734e13958">
<p><code class="codeph">label1</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13966 d74734e13961">
<p>The first label to check. To find existing label values, query the <code class="codeph">LABEL</code> and <code class="codeph">TAG</code> columns of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e13983" headers="d74734e13958">
<p><code class="codeph">label2</code></p>
</td>
<td class="cellalignment3825" headers="d74734e13983 d74734e13961">
<p>The second label to check</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example compares existing label tags <code class="codeph">3110</code> and <code class="codeph">3111</code>.</p>
<pre dir="ltr">SELECT SA_UTL.GREATEST_LBOUND(3110,3111) FROM DUAL;

SA_UTL.GREATEST_LBOUND(3110,3111)
---------------------------------
                             3111
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4102"></a><a id="OLSAG4103"></a><a id="OLSAG4104"></a><a id="OLSAG4105"></a><a id="OLSAG3381"></a>
<div class="props_rev_3"><a id="GUID-A2B6C5D2-FAC5-4CDE-AF58-66AF3E9444DC"></a>
<h3 id="OLSAG-GUID-A2B6C5D2-FAC5-4CDE-AF58-66AF3E9444DC" class="sect3">SA_UTL.LEAST_UBOUND</h3>
<div>
<p>The <code class="codeph">SA_UTL.LEAST_UBOUND</code> function returns a label that is the least upper bound of the label arguments.</p>
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.LEAST_UBOUND (
 label1 IN NUMBER,
 label2 IN NUMBER)
RETURN NUMBER; 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-A2B6C5D2-FAC5-4CDE-AF58-66AF3E9444DC__GUID-052F34D9-D775-4A51-BE1C-0C7AA6C37E3E">
<p class="titleintable">Table E-84 SA_UTL.LEAST_UBOUND Parameters</p>
<table class="cellalignment3821" title="SA_UTL.LEAST_UBOUND Parameters" summary="SA_UTL.LEAST_UBOUND Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e14085">Parameter</th>
<th class="cellalignment3823" id="d74734e14088">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14093" headers="d74734e14085">
<p><code class="codeph">label1</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14093 d74734e14088">
<p>The first label to check. To find existing label values, query the <code class="codeph">LABEL</code> and <code class="codeph">TAG</code> columns of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14110" headers="d74734e14085">
<p><code class="codeph">label2</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14110 d74734e14088">
<p>The second label to check</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example compares existing labels <code class="codeph">3110</code> and <code class="codeph">3111</code>.</p>
<pre dir="ltr">SELECT SA_UTL.LEAST_UBOUND(3110,3111) FROM DUAL;

SA_UTL.LEAST_UOUND(3110,3111)
-----------------------------
                         3110
</pre>
<div class="infoboxnotealso" id="GUID-A2B6C5D2-FAC5-4CDE-AF58-66AF3E9444DC__GUID-B4CB4965-86EC-4BF7-AB55-FD9EC47DD05A">
<p class="notep1">See Also:</p>
<p><a href="worklabel.htm#GUID-65D855D9-2DE3-4EB8-83CE-2B0D78E56F35" title="Oracle Label Security provides functions that determine the least upper bound or the greatest lower bound of two or more labels.">Determination of the Upper and Lower Bounds of Labels</a>. The functions described here are the same as those described in Chapter 6, except that these return a number instead of a character string.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4106"></a><a id="OLSAG4107"></a><a id="OLSAG4108"></a><a id="OLSAG4109"></a><a id="OLSAG3369"></a>
<div class="props_rev_3"><a id="GUID-AC5AF8D8-B663-4FCF-8253-C1D56FFE7000"></a>
<h3 id="OLSAG-GUID-AC5AF8D8-B663-4FCF-8253-C1D56FFE7000" class="sect3">SA_UTL.NUMERIC_LABEL</h3>
<div>
<p>The <code class="codeph">SA_UTL.NUMERIC_LABEL</code> function returns the current session label.</p>
<div class="section">
<p>This function takes a policy name as the input parameter and returns a <code class="codeph">NUMBER</code> value.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.NUMERIC_LABEL ( 
  policy_name) 
RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-AC5AF8D8-B663-4FCF-8253-C1D56FFE7000__GUID-211ABA6B-36BB-47BE-82FB-A89B122F48C4">
<p class="titleintable">Table E-85 SA_UTL.NUMERIC_LABEL Parameter</p>
<table class="cellalignment3821" title="SA_UTL.NUMERIC_LABEL Parameter" summary="SA_UTL.NUMERIC_LABEL Parameter. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e14226">Parameter</th>
<th class="cellalignment3823" id="d74734e14229">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14234" headers="d74734e14226">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14234 d74734e14229">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns a the session numeric label for the user who is currently connected to the database instance.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
DECLARE
 num_label number;
BEGIN 
 num_label := SA_UTL.NUMERIC_LABEL(&#39;hr_ols_pol&#39;); 
 DBMS_OUTPUT.PUT_LINE(&#39;Numeric label: &#39;||num_label);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4110"></a><a id="OLSAG4111"></a><a id="OLSAG4112"></a><a id="OLSAG4113"></a><a id="OLSAG3370"></a>
<div class="props_rev_3"><a id="GUID-E652BBA0-043F-4EEC-AE0E-1825C4135BBD"></a>
<h3 id="OLSAG-GUID-E652BBA0-043F-4EEC-AE0E-1825C4135BBD" class="sect3">SA_UTL.NUMERIC_ROW_LABEL</h3>
<div>
<p>The <code class="codeph">SA_UTL.NUMERIC_ROW_LABEL</code> function returns the current row label. .</p>
<div class="section">
<p>This function takes a policy name as the input parameter and returns a <code class="codeph">NUMBER</code> value</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.NUMERIC_ROW_LABEL ( 
  policy_name) 
RETURN NUMBER;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E652BBA0-043F-4EEC-AE0E-1825C4135BBD__GUID-30AA814C-F106-426F-B8A8-D479046ADA84">
<p class="titleintable">Table E-86 SA_UTL.NUMERIC_ROW_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_UTL.NUMERIC_ROW_LABEL Parameters" summary="SA_UTL.NUMERIC_ROW_LABEL Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e14347">Parameter</th>
<th class="cellalignment3823" id="d74734e14350">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14355" headers="d74734e14347">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14355 d74734e14350">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example returns the session numeric row label for the user who is currently connected to the database instance.</p>
<pre dir="ltr">SET SERVEROUTPUT ON
DECLARE
 num_row number;
BEGIN 
 num_row := SA_UTL.NUMERIC_ROW_LABEL(&#39;hr_ols_pol&#39;); 
 DBMS_OUTPUT.PUT_LINE(&#39;Numeric row label: &#39;||num_row);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4114"></a><a id="OLSAG4115"></a><a id="OLSAG4116"></a><a id="OLSAG4117"></a><a id="OLSAG3377"></a>
<div class="props_rev_3"><a id="GUID-FCB3F3C1-CD41-4F5F-B8EF-1F67B1515FF7"></a>
<h3 id="OLSAG-GUID-FCB3F3C1-CD41-4F5F-B8EF-1F67B1515FF7" class="sect3">SA_UTL.SET_LABEL</h3>
<div>
<p>The <code class="codeph">SA_UTL.SET_LABEL</code> procedure sets the label of the current database session.</p>
<div class="section">
<p>The session&#39;s write label and row label are set to the subset of the label&#39;s compartments and groups that are authorized for write access.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.SET_LABEL (
 policy_name IN VARCHAR2,
 label       IN LBAC_LABEL); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-FCB3F3C1-CD41-4F5F-B8EF-1F67B1515FF7__GUID-26E1A969-1DC6-4D21-9A5C-A1075CB9C85C">
<p class="titleintable">Table E-87 SA_UTL.SET_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_UTL.SET_LABEL Parameters" summary="SA_UTL.SET_LABEL Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e14474">Parameter</th>
<th class="cellalignment3823" id="d74734e14477">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14482" headers="d74734e14474">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14482 d74734e14477">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14496" headers="d74734e14474">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14496 d74734e14477">
<p>The label to set as the session label. To find existing label values, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
<p>You must pass this parameter through as an output of the <code class="codeph">TO_LBAC_DATA_LABEL</code> function, which converts a label in character form to an <code class="codeph">LBAC_LABEL</code> type. (The example in the next section shows how to do this.)</p>
<p>See also <a href="enforce.htm#GUID-D5B434F0-F38F-430C-9FBB-0C71FD9E846E" title="Labeling functions enable you to consider, in your rules for assigning labels, information drawn from the application context.">How Labeling Functions in Oracle Label Security Policies Works</a>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the label for the <code class="codeph">hr_ols_pol</code> policy.</p>
<pre dir="ltr">BEGIN
  SA_UTL.SET_LABEL (
    policy_name =&gt; &#39;hr_ols_pol&#39;,
    label       =&gt; to_lbac_data_label(&#39;hr_ols_pol&#39;,&#39;hs:pii&#39;));
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="OLSAG4118"></a><a id="OLSAG4119"></a><a id="OLSAG4120"></a><a id="OLSAG4121"></a><a id="OLSAG3378"></a>
<div class="props_rev_3"><a id="GUID-A6D5DF03-72B3-4A7F-A6B4-8418D4A8A736"></a>
<h3 id="OLSAG-GUID-A6D5DF03-72B3-4A7F-A6B4-8418D4A8A736" class="sect3">SA_UTL.SET_ROW_LABEL</h3>
<div>
<p>The <code class="codeph">SA_UTL.SET_ROW_LABEL</code> procedure sets the row label of the current database session.</p>
<div class="section">
<p>The compartments and groups in the label must be a subset of compartments and groups in the session label that are authorized for write access.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SA_UTL.SET_ROW_LABEL (
 policy_name IN VARCHAR2,
 label       IN BINARY_INTEGER); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-A6D5DF03-72B3-4A7F-A6B4-8418D4A8A736__GUID-10142C94-71AD-44A2-9489-C36651AC56CA">
<p class="titleintable">Table E-88 SA_UTL.SET_ROW_LABEL Parameters</p>
<table class="cellalignment3821" title="SA_UTL.SET_ROW_LABEL Parameters" summary="SA_UTL.SET_ROW_LABEL Parameters. Columns are Parameter and Description.">
<thead>
<tr class="cellalignment3810">
<th class="cellalignment3822" id="d74734e14636">Parameter</th>
<th class="cellalignment3823" id="d74734e14639">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14644" headers="d74734e14636">
<p><code class="codeph">policy_name</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14644 d74734e14639">
<p>Specifies the policy. To find existing policies, query the <code class="codeph">POLICY_NAME</code> column of the <code class="codeph">ALL_SA_POLICIES</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment3810">
<td class="cellalignment3824" id="d74734e14658" headers="d74734e14636">
<p><code class="codeph">label</code></p>
</td>
<td class="cellalignment3825" headers="d74734e14658 d74734e14639">
<p>The label to set as the session default row label. To find existing label values, query the <code class="codeph">LABEL</code> column of the <code class="codeph">ALL_SA_LABELS</code> view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Example</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the row label for the <code class="codeph">hr_ols_pol</code> policy to <code class="codeph">3000</code>.</p>
<pre dir="ltr">BEGIN
 SA_UTL.SET_ROW_LABEL (
  policy_name         =&gt; &#39;hr_ols_pol&#39;,
  label               =&gt; 1111);
END;
/
</pre>
<div class="infoboxnotealso" id="GUID-A6D5DF03-72B3-4A7F-A6B4-8418D4A8A736__GUID-9065BAE2-E20E-47F0-AB7C-33C36312E7E0">
<p class="notep1">See Also:</p>
<p><a href="packages.htm#GUID-406E4A7D-EC93-4720-BE46-0553EA0B1BB7" title="The SA_SESSION PL/SQL package manages session behavior for user authorizations.">SA_SESSION Session Management PL/SQL Package</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3809">
<tr>
<td class="cellalignment3826">
<table class="cellalignment3814">
<tr>
<td class="cellalignment3813"><a href="appxd.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3813"><a href="appc.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2015, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3828">
<table class="cellalignment3812">
<tr>
<td class="cellalignment3813"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3813"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3813"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3813"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3813"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3813"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>