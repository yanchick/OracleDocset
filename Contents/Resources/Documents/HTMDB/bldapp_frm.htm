<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-46689"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Creating%20Forms"></a><title>Creating Forms</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737"/>
<meta name="dcterms.created" content="2014-07-11T14:38:35Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express Application Builder User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17961-11"/>
<meta name="dcterms.isVersionOf" content="HTMDB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="app_comp.htm" title="Previous" type="text/html"/>
<link rel="Next" href="bldapp_cal.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17961-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">83/182</span> <!-- End Header --><a id="CHDJCDCF"></a>
<div id="HTMDB05005" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><span class="secnum">10.1</span> Creating <a id="sthref1527"></a>Forms</h1>
<p>You can include a variety of different types of forms in your applications. You can include forms that enable users to update just a single row in a table or multiple rows at once. Application Builder includes several wizards you can use to create forms automatically, or you can create forms manually.</p>
<p class="subhead2"><a id="HTMDB28384"></a>Topics:</p>
<ul>
<li>
<p><a href="#CHDCCJFF">Creating a Form Using a Wizard</a></p>
</li>
<li>
<p><a href="#BCEECEFA">Creating a Tabular Form</a></p>
</li>
<li>
<p><a href="#BCEBEDIC">Creating a Master Detail Form</a></p>
</li>
<li>
<p><a href="#CHDGFCGB">Creating a Form Manually</a></p>
</li>
<li>
<p><a href="#CHDBGEGA">Validating User Input in Forms</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="bldapp_rpt.htm#CHDHDABB">&#34;Creating Reports&#34;</a></div>
<a id="CHDCCJFF"></a>
<div id="HTMDB05029" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">10.1.1</span> Creating a Form Using a <a id="sthref1528"></a>Wizard</h2>
<p>The easiest way to create a form is to use a wizard. For example, the Form on Table or View Wizard creates one item for each column in a table. It also includes the necessary buttons and processes required to insert, update, and delete rows from the table using a primary key. Each region has a defined name and display position; all other attributes are items, buttons, processes, and branches.</p>
<p>To create a form using a wizard:</p>
<ol>
<li>
<p>On the Workspace home page, click the <span class="bold">Application Builder</span> icon.</p>
</li>
<li>
<p>Select an application.</p>
</li>
<li>
<p>Click <span class="bold">Create Page</span>.</p>
</li>
<li>
<p>Select <span class="bold">Form</span> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>Under Forms, select a type of form page as described in <a href="#CHDBFJEC">Table 10-1</a>.</p>
<div id="HTMDB28385" class="tblformal">
<p class="titleintable"><a id="sthref1529"></a><a id="CHDBFJEC"></a>Table 10-1 <a id="sthref1530"></a>Form Page Types</p>
<table class="cellalignment4586" title="Form Page Types" summary="This table describes the available wizards you can use to create forms for your application." dir="ltr">
<thead>
<tr class="cellalignment4580">
<th class="cellalignment4587" id="r1c1-t4"><a id="sthref1531"></a>Form Page Type</th>
<th class="cellalignment4587" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r2c1-t4" headers="r1c1-t4">
<p><a id="sthref1532"></a>Form on a Procedure</p>
</td>
<td class="cellalignment4588" headers="r2c1-t4 r1c2-t4">
<p>Builds a form based on stored procedure arguments. Use this approach when you have implemented logic or data manipulation language (DML) in a stored procedure or package.</p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r3c1-t4" headers="r1c1-t4">
<p>Form on a Table or View<a id="sthref1533"></a></p>
</td>
<td class="cellalignment4588" headers="r3c1-t4 r1c2-t4">
<p>Creates a form that enables users to update a single row in a database table.</p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r4c1-t4" headers="r1c1-t4">
<p><a id="sthref1534"></a>Form on a Table with Report</p>
</td>
<td class="cellalignment4588" headers="r4c1-t4 r1c2-t4">
<p>Creates two pages. One page displays a report. Each row provides a link to the second page to enable users to update each record.</p>
<p><span class="bold">Note:</span> This wizard does not support tables having more than 127 columns. Selecting more than 127 columns generates an error.</p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r5c1-t4" headers="r1c1-t4">
<p><a id="sthref1535"></a>Master Detail Form</p>
</td>
<td class="cellalignment4588" headers="r5c1-t4 r1c2-t4">
<p>Creates a form that displays a master row and multiple detail rows within a single HTML form. With this form, users can query, insert, update, and delete values from two tables or views.</p>
<p><span class="bold">See Also:</span> <a href="#BCEBEDIC">&#34;Creating a Master Detail Form&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r6c1-t4" headers="r1c1-t4">
<p><a id="sthref1536"></a>Tabular Form</p>
</td>
<td class="cellalignment4588" headers="r6c1-t4 r1c2-t4">
<p>Creates a form in which users can update multiple rows in a database.</p>
<p><span class="bold">See Also:</span> <a href="#BCEECEFA">&#34;Creating a Tabular Form&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r7c1-t4" headers="r1c1-t4">
<p><a id="sthref1537"></a>Form on a SQL Query</p>
</td>
<td class="cellalignment4588" headers="r7c1-t4 r1c2-t4">
<p>Creates a form based on the columns returned by a SQL query such as an <code>EQUIJOIN</code>.</p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r8c1-t4" headers="r1c1-t4">
<p><a id="sthref1538"></a>Summary Page</p>
</td>
<td class="cellalignment4588" headers="r8c1-t4 r1c2-t4">
<p>Creates a read-only version of a form. Typically used to provide a confirmation page at the end of a wizard.</p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r9c1-t4" headers="r1c1-t4">
<p><a id="sthref1539"></a>Form on Web Service</p>
</td>
<td class="cellalignment4588" headers="r9c1-t4 r1c2-t4">
<p>Creates a page with items based on a Web service definition. This wizard creates a user input form, a process to call the Web service, and a submit button.</p>
<p><span class="bold">See Also:</span> <a href="advnc_web_services.htm#BABIJADG">&#34;Creating a Form on a Web Service&#34;</a></p>
</td>
</tr>
<tr class="cellalignment4580">
<td class="cellalignment4588" id="r10c1-t4" headers="r1c1-t4">
<p><a id="sthref1540"></a>Form and Report on Web Service</p>
</td>
<td class="cellalignment4588" headers="r10c1-t4 r1c2-t4">
<p>Creates a page with items based on a Web service definition. This wizard creates a user input form, a process to call the Web service, a submit button, and displays the results returned in a report.</p>
<p><span class="bold">See Also</span>: <a href="advnc_web_services.htm#BABDDBIB">&#34;Creating an Input Form and Report on a Web Service&#34;</a></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></li>
<li>
<p>Follow the on-screen instructions. To learn more about a specific field, click the item label.</p>
<p>When help is available, the cursor changes to an arrow and question mark when you pass the cursor over an item. See <a href="start_hlp.htm#BABFIDBH">&#34;About Field-Level Help&#34;</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BCEECEFA"></a>
<div id="HTMDB05030" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">10.1.2</span> Creating a Tabular <a id="sthref1541"></a><a id="sthref1542"></a>Form</h2>
<p>A tabular form enables users to update multiple rows in a table at once from a single page. If created using a wizard, a tabular forms enables you to perform update, insert, and delete operations on multiple rows in a database table. This form includes a built-in multiple row update process that performs optimistic locking behind the scenes to maintain the data integrity.</p>
<p class="subhead2"><a id="HTMDB28386"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABGFCDG">About Tabular Forms</a></p>
</li>
<li>
<p><a href="#BABHHIIA">How Tabular Forms Work</a></p>
</li>
<li>
<p><a href="#BABJAGBC">Creating a Tabular Form Using the Create Application Wizard</a></p>
</li>
<li>
<p><a href="#BABDFGAD">Creating a Tabular Form Using the Create Page Wizard</a></p>
</li>
<li>
<p><a href="#BABCAIAB">Synchronizing Tabular Form Column Order with Region Source</a></p>
</li>
</ul>
<a id="BABGFCDG"></a>
<div id="HTMDB28387" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.2.1</span> About Tabular Forms</h3>
<p>There are two primary methods for creating tabular forms:</p>
<ul>
<li>
<p>Create Application Wizard</p>
</li>
<li>
<p>Create Page Wizard</p>
</li>
</ul>
<p>Tabular forms created using these wizards include automatic DML processes. These wizards create a form that performs update, insert, and delete operations on multiple rows in a database table. Alternatively, you can build a tabular form manually either by creating a updatable report region or standard report region with updatable columns with custom PL/SQL page processes to process the tabular form data.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle does not recommend modifications of the select list of a SQL statement of a tabular form after it has been generated using a wizard. If you do modify the query, make sure the values of the updatable columns are not altered after being queried from the database by the Application Express engine.</div>
<div id="HTMDB28388" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref1543"></a>
<h4 class="sect4"><span class="secnum">10.1.2.1.1</span> Running a Tabular Form</h4>
<p>When running a tabular form, data is rendered as a report having updatable columns shown using various form elements (including text fields, text areas, date pickers, select lists, radio groups, and so on).</p>
<img width="831" height="345" src="img/rprt_tabular_form.gif" alt="Description of rprt_tabular_form.gif follows"/><br/>
<a id="sthref1544" href="img_text/rprt_tabular_form.htm">Description of the illustration rprt_tabular_form.gif</a><br/>
<br/>
<p>By default, date columns are created using the Date Picker item type. If user interface defaults are defined, other columns can be automatically created as select lists based on lists of values, or numeric fields and large text areas.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;Managing User Interface Defaults&#34; in <a class="olink AEUTL306" href="../AEUTL/sql_utl.htm#AEUTL306"><span class="italic">Oracle Application Express SQL Workshop Guide</span></a></div>
<p>For numeric and date fields, you can also pre-define date and number format masks, or apply those format masks after generating the initial form.</p>
<p>Each report also includes a check box column (called a row selector). Users use this row selector to select one or more columns and update or delete data. To add a row, users click <span class="bold">Add Row</span>.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
You can control the appearance of a specific column by editing column attributes.</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABHHIIA"></a>
<div id="HTMDB28389" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.2.2</span> How Tabular Forms Work</h3>
<p>Tabular forms are based on a SQL query in which the query columns are tied to the underlying table columns. Unlike a single record from, tabular forms do not store data in session state. When a tabular form page is submitted, the tabular form data is processed using built-in data manipulation language (DML), or a custom PL/SQL page processes.</p>
<p>A tabular form with automatic DML has two processes for multi-row operations:</p>
<ul>
<li>
<p>A Multi Row Update (MRU) process performs create and update operations</p>
</li>
<li>
<p>Multi Row Delete (MRD) process deletes requests on one or more rows</p>
</li>
</ul>
<p>MRU and MRD processes reference the underlying table name and the primary key columns. The primary key columns must be part of the tabular form SQL query, and the report columns must be either hidden or display-only (save state) in order for the DML processes to be able to identify the correct records. For new records, the primary key values must be <code>NULL</code> to be identified as new records. Delete operations are performed by referencing row number of the row to be deleted. Users can check one or more rows on the current page and when they click the Delete button, the row numbers identify the corresponding primary key value(s) and the matching rows are deleted.</p>
<p>Wizard generated tabular forms built-in DML, include a checksum column to prevent lost updates. Using a method called optimistic locking, a checksum is computed for each row when rendering a tabular form. This checksum is stored in an extra hidden tabular form column. Upon submission of the form for update, an additional set of checksums is computed on the then current data stored in the database. The new checksums are compared to those built when the tabular form was first rendered, and if there are any mismatches, the update is rejected, because the data in the database was either modified by another user or anther process in the time between the tabular form was rendered and the time the data was submitted.</p>
<p>Wizard generated tabular forms also automatically create validations for some columns. Validations are created for columns that are set to <code>NOT NULL</code> in the underlying table and columns of type <code>NUMBER</code>, <code>DATE</code> or <code>TIMESTAMP</code>. Note that validations are not created for columns if the column is set to read-only, either based on the user&#39;s selection, or defined user interface defaults.</p>
</div>
<!-- class="sect3" -->
<a id="BABJAGBC"></a>
<div id="HTMDB28390" class="sect3">
<h3 class="sect3"><span class="secnum">10.1.2.3</span> Creating a Tabular Form Using the Create Application Wizard</h3>
<p>The Create Application Wizard is designed to quickly create a basic Oracle Application Express application consisting of multiple pages and components. For that reason, this wizard uses general best practices to generate the application and does not include several advanced options included in the Create Page Wizard.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
When creating a tabular form, Oracle recommends using a generic column template and avoiding column report templates. See <a href="ui_templt.htm#BABFFGGJ">&#34;Report Templates&#34;</a>.</div>
<p>To create a tabular form using the Create Application Wizard:</p>
<ol>
<li>
<p>On the Workspace home page, click the <span class="bold">Application Builder</span> icon.</p>
</li>
<li>
<p>Click the <span class="bold">Create</span> button.</p>
</li>
<li>
<p>For Method, select <span class="bold">Database</span> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>For Name:</p>
<ol>
<li>
<p>Application - Enter a unique integer value to identify the application. Application IDs between 3000 to 9000 are reserved for internal use by Oracle Application Express.</p>
</li>
<li>
<p>Name - Enter a name to identify the application.</p>
</li>
<li>
<p>Schema - Each application obtains its privileges by parsing all SQL as a specific database schema. Identify the database schema owner.</p>
</li>
<li>
<p>Create Options:</p>
<ul>
<li>
<p><span class="bold">Start from scratch</span> - Enables you to manually add all pages.</p>
</li>
<li>
<p><span class="bold">Include Home page</span> - Includes a blank page, which automatically acts as the parent of any new pages added. A list region is also created on the home page, providing navigation to the additional pages.</p>
</li>
<li>
<p><span class="bold">Use previously created application model</span> - Reuses an existing application definition. Using an existing application definition enables you to run this wizard without reentering application property values.</p>
<p>Note that you still have to define all other application attributes, or you can choose to copy some attributes by choosing to copy shared components from another application.</p>
</li>
</ul>
</li>
<li>
<p>User Interface - Select a user interface for the application. For application primarily designed for desktop use, select <span class="bold">Desktop</span>.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>Under Add Page:</p>
<ol>
<li>
<p>Select Page Type - Select <span class="bold">Tabular Form</span>.</p>
</li>
<li>
<p>Subordinate to Page - If applicable, select a subordinate page. To learn more, see item Help.</p>
</li>
<li>
<p>Table Name - Select a table.</p>
</li>
<li>
<p>Click <span class="bold">Add Page</span>.</p>
<p>The new page appears at the top of the page.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For Shared Components, indicate whether to copy shared components from another application. Select <span class="bold">Yes</span> or <span class="bold">No</span>. If you select Yes, select where to copy them from and which components to import.</p>
<p>Shared components are common application elements that can be displayed or applied across multiple pages in an application. To save time or maintain consistency between applications, copy the shared components from an existing application. The types of shared components you can copy include: user interface themes, lists of values, navigation bar entries, authorization schemes and authentication schemes.</p>
</li>
<li>
<p>For Attributes:</p>
<ol>
<li>
<p>Authentication Scheme - Determines how to establish user identity before accessing an application. Options include:</p>
<ul>
<li>
<p><span class="bold">Application Express</span> - Uses the user account credentials created and maintained with the Application Express Service Administration application. These are the accounts you use to log in to the Application Express development environment. You can also create accounts in this user account repository for end users of your applications.</p>
</li>
<li>
<p><span class="bold">Database Account</span> - Requires users logging into your application to enter a database schema name (or user name) and a password in order to authenticate. This account information is managed entirely within the Oracle database.</p>
</li>
<li>
<p><span class="bold">No Authentication</span> - Also known as Database Account Credentials. This option enables users to access your application using the account credentials stored in the <code>mod_plsql</code> DAD definition. In most cases this results in users not having to login when accessing your application. This is the quickest way to create a &rdquo;public&rdquo; application.</p>
</li>
</ul>
<p>To learn more, see <a href="sec_authentication.htm#BABHIEIA">&#34;Establishing User Identity Through Authentication&#34;</a></p>
</li>
<li>
<p>Tabs - Select whether to include tabs in your application. You can create one level tabs, two level tabs, or no tabs at all. To learn more, see <a href="nav_tabs.htm#CHDEDIJI">&#34;Creating Tabs&#34;</a></p>
<p>This attribute identifies the language in which an application is developed. This language is the base language from which all translations are made.</p>
</li>
<li>
<p>Language - Select the primary language for this application.</p>
<p>This attribute identifies the language in which an application is developed. This language is the base language from which all translations are made.</p>
</li>
<li>
<p>User Language Preference Derived From - Specifies how the engine determines the application language. The application primary language can be static (that is, derived from the web browser language) or determined from a user preference or item. The database language setting determines date display and sorting characteristics. To learn more, see item Help.</p>
<p>You can alter the Language and User Language Preference Derived From attributes later on the Edit Globalization attributes page. See <a href="bldr_attr.htm#CHDIIHHC">&#34;Configuring Globalization Attributes&#34;</a>.</p>
</li>
<li>
<p>Date Format - Specifies the date format to be used in the application.</p>
<p>This date format is used to alter the <code>NLS_DATE_FORMAT</code> database session setting before showing or submitting any page within the application. This value can be a literal string containing a valid Oracle date format mask or an item reference through substitution syntax. If no value is specified, the default date format is derived from the database session at runtime. If supplied, this is also used as the date format for any items resulting from columns of type <code>DATE</code>.</p>
</li>
<li>
<p>Date Time Format - Specifies the date time format to be used in the application.</p>
<p>This date time format can be referenced in an application using the substitution reference <code>&amp;APP_DATE_TIME_FORMAT.</code>, or in PL/SQL using the function <code>v(&#39;APP_DATE_TIME_FORMAT&#39;)</code>. This attribute does not alter any NLS settings. This value can be a literal string containing a valid Oracle date format mask or an item reference using substitution syntax. If this attribute value is not specified, then a reference to <code>APP_DATE_TIME_FORMAT</code> returns the NLS database session date format and the NLS time format.</p>
</li>
<li>
<p>Timestamp Format - Specifies the timestamp format to be used in your application.</p>
<p>This timestamp format is used to alter the <code>NLS_TIMESTAMP_FORMAT</code> database session setting before showing or submitting any page within the application. This value can be a literal string containing a valid Oracle timestamp format mask or an item reference through substitution syntax. If no value is specified, the default timestamp format is derived from the database session at runtime.</p>
</li>
<li>
<p>Timestamp Time Zone Format - Specifies the timestamp with time zone format to be used in your application.</p>
<p>This timestamp with time zone format is used to alter the <code>NLS_TIMESTAMP_TZ_FORMAT</code> database session setting before showing or submitting any page within the application. This value can be a literal string containing a valid Oracle timestamp with time zone format mask or an item reference through substitution syntax. If no value is specified, the default timestamp with time zone format is derived from the database session at runtime.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For User Interface Theme, select a theme and click <span class="bold">Next</span>.</p>
<p>Themes are collections of templates that you can use to define the layout and style of an entire application. See <a href="ui_themes.htm#BABJEDBB">&#34;Managing Themes&#34;</a>.</p>
</li>
<li>
<p>Confirm your selections and click <span class="bold">Create</span>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;Managing User Interface Defaults&#34; in <a class="olink AEUTL306" href="../AEUTL/sql_utl.htm#AEUTL306"><span class="italic">Oracle Application Express SQL Workshop Guide</span></a></div>
</div>
<!-- class="sect3" -->
<a id="BABDFGAD"></a>
<div id="HTMDB28391" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.2.4</span> Creating a Tabular Form Using the Create Page Wizard</h3>
<p>Use the Create Page Wizard to add a tabular form to an existing application. Once you provide a table name on which to build the tabular form, the wizard reads the table columns from the database data dictionary.</p>
<p>Tabular forms perform insert, update and delete operations on table rows. Unlike with the Create Application Wizard, when you create a tabular form using the Create page Wizard you determine how rows are identified. You can either specify a primary key defined on the table, or a ROWID pseudo column, which uniquely identifies a row in a table. If you choose to select a primary key, you can choose between three different primary key source types: trigger, PL/SQL function, and sequence.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
When creating a tabular form, Oracle recommends using a generic column template and avoiding column report templates. See <a href="ui_templt.htm#BABFFGGJ">&#34;Report Templates&#34;</a>.</div>
<p>To create a tabular form using the Create Page Wizard:</p>
<ol>
<li>
<p>On the Workspace home page, click the <span class="bold">Application Builder</span> icon.</p>
</li>
<li>
<p>Select an application.</p>
</li>
<li>
<p>Click <span class="bold">Create Page</span>.</p>
</li>
<li>
<p>Select <span class="bold">Form</span> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>Select <span class="bold">Tabular Form</span> and click <span class="bold">Next</span>.</p>
<p>The Create Tabular Form Wizard appears.</p>
</li>
<li>
<p>For Table and Columns, specify the following:</p>
<ol>
<li>
<p>Table/View Owner - Select the table or view owner on which to base the tabular form.</p>
</li>
<li>
<p>Table/View Name - Select the table or view which contains the columns to be included in the tabular form region.</p>
</li>
<li>
<p>Select Columns - Select one or more columns to be included in the tabular form. In the pages that follow you define which columns should be updatable.</p>
</li>
<li>
<p>Allowed Operations - Select the operations to be performed on the table (for example, <span class="bold">Update, Insert and Delete</span>).</p>
</li>
<li>
<p>User Interface Defaults - Select whether to use user interface defaults. See item Help for more information and &#34;Managing User Interface Defaults&#34; in <a class="olink AEUTL306" href="../AEUTL/sql_utl.htm#AEUTL306"><span class="italic">Oracle Application Express SQL Workshop Guide</span></a>.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
<p>Next, define a primary key. Tabular forms perform insert, update and delete operations on table rows in the database. You identify the rows by using either a primary key defined on the table, or the ROWID pseudo column, which uniquely identifies a row in a table.</p>
</li>
<li>
<p>For Primary Key, select one of the following:</p>
<ul>
<li>
<p><span class="bold">Managed by Database (ROWID)</span> - The tabular form uses the ROWID pseudo column to identify rows to update and delete.</p>
</li>
<li>
<p><span class="bold">Select Primary Key Column(s)</span> - The tabular form uses the source table&#39;s primary key column(s).</p>
</li>
</ul>
</li>
<li>
<p>If you select <span class="bold">Managed by Database (ROWID)</span>, click <span class="bold">Next</span> to continue.</p>
</li>
<li>
<p>If you select <span class="bold">Select Primary Key Column(s)</span>:</p>
<ol>
<li>
<p>Primary Key Column 1 - Select the first column of the primary key.</p>
</li>
<li>
<p>Primary Key Column 2 - If you have a compound primary key, specify the second primary key column in this attribute. This attribute is optional.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
<li>
<p>For Source Type, select the method by which the primary key is populated:</p>
<ul>
<li>
<p><span class="bold">Existing trigger</span> - Select this option if a before-insert trigger populates the primary key. You can also select this option if you plan on specifying the primary key column source later after completing the form.</p>
</li>
<li>
<p><span class="bold">Custom PL/SQL function</span> - Select this option to provide a PL/SQL function to generate returning key value.</p>
</li>
<li>
<p><span class="bold">Existing sequence</span> - Select this option to pick the sequence from a list of sequences available in the selected schema.</p>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For Updatable Columns:</p>
<ol>
<li>
<p>Updatable Columns - Select the updatable columns to include in the form.</p>
<p>You can modify the column order or your SQL query after you create the page.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For Page and Region Attributes:</p>
<ol>
<li>
<p>Page - Select a page to contain the new updatable report, or enter a new page number.</p>
</li>
<li>
<p>Page Name - If you are creating a new page, enter a name.</p>
</li>
<li>
<p>Region Title - Enter a name for the region in which the updatable report appears.</p>
</li>
<li>
<p>Region Template - Select a region template for the updatable report region.</p>
</li>
<li>
<p>Report Template - Select a report template.</p>
</li>
<li>
<p>Breadcrumb - Select whether you want to use a breadcrumb navigation control on your page, and which breadcrumb navigation control you want to use.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For Tab Options, select an option that describes how tabs display on the page and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>For Buttons and Branching:</p>
<ol>
<li>
<p>Cancel Button Label - Enter text to display on the Cancel button.</p>
</li>
<li>
<p>Branch to Page - Specify the page number to branch to when the user clicks Cancel.</p>
</li>
<li>
<p>Submit Button Label - Enter text to display on the Submit button.</p>
</li>
<li>
<p>Branch to Page - Specify the page number to branch to when the user clicks Submit.</p>
</li>
<li>
<p>Delete Button Label - Enter text to display on the Delete button.</p>
</li>
<li>
<p>Add Row Button Label - Enter text to display on the Add Row button label.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>Click <span class="bold">Create</span>.</p>
<p>A success message appears.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABCAIAB"></a>
<div id="HTMDB29111" class="sect3">
<h3 class="sect3"><span class="secnum">10.1.2.5</span> Synchronizing <a id="sthref1545"></a>Tabular Form Column Order with Region Source</h3>
<p>To synchronize a classic report&#39;s column order with the column order defined in the region source query:</p>
<ol>
<li>
<p>On the Workspace home page, click the <span class="bold">Application Builder</span> icon.</p>
</li>
<li>
<p>Select the application.</p>
</li>
<li>
<p>Select a page containing the tabular form.</p>
<p>The Page Definition appears.</p>
</li>
<li>
<p>To access the Report Attributes page:</p>
<ul>
<li>
<p>Tree view - Right-click Tabular Form region and select <span class="bold">Edit Report Attributes</span>.</p>
</li>
<li>
<p>Component view - Click the <span class="bold">Report</span> link next to the Tabular Form region.</p>
</li>
</ul>
</li>
<li>
<p>From Tasks, select <span class="bold">Synchronize Column Order with Region Source</span>.</p>
</li>
<li>
<p>Click <span class="bold">Synchronize</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCEBEDIC"></a>
<div id="HTMDB05036" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">10.1.3</span> Creating a Master Detail <a id="sthref1546"></a><a id="sthref1547"></a>Form</h2>
<p>A master detail form reflects a one-to-many relationship between two tables in a database. Typically, a master detail form displays a master row and multiple detail rows within a single HTML form. With this form, users can insert, update, and delete values from two tables or views.</p>
<p class="subhead2"><a id="HTMDB28392"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABBFBDF">About Master Detail Forms</a></p>
</li>
<li>
<p><a href="#BABEJEJH">Creating a Master Detail Form Using the Create Application Wizard</a></p>
</li>
<li>
<p><a href="#BABBIAFC">Create a Master Detail Form Using the Create Page Wizard</a></p>
</li>
</ul>
<a id="BABBFBDF"></a>
<div id="HTMDB28393" class="sect3">
<h3 class="sect3"><span class="secnum">10.1.3.1</span> About Master Detail Forms</h3>
<p>When running a master detail form, data is rendered as a report using various form elements (including text fields, text areas, date pickers, select lists, radio groups, and so on). By default, date columns are created using the Date Picker item type. If user interface defaults are defined, other columns can be automatically created as select lists based on lists of values, or numeric fields and large text areas.</p>
<img width="669" height="576" src="img/rprt_master_detail2.gif" alt="Description of rprt_master_detail2.gif follows"/><br/>
<a id="sthref1548" href="img_text/rprt_master_detail2.htm">Description of the illustration rprt_master_detail2.gif</a><br/>
<br/>
<p>On the Master Detail, the master record displays as a standard form and the detail records display in a tabular form at the bottom of the page. Click <span class="bold">Add Item to Order</span> to add a new row.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;Managing User Interface Defaults&#34; in <a class="olink AEUTL306" href="../AEUTL/sql_utl.htm#AEUTL306"><span class="italic">Oracle Application Express SQL Workshop Guide</span></a></div>
<p>For numeric and date fields, you can also pre-define date and number format masks, or apply those format masks after generating the initial form. Wizard generated master detail forms also automatically create validations for some columns. Validations are created for columns that are set to <code>NOT NULL</code> in the underlying table and columns of type <code>NUMBER</code>, <code>DATE</code> or <code>TIMESTAMP</code>. Note that validations are not created for columns if the column is set to read-only, either based on the user&#39;s selection, or defined user interface defaults.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
You can control the appearance of a specific column by editing column attributes.</div>
</div>
<!-- class="sect3" -->
<a id="BABEJEJH"></a>
<div id="HTMDB28394" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.3.2</span> Creating a Master Detail Form Using the Create Application Wizard</h3>
<p>The Create Application Wizard is designed to quickly create a basic Oracle Application Express application consisting of multiple pages and components. This wizard uses general best practices to generate the application and does not include several advanced options included in the Create Page Wizard.</p>
<p>To create a master detail form using the Create Application Wizard:</p>
<ol>
<li>
<p>On the Workspace home page, click the <span class="bold">Application Builder</span> icon.</p>
</li>
<li>
<p>Click the <span class="bold">Create</span> button.</p>
</li>
<li>
<p>For Method, select <span class="bold">Database</span> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>For Name:</p>
<ol>
<li>
<p>Application - Enter a unique integer value to identify the application. Application IDs between 3000 to 9000 are reserved for internal use by Oracle Application Express.</p>
</li>
<li>
<p>Name - Enter a name to identify the application.</p>
</li>
<li>
<p>Schema - Each application obtains its privileges by parsing all SQL as a specific database schema. Identify the database schema owner.</p>
</li>
<li>
<p>Create Options:</p>
<ul>
<li>
<p><span class="bold">Start from scratch</span> - Enables you to manually add all pages.</p>
</li>
<li>
<p><span class="bold">Include Home page</span> - Includes a blank page, which automatically acts as the parent of any new pages added. A list region is also created on the home page, providing navigation to the additional pages.</p>
</li>
<li>
<p><span class="bold">Use previously created application model</span> - Reuses an existing application definition. Using an existing application definition enables you to run this wizard without reentering application property values.</p>
<p>Note that you still have to define all other application attributes, or you can choose to copy some attributes by choosing to copy shared components from another application.</p>
</li>
</ul>
</li>
<li>
<p>User Interface - Select a user interface for the application. For application primarily designed for desktop use, select <span class="bold">Desktop</span>.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
To create an instant application consisting of just a login page and blank page, click the <span class="bold">Create Application</span> button.</div>
<p>Next, add pages to your application.</p>
</li>
<li>
<p>For Pages:</p>
<ol>
<li>
<p>Select Page Type - Select <span class="bold">Master Detail</span>.</p>
</li>
<li>
<p>Subordinate to Page - If applicable, select a subordinate page. To learn more, see item Help.</p>
</li>
<li>
<p>Master Table Name - Select the table or view to be used as your master table. This table is used to create a report page and a master form on the master detail page.</p>
</li>
<li>
<p>Detail Table Name - Select the table or view to be used as your detail table.</p>
<p>Only tables and views that are associated to your selected Master Table using a foreign key are displayed.</p>
</li>
<li>
<p>Click <span class="bold">Add Page</span>.</p>
<p>The new pages appear at the top of the page.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For Shared Components, indicate whether to copy shared components from another application. Select <span class="bold">Yes</span> or <span class="bold">No</span>. If you select Yes, select where to copy them from and which components to import.</p>
<p>Shared components are common application elements that can be displayed or applied across multiple pages in an application. To save time or maintain consistency between applications, copy the shared components from an existing application. The types of shared components you can copy include: user interface themes, lists of values, navigation bar entries, authorization schemes and authentication schemes.</p>
</li>
<li>
<p>For Attributes:</p>
<ol>
<li>
<p>Authentication Scheme - Determine how establish user identity before accessing an application. Options include:</p>
<ul>
<li>
<p><span class="bold">Application Express</span> - Uses the user account credentials created and maintained with the Oracle Application Express Service Administration application. These are the accounts you use to log in to the Application Express development environment. You can also create accounts in this user account repository for end users of your applications.</p>
</li>
<li>
<p><span class="bold">Database Account</span> - Requires users logging into your application to enter a database schema name (or user name) and a password in order to authenticate. This account information is managed entirely within the Oracle database.</p>
</li>
<li>
<p><span class="bold">No Authentication</span> - Also known as Database Account Credentials. This option enables users to access your application using the account credentials stored in the <code>mod_plsql</code> DAD definition. In most cases this results in users not having to login when accessing your application. This is the quickest way to create a &rdquo;public&rdquo; application.</p>
</li>
</ul>
<p>To learn more, see <a href="sec_authentication.htm#BABHIEIA">&#34;Establishing User Identity Through Authentication&#34;</a></p>
</li>
<li>
<p>Tabs - Select whether to include tabs in your application. You can create one level tabs, two level tabs, or no tabs at all. To learn more, see <a href="nav_tabs.htm#CHDEDIJI">&#34;Creating Tabs&#34;</a></p>
<p>This attribute identifies the language in which an application is developed. This language is the base language from which all translations are made.</p>
</li>
<li>
<p>Language - Select the primary language for this application.</p>
<p>This attribute identifies the language in which an application is developed. This language is the base language from which all translations are made.</p>
</li>
<li>
<p>User Language Preference Derived From - Specifies how the engine determines the application language. The application primary language can be static (that is, derived from the web browser language) or determined from a user preference or item. The database language setting determines date display and sorting characteristics. To learn more, see item Help.</p>
<p>You can alter the Language and User Language Preference Derived From attributes later on the Edit Globalization attributes page. See <a href="bldr_attr.htm#CHDIIHHC">&#34;Configuring Globalization Attributes&#34;</a>.</p>
</li>
<li>
<p>Date Format - Specifies the date format to be used in the application.</p>
<p>This date format is used to alter the <code>NLS_DATE_FORMAT</code> database session setting before showing or submitting any page within the application. This value can be a literal string containing a valid Oracle date format mask or an item reference through substitution syntax. If no value is specified, the default date format is derived from the database session at runtime. If supplied, this is also used as the date format for any items resulting from columns of type <code>DATE</code>.</p>
</li>
<li>
<p>Date Time Format - Specifies the date time format to be used in the application.</p>
<p>This date time format can be referenced in an application using the substitution reference <code>&amp;APP_DATE_TIME_FORMAT.</code>, or in PL/SQL using the function <code>v(&#39;APP_DATE_TIME_FORMAT&#39;)</code>. This attribute does not alter any NLS settings. This value can be a literal string containing a valid Oracle date format mask or an item reference using substitution syntax. If this attribute value is not specified, then a reference to <code>APP_DATE_TIME_FORMAT</code> returns the NLS database session date format and the NLS time format.</p>
</li>
<li>
<p>Timestamp Format - Specifies the timestamp format to be used in your application.</p>
<p>This timestamp format is used to alter the <code>NLS_TIMESTAMP_FORMAT</code> database session setting before showing or submitting any page within the application. This value can be a literal string containing a valid Oracle timestamp format mask or an item reference through substitution syntax. If no value is specified, the default timestamp format is derived from the database session at runtime.</p>
</li>
<li>
<p>Timestamp Time Zone Format - Specifies the timestamp with time zone format to be used in your application.</p>
<p>This timestamp with time zone format is used to alter the <code>NLS_TIMESTAMP_TZ_FORMAT</code> database session setting before showing or submitting any page within the application. This value can be a literal string containing a valid Oracle timestamp with time zone format mask or an item reference through substitution syntax. If no value is specified, the default timestamp with time zone format is derived from the database session at runtime.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>For User Interface Theme, select a theme and click <span class="bold">Next</span>.</p>
<p>Themes are collections of templates that you can use to define the layout and style of an entire application. See <a href="ui_themes.htm#BABJEDBB">&#34;Managing Themes&#34;</a>.</p>
</li>
<li>
<p>Confirm your selections and click <span class="bold">Create Application</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABBIAFC"></a>
<div id="HTMDB28395" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.3.3</span> Create a Master Detail Form Using the Create Page Wizard</h3>
<p>The Create Page Wizard provides support for creating a master detail from two tables that do not have foreign key relationship defined in the database. Although Oracle recommends the use of foreign keys and properly defined relationships in the underlying database, developers do not always have the ability to modify their database model.</p>
<p>When created using a wizard, the master form on a master detail form page includes buttons that enable the user to move forward and backward within the master result set. While running the wizard, you choose which columns determine the navigation order. You also have the option to choose whether to create a two-page or three-page master detail form, with the detail records shown in a report with single-record editing on a separate page.</p>
<p>To create a master detail form using the Create Page Wizard:</p>
<ol>
<li>
<p>On the Workspace home page, click the <span class="bold">Application Builder</span> icon.</p>
</li>
<li>
<p>Select an application.</p>
</li>
<li>
<p>Click <span class="bold">Create Page</span>.</p>
</li>
<li>
<p>Select <span class="bold">Form</span> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>Select <span class="bold">Master Detail Form</span> and click <span class="bold">Next</span>.</p>
<p>The Master Detail Wizard appears.</p>
</li>
<li>
<p>On Define Master Table:</p>
<ol>
<li>
<p>Table/View Owner - Select the schema that owns the master table.</p>
</li>
<li>
<p>Table/View Name - Select the table or view which contains the columns to be included in the master page.</p>
<p>The columns in that object display.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>On Define Detail Table:</p>
<ol>
<li>
<p>Show Only Related Tables - Specify whether to restrict the list of detail tables to only those tables related to the master table. Select <span class="bold">Yes</span> or <span class="bold">No</span>.</p>
</li>
<li>
<p>Table/View Owner - Select the table or view owner. The default selected owner for the table or view is the same owner as for your application. If the owner of your application has select privileges on tables or views in other schemas, you may select another schema.</p>
</li>
<li>
<p>Table/View Name - Select the table or view which contains the columns to be included in the detail page.</p>
<p>The columns in that object appear.</p>
</li>
<li>
<p>Select columns for detail page - Select the columns to display in your detail page. You may add columns later.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
<p>Next, define a primary key. Forms perform insert, update and delete operations on table rows in the database. You identify the rows by using either a primary key defined on the table, or the ROWID pseudo column, which uniquely identifies a row in a table.</p>
</li>
<li>
<p>For Define Primary Key, select one for each table:</p>
<ul>
<li>
<p><span class="bold">Managed by Database (ROWID)</span> - Use the ROWID pseudo column to identify rows to update and delete.</p>
</li>
<li>
<p><span class="bold">Select Primary Key Column(s)</span> - Use the source table&#39;s primary key column(s).</p>
</li>
</ul>
</li>
<li>
<p>If you select <span class="bold">Managed by Database (ROWID)</span>:</p>
<ol>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
<li>
<p>For Master Options, define the relationship between the Master and Detail tables. You may type in the column names (fully qualified with table names), or choose them from the list. Click <span class="bold">Next</span>.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>If you select <span class="bold">Select Primary Key Column(s)</span>:</p>
<ol>
<li>
<p>On Define Primary Key, select the following for each table:</p>
<ul>
<li>
<p>Primary Key Column 1 - Select the first column of the primary key.</p>
</li>
<li>
<p>Primary Key Column 2 - If you have a compound primary key, specify the second primary key column in this attribute. This attribute is optional</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ul>
</li>
<li>
<p>For Primary Key Source, select the method by which the primary key is populated and click <span class="bold">Next</span>.</p>
<ul>
<li>
<p><span class="bold">Existing trigger</span> - Select this option if a before-insert trigger populates the primary key. You can also select this option if you plan on specifying the primary key column source later after completing the form.</p>
</li>
<li>
<p><span class="bold">Custom PL/SQL function</span> - Select this option to provide a PL/SQL function to generate returning key value.</p>
</li>
<li>
<p><span class="bold">Existing sequence</span> - Select this option to pick the sequence from a list of sequences available in the selected schema.</p>
</li>
</ul>
</li>
<li>
<p>For Master Options, specify whether to include master row navigation and click <span class="bold">Next</span>.</p>
<p>If you include master row navigation, define navigation order columns. If a navigation order column is not defined, the master update form navigates by the primary key column.</p>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>On Layout, specify how to build the master detail and click <span class="bold">Next</span>. Options include:</p>
<ul>
<li>
<p><span class="bold">Edit detail as tabular form on same page</span> creates a two page master detail. Edit detail on separate page creates a three page master detail.</p>
</li>
<li>
<p><span class="bold">Edit detail on separate page</span> creates a three page master detail.</p>
</li>
</ul>
</li>
<li>
<p>On Page Attributes:</p>
<ol>
<li>
<p>Page Attributes - Review and edit the master page and detail page information.</p>
</li>
<li>
<p>Breadcrumb - Specify whether to create a breadcrumb. To create breadcrumbs entries:</p>
<ul>
<li>
<p>Entry Name (Master Report) - Specify the name of the breadcrumb entry for the master report page.</p>
</li>
<li>
<p>Entry Name (Master Detail Page) - Specify the name of the breadcrumb entry for the master detail page.</p>
</li>
<li>
<p>Select Parent Entry - Select a parent entry for this breadcrumb entry.</p>
</li>
<li>
<p>Parent Entry - This item displays if you have chosen a parent entry.</p>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">Next</span>.</p>
</li>
</ol>
</li>
<li>
<p>On Tab Options, specify whether to include a tab set and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>Click <span class="bold">Create</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDGFCGB"></a>
<div id="HTMDB05031" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">10.1.4</span> Creating a Form <a id="sthref1549"></a>Manually</h2>
<p>You can also create a form manually by performing the following steps:</p>
<ul>
<li>
<p>Step 1 - Create an HTML region (to serve as a container for your page items).</p>
</li>
<li>
<p>Step 2 - Create items to display in the region.</p>
</li>
<li>
<p>Step 3 - Create processes and branches.</p>
</li>
</ul>
<p>To create a form manually by creating an HTML region:</p>
<ol>
<li>
<p>Navigate to the appropriate Page Definition. See <a href="bldr_pg_def_about.htm#BABJAICG">&#34;Accessing the Page Definition&#34;</a>.</p>
</li>
<li>
<p>Create an HTML region. See <a href="ui_region.htm#BABGAFDB">&#34;Creating a Region&#34;</a>.</p>
</li>
<li>
<p>Start adding items to the page. <a href="bldapp_item.htm#CEGHEEBA">&#34;Creating Page-Level Items&#34;</a>.</p>
</li>
</ol>
<div id="HTMDB25387" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1550"></a>
<h3 class="sect3"><span class="secnum">10.1.4.1</span> Processing a <a id="sthref1551"></a>Form</h3>
<p>Once you create a form, the next step is to process the data a user types by inserting into or updating the underlying database tables or views. There are three ways to process a form:</p>
<ul>
<li>
<p><a href="#CEGCHJGJ">Creating an Automatic Row (DML) Processing Process</a></p>
</li>
<li>
<p><a href="#CEGGJCAI">Creating a Process that Contains One or More Insert Statements</a></p>
</li>
<li>
<p><a href="#CEGGEACE">Using a PL/SQL API to Process Form Values</a></p>
</li>
</ul>
<a id="CEGCHJGJ"></a>
<div id="HTMDB25388" class="sect4">
<h4 class="sect4"><span class="secnum">10.1.4.1.1</span> Creating an Automatic Row (DML) Processing <a id="sthref1552"></a>Process</h4>
<p>One common way to implement a form is to manually create an Automatic Row Processing (DML) process. This approach offers three advantages. First, you are not required to provide any SQL coding. Second, Oracle Application Express performs DML processing for you. Third, this process automatically performs lost update detection. Lost update detection ensures data integrity in applications where data can be accessed concurrently.</p>
<p>To implement this approach you must:</p>
<ul>
<li>
<p>Add items, define the Item Source Type as Database Column, and specify a case-sensitive column name.</p>
</li>
<li>
<p>Select the option <span class="bold">Always overrides the cache value</span>.</p>
</li>
</ul>
<p>To create an Automatic Row Processing (DML) process:</p>
<ol>
<li>
<p>Navigate to the appropriate Page Definition. See <a href="bldr_pg_def_about.htm#BABJAICG">&#34;Accessing the Page Definition&#34;</a></p>
</li>
<li>
<p>Access the Create Page Process Wizard:</p>
<ul>
<li>
<p>Tree view - Under the appropriate location, right-click and click <span class="bold">Create Process</span>.</p>
</li>
<li>
<p>Component view - Under Processes, click the <span class="bold">Create</span> icon.</p>
</li>
</ul>
</li>
<li>
<p>Under Processes, click the <span class="bold">Create</span> icon.</p>
</li>
<li>
<p>Select the process <span class="bold">Data Manipulation</span>.</p>
</li>
<li>
<p>Select the process category <span class="bold">Automatic Row Processing (DML)</span>.</p>
</li>
<li>
<p>Specify the following process attributes:</p>
<ol>
<li>
<p>In the Name field, enter a name to identify the process.</p>
</li>
<li>
<p>In the Sequence field, specify a sequence number.</p>
</li>
<li>
<p>From the Point list, select the appropriate processing point. In most instances, select <span class="bold">Onload - After Header</span>.</p>
</li>
<li>
<p>From the Type list, select <span class="bold">Automated Row Processing (DML)</span>.</p>
</li>
</ol>
</li>
<li>
<p>Follow the on-screen instructions.</p>
</li>
</ol>
</div>
<!-- class="sect4" -->
<a id="CEGGJCAI"></a>
<div id="HTMDB25389" class="sect4">
<h4 class="sect4"><span class="secnum">10.1.4.1.2</span> Creating a Process that Contains One or More Insert Statements</h4>
<p>In this approach to form handling, you create one or more processes to handle insert, update, and delete actions. Instead of having the Application Express engine handling everything transparently, you are in complete control.</p>
<p>For example, suppose you have a form with three items:</p>
<ul>
<li>
<p><code>P1_ID</code> - A hidden item to store the primary key of the currently displayed row in a table.</p>
</li>
<li>
<p><code>P1_FIRST_NAME</code> - A text field for user input.</p>
</li>
<li>
<p><code>P1_LAST_NAME</code> - A text field for user input.</p>
</li>
</ul>
<p>Assume also there are three buttons labeled Insert, Update, and Delete. Also assume you have a table T that contains the columns <code>id</code>, <code>first_name</code>, and <code>last_name</code>. The table has a trigger that automatically populates the <code>ID</code> column when there is no value supplied.</p>
<p>To process the insertion of a new row, you create a conditional process of type PL/SQL that executes when the user clicks the Insert button. For example:</p>
<pre>BEGIN
  INSERT INTO T ( first_name, last_name )
     VALUES  (:P1_FIRST_NAME, :P1_LAST_NAME);
END; 
</pre>
<p>To process the updating of a row, you create another conditional process of type PL/SQL. For example:</p>
<pre>BEGIN
    UPDATE T
       SET first_name = :P1_FIRST_NAME,
           last_name = :P1_LAST_NAME
    WHERE ID = :P1_ID;
END; 
</pre>
<p>To process the deletion of a row, you create a conditional process that executes when the user clicks the Delete button. For example:</p>
<pre>BEGIN
    DELETE FROM T
    WHERE ID = :P1_ID;
END;
</pre></div>
<!-- class="sect4" -->
<a id="CEGGEACE"></a>
<div id="HTMDB25390" class="sect4">
<h4 class="sect4"><span class="secnum">10.1.4.1.3</span> Using a PL/SQL API to Process Form Values</h4>
<p>For certain types of applications, it is appropriate to centralize all access to tables in a single or a few PL/SQL packages. If you created a package to handle DML operations, you can call procedures and functions within this package from an After Submit PL/SQL process to process insert, updates, and delete requests.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="HTMDB25391" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1553"></a>
<h3 class="sect3"><span class="secnum">10.1.4.2</span> Populating <a id="sthref1554"></a>Forms</h3>
<p>Oracle Application Express populates a form either on load or when the Application Express engine renders the page. You can populate a form in the following ways:</p>
<ul>
<li>
<p>Create a process and define the type as Automated Row Fetch.</p>
</li>
<li>
<p>Populate the form manually by referencing a hidden session state item.</p>
</li>
</ul>
<p>To create an Automated Row Fetch process:</p>
<ol>
<li>
<p>Navigate to the appropriate Page Definition. See <a href="bldr_pg_def_about.htm#BABJAICG">&#34;Accessing the Page Definition&#34;</a>.</p>
</li>
<li>
<p>Access the Create Page Process Wizard:</p>
<ul>
<li>
<p>Tree view - Under the appropriate location, right-click and click <span class="bold">Create Process</span>.</p>
</li>
<li>
<p>Component view - Under Processes, click the <span class="bold">Create</span> icon.</p>
</li>
</ul>
</li>
<li>
<p>Select the process type <span class="bold">Data Manipulation</span>.</p>
</li>
<li>
<p>Select the process category <span class="bold">Automatic Row Fetch</span>.</p>
</li>
<li>
<p>Specify the following process attributes:</p>
<ol>
<li>
<p>In the Name field, enter a name to identify the process.</p>
</li>
<li>
<p>In the Sequence field, specify a sequence number.</p>
</li>
<li>
<p>From the Point list, select the appropriate processing point.</p>
</li>
<li>
<p>From the Type list, select <span class="bold">Automated Row Fetch</span>.</p>
</li>
</ol>
</li>
<li>
<p>Follow the on-screen instructions.</p>
</li>
</ol>
<p>You can also populate a form manually by referencing a hidden session state item. For example, the following code in an Oracle Application Express process of type PL/SQL would set the values of <code>ename</code> and <code>sal</code>. The example also demonstrates how to manually populate a form by referencing a hidden session state item named <code>P2_ID</code>.</p>
<pre>FOR C1 in (SELECT ename, sal
FROM emp WHERE ID=:P2_ID)
LOOP     
     :P2_ENAME := C1.ename;
     :P2_SAL := C1.sal;
END LOOP;
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code>C1</code> is an implicit cursor.</p>
</li>
<li>
<p>The value of <code>P2_ID</code> has been set.</p>
</li>
<li>
<p>The process point for this process would be set to execute (or fire) on or before <span class="bold">Onload - Before Regions</span>.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDBGEGA"></a>
<div id="HTMDB25392" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">10.1.5</span> Validating User Input in <a id="sthref1555"></a>Forms</h2>
<p>You can use validations to check data a user enters before processing. Once you create a validation and the associated error message, you can associate it with a specific item. You can choose to have validation error messages display inline (that is, on the page where the validation is performed) or on a separate error page.</p>
<p>Creating an inline error message involves these steps:</p>
<ul>
<li>
<p>Create a validation and specify error message text. To learn more, see <a href="bldr_validate.htm#BACFJDJA">&#34;Creating Item and Page Validations&#34;</a>.</p>
</li>
<li>
<p>Associate the validation with a specific item.</p>
</li>
</ul>
<p class="subhead2"><a id="HTMDB28948"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABDFGAE">Associating a Validation with a Specific Item</a></p>
</li>
<li>
<p><a href="#BABDDHFF">About Error Message</a></p>
</li>
</ul>
<a id="BABDFGAE"></a>
<div id="HTMDB25394" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.5.1</span> Associating a Validation with a Specific Item</h3>
<p>To associate an item with a validation and specify error message text:</p>
<ol>
<li>
<p>Navigate to the appropriate Page Definition. See <a href="bldr_pg_def_about.htm#BABJAICG">&#34;Accessing the Page Definition&#34;</a>.</p>
</li>
<li>
<p>Navigate to the Edit Page Validations page:</p>
<ul>
<li>
<p>Tree view - Right-click the validation name and click <span class="bold">Edit</span>.</p>
</li>
<li>
<p>Component view - Under Validations, select the validation item you want to associate.</p>
</li>
</ul>
<p>The attributes page for the validation appears.</p>
</li>
<li>
<p>Scroll down to Error Message:</p>
<ul>
<li>
<p>Error message display location - Verify the display location.</p>
</li>
<li>
<p>Associated Item - Select the item you want to associate with this validation.</p>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">Apply Changes</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABDDHFF"></a>
<div id="HTMDB25395" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3"><span class="secnum">10.1.5.2</span> About Error Message</h3>
<p><span class="bold">Error message display location</span> identifies where a validation error message displays. Validation error messages can display on an error page or inline within the existing page. Inline error messages can display in a notification area (defined as part of the page template) or within the field label.</p>
<p>To create a hard error that stops processes, including any remaining validations, you must display the error on an error page.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4579">
<tr>
<td class="cellalignment4588">
<table class="cellalignment4584">
<tr>
<td class="cellalignment4583"><a href="app_comp.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4583"><a href="bldapp_cal.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4590">
<table class="cellalignment4582">
<tr>
<td class="cellalignment4583"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4583"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4583"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4583"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4583"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4583"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>