<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-1635"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Native%20Oracle%20XML%C2%A0DB%20Web%20Services"></a><title>Native Oracle XML&nbsp;DB Web Services</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="Your applications can access Oracle Database using native Oracle XML&nbsp;DB Web services."/>
<meta name="keywords" content="Web service, SOAP, WSDL, Web service for database queries, pretty-printing, Web service output, pretty-printing output, Web service for accessing stored PL/SQL"/>
<meta name="dcterms.created" content="2016-12-08T13:53:25Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="XML DB Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E41152-15"/>
<meta name="dcterms.isVersionOf" content="ADXDB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="xdb15dbu.htm" title="Previous" type="text/html"/>
<link rel="Next" href="partpg6.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41152-15.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-108279B4-0315-4D8D-86A2-6487767ED280"></a> <span id="PAGE" style="display:none;">47/61</span> <!-- End Header -->
<a id="ADXDB3900"></a>
<h1 id="ADXDB-GUID-108279B4-0315-4D8D-86A2-6487767ED280" class="sect1"><span class="enumeration_chapter">34</span> Native Oracle XML&nbsp;DB Web Services</h1>
<div>
<p>Your applications can access Oracle Database using native Oracle XML&nbsp;DB Web services.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="xdb_web_services.htm#GUID-92C24371-A8A8-4956-9DC4-AE67EC67F1B1" title="Web services provide a standard way for applications to exchange information over the Internet and access services that implement business logic. Your applications can access Oracle Database using native Oracle XML&nbsp;DB Web services.">Overview of Native Oracle XML&nbsp;DB Web Services</a></p>
</li>
<li>
<p><a href="xdb_web_services.htm#GUID-BAF98FFF-EBDB-4477-9315-24CEF72C9AB7" title="To make Web services available, you must have the Oracle XML&nbsp;DB HTTP server up and running, and you must explicitly add Web service configuration. Then, to allow specific users to use Web services, you must grant them appropriate roles.">Configuring and Enabling Web Services for Oracle XML&nbsp;DB</a></p>
</li>
<li>
<p><a href="xdb_web_services.htm#GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6" title="The Oracle XML&nbsp;DB Web service for database queries is located at URL http://host:port/orawsv, where host and port are the database host and HTTP(S) port. It has an associated WSDL that specifies the formats of the incoming and outgoing documents using XML Schema. This WSDL is located at URL http://host:port/orawsv?wsdl.">Query Oracle XML&nbsp;DB Using a Web Service</a></p>
</li>
<li>
<p><a href="xdb_web_services.htm#GUID-E97E718E-0BD6-45C4-B1C9-B5EDABE68686" title="The Oracle XML&nbsp;DB Web service for accessing PL/SQL stored functions and procedures is located at URL http://host:port/orawsv/dbschema/package/fn_or_proc or, for a function or procedure that is standalone (not in a package ), http://host:port/orawsv/dbschema/fn_or_proc.">Access to PL/SQL Stored Procedures Using a Web Service</a></p>
</li>
</ul>
</div>
<a id="ADXDB5676"></a>
<div class="props_rev_3"><a id="GUID-92C24371-A8A8-4956-9DC4-AE67EC67F1B1"></a>
<h2 id="ADXDB-GUID-92C24371-A8A8-4956-9DC4-AE67EC67F1B1" class="sect2"><span class="enumeration_section">34.1</span> Overview of Native Oracle XML&nbsp;DB Web Services</h2>
<div>
<p>Web services provide a standard way for applications to exchange information over the Internet and access services that implement business logic. Your applications can access Oracle Database using native Oracle XML&nbsp;DB Web services.</p>
<p>One available service lets you issue SQL and XQuery queries and receive results as XML data. Another service provides access to all PL/SQL stored functions and procedures.</p>
<p>You can customize the input and output document formats when you use the latter service. If you do that then the WSDL is automatically generated by the native database Web services engine.</p>
<p>SOAP 1.1 is the version supported by Oracle XML&nbsp;DB. Applications use HTTP method <code>POST</code> to submit SOAP requests to native Oracle XML&nbsp;DB Web services. You can configure the locations of all native Oracle XML&nbsp;DB Web services and WSDL documents using the Oracle XML&nbsp;DB configuration file, <code>xdbconfig.xml</code>. You can also configure security settings for the Web services using the same configuration file.</p>
<p>You can use the <code>Accept-Charsets</code> field of the input HTTP header to specify the character set of Web-service responses. If this header field is omitted, then responses are in the database character set. The language of the input document and any error responses is the locale language of the database.</p>
<p>Error handling for native Oracle XML&nbsp;DB Web services uses the SOAP framework for faults.</p>
<div class="infoboxnotealso" id="GUID-92C24371-A8A8-4956-9DC4-AE67EC67F1B1__GUID-A89F646A-BBBD-4656-97B2-0F7F487FAC9A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="http://www.w3.org/2002/ws/" target="_blank"><code>http://www.w3.org/2002/ws/</code></a> for more information on Web services</p>
</li>
<li>
<p>The W3C SOAP primer, <a href="http://www.w3.org/TR/2000/NOTE-SOAP-20000508" target="_blank"><code>http://www.w3.org/TR/2000/NOTE-SOAP-20000508</code></a>, for more information on SOAP</p>
</li>
<li>
<p><a href="http://www.w3.org/TR/wsdl" target="_blank"><code>http://www.w3.org/TR/wsdl</code></a> for information on the Web Services Description Language (WSDL)</p>
</li>
<li>
<p><a href="http://www.w3.org/TR/2003/REC-soap12-part0-20030624/#L11549" target="_blank"><code>http://www.w3.org/TR/2003/REC-soap12-part0-20030624/#L11549</code></a> for information on SOAP fault handling</p>
</li>
<li>
<p><span class="q">&#34;<a href="appaman.htm#GUID-D1551B64-4A75-44CD-AA04-0A68018410AE" title="Oracle XML&nbsp;DB is managed internally through a configuration file, xdbconfig.xml, which is stored as a resource in Oracle XML&nbsp;DB Repository. As an alternative to using Oracle Enterprise Manager to configure Oracle XML&nbsp;DB, you can configure it directly using the Oracle XML&nbsp;DB configuration file.">Configuration of Oracle XML&nbsp;DB Using xdbconfig.xml</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
</div>
<a id="ADXDB5677"></a>
<div class="props_rev_3"><a id="GUID-BAF98FFF-EBDB-4477-9315-24CEF72C9AB7"></a>
<h2 id="ADXDB-GUID-BAF98FFF-EBDB-4477-9315-24CEF72C9AB7" class="sect2"><span class="enumeration_section">34.2</span> Configuring and Enabling Web Services for Oracle XML&nbsp;DB</h2>
<div>
<p>To make Web services available, you must have the Oracle XML&nbsp;DB HTTP server up and running, and you must explicitly add Web service configuration. Then, to allow specific users to use Web services, you must grant them appropriate roles.</p>
<div class="section">
<ol>
<li>
<p>Configure Web services &ndash; see <span class="q">&#34;<a href="xdb_web_services.htm#GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03" title="To make Web services available for Oracle XML&nbsp;DB, configure the servlet by logging on as user SYS and adding the servlet configuration to your Oracle XML&nbsp;DB configuration file, xdbconfig.xml. Then use procedures in PL/SQL package DBMS_XDB_CONFIG to add the servlet that is named by the servlet configuration.">Configuring Web Services for Oracle XML&nbsp;DB</a>&#34;</span>.</p>
</li>
<li>
<p>Enable Web services for specific users, by granting them appropriate roles &ndash; <span class="q">&#34;<a href="xdb_web_services.htm#GUID-3E89F8D5-8469-4FF5-9E5F-8541291319C0" title="To enable Web services for a specific user, log on as user SYS and grant role XDB_WEBSERVICES to the user. This role enables Web services over HTTPS. This role is required to be able to use Web services.">Enabling Web Services for Specific Users</a>&#34;</span>.</p>
</li>
</ol>
<p>For security reasons, Oracle XML&nbsp;DB is not preconfigured with native Web services enabled.</p>
<div class="infoboxnotealso" id="GUID-BAF98FFF-EBDB-4477-9315-24CEF72C9AB7__GUID-30DC6370-E8EE-49E8-B540-D348B82E4378">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="xdb22pro.htm#GUID-30DE120A-8FF3-44BB-8C21-CFF25F781C45" title="Oracle XML&nbsp;DB implements HyperText Transfer Protocol (HTTP), HTTP 1.1 as defined in the RFC2616 specification.">HTTP(S) and Oracle XML&nbsp;DB Protocol Server</a>&#34;</span> for information about Oracle XML&nbsp;DB HTTP server</p>
</div>
</div>
<!-- class="section" --></div>
<a id="ADXDB5679"></a><a id="ADXDB5680"></a><a id="ADXDB5678"></a>
<div class="props_rev_3"><a id="GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03"></a>
<h3 id="ADXDB-GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03" class="sect3"><span class="enumeration_section">34.2.1</span> Configuring Web Services for Oracle XML&nbsp;DB</h3>
<div>
<p>To make Web services available for Oracle XML&nbsp;DB, configure the servlet by logging on as user <code>SYS</code> and adding the servlet configuration to your Oracle XML&nbsp;DB configuration file, <code>xdbconfig.xml</code>. Then use procedures in PL/SQL package <code>DBMS_XDB_CONFIG</code> to add the servlet that is named by the servlet configuration.</p>
<div class="section">
<p>The servlet configuration to add is shown as the query output of <a href="xdb_web_services.htm#GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03__CHDGGFCI">Example 34-2</a>.</p>
<p><a href="xdb_web_services.htm#GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03__CHDIICEJ">Example 34-1</a> shows how to use procedures in PL/SQL package <code>DBMS_XDB_CONFIG</code> to add the servlet. <a href="xdb_web_services.htm#GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03__CHDGGFCI">Example 34-2</a> shows how to verify that the servlet was added correctly.</p>
<div class="infoboxnotealso" id="GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03__GUID-10D138B2-E7F8-452D-ACB8-E1B1F55312AF">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="appaman.htm#GUID-D1551B64-4A75-44CD-AA04-0A68018410AE" title="Oracle XML&nbsp;DB is managed internally through a configuration file, xdbconfig.xml, which is stored as a resource in Oracle XML&nbsp;DB Repository. As an alternative to using Oracle Enterprise Manager to configure Oracle XML&nbsp;DB, you can configure it directly using the Oracle XML&nbsp;DB configuration file.">Configuration of Oracle XML&nbsp;DB Using xdbconfig.xml</a>&#34;</span> for more information about configuring Oracle XML&nbsp;DB with <code>xdbconfig.xml</code></p>
</div>
</div>
<!-- class="section" -->
<div class="example" id="GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03__CHDIICEJ">
<p class="titleinexample">Example 34-1 Adding a Web Services Configuration Servlet</p>
<pre dir="ltr">DECLARE
  SERVLET_NAME VARCHAR2(32) := &#39;orawsv&#39;;
BEGIN
  DBMS_XDB_CONFIG.deleteServletMapping(SERVLET_NAME);
  DBMS_XDB_CONFIG.deleteServlet(SERVLET_NAME);
  DBMS_XDB_CONFIG.addServlet(
    NAME     =&gt; SERVLET_NAME,
    LANGUAGE =&gt; &#39;C&#39;,
    DISPNAME =&gt; &#39;Oracle Query Web Service&#39;,
    DESCRIPT =&gt; &#39;Servlet for issuing queries as a Web Service&#39;,
    SCHEMA   =&gt; &#39;XDB&#39;);
  DBMS_XDB_CONFIG.addServletSecRole(SERVNAME =&gt; SERVLET_NAME,
                                    ROLENAME =&gt; &#39;XDB_WEBSERVICES&#39;,
                                    ROLELINK =&gt; &#39;XDB_WEBSERVICES&#39;);
  DBMS_XDB_CONFIG.addServletMapping(PATTERN =&gt; &#39;/orawsv/*&#39;,
                                    NAME    =&gt; SERVLET_NAME);
END;
/
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-8F1319B4-297E-461D-8F57-EAC4C63EBC03__CHDGGFCI">
<p class="titleinexample">Example 34-2 Verifying Addition of Web Services Configuration Servlet</p>
<pre dir="ltr">XQUERY declare default element namespace &#34;http://xmlns.oracle.com/xdb/xdbconfig.xsd&#34;; (: :)
       (: This path is split over two lines for documentation purposes only.
          The path should actually be a single long line. :)
       for $doc in fn:doc(&#34;/xdbconfig.xml&#34;)/xdbconfig/sysconfig/protocolconfig/httpconfig/
        webappconfig/servletconfig/servlet-list/servlet[servlet-name=&#39;orawsv&#39;]
       return $doc
/
 
Result Sequence
-------------------------------------------------------------------------
&lt;servlet xmlns=&#34;http://xmlns.oracle.com/xdb/xdbconfig.xsd&#34;&gt;
  &lt;servlet-name&gt;orawsv&lt;/servlet-name&gt;
  &lt;servlet-language&gt;C&lt;/servlet-language&gt;
  &lt;display-name&gt;Oracle Query Web Service&lt;/display-name&gt;
  &lt;description&gt;Servlet for issuing queries as a Web Service&lt;/description&gt;
  &lt;servlet-schema&gt;XDB&lt;/servlet-schema&gt;
  &lt;security-role-ref&gt;
    &lt;description/&gt;
    &lt;role-name&gt;XDB_WEBSERVICES&lt;/role-name&gt;
    &lt;role-link&gt;XDB_WEBSERVICES&lt;/role-link&gt;
  &lt;/security-role-ref&gt;
&lt;/servlet&gt;
 
1 item(s) selected.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ADXDB5681"></a>
<div class="props_rev_3"><a id="GUID-3E89F8D5-8469-4FF5-9E5F-8541291319C0"></a>
<h3 id="ADXDB-GUID-3E89F8D5-8469-4FF5-9E5F-8541291319C0" class="sect3"><span class="enumeration_section">34.2.2</span> Enabling Web Services for a Specific User</h3>
<div>
<p>To enable Web services for a specific user, log on as user <code>SYS</code> and grant role <code>XDB_WEBSERVICES</code> to the user. This role enables Web services over HTTPS. This role is <span class="italic">required</span> to be able to use Web services.</p>
<div class="section">
<p>User <code>SYS</code> can, in <span class="italic">addition</span>, grant one or both of the following roles to the user:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code>XDB_WEBSERVICES_OVER_HTTP</code> &ndash; Enable use of Web services over HTTP (not just HTTPS).</p>
</li>
<li>
<p><code>XDB_WEBSERVICES_WITH_PUBLIC</code> &ndash; Enable access, using Web services, to database objects that are accessible to <code>PUBLIC</code>.</p>
</li>
</ul>
<p>If a user is not granted <code>XDB_WEBSERVICES_WITH_PUBLIC</code>, then the user has access, using Web services, to all database objects (regardless of owner) that would normally be available to the user, <span class="italic">except</span> for <code>PUBLIC</code> objects. To make <code>PUBLIC</code> objects accessible to a user through Web services, <code>SYS</code> must grant role <code>XDB_WEBSERVICES_WITH_PUBLIC</code> to the user. With this role, a user can access any <code>PUBLIC</code> objects that would normally be available to the user if logged on to the database.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ADXDB5683"></a><a id="ADXDB5684"></a><a id="ADXDB5685"></a><a id="ADXDB5682"></a>
<div class="props_rev_3"><a id="GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6"></a>
<h2 id="ADXDB-GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6" class="sect2"><span class="enumeration_section">34.3</span> Query Oracle XML&nbsp;DB Using a Web Service</h2>
<div>
<p>The Oracle XML&nbsp;DB Web service for database queries is located at URL <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv</code></span>, where <span class="italic"><code>host</code></span> and <span class="italic"><code>port</code></span> are the database host and HTTP(S) port. It has an associated WSDL that specifies the formats of the incoming and outgoing documents using XML Schema. This WSDL is located at URL <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv?wsdl</code></span>.</p>
<p>Your application sends database queries to the Web service as XML documents that conform to the XML schema listed in <a href="xdb_web_services.htm#GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDEGIEE">Example 34-3</a>.</p>
<p>This XML schema is contained in the WSDL document. The important parts of incoming query documents are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>query_text</code> &ndash; The text of your query. Attribute <code>type</code> specifies the type of your query: either <code>SQL</code> or <code>XQUERY</code>.</p>
</li>
<li>
<p><code>bind</code> &ndash; A scalar bind-variable value. Attribute <code>name</code> names the variable.</p>
</li>
<li>
<p><code>bindXML</code> &ndash; An <code>XMLType</code> bind-variable value.</p>
</li>
<li>
<p><code>null_handling</code> &ndash; How <code>NULL</code> values returned by the query are to be treated:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>DROP_NULLS</code> &ndash; Put nothing in the output (no element). This is the default behavior.</p>
</li>
<li>
<p><code>NULL_ATTR</code> &ndash; Use an empty element for <code>NULL</code>-value output. Use attribute <code>xsi:nil = &#34;true&#34;</code> in the element.</p>
</li>
<li>
<p><code>EMPTY_TAG</code> &ndash; Use an empty element for <code>NULL</code>-value output, without a <code>nil</code> attribute.</p>
</li>
</ul>
</li>
<li>
<p><code>max_rows</code> &ndash; The maximum number of rows to output for the query. By default, all rows are returned.</p>
</li>
<li>
<p><code>skip_rows</code> &ndash; The number of query output rows to skip, before including rows in the data returned in the SOAP message. You can use this in connection with <code>max_rows</code> to provide paginated output. The default value is zero (<code>0</code>).</p>
</li>
<li>
<p><code>pretty_print</code> &ndash; Whether the output document should be formatted for pretty-printing. The default value is <code>true</code>, meaning that the document is pretty-printed. When the value is <code>false</code>, no pretty-printing is done, and output rows are not broken with newline characters.</p>
</li>
<li>
<p><code>indentation_width</code> &ndash; The number of characters to indent nested elements that start a new line. The default value is one (<code>1</code>).</p>
</li>
<li>
<p><code>rowset_tag</code> &ndash; Name of the root element of the output document.</p>
</li>
<li>
<p><code>row_tag</code> &ndash; Name of the element whose value is a single row of query output.</p>
</li>
<li>
<p><code>item_tags_for_coll</code> &ndash; Whether to generate collection elements with name <span class="italic"><code>collection_name</code></span><code>_item</code>, where <span class="italic"><code>collection_name</code></span> is the name of the collection.</p>
</li>
</ul>
<p>These elements have the same meanings as corresponding parameters of procedures in PL/SQL package <code>DBMS_XMLGEN</code>.</p>
<p><a href="xdb_web_services.htm#GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDCCADC">Example 34-4</a> and <a href="xdb_web_services.htm#GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDFJJEE">Example 34-5</a> show the input and output of a simple SQL query.</p>
<p>In <a href="xdb_web_services.htm#GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDCCADC">Example 34-4</a>, the query text is enclosed in <code>&lt;![CDATA[</code>...<code>]]&gt;</code>. Although not strictly necessary in this example, it is appropriate to do this generally, because queries often contain characters such as <code>&lt;</code> and <code>&gt;</code>. Element <code>bind</code> is used to bind a value (<code>8300</code>) to the bind variable named <code>e</code>. Element <code>pretty_print</code> turns off pretty-printing of the output.</p>
<div class="example" id="GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDEGIEE">
<p class="titleinexample">Example 34-3 XML Schema for Database Queries To Be Processed by Web Service</p>
<pre dir="ltr">&lt;schema xmlns=&#34;http://www.w3.org/2001/XMLSchema&#34;
        xmlns:xdb=&#34;http://xmlns.oracle.com/xdb&#34;
        targetNamespace=&#34;http://xmlns.oracle.com/orawsv&#34;&gt;
  &lt;element name=&#34;query&#34;&gt;
    &lt;complexType&gt;
      &lt;sequence&gt;
        &lt;element name=&#34;<span class="bold">query_text</span>&#34;&gt;
          &lt;complexType&gt;
            &lt;simpleContent&gt;
              &lt;extension base=&#34;string&#34;&gt;
                &lt;attribute name=&#34;<span class="bold">type</span>&#34;&gt;
                  &lt;simpleType&gt;
                    &lt;restriction base=&#34;NMTOKEN&#34;&gt;
                      &lt;enumeration value=&#34;SQL&#34;/&gt;
                      &lt;enumeration value=&#34;XQUERY&#34;/&gt;
                    &lt;/restriction&gt;
                  &lt;/simpleType&gt;
                &lt;/attribute&gt;
              &lt;/extension&gt;
            &lt;/simpleContent&gt;
          &lt;/complexType&gt;
        &lt;/element&gt;
        &lt;choice maxOccurs=&#34;unbounded&#34;&gt;
          &lt;element name=&#34;<span class="bold">bind</span>&#34;&gt;
            &lt;complexType&gt;
              &lt;simpleContent&gt;
                &lt;extension base=&#34;string&#34;&gt;
                  &lt;attribute name=&#34;<span class="bold">name</span>&#34; type=&#34;string&#34;/&gt;
                &lt;/extension&gt;
              &lt;/simpleContent&gt;
            &lt;/complexType&gt;
          &lt;/element&gt;
          &lt;element name=&#34;<span class="bold">bindXML</span>&#34; type=&#34;any&#34;/&gt;
        &lt;/choice&gt;
        &lt;element name=&#34;<span class="bold">null_handling</span>&#34; minOccurs=&#34;0&#34;&gt;
          &lt;simpleType&gt;
            &lt;restriction base=&#34;NMTOKEN&#34;&gt;
              &lt;enumeration value=&#34;DROP_NULLS&#34;/&gt;
              &lt;enumeration value=&#34;NULL_ATTR&#34;/&gt;
              &lt;enumeration value=&#34;EMPTY_TAG&#34;/&gt;
            &lt;/restriction&gt;
          &lt;/simpleType&gt;
        &lt;/element&gt;
        &lt;element name=&#34;<span class="bold">max_rows</span>&#34; type=&#34;positiveInteger&#34; minOccurs=&#34;0&#34;/&gt;
        &lt;element name=&#34;<span class="bold">skip_rows</span>&#34; type=&#34;positiveInteger&#34; minOccurs=&#34;0&#34;/&gt;
        &lt;element name=&#34;<span class="bold">pretty_print</span>&#34; type=&#34;boolean&#34; minOccurs=&#34;0&#34;/&gt;
        &lt;element name=&#34;<span class="bold">indentation_width</span>&#34; type=&#34;positiveInteger&#34; minOccurs=&#34;0&#34;/&gt;
        &lt;element name=&#34;<span class="bold">rowset_tag</span>&#34; type=&#34;string&#34; minOccurs=&#34;0&#34;/&gt;
        &lt;element name=&#34;<span class="bold">row_tag</span>&#34; type=&#34;string&#34; minOccurs=&#34;0&#34;/&gt;
        &lt;element name=&#34;<span class="bold">item_tags_for_coll</span>&#34; type=&#34;boolean&#34; minOccurs=&#34;0&#34;/&gt;
      &lt;/sequence&gt;
    &lt;/complexType&gt;
  &lt;/element&gt;
&lt;/schema&gt;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDCCADC">
<p class="titleinexample">Example 34-4 Input XML Document for SQL Query Using Query Web Service</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34; ?&gt;
&lt;env:Envelope xmlns:env=&#34;http://www.w3.org/2002/06/soap-envelope &#34;&gt;
  &lt;env:Body&gt;
    &lt;<span class="bold">query</span> xmlns=&#34;http://xmlns.oracle.com/orawsv&#34;&gt;
      &lt;<span class="bold">query_text</span> type=&#34;SQL&#34;&gt;
        &lt;![CDATA[SELECT * FROM employees WHERE salary = <span class="bold">:e</span>]]&gt;
      &lt;/query_text&gt;
      &lt;<span class="bold">bind</span> name=&#34;<span class="bold">e</span>&#34;&gt;8300&lt;/bind&gt;
      &lt;<span class="bold">pretty_print</span>&gt;false&lt;/pretty_print&gt;
    &lt;/query&gt;
  &lt;/env:Body&gt;
&lt;/env:Envelope&gt;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-026ABA35-418D-4DC5-8660-ACF0D92FF7F6__CHDFJJEE">
<p class="titleinexample">Example 34-5 Output XML Document for SQL Query Using Query Web Service</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34;?&gt;
&lt;soap:Envelope xmlns:soap=&#34;http://www.w3.org/2002/06/soap-envelope&#34;&gt;
&lt;soap:Body&gt;
&lt;ROWSET&gt;&lt;ROW&gt;&lt;EMPLOYEE_ID&gt;206&lt;/EMPLOYEE_ID&gt;&lt;FIRST_NAME&gt;William&lt;/FIRST_NAME&gt;&lt;LAST_NAME&gt;G
ietz&lt;/LAST_NAME&gt;&lt;EMAIL&gt;WGIETZ&lt;/EMAIL&gt;&lt;PHONE_NUMBER&gt;515.123.8181&lt;/PHONE_NUMBER&gt;&lt;HIRE_DATE&gt;07-JUN-
94&lt;/HIRE_DATE&gt;&lt;JOB_ID&gt;AC_ACCOUNT&lt;/JOB_ID&gt;&lt;SALARY&gt;8300&lt;/SALARY&gt;&lt;MANAGER_ID&gt;205&lt;/MANAGER_ID
&gt;&lt;DEPARTMENT_ID&gt;110&lt;/DEPARTMENT_ID&gt;&lt;/ROW&gt;&lt;/ROWSET&gt;
&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ADXDB5687"></a><a id="ADXDB5686"></a>
<div class="props_rev_3"><a id="GUID-E97E718E-0BD6-45C4-B1C9-B5EDABE68686"></a>
<h2 id="ADXDB-GUID-E97E718E-0BD6-45C4-B1C9-B5EDABE68686" class="sect2"><span class="enumeration_section">34.4</span> Access to PL/SQL Stored Procedures Using a Web Service</h2>
<div>
<p>The Oracle XML&nbsp;DB Web service for accessing PL/SQL stored functions and procedures is located at URL <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv</code></span><code>/</code><span class="italic"><code>dbschema</code></span><code>/</code><span class="italic"><code>package</code></span><code>/</code><span class="italic"><code>fn_or_proc</code></span> or, for a function or procedure that is standalone (not in a package ), <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv</code></span><code>/</code><span class="italic"><code>dbschema</code></span><code>/</code><span class="italic"><code>fn_or_proc</code></span>.</p>
<p>Here, <span class="italic"><code>host</code></span> and <span class="italic"><code>port</code></span> are the database host and HTTP(S) port, <span class="italic"><code>fn_or_proc</code></span> is the stored function or procedure name, <span class="italic"><code>package</code></span> is its package, and <span class="italic"><code>dbschema</code></span> is the database schema owning that package.</p>
<p>The input XML document must contain the inputs needed by the function or procedure. The output XML document contains the return value and the values of all <code>OUT</code> variables.</p>
<p>The names of the XML elements in the input and output documents correspond to the variable names of the function or procedure. The generated WSDL document shows you the exact XML element names. This is the naming convention used:</p>
<ul style="list-style-type: disc;">
<li>
<p>The XML element introducing the input to a PL/SQL function is named <span class="italic"><code>function-name</code></span><span class="bold"><code>Input</code></span>, where <span class="italic"><code>function-name</code></span> is the name of the function (uppercase).</p>
</li>
<li>
<p>The XML elements introducing input parameters for the function are named <span class="italic"><code>param-name</code></span><span class="bold"><code>-</code></span><span class="italic"><code>param-type</code></span><span class="bold"><code>-</code></span><span class="italic"><code>io-mode</code></span>, where <span class="italic"><code>param-name</code></span> is the name of the parameter (uppercase), <span class="italic"><code>param-type</code></span> is its SQL data type, and <span class="italic"><code>io-mode</code></span> is its input-output mode, as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold"><code>IN</code></span> &ndash; <code>IN</code> mode</p>
</li>
<li>
<p><span class="bold"><code>OUT</code></span> &ndash; <code>OUT</code> mode</p>
</li>
<li>
<p><span class="bold"><code>INOUT</code></span> &ndash; <code>IN OUT</code> mode</p>
</li>
</ul>
</li>
<li>
<p>The XML element introducing the output from a PL/SQL function is named <span class="bold"><code>S</code></span><span class="italic"><code>return-type</code></span><span class="bold"><code>-</code></span><span class="italic"><code>function-name</code></span><span class="bold"><code>Output</code></span>, where <span class="italic"><code>return-type</code></span> is the SQL data type of the return value (uppercase), and <span class="italic"><code>function-name</code></span> is the name of the function (uppercase).</p>
</li>
<li>
<p>The XML elements introducing output parameters for the function are named the same as the output parameters themselves (uppercase). The element introducing the return value is named <code>RETURN</code>.</p>
</li>
</ul>
<p>The return value of a function is in the <code>RETURN</code> element of the output document, which is always the first element in the document. This return-value position disambiguates it from any <code>OUT</code> parameter that might be named &#34;<code>RETURN</code>&#34;.</p>
<p>Each stored function or procedure is associated with a separate, dynamic Web service that has its own, generated WSDL document. This WSDL document is located at URL <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv</code></span><code>/</code><span class="italic"><code>dbschema</code></span><code>/</code><span class="italic"><code>package</code></span><code>/</code><span class="italic"><code>fn_or_proc</code></span><span class="bold"><code>?wsdl</code></span> or <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv</code></span><code>/</code><span class="italic"><code>dbschema</code></span><code>/</code><span class="italic"><code>fn_or_proc</code></span><span class="bold"><code>?wsdl</code></span>. In addition, you can optionally generate a single WSDL document to be used for all stored functions and procedures in a given package. The URL for that WSDL document is <code>http://</code><span class="italic"><code>host</code></span><code>:</code><span class="italic"><code>port</code></span><code>/</code><span class="bold"><code>orawsv</code></span><code>/</code><span class="italic"><code>dbschema</code></span><code>/</code><span class="italic"><code>package</code></span><span class="bold"><code>?wsdl</code></span>.</p>
<p>Data types in the incoming and outgoing XML documents are mapped to SQL data types for use by the stored function or procedure, according to <a href="xdb_web_services.htm#GUID-E97E718E-0BD6-45C4-B1C9-B5EDABE68686__CHDGBFID" title="Web Service Mapping Between XML and SQL Data Types">Table 34-1</a>. These are the only data types that are supported.</p>
<div class="tblformal" id="GUID-E97E718E-0BD6-45C4-B1C9-B5EDABE68686__CHDGBFID">
<p class="titleintable">Table 34-1 Web Service Mapping Between XML and Oracle Database Data Types</p>
<table class="cellalignment3420" title="Web Service Mapping Between XML and Oracle Database Data Types" summary="Web Service Mapping Between XML and SQL Data Types">
<thead>
<tr class="cellalignment3411">
<th class="cellalignment3544" id="d166152e1151">Oracle Database Data Type</th>
<th class="cellalignment3545" id="d166152e1154">XML Schema Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1159" headers="d166152e1151">
<p><code>CHAR</code>, <code>VARCHAR2</code>, <code>VARCHAR</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1159 d166152e1154">
<p><code>xsd:string</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1174" headers="d166152e1151">
<p><code>DATE</code> &ndash; Dates must be in the database format.</p>
</td>
<td class="cellalignment3547" headers="d166152e1174 d166152e1154">
<p><code>xsd:date</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1184" headers="d166152e1151">
<p><code>TIMESTAMP</code>, <code>TIMESTAMP WITH TIMEZONE</code>, <code>TIMESTAMP WITH LOCAL TIMEZONE</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1184 d166152e1154">
<p><code>xsd:dateTime</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1199" headers="d166152e1151">
<p><code>INTERVAL YEAR TO MONTH</code>, <code>INTERVAL DAY TO SECOND</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1199 d166152e1154">
<p><code>xsd:duration</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1211" headers="d166152e1151">
<p><code>NUMBER</code>, <code>BINARY_DOUBLE</code>, <code>BINARY_FLOAT</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1211 d166152e1154">
<p><code>xsd:double</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1226" headers="d166152e1151">
<p><code>INT</code>, <code>INTEGER</code>, <code>SMALLINT</code>, <code>PLS_INTEGER</code>, <code>BINARY_INTEGER</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1226 d166152e1154">
<p><code>xsd:integer</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1247" headers="d166152e1151">
<p><code>RAW</code>, <code>BLOB</code>, <code>REF</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1247 d166152e1154">
<p><code>xsd:hexBinary</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1262" headers="d166152e1151">
<p>PL/SQL <code>BOOLEAN</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1262 d166152e1154">
<p><code>xsd:boolean</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1272" headers="d166152e1151">
<p>Object types</p>
</td>
<td class="cellalignment3547" headers="d166152e1272 d166152e1154">
<p><code>complexType</code></p>
</td>
</tr>
<tr class="cellalignment3411">
<td class="cellalignment3546" id="d166152e1280" headers="d166152e1151">
<p><code>XMLType</code></p>
</td>
<td class="cellalignment3547" headers="d166152e1280 d166152e1154">
<p>empty <code>complexType</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>An object type is represented in XML as a complex-type element named the same as the object type. The object attributes are represented as children of this element.</p>
</div>
<a id="ADXDB5689"></a><a id="ADXDB5690"></a><a id="ADXDB5691"></a><a id="ADXDB5692"></a><a id="ADXDB5688"></a>
<div class="props_rev_3"><a id="GUID-6376B342-3B65-441D-82D5-8F0607C4256F"></a>
<h3 id="ADXDB-GUID-6376B342-3B65-441D-82D5-8F0607C4256F" class="sect3"><span class="enumeration_section">34.4.1</span> Using a PL/SQL Function with a Web Service: Example</h3>
<div>
<p>Examples present a PL/SQL function and its access using a Web service. The function takes as input a department ID and name. It returns the salary total for the department. It also returns, as in-out and output parameters, respectively, the department name and the number of employees in the department.</p>
<div class="section">
<p>The default value of the department ID is <code>20</code>. In this simple example, the input value of the in-out parameter <code>dept_name</code> is not actually used. It is ignored, and the correct name is returned.</p>
<p><a href="xdb_web_services.htm#GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDIHFIH">Example 34-6</a> shows the function definition. <a href="xdb_web_services.htm#GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDGGCFJ">Example 34-7</a> shows the WSDL document that is created automatically from this function definition. <a href="xdb_web_services.htm#GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDEFFFB">Example 34-8</a> shows an input document that invokes the stored function. <a href="xdb_web_services.htm#GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDIBFIH">Example 34-9</a> shows the resulting output document.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDIHFIH">
<p class="titleinexample">Example 34-6 Definition of PL/SQL Function Used for Web-Service Access</p>
<pre dir="ltr">CREATE OR REPLACE PACKAGE salary_calculator AUTHID CURRENT_USER AS
  FUNCTION TotalDepartmentSalary (dept_id    IN     NUMBER DEFAULT 20,
                                  dept_name  IN OUT VARCHAR2,
                                  nummembers OUT    NUMBER)
    RETURN NUMBER;
END salary_calculator;
/
CREATE OR REPLACE PACKAGE BODY salary_calculator AS
  FUNCTION TotalDepartmentSalary (dept_id    IN     NUMBER DEFAULT 20,
                                  dept_name  IN OUT VARCHAR2,
                                  nummembers OUT    NUMBER)
    RETURN NUMBER IS
      sum_sal NUMBER;
      BEGIN
        SELECT SUM(salary) INTO sum_sal FROM employees
          WHERE department_id = dept_id;
        SELECT department_name INTO dept_name FROM departments
          WHERE department_name = dept_name;
        SELECT count(*) INTO nummembers FROM employees
          WHERE department_id = dept_id;
    RETURN sum_sal;
  END;
END;         
/
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDGGCFJ">
<p class="titleinexample">Example 34-7 WSDL Document Corresponding to a Stored PL/SQL Function</p>
<pre dir="ltr">&lt;definitions name=&#34;SALARY_CALCULATOR&#34;
             targetNamespace=&#34;http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR&#34;
             xmlns=&#34;http://schemas.xmlsoap.org/wsdl/&#34;
             xmlns:tns=&#34;http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR&#34;
             xmlns:xsd=&#34;http://www.w3.org/2001/XMLSchema&#34;
             xmlns:soap=&#34;http://schemas.xmlsoap.org/wsdl/soap/&#34;&gt;
  &lt;types&gt;
    &lt;xsd:schema targetNamespace=&#34;http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR&#34;
                elementFormDefault=&#34;qualified&#34;&gt;
      &lt;xsd:element name=&#34;<span class="bold">SNUMBER-TOTALDEPARTMENTSALARYInput</span>&#34;&gt;
        &lt;xsd:complexType&gt;
          &lt;xsd:sequence&gt;
            &lt;xsd:element name=&#34;<span class="bold">NUMMEMBERS-NUMBER-OUT</span>&#34;&gt;
              &lt;xsd:complexType/&gt;
            &lt;/xsd:element&gt;
            &lt;xsd:element name=&#34;<span class="bold">DEPT_NAME-VARCHAR2-INOUT</span>&#34; type=&#34;xsd:string&#34;/&gt;
            &lt;xsd:element name=&#34;<span class="bold">DEPT_ID-NUMBER-IN</span>&#34; type=&#34;xsd:double&#34;/&gt;
          &lt;/xsd:sequence&gt;
        &lt;/xsd:complexType&gt;
      &lt;/xsd:element&gt;
      &lt;xsd:element name=&#34;<span class="bold">TOTALDEPARTMENTSALARYOutput</span>&#34;&gt;
        &lt;xsd:complexType&gt;
          &lt;xsd:sequence&gt;
            &lt;xsd:element name=&#34;<span class="bold">RETURN</span>&#34; type=&#34;xsd:double&#34;/&gt;
            &lt;xsd:element name=&#34;<span class="bold">NUMMEMBERS</span>&#34; type=&#34;xsd:double&#34;/&gt;
            &lt;xsd:element name=&#34;<span class="bold">DEPT_NAME</span>&#34; type=&#34;xsd:string&#34;/&gt;
          &lt;/xsd:sequence&gt;
        &lt;/xsd:complexType&gt;
      &lt;/xsd:element&gt;
    &lt;/xsd:schema&gt;
  &lt;/types&gt;
  &lt;message name=&#34;TOTALDEPARTMENTSALARYInputMessage&#34;&gt;
    &lt;part name=&#34;parameters&#34; element=&#34;tns:SNUMBER-TOTALDEPARTMENTSALARYInput&#34;/&gt;
  &lt;/message&gt;
  &lt;message name=&#34;TOTALDEPARTMENTSALARYOutputMessage&#34;&gt;
    &lt;part name=&#34;parameters&#34; element=&#34;tns:TOTALDEPARTMENTSALARYOutput&#34;/&gt;
  &lt;/message&gt;
  &lt;portType name=&#34;SALARY_CALCULATORPortType&#34;&gt;
    &lt;operation name=&#34;TOTALDEPARTMENTSALARY&#34;&gt;
      &lt;input message=&#34;tns:TOTALDEPARTMENTSALARYInputMessage&#34;/&gt;
      &lt;output message=&#34;tns:TOTALDEPARTMENTSALARYOutputMessage&#34;/&gt;
    &lt;/operation&gt;
  &lt;/portType&gt;
 &lt;binding name=&#34;SALARY_CALCULATORBinding&#34; type=&#34;tns:SALARY_CALCULATORPortType&#34;&gt;
    &lt;soap:binding style=&#34;document&#34; transport=&#34;http://schemas.xmlsoap.org/soap/http&#34;/&gt;
    &lt;operation name=&#34;TOTALDEPARTMENTSALARY&#34;&gt;
      &lt;soap:operation soapAction=&#34;TOTALDEPARTMENTSALARY&#34;/&gt;
      &lt;input&gt;
        &lt;soap:body parts=&#34;parameters&#34; use=&#34;literal&#34;/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;soap:body parts=&#34;parameters&#34; use=&#34;literal&#34;/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
  &lt;/binding&gt;
  &lt;service name=&#34;SALARY_CALCULATORService&#34;&gt;
    &lt;documentation&gt;Oracle Web Service&lt;/documentation&gt;
    &lt;port name=&#34;SALARY_CALCULATORPort&#34; binding=&#34;tns:SALARY_CALCULATORBinding&#34;&gt;
      &lt;soap:address location=&#34;httpS://example:8088/orawsv/HR/SALARY_CALCULATOR&#34;/&gt;
     &lt;/port&gt;
  &lt;/service&gt;
&lt;/definitions&gt;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDEFFFB">
<p class="titleinexample">Example 34-8 Input XML Document for PL/SQL Query Using Web Service</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34; ?&gt;&lt;soap:Envelope 
xmlns:soap=&#34;http://www.w3.org/2002/06/soap-envelope&#34;&gt;&lt;soap:Body&gt;&lt;SNUMBER-
TOTALDEPARTMENTSALARYinput 
xmlns=&#34;http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR/TOTALDEPARTMENTSALARY&#34;&gt;
&lt;DEPT_ID-NUMBER-IN&gt;30&lt;/DEPT_ID-NUMBER-IN&gt;&lt;DEPT_NAME-VARCHAR2-INOUT&gt;Purchasing
&lt;/DEPT_NAME-VARCHAR2-INOUT&gt;&lt;NUMMEMBERS-NUMBER-OUT/&gt;&lt;/SNUMBER-
TOTALDEPARTMENTSALARYinput&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-6376B342-3B65-441D-82D5-8F0607C4256F__CHDIBFIH">
<p class="titleinexample">Example 34-9 Output XML Document for PL/SQL Query Using Web Service</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34; ?&gt;
&lt;soap:Envelope xmlns:soap=&#34;http://www.w3.org/2002/06/soap-envelope&#34;&gt;
  &lt;soap:Body&gt;
    &lt;TOTALDEPARTMENTSALARYOutput 
       xmlns=&#34;http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR/TOTALDEPARTMENTSALARY&#34;&gt;
      &lt;RETURN&gt;24900&lt;/RETURN&gt;
      &lt;NUMMEMBERS&gt;6&lt;/NUMMEMBERS&gt;
      &lt;DEPT_NAME&gt;Purchasing&lt;/DEPT_NAME&gt;
    &lt;/TOTALDEPARTMENTSALARYOutput&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</pre></div>
<!-- class="example" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3410">
<tr>
<td class="cellalignment3417">
<table class="cellalignment3415">
<tr>
<td class="cellalignment3414"><a href="xdb15dbu.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3414"><a href="partpg6.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3419">
<table class="cellalignment3413">
<tr>
<td class="cellalignment3414"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3414"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3414"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3414"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3414"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3414"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>