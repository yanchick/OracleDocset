<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-106648"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Tuning%20the%20Program%20Global%20Area"></a><title>Tuning the Program Global Area</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-01-18T01:24:57Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Performance Tuning Guide"/>
<meta name="dcterms.identifier" content="E49058-08"/>
<meta name="dcterms.isVersionOf" content="TGDBA"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="tune_result_cache.htm" title="Previous" type="text/html"/>
<link rel="Next" href="part4.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49058-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-FE1954FB-FAC9-4302-896E-6F47EB6C8A73"></a> <span id="PAGE" style="display:none;">23/27</span> <!-- End Header -->
<a id="TGDBA346"></a>
<h1 id="TGDBA-GUID-FE1954FB-FAC9-4302-896E-6F47EB6C8A73" class="sect1"><span class="enumeration_chapter">16</span> Tuning the Program Global Area</h1>
<div>
<p>This chapter describes how to tune the Program Global Area (PGA). If you are using automatic memory management to manage the database memory on your system, then you do not need to manually tune the PGA as described in this chapter.</p>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tune_pga.htm#GUID-C698E2D4-495D-4DD7-AB7F-916F9C6EE8D1">About the Program Global Area</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-251F5619-7D47-492F-8B9B-C2BA6BA3BA66">Sizing the Program Global Area</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-C1796FFD-5A7E-4FA7-945B-4B6CE374091A">Limiting the Size of the Program Global Area</a></p>
</li>
</ul>
</div>
<a id="TGDBA347"></a>
<div class="props_rev_3"><a id="GUID-C698E2D4-495D-4DD7-AB7F-916F9C6EE8D1"></a>
<h2 id="TGDBA-GUID-C698E2D4-495D-4DD7-AB7F-916F9C6EE8D1" class="sect2">About the Program Global Area</h2>
<div>
<p>The Program Global Area (PGA) is a private memory region that contains the data and control information for a server process. Only a server process can access the PGA. Oracle Database reads and writes information in the PGA on behalf of the server process. An example of such information is the run-time area of a cursor. Each time a cursor is executed, a new run-time area is created for that cursor in the PGA memory region of the server process executing that cursor.</p>
<div class="infobox-note" id="GUID-C698E2D4-495D-4DD7-AB7F-916F9C6EE8D1__GUID-40D90668-E3DC-4E57-8B68-198A7C0A5593">
<p class="notep1">Note:</p>
<p>Part of the run-time area can be located in the Shared Global Area (SGA) when using shared servers.</p>
</div>
<p>For complex queries (such as decision support queries), a big portion of the run-time area is dedicated to work areas allocated by memory intensive operators, including:</p>
<ul style="list-style-type: disc;">
<li>
<p>Sort-based operators, such as <code>ORDER</code> <code>BY</code>, <code>GROUP</code> <code>BY</code>, <code>ROLLUP</code>, and window functions</p>
</li>
<li>
<p>Hash-join</p>
</li>
<li>
<p>Bitmap merge</p>
</li>
<li>
<p>Bitmap create</p>
</li>
<li>
<p>Write buffers used by bulk load operations</p>
</li>
</ul>
<p>A sort operator uses a work area (the sort area) to perform the in-memory sorting of a set of rows. Similarly, a hash-join operator uses a work area (the hash area) to build a hash table from its left input.</p>
</div>
<a id="TGDBA469"></a>
<div class="props_rev_3"><a id="GUID-41CAC946-617F-4708-A3C2-EFF28CCD0C5F"></a>
<h3 id="TGDBA-GUID-41CAC946-617F-4708-A3C2-EFF28CCD0C5F" class="sect3">Work Area Sizes</h3>
<div>
<p>Oracle Database enables you to control and tune the sizes of <a id="d42654e162" class="indexterm-anchor"></a><a id="d42654e166" class="indexterm-anchor"></a>work areas. Generally, bigger work areas can significantly improve the performance of a particular operator at the cost of higher memory consumption. The available work area sizes include:</p>
<ul style="list-style-type: disc;">
<li>
<p>Optimal</p>
<p>Optimal size is when the size of a work area is large enough that it can accommodate the input data and auxiliary memory structures allocated by its associated SQL operator. This is the ideal size for the work area.</p>
</li>
<li>
<p>One-pass</p>
<p>One-pass size is when the size of the work area is below optimal size and an extra pass is performed over part of the input data. With one-pass size, the response time is increased.</p>
</li>
<li>
<p>Multi-pass</p>
<p>Multi-pass size is when the size of the work area is below the one-pass threshold and multiple passes over the input data are needed. With multi-pass size, the response time is dramatically increased because the size of the work area is too small compared to the input data size.</p>
</li>
</ul>
<p>For example, a serial sort operation that must sort 10 GB of data requires a little more than 10 GB to run as optimal size and at least 40 MB to run as one-pass size. If the work area is less than 40 MB, then the sort operation must perform several passes over the input data.</p>
<p>When sizing the work area, the goal is to have most work areas running with optimal size (more than 90%, or even 100% for pure OLTP systems), and only a small number of them running with one-pass size (less than 10%). Multi-pass executions should be avoided for the following reasons:</p>
<ul style="list-style-type: disc;">
<li>
<p>Multi-pass executions can severely degrade performance.</p>
<p>A high number of multi-pass work areas has an exponentially adverse effect on the response time of its associated SQL operator.</p>
</li>
<li>
<p>Running one-pass executions does not require a large amount of memory.</p>
<p>Only 22 MB is required to sort 1 GB of data in one-pass size.</p>
</li>
</ul>
<p>Even for DSS systems running large sorts and hash-joins, the memory requirement for one-pass executions is relatively small. A system configured with a reasonable amount of PGA memory should not need to perform multiple passes over the input data.</p>
</div>
</div>
</div>
<a id="TGDBA363"></a>
<div class="props_rev_3"><a id="GUID-251F5619-7D47-492F-8B9B-C2BA6BA3BA66"></a>
<h2 id="TGDBA-GUID-251F5619-7D47-492F-8B9B-C2BA6BA3BA66" class="sect2">Sizing the Program Global Area</h2>
<div>
<p>Automatic PGA memory management simplifies and improves the way PGA memory is allocated. By default, PGA memory management is enabled. In this mode, Oracle Database automatically sizes the PGA by dynamically adjusting the portion of the PGA memory dedicated to work areas, based on 20% of the SGA memory size. The minimum value is 10MB.</p>
<div class="infobox-note" id="GUID-251F5619-7D47-492F-8B9B-C2BA6BA3BA66__GUID-63A3F267-DED8-4F6D-A1E8-4B6D75E76882">
<p class="notep1">Note:</p>
<p>For backward compatibility, automatic PGA memory management can be disabled by setting the value of the <code>PGA_AGGREGATE_TARGET</code> initialization parameter to 0. When automatic PGA memory management is disabled, the maximum size of a work area can be sized with the associated <code>_AREA_SIZE</code> parameter, such as the <code>SORT_AREA_SIZE</code> initialization parameter.</p>
</div>
<p>This section describes how to size the PGA using automatic PGA memory management and contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tune_pga.htm#GUID-6D7A1290-77B1-4388-BA84-73B8594DCF44">Configuring Automatic PGA Memory Management</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-7A3C7085-C5F9-4E02-A57D-FDC491723FAD">Setting the Initial Value for PGA_AGGREGATE_TARGET</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-903DB64B-3019-4272-8812-4F00A05371FB">Monitoring Automatic PGA Memory Management</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-C8C6D009-CF38-4996-AD0E-D97CE0CECE3D">Tuning PGA_AGGREGATE_TARGET</a></p>
</li>
</ul>
</div>
<a id="TGDBA470"></a>
<div class="props_rev_3"><a id="GUID-6D7A1290-77B1-4388-BA84-73B8594DCF44"></a>
<h3 id="TGDBA-GUID-6D7A1290-77B1-4388-BA84-73B8594DCF44" class="sect3">Configuring Automatic PGA Memory Management</h3>
<div>
<div class="section">
<p>When running Oracle Database in automatic PGA memory management mode, sizing of work areas for all sessions is automatic, and the <code>*_AREA_SIZE</code> parameters are ignored by all sessions running in this mode. Oracle Database automatically derives the total amount of PGA memory available to active work areas from the <code>PGA_AGGREGATE_TARGET</code> initialization parameter. The amount of PGA memory is set to the value of <code>PGA_AGGREGATE_TARGET</code> minus the amount of PGA memory allocated to other components of the system (such as PGA memory allocated by sessions). Oracle Database then assigns the resulting PGA memory to individual active work areas based on their specific memory requirements.</p>
<p>Oracle Database attempts to adhere to the <code>PGA_AGGREGATE_TARGET</code> value set by the DBA by dynamically controlling the amount of PGA memory allotted to work areas. To accomplish this, Oracle Database first tries to maximize the number of optimal work areas for all memory-intensive SQL operations. The rest of the work areas are executed in one-pass mode, unless the PGA memory limit set by the DBA (using the <code>PGA_AGGREGATE_TARGET</code> parameter) is so low that multi-pass execution is required to reduce memory consumption to honor the PGA target limit.</p>
<p>When configuring a new database instance, it can be difficult to determine the appropriate setting for <code>PGA_AGGREGATE_TARGET</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To configure automatic PGA memory management:</p>
<ol>
<li>
<p>Make an initial estimate for the value of the <code>PGA_AGGREGATE_TARGET</code> parameter, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-7A3C7085-C5F9-4E02-A57D-FDC491723FAD">Setting the Initial Value for PGA_AGGREGATE_TARGET</a>&#34;</span>.</p>
</li>
<li>
<p>Run a representative workload on the database instance and monitor its performance, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-903DB64B-3019-4272-8812-4F00A05371FB">Monitoring Automatic PGA Memory Management</a>&#34;</span>.</p>
</li>
<li>
<p>Tune the value of the <code>PGA_AGGREGATE_TARGET</code> parameter using Oracle PGA advice statistics, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-C8C6D009-CF38-4996-AD0E-D97CE0CECE3D">Tuning PGA_AGGREGATE_TARGET</a>&#34;</span>.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-6D7A1290-77B1-4388-BA84-73B8594DCF44__GUID-1253D2F9-042A-4B72-A7D5-8D238D964AD8">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN" target="_blank" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information about the <code>PGA_AGGREGATE_TARGET</code> initialization parameter</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGDBA471"></a>
<div class="props_rev_3"><a id="GUID-7A3C7085-C5F9-4E02-A57D-FDC491723FAD"></a>
<h3 id="TGDBA-GUID-7A3C7085-C5F9-4E02-A57D-FDC491723FAD" class="sect3">Setting the Initial Value for PGA_AGGREGATE_TARGET</h3>
<div>
<div class="section">
<p>Set the initial value of the <code>PGA_AGGREGATE_TARGET</code> initialization parameter based on the amount of available memory for the Oracle database instance. This value can then be tuned and dynamically modified at the instance level. By default, Oracle Database uses 20% of the SGA size for this value. However, this setting may be too low for a large DSS system.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To set the initial value for PGA_AGGREGATE_TARGET:</p>
<ol>
<li>
<p>Determine how much of the total physical memory to reserve for the operating system and other non-Oracle applications running on the same system.</p>
<p>For example, you might decide to reserve 20% of the total physical memory for the operating system and other non-Oracle applications, dedicating 80% of the memory on the system to the Oracle database instance.</p>
</li>
<li>
<p>Divide the remaining available memory between the SGA and the PGA:</p>
<ul style="list-style-type: disc;">
<li>
<p>For OLTP systems, the PGA memory typically makes up a small fraction of the available memory, leaving most of the remaining memory for the SGA.</p>
<p>Oracle recommends initially dedicating 20% of the available memory to the PGA, and 80% to the SGA. Therefore, the initial value of the <code>PGA_AGGREGATE_TARGET</code> parameter for an OLTP system can be calculated as:</p>
<p><code>PGA_AGGREGATE_TARGET</code> = (<span class="italic"><code>total_mem</code></span> * 0.8) * 0.2 where <span class="italic"><code>total_mem</code></span> is the total amount of physical memory available on the system.</p>
</li>
<li>
<p>For DSS systems running large, memory-intensive queries, PGA memory can typically use up to 70% of the available memory.</p>
<p>Oracle recommends initially dedicating 50% of the available memory to the PGA, and 50% to the SGA. Therefore, the initial value of the <code>PGA_AGGREGATE_TARGET</code> parameter for a DSS system can be calculated as:</p>
<p><code>PGA_AGGREGATE_TARGET</code> = (<span class="italic"><code>total_mem</code></span> * 0.8) * 0.5 where <span class="italic"><code>total_mem</code></span> is the total amount of physical memory available on the system.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p>For example, if an Oracle database instance is configured to run on a system with 4 GB of physical memory, and if 80% (or 3.2 GB) of the memory is dedicated to the Oracle database instance, then initially set <code>PGA_AGGREGATE_TARGET</code> to 640 MB for an OLTP system, or 1,600 MB for a DSS system.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="TGDBA472"></a>
<div class="props_rev_3"><a id="GUID-903DB64B-3019-4272-8812-4F00A05371FB"></a>
<h3 id="TGDBA-GUID-903DB64B-3019-4272-8812-4F00A05371FB" class="sect3">Monitoring Automatic PGA Memory Management</h3>
<div>
<p>Before starting the tuning process, run a representative workload on the database instance and monitor its performance. PGA statistics collected by Oracle Database enable you to determine if the maximum PGA size is under-configured or over-configured. Monitoring these statistics enables you to assess the performance of automatic PGA memory management and tune the value of the <code>PGA_AGGREGATE_TARGET</code> parameter accordingly.</p>
<p>This section describes how to use performance views to monitor automatic PGA memory management and contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tune_pga.htm#GUID-892FC04E-16ED-435D-8DF3-8B74A379993B">Using the V$PGASTAT View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-9C657D3F-C162-46E1-AC5A-BFF7AAA3B3BA">Using the V$PROCESS View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-B837C371-5384-49B5-9C6D-12982A8DF3BD">Using the V$PROCESS_MEMORY View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811">Using the V$SQL_WORKAREA_HISTOGRAM View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-E2A9A057-60C3-4021-B6AC-8ECA79049CD5">Using the V$WORKAREA_ACTIVE View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-060EB774-7876-40E3-B690-03409346AA9A">Using the V$SQL_WORKAREA View</a></p>
</li>
</ul>
</div>
<a id="TGDBA475"></a><a id="TGDBA474"></a><a id="TGDBA476"></a><a id="TGDBA473"></a>
<div class="props_rev_3"><a id="GUID-892FC04E-16ED-435D-8DF3-8B74A379993B"></a>
<h4 id="TGDBA-GUID-892FC04E-16ED-435D-8DF3-8B74A379993B" class="sect4">Using the V$PGASTAT View</h4>
<div>
<div class="section">
<p>The <code>V$PGASTAT</code> view provides instance-level statistics about PGA memory usage and the automatic PGA memory manager.</p>
<p>The following example shows a query of this view.</p>
<pre dir="ltr">SELECT *
  FROM V$PGASTAT;
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">NAME                                                          VALUE UNIT
-------------------------------------------------------- ---------- ------------
aggregate PGA target parameter                             41156608 bytes
aggregate PGA auto target                                  21823488 bytes
global memory bound                                         2057216 bytes
total PGA inuse                                            16899072 bytes
total PGA allocated                                        35014656 bytes
maximum PGA allocated                                     136795136 bytes
total freeable PGA memory                                    524288 bytes
PGA memory freed back to OS                              1713242112 bytes
total PGA used for auto workareas                                 0 bytes
maximum PGA used for auto workareas                         2383872 bytes
total PGA used for manual workareas                               0 bytes
maximum PGA used for manual workareas                       8470528 bytes
over allocation count                                           291
bytes processed                                          2124600320 bytes
extra bytes read/written                                   39949312 bytes
cache hit percentage                                          98.15 percent
</pre>
<p><a href="tune_pga.htm#GUID-892FC04E-16ED-435D-8DF3-8B74A379993B__BGBFJJBJ" title="Describes the main statistics shown in the V$PGASTAT view.">Table 16-1</a> describes the main statistics shown in the <code>V$PGASTAT</code> view.</p>
<div class="tblformal" id="GUID-892FC04E-16ED-435D-8DF3-8B74A379993B__BGBFJJBJ">
<p class="titleintable">Table 16-1 Statistics in the V$PGASTAT View</p>
<table class="cellalignment11" title="Statistics in the V$PGASTAT View" summary="Describes the main statistics shown in the V$PGASTAT view.">
<thead>
<tr class="cellalignment2">
<th class="cellalignment12" id="d42654e622">Statistic</th>
<th class="cellalignment13" id="d42654e625">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e630" headers="d42654e622">
<p><code>aggregate PGA target parameter</code></p>
</td>
<td class="cellalignment15" headers="d42654e630 d42654e625">
<p>This statistic shows the current value of the <code>PGA_AGGREGATE_TARGET</code> parameter. The default value is 20% of the SGA size. Setting this parameter to 0 disables automatic PGA memory management.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e641" headers="d42654e622">
<p><code>aggregate PGA auto target</code></p>
</td>
<td class="cellalignment15" headers="d42654e641 d42654e625">
<p>This statistic shows the amount of PGA memory Oracle Database can use for work areas running in automatic mode. This amount is dynamically derived from the value of the <code>PGA_AGGREGATE_TARGET</code> parameter and the current work area workload. Hence, it is continuously adjusted by Oracle Database. If this value is small compared to the <code>PGA_AGGREGATE_TARGET</code> value, then most of PGA memory is used by other system components (such as PL/SQL or Java) and little is left for work areas. Ensure that enough PGA memory remains for work areas running in automatic mode.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e655" headers="d42654e622">
<p><code>global memory bound</code></p>
</td>
<td class="cellalignment15" headers="d42654e655 d42654e625">
<p>This statistic shows the maximum size of a work area executed in automatic mode. This value is continuously adjusted by Oracle Database to reflect the current state of the work area workload. The global memory bound generally decreases when the number of active work areas increases in the system. As a rule of thumb, the value of the global bound should not decrease to less than 1 MB. If it does, increase the value of the <code>PGA_AGGREGATE_TARGET</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e666" headers="d42654e622">
<p><code>total PGA allocated</code></p>
</td>
<td class="cellalignment15" headers="d42654e666 d42654e625">
<p>This statistic shows the current amount of PGA memory allocated by the database instance. Oracle Database tries to keep this number less than the <code>PGA_AGGREGATE_TARGET</code> value. However, if the work area workload is increasing rapidly or the <code>PGA_AGGREGATE_TARGET</code> parameter is set to a value that is too low, it is possible for the PGA allocated to exceed this value by a small percentage and for a short time.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e680" headers="d42654e622">
<p><code>total freeable PGA memory</code></p>
</td>
<td class="cellalignment15" headers="d42654e680 d42654e625">
<p>This statistic indicates how much allocated PGA memory can be freed.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e688" headers="d42654e622">
<p><code>total PGA used for auto workareas</code></p>
</td>
<td class="cellalignment15" headers="d42654e688 d42654e625">
<p>This statistic indicates how much PGA memory is currently consumed by work areas running in automatic mode. Use this number to determine how much memory is consumed by other consumers of the PGA memory (such as PL/SQL or Java):</p>
<pre dir="ltr">PGA other = total PGA allocated - total PGA used for auto workareas
</pre></td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e698" headers="d42654e622">
<p><code>over allocation count</code></p>
</td>
<td class="cellalignment15" headers="d42654e698 d42654e625">
<p>This statistic is cumulative from instance startup. Over-allocating PGA memory can happen if the <code>PGA_AGGREGATE_TARGET</code> value is too small to accommodate the <code>PGA other</code> component and the minimum memory required to execute the work area workload. In this case, Oracle Database cannot honor the <code>PGA_AGGREGATE_TARGET</code> value, and extra PGA memory must be allocated. If over-allocation occurs, increase the value of the <code>PGA_AGGREGATE_TARGET</code> parameter using the information provided by the <code>V$PGA_TARGET_ADVICE</code> view, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427">Using the V$PGA_TARGET_ADVICE View</a>&#34;</span>.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e727" headers="d42654e622">
<p><code>total bytes processed</code></p>
</td>
<td class="cellalignment15" headers="d42654e727 d42654e625">
<p>This statistic indicates the number of bytes processed by memory-intensive SQL operators since instance startup. For example, the number of bytes processed is the input size for a sort operation. This number is used to compute the <code>cache</code> <code>hit</code> <code>percentage</code> metric.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e744" headers="d42654e622">
<p><code>extra bytes read/written</code></p>
</td>
<td class="cellalignment15" headers="d42654e744 d42654e625">
<p>When a work area cannot run optimally, one or more extra passes is performed over the input data. This statistic represents the number of bytes processed during these extra passes since instance startup. This number is also used to compute the <code>cache</code> <code>hit</code> <code>percentage</code> metric. Ideally, it should be small compared to <code>total bytes processed</code>.</p>
</td>
</tr>
<tr class="cellalignment2">
<td class="cellalignment14" id="d42654e764" headers="d42654e622">
<p><code>cache hit percentage</code></p>
</td>
<td class="cellalignment15" headers="d42654e764 d42654e625">
<p>This metric is computed by Oracle Database to reflect the performance of the PGA memory component. It is cumulative from instance startup. A value of 100% means that all work areas executed by the system since instance startup are using an optimal amount of PGA memory. This is ideal but rarely happens except for pure OLTP systems. Typically, some work areas run one-pass or even multi-pass, depending on the overall size of the PGA memory. When a work area cannot run optimally, one or more extra passes are performed over the input data. This reduces the <code>cache</code> <code>hit</code> <code>percentage</code> in proportion to the size of the input data and the number of extra passes performed. For an example of how this metric is calculated, see <a href="tune_pga.htm#GUID-892FC04E-16ED-435D-8DF3-8B74A379993B__BGBECDGE">Example 16-1</a>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p><a href="tune_pga.htm#GUID-892FC04E-16ED-435D-8DF3-8B74A379993B__BGBECDGE">Example 16-1</a> shows how extra passes affect the <code>cache</code> <code>hit</code> <code>percentage</code> metric.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-892FC04E-16ED-435D-8DF3-8B74A379993B__BGBECDGE">
<p class="titleinexample">Example 16-1 Calculating Cache Hit Percentage</p>
<p>Four sort operations have been executed, three were small (1 MB of input data) and one was bigger (100 MB of input data). The total number of bytes processed (BP) by the four operations is 103 MB. If one of the small sorts runs one-pass, an extra pass over 1 MB of input data is performed. This 1 MB value is the number of <code>extra</code> <code>bytes</code> <code>read/written</code>, or EBP.</p>
<p>The <code>cache</code> <code>hit</code> <code>percentage</code> is calculated using the following formula:</p>
<pre dir="ltr">BP x 100 / (BP + EBP)
</pre>
<p>In this example, the <code>cache</code> <code>hit</code> <code>percentage</code> is 99.03%. This value reflects that only one of the small sort operations performed an extra pass, while all other sort operations were able to run in optimal size. Therefore, the <code>cache</code> <code>hit</code> <code>percentage</code> is almost 100%, because the extra pass over 1 MB represents a tiny overhead. However, if the bigger sort operation runs in one-pass size, then the EBP is 100 MB instead of 1 MB, and the <code>cache</code> <code>hit</code> <code>percentage</code> falls to 50.73%, because the extra pass has a much bigger impact.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="TGDBA478"></a><a id="TGDBA477"></a>
<div class="props_rev_3"><a id="GUID-9C657D3F-C162-46E1-AC5A-BFF7AAA3B3BA"></a>
<h4 id="TGDBA-GUID-9C657D3F-C162-46E1-AC5A-BFF7AAA3B3BA" class="sect4">Using the V$PROCESS View</h4>
<div>
<div class="section">
<p>The <code>V$PROCESS</code> view contains one row for each Oracle process connected to the database instance. Use the following columns in this view to monitor the PGA memory usage of these processes:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code>PGA_USED_MEM</code></p>
</li>
<li>
<p><code>PGA_ALLOC_MEM</code></p>
</li>
<li>
<p><code>PGA_FREEABLE_MEM</code></p>
</li>
<li>
<p><code>PGA_MAX_MEM</code></p>
</li>
</ul>
<p><a href="tune_pga.htm#GUID-9C657D3F-C162-46E1-AC5A-BFF7AAA3B3BA__BGBFGAGD">Example 16-2</a> shows a query of this view.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-9C657D3F-C162-46E1-AC5A-BFF7AAA3B3BA__BGBFGAGD">
<p class="titleinexample">Example 16-2 Querying the V$PROCESS View</p>
<pre dir="ltr">SELECT program, pga_used_mem, pga_alloc_mem, pga_freeable_mem, pga_max_mem
  FROM V$PROCESS;
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">PROGRAM                 PGA_USED_MEM PGA_ALLOC_MEM PGA_FREEABLE_MEM PGA_MAX_MEM
----------------------- ------------ ------------- ---------------- -----------
PSEUDO                             0             0                0           0
oracle@examp1690 (PMON)       314540        685860                0      685860
oracle@examp1690 (MMAN)       313992        685860                0      685860
oracle@examp1690 (DBW0)       696720       1063112                0     1063112
oracle@examp1690 (LGWR)     10835108      22967940                0    22967940
oracle@examp1690 (CKPT)       352716        710376                0      710376
oracle@examp1690 (SMON)       541508        948004                0     1603364
oracle@examp1690 (RECO)       323688        685860                0      816932
oracle@examp1690 (q001)       233508        585128                0      585128
oracle@examp1690 (QMNC)       314332        685860                0      685860
oracle@examp1690 (MMON)       885756       1996548           393216     1996548
oracle@examp1690 (MMNL)       315068        685860                0      685860
oracle@examp1690 (q000)       330872        716200            65536      716200
oracle@examp1690 (CJQ0)       533476       1013540                0     1144612
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TGDBA479"></a>
<div class="props_rev_3"><a id="GUID-B837C371-5384-49B5-9C6D-12982A8DF3BD"></a>
<h4 id="TGDBA-GUID-B837C371-5384-49B5-9C6D-12982A8DF3BD" class="sect4">Using the V$PROCESS_MEMORY View</h4>
<div>
<div class="section">
<p>The <code>V$PROCESS_MEMORY</code> view displays dynamic PGA memory usage by named component categories for each Oracle process. This view contains up to six rows for each Oracle process, one row for:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Each named component category:</p>
<ul style="list-style-type: disc;">
<li>
<p>Java</p>
</li>
<li>
<p>PL/SQL</p>
</li>
<li>
<p>OLAP</p>
</li>
<li>
<p>SQL</p>
</li>
</ul>
</li>
<li>
<p>Freeable</p>
<p>Memory that has been allocated to the process by the operating system, but not to a specific category</p>
</li>
<li>
<p>Other</p>
<p>Memory that has been allocated to a category, but not to a named category</p>
</li>
</ul>
<p>Use the following columns in this view to dynamically monitor the PGA memory usage of Oracle processes for each of the six categories:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>CATEGORY</code></p>
</li>
<li>
<p><code>ALLOCATED</code></p>
</li>
<li>
<p><code>USED</code></p>
</li>
<li>
<p><code>MAX_ALLOCATED</code></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-B837C371-5384-49B5-9C6D-12982A8DF3BD__GUID-518C46AB-7937-4422-B512-AE93AE46C1E0">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN" target="_blank" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information about the <code>V$PROCESS_MEMORY</code> view</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGDBA481"></a><a id="TGDBA482"></a><a id="TGDBA480"></a>
<div class="props_rev_3"><a id="GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811"></a>
<h4 id="TGDBA-GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811" class="sect4">Using the V$SQL_WORKAREA_HISTOGRAM View</h4>
<div>
<div class="section">
<p>The <code>V$SQL_WORKAREA_HISTOGRAM</code> view shows the number of work areas executed with optimal, one-pass, and multi-pass memory size since instance startup. Statistics in this view are divided into buckets. The buckets are defined by the optimal memory requirements of the work areas. Each bucket is identified by a range of optimal memory requirements, specified by the values in the <code>LOW_OPTIMAL_SIZE</code> and <code>HIGH_OPTIMAL_SIZE</code> columns.</p>
<p>For example, a sort operation may require 3 MB of memory to run in optimal size (cached). Statistics about the work area used by this sort operation are placed in the bucket defined by:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code>LOW_OPTIMAL_SIZE</code> = 2097152 (2 MB)</p>
</li>
<li>
<p><code>HIGH_OPTIMAL_SIZE</code> = 4194303 (4 MB minus 1 byte)</p>
</li>
</ul>
<p>Statistics are segmented by work area size, because the performance impact of running a work area in optimal, one-pass or multi-pass size depends mainly on the size of the work area. In this example, statistics about the work area are placed in this bucket because 3 MB lies within that range of optimal sizes.</p>
<p><a href="tune_pga.htm#GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811__BGBBCAEC">Example 16-3</a> and <a href="tune_pga.htm#GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811__BGBIFJDF">Example 16-4</a> show two methods for querying this view.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811__BGBBCAEC">
<p class="titleinexample">Example 16-3 Querying the V$SQL_WORKAREA_HISTOGRAM View: Non-Empty Buckets</p>
<p>The following query shows statistics for all non-empty buckets:</p>
<pre dir="ltr">SELECT low_optimal_size/1024 low_kb,
       (high_optimal_size+1)/1024 high_kb,
       optimal_executions, onepass_executions, multipasses_executions
  FROM V$SQL_WORKAREA_HISTOGRAM
 WHERE total_executions != 0;
</pre>
<p>The result of the query might look like the following:</p>
<pre dir="ltr">LOW_KB HIGH_KB OPTIMAL_EXECUTIONS ONEPASS_EXECUTIONS MULTIPASSES_EXECUTIONS
------ ------- ------------------ ------------------ ----------------------
     8      16             156255                  0                      0
    16      32                150                  0                      0
    32      64                 89                  0                      0
    64     128                 13                  0                      0
   128     256                 60                  0                      0
   256     512                  8                  0                      0
   512    1024                657                  0                      0
  1024    2048                551                 16                      0
  2048    4096                538                 26                      0
  4096    8192                243                 28                      0
  8192   16384                137                 35                      0
 16384   32768                 45                107                      0
 32768   65536                  0                153                      0
 65536  131072                  0                 73                      0
131072  262144                  0                 44                      0
262144  524288                  0                 22                      0
</pre>
<p>In this example, the output shows that&mdash;in the 1 MB to 2 MB bucket&mdash;551 work areas ran in optimal size, while 16 ran in one-pass size and none ran in multi-pass size. It also shows that all work areas under 1 MB were able to run in optimal size.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-58B5CC9D-1B5D-4A1E-8417-C6C18FD06811__BGBIFJDF">
<p class="titleinexample">Example 16-4 Querying the V$SQL_WORKAREA_HISTOGRAM View: Percent Optimal</p>
<p>The following query shows the percentage of times work areas are executed in optimal, one-pass, or multi-pass size since startup. This query only considers work areas of a certain size, with an optimal memory requirement of at least 64 KB:</p>
<pre dir="ltr">SELECT optimal_count, ROUND(optimal_count*100/total, 2) optimal_perc, 
       onepass_count, ROUND(onepass_count*100/total, 2) onepass_perc,
       multipass_count, ROUND(multipass_count*100/total, 2) multipass_perc
FROM
 (SELECT DECODE(SUM(total_executions), 0, 1, SUM(total_executions)) total,
         SUM(optimal_executions) optimal_count,
         SUM(onepass_executions) onepass_count,
         SUM(multipass_executions) multipass_count
    FROM V$SQL_WORKAREA_HISTOGRAM
   WHERE low_optimal_size &gt;= 64*1024);
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">OPTIMAL_COUNT OPTIMAL_PERC ONEPASS_COUNT ONEPASS_PERC MULTIPASS_COUNT MULTIPASS_PERC
------------- ------------ ------------- ------------ --------------- --------------
         2239        81.63           504        18.37               0              0
</pre>
<p>In this example, the output shows that 81.63% of the work areas were able to run in optimal size. The remaining work areas (18.37%) ran in one-pass size and none of them ran in multi-pass size.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="TGDBA484"></a><a id="TGDBA483"></a>
<div class="props_rev_3"><a id="GUID-E2A9A057-60C3-4021-B6AC-8ECA79049CD5"></a>
<h4 id="TGDBA-GUID-E2A9A057-60C3-4021-B6AC-8ECA79049CD5" class="sect4">Using the V$WORKAREA_ACTIVE View</h4>
<div>
<div class="section">
<p>The <code>V$WORKAREA_ACTIVE</code> view displays the work areas that are active (or executing) in the database instance. Small, active sort operations (under 64 KB) are excluded from this view. Use this view to precisely monitor the size of all active work areas and to determine whether these active work areas spill to a temporary segment.</p>
<p><a href="tune_pga.htm#GUID-E2A9A057-60C3-4021-B6AC-8ECA79049CD5__BGBDHADJ">Example 16-5</a> shows a query of this view.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-E2A9A057-60C3-4021-B6AC-8ECA79049CD5__BGBDHADJ">
<p class="titleinexample">Example 16-5 Querying the V$WORKAREA_ACTIVE View</p>
<pre dir="ltr">SELECT TO_NUMBER(DECODE(sid, 65535, null, sid)) sid,
       operation_type operation,
       TRUNC(expected_size/1024) esize,
       TRUNC(actual_mem_used/1024) mem,
       TRUNC(max_mem_used/1024) &#34;max mem&#34;,
       number_passes pass,
       TRUNC(TEMPSEG_SIZE/1024) tsize
  FROM V$SQL_WORKAREA_ACTIVE
 ORDER BY 1,2;
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">SID         OPERATION     ESIZE       MEM   MAX MEM  PASS   TSIZE
--- ----------------- --------- --------- --------- ----- -------
  8   GROUP BY (SORT)       315       280       904     0
  8         HASH-JOIN      2995      2377      2430     1   20000
  9   GROUP BY (SORT)     34300     22688     22688     0
 11         HASH-JOIN     18044     54482     54482     0
 12         HASH-JOIN     18044     11406     21406     1  120000
</pre>
<p>In this example, the output shows that:</p>
<ul style="list-style-type: disc;">
<li>
<p>Session 12 (<code>SID</code> column) is running a hash-join operation (<code>OPERATION</code> column) in a work area running in one-pass size (<code>PASS</code> column)</p>
</li>
<li>
<p>The maximum amount of memory that the PGA memory manager expects this hash-join operation to use is 18044 KB (<code>ESIZE</code> column)</p>
</li>
<li>
<p>The work area is currently using 11406 KB of memory (<code>MEM</code> column)</p>
</li>
<li>
<p>The work area used up to 21406 KB of PGA memory (<code>MAX</code> <code>MEM</code> column) in the past</p>
</li>
<li>
<p>The work area spilled to a temporary segment of 120000 KB (<code>TSIZE</code> column)</p>
</li>
</ul>
<p>When the work area is deallocated&mdash;or when the execution of its associated SQL operator is complete&mdash;it is automatically removed from this view.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="TGDBA486"></a><a id="TGDBA485"></a>
<div class="props_rev_3"><a id="GUID-060EB774-7876-40E3-B690-03409346AA9A"></a>
<h4 id="TGDBA-GUID-060EB774-7876-40E3-B690-03409346AA9A" class="sect4">Using the V$SQL_WORKAREA View</h4>
<div>
<div class="section">
<p>Oracle Database maintains cumulative work area statistics for each loaded cursor whose execution plan uses one or more work areas. Each time a work area is deallocated, the <code>V$SQL_WORKAREA</code> view is updated with execution statistics for that work area.</p>
<p>You can join the <code>V$SQL_WORKAREA</code> view with the <code>V$SQL</code> view to relate a work area to a cursor, and with the <code>V$SQL_PLAN</code> view to precisely determine which operator in the plan uses a work area.</p>
<p><a href="tune_pga.htm#GUID-060EB774-7876-40E3-B690-03409346AA9A__BGBGHEAG">Example 16-6</a> shows three queries of this view.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-060EB774-7876-40E3-B690-03409346AA9A__BGBGHEAG">
<p class="titleinexample">Example 16-6 Querying the V$SQL_WORKAREA View</p>
<p>The following query finds the top 10 work areas that require the most cache memory:</p>
<pre dir="ltr">SELECT *
FROM   (SELECT workarea_address, operation_type, policy, estimated_optimal_size
        FROM V$SQL_WORKAREA
        ORDER BY estimated_optimal_size DESC)
 WHERE ROWNUM &lt;= 10;
</pre>
<p>The following query finds the cursors with one or more work areas that have been executed in one or multiple passes:</p>
<pre dir="ltr">col sql_text format A80 wrap 
SELECT sql_text, sum(ONEPASS_EXECUTIONS) onepass_cnt,
       sum(MULTIPASSES_EXECUTIONS) mpass_cnt 
FROM V$SQL s, V$SQL_WORKAREA wa 
WHERE s.address = wa.address 
GROUP BY sql_text 
HAVING sum(ONEPASS_EXECUTIONS+MULTIPASSES_EXECUTIONS)&gt;0;
</pre>
<p>Using the hash value and address of a particular cursor, the following query displays the cursor execution plan, including information about the associated work areas:</p>
<pre dir="ltr">col &#34;O/1/M&#34; format a10
col name format a20
SELECT operation, options, object_name name, trunc(bytes/1024/1024) &#34;input(MB)&#34;,
       TRUNC(last_memory_used/1024) last_mem,
       TRUNC(estimated_optimal_size/1024) optimal_mem, 
       TRUNC(estimated_onepass_size/1024) onepass_mem, 
       DECODE(optimal_executions, null, null, 
              optimal_executions||&#39;/&#39;||onepass_executions||&#39;/&#39;||
              multipasses_executions) &#34;O/1/M&#34;
  FROM V$SQL_PLAN p, V$SQL_WORKAREA w 
 WHERE p.address=w.address(+) 
   AND p.hash_value=w.hash_value(+) 
   AND p.id=w.operation_id(+) 
   AND p.address=&#39;88BB460C&#39;
   AND p.hash_value=3738161960; 
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">OPERATION    OPTIONS  NAME     input(MB) LAST_MEM OPTIMAL_ME ONEPASS_ME O/1/M 
------------ -------- -------- --------- -------- ---------- ---------- ------
SELECT STATE                                                                  
HASH         GROUP BY               4582        8         16         16 16/0/0
HASH JOIN    SEMI                   4582     5976       5194       2187 16/0/0
TABLE ACCESS FULL     ORDERS          51                                      
TABLE ACCESS FUL      LINEITEM      1000                                      
</pre>
<p>You can get the address and hash value from the <code>V$SQL</code> view by specifying a pattern in the query, as shown in the following query:</p>
<pre dir="ltr">SELECT address, hash_value 
  FROM V$SQL 
 WHERE sql_text LIKE &#39;%<span class="italic">my_pattern</span>%&#39;;
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="TGDBA487"></a>
<div class="props_rev_3"><a id="GUID-C8C6D009-CF38-4996-AD0E-D97CE0CECE3D"></a>
<h3 id="TGDBA-GUID-C8C6D009-CF38-4996-AD0E-D97CE0CECE3D" class="sect3">Tuning PGA_AGGREGATE_TARGET</h3>
<div>
<p>To help you tune the value of the <code>PGA_AGGREGATE_TARGET</code> initialization parameter, Oracle Database provides two PGA performance advisory views: <code>V$PGA_TARGET_ADVICE</code> and <code>V$PGA_TARGET_ADVICE_HISTOGRAM</code>. By using these views, you do not need to use an empirical approach to tune the value of the <code>PGA_AGGREGATE_TARGET</code> parameter. Instead, you can use these views to predict how changing the value of the <code>PGA_AGGREGATE_TARGET</code> parameter will affect key PGA statistics.</p>
<p>This section describes how to tune the value of the <code>PGA_AGGREGATE_TARGET</code> initialization parameter and contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tune_pga.htm#GUID-326DEB90-E13C-4511-8731-F8A37C4D83D6">Enabling Automatic Generation of PGA Performance Advisory Views</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427">Using the V$PGA_TARGET_ADVICE View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-A2C80240-8436-42FC-B40F-B0358C955216">Using the V$PGA_TARGET_ADVICE_HISTOGRAM View</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-1E3F26AD-1F4A-4188-B775-53429DE27963">Using the V$SYSSTAT and V$SESSTAT Views</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-BC6CBF45-EA12-44AE-AB84-EE7DF7B09DE8">Tutorial: How to Tune PGA_AGGREGATE_TARGET</a></p>
</li>
</ul>
</div>
<a id="TGDBA488"></a>
<div class="props_rev_3"><a id="GUID-326DEB90-E13C-4511-8731-F8A37C4D83D6"></a>
<h4 id="TGDBA-GUID-326DEB90-E13C-4511-8731-F8A37C4D83D6" class="sect4">Enabling Automatic Generation of PGA Performance Advisory Views</h4>
<div>
<div class="section">
<p>Oracle Database generates the <code>V$PGA_TARGET_ADVICE</code> and <code>V$PGA_TARGET_ADVICE_HISTOGRAM</code> views by recording the workload history, and then simulating this history for different values of the <code>PGA_AGGREGATE_TARGET</code> parameter. The values of the <code>PGA_AGGREGATE_TARGET</code> parameter are derived from fractions and multiples of its current value to assess possible higher and lower values. These values are used for the prediction and range from 10 MB to a maximum of 256 GB. The simulation process happens in the background and continuously updates the workload history to produce the simulation result. You can view the result at any time by querying these views.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To enable automatic generation of PGA performance advice views:</p>
<ol>
<li>
<p>Set the <code>PGA_AGGREGATE_TARGET</code> parameter to enable automatic PGA memory management.</p>
<p>Setting this parameter to 0 disables automatic PGA memory management and is not recommended. For information about setting this parameter, see <span class="q">&#34;<a href="tune_pga.htm#GUID-7A3C7085-C5F9-4E02-A57D-FDC491723FAD">Setting the Initial Value for PGA_AGGREGATE_TARGET</a>&#34;</span>.</p>
</li>
<li>
<p>Set the <code>STATISTICS_LEVEL</code> parameter to <code>TYPICAL</code> (the default) or <code>ALL</code>.</p>
<p>Setting this parameter to <code>BASIC</code> disables generation of the PGA performance advice views and is not recommended.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infobox-note" id="GUID-326DEB90-E13C-4511-8731-F8A37C4D83D6__GUID-C0FC7DFB-9733-4004-879D-13BE54D78073">
<p class="notep1">Note:</p>
<p>The contents of the PGA advice performance views are reset at instance startup or when the value of the <code>PGA_AGGREGATE_TARGET</code> parameter is changed.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGDBA491"></a><a id="TGDBA490"></a><a id="TGDBA489"></a>
<div class="props_rev_3"><a id="GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427"></a>
<h4 id="TGDBA-GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427" class="sect4">Using the V$PGA_TARGET_ADVICE View</h4>
<div>
<div class="section">
<p>The <code>V$PGA_TARGET_ADVICE</code> view predicts how changing the value of the <code>PGA_AGGREGATE_TARGET</code> initialization parameter will affect the following statistics in the <code>V$PGASTAT</code> view:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>cache hit percentage</p>
</li>
<li>
<p>over allocation count</p>
</li>
</ul>
<p>The following example shows a query of this view.</p>
<pre dir="ltr">SELECT ROUND(pga_target_for_estimate/1024/1024) target_mb,
       estd_pga_cache_hit_percentage cache_hit_perc,
       estd_overalloc_count
  FROM V$PGA_TARGET_ADVICE;
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr"> TARGET_MB  CACHE_HIT_PERC  ESTD_OVERALLOC_COUNT
----------  --------------  --------------------
        63              23                   367
       125              24                    30
       250              30                     3
       375              39                     0
       500              58                     0
       600              59                     0
       700              59                     0
       800              60                     0
       900              60                     0
      1000              61                     0
      1500              67                     0
      2000              76                     0
      3000              83                     0
      4000              85                     0
</pre>
<p><a href="tune_pga.htm#GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427__BGBCEIAF">Figure 16-1</a> illustrates how the result of the this query can be plotted.</p>
<div class="figure" id="GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427__BGBCEIAF">
<p class="titleinfigure">Figure 16-1 Graphical Representation of V$PGA_TARGET_ADVICE</p>
<img width="654" height="674" src="img/GUID-6E05D10A-A911-4FED-935B-8BB929C279C4-default.png" alt="Description of Figure 16-1 follows" title="Description of Figure 16-1 follows"/><br/>
<a href="img_text/GUID-6E05D10A-A911-4FED-935B-8BB929C279C4-print.htm">Description of &#34;Figure 16-1 Graphical Representation of V$PGA_TARGET_ADVICE&#34;</a></div>
<!-- class="figure" -->
<p>The curve shows how PGA <code>cache</code> <code>hit</code> <code>percentage</code> improves as the value of the <code>PGA_AGGREGATE_TARGET</code> parameter increases. The shaded zone in the graph represents the <code>over</code> <code>allocation</code> zone, where the value of the <code>ESTD_OVERALLOCATION_COUNT</code> column is non-zero. This area indicates that the value of the <code>PGA_AGGREGATE_TARGET</code> parameter is too small to meet the minimum PGA memory requirements. If the value of the <code>PGA_AGGREGATE_TARGET</code> parameter is set within the <code>over</code> <code>allocation</code> zone, then the memory manager will over-allocate memory and the actual PGA memory consumed will exceed the limit that was set. It is therefore meaningless to set a value of the <code>PGA_AGGREGATE_TARGET</code> parameter in that zone. In this particular example, the <code>PGA_AGGREGATE_TARGET</code> parameter should be set to at least 375 MB.</p>
<p>Beyond the <code>over</code> <code>allocation</code> zone, the value of the PGA <code>cache</code> <code>hit</code> <code>percentage</code> increases rapidly. This is due to an increase in the number of optimal or one-pass work areas and a decrease in the number of multi-pass executions. At some point, around 500 MB in this example, an inflection in the curve corresponds to the point where most (probably all) work areas can run in optimal or at least one-pass size. Beyond this point, the <code>cache</code> <code>hit</code> <code>percentage</code> keeps increasing, though at a lower pace, up to the point where it starts to taper off and only slight improvement is achieved with increase in the value of the <code>PGA_AGGREGATE_TARGET</code> parameter. In <a href="tune_pga.htm#GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427__BGBCEIAF">Figure 16-1</a>, this happens when <code>PGA_AGGREGATE_TARGET</code> reaches 3 GB. At this point, the <code>cache</code> <code>hit</code> <code>percentage</code> is 83% and only marginal improvement (by 2%) is achieved with one extra gigabyte of PGA memory. In this example, 3 GB is the optimal value for the <code>PGA_AGGREGATE_TARGET</code> parameter.</p>
<div class="infobox-note" id="GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427__GUID-CC65C720-18FA-42A0-84BC-20B9111289FA">
<p class="notep1">Note:</p>
<p>Although the theoretical maximum for the PGA <code>cache</code> <code>hit</code> <code>percentage</code> is 100%, a practical limit exists on the maximum size of a work area that may prevent this theoretical maximum from being reached, even when the value of the <code>PGA_AGGREGATE_TARGET</code> parameter is further increased. This should happen only in large DSS systems where the optimal memory requirement is large and may cause the value of the <code>cache</code> <code>hit</code> <code>percentage</code> to taper off at a lower percentage, such as 90%.</p>
</div>
<p>Ideally, the value of the <code>PGA_AGGREGATE_TARGET</code> parameter should be set to the optimal value, or at least to the maximum value possible in the region beyond the <code>over</code> <code>allocation</code> zone. As a rule of thumb, the PGA <code>cache</code> <code>hit</code> <code>percentage</code> should be higher than 60%, because at 60% the system is almost processing double the number of bytes it actually needs to process in an ideal situation. In this example, the value of the <code>PGA_AGGREGATE_TARGET</code> parameter should be set to at least 500 MB, and as close to 3 GB as possible. However, the correct setting for the <code>PGA_AGGREGATE_TARGET</code> parameter depends on how much memory can be dedicated to the PGA component. Generally, adding PGA memory requires reducing memory for some SGA components&mdash;like the shared pool or buffer cache&mdash;because the overall memory dedicated to the database instance is often bound by the amount of physical memory available on the system. Therefore, any decisions to increase PGA memory must be taken in the larger context of the available memory in the system and the performance of the various SGA components (which you can monitor with shared pool advisory and buffer cache advisory statistics). If you cannot reduce memory from the SGA components, consider adding more physical memory to the system.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="TGDBA493"></a><a id="TGDBA492"></a>
<div class="props_rev_3"><a id="GUID-A2C80240-8436-42FC-B40F-B0358C955216"></a>
<h4 id="TGDBA-GUID-A2C80240-8436-42FC-B40F-B0358C955216" class="sect4">Using the V$PGA_TARGET_ADVICE_HISTOGRAM View</h4>
<div>
<div class="section">
<p>The <code>V$PGA_TARGET_ADVICE_HISTOGRAM</code> view predicts how changing the value of the <code>PGA_AGGREGATE_TARGET</code> initialization parameter will affect the statistics in the <code>V$SQL_WORKAREA_HISTOGRAM</code> view. Use this view to display detailed information about the predicted number of optimal, one-pass, and multi-pass work area executions for the <code>PGA_AGGREGATE_TARGET</code> values used for the prediction.</p>
<p>The <code>V$PGA_TARGET_ADVICE_HISTOGRAM</code> view is identical to the <code>V$SQL_WORKAREA_HISTOGRAM</code> view, with two additional columns to represent the <code>PGA_AGGREGATE_TARGET</code> values used for the prediction. Therefore, any query executed against the <code>V$SQL_WORKAREA_HISTOGRAM</code> view can be used on this view, with an additional predicate to select the desired value of the <code>PGA_AGGREGATE_TARGET</code> parameter.</p>
<p><a href="tune_pga.htm#GUID-A2C80240-8436-42FC-B40F-B0358C955216__BGBGCFAG">Example 16-7</a> shows a query of this view that displays the predicted content of the <code>V$SQL_WORKAREA_HISTOGRAM</code> view for a value of the <code>PGA_AGGREGATE_TARGET</code> parameter set to twice its current value.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-A2C80240-8436-42FC-B40F-B0358C955216__BGBGCFAG">
<p class="titleinexample">Example 16-7 Querying the V$PGA_TARGET_ADVICE_HISTOGRAM View</p>
<pre dir="ltr">SELECT low_optimal_size/1024 low_kb, (high_optimal_size+1)/1024 high_kb,
       estd_optimal_executions estd_opt_cnt,
       estd_onepass_executions estd_onepass_cnt,
       estd_multipasses_executions estd_mpass_cnt
  FROM V$PGA_TARGET_ADVICE_HISTOGRAM
 WHERE pga_target_factor = 2
   AND estd_total_executions != 0
 ORDER BY 1;
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">LOW_KB   HIGH_KB   ESTD_OPTIMAL_CNT   ESTD_ONEPASS_CNT   ESTD_MPASS_CNT
------   -------   ----------------   ----------------   --------------
     8        16             156107                  0                0
    16        32                148                  0                0
    32        64                 89                  0                0
    64       128                 13                  0                0
   128       256                 58                  0                0
   256       512                 10                  0                0
   512      1024                653                  0                0
  1024      2048                530                  0                0
  2048      4096                509                  0                0
  4096      8192                227                  0                0
  8192     16384                176                  0                0
 16384     32768                133                 16                0
 32768     65536                 66                103                0
 65536    131072                 15                 47                0
131072    262144                  0                 48                0
262144    524288                  0                 23                0
</pre>
<p>In this example, the output shows that increasing the value of the <code>PGA_AGGREGATE_TARGET</code> parameter by a factor of 2 will enable all work areas under 16 MB to execute in optimal size.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="TGDBA495"></a><a id="TGDBA494"></a>
<div class="props_rev_3"><a id="GUID-1E3F26AD-1F4A-4188-B775-53429DE27963"></a>
<h4 id="TGDBA-GUID-1E3F26AD-1F4A-4188-B775-53429DE27963" class="sect4">Using the V$SYSSTAT and V$SESSTAT Views</h4>
<div>
<div class="section">
<p>Statistics in the <code>V$SYSSTAT</code> and <code>V$SESSTAT</code> views show the total number of work areas executed with optimal, one-pass, and multi-pass memory size. These statistics are cumulative since the instance or the session was started.</p>
<p><a href="tune_pga.htm#GUID-1E3F26AD-1F4A-4188-B775-53429DE27963__BGBEEAEI">Example 16-8</a> shows a query of the <code>V$SYSSTAT</code> view that displays the total number and the percentage of times work areas were executed in these three sizes since the instance was started:</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-1E3F26AD-1F4A-4188-B775-53429DE27963__BGBEEAEI">
<p class="titleinexample">Example 16-8 Querying the V$SYSSTAT View</p>
<pre dir="ltr">SELECT name profile, cnt, DECODE(total, 0, 0, ROUND(cnt*100/total)) percentage
  FROM (SELECT name, value cnt, (SUM(value) over ()) total
  FROM V$SYSSTAT
 WHERE name
  LIKE &#39;workarea exec%&#39;);
</pre>
<p>The output of this query might look like the following:</p>
<pre dir="ltr">PROFILE                                    CNT PERCENTAGE
----------------------------------- ---------- ----------
workarea executions - optimal             5395         95
workarea executions - onepass              284          5
workarea executions - multipass              0          0
</pre>
<p>In this example, the output shows that 5,395 work area executions (or 95%) were executed in optimal size, and 284 work area executions (or 5%) were executed in one-pass size.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="TGDBA496"></a>
<div class="props_rev_3"><a id="GUID-BC6CBF45-EA12-44AE-AB84-EE7DF7B09DE8"></a>
<h4 id="TGDBA-GUID-BC6CBF45-EA12-44AE-AB84-EE7DF7B09DE8" class="sect4">Tutorial: How to Tune PGA_AGGREGATE_TARGET</h4>
<div>
<div class="section">
<p>This tutorial provides a guideline for tuning the value of the <code>PGA_AGGREGATE_TARGET</code> parameter using the various views discussed in this chapter.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To tune PGA_AGGREGATE_TARGET:</p>
<ol>
<li>
<p>Set the value of the <code>PGA_AGGREGATE_TARGET</code> parameter to avoid memory over-allocation.</p>
<p>Use the <code>V$PGA_TARGET_ADVICE</code> view to ensure that the <code>PGA_AGGREGATE_TARGET</code> value is not set within the over-allocation zone, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427">Using the V$PGA_TARGET_ADVICE View</a>&#34;</span>. In Example 16&ndash;8, the <code>PGA_AGGREGATE_TARGET</code> value should be set to at least 375 MB.</p>
</li>
<li>
<p>Maximize the PGA <code>cache</code> <code>hit</code> <code>percentage</code>, based on response time requirements and memory constraints.</p>
<p>Use the <code>V$PGA_TARGET_ADVICE</code> view to determine the optimal value for the <code>PGA_AGGREGATE_TARGET</code> parameter and set its value to the optimal value, or to the maximum value possible, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-4ED57621-B8D5-438C-A1CB-B5204A6C0427">Using the V$PGA_TARGET_ADVICE View</a>&#34;</span>.</p>
<p>Assume a limit <span class="italic">X</span> on the memory that can be allocated to PGA:</p>
<ul style="list-style-type: disc;">
<li>
<p>If limit <span class="italic">X</span> is higher than the optimal value, set the value of the <code>PGA_AGGREGATE_TARGET</code> parameter to the optimal value.</p>
<p>In Example 16&ndash;8, if you have 10 GB to dedicate to PGA, set the value of the <code>PGA_AGGREGATE_TARGET</code> parameter to 3 GB and dedicate the remaining 7 GB to the SGA.</p>
</li>
<li>
<p>If limit <span class="italic">X</span> is less than the optimal value, set the value of the <code>PGA_AGGREGATE_TARGET</code> parameter to <span class="italic">X</span>.</p>
<p>In Example 16&ndash;8, if you have only 2 GB to dedicate to PGA, set the value of the <code>PGA_AGGREGATE_TARGET</code> parameter to 2 GB and accept a <code>cache</code> <code>hit</code> <code>percentage</code> of 75%.</p>
</li>
</ul>
</li>
<li>
<p>Verify that the new value of the <code>PGA_AGGREGATE_TARGET</code> parameter will result in the desired number of optimal and one-pass work area executions and avoid any multi-pass work area executions.</p>
<p>Use the <code>V$PGA_TARGET_ADVICE_HISTOGRAM</code> view to predict the number of optimal, one-pass, and multi-pass work area executions, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-A2C80240-8436-42FC-B40F-B0358C955216">Using the V$PGA_TARGET_ADVICE_HISTOGRAM View</a>&#34;</span>.</p>
</li>
<li>
<p>If more PGA memory is required, then increase PGA memory by either reducing memory from SGA components or adding more physical memory to the system.</p>
</li>
<li>
<p>At any time, ensure the number of optimal, one-pass, and multi-pass work area executions matches predictions and tune the value of the <code>PGA_AGGREGATE_TARGET</code> parameter if necessary.</p>
<p>Use the <code>V$SYSSTAT</code> and <code>V$SESSTAT</code> views to verify the total number of work areas executed with optimal, one-pass, and multi-pass memory size since instance or session startup, respectively, as described in <span class="q">&#34;<a href="tune_pga.htm#GUID-1E3F26AD-1F4A-4188-B775-53429DE27963">Using the V$SYSSTAT and V$SESSTAT Views</a>&#34;</span>.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="TGDBA95344"></a>
<div class="props_rev_3"><a id="GUID-C1796FFD-5A7E-4FA7-945B-4B6CE374091A"></a>
<h2 id="TGDBA-GUID-C1796FFD-5A7E-4FA7-945B-4B6CE374091A" class="sect2">Limiting the Size of the Program Global Area</h2>
<div>
<p>In automatic PGA memory management mode, Oracle Database attempts to adhere to the <code>PGA_AGGREGATE_TARGET</code> value by dynamically controlling the amount of PGA memory allotted to work areas. However, PGA memory usage may exceed the <code>PGA_AGGREGATE_TARGET</code> setting at times due to the following reasons:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code>PGA_AGGREGATE_TARGET</code> setting acts as a target, and not a limit.</p>
</li>
<li>
<p><code>PGA_AGGREGATE_TARGET</code> only controls allocations of tunable memory.</p>
</li>
</ul>
<p>Excessive PGA usage can lead to high rates of swapping. When this occurs, the system may become unresponsive and unstable. In this case, consider using the <code>PGA_AGGREGATE_LIMIT</code> initialization parameter to limit overall PGA usage.</p>
<p>This section describes how to limit the size of the PGA using the <code>PGA_AGGREGATE_LIMIT</code> initialization parameter and contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tune_pga.htm#GUID-2DAF0E1B-E24F-4463-BB5D-B1C89904C443">About PGA_AGGREGATE_LIMIT</a></p>
</li>
<li>
<p><a href="tune_pga.htm#GUID-A45C942D-8206-492E-B4FD-FAF43503294E">Setting PGA_AGGREGATE_LIMIT</a></p>
</li>
</ul>
</div>
<a id="TGDBA95346"></a>
<div class="props_rev_3"><a id="GUID-2DAF0E1B-E24F-4463-BB5D-B1C89904C443"></a>
<h3 id="TGDBA-GUID-2DAF0E1B-E24F-4463-BB5D-B1C89904C443" class="sect3">About PGA_AGGREGATE_LIMIT</h3>
<div>
<p>The <code>PGA_AGGREGATE_LIMIT</code> initialization parameter enables you to specify a hard limit on PGA memory usage. If the <code>PGA_AGGREGATE_LIMIT</code> value is exceeded, Oracle Database aborts or terminates the sessions or processes that are consuming the most untunable PGA memory in the following order:</p>
<ul style="list-style-type: disc;">
<li>
<p>Calls for sessions that are consuming the most untunable PGA memory are aborted.</p>
</li>
<li>
<p>If PGA memory usage is still over the <code>PGA_AGGREGATE_LIMIT</code>, then the sessions and processes that are consuming the most untunable PGA memory are terminated.</p>
</li>
</ul>
<p>In determining the sessions and processes to abort or terminate, Oracle Database treats parallel queries as a single unit.</p>
<p>By default, the <code>PGA_AGGREGATE_LIMIT</code> parameter is set to the greater of 2 GB, 200% of the <code>PGA_AGGREGATE_TARGET</code> value, or 3 MB times the value of the <code>PROCESSES</code> parameter. However, it will not exceed 120% of the physical memory size minus the total SGA size. The default value is printed into the alert log. A warning message is printed in the alert log if the amount of physical memory on the system cannot be determined.</p>
<div class="infoboxnotealso" id="GUID-2DAF0E1B-E24F-4463-BB5D-B1C89904C443__GUID-E8E34211-5CDA-4EDB-BDA0-C4DE7142D7B2">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink REFRN10328" target="_blank" href="../REFRN/GUID-E364D0E5-19F2-4081-B55E-131DF09CFDB3.htm#REFRN10328"><span class="italic">Oracle Database Reference</span></a> for information about the <code>PGA_AGGREGATE_LIMIT</code> initialization parameter</p>
</li>
<li>
<p><a class="olink REFRN30180" target="_blank" href="../REFRN/GUID-4666F72E-1E2F-4FFF-89C7-E8144657F78A.htm#REFRN30180"><span class="italic">Oracle Database Reference</span></a> for information about the <code>V$PGASTAT</code> view</p>
</li>
<li>
<p><a class="olink ADMIN027" target="_blank" href="../ADMIN/dbrm.htm#ADMIN027"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about Oracle Database Resource Manager and consumer groups</p>
</li>
</ul>
</div>
</div>
</div>
<a id="TGDBA95345"></a>
<div class="props_rev_3"><a id="GUID-A45C942D-8206-492E-B4FD-FAF43503294E"></a>
<h3 id="TGDBA-GUID-A45C942D-8206-492E-B4FD-FAF43503294E" class="sect3">Setting PGA_AGGREGATE_LIMIT</h3>
<div>
<div class="section">
<p>The <code>PGA_AGGREGATE_LIMIT</code> initialization parameter can be set dynamically; a database restart is not necessary. You can set the value of <code>PGA_AGGREGATE_LIMIT</code> regardless of whether automatic memory management is being used.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To set PGA_AGGREGATE_LIMIT:</p>
<ul style="list-style-type: disc;">
<li>
<p>Set the <code>PGA_AGGREGATE_LIMIT</code> initialization parameter to a desired value in number of bytes.</p>
<p>The value is expresses as a number followed by <code>K</code> (for kilobytes), <code>M</code> (for megabytes), or <code>G</code> (for gigabytes). Setting the value to 0 disables the hard limit on PGA memory.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-A45C942D-8206-492E-B4FD-FAF43503294E__GUID-4733E5BC-00CB-43B7-B3A8-A40440735185">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN10328" target="_blank" href="../REFRN/GUID-E364D0E5-19F2-4081-B55E-131DF09CFDB3.htm#REFRN10328"><span class="italic">Oracle Database Reference</span></a> for information about the <code>PGA_AGGREGATE_LIMIT</code> initialization parameter</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1">
<tr>
<td class="cellalignment8">
<table class="cellalignment6">
<tr>
<td class="cellalignment5"><a href="tune_result_cache.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5"><a href="part4.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment10">
<table class="cellalignment4">
<tr>
<td class="cellalignment5"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>