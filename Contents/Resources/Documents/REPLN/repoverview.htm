<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-91725"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Introduction%20to%20Advanced%20Replication"></a><title>Introduction to Advanced Replication</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1042"/>
<meta name="dcterms.created" content="2015-02-06T8:21:51Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Replication"/>
<meta name="dcterms.identifier" content="E53117-02"/>
<meta name="dcterms.isVersionOf" content="REPLN"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="release_changes.htm" title="Previous" type="text/html"/>
<link rel="Next" href="repmaster.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53117-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/15</span> <!-- End Header -->
<div id="REPLN001" class="chapter"><a id="CJAFJIBB"></a> <a id="i15730"></a>
<h1 class="chapter"><span class="secnum">1</span> Introduction to Advanced Replication</h1>
<p>This chapter explains the basic concepts and terminology related to Advanced Replication.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i19713">Overview of Replication</a></p>
</li>
<li>
<p><a href="#i13971">Applications that Use Replication</a></p>
</li>
<li>
<p><a href="#i12973">Replication Objects, Groups, and Sites</a></p>
</li>
<li>
<p><a href="#i14155">Types of Replication Environments</a></p>
</li>
<li>
<p><a href="#i13140">Administration Tools for a Replication Environment</a></p>
</li>
<li>
<p><a href="#i12359">Replication Conflicts</a></p>
</li>
<li>
<p><a href="#i14752">Other Options for Multimaster Replication</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
If you are using Trusted Oracle, then see your documentation for Oracle security-related products for information about using replication in that environment.</div>
<a id="i19713"></a>
<div id="REPLN126" class="sect1">
<h2 class="sect1">Overview of Replication<a id="sthref6"></a><a id="sthref7"></a><a id="sthref8"></a></h2>
<p><span class="glossaryterm">Replication</span> is the process of copying and maintaining database objects, such as tables, in multiple databases that comprise a distributed database system. Changes applied at one site are captured and stored locally before being forwarded and applied at each of the remote locations. Advanced Replication is a fully integrated feature of the Oracle server; it is not a separate server.</p>
<p>Replication uses distributed database technology to share data between multiple sites, but a replicated database and a distributed database are different. In a distributed database, data is available at many locations, but a particular table resides at only one location. For example, the <code dir="ltr">employees</code> table resides at only the <code dir="ltr">ny.example.com</code> database in a distributed database system that also includes the <code dir="ltr">hk.example.com</code> and <code dir="ltr">la.example.com</code> databases. Replication means that the same data is available at multiple locations. For example, the <code dir="ltr">employees</code> table is available at <code dir="ltr">ny.example.com</code>, <code dir="ltr">hk.example.com</code>, and <code dir="ltr">la.example.com</code>.</p>
<p>Some of the most common reasons for using replication are described as follows:</p>
<p class="subhead1"><a id="REPLN127"></a>Availability</p>
<p>Replication provides fast, local access to shared data because it balances activity over multiple sites. Some users can access one server while other users access different servers, thereby reducing the load at all servers. Also, users can access data from the replication site that has the lowest access cost, which is typically the site that is geographically closest to them.</p>
<p class="subhead1"><a id="REPLN128"></a>Performance</p>
<p>Replication provides fast, local access to shared data because it balances activity over multiple sites. Some users can access one server while other users access different servers, thereby reducing the load at all servers.</p>
<p class="subhead1"><a id="REPLN129"></a>Disconnected Computing</p>
<p>A <span class="bold">materialized view</span> is a complete or partial copy (replica) of a target table from a single point in time. Materialized views enable users to work on a subset of a database while disconnected from the central database server. Later, when a connection is established, users can synchronize (refresh) materialized views on demand. When users refresh materialized views, they update the central database with all of their changes, and they receive any changes that happened while they were disconnected.</p>
<p class="subhead1"><a id="REPLN130"></a>Network Load Reduction and Mass Deployment</p>
<p>Replication can distribute data over multiple regional locations. Then, applications can access various regional servers instead of accessing one central server. This configuration can reduce network load dramatically.</p>
<p>You can find more detailed descriptions of the uses of replication in later chapters.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Advanced Replication feature is automatically installed and upgraded in every Oracle Database installation.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN028" href="../ADMIN/ds_concepts.htm#ADMIN028"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about distributed databases</div>
</div>
<!-- class="sect1" -->
<a id="i13971"></a>
<div id="REPLN131" class="sect1">
<h2 class="sect1">Applications that Use Replication<a id="sthref9"></a></h2>
<p>Replication supports a variety of applications that often have different requirements. Some applications allow for relatively autonomous individual materialized view sites. For example, sales force automation, field service, retail, and other mass deployment applications typically require data to be periodically synchronized between central database systems and a large number of small, remote sites, which are often disconnected from the central database. Members of a sales force must be able to complete transactions, regardless of whether they are connected to the central database. In this case, remote sites must be autonomous.</p>
<p>On the other hand, applications such as call centers and Internet systems require data on multiple servers to be synchronized in a continuous, nearly instantaneous manner to ensure that the service provided is available and equivalent at all times. For example, a retail Web site on the Internet must ensure that customers see the same information in the online catalog at each site. Here, data consistency is more important than site autonomy.</p>
<p>Advanced Replication can be used for each of the types of applications described in the previous paragraphs, and for systems that combine aspects of both types of applications. In fact, Advanced Replication can support both mass deployment and server-to-server replication, enabling integration into a single coherent environment. In such an environment, for example, sales force automation and customer service call centers can share data.</p>
<p>Advanced Replication can replicate data in environments that use different releases of Oracle and in environments that run Oracle on different operating systems. Therefore, applications that use data in such an environment can use Advanced Replication.</p>
</div>
<!-- class="sect1" -->
<a id="i12973"></a>
<div id="REPLN132" class="sect1">
<h2 class="sect1">Replication Objects, Groups, and Sites</h2>
<p>The following sections explain the basic components of a replication system, including replication objects, replication groups, and replication sites.</p>
<a id="i13556"></a>
<div id="REPLN133" class="sect2">
<h3 class="sect2">Replication Objects<a id="sthref10"></a></h3>
<p>A <span class="glossaryterm">replication object</span> is a database object existing on multiple servers in a distributed database system. In a replication environment, any updates made to a replication object at one site are applied to the copies at all other sites. Advanced Replication enables you to replicate the following types of objects:</p>
<ul>
<li>
<p>Tables</p>
</li>
<li>
<p>Indexes</p>
</li>
<li>
<p>Views and Object Views</p>
</li>
<li>
<p>Packages and Package Bodies</p>
</li>
<li>
<p>Procedures and Functions</p>
</li>
<li>
<p>User-Defined Types and Type Bodies</p>
</li>
<li>
<p>Triggers</p>
</li>
<li>
<p>Synonyms</p>
</li>
<li>
<p>Indextypes</p>
</li>
<li>
<p>User-Defined Operators</p>
</li>
</ul>
<p>Regarding tables, replication supports advanced features such as partitioned tables, index-organized tables, tables containing columns that are based on user-defined types, and object tables.</p>
</div>
<!-- class="sect2" -->
<div id="REPLN134" class="sect2"><a id="sthref11"></a>
<h3 class="sect2">Replication Groups<a id="sthref12"></a></h3>
<p>In a replication environment, Oracle manages replication objects using <span class="glossaryterm">replication groups</span>. A replication group is a collection of replication objects that are logically related.</p>
<p>By organizing related database objects within a replication group, it is easier to administer many objects together. Typically, you create and use a replication group to organize the schema objects necessary to support a particular database application. However, replication groups and schemas do not need to correspond with one another. A replication group can contain objects from multiple schemas, and a single schema can have objects in multiple replication groups. However, each replication object can be a member of only one replication group.</p>
</div>
<!-- class="sect2" -->
<div id="REPLN135" class="sect2"><a id="sthref13"></a>
<h3 class="sect2">Replication Sites<a id="sthref14"></a></h3>
<p>A replication group can exist at multiple <span class="glossaryterm">replication sites</span>. Replication environments support two basic types of sites: <span class="glossaryterm">master sites</span> and <a id="sthref15"></a><span class="glossaryterm">materialized view sites</span>. One site can be both a master site for one replication group and a materialized view site for a different replication group. However, one site cannot be both the master site and the materialized view site for the same replication group.</p>
<p>The differences between master sites and materialized view sites are the following:</p>
<ul>
<li>
<p>A replication group at a master site is more specifically referred to as a <span class="glossaryterm"><a id="sthref16"></a><a id="sthref17"></a>master group</span>. A replication group at a materialized view site is based on a master group and is more specifically referred to as a <a id="sthref18"></a><a id="sthref19"></a><span class="glossaryterm">materialized view group</span>. Additionally, every master group has exactly one <span class="glossaryterm"><a id="sthref20"></a><a id="sthref21"></a>master definition site</span>. A replication group&#39;s master definition site is a master site serving as the control center for managing the replication group and the objects in the group.</p>
</li>
<li>
<p><a id="sthref22"></a><a id="sthref23"></a>A master site maintains a complete copy of all objects in a replication group, while materialized views at a materialized view site can contain all or a subset of the table data within a master group. For example, if the <code dir="ltr">hr_repg</code> master group contains the tables <code dir="ltr">employees</code> and <code dir="ltr">departments</code>, then all of the master sites participating in a master group must maintain a complete copy of <code dir="ltr">employees</code> and <code dir="ltr">departments</code>. However, one materialized view site might contain only a materialized view of the <code dir="ltr">employees</code> table, while another materialized view site might contain materialized views of both the <code dir="ltr">employees</code> and <code dir="ltr">departments</code> tables.</p>
</li>
<li>
<p>All master sites in a multimaster replication environment communicate directly with one another to continually propagate data changes in the replication group. Materialized view sites contain an image, or materialized view, of the table data from a certain point in time. Typically, a materialized view is refreshed periodically to synchronize it with its master site. You can organize materialized views into <a id="sthref24"></a><a id="sthref25"></a><span class="glossaryterm">refresh groups</span>. Materialized views in a refresh group can belong to one or more materialized view groups, and they are refreshed at the same time to ensure that the data in all materialized views in the refresh group correspond to the same transactionally consistent point in time.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i14155"></a>
<div id="REPLN136" class="sect1">
<h2 class="sect1">Types of Replication Environments</h2>
<p>Advanced Replication supports the following types of replication environments:</p>
<ul>
<li>
<p><a href="#i12858">Multimaster Replication</a></p>
</li>
<li>
<p><a href="#i12887">Materialized View Replication</a></p>
</li>
<li>
<p><a href="#i15623">Multimaster and Materialized View Hybrid Configurations</a></p>
</li>
</ul>
<a id="i12858"></a>
<div id="REPLN137" class="sect2">
<h3 class="sect2">Multimaster Replication<a id="sthref26"></a><a id="sthref27"></a></h3>
<p><span class="glossaryterm">Multimaster replication</span> (also called peer-to-peer or <span class="italic">n</span>-way replication) enables multiple sites, acting as equal peers, to manage groups of replicated database objects. Each site in a multimaster replication environment is a master site, and each site communicates with the other master sites.</p>
<p>Applications can update any replicated table at any site in a multimaster configuration. Oracle database servers operating as master sites in a multimaster environment automatically work to converge the data of all table replicas and to ensure global transaction consistency and data integrity.</p>
<p><span class="glossaryterm"><a id="sthref28"></a><a id="sthref29"></a><a id="sthref30"></a><a id="sthref31"></a>Asynchronous replication</span> is the most common way to implement multimaster replication. Other ways include synchronous replication and procedural replication, which are discussed later in this chapter. When you use asynchronous replication, information about a data manipulation language (DML) change on a table is stored in the deferred transactions queue at the master site where the change occurred. These changes are called <span class="glossaryterm">deferred transactions</span>. The deferred transactions are pushed (or propagated) to the other participating master sites at regular intervals. You can control the amount of time in these intervals.</p>
<p>Using asynchronous replication means that data conflicts are possible because the same row value might be updated at two different master sites at nearly the same time. However, you can use techniques to avoid conflicts and, if conflicts occur, Oracle provides prebuilt mechanisms that can be implemented to resolve them. Information about unresolved conflicts is stored in an error log.</p>
<div id="REPLN138" class="figure">
<p class="titleinfigure"><a id="i15159"></a>Figure 1-1 Multimaster Replication</p>
<img width="600" height="296" src="img/repln001.gif" alt="Description of Figure 1-1 follows"/><br/>
<a id="sthref32" href="img_text/repln001.htm">Description of &#34;Figure 1-1 Multimaster Replication&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div id="REPLN139" class="sect3"><a id="sthref33"></a>
<h4 class="sect3">Master Group Quiesce<a id="sthref34"></a><a id="sthref35"></a></h4>
<p>At times, you must stop all replication activity for a master group so that you can perform certain administrative tasks on the master group. For example, you must stop all replication activity for a master group to add a new master group object. Stopping all replication activity for a master group is called <span class="glossaryterm">quiescing</span> the group. When a master group is quiesced, users cannot issue DML statements on any of the objects in the master group. Also, all deferred transactions must be propagated before you can quiesce a master group. Users can continue to query the tables in a quiesced master group.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i12887"></a>
<div id="REPLN140" class="sect2">
<h3 class="sect2">Materialized View Replication<a id="sthref36"></a><a id="sthref37"></a><a id="sthref38"></a></h3>
<p>A materialized view contains a complete or partial copy of a target <span class="bold">master</span> from a single point in time. The target master can be either a master table at a master site or a master materialized view at a materialized view site. A <a id="sthref39"></a><a id="sthref40"></a><span class="bold">master materialized view</span> is a materialized view that functions as a master for another materialized view. A <a id="sthref41"></a><a id="sthref42"></a><a id="sthref43"></a><span class="bold">multitier materialized view</span> is one that is based on another materialized view, instead of on a master table.</p>
<p>Materialized views provide the following benefits:</p>
<ul>
<li>
<p>Enable local access, which improves response times and availability</p>
</li>
<li>
<p>Offload queries from the master site or master materialized view site, because users can query the local materialized view instead</p>
</li>
<li>
<p>Increase data security by enabling you to replicate only a selected subset of the target master&#39;s data set</p>
</li>
</ul>
<p>A materialized view can be read-only, updatable, or writeable, and these types of materialized views provide benefits in addition to those listed previously.</p>
<div id="REPLN141" class="sect3"><a id="sthref44"></a>
<h4 class="sect3">Overview of Read-Only Materialized Views<a id="sthref45"></a><a id="sthref46"></a></h4>
<p>In a basic configuration, materialized views can provide read-only access to the table data that originates from a master site or master materialized view site. Applications can query data from <span class="bold">read-only materialized views</span> to avoid network access to the master site, regardless of network availability. However, applications throughout the system must access data at the master site to perform data manipulation language changes (DML). <a href="#i12966">Figure 1-2</a> illustrates basic, read-only replication. The master tables and master materialized views of read-only materialized views do not need to belong to a replication group.</p>
<p>Read-only materialized views provide the following benefits:</p>
<ul>
<li>
<p>Eliminate the possibility of conflicts because they cannot be updated.</p>
</li>
<li>
<p>Support complex materialized views. Examples of complex materialized views are materialized views that contain set operations or a <code dir="ltr">CONNECT</code> <code dir="ltr">BY</code> clause.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="repmview.htm#i52501">&#34;Available Materialized Views&#34;</a> for more information about complex materialized views</div>
<div id="REPLN142" class="figure">
<p class="titleinfigure"><a id="i12966"></a>Figure 1-2 Read-Only Materialized View Replication</p>
<img width="600" height="344" src="img/repln053.gif" alt="Description of Figure 1-2 follows"/><br/>
<a id="sthref47" href="img_text/repln053.htm">Description of &#34;Figure 1-2 Read-Only Materialized View Replication&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect3" -->
<div id="REPLN143" class="sect3"><a id="sthref48"></a>
<h4 class="sect3">Overview of Updatable Materialized Views<a id="sthref49"></a><a id="sthref50"></a></h4>
<p>In a more advanced configuration, you can create an <span class="glossaryterm">updatable materialized view</span> that allows users to insert, update, and delete rows of the target master table or master materialized view by performing these operations on the materialized view. An updatable materialized view can also contain a subset of the data in the target master. <a href="#i19308">Figure 1-3</a> illustrates a replication environment using updatable materialized views.</p>
<p>Updatable materialized views are based on tables or other materialized views that have been set up to support replication. In fact, updatable materialized views must be part of a <span class="bold">materialized view group</span> that is based on another replication group. For changes made to an updatable materialized view to be pushed back to the master during refresh, the updatable materialized view must belong to a materialized view group.</p>
<div id="REPLN144" class="figure">
<p class="titleinfigure"><a id="i19308"></a>Figure 1-3 Updatable Materialized View Replication</p>
<img width="600" height="343" src="img/repln083.gif" alt="Description of Figure 1-3 follows"/><br/>
<a id="sthref51" href="img_text/repln083.htm">Description of &#34;Figure 1-3 Updatable Materialized View Replication&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Updatable materialized views have the following properties.</p>
<ul>
<li>
<p>They are always based on a single table, although multiple tables can be referenced in a subquery.</p>
</li>
<li>
<p>They can be incrementally (or fast) refreshed.</p>
</li>
<li>
<p>Oracle propagates the changes made to an updatable materialized view to the materialized view&#39;s remote master table or master materialized view. The updates to the master then cascade to all other replication sites.</p>
</li>
</ul>
<p>Updatable materialized views provide the following benefits:</p>
<ul>
<li>
<p>Allow users to query and update a local replicated data set even when disconnected from the master site or master materialized view site.</p>
</li>
<li>
<p>Require fewer resources than multimaster replication, while still supporting data updates. Materialized views can reduce the amount of stress placed on network resources because materialized views can be refreshed on demand, while multimaster replication propagates changes at regular intervals. In addition, because materialized views can reside in a database that contains far less data, the disk space and memory requirements for materialized view clients can be less than the requirements for an Oracle server containing master sites.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="REPLN145" class="sect3"><a id="sthref52"></a>
<h4 class="sect3">Overview of Writeable Materialized Views</h4>
<p>You can create a materialized view using the <code dir="ltr">FOR</code> <code dir="ltr">UPDATE</code> clause during creation but then never add the materialized view to a materialized view group. In this case, users can perform data manipulation language (DML) changes on the materialized view, but these changes cannot be pushed back to the master and are lost if the materialized view refreshes. Such materialized views are called <span class="bold">writeable materialized views</span>.</p>
</div>
<!-- class="sect3" -->
<div id="REPLN146" class="sect3"><a id="sthref53"></a>
<h4 class="sect3">Overview of Row and Column Subsetting with Materialized Views<a id="sthref54"></a><a id="sthref55"></a><a id="sthref56"></a><a id="sthref57"></a><a id="sthref58"></a><a id="sthref59"></a></h4>
<p>Both row and column subsetting enable you to create materialized views that contain a partial copy of the data at a master table or master materialized view. Such materialized views can be helpful for regional offices or sales forces that do not require the complete data set.</p>
<p>Row subsetting enables you to include only the rows that are needed from the masters in the materialized views by using a <code dir="ltr">WHERE</code> clause. Column subsetting enables you to include only the columns that are needed from the masters in the materialized views. You do this by specifying particular columns in the <code dir="ltr">SELECT</code> statement during materialized view creation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Column subsetting of updatable materialized views is supported only with deployment templates and the Advanced Replication interface in Oracle Enterprise Manager Cloud Control. This restriction does not apply to column subsetting of read-only materialized views.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="repmview.htm#i28635">&#34;Data Subsetting with Materialized Views&#34;</a></p>
</li>
<li>
<p><a href="repdt.htm#i29069">&#34;Column Subsetting with Deployment Templates&#34;</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i16032"></a>
<div id="REPLN147" class="sect3">
<h4 class="sect3">Materialized View Refresh<a id="sthref60"></a><a id="sthref61"></a><a id="sthref62"></a></h4>
<p>To ensure that a materialized view is consistent with its master table or master materialized view, you must <span class="glossaryterm">refresh</span> the materialized view periodically. Oracle provides the following three methods to refresh materialized views:</p>
<ul>
<li>
<p><span class="glossaryterm"><a id="sthref63"></a>Fast refresh</span> uses materialized view logs to update only the rows that have changed since the last refresh.</p>
</li>
<li>
<p><span class="glossaryterm"><a id="sthref64"></a>Complete refresh</span> updates the entire materialized view.</p>
</li>
<li>
<p><span class="glossaryterm"><a id="sthref65"></a>Force refresh</span> performs a fast refresh when possible. When a fast refresh is not possible, force refresh performs a complete refresh.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="REPLN148" class="sect3"><a id="sthref66"></a>
<h4 class="sect3">Refresh Groups<a id="sthref67"></a><a id="sthref68"></a><a id="sthref69"></a></h4>
<p>When it is important for materialized views to be transactionally consistent with each other, you can organize them into <span class="glossaryterm">refresh groups</span>. By refreshing the refresh group, you can ensure that the data in all of the materialized views in the refresh group correspond to the same transactionally consistent point in time. Both read-only and updatable materialized views can be included in a refresh group. A materialized view in a refresh group still can be refreshed individually, but doing so nullifies the benefits of the refresh group because refreshing the materialized view individually does not refresh the other materialized views in the refresh group.</p>
</div>
<!-- class="sect3" -->
<div id="REPLN149" class="sect3"><a id="sthref70"></a>
<h4 class="sect3">Materialized View Log<a id="sthref71"></a><a id="sthref72"></a><a id="sthref73"></a></h4>
<p>A <span class="glossaryterm">materialized view log</span> is a table at the materialized view&#39;s master site or master materialized view site that records all of the DML changes to the master table or master materialized view. A materialized view log is associated with a single master table or master materialized view, and each of those has only one materialized view log, regardless of how many materialized views refresh from the master. A fast refresh of a materialized view is possible only if the materialized view&#39;s master has a materialized view log. When a materialized view is fast refreshed, entries in the materialized view&#39;s associated materialized view log that have appeared since the materialized view was last refreshed are applied to the materialized view.</p>
</div>
<!-- class="sect3" -->
<div id="REPLN150" class="sect3"><a id="sthref74"></a>
<h4 class="sect3">Deployment Templates<a id="sthref75"></a><a id="sthref76"></a><a id="sthref77"></a></h4>
<p><span class="glossaryterm">Deployment templates</span> simplify the task of deploying and maintaining many remote materialized view sites. Using deployment templates, you can define a collection of materialized view definitions at a master site, and you can use parameters in the definitions so that the materialized views can be customized for individual users or types of users.</p>
<p>For example, you might create one template for the sales force and another template for field service representatives. In this case, a parameter value might be the sales territory or the customer support level. When a remote user connects to a master site, the user can query a list of available templates. When the user <span class="glossaryterm">instantiates</span> a template, the materialized views are created and populated at the remote site. The parameter values can either be supplied by the remote user or taken from a table maintained at the master site.</p>
<div id="REPLN151" class="sect4"><a id="sthref78"></a>
<h5 class="sect4">Online and Offline Instantiation<a id="sthref79"></a><a id="sthref80"></a></h5>
<p>When a user instantiates a template at a materialized view site, the object DDL (for example, <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> or <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statements) is executed to create the schema objects at the materialized view site, and the objects are populated with the appropriate data. Users can instantiate templates while connected to the master site over a network (online instantiation), or while disconnected from the master site (offline instantiation).</p>
<p>Offline instantiation is often used to decrease server loads during peak usage periods and to reduce remote connection times. To instantiate a template offline, you package the template and required data on some type of storage media, such as tape, CD-ROM, and so on. Then, instead of pulling the data from the master site, users pull the data from the storage media containing the template and data.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i15623"></a>
<div id="REPLN152" class="sect2">
<h3 class="sect2">Multimaster and Materialized View Hybrid Configurations<a id="sthref81"></a></h3>
<p>Multimaster replication and materialized views can be combined in <span class="glossaryterm">hybrid</span> or &#34;mixed&#34; configurations to meet different application requirements. Hybrid configurations can have any number of master sites and multiple materialized view sites for each master.</p>
<p>For example, as shown in <a href="#i14540">Figure 1-4</a>, multimaster (or <span class="italic">n</span>-way) replication between two masters can support full-table replication between the databases that support two geographic regions. Materialized views can be defined on the masters to replicate full tables or table subsets to sites within each region.</p>
<div id="REPLN153" class="figure">
<p class="titleinfigure"><a id="i14540"></a>Figure 1-4 Hybrid Configuration</p>
<img width="488" height="371" src="img/repln002.gif" alt="Description of Figure 1-4 follows"/><br/>
<a id="sthref82" href="img_text/repln002.htm">Description of &#34;Figure 1-4 Hybrid Configuration&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Key differences between materialized views and replicated master tables include the following:</p>
<ul>
<li>
<p>Replicated master tables must contain data for the full table being replicated, whereas materialized views can replicate subsets of master table data.</p>
</li>
<li>
<p>Multimaster replication enables you to replicate changes for each transaction as the changes occur. Materialized view refreshes are set oriented, propagating changes from multiple transactions in a more efficient, batch-oriented operation, but at less frequent intervals.</p>
</li>
<li>
<p>If conflicts occur because of changes made to multiple copies of the same data, then detection and resolution of conflicts always occurs at a master site or a master materialized view site.</p>
</li>
</ul>
<div id="REPLN154" class="sect3"><a id="sthref83"></a>
<h4 class="sect3">Scheduled Links<a id="sthref84"></a><a id="sthref85"></a><a id="sthref86"></a></h4>
<p>Both master sites and materialized view sites use <span class="bold">scheduled links</span> to propagate data changes to other sites. A scheduled link is a database link with a user-defined schedule to push deferred transactions. A scheduled link determines how a master site propagates its deferred transaction queue to another master site, or how a materialized view site propagates its deferred transaction queue to its master site. When you create a scheduled link, Oracle creates a job in the local job queue to push the deferred transaction queue to another site in the system.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i13140"></a>
<div id="REPLN155" class="sect1">
<h2 class="sect1">Administration Tools for a Replication Environment<a id="sthref87"></a></h2>
<p>Several tools are available for configuring, administering, and monitoring your replication environment. The Advanced Replication interface in Oracle Enterprise Manager Cloud Control provides a powerful graphical user interface (GUI) to help you manage your environment, while the replication management application programming interface (API) provides you with a familiar API to build customized scripts for replication administration. Additionally, the replication catalog keeps you informed about your replication environment.</p>
<a id="i12952"></a>
<div id="REPLN156" class="sect2">
<h3 class="sect2">Advanced Replication Interface in Oracle Enterprise Manager Cloud Control<a id="sthref88"></a><a id="sthref89"></a></h3>
<p>To help configure and administer replication environments, Oracle provides a sophisticated Advanced Replication interface in Oracle Enterprise Manager Cloud Control. To access the Advanced Replication interface, go to the Data Movement subpage in Oracle Enterprise Manager Cloud Control. The Advanced Replication interface online Help is the primary documentation source for this tool. <a href="#CJADJDJF">Figure 1-5</a> shows the Advanced Replication interface in Oracle Enterprise Manager Cloud Control.</p>
<div id="REPLN157" class="figure">
<p class="titleinfigure"><a id="CJADJDJF"></a>Figure 1-5 Advanced Replication Interface in Oracle Enterprise Manager Cloud Control</p>
<img width="874" height="538" src="img/repln_adv_rep_main.gif" alt="Description of Figure 1-5 follows"/><br/>
<a id="sthref90" href="img_text/repln_adv_rep_main.htm">Description of &#34;Figure 1-5 Advanced Replication Interface in Oracle Enterprise Manager Cloud Control&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The Advanced Replication interface online Help in Oracle Enterprise Manager Cloud Control</div>
</div>
<!-- class="sect2" -->
<div id="REPLN158" class="sect2"><a id="sthref91"></a>
<h3 class="sect2">Replication Management API<a id="sthref92"></a><a id="sthref93"></a></h3>
<p>The replication management API is a set of PL/SQL packages that encapsulate procedures and functions that you can use to configure an Advanced Replication environment. The replication management API is a command-line alternative to the Advanced Replication interface in Oracle Enterprise Manager Cloud Control. In fact, the Advanced Replication interface uses the procedures and functions of the replication management API to perform its work. For example, when you use the Advanced Replication interface to create a master group, the interface completes the task by making a call to the <code dir="ltr">CREATE_MASTER_REPGROUP</code> procedure in the <code dir="ltr">DBMS_REPCAT</code> package. The replication management API makes it easy for you to create custom scripts to manage your replication environment.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPMA" href="../REPMA/toc.htm"><span class="italic">Oracle Database Advanced Replication Management API Reference</span></a> for more information about using the replication management API</div>
</div>
<!-- class="sect2" -->
<div id="REPLN159" class="sect2"><a id="sthref94"></a>
<h3 class="sect2">Replication Catalog<a id="sthref95"></a><a id="sthref96"></a></h3>
<p>Every master site and materialized view site in a replication environment has a <span class="glossaryterm">replication catalog</span>. A replication catalog for a site is a distinct set of data dictionary tables and views that maintain administrative information about replication objects and replication groups at the site. Every server participating in a replication environment can automate the replication of objects in replication groups using the information in its replication catalog.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPMA100" href="../REPMA/rarpart4.htm#REPMA100"><span class="italic">Oracle Database Advanced Replication Management API Reference</span></a> for more information about the replication catalog</div>
</div>
<!-- class="sect2" -->
<a id="i16678"></a>
<div id="REPLN160" class="sect2">
<h3 class="sect2">Distributed Schema Management<a id="sthref97"></a><a id="sthref98"></a><a id="sthref99"></a><a id="sthref100"></a></h3>
<p>In a replication environment, all DDL statements must be issued using either the Advanced Replication interface in the Oracle Enterprise Manager Cloud Control or the <code dir="ltr">DBMS_REPCAT</code> package in the replication management API. Specifically, if you use the <code dir="ltr">DBMS_REPCAT</code> package, then use the <code dir="ltr">CREATE_MASTER_REPOBJECT</code> procedure to add objects to a master group, and use <code dir="ltr">ALTER_MASTER_REPOBJECT</code> to modify replicated objects. You can also use the <code dir="ltr">EXECUTE_DDL</code> procedure.</p>
<p>When you use either the Advanced Replication interface or the <code dir="ltr">DBMS_REPCAT</code> package, all DDL statements are replicated to all of the sites participating in the replication environment. In some cases, you can also use export/import to create replicated objects.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any DDL statements issued directly using a tool such as SQL*Plus are not replicated to other sites.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i12359"></a>
<div id="REPLN161" class="sect1">
<h2 class="sect1">Replication Conflicts<a id="sthref101"></a><a id="sthref102"></a></h2>
<p>Asynchronous multimaster and updatable materialized view replication environments must address the possibility of replication conflicts that can occur when, for example, two transactions originating from different sites update the same row at nearly the same time. When data conflicts occur, you need a mechanism to ensure that the conflict is resolved in accordance with your business rules and to ensure that the data converges correctly at all sites.</p>
<p>In addition to logging any conflicts that can occur in your replication environment, Advanced Replication offers a variety of prebuilt conflict resolution methods that enable you to define a conflict resolution system for your database that resolves conflicts in accordance with your business rules. If you have a unique situation that Oracle&#39;s prebuilt conflict resolution methods cannot resolve, then you have the option of building and using your own conflict resolution methods.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="repconflicts.htm#i26513">Chapter 5, &#34;Conflict Resolution Concepts and Architecture&#34;</a> for information about how to design your database to avoid data conflicts and how to build conflict resolution methods that resolve such conflicts when they occur</p>
</li>
<li>
<p>The Advanced Replication interface online Help in Oracle Enterprise Manager Cloud Control for instructions on using the interface to configure conflict resolution methods</p>
</li>
<li>
<p><a class="olink REPMA006" href="../REPMA/rarconflictres.htm#REPMA006"><span class="variable">Oracle Database Advanced Replication Management API Reference</span></a> for a description of how to build conflict resolution methods using the replication management&nbsp;API</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i14752"></a>
<div id="REPLN162" class="sect1">
<h2 class="sect1">Other Options for Multimaster Replication</h2>
<p>Asynchronous replication is the most common way to implement multimaster replication. However, you have two other options: synchronous replication and procedural replication.</p>
<div id="REPLN163" class="sect2"><a id="sthref103"></a>
<h3 class="sect2">Synchronous Replication<a id="sthref104"></a><a id="sthref105"></a></h3>
<p>A multimaster replication environment can use either asynchronous or synchronous replication to copy data. With asynchronous replication, changes made at one master site occur at a later time at all other participating master sites. With synchronous replication, changes made at one master site occur immediately at all other participating master sites.</p>
<p>When you use synchronous replication, an update of a table results in the immediate replication of the update at all participating master sites. In fact, each transaction includes all master sites. Therefore, if one master site cannot process a transaction for any reason, then the transaction is rolled back at all master sites.</p>
<p>Although you avoid the possibility of conflicts when you use synchronous replication, it requires a very stable environment to operate smoothly. If communication to one master site is not possible because of a network problem, for example, then users can still query replicated tables, but no transactions can be completed until communication is reestablished. Also, it is possible to configure asynchronous replication so that it simulates synchronous replication.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="repplan.htm#i20874">&#34;Scheduling Continuous Pushes&#34;</a> for information about simulating synchronous replication in an asynchronous replication environment</div>
</div>
<!-- class="sect2" -->
<a id="i12431"></a>
<div id="REPLN164" class="sect2">
<h3 class="sect2">Procedural Replication<a id="sthref106"></a><a id="sthref107"></a></h3>
<p>Batch processing applications can change large amounts of data within a single transaction. In such cases, typical row-level replication might load a network with many data changes. To avoid such problems, a batch processing application operating in a replication environment can use Oracle&#39;s <span class="glossaryterm">procedural replication</span> to replicate simple stored procedure calls to converge data replicas. Procedural replication replicates only the call to a stored procedure that an application uses to update a table. It does not replicate the data modifications themselves.</p>
<p>To use procedural replication, you must replicate the packages that modify data in the system to all sites. After replicating a package, you must generate a <span class="glossaryterm"><a id="sthref108"></a><a id="sthref109"></a>wrapper</span> for the package at each site. When an application calls a packaged procedure at the local site to modify data, the wrapper ensures that the call is ultimately made to the same packaged procedure at all other sites in the replication environment. Procedural replication can occur asynchronously or synchronously.</p>
<div id="REPLN165" class="sect3"><a id="sthref110"></a>
<h4 class="sect3">Conflict Detection and Procedural Replication<a id="sthref111"></a><a id="sthref112"></a><a id="sthref113"></a></h4>
<p>When replicating data using procedural replication, the procedures that replicate data are responsible for ensuring the integrity of the replicated data. That is, you must design such procedures to either avoid or detect replication conflicts and to resolve them appropriately. Consequently, procedural replication is most typically used when databases are modified only with large batch operations. In such situations, replication conflicts are unlikely because numerous transactions are not contending for the same data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPMA103" href="../REPMA/rarmanmaster.htm#REPMA103"><span class="variable">Oracle Database Advanced Replication Management API Reference</span></a> for more information about procedural replication</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5764">
<tr>
<td class="cellalignment5771">
<table class="cellalignment5769">
<tr>
<td class="cellalignment5768"><a href="release_changes.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5768"><a href="repmaster.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5773">
<table class="cellalignment5767">
<tr>
<td class="cellalignment5768"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5768"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5768"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5768"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5768"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5768"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>