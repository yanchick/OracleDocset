<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-91996"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Managing%20Physical%20and%20Snapshot%20Standby%20Databases"></a><title>Managing Physical and Snapshot Standby Databases</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="starting, Redo Apply, log apply services, starting, Redo Apply, stopping, physical standby databases, opening for read-only or read/write access, real-time query feature, using, apply lag, monitoring in a real-time query environment, monitoring apply lag, apply lag tolerance, configuring in a real-time query environment, configuring apply lag tolerance, forcing Redo Apply synchronization, restrictions, DML operations, on temporary tables, global temporary tables, transportable tablespaces, using with a physical standby database, using transportable tablespaces, tablespaces, moving between databases, STANDBY_FILE_MANAGEMENT initialization parameter, when renaming datafiles, renaming, datafiles, setting the STANDBY_FILE_MANAGEMENT parameter, online redo log files, adding, dropping, recovering, through resetlogs, primary database, monitoring events on, monitoring, primary database events, monitoring, views, V$MANAGED_STANDBY, V$MANAGED_STANDBY view, tuning, log apply rate for Redo Apply, tuning the log apply rate, tuning for Redo Apply, snapshot standby databases, managing"/>
<meta name="dcterms.created" content="2017-07-21T12:09:00Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Guard Concepts and Administration"/>
<meta name="dcterms.identifier" content="E48552-08"/>
<meta name="dcterms.isVersionOf" content="SBYDB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="role_management.htm" title="Previous" type="text/html"/>
<link rel="Next" href="manage_ls.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48552-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-B140C38B-DE01-4252-8422-7154018DDFEC"></a> <span id="PAGE" style="display:none;">16/35</span> <!-- End Header -->
<a id="SBYDB00700"></a>
<h1 id="SBYDB-GUID-B140C38B-DE01-4252-8422-7154018DDFEC" class="sect1"><span class="enumeration_chapter">10</span> Managing Physical and Snapshot Standby Databases</h1>
<div>
<p>See the following topics for information about how to manage physical and snapshot standby databases:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="manage_ps.htm#GUID-D7026A24-78EF-4C0D-84E5-41D767516565">Starting Up and Shutting Down a Physical Standby Database</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-D5FB88EC-799D-40E7-80E1-19474E3167E4">Opening a Physical Standby Database</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-62007456-DD41-431D-B0E7-56C99FEB2277">Primary Database Changes That Require Manual Intervention at a Physical Standby</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-02218512-31A6-461E-96B4-0B9997DCFC4A">Recovering Through the OPEN RESETLOGS Statement</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-0682EE24-B495-48E8-9E1F-52AC0E6FE486">Monitoring Primary_ Physical Standby_ and Snapshot Standby Databases</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-EEDAC95A-828F-4117-AF57-D8ABA702D42D">Tuning Redo Apply</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-CE30E2D6-5B53-4389-8B02-FC0F341C8C1A">Managing a Snapshot Standby Database</a></p>
</li>
</ul>
<p>See <a class="olink DGBKR001" target="_blank" href="../DGBKR/concepts.htm#DGBKR001"><span class="italic">Oracle Data Guard Broker</span></a> to learn how the Oracle Data Guard broker simplifies the management of physical and snapshot standby databases.</p>
</div>
<a id="SBYDB00705"></a>
<div class="props_rev_3"><a id="GUID-D7026A24-78EF-4C0D-84E5-41D767516565"></a>
<h2 id="SBYDB-GUID-D7026A24-78EF-4C0D-84E5-41D767516565" class="sect2"><span class="enumeration_section">10.1</span> Starting Up and Shutting Down a Physical Standby Database</h2>
<div>
<p>This section describes how to start up and shut down a physical standby database.</p>
</div>
<a id="SBYDB4776"></a>
<div class="props_rev_3"><a id="GUID-76930886-6460-45AE-86CA-84DCB41E5BE5"></a>
<h3 id="SBYDB-GUID-76930886-6460-45AE-86CA-84DCB41E5BE5" class="sect3"><span class="enumeration_section">10.1.1</span> Starting Up a Physical Standby Database</h3>
<div>
<div class="section">
<p>Use the SQL*Plus <code class="codeph">STARTUP</code> command to start a physical standby database. The SQL*Plus <code class="codeph">STARTUP</code> command starts, mounts, and opens a physical standby database in read-only mode when it is invoked without any arguments.</p>
<p>After it has been mounted or opened, a physical standby database can receive redo data from the primary database.</p>
<p>See <a href="log_apply.htm#GUID-2B839172-947E-48A4-9FFD-33CC6907809F">Applying Redo Data to Physical Standby Databases</a> for information about Redo Apply and <a href="manage_ps.htm#GUID-D5FB88EC-799D-40E7-80E1-19474E3167E4">Opening a Physical Standby Database</a> for information about opening a physical standby database in read-only mode.</p>
<div class="infobox-note" id="GUID-76930886-6460-45AE-86CA-84DCB41E5BE5__GUID-E95C72E7-083B-4FA4-8FE5-E6C437931071">
<p class="notep1">Note:</p>
<p>When Redo Apply is started on a physical standby database that has not yet received redo data from the primary database, an <code class="codeph">ORA-01112</code> message may be returned. This indicates that Redo Apply is unable to determine the starting sequence number for media recovery. If this occurs, manually retrieve an archived redo log file from the primary database and register it on the standby database, or wait for redo transport to begin before starting Redo Apply.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4777"></a>
<div class="props_rev_3"><a id="GUID-B51873F4-F50C-4757-9DF9-D43635BFAD7F"></a>
<h3 id="SBYDB-GUID-B51873F4-F50C-4757-9DF9-D43635BFAD7F" class="sect3"><span class="enumeration_section">10.1.2</span> Shutting Down a Physical Standby Database</h3>
<div>
<div class="section">
<p>Use the SQL*Plus <code class="codeph">SHUTDOWN</code> command to stop Redo Apply and <a id="d19350e370" class="indexterm-anchor"></a><a id="d19350e374" class="indexterm-anchor"></a><a id="d19350e378" class="indexterm-anchor"></a><a id="d19350e384" class="indexterm-anchor"></a>shut down a physical standby database. Control is not returned to the session that initiates a database shutdown until shutdown is complete.</p>
<p>If the primary database is up and running, defer the standby destination on the primary database and perform a log switch before shutting down the physical standby database.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB00706"></a>
<div class="props_rev_3"><a id="GUID-D5FB88EC-799D-40E7-80E1-19474E3167E4"></a>
<h2 id="SBYDB-GUID-D5FB88EC-799D-40E7-80E1-19474E3167E4" class="sect2"><span class="enumeration_section">10.2</span> Opening a Physical Standby Database</h2>
<div>
<p><a id="d19350e466" class="indexterm-anchor"></a><a id="d19350e470" class="indexterm-anchor"></a>A physical standby database can be opened for read-only access and used to offload queries from a primary database.</p>
<div class="infobox-note" id="GUID-D5FB88EC-799D-40E7-80E1-19474E3167E4__GUID-E5C2C62C-70A8-4E75-A692-8E904A25EB63">
<p class="notep1">Note:</p>
<p>A physical standby database that is opened in read-only mode is subject to the same restrictions as any other Oracle database opened in read-only mode. For more information, see <a class="olink ADMIN11154" target="_blank" href="../ADMIN/start.htm#ADMIN11154"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
</div>
<p>If a license for the Oracle Active Data Guard<a id="d19350e485" class="indexterm-anchor"></a> option has been purchased, Redo Apply can be active while the physical standby database is open, thus allowing queries to return results that are identical to what would be returned from the primary database. This capability is known as the real-time query<a id="d19350e490" class="indexterm-anchor"></a> feature.<a id="d19350e493" class="indexterm-anchor"></a> See <a href="manage_ps.htm#GUID-07CB190C-C248-4FF5-AB64-EAA9C6D42677">Real-time query</a> for more details.</p>
<p>If a license for the Oracle Active Data Guard option has not been purchased, a physical standby database cannot be open while Redo Apply is active, so the following rules must be observed when opening a physical standby database instance or starting Redo Apply:</p>
<ul style="list-style-type: disc;">
<li>
<p>Redo Apply must be stopped before any physical standby database instance is opened.</p>
</li>
<li>
<p>If one or more physical standby instances are open, those instances must be stopped or restarted in a mounted state before starting Redo Apply.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-D5FB88EC-799D-40E7-80E1-19474E3167E4__GUID-9E51DA30-348A-4DF3-ACB6-03447C2541ED">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DBLIC141" target="_blank" href="../DBLIC/options.htm#DBLIC141"><span class="italic">Oracle Database Licensing Information</span></a> for more information about Oracle Active Data Guard</p>
</li>
</ul>
</div>
</div>
<a id="SBYDB5039"></a><a id="SBYDB00707"></a>
<div class="props_rev_3"><a id="GUID-07CB190C-C248-4FF5-AB64-EAA9C6D42677"></a>
<h3 id="SBYDB-GUID-07CB190C-C248-4FF5-AB64-EAA9C6D42677" class="sect3"><span class="enumeration_section">10.2.1</span> Real-time Query</h3>
<div>
<div class="section">
<p>The <code class="codeph">COMPATIBLE</code> database initialization parameter must be set to 11.0 or higher to use the real-time query feature of the Oracle Active Data Guard option.<a id="d19350e602" class="indexterm-anchor"></a><a id="d19350e606" class="indexterm-anchor"></a></p>
<p>A physical standby database instance cannot be opened if Redo Apply is active on a mounted instance of that database. Use the following SQL statements to stop Redo Apply, open a standby instance read-only, and restart Redo Apply:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
SQL&gt; ALTER DATABASE OPEN;
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;
</pre>
<div class="infobox-note" id="GUID-07CB190C-C248-4FF5-AB64-EAA9C6D42677__GUID-D6192E36-A702-488C-9501-E869F2DEEA6E">
<p class="notep1">Note:</p>
<p>If Redo Apply is active on an open instance, additional instances can be opened without having to stop Redo Apply.</p>
</div>
<p>Redo Apply cannot be started on a mounted physical standby instance if any instance of that database is open. The instance must be opened before starting Redo Apply on it.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Example: Querying V$DATABASE to Check the Standby&#39;s Open Mode</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This example shows how the value of the <code class="codeph">V$DATABASE.OPEN_MODE</code> column changes when a physical standby is open in real-time query mode.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Start up and open a physical standby instance, and perform the following SQL query to show that the database is open in read-only mode:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT open_mode FROM V$DATABASE;
 
OPEN_MODE
--------------------
READ ONLY
</pre></div>
</li>
<li class="stepexpand"><span>Issue the following SQL statement to start Redo Apply:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;
 
Database altered.
</pre></div>
</li>
<li class="stepexpand"><span>Now that the standby is in real-time query mode (the standby is open in read-only mode and Redo Apply is active), the <code class="codeph">V$DATABASE.OPEN_MODE</code> column changes to indicate the following:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT open_mode FROM V$DATABASE;
 
OPEN_MODE
--------------------
READ ONLY WITH APPLY
</pre></div>
</li>
</ol>
</div>
<a id="SBYDB4778"></a>
<div class="props_rev_3"><a id="GUID-C225DCBC-E9FB-4E86-9D19-A5D20C3A8AA5"></a>
<h4 id="SBYDB-GUID-C225DCBC-E9FB-4E86-9D19-A5D20C3A8AA5" class="sect4"><span class="enumeration_section">10.2.1.1</span> Monitoring Apply Lag in a Real-time Query Environment</h4>
<div>
<div class="section">
<p>If you are using real-time query to offload queries from a primary database to a physical standby database, you may want to monitor the apply lag to ensure that it is within acceptable limits.</p>
<p>The current apply lag is the difference, in elapsed time, between when the last applied change became visible on the standby and when that same change was first visible on the primary. This metric is computed to the nearest second.</p>
<p>To obtain the apply lag, query the <code class="codeph">V$DATAGUARD_STATS</code> view. For example:</p>
<pre dir="ltr">SQL&gt; SELECT name, value, datum_time, time_computed FROM V$DATAGUARD_STATS -
&gt; WHERE name like &#39;apply lag&#39;;
     
    NAME         VALUE            DATUM_TIME              TIME_COMPUTED
    ---------    -------------    -------------------     -------------------
    apply lag    +00 00:00:00     05/27/2009 08:54:16     05/27/2009 08:54:17
</pre>
<p>The <code class="codeph">apply</code> <code class="codeph">lag</code> metric is computed using data that is periodically received from the primary database. The <code class="codeph">DATUM_TIME</code> column contains a timestamp of when this data was last received by the standby database. The <code class="codeph">TIME_COMPUTED</code> column contains a timestamp taken when the <code class="codeph">apply</code> <code class="codeph">lag</code> metric was calculated. The difference between the values in these columns should be less than 30 seconds. If the difference is larger than this, the <code class="codeph">apply</code> <code class="codeph">lag</code> metric may not be accurate.</p>
<p>To obtain a histogram that shows the history of apply lag values since the standby instance was last started, query the <code class="codeph">V$STANDBY_EVENT_HISTOGRAM</code> view. For example:</p>
<pre dir="ltr">SQL&gt; SELECT * FROM V$STANDBY_EVENT_HISTOGRAM WHERE NAME = &#39;apply lag&#39; - 
&gt; AND COUNT &gt; 0;

NAME             TIME       UNIT         COUNT        LAST_TIME_UPDATED
---------     ---------   --------    -----------    ------------------------
apply lag         0        seconds        79681          06/18/2009 10:05:00
apply lag         1        seconds         1006          06/18/2009 10:03:56
apply lag         2        seconds           96          06/18/2009 09:51:06
apply lag         3        seconds            4          06/18/2009 04:12:32
apply lag         4        seconds            1          06/17/2009 11:43:51
apply lag         5        seconds            1          06/17/2009 11:43:52

6 rows selected
</pre>
<p>To evaluate the apply lag over a time period, take a snapshot of <code class="codeph">V$STANDBY_EVENT_HISTOGRAM</code> at the beginning of the time period and compare that snapshot with one taken at the end of the time period.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4779"></a>
<div class="props_rev_3"><a id="GUID-622B6596-54F7-4736-8A8B-0C5E308AC3F5"></a>
<h4 id="SBYDB-GUID-622B6596-54F7-4736-8A8B-0C5E308AC3F5" class="sect4"><span class="enumeration_section">10.2.1.2</span> Configuring Apply Lag Tolerance in a Real-time Query Environment</h4>
<div>
<p>The <code class="codeph">STANDBY_MAX_DATA_DELAY</code> session parameter can be used to specify a session-specific apply lag tolerance, measured in seconds, for queries issued by non-administrative users to a physical standby database that is in real-time query mode. This capability allows queries to be safely offloaded from the primary database to a physical standby database, because it is possible to detect if the standby database has become unacceptably stale.</p>
<p>If <code class="codeph">STANDBY_MAX_DATA_DELAY</code> is set to the default value of <code class="codeph">NONE</code>, than queries issued to a physical standby database are executed regardless of the apply lag on that database.</p>
<p>If <code class="codeph">STANDBY_MAX_DATA_DELAY</code> is set to a non-zero value, then queries issued to a physical standby database are executed only if the apply lag is less than or equal to <code class="codeph">STANDBY_MAX_DATA_DELAY</code>. Otherwise, an <code class="codeph">ORA-3172</code> error is returned to alert the client that the apply lag is too large.</p>
<p>If <code class="codeph">STANDBY_MAX_DATA_DELAY</code> is set to 0, a query issued to a physical standby database is guaranteed to return the exact same result as if the query were issued on the primary database, unless the standby database is lagging behind the primary database, in which case an <code class="codeph">ORA-3172</code> error is returned.</p>
<p>Use the <code class="codeph">ALTER SESSION</code> SQL statement to set <code class="codeph">STANDBY_MAX_DATA_DELAY</code>. For example:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET STANDBY_MAX_DATA_DELAY=2
</pre></div>
</div>
<a id="SBYDB4780"></a>
<div class="props_rev_3"><a id="GUID-194B1448-84FB-4357-A6AD-72A77701F918"></a>
<h4 id="SBYDB-GUID-194B1448-84FB-4357-A6AD-72A77701F918" class="sect4"><span class="enumeration_section">10.2.1.3</span> Forcing Redo Apply Synchronization in a Real-time Query Environment</h4>
<div>
<div class="section">
<p>Issue the following SQL statement on a physical standby database to ensure that all redo data received from the primary database has been applied to a physical standby database:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SYNC WITH PRIMARY;
</pre>
<p>This statement blocks until all redo data received by the standby database at the time that this command is issued has been applied to the physical standby database. An <code class="codeph">ORA-3173</code> error is returned immediately, and synchronization does not occur, if the redo transport status at the standby database is not <code class="codeph">SYNCHRONIZED</code> or if Redo Apply is not active.</p>
<p>To ensure that Redo Apply synchronization occurs in specific cases, use the <code class="codeph">SYS_CONTEXT(&#39;USERENV&#39;,&#39;DATABASE_ROLE&#39;)</code> function to create a standby-only trigger (enabled on the primary but that only takes certain actions if it is running on a standby). For example, you could create the following trigger that would execute the <code class="codeph">ALTER SESSION SYNC WITH PRIMARY</code> statement for a specific user connection at logon:</p>
<pre dir="ltr">CREATE TRIGGER adg_logon_sync_trigger
 AFTER LOGON ON user.schema
  begin
    if (SYS_CONTEXT(&#39;USERENV&#39;, &#39;DATABASE_ROLE&#39;)  IN (&#39;PHYSICAL STANDBY&#39;)) then
      execute immediate &#39;alter session sync with primary&#39;;
    end if;
  end;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4781"></a>
<div class="props_rev_3"><a id="GUID-25EF4F01-3DF0-4F21-99B8-95178CA003BE"></a>
<h4 id="SBYDB-GUID-25EF4F01-3DF0-4F21-99B8-95178CA003BE" class="sect4"><span class="enumeration_section">10.2.1.4</span> Real-time Query Restrictions</h4>
<div>
<ul style="list-style-type: disc;">
<li>
<p>The apply lag control and Redo Apply synchronization mechanisms described above require that the client be connected and issuing queries to a physical standby database that is in real-time query mode.</p>
</li>
<li>
<p>The following additional restrictions apply if <code class="codeph">STANDBY_MAX_DATA_DELAY</code> is set to 0 or if the <code class="codeph">ALTER SESSION SYNC WITH PRIMARY</code> SQL statement is used:</p>
<ul style="list-style-type: disc;">
<li>
<p>The standby database must receive redo data via the SYNC transport.</p>
</li>
<li>
<p>The redo transport status at the standby database must be SYNCHRONIZED and the primary database must be running in either maximum protection mode or maximum availability mode.</p>
</li>
<li>
<p>Real-time apply must be enabled.</p>
</li>
</ul>
</li>
<li>
<p>Oracle Active Data Guard achieves high performance of real-time queries in an Oracle RAC environment through the use of cache fusion. This allows the Oracle Data Guard apply instance and queries to work out of cache and not be slowed down by disk I/O limitations. A consequence of this is that an unexpected failure of the apply instance leaves buffers in inconsistent states across all the open Oracle RAC instances. To ensure data consistency and integrity, Oracle Data Guard closes all the other open instances in the Oracle RAC configuration, and brings them to a mounted state. You must manually reopen the instances - at which time the data is automatically made consistent, followed by restarting redo apply on one of the instances. In an Oracle Data Guard broker configuration, the instances are automatically reopened and redo apply is automatically restarted on one of the instances.</p>
<div class="infoboxnotealso" id="GUID-25EF4F01-3DF0-4F21-99B8-95178CA003BE__GUID-D6506452-9378-4275-B7D3-F3F93BD6D220">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DGBKR260" target="_blank" href="../DGBKR/dbresource.htm#DGBKR260"><span class="italic">Oracle Data Guard Broker</span></a> for more information about how the broker handles apply instance failures</p>
</li>
<li>
<p>The My Oracle Support note 1357597.1 at <a href="http://support.oracle.com" target="_blank"><code class="codeph">http://support.oracle.com</code></a> for additional information about apply instance failures in an Oracle Active Data Guard Oracle RAC standby</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<a id="SBYDB5255"></a><a id="SBYDB5256"></a><a id="SBYDB5257"></a><a id="SBYDB4782"></a>
<div class="props_rev_3"><a id="GUID-67B644A3-161B-4A83-A0B2-923BF51AD932"></a>
<h4 id="SBYDB-GUID-67B644A3-161B-4A83-A0B2-923BF51AD932" class="sect4"><span class="enumeration_section">10.2.1.5</span> Automatic Block Media Recovery</h4>
<div>
<p>If corrupt data blocks are encountered when a database is accessed, they can be automatically replaced with uncorrupted copies of those blocks. This requires the following conditions:<a id="d19350e1187" class="indexterm-anchor"></a><a id="d19350e1189" class="indexterm-anchor"></a></p>
<ul style="list-style-type: disc;">
<li>
<p>The physical standby database must be operating in real-time query mode, which requires an Oracle Active Data Guard license.</p>
</li>
<li>
<p>The physical standby database must be running real-time apply.</p>
</li>
</ul>
<p>Automatic block media recovery works in two directions depending on whether the corrupted blocks are encountered on the primary or on the standby.</p>
<div class="section">
<p class="subhead3">Corrupted Blocks On the Primary</p>
</div>
<!-- class="section" -->
<div class="section">
<p>If corrupt data blocks are encountered at a primary database, then the primary automatically searches for good copies of those blocks on a standby and, if they are found, has them shipped back to the primary.</p>
<p>The primary requires a <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> to the standby only (a physical standby, a cascading physical standby, or a far sync instance). The primary does not require a <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> to any terminal destinations; it is able to automatically ascertain their service names.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Corrupted Blocks On a Standby</p>
</div>
<!-- class="section" -->
<div class="section">
<p>If corrupt data blocks are encountered at a standby, then the standby automatically initiates communication with the primary and requests uncorrupted copies of those blocks. For the primary to be able to ship the uncorrupted blocks to the standby, the following database initialization parameters must be configured on the standby. This is true even if the primary does not directly service the standby (for example, in cascading configurations).</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">LOG_ARCHIVE_CONFIG</code> parameter is configured with a <code class="codeph">DG_CONFIG</code> list and a <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> parameter is configured for the primary database.</p>
<p><span class="bold">or</span></p>
</li>
<li>
<p>The <code class="codeph">FAL_SERVER</code> parameter is configured and its value contains an Oracle Net service name for the primary database.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Additional Automatic Block Media Repair Considerations</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Automatic repair is supported with any Oracle Data Guard protection mode. However, the effectiveness of repairing a corrupt block at the primary using the non-corrupt version of the block from the standby depends on how closely the standby apply is synchronized with the redo generated by the primary.</p>
</li>
<li>
<p>When an automatic block repair has been performed, a message is written to the database alert log.</p>
</li>
<li>
<p>If automatic block repair is not possible, an <code class="codeph">ORA-1578</code> error is returned.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4783"></a>
<div class="props_rev_3"><a id="GUID-B2A61261-304D-4C14-AEF3-DA6E1B4368B3"></a>
<h4 id="SBYDB-GUID-B2A61261-304D-4C14-AEF3-DA6E1B4368B3" class="sect4"><span class="enumeration_section">10.2.1.6</span> Manual Block Media Recovery</h4>
<div>
<p>The RMAN <code class="codeph">RECOVER BLOCK</code> command is used to manually repair a corrupted data block. This command searches several locations for an uncorrupted copy of the data block. By default, one of the locations is any available physical standby database operating in real-time query mode. The <code class="codeph">EXCLUDE STANDBY</code> option of the RMAN <code class="codeph">RECOVER BLOCK</code> command can be used to exclude physical standby databases as a source for replacement blocks.</p>
<div class="infoboxnotealso" id="GUID-B2A61261-304D-4C14-AEF3-DA6E1B4368B3__GUID-090667F6-3ABD-4DAE-8931-CF344DD71EDB">
<p class="notep1">See Also:</p>
<p><a class="olink RCMRF140" target="_blank" href="../RCMRF/rcmsynta2001.htm#RCMRF140"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for more information about the RMAN <code class="codeph">RECOVER BLOCK</code> command</p>
</div>
</div>
</div>
<a id="SBYDB5463"></a><a id="SBYDB5130"></a>
<div class="props_rev_3"><a id="GUID-12950D5A-FE9F-4444-A6DE-26FCC5653225"></a>
<h4 id="SBYDB-GUID-12950D5A-FE9F-4444-A6DE-26FCC5653225" class="sect4"><span class="enumeration_section">10.2.1.7</span> Tuning Queries on a Physical Standby Database</h4>
<div>
<p>The <span class="italic">Active Data Guard Best Practices</span> white paper describes how to tune queries for optimal performance on a physical standby database. This paper is available on the Oracle Maximum Availability Architecture (MAA) home page at:</p>
<p><a href="http://www.oracle.com/goto/maa/" target="_blank"><code class="codeph">http://www.oracle.com/goto/maa</code></a></p>
<div class="section">
<p class="subhead3">Force Full Database Caching Mode</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The use of force full database caching mode can potentially improve performance because queries are executed faster.</p>
<p>The enabling and disabling of force full database caching mode<a id="d19350e1445" class="indexterm-anchor"></a><a id="d19350e1449" class="indexterm-anchor"></a> is not recorded in redo, so the status of in-memory caching is not necessarily the same on all members of a Data Guard configuration. The Force Full Database In-Memory Caching feature is available in Oracle Database 12c Release 1 (12.1.0.2) and later.</p>
<p>For more information about the Force Full Database In-Memory Caching feature, including guidelines on how and when to enable and disable it, see <a class="olink TGDBA95384" target="_blank" href="../TGDBA/tune_buffer_cache.htm#TGDBA95384"><span class="italic">Oracle Database Performance Tuning Guide</span></a>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB5446"></a>
<div class="props_rev_3"><a id="GUID-40A7D7C1-72B8-4397-B61B-446028102E2D"></a>
<h4 id="SBYDB-GUID-40A7D7C1-72B8-4397-B61B-446028102E2D" class="sect4"><span class="enumeration_section">10.2.1.8</span> Adding Temp Files to a Physical Standby</h4>
<div>
<div class="section">
<p>If you are using a standby to offload queries from the primary database, then the standby must be configured with the minimum of one temp tablespace with at least one temporary data file. If the nature of the workload requires more temp table space than is automatically created when the standby is first created, then you may need to manually add additional space.</p>
<p>To add temporary files to the physical standby database, perform the following tasks:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Identify the tablespaces that contain temporary files. Do this by entering the following command on the standby database:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT TABLESPACE_NAME FROM DBA_TABLESPACES
2&gt; WHERE CONTENTS = &#39;TEMPORARY&#39;;
 
TABLESPACE_NAME
--------------------------------
TEMP1
TEMP2
</pre></div>
</li>
<li class="stepexpand"><span>For each tablespace identified in the previous query, add a new temporary file to the standby database. The following example adds a new temporary file called <code class="codeph">TEMP1</code> with size and reuse characteristics that match the primary database temporary files:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER TABLESPACE TEMP1 ADD TEMPFILE
2&gt; &#39;/arch1/boston/temp01.dbf&#39;
3&gt; SIZE 40M REUSE;
</pre></div>
</li>
</ol>
</div>
</div>
</div>
<a id="SBYDB5426"></a><a id="SBYDB5163"></a>
<div class="props_rev_3"><a id="GUID-DAF341CA-69C9-497D-A50C-FDC89ED9C1D8"></a>
<h3 id="SBYDB-GUID-DAF341CA-69C9-497D-A50C-FDC89ED9C1D8" class="sect3"><span class="enumeration_section">10.2.2</span> DML Operations on Temporary Tables on Oracle Active Data Guard Instances</h3>
<div>
<p>Redo generation on a read-only database is not allowed. When a data manipulation language (DML) operation makes a change to a global temporary table, the change itself does not generate redo since it is only a temporary table. However, the undo generated for the change does in turn generate redo. Prior to Oracle Database 12<span class="italic">c</span> Release 1 (12.1), this meant that global temporary tables could not be used on Oracle Active Data Guard standbys, which are read-only.</p>
<p>However, as of Oracle Database 12c Release 1 (12.1), the temporary undo feature allows the undo for changes to a global temporary table to be stored in the temporary tablespace as opposed to the undo tablespace. Undo stored in the temporary tablespace does not generate redo, thus enabling redo-less changes to global temporary tables. This allows DML operations on global temporary tables on Oracle Active Data Guard standbys. This feature benefits Oracle Data Guard in the following ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>Read-mostly reporting applications that use global temporary tables for storing temporary data can be offloaded to an Oracle Active Data Guard instance.</p>
</li>
<li>
<p>When temporary undo is enabled on the primary database, undo for changes to a global temporary table are not logged in the redo and thus, the primary database generates less redo. Therefore, the amount of redo that Oracle Data Guard must ship to the standby is also reduced, thereby reducing network bandwidth consumption and storage consumption.</p>
</li>
</ul>
<p>To enable temporary undo on the primary database, use the <code class="codeph">TEMP_UNDO_ENABLED</code> initialization parameter. On an Oracle Active Data Guard standby, temporary undo is always enabled by default so the <code class="codeph">TEMP_UNDO_ENABLED</code> parameter has no effect.</p>
<div class="infobox-note" id="GUID-DAF341CA-69C9-497D-A50C-FDC89ED9C1D8__GUID-00B568A5-6D36-4154-813B-761B500997A7">
<p class="notep1">Note:</p>
<p>Data definition language (DDL) operations on global temporary tables (for example, <code class="codeph">CREATE</code> and <code class="codeph">DROP</code>) must still be issued from the primary database. DDL changes are visible on the standby when it catches up with the primary database.</p>
</div>
<div class="section">
<p class="subhead3">Restrictions</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The temporary undo feature requires that the database initialization parameter <code class="codeph">COMPATIBLE</code> be set to 12.0.0 or higher.</p>
</li>
<li>
<p>The temporary undo feature on Oracle Active Data Guard instances does not support temporary <code class="codeph">BLOB</code>s or temporary <code class="codeph">CLOB</code>s.</p>
</li>
<li>
<p>Distributed transactions on an Oracle Active Data Guard instance are not permitted if they involve changes to local objects. For example, you cannot commit a transaction that modifies a global temporary table on the Oracle Active Data Guard instance and also updates a remote table on another database using a database link. You must commit or roll back any outstanding DML operations to global temporary tables on the Active Data Guard instance before issuing a remote DML operation, or vice versa. This also includes implicit writes to global temporary tables made by operations such as <code class="codeph">EXPLAIN PLAN</code> statements.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-DAF341CA-69C9-497D-A50C-FDC89ED9C1D8__GUID-C350D6EB-2ABB-4570-B776-39050B90966A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADMIN13740" target="_blank" href="../ADMIN/undo.htm#ADMIN13740"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about temporary undo</p>
</li>
<li>
<p><a class="olink REFRN10326" target="_blank" href="../REFRN/GUID-E2A01A84-2D63-401F-B64E-C96B18C5DCA6.htm#REFRN10326"><span class="italic">Oracle Database Reference</span></a> for more information about the <code class="codeph">TEMP_UNDO_ENABLED</code> initialization parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB5427"></a><a id="SBYDB5166"></a><a id="SBYDB5164"></a>
<div class="props_rev_3"><a id="GUID-DFDC929C-7446-413B-A25B-7F11284D900F"></a>
<h3 id="SBYDB-GUID-DFDC929C-7446-413B-A25B-7F11284D900F" class="sect3"><span class="enumeration_section">10.2.3</span> Using Sequences in Oracle Active Data Guard</h3>
<div>
<div class="section">
<p>In an Oracle Active Data Guard environment, sequences<a id="d19350e1783" class="indexterm-anchor"></a> created by the primary database with the default <code class="codeph">CACHE</code> and <code class="codeph">NOORDER</code> options can be accessed from standby databases as well. When a standby database accesses such a sequence for the first time, it requests that the primary database allocate a range of sequence numbers. The range is based on the cache size and other sequence properties specified when the sequence was created. Then the primary database allocates those sequence numbers to the requesting standby database by adjusting the corresponding sequence entry in the data dictionary. When the standby has used all the numbers in the range, it requests another range of numbers.</p>
<p>The primary database ensures that each range request from a standby database gets a range of sequence numbers that do not overlap with the ones previously allocated for both the primary and standby databases. This generates a unique stream of sequence numbers across the entire Oracle Data Guard configuration.</p>
<p>Because the standby&#39;s requests for a range of sequences involve a round-trip to the primary, be sure to specify a large enough value for the <code class="codeph">CACHE</code> keyword when you create a sequence to be used on an Oracle Active Data Guard standby. Otherwise, performance could suffer.</p>
<p>Also, be sure the terminal standby has a <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> parameter defined that points back to the primary.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Example: Assigning a Range of Sequence Values In a Multi-standby Configuration</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This example shows how a range of sequence values can be assigned to a database when it references <code class="codeph">NEXTVAL</code> on the sequence either for the first time or after it uses up all of the previously assigned sequence values. In this example, there are two standby databases.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>On the primary database, issue the following SQL statements to create a global temporary table named <code class="codeph">gtt</code>, and a sequence named <code class="codeph">g</code> with a cache size of 10:</span>
<div>
<pre dir="ltr">SQL&gt; CREATE GLOBAL TEMPORARY TABLE gtt (a int);
 
Table created. 
 
SQL&gt; CREATE SEQUENCE g CACHE 10;
 
Sequence created.
</pre></div>
</li>
<li class="stepexpand"><span>On the first standby database, issue the following SQL statements:</span>
<div>
<pre dir="ltr">SQL&gt; INSERT INTO gtt VALUES (g.NEXTVAL);
 
1 row created.
 
SQL&gt; INSERT INTO gtt VALUES (g.NEXTVAL);
 
1 row created.
 
SQL&gt; SELECT * FROM gtt;
 
         A
----------
         1
         2
</pre>
<p>Because the sequence cache size was set to 10 (in Step 1) and because this is the first time the sequence was accessed, the results of the <code class="codeph">SELECT</code> statement show that the first standby database is assigned sequence numbers 1 to 10.</p>
</div>
</li>
<li class="stepexpand"><span>On the primary database, issue the following SQL statements:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT g.NEXTVAL FROM dual;
 
   NEXTVAL
----------
        11
 
SQL&gt; SELECT g.NEXTVAL FROM dual;
 
   NEXTVAL
----------
        12
</pre>
<p>The results of the <code class="codeph">SELECT</code> statements show that the primary database is assigned the next range of sequence values, 11-20.</p>
</div>
</li>
<li class="stepexpand"><span>On the second standby database, issue the following SQL statements:</span>
<div>
<pre dir="ltr">SQL&gt; INSERT INTO gtt VALUES (g.NEXTVAL);
 
1 row created.
 
SQL&gt; INSERT INTO gtt VALUES (g.NEXTVAL);
 
1 row created.
  
SQL&gt; SELECT * FROM gtt;
 
         A
----------
        21
        22
</pre>
<p>The results of the <code class="codeph">SELECT</code> statement show that the second standby is assigned the next range of sequence values, 21-30.</p>
<div class="infobox-note" id="GUID-DFDC929C-7446-413B-A25B-7F11284D900F__GUID-F133EE4A-28A9-4E00-9A1C-293F1396C0EA">
<p class="notep1">Note:</p>
Sequences created with the <code class="codeph">ORDER</code> or <code class="codeph">NOCACHE</code> options cannot be accessed on an Oracle Active Data Guard standby.</div>
</div>
</li>
</ol>
</div>
<a id="SBYDB5169"></a><a id="SBYDB5428"></a><a id="SBYDB5168"></a>
<div class="props_rev_3"><a id="GUID-8A73B0A3-D77D-4CF6-ABCB-6293BB26B6D1"></a>
<h4 id="SBYDB-GUID-8A73B0A3-D77D-4CF6-ABCB-6293BB26B6D1" class="sect4"><span class="enumeration_section">10.2.3.1</span> Session Sequences</h4>
<div>
<div class="section">
<p>A session sequence is a special type of sequence that is specifically designed to be used with global temporary tables that have session visibility. Unlike the existing regular sequences (referred to as &#34;global&#34; sequences for the sake of comparison), a session sequence returns a unique range of sequence numbers only within a session, but not across sessions. Another difference is that session sequences are not persistent. If a session goes away, so does the state of the session sequences that were accessed during the session.</p>
<p>Session sequences support most of the sequence properties that are specified when the sequence is defined. However, the <code class="codeph">CACHE</code>/<code class="codeph">NOCACHE</code> and <code class="codeph">ORDER</code>/<code class="codeph">NOORDER</code> options are not relevant to session sequences and are ignored.</p>
<p>Session sequences must be created by a read/write database but can be accessed on any read/write or read-only databases (either a regular database temporarily open read-only or a standby database).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Creating and Altering Session Sequences</p>
</div>
<!-- class="section" -->
<div class="section">
<p>To create a session sequence, issue the following SQL statement:</p>
<pre dir="ltr">SQL&gt; CREATE SEQUENCE &hellip; SESSION;
</pre>
<p>To alter an existing session sequence to be a regular (&#34;global&#34;) sequence, issue the following SQL statement:</p>
<pre dir="ltr">SQL&gt; ALTER SEQUENCE &hellip; GLOBAL;
</pre>
<p>To alter a regular sequence to be a session sequence, issue the following SQL statement:</p>
<pre dir="ltr">SQL&gt; ALTER SEQUENCE &hellip; SESSION;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Example: Using Session Sequences</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This example shows how session sequence values are unique to each database session.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>On the primary database, issue the following SQL statements to create a global temporary table named <code class="codeph">gtt</code> and a session sequence named <code class="codeph">s</code>:</span>
<div>
<pre dir="ltr">SQL&gt; CREATE GLOBAL TEMPORARY TABLE gtt (a int);
 
Table created.
 
SQL&gt; CREATE SEQUENCE s SESSION;
 
Sequence created.
</pre></div>
</li>
<li class="stepexpand"><span>On the standby database, issue the following SQL statements:</span>
<div>
<pre dir="ltr">SQL&gt; INSERT INTO gtt VALUES (s.NEXTVAL);
 
1 row created.
 
SQL&gt; INSERT INTO gtt VALUES (s.NEXTVAL);
 
1 row created.
 
 
SQL&gt; SELECT * FROM gtt;
 
         A
----------
         1
         2
</pre></div>
</li>
<li class="stepexpand"><span>From another session of the same standby database, issue the following SQL statements:</span>
<div>
<pre dir="ltr">SQL&gt; INSERT INTO gtt VALUES (s.NEXTVAL);
 
1 row created.
 
SQL&gt; INSERT INTO gtt VALUES (s.NEXTVAL);
 
1 row created.
 
 
SQL&gt; SELECT * FROM gtt;
 
         A
----------
         1
         2
</pre>
<p>The results of the <code class="codeph">SELECT</code> statement show that the sequence values assigned are the same as those assigned for the first session in the previous step. This is because sequence values are unique to each database session.</p>
</div>
</li>
</ol>
</div>
</div>
</div>
</div>
<a id="SBYDB5040"></a><a id="SBYDB4784"></a>
<div class="props_rev_3"><a id="GUID-62007456-DD41-431D-B0E7-56C99FEB2277"></a>
<h2 id="SBYDB-GUID-62007456-DD41-431D-B0E7-56C99FEB2277" class="sect2"><span class="enumeration_section">10.3</span> Primary Database Changes That Require Manual Intervention at a Physical Standby</h2>
<div>
<div class="section">
<p>Most structural changes made to a primary database are automatically propagated through redo data to a physical standby database. <a href="manage_ps.htm#GUID-62007456-DD41-431D-B0E7-56C99FEB2277__g1041883" title="When you change the primary database, it often requires that you take a similar action on the standby database. This table lists the administrative tasks that require you perform some action on the standby database.">Table 10-1</a> lists primary database structural and configuration changes which require manual intervention at a physical standby database.</p>
<div class="tblformalwide" id="GUID-62007456-DD41-431D-B0E7-56C99FEB2277__g1041883">
<p class="titleintable">Table 10-1 Primary Database Changes That Require Manual Intervention at a Physical Standby</p>
<table class="cellalignment2262" title="Primary Database Changes That Require Manual Intervention at a Physical Standby" summary="When you change the primary database, it often requires that you take a similar action on the standby database. This table lists the administrative tasks that require you perform some action on the standby database.">
<thead>
<tr class="cellalignment2253">
<th class="cellalignment2265" id="d19350e2101">Primary Database Change</th>
<th class="cellalignment2284" id="d19350e2104">Action Required on Physical Standby Database</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2109" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-C60E4DB4-F424-454D-B4DF-7A97B2F09540">Adding a Data File or Creating a Tablespace</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2109 d19350e2104">
<p>No action is required if the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> database initialization parameter is set to <code class="codeph">AUTO</code>. If this parameter is set to <code class="codeph">MANUAL</code>, the new data file must be copied to the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2127" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-76C5E1AD-2A05-4BC8-AB26-5C68E2AB991D">Dropping Tablespaces and Deleting Data Files</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2127 d19350e2104">
<p>Delete data file from primary and physical standby database after the redo data containing the <code class="codeph">DROP</code> or <code class="codeph">DELETE</code> command is applied to the physical standby.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2142" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-88158C9B-51FB-4F13-93FC-97D737C86BF0">Using Transportable Tablespaces with a Physical Standby Database</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2142 d19350e2104">
<p>Move tablespace between the primary and the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2151" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-2D3E5488-237C-467A-AB8B-7C09B6E43CE0">Renaming a Data File in the Primary Database</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2151 d19350e2104">
<p>Rename the data file on the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2160" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-64E46731-490D-4228-AC87-A07CDE3C75FE">Add or Drop a Redo Log File Group</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2160 d19350e2104">
<p>Evaluate the configuration of the redo log and standby redo log on the physical standby database and adjust as necessary.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2169" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-3A0E6CB4-EE5B-4D16-BCFE-40236BC312D7">NOLOGGING or Unrecoverable Operations</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2169 d19350e2104">
<p>Copy the data file containing the unlogged changes to the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2178" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-FB7AFCB2-8CB3-4F43-B664-261BAFD5B07B">Refresh the Password File</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2178 d19350e2104">
<p>If the <code class="codeph">REMOTE_LOGIN_PASSWORDFILE</code> initialization parameter is set to <code class="codeph">SHARED</code> or <code class="codeph">EXCLUSIVE</code>, then replace the password file on the physical standby database with a fresh copy of the password file from the primary database.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2196" headers="d19350e2101">
<p><a href="manage_ps.htm#GUID-B9B956BC-885F-49AF-A4FF-E900998109ED">Reset the TDE Master Encryption Key</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2196 d19350e2104">
<p>Replace the database encryption wallet on the physical standby database with a fresh copy of the database encryption wallet from the primary database.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2268" id="d19350e2205" headers="d19350e2101">
<p><a href="init_params.htm#GUID-A1CF9B00-F0F5-4F3B-A0E0-9D6ABF775EC9">Initialization Parameters</a></p>
</td>
<td class="cellalignment2285" headers="d19350e2205 d19350e2104">
<p>Evaluate whether a corresponding change must be made to the initialization parameters on the physical standby database.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" --></div>
<a id="SBYDB4785"></a>
<div class="props_rev_3"><a id="GUID-C60E4DB4-F424-454D-B4DF-7A97B2F09540"></a>
<h3 id="SBYDB-GUID-C60E4DB4-F424-454D-B4DF-7A97B2F09540" class="sect3"><span class="enumeration_section">10.3.1</span> Adding a Data File or Creating a Tablespace</h3>
<div>
<div class="section">
<p>Th<a id="d19350e2284" class="indexterm-anchor"></a><a id="d19350e2288" class="indexterm-anchor"></a><a id="d19350e2292" class="indexterm-anchor"></a><a id="d19350e2298" class="indexterm-anchor"></a><a id="d19350e2302" class="indexterm-anchor"></a><a id="d19350e2308" class="indexterm-anchor"></a>e <code class="codeph">STANDBY_FILE_MANAGEMENT</code> database initialization parameter controls whether the addition of a data file to the primary database is automatically propagated to a physical standby databases.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>If the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> database parameter on the physical standby database is set to <code class="codeph">AUTO</code>, any new data files created on the primary database are automatically created on the physical standby database.</p>
</li>
<li>
<p>If the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> database parameter on the physical standby database is set to <code class="codeph">MANUAL</code>, a new data file must be manually copied from the primary database to the physical standby databases after it is added to the primary database.</p>
<div class="infobox-note" id="GUID-C60E4DB4-F424-454D-B4DF-7A97B2F09540__GUID-DB48701A-D02D-411B-ADE6-12D6B95010D8">
<p class="notep1">Note:</p>
<p>On a physical standby for which the Oracle Active Data Guard option has been enabled, you cannot use the manual copy method. Instead, you must execute the following SQL statement on the standby to create an empty data file:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE CREATE DATAFILE [filename | filenumber] - 
AS [NEW | <span class="italic">new_filename</span>];
</pre>
<p>You must specify which one to rename: the <code class="codeph">filename</code> or the <code class="codeph">filenumber</code>.</p>
<p>Also specify either the new filename or <code class="codeph">NEW</code>. The <code class="codeph">NEW</code> keyword lets Oracle automatically choose a name, if Oracle Managed Files (OMF) is enabled.</p>
</div>
</li>
</ul>
<p>If an existing data file from another database is copied to a primary database, it must also be copied to the standby database and the standby control file must be re-created, regardless of the setting of <code class="codeph">STANDBY_FILE_MANAGEMENT</code> parameter.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4788"></a>
<div class="props_rev_3"><a id="GUID-76C5E1AD-2A05-4BC8-AB26-5C68E2AB991D"></a>
<h3 id="SBYDB-GUID-76C5E1AD-2A05-4BC8-AB26-5C68E2AB991D" class="sect3"><span class="enumeration_section">10.3.2</span> Dropping Tablespaces and Deleting Data Files</h3>
<div>
<div class="section">
<p>When a tablespace is dropped or a data file is deleted from a primary database, the corresponding data file(s) must be deleted from the physical standby database. The following example shows how to drop a tablespace:</p>
<pre dir="ltr">SQL&gt; DROP TABLESPACE tbs_4;
SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
</pre>
<p>To verify that deleted data files are no longer part of the database, query the <code class="codeph">V$DATAFILE</code> view.</p>
<p>Delete the corresponding data file on the standby system after the redo data that contains the previous changes is applied to the standby database. For example:</p>
<pre dir="ltr">% rm /disk1/oracle/oradata/payroll/s2tbs_4.dbf
</pre>
<p>On the primary database, after ensuring the standby database applied the redo information for the dropped tablespace, you can remove the data file for the tablespace. For example:</p>
<pre dir="ltr">% rm /disk1/oracle/oradata/payroll/tbs_4.dbf
</pre></div>
<!-- class="section" --></div>
<a id="SBYDB4789"></a>
<div class="props_rev_3"><a id="GUID-10EE6961-A52F-4101-A911-B8692636CC37"></a>
<h4 id="SBYDB-GUID-10EE6961-A52F-4101-A911-B8692636CC37" class="sect4"><span class="enumeration_section">10.3.2.1</span> Using DROP TABLESPACE INCLUDING CONTENTS AND DATAFILES</h4>
<div>
<div class="section">
<p>You can issue the SQL <code class="codeph">DROP TABLESPACE INCLUDING CONTENTS AND DATAFILES</code> statement on the primary database to delete the data files on both the primary and standby databases. To use this statement, the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> initialization parameter must be set to <code class="codeph">AUTO</code>. For example, to drop the tablespace at the primary site:</p>
<pre dir="ltr">SQL&gt; DROP TABLESPACE tbs_4 INCLUDING CONTENTS AND DATAFILES;
SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB4790"></a>
<div class="props_rev_3"><a id="GUID-88158C9B-51FB-4F13-93FC-97D737C86BF0"></a>
<h3 id="SBYDB-GUID-88158C9B-51FB-4F13-93FC-97D737C86BF0" class="sect3"><span class="enumeration_section">10.3.3</span> Using Transportable Tablespaces with a Physical Standby Database</h3>
<div>
<div class="section">
<p>You can use the Oracle transportable tablespaces feature to move a subset of an Oracle database and plug it in to another Oracle database, essentially moving tablespaces between the databases.</p>
<p>To move or copy a set of tablespaces into a primary database when a physical standby is being used, perform the following steps:</p>
<ol>
<li>
<p>Generate a transportable tablespace set that consists of data files for the set of tablespaces being transported and an export file containing structural information for the set of tablespaces.</p>
</li>
<li>
<p>Transport the tablespace set:</p>
<ol>
<li>
<p>Copy the data files and the export file to the primary database.</p>
</li>
<li>
<p>Copy the data files to the standby database.</p>
</li>
</ol>
<p>The data files must have the same path name on the primary and standby databases unless the <code class="codeph">DB_FILE_NAME_CONVERT</code> database initialization parameter has been configured. If <code class="codeph">DB_FILE_NAME_CONVERT</code> has <span class="italic">not</span> been configured and the path names of the data files are not the same on the primary and standby databases, issue the <code class="codeph">ALTER DATABASE RENAME FILE</code> statement to rename the data files. Do this after Redo Apply has failed to apply the redo generated by plugging the tablespace into the primary database. The <code class="codeph">STANDBY_FILE_MANAGEMENT</code> initialization parameter must be set to <code class="codeph">MANUAL</code> before renaming the data files, and then reset to the previous value after renaming the data files.</p>
</li>
<li>
<p>Plug in the tablespace.</p>
<p>Invoke the <a id="d19350e2663" class="indexterm-anchor"></a>Data Pump utility to plug the set of tablespaces into the primary database. Redo data is generated and applied at the standby site to plug the tablespace into the standby database.</p>
</li>
</ol>
<p>For more information about transportable tablespaces, see <a class="olink ADMIN11394" target="_blank" href="../ADMIN/transport.htm#ADMIN11394"><span class="italic">Oracle Database Administrator&#39;s Guide.</span></a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4791"></a>
<div class="props_rev_3"><a id="GUID-2D3E5488-237C-467A-AB8B-7C09B6E43CE0"></a>
<h3 id="SBYDB-GUID-2D3E5488-237C-467A-AB8B-7C09B6E43CE0" class="sect3"><span class="enumeration_section">10.3.4</span> Renaming a Data File in the Primary Database</h3>
<div>
<div class="section">
<p>When you rename one or more data files in the primary database, the change is not propagated to the standby database. Therefore, to rename the same data files on the standby database, you must manually make the equivalent modifications on the standby database because the modifications are not performed automatically, even if the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> initialization parameter is set to <code class="codeph">AUTO</code>.</p>
<p>The following steps describe how to rename a data file in the primary database and manually propagate the changes to the standby database.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>To <a id="d19350e2769" class="indexterm-anchor"></a><a id="d19350e2771" class="indexterm-anchor"></a><a id="d19350e2777" class="indexterm-anchor"></a>rename the data file in the primary database, take the tablespace offline:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER TABLESPACE tbs_4 OFFLINE;
</pre></div>
</li>
<li class="stepexpand"><span>Exit from the SQL prompt and issue an operating system command, such as the following UNIX <code class="codeph">mv</code> command, to rename the data file on the primary system:</span>
<div>
<pre dir="ltr">% mv /disk1/oracle/oradata/payroll/tbs_4.dbf 
/disk1/oracle/oradata/payroll/tbs_x.dbf
</pre></div>
</li>
<li class="stepexpand"><span>Rename the data file in the primary database and bring the tablespace back online:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER TABLESPACE tbs_4 RENAME DATAFILE -
&gt; &#39;/disk1/oracle/oradata/payroll/tbs_4.dbf&#39; -
&gt;  TO &#39;/disk1/oracle/oradata/payroll/tbs_x.dbf&#39;;

SQL&gt; ALTER TABLESPACE tbs_4 ONLINE;
</pre>
<div class="infobox-note" id="GUID-2D3E5488-237C-467A-AB8B-7C09B6E43CE0__GUID-26370FC4-39E3-48F0-B680-D2AC913C2739">
<p class="notep1">Note:</p>
<p>An alternative to these first three steps is to use the <code class="codeph">ALTER</code> <code class="codeph">DATABASE</code> <code class="codeph">MOVE</code> <code class="codeph">DATAFILE</code> command to rename a datafile. This command lets you rename a datafile while allowing read/write access to the datafile. Adequate storage area is a prerequisite for moving a datafile because during the execution of the <code class="codeph">MOVE</code> <code class="codeph">DATAFILE</code> command, the database maintains both the original and the renamed datafiles as two separate files. See <a href="standby.htm#GUID-8DA7295A-53C7-4B52-9E0A-8A513640D265">Moving the Location of Online Data Files</a> for more information.</p>
</div>
</div>
</li>
<li class="stepexpand"><span>Connect to the standby database and stop Redo Apply:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
</pre></div>
</li>
<li class="stepexpand"><span>Shut down the standby database:</span>
<div>
<pre dir="ltr">SQL&gt; SHUTDOWN;
</pre></div>
</li>
<li class="stepexpand"><span>Rename the data file at the standby site using an operating system command, such as the UNIX <code class="codeph">mv</code> command:</span>
<div>
<pre dir="ltr">% mv /disk1/oracle/oradata/payroll/tbs_4.dbf /disk1/oracle/oradata/payroll/tbs_x.dbf
</pre></div>
</li>
<li class="stepexpand"><span>Start and mount the standby database:</span>
<div>
<pre dir="ltr">SQL&gt; STARTUP MOUNT;
</pre></div>
</li>
<li class="stepexpand"><span>Rename the data file in the standby control file. To rename a data file, you must set the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> database initialization parameter to <code class="codeph">MANUAL</code>. You can then reset the parameter to its previous value after renaming the data file.</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE RENAME FILE &#39;/disk1/oracle/oradata/payroll/tbs_4.dbf&#39; -
&gt; TO &#39;/disk1/oracle/oradata/payroll/tbs_x.dbf&#39;;
</pre></div>
</li>
<li class="stepexpand"><span>On the standby database, restart Redo Apply:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE -
&gt; DISCONNECT FROM SESSION;
</pre></div>
</li>
</ol>
<div class="section">
<p>If you do not rename the corresponding data file at the standby system, and then try to refresh the standby database control file, the standby database attempts to use the renamed data file, but will not find it. Error messages similar to the following are written to the alert log:</p>
<pre dir="ltr">ORA-00283: recovery session canceled due to errors
ORA-01157: cannot identify/lock datafile 4 - see DBWR trace file
ORA-01110: datafile 4: &#39;/Disk1/oracle/oradata/payroll/tbs_x.dbf&#39;
</pre>
<div class="infobox-note" id="GUID-2D3E5488-237C-467A-AB8B-7C09B6E43CE0__GUID-A068D73D-D9CD-4007-A233-AA593CD21798">
<p class="notep1">Note:</p>
<p>An alternative to steps 4-9 is to use the <code class="codeph">ALTER</code> <code class="codeph">DATABASE</code> <code class="codeph">MOVE</code> <code class="codeph">DATAFILE</code> command to rename a datafile at the standby. See <a href="standby.htm#GUID-8DA7295A-53C7-4B52-9E0A-8A513640D265">Moving the Location of Online Data Files</a> for more information.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4792"></a>
<div class="props_rev_3"><a id="GUID-64E46731-490D-4228-AC87-A07CDE3C75FE"></a>
<h3 id="SBYDB-GUID-64E46731-490D-4228-AC87-A07CDE3C75FE" class="sect3"><span class="enumeration_section">10.3.5</span> Add or Drop a Redo Log File Group</h3>
<div>
<div class="section">
<p>The configuration of the redo log and standby redo log on a physical standby database should be reevaluated and adjusted as necessary after adding or dropping a log file group on the primary database.</p>
<p>Take the following steps to add or drop a log file group or standby log file group on a physical standby database:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Stop Redo Apply.</span></li>
<li class="stepexpand"><span>If the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> initialization parameter is set to <code class="codeph">AUTO</code>, change the value to <code class="codeph">MANUAL</code>.</span></li>
<li class="stepexpand"><span>Add or drop a log file group.</span>
<div>
<div class="infobox-note" id="GUID-64E46731-490D-4228-AC87-A07CDE3C75FE__GUID-E53A3CB4-2637-495D-9674-BDC1B6BC6259">
<p class="notep1">Note:</p>
<p>An online logfile group must always be manually cleared before it can be dropped from a physical standby database. For example:</p>
<pre dir="ltr">ALTER DATABASE CLEAR LOGFILE GROUP 3;
</pre>
<p>An online logfile group that has a status of <code class="codeph">CURRENT</code> or <code class="codeph">CLEARING_CURRENT</code> cannot be dropped from a physical standby database. An online logfile group that has this status can be dropped after a role transition.</p>
</div>
</div>
</li>
<li class="stepexpand"><span>Restore the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> initialization parameter and the Redo Apply options to their original states.</span></li>
<li class="stepexpand"><span>Restart Redo Apply.</span></li>
</ol>
<div class="section">
<p>In Oracle RAC environments, keep the following in mind:</p>
<ul style="list-style-type: disc;">
<li>
<p>When an online redo log group is added to a primary database, you must manually add an online redo log group to the standby database. It is not done automatically.</p>
</li>
<li>
<p>When a new redo thread is added to a primary database, a new redo thread is automatically added to the standby. By default, the new thread is configured with 2 log groups of 100 MB each. This cannot be changed or overridden.</p>
</li>
<li>
<p>When a new log group is added to an existing redo thread, a new log group is not automatically added to its existing thread.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB00206"></a>
<div class="props_rev_3"><a id="GUID-3A0E6CB4-EE5B-4D16-BCFE-40236BC312D7"></a>
<h3 id="SBYDB-GUID-3A0E6CB4-EE5B-4D16-BCFE-40236BC312D7" class="sect3"><span class="enumeration_section">10.3.6</span> NOLOGGING or Unrecoverable Operations</h3>
<div>
<p>When you perform a DML or DDL operation using the <code class="codeph">NOLOGGING</code> or <code class="codeph">UNRECOVERABLE</code> clause, the standby database is invalidated and may require substantial DBA administrative activities to repair. You can specify the <code class="codeph">SQL ALTER DATABASE</code> or <code class="codeph">SQL ALTER TABLESPACE</code> statement with the <code class="codeph">FORCE</code> <code class="codeph">LOGGING</code> clause to override the <code class="codeph">NOLOGGING</code> setting. However, this statement will not repair an already invalidated database.</p>
<p>See <a href="scenarios.htm#GUID-BD9E85AB-D812-4659-9C85-26CDFF115A8A">Recovering After the NOLOGGING Clause Is Specified</a> for information about recovering after the <code class="codeph">NOLOGGING</code> clause is used.</p>
</div>
</div>
<a id="SBYDB4793"></a>
<div class="props_rev_3"><a id="GUID-FB7AFCB2-8CB3-4F43-B664-261BAFD5B07B"></a>
<h3 id="SBYDB-GUID-FB7AFCB2-8CB3-4F43-B664-261BAFD5B07B" class="sect3"><span class="enumeration_section">10.3.7</span> Refresh the Password File</h3>
<div>
<p>If the <code class="codeph">REMOTE_LOGIN_PASSWORDFILE</code> database initialization parameter is set to <code class="codeph">SHARED</code> or <code class="codeph">EXCLUSIVE</code>, the password file on a physical standby database must be replaced with a fresh copy from the primary database after granting or revoking administrative privileges or changing the password of a user with administrative privileges.</p>
<p>Failure to refresh the password file on the physical standby database may cause authentication of redo transport sessions or connections as <code class="codeph">SYSDG</code>, <code class="codeph">SYSDBA</code>, or <code class="codeph">SYSOPER</code> to the physical standby database to fail.</p>
<p>If you have stored the password file in an Oracle ASM disk group at the standby database, then you must copy the updated password file from the primary database to the Oracle ASM location at the standby database. See <a class="olink OSTMG95354" target="_blank" href="../OSTMG/GUID-70D58CAB-BFA4-4055-8768-7C12D61D9A39.htm#OSTMG95354"><span class="italic">Oracle Automatic Storage Management Administrator&#39;s Guide</span></a> for information about the ASMCMD <code class="codeph">pwcopy</code> command used to copy an Oracle ASM or database instance password file to a specified location. See <a class="olink RACAD5045" target="_blank" href="../RACAD/GUID-1CAF8C01-4761-4CEB-B201-F4D0E67A4E70.htm#RACAD5045"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about using the <code class="codeph">srvctl</code> utility to modify a database configuration.</p>
</div>
</div>
<a id="SBYDB4794"></a>
<div class="props_rev_3"><a id="GUID-B9B956BC-885F-49AF-A4FF-E900998109ED"></a>
<h3 id="SBYDB-GUID-B9B956BC-885F-49AF-A4FF-E900998109ED" class="sect3"><span class="enumeration_section">10.3.8</span> Reset the TDE Master Encryption Key</h3>
<div>
<p>The database encryption wallet on a physical standby database must be replaced with a fresh copy of the database encryption wallet from the primary database whenever the TDE master encryption key is reset on the primary database.</p>
<p>Failure to refresh the database encryption wallet on the physical standby database will prevent access to encrypted columns on the physical standby database that are modified after the master encryption key is reset on the primary database.</p>
</div>
</div>
</div>
<a id="SBYDB4795"></a>
<div class="props_rev_3"><a id="GUID-02218512-31A6-461E-96B4-0B9997DCFC4A"></a>
<h2 id="SBYDB-GUID-02218512-31A6-461E-96B4-0B9997DCFC4A" class="sect2"><span class="enumeration_section">10.4</span> Recovering Through the OPEN RESETLOGS Statement</h2>
<div>
<p><a id="d19350e3400" class="indexterm-anchor"></a><a id="d19350e3404" class="indexterm-anchor"></a><a id="d19350e3408" class="indexterm-anchor"></a><a id="d19350e3414" class="indexterm-anchor"></a>Oracle Data Guard allows recovery on a physical standby database to continue after the primary database has been opened with the <code class="codeph">RESETLOGS</code> option. When an <code class="codeph">ALTER DATABASE OPEN RESETLOGS</code> statement is issued on the primary database, the <a id="d19350e3425" class="indexterm-anchor"></a><a id="d19350e3429" class="indexterm-anchor"></a><a id="d19350e3434" class="indexterm-anchor"></a>i<a id="d19350e3439" class="indexterm-anchor"></a><a id="d19350e3443" class="indexterm-anchor"></a><a id="d19350e3447" class="indexterm-anchor"></a><a id="d19350e3451" class="indexterm-anchor"></a><a id="d19350e3455" class="indexterm-anchor"></a>ncarnation of the database changes, creating a new branch of redo data.</p>
<p>When a physical standby database receives a new branch of redo data, Redo Apply automatically takes the new branch of redo data. For physical standby databases, no manual intervention is required if the standby database did not apply redo data past the new resetlogs SCN (past the start of the new branch of redo data). The following table describes how to <a id="d19350e3462" class="indexterm-anchor"></a><a id="d19350e3466" class="indexterm-anchor"></a><a id="d19350e3470" class="indexterm-anchor"></a><a id="d19350e3476" class="indexterm-anchor"></a>resynchronize the standby database with the primary database branch.</p>
<div class="tblformalwide" id="GUID-02218512-31A6-461E-96B4-0B9997DCFC4A__GUID-27F52F1F-0D19-408D-AB18-716276A768A9">
<table class="cellalignment2262" summary="This 3 column table describes how to resynchronize the standby database with the primary database branch. Each row of the table provides a solution that is dependent upon how much redo data the standby database has applied and whether or not Flashback Database is enabled.">
<thead>
<tr class="cellalignment2253">
<th class="cellalignment2280" id="d19350e3490">If the standby database. . .</th>
<th class="cellalignment2263" id="d19350e3493">Then. . .</th>
<th class="cellalignment2280" id="d19350e3496">Perform these steps. . .</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2253">
<td class="cellalignment2282" id="d19350e3501" headers="d19350e3490">
<p>Has not applied redo data past the new resetlogs SCN (past the start of the new branch of redo data) and the new redo branch from <code class="codeph">OPEN RESETLOGS</code> has been registered at the standby</p>
</td>
<td class="cellalignment2266" headers="d19350e3501 d19350e3493">
<p>Redo Apply automatically takes the new branch of redo.</p>
</td>
<td class="cellalignment2282" headers="d19350e3501 d19350e3496">
<p>No manual intervention is necessary. The managed redo process (MRP) automatically resynchronizes the standby database with the new branch of redo data.</p>
<p>Note: To check whether the new redo branch has been registered at the standby, perform the following query at the primary and standby and verify that the results match:</p>
<pre dir="ltr">SELECT resetlogs_id, resetlogs_change# FROM V$DATABASE_INCARNATION WHERE status=&#39;CURRENT&#39;
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2282" id="d19350e3518" headers="d19350e3490">
<p>Has applied redo data past the new resetlogs SCN (past the start of the new branch of redo data) and Flashback Database is enabled on the standby database</p>
</td>
<td class="cellalignment2266" headers="d19350e3518 d19350e3493">
<p>The standby database is recovered <span class="italic">in the future</span> of the new branch of redo data.</p>
</td>
<td class="cellalignment2282" headers="d19350e3518 d19350e3496">
<ol>
<li>
<p>Follow the procedure in <a href="scenarios.htm#GUID-09129494-CD98-44B6-821F-A4C2CB5AEE08">Flashing Back a Physical Standby Database to a Specific Point-in-Time</a> to flash back a physical standby database.</p>
</li>
<li>
<p>Restart Redo Apply to continue application of redo data onto new reset logs branch.</p>
</li>
</ol>
<p>The managed redo process (MRP) automatically resynchronizes the standby database with the new branch.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2282" id="d19350e3542" headers="d19350e3490">
<p>Has applied redo data past the new resetlogs SCN (past the start of the new branch of redo data) and Flashback Database is not enabled on the standby database</p>
</td>
<td class="cellalignment2266" headers="d19350e3542 d19350e3493">
<p>The primary database has diverged from the standby on the indicated primary database branch.</p>
</td>
<td class="cellalignment2282" headers="d19350e3542 d19350e3496">
<p>Re-create the physical standby database following the procedures in <a href="create_ps.htm#GUID-B511FB6E-E3E7-436D-94B5-071C37550170">Creating a Physical Standby Database</a> .</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2282" id="d19350e3556" headers="d19350e3490">
<p>Is missing intervening archived redo log files from the new branch of redo data</p>
</td>
<td class="cellalignment2266" headers="d19350e3556 d19350e3493">
<p>The MRP cannot continue until the missing log files are retrieved.</p>
</td>
<td class="cellalignment2282" headers="d19350e3556 d19350e3496">
<p>Locate and register missing archived redo log files from each branch.</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2282" id="d19350e3566" headers="d19350e3490">
<p>Is missing archived redo log files from the end of the previous branch of redo data.</p>
</td>
<td class="cellalignment2266" headers="d19350e3566 d19350e3493">
<p>The MRP cannot continue until the missing log files are retrieved.</p>
</td>
<td class="cellalignment2282" headers="d19350e3566 d19350e3496">
<p>Locate and register missing archived redo log files from the previous branch.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>See <a class="olink BRADV89752" target="_blank" href="../BRADV/rcmflash.htm#BRADV89752"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for more information about database incarnations, recovering through an <code class="codeph">OPEN RESETLOGS</code> operation, and Flashback Database.</p>
</div>
</div>
<a id="SBYDB5041"></a><a id="SBYDB00710"></a>
<div class="props_rev_3"><a id="GUID-0682EE24-B495-48E8-9E1F-52AC0E6FE486"></a>
<h2 id="SBYDB-GUID-0682EE24-B495-48E8-9E1F-52AC0E6FE486" class="sect2"><span class="enumeration_section">10.5</span> Monitoring Primary, Physical Standby, and Snapshot Standby Databases</h2>
<div>
<div class="section">
<p>This section describes where to find useful information for monitoring primary and standby databases.</p>
<p><a href="manage_ps.htm#GUID-0682EE24-B495-48E8-9E1F-52AC0E6FE486__g1041815" title="Summarizes the common events that occur on the primary database and pointers to the files and view where you can monitor these events on the primary and standby sites.">Table 10-2</a> summarizes common primary database management actions and where to find information related to these actions.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-0682EE24-B495-48E8-9E1F-52AC0E6FE486__g1041815">
<p class="titleintable">Table 10-2 Sources of Information About Common Primary Database Management Actions</p>
<table class="cellalignment2262" title="Sources of Information About Common Primary Database Management Actions " summary="Summarizes the common events that occur on the primary database and pointers to the files and view where you can monitor these events on the primary and standby sites.">
<thead>
<tr class="cellalignment2253">
<th class="cellalignment2286" id="d19350e3684">Primary Database Action</th>
<th class="cellalignment2263" id="d19350e3687">Primary Site Information</th>
<th class="cellalignment2287" id="d19350e3690">Standby Site Information</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3695" headers="d19350e3684">
<p>Enable or disable a redo thread</p>
</td>
<td class="cellalignment2266" headers="d19350e3695 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p>Alert log</p>
</li>
<li>
<p><code class="codeph">V$THREAD</code></p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3695 d19350e3690">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3711" headers="d19350e3684">
<p>Display database role, protection mode, protection level, switchover status, fast-start failover<a id="d19350e3714" class="indexterm-anchor"></a><a id="d19350e3718" class="indexterm-anchor"></a><a id="d19350e3722" class="indexterm-anchor"></a><a id="d19350e3726" class="indexterm-anchor"></a><a id="d19350e3730" class="indexterm-anchor"></a> information, and so forth</p>
</td>
<td class="cellalignment2266" headers="d19350e3711 d19350e3687">
<p><code class="codeph">V$DATABASE</code></p>
</td>
<td class="cellalignment2289" headers="d19350e3711 d19350e3690">
<p><code class="codeph">V$DATABASE</code></p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3744" headers="d19350e3684">
<p>Add or drop a redo log file group</p>
</td>
<td class="cellalignment2266" headers="d19350e3744 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p>Alert log</p>
</li>
<li>
<p><code class="codeph">V$LOG</code></p>
</li>
<li>
<p><code class="codeph">STATUS</code> column of <code class="codeph">V$LOGFILE</code></p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3744 d19350e3690">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3768" headers="d19350e3684">
<p><code class="codeph">CREATE CONTROLFILE</code></p>
</td>
<td class="cellalignment2266" headers="d19350e3768 d19350e3687">
<p>Alert log</p>
</td>
<td class="cellalignment2289" headers="d19350e3768 d19350e3690">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3779" headers="d19350e3684">
<p>Monitor Redo Apply</p>
</td>
<td class="cellalignment2266" headers="d19350e3779 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p>Alert log</p>
</li>
<li>
<p><code class="codeph">V$ARCHIVE_DEST_STATUS</code></p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3779 d19350e3690">
<ul style="list-style-type: disc;">
<li>
<p>Alert log</p>
</li>
<li>
<p><code class="codeph">V$ARCHIVED_LOG</code></p>
</li>
<li>
<p><code class="codeph">V$LOG_HISTORY</code></p>
</li>
<li>
<p><code class="codeph">V$MANAGED_STANDBY</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3809" headers="d19350e3684">
<p><a id="d19350e3811" class="indexterm-anchor"></a><a id="d19350e3815" class="indexterm-anchor"></a><a id="d19350e3819" class="indexterm-anchor"></a>Change tablespace status</p>
</td>
<td class="cellalignment2266" headers="d19350e3809 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$RECOVER_FILE</code></p>
</li>
<li>
<p><code class="codeph">DBA_TABLESPACES</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3809 d19350e3690">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$RECOVER_FILE</code></p>
</li>
<li>
<p><code class="codeph">DBA_TABLESPACES</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3846" headers="d19350e3684">
<p><a id="d19350e3848" class="indexterm-anchor"></a>Add or drop a data file or tablespace</p>
</td>
<td class="cellalignment2266" headers="d19350e3846 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBA_DATA_FILES</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3846 d19350e3690">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$DATAFILE</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3873" headers="d19350e3684">
<p>Rename a data file</p>
</td>
<td class="cellalignment2266" headers="d19350e3873 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$DATAFILE</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3873 d19350e3690">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$DATAFILE</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3895" headers="d19350e3684">
<p>Unlogged or unrecoverable operations</p>
</td>
<td class="cellalignment2266" headers="d19350e3895 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$DATAFILE</code></p>
</li>
<li>
<p><code class="codeph">V$DATABASE</code></p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3895 d19350e3690">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3913" headers="d19350e3684">
<p>Monitor redo transport</p>
</td>
<td class="cellalignment2266" headers="d19350e3913 d19350e3687">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$ARCHIVE_DEST_STATUS</code></p>
</li>
<li>
<p><code class="codeph">V$ARCHIVED_LOG</code></p>
</li>
<li>
<p><code class="codeph">V$ARCHIVE_DEST</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment2289" headers="d19350e3913 d19350e3690">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">V$ARCHIVED_LOG</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3944" headers="d19350e3684">
<p>Issue <code class="codeph">OPEN RESETLOGS</code> or <code class="codeph">CLEAR UNARCHIVED LOGFILES</code> statements</p>
</td>
<td class="cellalignment2266" headers="d19350e3944 d19350e3687">
<p>Alert log</p>
</td>
<td class="cellalignment2289" headers="d19350e3944 d19350e3690">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2288" id="d19350e3961" headers="d19350e3684">
<p>Change initialization parameter</p>
</td>
<td class="cellalignment2266" headers="d19350e3961 d19350e3687">
<p>Alert log</p>
</td>
<td class="cellalignment2289" headers="d19350e3961 d19350e3690">
<p>Alert log</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="SBYDB00555"></a>
<div class="props_rev_3"><a id="GUID-567E9883-B1BE-431D-86E9-872BAB6A899F"></a>
<h3 id="SBYDB-GUID-567E9883-B1BE-431D-86E9-872BAB6A899F" class="sect3"><span class="enumeration_section">10.5.1</span> Using Views to Monitor Primary, Physical, and Snapshot Standby Databases</h3>
<div>
<p><a id="d19350e4051" class="indexterm-anchor"></a>This section shows how to use dynamic performance views to monitor primary, physical standby, and snapshot standby databases.</p>
<p>The following dynamic performance views are discussed:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="manage_ps.htm#GUID-BCAA4A5D-8A26-434D-B2E9-291BF7FC147D">V$DATABASE</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-31B49D22-414F-4802-9A48-8D8C55CD8CB6">V$MANAGED_STANDBY</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-E97EB4D8-48E0-4355-A878-9CA3E80C0AE8">V$ARCHIVED_LOG</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-6FF2CE1A-C0D8-4821-BF75-B219F9AA283A">V$LOG_HISTORY</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-F60AAF04-10FE-4568-BA5E-792D150FEA28">V$DATAGUARD_STATUS</a></p>
</li>
<li>
<p><a href="manage_ps.htm#GUID-0DA8663E-65C4-47EB-8D47-4712F8201646">V$ARCHIVE_DEST</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-567E9883-B1BE-431D-86E9-872BAB6A899F__GUID-3E3D74E6-09CE-4E23-A3F6-E79BD9A8CB73">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN003" target="_blank" href="../REFRN/GUID-8C5690B0-DE10-4460-86DF-80111869CF4C.htm#REFRN003"><span class="italic">Oracle Database Reference</span></a> for complete reference information about views</p>
</div>
</div>
<a id="SBYDB4796"></a>
<div class="props_rev_3"><a id="GUID-BCAA4A5D-8A26-434D-B2E9-291BF7FC147D"></a>
<h4 id="SBYDB-GUID-BCAA4A5D-8A26-434D-B2E9-291BF7FC147D" class="sect4"><span class="enumeration_section">10.5.1.1</span> V$DATABASE</h4>
<div>
<div class="section">
<p>The following query displays the data protection mode, data protection level, database role, and switchover status for a primary, physical standby or snapshot standby database:</p>
<pre dir="ltr">SQL&gt; SELECT PROTECTION_MODE, PROTECTION_LEVEL, &ndash;
&gt; DATABASE_ROLE ROLE, SWITCHOVER_STATUS &ndash;
&gt; FROM V$DATABASE;
</pre>
<p>The following query displays fast-start failover status:</p>
<pre dir="ltr">SQL&gt; SELECT FS_FAILOVER_STATUS &#34;FSFO STATUS&#34;, -
&gt; FS_FAILOVER_CURRENT_TARGET TARGET, -
&gt; FS_FAILOVER_THRESHOLD THRESHOLD, -
&gt; FS_FAILOVER_OBSERVER_PRESENT &#34;OBSERVER PRESENT&#34; &ndash;
&gt; FROM V$DATABASE;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4797"></a>
<div class="props_rev_3"><a id="GUID-31B49D22-414F-4802-9A48-8D8C55CD8CB6"></a>
<h4 id="SBYDB-GUID-31B49D22-414F-4802-9A48-8D8C55CD8CB6" class="sect4"><span class="enumeration_section">10.5.1.2</span> V$MANAGED_STANDBY</h4>
<div>
<div class="section">
<p><a id="d19350e4253" class="indexterm-anchor"></a><a id="d19350e4255" class="indexterm-anchor"></a>The following query displays Redo Apply and redo transport status on a physical standby database:</p>
<pre dir="ltr">SQL&gt; SELECT PROCESS, STATUS, THREAD#, SEQUENCE#,-
&gt; BLOCK#, BLOCKS FROM V$MANAGED_STANDBY;
 
PROCESS STATUS       THREAD#    SEQUENCE#  BLOCK#     BLOCKS
------- ------------ ---------- ---------- ---------- ----------
RFS     ATTACHED     1          947        72         72
MRP0    APPLYING_LOG 1          946        10         72
</pre>
<p>The sample output shows that a remote file server (RFS) process completed archiving a redo log file with a sequence number of 947 and that Redo Apply is actively applying an archived redo log file with a sequence number of 946. Redo Apply is currently recovering block number 10 of the 72-block archived redo log file.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4798"></a>
<div class="props_rev_3"><a id="GUID-E97EB4D8-48E0-4355-A878-9CA3E80C0AE8"></a>
<h4 id="SBYDB-GUID-E97EB4D8-48E0-4355-A878-9CA3E80C0AE8" class="sect4"><span class="enumeration_section">10.5.1.3</span> V$ARCHIVED_LOG</h4>
<div>
<div class="section">
<p><a id="d19350e4335" class="indexterm-anchor"></a><a id="d19350e4337" class="indexterm-anchor"></a><a id="d19350e4341" class="indexterm-anchor"></a>The following query displays information about archived redo log files that have been received by a physical or snapshot standby database from a primary database:</p>
<pre dir="ltr">SQL&gt; SELECT THREAD#, SEQUENCE#, FIRST_CHANGE#, -
&gt; NEXT_CHANGE# FROM V$ARCHIVED_LOG;
 
THREAD#    SEQUENCE#  FIRST_CHANGE# NEXT_CHANGE#
---------- ---------- ------------- ------------
1          945        74651         74739
1          946        74739         74772
1          947        74772         74795
</pre>
<p>The sample output shows that three archived redo log files have been received from the primary database.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4799"></a>
<div class="props_rev_3"><a id="GUID-6FF2CE1A-C0D8-4821-BF75-B219F9AA283A"></a>
<h4 id="SBYDB-GUID-6FF2CE1A-C0D8-4821-BF75-B219F9AA283A" class="sect4"><span class="enumeration_section">10.5.1.4</span> V$LOG_HISTORY</h4>
<div>
<div class="section">
<p>The following query displays archived log history information:<a id="d19350e4421" class="indexterm-anchor"></a><a id="d19350e4423" class="indexterm-anchor"></a></p>
<pre dir="ltr">SQL&gt; SELECT THREAD#, SEQUENCE#, FIRST_CHANGE#, -
&gt; NEXT_CHANGE# FROM V$LOG_HISTORY;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4800"></a>
<div class="props_rev_3"><a id="GUID-F60AAF04-10FE-4568-BA5E-792D150FEA28"></a>
<h4 id="SBYDB-GUID-F60AAF04-10FE-4568-BA5E-792D150FEA28" class="sect4"><span class="enumeration_section">10.5.1.5</span> V$DATAGUARD_STATUS</h4>
<div>
<div class="section">
<p>The<a id="d19350e4500" class="indexterm-anchor"></a><a id="d19350e4502" class="indexterm-anchor"></a> following query displays messages generated by Oracle Data Guard events that caused a message to be written to the alert log or to a server process trace file:</p>
<pre dir="ltr">SQL&gt; SELECT MESSAGE FROM V$DATAGUARD_STATUS;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="SBYDB5131"></a>
<div class="props_rev_3"><a id="GUID-0DA8663E-65C4-47EB-8D47-4712F8201646"></a>
<h4 id="SBYDB-GUID-0DA8663E-65C4-47EB-8D47-4712F8201646" class="sect4"><span class="enumeration_section">10.5.1.6</span> V$ARCHIVE_DEST</h4>
<div>
<div class="section">
<p>The following query shows the status of each redo transport destination, and for redo transport destinations that are standby databases, the SCN of the last primary database redo applied at that standby database:</p>
<pre dir="ltr">SQL&gt; SELECT DEST_ID, APPLIED_SCN FROM V$ARCHIVE_DEST WHERE TARGET=&#39;STANDBY&#39;;
   
DEST_ID    STATUS    APPLIED_SCN
---------- --------- -----------
2          VALID     439054
3          VALID     439054 
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="SBYDB00580"></a>
<div class="props_rev_3"><a id="GUID-EEDAC95A-828F-4117-AF57-D8ABA702D42D"></a>
<h2 id="SBYDB-GUID-EEDAC95A-828F-4117-AF57-D8ABA702D42D" class="sect2"><span class="enumeration_section">10.6</span> Tuning Redo Apply</h2>
<div>
<div class="section">
<p>The <span class="italic">Active Data Guard 11g Best Practices (includes best practices for Redo Apply</span>) white paper describes how to optimize Redo Apply and media recovery performance. This paper is available on the Oracle Maximum Availability Architecture (MAA) home page at:</p>
<p><a href="http://www.oracle.com/goto/maa/" target="_blank"><code class="codeph">http://www.oracle.com/goto/maa</code></a></p>
<div class="infoboxnotealso" id="GUID-EEDAC95A-828F-4117-AF57-D8ABA702D42D__GUID-2E8E7259-7176-41AE-BE0D-634D21CF95F9">
<p class="notep1">See Also:</p>
<p>My Oracle Support note 454848.1 at <a href="http://support.oracle.com" target="_blank"><code class="codeph">http://support.oracle.com</code></a> for information about the installation and use of the Standby Statspack, which can be used to collect Redo Apply performance data from a physical standby database</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4801"></a>
<div class="props_rev_3"><a id="GUID-CE30E2D6-5B53-4389-8B02-FC0F341C8C1A"></a>
<h2 id="SBYDB-GUID-CE30E2D6-5B53-4389-8B02-FC0F341C8C1A" class="sect2"><span class="enumeration_section">10.7</span> Managing a Snapshot Standby Database</h2>
<div>
<p>A snapshot standby database is a fully updatable standby database. A snapshot standby database receives and archives, but does not apply, redo data from a primary database. Redo data received from the primary database is applied when a snapshot standby database is converted back into a physical standby database, after discarding all local updates to the snapshot standby database.</p>
<p>A snapshot standby database typically diverges from its primary database over time because redo data from the primary database is not applied as it is received. Local updates to the snapshot standby database cause additional divergence. The data in the primary database is fully protected however, because a snapshot standby can be converted back into a physical standby database at any time, and the redo data received from the primary is then applied.</p>
<p>A snapshot standby database provides disaster recovery and data protection benefits that are similar to those of a physical standby database. Snapshot standby databases are best used in scenarios where the benefit of having a temporary, updatable snapshot of the primary database justifies increased time to recover from primary database failures.</p>
</div>
<a id="SBYDB00708"></a>
<div class="props_rev_3"><a id="GUID-63245504-B67C-4DF2-B8E5-752C0A67FEE7"></a>
<h3 id="SBYDB-GUID-63245504-B67C-4DF2-B8E5-752C0A67FEE7" class="sect3"><span class="enumeration_section">10.7.1</span> Converting a Physical Standby Database into a Snapshot Standby Database</h3>
<div>
<div class="section">
<p>Perform the following steps to convert a physical standby database into a snapshot standby database:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Stop Redo Apply, if it is active.</span></li>
<li class="stepexpand"><span>Ensure that the database is mounted, but not open.</span></li>
<li class="stepexpand"><span>Ensure that a fast recovery area has been configured. It is not necessary for flashback database to be enabled.</span></li>
<li class="stepexpand"><span>Issue the following SQL statement to perform the conversion:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE CONVERT TO SNAPSHOT STANDBY;
</pre></div>
</li>
<li class="stepexpand"><span>Open the snapshot standby in read/write mode by issuing the following SQL statement:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE OPEN READ WRITE;
</pre></div>
</li>
</ol>
<div class="section">
<div class="infobox-note" id="GUID-63245504-B67C-4DF2-B8E5-752C0A67FEE7__GUID-FF284DA9-3522-4C06-B43A-BC3DAEC9D610">
<p class="notep1">Note:</p>
<p>A physical standby database that is managed by the Oracle Data Guard broker can be converted into a snapshot standby database using either DGMGRL or Oracle Enterprise Manager Cloud Control. See <a class="olink DGBKR3432" target="_blank" href="../DGBKR/cli.htm#DGBKR3432"><span class="italic">Oracle Data Guard Broker</span></a> for more details.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4802"></a>
<div class="props_rev_3"><a id="GUID-C1C48B71-88F5-4006-9CAE-0FD040888FAE"></a>
<h3 id="SBYDB-GUID-C1C48B71-88F5-4006-9CAE-0FD040888FAE" class="sect3"><span class="enumeration_section">10.7.2</span> Using a Snapshot Standby Database</h3>
<div>
<p>A snapshot standby database can be opened in read-write mode and is fully updatable.</p>
<p>A snapshot standby database has the following characteristics:</p>
<ul style="list-style-type: disc;">
<li>
<p>A snapshot standby database cannot be the target of a switchover or failover. A snapshot standby database must first be converted back into a physical standby database before performing a role transition to it.</p>
</li>
<li>
<p>A snapshot standby database cannot be the only standby database in a Maximum Protection Oracle Data Guard configuration.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-C1C48B71-88F5-4006-9CAE-0FD040888FAE__GUID-F3C6A814-7DDC-483D-A89D-D14D70BC5C37">
<p class="notep1">Note:</p>
<p>Flashback Database is used to convert a snapshot standby database back into a physical standby database. Any operation that cannot be reversed using Flashback Database technology prevents a snapshot standby from being converted back to a physical standby.</p>
<p>For information about some of the limitations of Flashback Database, see <a class="olink BRADV543" target="_blank" href="../BRADV/flashdb.htm#BRADV543"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a>.</p>
</div>
</div>
</div>
<a id="SBYDB4803"></a>
<div class="props_rev_3"><a id="GUID-36B87563-A971-43B4-8320-52BBA27EE749"></a>
<h3 id="SBYDB-GUID-36B87563-A971-43B4-8320-52BBA27EE749" class="sect3"><span class="enumeration_section">10.7.3</span> Converting a Snapshot Standby Database into a Physical Standby Database</h3>
<div>
<div class="section">
<p>Perform the following steps to convert a snapshot standby database into a physical standby database:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>On an Oracle Real Applications Cluster (Oracle RAC) database, shut down all but one instance.</span></li>
<li class="stepexpand"><span>Ensure that the database is mounted, but not open.</span></li>
<li class="stepexpand"><span>Issue the following SQL statement to perform the conversion:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE CONVERT TO PHYSICAL STANDBY;
</pre></div>
</li>
</ol>
<div class="section">
<p>Redo data received while the database was a snapshot standby database is automatically applied when Redo Apply is started.</p>
<div class="infobox-note" id="GUID-36B87563-A971-43B4-8320-52BBA27EE749__GUID-5BA3A087-383B-437B-8A12-B8FE1DD9CAE1">
<p class="notep1">Note:</p>
<p>A snapshot standby database must be opened at least once in read-write mode before it can be converted into a physical standby database.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2252">
<tr>
<td class="cellalignment2259">
<table class="cellalignment2257">
<tr>
<td class="cellalignment2256"><a href="role_management.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2256"><a href="manage_ls.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2261">
<table class="cellalignment2255">
<tr>
<td class="cellalignment2256"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2256"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2256"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2256"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2256"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2256"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>