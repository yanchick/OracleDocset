<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-91966"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Far%20Sync"></a><title>Far Sync</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="far sync instances, creating"/>
<meta name="dcterms.created" content="2017-07-21T12:09:00Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Guard Concepts and Administration"/>
<meta name="dcterms.identifier" content="E48552-08"/>
<meta name="dcterms.isVersionOf" content="SBYDB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="create_ls.htm" title="Previous" type="text/html"/>
<link rel="Next" href="protection.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48552-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-8AD7FBA2-42B0-46CF-852B-1AF0CB4A36E8"></a> <span id="PAGE" style="display:none;">11/35</span> <!-- End Header -->
<a id="SBYDB5416"></a>
<h1 id="SBYDB-GUID-8AD7FBA2-42B0-46CF-852B-1AF0CB4A36E8" class="sect1"><span class="enumeration_chapter">5</span> Far Sync</h1>
<div>
<p>An Oracle Data Guard far sync instance<a id="d12275e68" class="indexterm-anchor"></a> is a remote Oracle Data Guard destination that accepts redo from the primary database and then ships that redo to other members of the Oracle Data Guard configuration. A far sync instance manages a control file, receives redo into standby redo logs (SRLs), and archives those SRLs to local archived redo logs, but that is where the similarity with standbys ends. A far sync instance does not have user data files, cannot be opened for access, cannot run redo apply, and can never function in the primary role or be converted to any type of standby database.</p>
<p>Far sync instances are part of the Oracle Active Data Guard Far Sync feature, which requires an Oracle Active Data Guard license.</p>
<p>A far sync instance consumes very little disk and processing resources, yet provides the ability to failover to a terminal destination with zero data loss, as well as offload the primary database of other types of overhead (for example, redo transport).</p>
<p>All redo transport options available to a primary when servicing a typical standby destination are also available to it when servicing a far sync instance. And all redo transport options are available to a far sync instance when servicing terminal destinations (for example, performing redo transport compression, if you have a license for the Oracle Advanced Compression option).</p>
<p>Many configurations have a primary database shipping redo to a standby database using asynchronous transport at the risk of some data loss at failover time. Using synchronous redo transport to achieve zero data loss may not be a viable option because of the impact on the commit response times at the primary due to network latency between the two databases.</p>
<p>Creating a far sync instance close to the primary has the benefit of minimizing impact on commit response times to an acceptable threshold (due to the smaller network latency between primary and far sync instance) while allowing for higher data protection guarantees -- if the primary were to fail, and assuming the far sync instance was synchronized at the time of the failure, the far sync instance and the terminal standby would coordinate a final redo shipment from the far sync instance to the standby to ship any redo not yet available to the Standby and then perform a zero-data-loss failover.</p>
<p>See the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="create_fs.htm#GUID-3B796B03-DB88-4592-84CB-3E019C977CBA">Creating a Far Sync Instance</a></p>
</li>
<li>
<p><a href="create_fs.htm#GUID-DD2848BB-E7C9-495A-9A42-8D4D2723435F">Additional Configurations</a></p>
</li>
<li>
<p><a href="create_fs.htm#GUID-54F9001B-A5F2-4134-A6BA-521DC7E41E57">Supported Protection Modes for Far Sync Instances</a></p>
</li>
</ul>
</div>
<a id="SBYDB5417"></a>
<div class="props_rev_3"><a id="GUID-3B796B03-DB88-4592-84CB-3E019C977CBA"></a>
<h2 id="SBYDB-GUID-3B796B03-DB88-4592-84CB-3E019C977CBA" class="sect2"><span class="enumeration_section">5.1</span> Creating a Far Sync Instance</h2>
<div>
<p>Creating<a id="d12275e175" class="indexterm-anchor"></a> a far sync instance is similar to creating a physical standby except that data files do not exist at the far sync instance. Therefore, on a far sync instance there is no need to copy data files or restore data files from a backup. Once the far sync instance has been created, the configuration is modified to send redo synchronously from the primary database to the far sync instance in Maximum Availability mode and the far sync instance then forwards the redo asynchronously in real time. Lastly, the original asynchronous standby (referred to as the terminal standby) is configured to act as the alternate to the far sync instance in the event that communication with the far sync instance is interrupted.</p>
<div class="infobox-note" id="GUID-3B796B03-DB88-4592-84CB-3E019C977CBA__GUID-56AA04D2-8AD7-4D1E-8CAF-1A068CA8D3E3">
<p class="notep1">Note:</p>
<p>In a configuration that contains a far sync instance, there must still be a direct network connection between the primary database and the remote standby database. The direct connection between the primary and the remote standby is used to perform health checks and switchover processing tasks. It is not used for redo transport unless the standby has been configured as an alternate destination in case the far sync instance fails and there is no alternate far sync configured to maintain the protection level.</p>
</div>
<p>This section describes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3">Creating and Configuring a Far Sync Instance</a></p>
</li>
<li>
<p><a href="create_fs.htm#GUID-7785E8CB-BD2B-454F-A140-16E34F2447D7">Configuring an ALTERNATE Destination</a></p>
</li>
</ul>
</div>
<a id="SBYDB5418"></a><a id="SBYDB5436"></a>
<div class="props_rev_3"><a id="GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3"></a>
<h3 id="SBYDB-GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3" class="sect3"><span class="enumeration_section">5.1.1</span> Creating and Configuring a Far Sync Instance</h3>
<div>
<div class="section">
<p>Take the following steps to create a far sync instance:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Create the control file for the far sync instance, as shown in the following example (the primary database does not have to be open, but it must at least be mounted):</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE CREATE FAR SYNC INSTANCE CONTROLFILE AS - 
&gt; &#39;/arch2/chicagoFS/control01.ctl&#39;;
</pre>
<p>The resulting control file enables <code class="codeph">chicagoFS</code> to operate as a far sync instance that receives redo from primary database <code class="codeph">chicago</code>. Note that the path and file name shown are just an example; you could use any path or file name that you want.</p>
</div>
</li>
<li class="stepexpand"><span>Create a parameter file (PFILE) from the server parameter file (SPFILE) used by the primary database. Although most of the initialization settings in the parameter file are also appropriate for the far sync instance, some modifications must be made. For example, on a far sync instance, the <code class="codeph">DB_FILE_NAME_CONVERT</code> and <code class="codeph">LOG_FILE_NAME_CONVERT</code> parameters must be set, and the <code class="codeph">DB_UNIQUE_NAME</code> of the far sync instance and the location of the far sync instance control file must be modified. <a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3__CJADCDJE">Example 5-1</a> shows sample parameter file content for a far sync instance with a <code class="codeph">DB_UNIQUE_NAME</code> of <code class="codeph">chicagoFS</code>.</span></li>
<li class="stepexpand"><span>Create a server parameter file (spfile) from the edited parameter file (pfile) to facilitate any subsequent changes to parameter values. If you do not use an spfile, then a warning is returned in the <code class="codeph">SHOW</code> <code class="codeph">CONFIGURATION</code> output when the far sync instance is added to a Data Guard broker configuration.</span></li>
<li class="stepexpand"><span>Use an operating system copy utility to copy the far sync instance control file created in Step 1 and the server parameter file (spfile) created in Step 3 from the primary system to the appropriate locations on the far sync instance system.</span></li>
<li class="stepexpand"><span>Create standby redo logs in the same way they are created for a regular standby. See <a href="log_transport.htm#GUID-E6EC6104-3C38-482D-B807-A0E84ECFB937">Managing Standby Redo Logs</a>.</span>
<div>
<p>Because the <code class="codeph">LOG_FILE_NAME_CONVERT</code> parameter was specified on the far sync instance (see <a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3__CJADCDJE">Example 5-1</a>), the standby redo logs will be created automatically when redo transport begins from the primary, if they were created on the primary as described in <a href="create_ps.htm#GUID-CA9076B9-3360-4A36-87AF-3390B391CEFF">Configure the Primary Database to Receive Redo Data</a>.</p>
<div class="infobox-note" id="GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3__GUID-E6A3F20E-442D-4024-8FD4-2524A358E1FB">
<p class="notep1">Note:</p>
<p>Standby redo log files used at the far sync instance cannot be shared with other databases. Therefore, all relevant considerations discussed in <a href="standby.htm#GUID-B59DBCF7-13A7-4F49-97E9-BF1BEF803699">Standby Database Directory Structure Considerations</a> for standby redo log files also apply at the far sync instance.</p>
</div>
</div>
</li>
<li class="stepexpand"><span>If the far sync instance will be hosted on a Windows system, use the ORADIM utility to create a Windows service. For example:</span>
<div>
<pre dir="ltr">WINNT&gt; oradim &ndash;NEW &ndash;SID boston &ndash;STARTMODE manual
</pre>
<p>The ORADIM utility automatically determines the username for which this service should be created and prompts for a password for that username (if that username needs a password). See <a class="olink NTQRF05011" target="_blank" href="../NTQRF/create.htm#NTQRF05011"><span class="italic">Oracle Database Platform Guide for Microsoft Windows</span></a> for more information about using the ORADIM utility.</p>
</div>
</li>
<li class="stepexpand"><span>This step is optional if operating system authentication is used for administrative users and if SSL is used for redo transport authentication. If not, then copy the primary database&#39;s remote login password file to the appropriate directory on the far sync instance. The password file must be recopied whenever an administrative privilege (<code class="codeph">SYSDG</code>, <code class="codeph">SYSOPER</code>, <code class="codeph">SYSDBA</code>, and so on) is granted or revoked, and after the password of any user with administrative privileges is changed.</span>
<div>
<p>If you have stored the password file in an Oracle ASM disk group at the standby database, then you must copy the updated password file from the primary database to the Oracle ASM location at the standby database. See <a class="olink OSTMG95354" target="_blank" href="../OSTMG/GUID-70D58CAB-BFA4-4055-8768-7C12D61D9A39.htm#OSTMG95354"><span class="italic">Oracle Automatic Storage Management Administrator&#39;s Guide</span></a> for information about the ASMCMD <code class="codeph">pwcopy</code> command used to copy an Oracle ASM or database instance password file to a specified location. See <a class="olink RACAD5045" target="_blank" href="../RACAD/GUID-1CAF8C01-4761-4CEB-B201-F4D0E67A4E70.htm#RACAD5045"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about using the <code class="codeph">srvctl</code> utility to modify a database configuration.</p>
</div>
</li>
<li class="stepexpand"><span>On the far sync instance site, use Oracle Net Manager to configure a listener for the far sync instance.<a id="d12275e389" class="indexterm-anchor"></a><a id="d12275e393" class="indexterm-anchor"></a></span>
<div>
<p>See <a class="olink NETAG219" target="_blank" href="../NETAG/admintools.htm#NETAG219"><span class="italic">Oracle Database Net Services Administrator&#39;s Guide</span></a> for more information about the listener.</p>
</div>
</li>
<li class="stepexpand"><span>On the primary system, use Oracle Net Manager to create a network service name for the far sync instance (<code class="codeph">chicagoFS</code>) that will be used by redo transport services.</span>
<div>
<p>On the far sync instance system, use Oracle Net Manager to create a network service name for the primary (<code class="codeph">chicago</code>) and the terminal standby (<code class="codeph">boston</code>) that will be used by redo transport services.</p>
<p>The Oracle Net service name must resolve to a connect descriptor that uses the same protocol, host address, port, and service that you specified when you configured the listeners for the primary database, the far sync instance, and the terminal standby database. The connect descriptor must also specify that a dedicated server be used.</p>
<p>See the <a class="olink NETAG175" target="_blank" href="../NETAG/concepts.htm#NETAG175"><span class="italic">Oracle Database Net Services Administrator&#39;s Guide</span></a> for more information about service names.</p>
</div>
</li>
<li class="stepexpand"><span>Start the far sync instance in mount mode.</span></li>
<li class="stepexpand"><span>Verify that the far sync instance is operating properly.</span>
<div>
<p>For information about validating a configuration after you create a far sync instance, see <a href="log_transport.htm#GUID-A0AAA20B-4DF8-4698-A7E0-3BED5A2C11E9">Validating a Configuration</a>.</p>
</div>
</li>
<li class="stepexpand"><span>Increase the protection mode of the configuration to Maximum Availability. On the primary database, execute the following command:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE SET STANDBY TO MAXIMIZE AVAILABILITY;
</pre>
<div class="infoboxnotealso" id="GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3__GUID-E1891A3E-8A2C-4741-9EAC-1091C41CC046">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="create_fs.htm#GUID-54F9001B-A5F2-4134-A6BA-521DC7E41E57">Supported Protection Modes for Far Sync Instances</a> for more information about far sync and protection modes</p>
</li>
<li>
<p><a href="protection.htm#GUID-16298839-9B8A-4E58-8EC9-27912E57F1CE">Oracle Data Guard Protection Modes</a> for more information about configuring different data protection modes</p>
</li>
</ul>
</div>
</div>
</li>
</ol>
<div class="example" id="GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3__CJADCDJE">
<p class="titleinexample">Example 5-1 Some of the Initialization Parameters Used For Far Sync Instances</p>
<p><span class="bold">Primary</span> <span class="bold">Database chicago</span></p>
<pre dir="ltr">DB_UNIQUE_NAME=chicago
 
CONTROL_FILES=&#39;/arch1/chicago/control01.ctl&#39;

DB_FILE_NAME_CONVERT=&#39;/boston/&#39;,&#39;/chicago/&#39;

LOG_FILE_NAME_CONVERT=&#39;/boston/&#39;,&#39;/chicago/&#39; 
 
FAL_SERVER=boston
 
LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,boston)&#39;
 
LOG_ARCHIVE_DEST_1=&#39;LOCATION=USE_DB_RECOVERY_FILE_DEST
VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=chicago&#39;
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=chicagoFS SYNC AFFIRM
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=chicagoFS&#39;
</pre>
<p><span class="bold">Far Sync Instance chicagoFS</span></p>
<pre dir="ltr">DB_UNIQUE_NAME=chicagoFS
 
CONTROL_FILES=&#39;/arch2/chicagoFS/control01.ctl&#39;

DB_FILE_NAME_CONVERT=&#39;/chicago/&#39;,&#39;/chicagoFS/&#39;,&#39;/boston/&#39;,&#39;/chicagoFS/&#39;
 
LOG_FILE_NAME_CONVERT=&#39;/chicago/&#39;,&#39;/chicagoFS/&#39;,&#39;/boston/&#39;,&#39;/chicagoFS/&#39;

FAL_SERVER=chicago
 
LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,boston)&#39;
 
LOG_ARCHIVE_DEST_1=&#39;LOCATION= USE_DB_RECOVERY_FILE_DEST
VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=chicagoFS&#39;
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=boston ASYNC
VALID_FOR=(STANDBY_LOGFILES,STANDBY_ROLE) DB_UNIQUE_NAME=boston&#39;
</pre>
<p><span class="bold">Physical Standby boston</span></p>
<pre dir="ltr">DB_UNIQUE_NAME=boston
 
CONTROL_FILES=&#39;/arch3/boston/control01.ctl&#39;

DB_FILE_NAME_CONVERT=&#39;/chicago/&#39;,&#39;/boston/&#39;

LOG_FILE_NAME_CONVERT=&#39;/chicago/&#39;,&#39;/boston/&#39;
 
FAL_SERVER=&#39;chicagoFS&#39;,&#39;chicago&#39;
 
LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,boston)&#39;
 
LOG_ARCHIVE_DEST_1=&#39;LOCATION= USE_DB_RECOVERY_FILE_DEST
VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=boston&#39;
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=chicago ASYNC
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=chicago&#39;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="SBYDB5437"></a>
<div class="props_rev_3"><a id="GUID-7785E8CB-BD2B-454F-A140-16E34F2447D7"></a>
<h3 id="SBYDB-GUID-7785E8CB-BD2B-454F-A140-16E34F2447D7" class="sect3"><span class="enumeration_section">5.1.2</span> Configuring an ALTERNATE Destination</h3>
<div>
<div class="section">
<p>After you perform the steps in <a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3">Creating and Configuring a Far Sync Instance</a>, the far sync instance is now providing zero data loss capability for the configuration to the terminal standby at a remote site over the WAN. For the configuration to remain protected at a Maximum Performance level, in the event that communication with the far sync instance is lost, you can optionally configure the terminal standby to automatically become the alternate destination. This will reduce the amount of data loss by allowing Oracle Data Guard to ship redo asynchronously directly from the primary to the terminal standby, temporarily bypassing the far sync instance.</p>
<p>To configure an alternate destination, set the parameters on the primary database as follows:</p>
<p><span class="bold">Primary Database chicago</span></p>
<pre dir="ltr">LOG_ARCHIVE_DEST_STATE_2=&#39;ENABLE&#39;
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=chicagoFS SYNC AFFIRM MAX_FAILURE=1 <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_3</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=chicagoFS&#39;
 
LOG_ARCHIVE_DEST_STATE_3=&#39;ALTERNATE&#39;
 
LOG_ARCHIVE_DEST_3=&#39;SERVICE=boston ASYNC <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_2</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=boston&#39;
</pre>
<p>This enables Oracle Data Guard to continue sending redo, asynchronously, to the terminal standby <code class="codeph">boston</code> when it can no longer send the redo directly to the far sync instance <code class="codeph">chicagoFS</code>. When the far sync instance becomes available again, Oracle Data Guard automatically resynchronizes the far sync instance <code class="codeph">chicagoFS</code> and returns to the original configuration in which the primary sends redo to the far sync instance and the far sync instance forwards that redo to the terminal standby. When the synchronization is complete, the alternate destination (<code class="codeph">LOG_ARCHIVE_DEST_3</code> in the preceding example) will again become dormant as the alternate.</p>
<p>For more information about the <code class="codeph">ALTERNATE</code> attribute, see <span class="q">&#34;<a href="log_arch_dest_param.htm#GUID-88222D10-22FD-4F3B-BBE5-B59C8ABEC725">ALTERNATE</a>&#34;</span>.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB5438"></a>
<div class="props_rev_3"><a id="GUID-DD2848BB-E7C9-495A-9A42-8D4D2723435F"></a>
<h2 id="SBYDB-GUID-DD2848BB-E7C9-495A-9A42-8D4D2723435F" class="sect2"><span class="enumeration_section">5.2</span> Additional Configurations</h2>
<div>
<p>This section provides examples of two additional far sync instance configurations. These examples describe variations that provide better data protection when you use far sync instances.</p>
<p>For continued protection after a role change, two far sync instances can be configured, one close to each database in the configuration, where only one is active at any time and the other one becomes active when a role change occurs between the primary database and the terminal standby database. This allows the configuration to remain in the desired protection mode regardless of which database is the primary database.</p>
<p>For more protection from system or network failures, two additional far sync instances can be configured that provide high availability for the active far sync instance. In this configuration one is the preferred active far sync instance and the other is the alternate far sync instance. Configuring an alternate far sync instance provides continued protection for the configuration if the preferred far sync instance fails for some reason. The primary automatically starts shipping to the alternate far sync instance if it detects a failure at the preferred far sync instance. If the preferred far sync instance re-establishes itself, then the primary switches back to the preferred far sync instance and puts the alternate far sync instance back into the alternate state.</p>
<p>In these types of configurations, the primary uses only one of these far sync instances to redistribute redo at any given time.</p>
</div>
<a id="SBYDB5440"></a><a id="SBYDB5439"></a>
<div class="props_rev_3"><a id="GUID-90793B6A-6D79-4332-9BFD-9895FF1757FD"></a>
<h3 id="SBYDB-GUID-90793B6A-6D79-4332-9BFD-9895FF1757FD" class="sect3"><span class="enumeration_section">5.2.1</span> Maintaining Protection After a Role Change</h3>
<div>
<p>The configuration described in <a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3">Creating and Configuring a Far Sync Instance</a> and <a href="create_fs.htm#GUID-7785E8CB-BD2B-454F-A140-16E34F2447D7">Configuring an ALTERNATE Destination</a> would be inappropriate after a role transition where <code class="codeph">boston</code> becomes the primary database and <code class="codeph">chicago</code> becomes the terminal standby. The far sync instance <code class="codeph">chicagoFS</code> would be too remote for <code class="codeph">boston</code> to use it as a synchronous destination because the network latency between two sites is sufficiently large and would impact commit response times. To maintain the protection level of Maximum Availability for zero data loss, a second far sync instance close to <code class="codeph">boston</code> must be established, in readiness for a future role transition event.</p>
<p>Using the same procedure as described in <a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3">Creating and Configuring a Far Sync Instance</a> and <a href="create_fs.htm#GUID-7785E8CB-BD2B-454F-A140-16E34F2447D7">Configuring an ALTERNATE Destination</a>, create a far sync instance named <code class="codeph">bostonFS</code> close to the standby database <code class="codeph">boston</code>. <a href="create_fs.htm#GUID-90793B6A-6D79-4332-9BFD-9895FF1757FD__CJACDBCA">Example 5-2</a> shows the parameters that the new far sync instance <code class="codeph">bostonFS</code> would then have.</p>
<div class="infobox-note" id="GUID-90793B6A-6D79-4332-9BFD-9895FF1757FD__GUID-6C7C5DAE-774E-4C24-80B4-FEE26BC4C2E0">
<p class="notep1">Note:</p>
<p>The far sync instance, <code class="codeph">bostonFS</code>, will receive redo from <code class="codeph">boston</code> and ship it to <code class="codeph">chicago</code> only when <code class="codeph">boston</code> is the primary database. However, even if <code class="codeph">boston</code> is not the primary database, Oracle recommends keeping far sync instance <code class="codeph">bostonFS</code> mounted in readiness for a future role transition.</p>
</div>
<div class="example" id="GUID-90793B6A-6D79-4332-9BFD-9895FF1757FD__CJACDBCA">
<p class="titleinexample">Example 5-2 Parameters Used to Set Up Protection After a Role Change</p>
<p><span class="bold">Far Sync Instance bostonFS</span></p>
<pre dir="ltr">DB_UNIQUE_NAME=bostonFS
 
CONTROL_FILES=&#39;/arch2/bostonFS/control01.ctl&#39;
 
FAL_SERVER=boston
 
LOG_FILE_NAME_CONVERT=&#39;boston&#39;,&#39;bostonFS&#39;
 
LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,boston,bostonFS)&#39;
 
LOG_ARCHIVE_DEST_1=&#39;LOCATION= USE_DB_RECOVERY_FILE_DEST
VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=bostonFS&#39;
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=chicago ASYNC
VALID_FOR=(STANDBY_LOGFILES,STANDBY_ROLE) DB_UNIQUE_NAME=chicago&#39;
</pre>
<p>The standby database <code class="codeph">boston</code> would have been modified to have the following parameters set:</p>
<p><span class="bold">Physical Standby Database boston</span></p>
<pre dir="ltr">LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,boston,bostonFS)&#39;
 
LOG_ARCHIVE_DEST_STATE_2=ENABLE
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=bostonFS SYNC AFFIRM MAX_FAILURE=1 <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_3</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=bostonFS&#39;
 
LOG_ARCHIVE_DEST_STATE_3=&#39;ALTERNATE&#39;
 
LOG_ARCHIVE_DEST_3=&#39;SERVICE=chicago ASYNC <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_2</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=chicago&#39;
</pre>
<p>Lastly, modify the parameters on <code class="codeph">chicago</code> as follows:</p>
<p><span class="bold">Primary Database chicago</span></p>
<pre dir="ltr">LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,boston,bostonFS)&#39;
 
FAL_SERVER=&#39;bostonFS&#39;,&#39;boston&#39;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="SBYDB5442"></a><a id="SBYDB5441"></a>
<div class="props_rev_3"><a id="GUID-202CFD77-58C3-46C7-9C80-A688AEAA683B"></a>
<h3 id="SBYDB-GUID-202CFD77-58C3-46C7-9C80-A688AEAA683B" class="sect3"><span class="enumeration_section">5.2.2</span> Far Sync Instance High Availability</h3>
<div>
<p>If the <code class="codeph">ALTERNATE</code> remote destination is set up directly between two databases using asynchronous redo transport, then in the event of a failure of the active far sync instance, the protection level of the configuration falls back down to Maximum Performance, with potential data loss at failover time.</p>
<p>To maintain the protection level of Maximum Availability, a second far sync instance can be set up as the <code class="codeph">ALTERNATE</code> to the far sync instance used by each database when it is the primary. Then, if the active far sync instance becomes unavailable, the primary database can automatically begin sending redo in synchronous mode to the alternate far sync instance, thereby maintaining the elevated protection level of Maximum Availability. As before, when the original far sync instance reestablishes itself, the primary will automatically resume using it as the active far sync destination, and the second local far sync instance will once again become the alternate.</p>
<p>These high availability far sync instances would be created using the same steps as given in <a href="create_fs.htm#GUID-43FE645C-1383-44F1-9127-7EFB2A402DB3">Creating and Configuring a Far Sync Instance</a> and then become the alternates to their local far sync instances instead of the terminal standby. When complete, <code class="codeph">chicago</code> and <code class="codeph">boston</code> would have their parameters configured as follows (assuming the names <code class="codeph">chicagoFS1</code> and <code class="codeph">bostonFS1</code> as the new far sync instance names).</p>
<div class="example" id="GUID-202CFD77-58C3-46C7-9C80-A688AEAA683B__GUID-65A99D1D-7B12-4373-B264-C5ADED6578AB">
<p class="titleinexample">Example 5-3 Parameters Used to Set Up High Availability Far Sync Instances</p>
<p><span class="bold">Primary Database chicago</span></p>
<pre dir="ltr">FAL_SERVER=bostonFS, bostonFS1, boston
 
LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,chicagoFS1,boston,bostonFS,bostonFS1)&#39;
 
LOG_ARCHIVE_DEST_STATE_2=&#39;ENABLE&#39;
LOG_ARCHIVE_DEST_2=&#39;SERVICE=chicagoFS SYNC AFFIRM MAX_FAILURE=1 <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_3</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=chicagoFS&#39;
 
LOG_ARCHIVE_DEST_STATE_3=&#39;ALTERNATE&#39;
 
LOG_ARCHIVE_DEST_3=&#39;SERVICE=chicagoFS1 SYNC AFFIRM <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_2</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=chicagoFS1&#39;
</pre>
<p><span class="bold">Physical Standby boston</span></p>
<pre dir="ltr">LOG_ARCHIVE_CONFIG=&#39;DG_CONFIG=(chicago,chicagoFS,chicagoFS1,boston,bostonFS,bostonFS1)&#39;
 
LOG_ARCHIVE_DEST_STATE_2=&#39;ENABLE&#39;
 
LOG_ARCHIVE_DEST_2=&#39;SERVICE=bostonFS SYNC AFFIRM MAX_FAILURE=1 <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_3</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=bostonFS&#39;
 
LOG_ARCHIVE_DEST_STATE_3=&#39;ALTERNATE&#39;
 
LOG_ARCHIVE_DEST_3=&#39;SERVICE=bostonFS1 SYNC AFFIRM <span class="bold">ALTERNATE=LOG_ARCHIVE_DEST_2</span>
VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=bostonFS1&#39;
</pre>
<p>Oracle Data Guard will now be able to continue synchronously sending redo to a far sync instance, maintaining the required zero data loss protection mode of Maximum Availability regardless of whether <code class="codeph">chicago</code> or <code class="codeph">boston</code> is the primary database. As before, when the failed far sync instance becomes available again, Oracle Data Guard will automatically resynchronize it and return to the original configuration in which the primary sends redo to the first far sync instance, who then forwards that redo to the terminal standby. When the synchronization is complete, the alternate destination (<code class="codeph">LOG_ARCHIVE_DEST_3</code> in the preceding example) will again become dormant as the alternate.</p>
</div>
<!-- class="example" --></div>
</div>
</div>
<a id="SBYDB5443"></a>
<div class="props_rev_3"><a id="GUID-54F9001B-A5F2-4134-A6BA-521DC7E41E57"></a>
<h2 id="SBYDB-GUID-54F9001B-A5F2-4134-A6BA-521DC7E41E57" class="sect2"><span class="enumeration_section">5.3</span> Supported Protection Modes for Far Sync Instances</h2>
<div>
<p>A far sync instance<a id="d12275e1052" class="indexterm-anchor"></a> is supported in either maximum performance or maximum availability mode.</p>
</div>
<a id="SBYDB5444"></a>
<div class="props_rev_3"><a id="GUID-1353E8E6-848C-451A-89EC-42FD178AA256"></a>
<h3 id="SBYDB-GUID-1353E8E6-848C-451A-89EC-42FD178AA256" class="sect3"><span class="enumeration_section">5.3.1</span> Far Sync Instances in Maximum Availability Mode Configurations</h3>
<div>
<p>In maximum availability mode, the far sync instance is relatively close to the primary database to minimize network latency, and the primary services the far sync instance using <code class="codeph">SYNC</code> transport.</p>
<div class="infobox-note" id="GUID-1353E8E6-848C-451A-89EC-42FD178AA256__GUID-4A75A031-80CD-4959-8A39-CDB7DDC70051">
<p class="notep1">Note:</p>
<p>There is no architectural limit to the distance that can separate the primary and far sync instance in maximum availability mode. The practical distance limit varies depending upon a given application&#39;s tolerance to the impact of network latency in a synchronous configuration. Also, it is possible to reduce the performance impact for any given distance by using the new Oracle Data Guard FastSync feature (<code class="codeph">SYNC/NOAFFIRM</code>). See <span class="q">&#34;<a href="protection.htm#GUID-7EF6EFEE-7E31-4F80-9C97-1B25DAA025F8__BABBFEGF">Performance Versus Protection in Maximum Availability Mode</a>&#34;</span>.</p>
</div>
<p>Both <code class="codeph">SYNC/AFFIRM</code> and <code class="codeph">SYNC/NOAFFIRM</code> semantics are supported on the <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> established at the primary for the far sync instance. See <a href="protection.htm#GUID-7EF6EFEE-7E31-4F80-9C97-1B25DAA025F8">Oracle Data Guard Protection Modes</a> for information about the trade-offs of using each one.</p>
<p>When a primary services a far sync instance using <code class="codeph">SYNC</code> transport, all committed redo resides on disk at the far sync instance. This allows the far sync instance to use one of the terminal standby destinations for a no data loss failover if the primary database is lost.</p>
<p>The far sync instance uses <code class="codeph">ASYNC</code> transport to ship the incoming redo to terminal standbys that can be much farther away. This extends no data loss protection to destinations that are too far away for a primary database to feasibly service directly with <code class="codeph">SYNC</code> transport because of the degradation in transaction throughput that would result. This is a case where a far sync instance is beneficial even if there is only one standby destination in the configuration.</p>
</div>
</div>
<a id="SBYDB5445"></a>
<div class="props_rev_3"><a id="GUID-5FB20778-2EB5-4E96-B47E-53D67F9A4536"></a>
<h3 id="SBYDB-GUID-5FB20778-2EB5-4E96-B47E-53D67F9A4536" class="sect3"><span class="enumeration_section">5.3.2</span> Far Sync Instances in Maximum Performance Mode Configurations</h3>
<div>
<p>In maximum performance mode, the primary database services the far sync instance destination using <code class="codeph">ASYNC</code> redo transport regardless of the physical distance between the primary and the far sync instance because high network latencies do not affect transaction throughput when a destination is serviced with <code class="codeph">ASYNC</code> transport.</p>
<p>In maximum performance mode, a far sync instance can benefit Oracle Data Guard configurations that manage more than one remote destination. Although each <code class="codeph">ASYNC</code> destination has a near-zero effect on primary database performance, if there are many remote destinations (for example, multiple Oracle Active Data Guard standbys that form a reader farm), then the effect can become measurable. When a far sync instance is used, there is zero incremental effect for each remote destination added to the configuration. Additionally, redo transport compression can also be offloaded to the far sync instance. When a far sync instance is used, the primary only has to service the far sync instance, which then services the rest of the configuration; the greater the number of destinations, the greater the performance benefit.</p>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2252">
<tr>
<td class="cellalignment2259">
<table class="cellalignment2257">
<tr>
<td class="cellalignment2256"><a href="create_ls.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2256"><a href="protection.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2261">
<table class="cellalignment2255">
<tr>
<td class="cellalignment2256"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2256"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2256"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2256"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2256"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2256"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>