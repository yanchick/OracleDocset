<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-91969"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Data%20Type%20and%20DDL%20Support%20on%20a%20Logical%20Standby%20Database"></a><title>Data Type and DDL Support on a Logical Standby Database</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="DDL statements, supported by SQL Apply, SQL Apply, support for DDL statements, logical standby databases, data types, supported, supported data types, for logical standby databases, supported, supported data types, unsupported, unsupported data types, Transparent Data Encryption, support by SQL Apply, support for primary databases with Transparent Data Encryption, supported PL/SQL supplied packages, PL/SQL supplied packages, support for PL/SQL supplied packages, unsupported PL/SQL supplied packages, unsupported PL/SQL supplied packages, tables, unsupported on, sequences, unsupported on logical standby databases, SQL Apply, skipping SQL statements, for logical standby databases, character sets, configurations with differing"/>
<meta name="dcterms.created" content="2017-07-21T12:09:00Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Guard Concepts and Administration"/>
<meta name="dcterms.identifier" content="E48552-08"/>
<meta name="dcterms.isVersionOf" content="SBYDB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="upgrades.htm" title="Previous" type="text/html"/>
<link rel="Next" href="rac_support.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48552-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-340BA6D6-74D5-4684-AF39-08890D5CD9D4"></a> <span id="PAGE" style="display:none;">30/35</span> <!-- End Header -->
<script>
//<![CDATA[
window.name='data_support'
//]]>
</script> <script>
    function footdisplay(footnum,footnote) {
    var msg = window.open('about:blank', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');
    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'); 
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" ><head><title>');
   
    msg.document.write('Footnote&amp;nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() {
        var height = msg.document.getElementById('footnote').offsetHeight;
        msg.resizeTo(598, height + 100);
    }
    , 100);
    msg.focus();
}
</script><noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript><a id="SBYDB00305"></a>
<h1 id="SBYDB-GUID-340BA6D6-74D5-4684-AF39-08890D5CD9D4" class="sect1"><span class="enumeration_chapter">C</span> Data Type and DDL Support on a Logical Standby Database</h1>
<div>
<p>When setting up a logical standby database, you must ensure the logical standby database can maintain the datatypes and tables in your primary database. The following topics describe the various database objects, storage types, and PL/SQL supplied packages that are supported and unsupported by logical standby databases:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="data_support.htm#GUID-54DD0323-EC06-46E7-A2EC-3078C653D142">Datatype Considerations</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-0E3F7414-E338-4710-97C8-B2E99740015A">Support for Data Types That Lack Native Redo-Based Support</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-CE6B667C-46EE-48C5-94AA-C96B98EB4504">Support for Transparent Data Encryption (TDE)</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-1D2E27FB-2978-4250-97A1-F65EBE984871">Support for Tablespace Encryption</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-6E584765-ED9A-4FF3-BED4-2AE5043877B5">Support For Row-level Security and Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-65FEB2C3-FA7B-4E33-A099-2830772F88A6">Oracle Label Security</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-6910C4C9-3CFF-444E-BC98-E239B63979F5">Oracle E-Business Suite</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-BD53979B-3120-45CD-803F-2E6675A9DAFD">Supported Table Storage Types</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-55806A96-6216-41A2-AB52-20704DAAF5C7">Unsupported Table Storage Types</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-7CE601D9-F67A-40F6-9226-6A6B90DE6CE5">PL/SQL Supplied Packages Considerations</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-291FD74A-165A-4E80-9E1F-66996F1FC6CA">Unsupported Tables</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-9DBC35BD-43C9-469F-BADD-C91752E88225">Skipped SQL Statements on a Logical Standby Database</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-1595A660-6790-436A-BB84-D74C9187D8AE">DDL Statements Supported by a Logical Standby Database</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-8BF91B38-CC5C-40A9-B062-683B4A6F5AB8">Distributed Transactions and XA Support</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-F10F2D96-B441-4465-810D-1A06112552C8">Support for SecureFiles LOBs</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-0309A2A5-E4DE-406C-9DD3-74DD86F419BB">Support for Database File System (DBFS)</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-CC85C064-6115-423C-BF30-790B3D17FC43">Character Set Considerations</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-F54904C7-F666-4CC3-B1CB-493525476D2F">Additional PL/SQL Package Support Available Only in the Context of DBMS_ROLLING Upgrades</a></p>
</li>
</ul>
</div>
<a id="SBYDB4934"></a>
<div class="props_rev_3"><a id="GUID-54DD0323-EC06-46E7-A2EC-3078C653D142"></a>
<h2 id="SBYDB-GUID-54DD0323-EC06-46E7-A2EC-3078C653D142" class="sect2"><span class="enumeration_section">C.1</span> Datatype Considerations</h2>
<div>
<p>The following sections list the supported and unsupported database objects:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="data_support.htm#GUID-8FED6166-FB83-42E4-8D2E-8A1F7DFCEB00">Supported Datatypes in a Logical Standby Database</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-76E70ADB-0709-4403-BA6A-379CEAFE758A">Unsupported Datatypes in a Logical Standby Database</a></p>
</li>
</ul>
</div>
<a id="SBYDB4935"></a>
<div class="props_rev_3"><a id="GUID-8FED6166-FB83-42E4-8D2E-8A1F7DFCEB00"></a>
<h3 id="SBYDB-GUID-8FED6166-FB83-42E4-8D2E-8A1F7DFCEB00" class="sect3"><span class="enumeration_section">C.1.1</span> Supported Datatypes in a Logical Standby Database</h3>
<div>
<div class="section">
<div class="infobox-note" id="GUID-8FED6166-FB83-42E4-8D2E-8A1F7DFCEB00__GUID-AB4C7E18-4B81-4745-B695-F1FAE2BD759A">
<p class="notep1">Note:</p>
<p>As of Oracle Database 12<span class="italic">c</span> Release 1 (12.1), the maximum size of the <code class="codeph">VARCHAR2</code>, <code class="codeph">NVARCHAR2</code>, and <code class="codeph">RAW</code> datatypes has been increased to 32 KB when the <code class="codeph">COMPATIBLE</code> initialization parameter is set to 12.0 or later and the <code class="codeph">MAX_STRING_SIZE</code> initialization parameter is set to <code class="codeph">EXTENDED</code>. Logical standby databases support this increased size in most cases. See <span class="q">&#34;<a href="create_ls.htm#GUID-C238335E-8383-43F1-B5B1-709A2A619C30">Ensure Table Rows in the Primary Database Can Be Uniquely Identified</a>&#34;</span> for known restrictions.</p>
</div>
<p>Logical standby databases support the following datatypes:</p>
<ul style="list-style-type: disc;">
<li>
<p>Abstract Data Types (ADTs) and ADT tables</p>
<ul style="list-style-type: disc;">
<li>
<p>ADTs cannot contain any data types that are not supported as a top-level column type (for example, nested tables, <code class="codeph">REF</code>, <code class="codeph">BFILE</code>, unsupported opaque types), except for VARRAYs of simple scalar types.</p>
</li>
<li>
<p>For a table with ADT columns to be supported there must be a primary key (or at least a unique constraint or unique index) that consists solely of scalar top-level columns (scalar ADT attributes cannot be part of such a candidate key).</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">BINARY_DOUBLE</code></p>
</li>
<li>
<p><code class="codeph">BINARY_FLOAT</code></p>
</li>
<li>
<p><code class="codeph">BLOB</code>, <code class="codeph">CLOB</code>, and <code class="codeph">NCLOB</code> stored as BasicFile and SecureFiles. SecureFiles can be compressed, encrypted, or deduplicated. SecureFiles support requires that the primary database be running at a compatibility of 11.2 or higher. See <a href="data_support.htm#GUID-F10F2D96-B441-4465-810D-1A06112552C8">Support for SecureFiles LOBs</a></p>
</li>
<li>
<p><code class="codeph">CHAR</code></p>
</li>
<li>
<p><code class="codeph">DATE</code></p>
</li>
<li>
<p><code class="codeph">INTERVAL YEAR TO MONTH</code></p>
</li>
<li>
<p><code class="codeph">INTERVAL DAY TO SECOND</code></p>
</li>
<li>
<p><code class="codeph">LONG</code></p>
</li>
<li>
<p><code class="codeph">LONG RAW</code></p>
</li>
<li>
<p><code class="codeph">NCHAR</code></p>
</li>
<li>
<p><code class="codeph">NUMBER</code></p>
</li>
<li>
<p><code class="codeph">NVARCHAR2</code></p>
</li>
<li>
<p>Objects stored as <code class="codeph">VARRAY</code>s (except for Collections)</p>
</li>
<li>
<p>Oracle Text</p>
</li>
<li>
<p><code class="codeph">RAW</code></p>
</li>
<li>
<p>Multimedia (See exceptions listed in <a href="data_support.htm#GUID-76E70ADB-0709-4403-BA6A-379CEAFE758A">Unsupported Datatypes in a Logical Standby Database</a>.):</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ORDAudio</code></p>
</li>
<li>
<p><code class="codeph">ORDDataSource</code> (internal)</p>
</li>
<li>
<p><code class="codeph">ORDDicom</code></p>
</li>
<li>
<p><code class="codeph">ORDDoc</code></p>
</li>
<li>
<p><code class="codeph">ORDImage</code></p>
</li>
<li>
<p><code class="codeph">ORDSource</code> (internal)</p>
</li>
<li>
<p><code class="codeph">ORDVideo</code></p>
</li>
</ul>
</li>
<li>
<p>Spatial (See exceptions listed in <a href="data_support.htm#GUID-76E70ADB-0709-4403-BA6A-379CEAFE758A">Unsupported Datatypes in a Logical Standby Database</a>.)</p>
</li>
<li>
<p><code class="codeph">TIMESTAMP</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP WITH TIMEZONE</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP WITH LOCAL TIMEZONE</code></p>
</li>
<li>
<p><code class="codeph">VARCHAR</code> and <code class="codeph">VARCHAR2</code></p>
</li>
<li>
<p><code class="codeph">XMLType</code> data for all storage models, assuming the following primary database compatibility requirements:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">XMLType</code> stored in <code class="codeph">CLOB</code> format requires that the primary database be run at a compatibility setting of 11.0 or higher (<code class="codeph">XMLType</code> stored as <code class="codeph">CLOB</code> is deprecated as of Oracle Database 12<span class="italic">c</span> Release 1 (12.1).)</p>
</li>
<li>
<p><code class="codeph">XMLType</code> stored in object-relational format or as binary XML requires that the primary database be running Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.3) or higher with a redo compatibility setting of 11.2.0.3 or higher</p>
</li>
</ul>
</li>
</ul>
<div class="infobox-note" id="GUID-8FED6166-FB83-42E4-8D2E-8A1F7DFCEB00__GUID-35FE64DE-E433-4474-B573-EF64ED95F6AC">
<p class="notep1">Note:</p>
<p>SQL Apply does not support statements that have function calls that perform DML on ADT, <code class="codeph">LOB</code>, or <code class="codeph">XMLType</code> columns.</p>
</div>
</div>
<!-- class="section" --></div>
<a id="SBYDB5157"></a>
<div class="props_rev_3"><a id="GUID-58CF57D0-3681-4108-B498-07CA4F99C57E"></a>
<h4 id="SBYDB-GUID-58CF57D0-3681-4108-B498-07CA4F99C57E" class="sect4"><span class="enumeration_section">C.1.1.1</span> Compatibility Requirements</h4>
<div>
<div class="section">
<p>SQL Apply support for the following has compatibility requirements on the primary database:</p>
<ul style="list-style-type: disc;">
<li>
<p>Multibyte <code class="codeph">CLOB</code> support requires primary database to run at a compatibility of 10.1 or higher.</p>
</li>
<li>
<p>IOT support without <code class="codeph">LOB</code>s and Overflows requires primary database to run at a compatibility of 10.1 or higher.</p>
</li>
<li>
<p>IOT support with <code class="codeph">LOB</code> and Overflow requires primary database to run at a compatibility of 10.2 or higher.</p>
</li>
<li>
<p>TDE support requires primary database to run at a compatibility of 11.1 or higher.</p>
</li>
<li>
<p>Basic compression and advanced row compression require the primary database to run at a compatibility of 11.1 or higher.</p>
</li>
<li>
<p>Hybrid Columnar Compression support is dependent on the underlying storage system.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-58CF57D0-3681-4108-B498-07CA4F99C57E__GUID-3186F212-317C-4DE7-B8C2-8CF1A66F9BFD">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink CNCPT89198" target="_blank" href="../CNCPT/tablecls.htm#CNCPT89198"><span class="italic">Oracle Database Concepts</span></a> for more information about Hybrid Columnar Compression</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB5433"></a>
<div class="props_rev_3"><a id="GUID-55998F99-9598-4AD1-84FC-17889E82C717"></a>
<h4 id="SBYDB-GUID-55998F99-9598-4AD1-84FC-17889E82C717" class="sect4"><span class="enumeration_section">C.1.1.2</span> Opaque Type Restrictions</h4>
<div>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SYS.ANYDATA</code> is supported as long as the instance does not store user-defined opaque data types or <code class="codeph">BFILE</code>s.</p>
</li>
<li>
<p><code class="codeph">SYS.ANYDATASET</code>, <code class="codeph">SYS.ANYTYPE</code>, and user-defined opaque types are not supported.</p>
</li>
<li>
<p><code class="codeph">REF</code>s are not supported.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB4936"></a>
<div class="props_rev_3"><a id="GUID-76E70ADB-0709-4403-BA6A-379CEAFE758A"></a>
<h3 id="SBYDB-GUID-76E70ADB-0709-4403-BA6A-379CEAFE758A" class="sect3"><span class="enumeration_section">C.1.2</span> Unsupported Datatypes in a Logical Standby Database</h3>
<div>
<div class="section">
<p>The following data types are not supported by logical standby databases. If a table contains columns having any of these unsupported data types, then the entire table is ignored by SQL Apply. (See <a href="data_support.htm#GUID-0E3F7414-E338-4710-97C8-B2E99740015A">Support for Data Types That Lack Native Redo-Based Support</a> for information about support for data types that lack native redo-based support.)</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">BFILE</code></p>
</li>
<li>
<p><code class="codeph">ROWID</code>, <code class="codeph">UROWID</code></p>
</li>
<li>
<p>Collections (including <code class="codeph">VARRAY</code>s and nested tables)</p>
</li>
<li>
<p>Objects with nested tables and <code class="codeph">REF</code>s</p>
</li>
<li>
<p>The following Spatial types are not supported:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">MDSYS.SDO_GEORASTER</code></p>
</li>
<li>
<p><code class="codeph">MDSYS.SDO_TOPO_GEOMETRY</code></p>
</li>
</ul>
</li>
<li>
<p>Identity columns</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB5434"></a>
<div class="props_rev_3"><a id="GUID-0E3F7414-E338-4710-97C8-B2E99740015A"></a>
<h2 id="SBYDB-GUID-0E3F7414-E338-4710-97C8-B2E99740015A" class="sect2"><span class="enumeration_section">C.2</span> Support for Data Types That Lack Native Redo-Based Support</h2>
<div>
<p>The Extended Datatype Support (EDS) feature provides a mechanism for logical standbys to support certain data types that lack native redo-based support. For example, tables with <code class="codeph">SDO_GEOMETRY</code> columns can be replicated using EDS. (Source tables must have a primary key.)</p>
<p>You can query the <code class="codeph">DBA_LOGSTDBY_EDS_SUPPORTED</code> view to find out which tables are candidates for EDS.</p>
<div class="infoboxnotealso" id="GUID-0E3F7414-E338-4710-97C8-B2E99740015A__GUID-3C9C9E0C-5183-4E22-A1AE-C760492887FD">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="manage_ls.htm#GUID-6438EB33-8A6D-4D5A-B3B5-740F8B1144D5">Using Extended Datatype Support During Replication</a> for more information about EDS</p>
</li>
</ul>
</div>
</div>
</div>
<a id="SBYDB4937"></a>
<div class="props_rev_3"><a id="GUID-CE6B667C-46EE-48C5-94AA-C96B98EB4504"></a>
<h2 id="SBYDB-GUID-CE6B667C-46EE-48C5-94AA-C96B98EB4504" class="sect2"><span class="enumeration_section">C.3</span> Support for Transparent Data Encryption (TDE)</h2>
<div>
<p>Oracle Data Guard SQL Apply can be used to provide data protection for a primary database with Transparent Data Encryption (TDE) enabled. Consider the following when using a logical standby database to provide data protection for applications with advanced security requirements:</p>
<ul style="list-style-type: disc;">
<li>
<p>Tables with Transparent Data Encryption using server held keys are replicated on a logical standby database when both the primary and the standby databases are running at a compatibility level of 11.1 or higher.</p>
</li>
<li>
<p>Transparent Data Encryption in the context of Hardware Security Modules is supported for logical standby databases in Oracle Database 11<span class="italic">g</span> Release 2 (11.2) and later.</p>
</li>
</ul>
<p>You must consider the following restrictions when, in the context of a logical standby database, you want to replicate tables that have encrypted columns:</p>
<ol>
<li>
<p>To translate encrypted redo records, SQL Apply must have access to an open wallet containing the Transparent Data Encryption keys. Therefore, you must copy the wallet containing the keys from the primary database to the standby database after it has been created.</p>
</li>
<li>
<p>The wallet must be copied from the primary database to the logical standby database every time the master key is changed.</p>
</li>
<li>
<p>Oracle recommends that you not rekey the master key at the logical standby database while the logical standby database is replicating encrypted tables from the primary database. Doing so may cause SQL Apply to halt when it encounters an encrypted redo record.</p>
</li>
<li>
<p>You can rekey the encryption key of a replicated table at the logical standby database. This requires that you lower the guard setting to <code class="codeph">NONE</code> before you issue the rekey command.</p>
</li>
<li>
<p>Replicated encrypted tables can use a different encryption scheme for columns than the one used in the primary database. For example, if the <code class="codeph">SALARY</code> column of the <code class="codeph">HR.EMPLOYEES</code> table is encrypted at the primary database using the AES192 encryption algorithm, it can be encrypted at the logical standby using the AES256 encryption algorithm. Or, the <code class="codeph">SALARY</code> column can remain unencrypted at the logical standby database.</p>
</li>
</ol>
</div>
</div>
<a id="SBYDB4938"></a>
<div class="props_rev_3"><a id="GUID-1D2E27FB-2978-4250-97A1-F65EBE984871"></a>
<h2 id="SBYDB-GUID-1D2E27FB-2978-4250-97A1-F65EBE984871" class="sect2"><span class="enumeration_section">C.4</span> Support for Tablespace Encryption</h2>
<div>
<p>Oracle Data Guard SQL Apply can be used to provide data protection for a primary database that has tablespace encryption enabled. In such a case, restrictions 1, 2, and 3 listed in <a href="data_support.htm#GUID-CE6B667C-46EE-48C5-94AA-C96B98EB4504">Support for Transparent Data Encryption (TDE)</a> will apply.</p>
<div class="infobox-note" id="GUID-1D2E27FB-2978-4250-97A1-F65EBE984871__GUID-D8506238-BEDD-4E2E-A91A-E40140A21F2B">
<p class="notep1">Note:</p>
<p>In some cases, when SQL Apply mines and applies redo records for changes made to tables in encrypted tablespaces, records of user data in unencrypted form may be kept for a long period of time. If this is not acceptable, you should issue the following command to move all metadata tables pertaining to the mining component of SQL Apply to an encrypted tablespace:</p>
<pre dir="ltr">SQL&gt; DBMS_LOGMNR_D.SET_TABLESPACE(NEW_TABLESPACE =&gt; &#39;ENCRYPTED_LOGMNR_TS&#39;); 
</pre></div>
</div>
</div>
<a id="SBYDB4939"></a>
<div class="props_rev_3"><a id="GUID-6E584765-ED9A-4FF3-BED4-2AE5043877B5"></a>
<h2 id="SBYDB-GUID-6E584765-ED9A-4FF3-BED4-2AE5043877B5" class="sect2"><span class="enumeration_section">C.5</span> Support For Row-level Security and Fine-Grained Auditing</h2>
<div>
<p>As of Oracle Database 11<span class="italic">g</span>, Logical Standby can automatically replicate the security environment provided through the <code class="codeph">DBMS_RLS</code> and <code class="codeph">DBMS_FGA</code> PL/SQL packages. This support simplifies management of security considerations when a server fails over to the standby since the security environment is transparently maintained. It also ensures that access control policies applied to the primary data can be automatically forwarded to the standby, and the standby data transparently given the same level of protection. If a standby server is newly created with 11g, this replication is enabled by default; otherwise it has to be enabled by the DBA at an appropriate time.</p>
<p>Support for the replication of these PL/SQL packages requires that both the primary and the standby be running with a compatibility setting of 11.1 or higher.</p>
<p>It also requires that the table referenced be a Logical Standby maintained object. For example, a table with a rowid column does not have its data maintained by Logical Standby, so <code class="codeph">DBMS_RLS</code> and <code class="codeph">DBMS_FGA</code> calls referencing that table are not maintained.</p>
</div>
<a id="SBYDB01350"></a>
<div class="props_rev_3"><a id="GUID-5768DF75-A955-4FAB-B928-C35F337330DC"></a>
<h3 id="SBYDB-GUID-5768DF75-A955-4FAB-B928-C35F337330DC" class="sect3"><span class="enumeration_section">C.5.1</span> Row-level Security</h3>
<div>
<p>Row-Level Security, also known as Virtual Private Database (VPD), is a feature that enforces security at a fine level of granularity, when accessing tables, views, or synonyms. When a user directly or indirectly accesses a table, view, or synonym protected with a VPD policy, the server dynamically modifies the SQL statement of the user. The modification creates a <code class="codeph">WHERE</code> condition (known as a predicate) returned by a function implementing the security policy. The statement is modified dynamically, transparently to the user, using any condition that can be expressed in, or returned by, a function. VPD policies can be applied to <code class="codeph">SELECT</code>, <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, <code class="codeph">INDEX</code>, and <code class="codeph">DELETE</code> statements. VPD is implemented by using the <code class="codeph">DBMS_RLS</code> package to apply security policies.</p>
<p>When a <code class="codeph">DBMS_RLS</code> procedure is executed on the primary, additional information is captured in the redo that allows the procedure call to be logically reconstructed and executed on the standby. Logical Standby supports replication of ancillary objects for VPD such as Contexts, Database Logon Triggers, and their supporting packages. You must ensure that these objects are placed in maintained schemas and that no DDL skips have been configured that would stop their replication.</p>
</div>
</div>
<a id="SBYDB4940"></a>
<div class="props_rev_3"><a id="GUID-3493175A-5B62-412F-BF6E-C41D0BF6D498"></a>
<h3 id="SBYDB-GUID-3493175A-5B62-412F-BF6E-C41D0BF6D498" class="sect3"><span class="enumeration_section">C.5.2</span> Fine-Grained Auditing</h3>
<div>
<p>Fine-grained auditing provides a way to audit select statements. The <code class="codeph">DBMS_FGA</code> package enables all select statements that access a table to be captured, together with what data was accessed. An FGA policy may be applied to a particular column or even to only those select statements that return rows for which a specified predicate returns <code class="codeph">TRUE</code>.</p>
<p>When a <code class="codeph">DBMS_FGA</code> procedure is executed on the primary, additional information is captured to the redo that allows the procedure call to be logically reconstructed and executed on the standby.</p>
</div>
</div>
<a id="SBYDB4941"></a>
<div class="props_rev_3"><a id="GUID-5905EAC6-7FED-440B-AB43-82DA3A90FF1C"></a>
<h3 id="SBYDB-GUID-5905EAC6-7FED-440B-AB43-82DA3A90FF1C" class="sect3"><span class="enumeration_section">C.5.3</span> Skipping and Enabling PL/SQL Replication</h3>
<div>
<p>PL/SQL can be configured with skip and skip_error rules exactly as DDL statements except that wildcarding on the package and procedure are not supported. For example to skip all aspects of VPD, do the following:</p>
<pre dir="ltr">DBMS_LOGSTDBY.Skip (
stmt =&gt; &#39;PL/SQL&#39;,
schema_name =&gt; &#39;SYS&#39;,
object_name =&gt;&#39;DBMS_RLS&#39;,
use_like =&gt; FALSE);
</pre>
<p>The schema specified is the schema in which the package is defined. To skip an individual procedure in a package, the syntax is as follows:</p>
<pre dir="ltr">DBMS_LOGSTDBY.Skip (
stmt =&gt; &#39;PL/SQL&#39;,
schema_name =&gt; &#39;SYS&#39;,
object_name =&gt;&#39;DBMS_RLS.ADD_POLICY&#39;,
use_like =&gt; FALSE);
</pre>
<p>To skip VPD on certain schemas or tables, a skip procedure must be used. The skip procedure is passed the fully qualified PL/SQL statement that is to be executed, for example:</p>
<pre dir="ltr">DBMS_RLS.DROP_POLICY(
object_schema =&gt; &#39;SCOTT, 
object_name  =&gt; &#39;EMP&#39;,
policy_name =&gt; &#39;MYPOLICY&#39;);
</pre>
<p>The procedure could then parse the statement to decide whether to skip it, to apply it, or to stop apply and let the DBA take a compensating action.</p>
<p>Unlike DDL, skip procedures on PL/SQL do not support returning a replacement statement.</p>
</div>
</div>
</div>
<a id="SBYDB4942"></a>
<div class="props_rev_3"><a id="GUID-65FEB2C3-FA7B-4E33-A099-2830772F88A6"></a>
<h2 id="SBYDB-GUID-65FEB2C3-FA7B-4E33-A099-2830772F88A6" class="sect2"><span class="enumeration_section">C.6</span> Oracle Label Security</h2>
<div>
<p>Logical standby databases do not support Oracle Label Security. If Oracle Label Security is installed on the primary database, SQL Apply fails on the logical standby database with an internal error during startup.</p>
</div>
</div>
<a id="SBYDB5119"></a>
<div class="props_rev_3"><a id="GUID-6910C4C9-3CFF-444E-BC98-E239B63979F5"></a>
<h2 id="SBYDB-GUID-6910C4C9-3CFF-444E-BC98-E239B63979F5" class="sect2"><span class="enumeration_section">C.7</span> Oracle E-Business Suite</h2>
<div>
<p>Logical standby databases do not fully support an Oracle E-Business Suite implementation because there are tables that contain unsupported data types. However, using <code class="codeph">SKIP</code> rules, it is possible for you to replicate a subset of the E-Business Suite schemas and tables to offload applications to the logical standby.</p>
<div class="infoboxnotealso" id="GUID-6910C4C9-3CFF-444E-BC98-E239B63979F5__GUID-F5233239-C511-4230-9F32-48053E31AB8F">
<p class="notep1">See Also:</p>
<p>The My Oracle Support note 851603.1 at <a href="http://support.oracle.com" target="_blank"><code class="codeph">http://support.oracle.com</code></a> for additional information about using Logical standby with Oracle E-Business Suite</p>
</div>
</div>
</div>
<a id="SBYDB4943"></a>
<div class="props_rev_3"><a id="GUID-BD53979B-3120-45CD-803F-2E6675A9DAFD"></a>
<h2 id="SBYDB-GUID-BD53979B-3120-45CD-803F-2E6675A9DAFD" class="sect2"><span class="enumeration_section">C.8</span> Supported Table Storage Types</h2>
<div>
<div class="section">
<p>Logical standby databases support the following table storage types:</p>
<ul style="list-style-type: disc;">
<li>
<p>Cluster tables (including index clusters and heap clusters).</p>
</li>
<li>
<p>Index-organized tables (partitioned and nonpartitioned, including overflow segments).</p>
</li>
<li>
<p>Heap-organized tables (partitioned and nonpartitioned).</p>
</li>
<li>
<p>Advanced row compression and basic table compression. Both of these options require that the compatibility setting of the primary database be set to 11.1.0 or higher.</p>
</li>
<li>
<p>Tables containing LOB columns stored as SecureFiles, when compatibility is set to 11.2 or higher.</p>
</li>
<li>
<p>Tables using Hybrid Columnar Compression, when compatibility is set to 11.2.0.2 or higher.</p>
<div class="infoboxnotealso" id="GUID-BD53979B-3120-45CD-803F-2E6675A9DAFD__GUID-850B93DB-6BEB-41E8-A5F3-EEDD990182F3">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink CNCPT89198" target="_blank" href="../CNCPT/tablecls.htm#CNCPT89198"><span class="italic">Oracle Database Concepts</span></a> for more information about Hybrid Columnar Compression</p>
</li>
</ul>
</div>
</li>
<li>
<p>Tables with virtual columns (provided the table has no other columns or properties not supported by logical standby)</p>
</li>
<li>
<p>If there is no primary key and no non-null unique constraint or index, then all columns with a declared maximum length of 4000 bytes are logged as part of the <code class="codeph">UPDATE</code> statement to help identify the modified row. For the purpose of row identification, logical standby requires that a table have at least one visible (not virtual) column of one of the following datatypes:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CHAR</code></p>
</li>
<li>
<p><code class="codeph">VARCHAR</code></p>
</li>
<li>
<p><code class="codeph">VARCHAR2</code> (with a declared column length &lt;= 4000 bytes)</p>
</li>
<li>
<p><code class="codeph">NVARCHAR</code></p>
</li>
<li>
<p><code class="codeph">NVARCHAR2</code> (with a declared column length &lt;= 4000 bytes)</p>
</li>
<li>
<p><code class="codeph">NUMBER</code></p>
</li>
<li>
<p><code class="codeph">DATE</code></p>
</li>
<li>
<p><code class="codeph">RAW</code></p>
</li>
<li>
<p><code class="codeph">BINARY FLOAT</code></p>
</li>
<li>
<p><code class="codeph">BINARY DOUBLE</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP WITH TIME ZONE</code></p>
</li>
<li>
<p><code class="codeph">TIMESTAMP WITH LOCAL TIME ZONE</code></p>
</li>
<li>
<p><code class="codeph">INTERVAL YEAR TO MONTH</code></p>
</li>
<li>
<p><code class="codeph">INTERVAL DAY TO SECOND</code></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-BD53979B-3120-45CD-803F-2E6675A9DAFD__GUID-17621464-2B6C-439E-A77B-7AAB5851328C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="create_ls.htm#GUID-C238335E-8383-43F1-B5B1-709A2A619C30">Ensure Table Rows in the Primary Database Can Be Uniquely Identified</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4944"></a>
<div class="props_rev_3"><a id="GUID-55806A96-6216-41A2-AB52-20704DAAF5C7"></a>
<h2 id="SBYDB-GUID-55806A96-6216-41A2-AB52-20704DAAF5C7" class="sect2"><span class="enumeration_section">C.9</span> Unsupported Table Storage Types</h2>
<div>
<div class="section">
<p>Logical standby does not support tables that contain <span class="italic">only</span> the following datatypes:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">LOB</code> (<code class="codeph">CLOB</code>, <code class="codeph">NCLOB</code>, <code class="codeph">BLOB</code>)</p>
</li>
<li>
<p><code class="codeph">LONG</code></p>
</li>
<li>
<p><code class="codeph">LONG</code> <code class="codeph">RAW</code></p>
</li>
<li>
<p><code class="codeph">OBJECT</code> <code class="codeph">TYPE</code></p>
</li>
<li>
<p><code class="codeph">COLLECTIONS</code></p>
</li>
<li>
<p><code class="codeph">XML</code></p>
</li>
<li>
<p><code class="codeph">VARCHAR2</code> (with a declared column length &gt; 4000 bytes)</p>
</li>
<li>
<p><code class="codeph">NVARCHAR2</code> (with a declared column length &gt; 4000 bytes)</p>
</li>
<li>
<p><code class="codeph">RAW</code> (with a declared column length &gt; 4000 bytes)</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-55806A96-6216-41A2-AB52-20704DAAF5C7__GUID-FCF95D07-FD29-44D7-A612-F079C90F1DF6">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="data_support.htm#GUID-F10F2D96-B441-4465-810D-1A06112552C8">Support for SecureFiles LOBs</a></p>
</li>
<li>
<p><a href="create_ls.htm#GUID-C238335E-8383-43F1-B5B1-709A2A619C30">Ensure Table Rows in the Primary Database Can Be Uniquely Identified</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB00315"></a>
<div class="props_rev_3"><a id="GUID-7CE601D9-F67A-40F6-9226-6A6B90DE6CE5"></a>
<h2 id="SBYDB-GUID-7CE601D9-F67A-40F6-9226-6A6B90DE6CE5" class="sect2"><span class="enumeration_section">C.10</span> PL/SQL Supplied Packages Considerations</h2>
<div>
<p>This section discusses the following considerations regarding PL/SQL supplied packages:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="data_support.htm#GUID-E89A196F-2C5D-45F9-94BA-7793FBF44440">Supported PL/SQL Supplied Packages</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-703C8569-4298-48ED-98F5-6146A6D46F3F">Unsupported PL/SQL Supplied Packages</a></p>
</li>
<li>
<p><a href="data_support.htm#GUID-F413799B-DB5F-4C57-A3E2-E1C3F20E3FF4">Handling XML and XDB PL/SQL Packages in Logical Standby</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-7CE601D9-F67A-40F6-9226-6A6B90DE6CE5__GUID-EC8878EA-01E6-4F52-85E8-24DE5DB934B5">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS001" target="_blank" href="../ARPLS/intro.htm#ARPLS001"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about Oracle PL/SQL supplied packages</p>
</div>
</div>
<a id="SBYDB4945"></a>
<div class="props_rev_3"><a id="GUID-E89A196F-2C5D-45F9-94BA-7793FBF44440"></a>
<h3 id="SBYDB-GUID-E89A196F-2C5D-45F9-94BA-7793FBF44440" class="sect3"><span class="enumeration_section">C.10.1</span> Supported PL/SQL Supplied Packages</h3>
<div>
<div class="section">
<p>Oracle PL/SQL supplied packages that do not modify system metadata or user data leave no footprint in the archived redo log files, and hence are safe to use on the primary database. Examples of such packages are <code class="codeph">DBMS_OUTPUT</code>, <code class="codeph">DBMS_RANDOM</code>, <code class="codeph">DBMS_PIPE</code>, <code class="codeph">DBMS_DESCRIBE</code>, <code class="codeph">DBMS_TRACE</code>, <code class="codeph">DBMS_METADATA</code>, <code class="codeph">DBMS_CRYPTO</code>.</p>
<p>Oracle PL/SQL supplied packages that do not modify system metadata but may modify user data are supported by SQL Apply, as long as the modified data belongs to the supported data types listed in <a href="data_support.htm#GUID-8FED6166-FB83-42E4-8D2E-8A1F7DFCEB00">Supported Datatypes in a Logical Standby Database</a>. Examples of such packages are <code class="codeph">DBMS_LOB</code>, <code class="codeph">DBMS_SQL</code>, and <code class="codeph">DBMS_TRANSACTION</code>.</p>
<p>Oracle Data Guard logical standby supports replication of actions performed through the following packages: <code class="codeph">DBMS_DDL</code>, <code class="codeph">DBMS_FGA</code>, <code class="codeph">SDO_META</code>, <code class="codeph">DBMS_REDACT</code>, <code class="codeph">DBMS_REDEFINITION</code>, <code class="codeph">DBMS_RLS</code>, <code class="codeph">DBMS_SQL_TRANSLATOR</code>, <code class="codeph">DBMS_XDS</code>, <code class="codeph">DBMS_XMLINDEX</code> and <code class="codeph">DBMS_XMLSCHEMA</code>.</p>
<p>To identify which packages are supported in logical standby, you can query the <code class="codeph">DBA_LOGSTDBY_PLSQL_SUPPORT</code> view. For example, you can run the following query to find out which packages are supported in a generic logical standby:</p>
<pre dir="ltr">SQL&gt; SELECT OWNER, PKG_NAME FROM DBA_LOGSTDBY_PLSQL_SUPPORT -
&gt; where support_level = &#39;ALWAYS&#39;;
</pre>
<p>To identify which packages are supported in the context of rolling upgrades done using the <code class="codeph">DBMS_ROLLING</code> package, you can query the <code class="codeph">DBA_LOGSTDBY_PLSQL_SUPPORT</code> view, as follows:</p>
<pre dir="ltr">SQL&gt; SELECT OWNER, PKG_NAME FROM DBA_LOGSTDBY_PLSQL_SUPPORT -
&gt; where support_level = &#39;DBMS_ROLLING&#39;;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4946"></a>
<div class="props_rev_3"><a id="GUID-703C8569-4298-48ED-98F5-6146A6D46F3F"></a>
<h3 id="SBYDB-GUID-703C8569-4298-48ED-98F5-6146A6D46F3F" class="sect3"><span class="enumeration_section">C.10.2</span> Unsupported PL/SQL Supplied Packages</h3>
<div>
<p>Oracle PL/SQL supplied packages that modify system metadata typically are not supported by SQL Apply, and therefore their effects are not visible on the logical standby database. Examples of such packages are <code class="codeph">DBMS_JAVA</code>, <code class="codeph">DBMS_REGISTRY</code>, <code class="codeph">DBMS_ALERT</code>, <code class="codeph">DBMS_SPACE_ADMIN</code>, <code class="codeph">DBMS_REFRESH</code>, <code class="codeph">and DBMS_AQ</code>.</p>
<p>Additionally, the <code class="codeph">DBMS_RESOURCE_MANAGER</code> package is not supported for physical standby rolling upgrades.</p>
</div>
<a id="SBYDB5250"></a>
<div class="props_rev_3"><a id="GUID-51E18D3F-C741-4627-B14E-C36DFE37F00A"></a>
<h4 id="SBYDB-GUID-51E18D3F-C741-4627-B14E-C36DFE37F00A" class="sect4"><span class="enumeration_section">C.10.2.1</span> Support for DBMS_JOB</h4>
<div>
<p>Specific support for <code class="codeph">DBMS_JOB</code> has been provided. Jobs created on the primary database are replicated on the standby database, but are not run as long as the standby maintains its standby role. In the event of a switchover or failover, jobs scheduled on the original primary database automatically begin running on the new primary database.</p>
<p>You can also create jobs at the logical standby. These jobs only run as long as the logical standby maintains it standby role.</p>
</div>
</div>
<a id="SBYDB5251"></a>
<div class="props_rev_3"><a id="GUID-182AE34F-BEAD-4B38-A9D0-323BE5E37B7E"></a>
<h4 id="SBYDB-GUID-182AE34F-BEAD-4B38-A9D0-323BE5E37B7E" class="sect4"><span class="enumeration_section">C.10.2.2</span> Support for DBMS_SCHEDULER</h4>
<div>
<p>Specific support for <code class="codeph">DBMS_SCHEDULER</code> has been provided to allow jobs to be run on a standby database. A new attribute of a scheduler job has been created in Oracle Database 11<span class="italic">g</span> called <code class="codeph">database_role</code> whose contents match the <code class="codeph">database_role</code> attribute of <code class="codeph">V$DATABASE</code>. When a scheduler job is created, it defaults to the local role, so a job created on the standby defaults to a <code class="codeph">database_role</code> of <code class="codeph">LOGICAL STANDBY</code>. The job scheduler executes only jobs specific to the current role. On switchover or failover, the scheduler automatically switches to running jobs specific to the new role.</p>
<p>Scheduler jobs are not replicated to the standby, except in the context of a rolling upgrade done using the <code class="codeph">DBMS_ROLLING</code> PL/SQL package. However, existing jobs can be activated under the new role by using the <code class="codeph">DBMS_SCHEDULER.Set_Attribute</code> procedure. Alternatively, jobs that should run in both roles can be cloned and the copy made specific to the other role. The <code class="codeph">DBA_SCHEDULER_JOB_ROLES</code> view shows which jobs are specific to which role.</p>
<p>Scheduler jobs obey the database guard when they run on a logical standby database. Thus, to run jobs that need to modify unmaintained tables, set the database guard to <code class="codeph">STANDBY</code>. (It is not possible to use the <code class="codeph">ALTER SESSION DISABLE GUARD</code> statement inside a PL/SQL block and have it take effect.)</p>
</div>
</div>
</div>
<a id="SBYDB4947"></a>
<div class="props_rev_3"><a id="GUID-F413799B-DB5F-4C57-A3E2-E1C3F20E3FF4"></a>
<h3 id="SBYDB-GUID-F413799B-DB5F-4C57-A3E2-E1C3F20E3FF4" class="sect3"><span class="enumeration_section">C.10.3</span> Handling XML and XDB PL/SQL Packages in Logical Standby</h3>
<div>
<p>Logical Standby supports <code class="codeph">XMLType</code> data for all storage models, with the following compatibility requirements:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">XMLType</code> stored in <code class="codeph">CLOB</code> format requires that the primary database be run at a compatibility setting of 11.0 or higher (<code class="codeph">XMLType</code> stored as <code class="codeph">CLOB</code> is deprecated as of Oracle Database 12<span class="italic">c</span> Release 1 (12.1).)</p>
</li>
<li>
<p><code class="codeph">XMLType</code> stored in object-relational format or as binary XML requires that the primary database be running Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.3) or higher with a redo compatibility setting of 11.2.0.3 or higher</p>
</li>
</ul>
<p>There are several PL/SQL packages used in conjunction with XML that are not fully supported.</p>
<p>The PL/SQL packages and procedures that are supported by Logical Standby only modify in-memory structures; they do not modify data stored in the database. These packages do not generate redo and therefore are not replicated to a Logical Standby.</p>
<p>Certain PL/SQL packages and procedures related to XML and XDB that are not supported by Logical Standby, but that require corresponding invocations at the logical standby database for replication activities to continue, are instrumented such that invocations of these procedures at the primary database generate additional redo records indicating procedure invocation. When SQL Apply encounters such redo records, it stops and writes an error message in the <code class="codeph">DBA_LOGSTDBY_EVENTS</code> table, indicating the procedure name. This allows the DBA to invoke the corresponding procedure at the logical standby database at the appropriate time so that subsequent redo records generated at the primary database can be applied successfully at the logical standby database. See <a href="data_support.htm#GUID-EA3D935A-F460-4985-B498-274F17F06EDB">The DBMS_XMLSCHEMA Schema</a> through <a href="data_support.htm#GUID-71AE3EBB-C4FE-4EB9-94E7-3F04FE1A0DB7">Compensating for Ordering Sensitive Unsupported PL/SQL</a> for more information about dealing with these unsupported procedures.</p>
<p>The following packages contain unsupported procedures:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_XMLSCHEMA</code> (Supported if compatibility is set to 12.0.0 or higher.)</p>
</li>
<li>
<p><code class="codeph">DBMS_XMLINDEX</code></p>
</li>
</ul>
<p>In addition to these packages, Logical Standby does not support any modifications to the XDB schema. The objects within the XDB schema are considered to be system metadata and direct modifications to them are not replicated.</p>
<p>Tables managed by the Oracle XML DB Repository, also known as hierarchy-enabled tables, are not supported by Logical Standby. These tables are used to store XML data and can be accessed using the FTP and HTTP protocols, as well as the normal SQL access. For more information on these tables, refer to the <a class="olink ADXDB5517" target="_blank" href="../ADXDB/xdb21sec.htm#ADXDB5517"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a>.</p>
</div>
<a id="SBYDB4948"></a>
<div class="props_rev_3"><a id="GUID-EA3D935A-F460-4985-B498-274F17F06EDB"></a>
<h4 id="SBYDB-GUID-EA3D935A-F460-4985-B498-274F17F06EDB" class="sect4"><span class="enumeration_section">C.10.3.1</span> The DBMS_XMLSCHEMA Schema</h4>
<div>
<div class="section">
<p>The following procedures within the <code class="codeph">DBMS_XMLSCHEMA</code> package are unsupported and cannot be replicated by Logical Standby. Logical Standby stops when it encounters calls to these procedures to provide the user an opportunity to take a compensating action for these calls. Sections <a href="data_support.htm#GUID-254F904E-C5DB-4A99-A4B9-1F5765CBF7DD">Dealing With Unsupported PL/SQL Procedures</a> through <a href="data_support.htm#GUID-71AE3EBB-C4FE-4EB9-94E7-3F04FE1A0DB7">Compensating for Ordering Sensitive Unsupported PL/SQL</a> provide more information on the alternatives available for dealing with these unsupported procedures.</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">COPYEVOLVE</code></p>
</li>
<li>
<p><code class="codeph">INPLACEEVOLVE</code></p>
</li>
<li>
<p><code class="codeph">COMPILESCHEMA</code></p>
</li>
</ul>
<p>The XDB schema is an Oracle-managed schema. Any changes to this schema are automatically skipped by Logical Standby. The following procedure makes changes to the XDB schema which do not get replicated:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">GENERATEBEAN</code></p>
</li>
</ul>
<p>The following procedures and functions do not generate redo and therefore do not stop Logical Standby:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">GENERATESCHEMAS</code></p>
</li>
<li>
<p><code class="codeph">GENERATESCHEMA</code></p>
</li>
</ul>
<div class="infobox-note" id="GUID-EA3D935A-F460-4985-B498-274F17F06EDB__GUID-BF937D13-C223-46C5-95C0-3A51B6A73CFB">
<p class="notep1">Note:</p>
<p>As of Oracle Database 12<span class="italic">c</span> Release 1 (12.1), the <code class="codeph">GENERATESCHEMAS</code> and <code class="codeph">GENERATESCHEMA</code> procedures are deprecated.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4949"></a>
<div class="props_rev_3"><a id="GUID-DD8598A7-8859-46C3-A0DD-01F6B42C845C"></a>
<h4 id="SBYDB-GUID-DD8598A7-8859-46C3-A0DD-01F6B42C845C" class="sect4"><span class="enumeration_section">C.10.3.2</span> The DBMS_XMLINDEX Package</h4>
<div>
<div class="section">
<p>All procedures in <code class="codeph">DBMS_XMLINDEX</code> package are supported except for the following:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_XMLINDEX.REGISTERPARAMETER</code></p>
</li>
<li>
<p><code class="codeph">DBMS_XMLINDEX.MODIFYPARAMETER</code></p>
</li>
<li>
<p><code class="codeph">DBMS_XMLINDEX.DROPPARAMETER</code></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4950"></a>
<div class="props_rev_3"><a id="GUID-254F904E-C5DB-4A99-A4B9-1F5765CBF7DD"></a>
<h4 id="SBYDB-GUID-254F904E-C5DB-4A99-A4B9-1F5765CBF7DD" class="sect4"><span class="enumeration_section">C.10.3.3</span> Dealing With Unsupported PL/SQL Procedures</h4>
<div>
<p>There are a couple options for dealing with unsupported PL/SQL procedures. The first option is to allow the Logical Standby apply process to stop and to manually perform some compensating action. The second option is to take a preemptive action and to skip the unsupported PL/SQL either by using Logical Standby skip procedures. Each of these options is discussed in the following sections.</p>
</div>
</div>
<a id="SBYDB4951"></a>
<div class="props_rev_3"><a id="GUID-F23D42AA-97E6-4ADA-AD18-6B6D5A0C6A93"></a>
<h4 id="SBYDB-GUID-F23D42AA-97E6-4ADA-AD18-6B6D5A0C6A93" class="sect4"><span class="enumeration_section">C.10.3.4</span> Manually Compensating for Unsupported PL/SQL</h4>
<div>
<p>When Logical Standby encounters something that is unsupported, it stops the apply process and records an error in the <code class="codeph">DBA_LOGSTDBY_EVENTS</code> table. You can query this table to determine what action caused the standby to stop and what action, if any, needs to be taken to compensate.</p>
<p>The following example shows a sample of what this query and its output might look like:</p>
<pre dir="ltr">select status, event from dba_logstdby_events
          where commit_scn &gt;= (select applied_scn from dba_logstdby_progress) and
          status_code = 16265
          order by commit_scn desc;
 
STATUS
--------------------------------------------------------------------------------
EVENT
--------------------------------------------------------------------------------
ORA-16265: Unsupported PL/SQL procedure encountered
begin
&#34;XDB&#34;.&#34;DBMS_XMLSCHEMA&#34;.&#34;REGISTERPARAMETER&#34; (
   &#34;NAME&#34; =&gt; &#39;myIndexParam&#39;,
 &#34;PARAMETER&#34; =&gt; &#39;PATH TABLE 
 
ORA-16265: Unsupported PL/SQL procedure encountered
begin
&#34;XDB&#34;.&#34;DBMS_XMLSCHEMA&#34;.&#34;REGISTERPARAMETER&#34; (
   &#34;NAME&#34; =&gt; &#39;myIndexParam&#39;,
 &#34;PARAMETER&#34; =&gt; &#39;PATH TABLE 
  
2 rows selected.
</pre>
<p>Two rows with the same information are returned because Logical Standby automatically retries the failed transaction. The results show that the standby was stopped when a call to <code class="codeph">DBMS_XMLSCHEMA.REGISTERSCHEMA</code> was encountered for the <code class="codeph">xmlplsqlsch2</code> schema. You can use this information to transfer any needed files from the primary and register the schema on the standby.</p>
<p>Once the schema has been successfully registered on the standby, the apply process on the Logical Standby can be restarted. This must be performed using the <code class="codeph">SKIP FAILED TRANSACTION</code> option, for example:</p>
<pre dir="ltr">alter database start logical standby apply skip failed transaction&#39;
</pre>
<p>Logical Standby skips past the offending transaction and continues applying redo from the primary.</p>
<p>The general procedure for manually replicating unsupported PL/SQL follows these steps:</p>
<ol>
<li>
<p>Some unsupported PL/SQL is executed on the primary database.</p>
</li>
<li>
<p>The standby database encounters the unsupported PL/SQL and stops Apply.</p>
</li>
<li>
<p>You examine the <code class="codeph">DBA_LOGSTDBY_EVENTS</code> table to determine what caused Apply to stop.</p>
</li>
<li>
<p>You execute some compensating actions on the standby for the unsupported PL/SQL.</p>
</li>
<li>
<p>You restart apply on the standby.</p>
</li>
</ol>
</div>
</div>
<a id="SBYDB5096"></a><a id="SBYDB4953"></a>
<div class="props_rev_3"><a id="GUID-71AE3EBB-C4FE-4EB9-94E7-3F04FE1A0DB7"></a>
<h4 id="SBYDB-GUID-71AE3EBB-C4FE-4EB9-94E7-3F04FE1A0DB7" class="sect4"><span class="enumeration_section">C.10.3.5</span> Compensating for Ordering Sensitive Unsupported PL/SQL</h4>
<div>
<p>Although the previous approach is useful, it cannot be used in all cases. It can only be safely used when the time that the PL/SQL is executed relative to other transactions is not critical. One case that this should not be used for is that of <code class="codeph">DBMS_XMLSCHEMA.copyEvolve</code>.</p>
<p>This procedure evolves, or changes, a schema and can modify tables by adding and or removing columns and it can also change whether or not XML documents are valid. The timing of when this procedure should be executed on the Logical Standby is critical. The only time guaranteed to be safe is when apply has stopped on the Logical Standby when it sees that this procedure was executed on the primary database.</p>
<p>Before evolving a schema, it is also important to quiesce any traffic on the primary that may be using the schema. Otherwise, a transaction that is executed close in time to the <code class="codeph">evolveSchema</code> on the primary may be executed in a different order on the Logical Standby because the dependency between the two transactions is not apparent to the Logical Standby. Therefore, when ordering sensitive PL/SQL is involved, you should follow these steps:</p>
<ol>
<li>
<p>Quiesce changes to dependent tables on the primary.</p>
</li>
<li>
<p>Execute the <code class="codeph">CopyEvolve</code> on the primary.</p>
</li>
<li>
<p>Wait for the standby to stop on the <code class="codeph">CopyEvolve</code> PL/SQL.</p>
</li>
<li>
<p>Apply the compensating <code class="codeph">CopyEvolve</code> on the standby.</p>
</li>
<li>
<p>Restart apply on the standby.</p>
</li>
</ol>
<p><a href="data_support.htm#GUID-71AE3EBB-C4FE-4EB9-94E7-3F04FE1A0DB7__BEHEAFGB">Example C-1</a> shows a sample of the procedures that could be used to determine how to handle <code class="codeph">RegisterSchema</code> calls.</p>
<div class="example" id="GUID-71AE3EBB-C4FE-4EB9-94E7-3F04FE1A0DB7__BEHEAFGB">
<p class="titleinexample">Example C-1 PL/SQL Skip Procedure for RegisterSchema</p>
<pre dir="ltr">-- Procedures to determine how to handle registerSchema calls
 
-- This procedure extracts the schema URL, or name, from the statement
-- string that is passed into the skip procedure.
 
Create or replace procedure sec_mgr.parse_schema_str(
  statement             in varchar2,
  schema_name      out varchar2)
Is
  pos1 number;
  pos2 number;
  workingstr   varchar2(32767);
Begin
 
-- Find the correct argument
pos1 := instr(statement, &#39;&#34;SCHEMAURL&#34; =&gt; &#39;&#39;&#39;);
workingstr := substr(statement, pos1 + 16);
 
-- Find the end of the schema name
pos1 := instr(workingstr, &#39;&#39;&#39;&#39;);
 
-- Get just the schema name
workingstr := substr(workingstr, 1, pos1 - 1);
 
schema_name := workingstr;
 
End parse_schema_str;
/
show errors
 
 
-- This procedure checks if a schema is already registered. If so,
-- it returns the value DBMS_LOGSTDBY.SKIP_ACTION_SKIP to indicate that
-- the PL/SQL should be skipped. Otherwise, the value 
-- DBMS_LOGSTDBY.SKIP_ACTION_SKIP is returned and Logical Standby apply 
-- will halt to allow the DBA to deal with the registerSchema call.
 
Create or replace procedure sec_mgr.skip_registerschema(
  statement             in varchar2,
  package_owner            in varchar2,
  package_name             in varchar2,
  procedure_name                in varchar2,
  current_user                  in varchar2,
  xidusn                in number,
  xidslt                in number,
  xidsqn                in number, 
  exit_status                   in number, 
  skip_action           out number)
Is
  schema_exists number;
  schemastr varchar2(2000);
Begin
 
  skip_action := DBMS_LOGSTDBY.SKIP_ACTION_SKIP;
 
  -- get the schame name from statement
  parse_schema_str(statement, schemastr);
 
  -- see if the schema is already registered
  select count(*) into schema_exists from sys.all_xml_schemas s 
                                     where s.schema_url = schemastr and
                                           s.owner = current_user;
 
  IF schema_exists = 0 THEN
      -- if the schema is not  registered, then we must stop apply
      skip_action := DBMS_LOGSTDBY.SKIP_ACTION_APPLY;     
  ELSE
      -- if the schema is already registered, then we can skip this statement
      skip_action := DBMS_LOGSTDBY.SKIP_ACTION_SKIP;     
  END IF;
 
End skip_registerschema;
/
show errors
 
-- Register the skip procedure to deal with the unsupported registerSchema 
-- PL/SQL.
Begin
   sys.dbms_logstdby.skip(stmt =&gt; &#39;PL/SQL&#39;, 
        schema_name =&gt; &#39;XDB&#39;, 
                                        object_name   =&gt; &#39;DBMS_XMLSCHEMA.REGISTERSCHEMA&#39;, 
                                        proc_name     =&gt; &#39;SEC_MGR.SKIP_REGISTERSCHEMA&#39;,
        use_like         =&gt; FALSE );
                  End;
    /
show errors
</pre></div>
<!-- class="example" --></div>
</div>
</div>
</div>
<a id="SBYDB4954"></a>
<div class="props_rev_3"><a id="GUID-291FD74A-165A-4E80-9E1F-66996F1FC6CA"></a>
<h2 id="SBYDB-GUID-291FD74A-165A-4E80-9E1F-66996F1FC6CA" class="sect2"><span class="enumeration_section">C.11</span> Unsupported Tables</h2>
<div>
<p>It is important to identify unsupported database objects on the primary database before you create a logical standby database because changes made to unsupported data types and tables on the primary database are automatically skipped by SQL Apply on the logical standby database. Moreover, no error message is returned.</p>
<p>There are three types of objects on a database, from the perspective of logical standby support:</p>
<ul style="list-style-type: disc;">
<li>
<p>Objects that are explicitly maintained by SQL Apply</p>
</li>
<li>
<p>Objects that are implicitly maintained by SQL Apply</p>
</li>
<li>
<p>Objects that are not maintained by SQL Apply</p>
</li>
</ul>
<p>Some schemas that ship with the Oracle database (for example, <code class="codeph">SYSTEM</code>) contain objects that are implicitly maintained by SQL Apply. However, if you put a user-defined table in <code class="codeph">SYSTEM</code>, then it is not maintained even if it has columns of supported data types. To discover which objects are not maintained by SQL Apply, you must run two queries. The first query is as follows:</p>
<pre dir="ltr">SQL&gt; SELECT OWNER FROM DBA_LOGSTDBY_SKIP WHERE STATEMENT_OPT = &#39;INTERNAL SCHEMA&#39;;
</pre>
<p>This returns all schemas that are considered to be internal. User tables placed in these schemas are not replicated on a logical standby database and do not show up in the <code class="codeph">DBA_LOGSTDBY_UNSUPPORTED</code> view. Tables in these schemas that are created by Oracle are maintained on a logical standby, if the feature implemented in the schema is supported in the context of logical standby.</p>
<p>The second query you must run is as follows. It returns tables that do not belong to internal schemas and are not maintained by SQL Apply because of unsupported data types:</p>
<pre dir="ltr">SQL&gt; SELECT DISTINCT OWNER,TABLE_NAME FROM DBA_LOGSTDBY_UNSUPPORTED -
&gt; ORDER BY OWNER,TABLE_NAME;

OWNER        TABLE_NAME
-----------  --------------------------
HR           COUNTRIES
OE           ORDERS
OE           CUSTOMERS
OE           WAREHOUSES
</pre>
<p>To view the column names and data types for one of the tables listed in the previous query, use a <code class="codeph">SELECT</code> statement similar to the following:</p>
<pre dir="ltr">SQL&gt; SELECT COLUMN_NAME,DATA_TYPE FROM DBA_LOGSTDBY_UNSUPPORTED -
&gt; WHERE OWNER=&#39;OE&#39; AND TABLE_NAME = &#39;CUSTOMERS&#39;;

COLUMN_NAME                      DATA_TYPE
-------------------------------  -------------------
CUST_ADDRESS                     CUST_ADDRESS_TYP
PHONE_NUMBERS                    PHONE_LIST_TYP
CUST_GEO_LOCATION                SDO_GEOMETRY
</pre>
<p>If the primary database contains unsupported tables, SQL Apply automatically excludes these tables when applying redo data to the logical standby database.</p>
<div class="infobox-note" id="GUID-291FD74A-165A-4E80-9E1F-66996F1FC6CA__GUID-858C6574-54DE-49EA-BC9C-0E72D7364FEE">
<p class="notep1">Note:</p>
<p>For the queries shown in this section, if you are working in a multitenant container database (CDB) environment, then many DBA views have analogous CDB views that you should use instead. For example, you would query the <code class="codeph">CDB_LOGSTDBY_SKIP</code> view instead of the <code class="codeph">DBA_LOGSTDBY_SKIP</code> view.</p>
</div>
</div>
<a id="SBYDB5460"></a>
<div class="props_rev_3"><a id="GUID-13DDE926-B175-488D-9037-F707A4D2256D"></a>
<h3 id="SBYDB-GUID-13DDE926-B175-488D-9037-F707A4D2256D" class="sect3"><span class="enumeration_section">C.11.1</span> Unsupported Tables During Rolling Upgrades</h3>
<div>
<p>Before you perform a rolling upgrade, determine whether any of the tables involved contain data types that are unsupported on logical standby databases. To do this, you can query either the <code class="codeph">DBA_LOGSTDBY_UNSUPPORTED</code> view or the <code class="codeph">DBA_ROLLING_UNSUPPORTED</code> view, depending on the type of rolling upgrade being performed.</p>
<p>If you are performing a rolling upgrade using the <code class="codeph">DBMS_ROLLING</code> PL/SQL package, as described in <a href="dbms_rolling_upgrades.htm#GUID-70C09F5B-90BE-4C8C-96A5-45A52E05D380">Using DBMS_ROLLING to Perform a Rolling Upgrade</a> , then query the <code class="codeph">DBA_ROLLING_UNSUPPORTED</code> view.</p>
<p>If you are not using the <code class="codeph">DBMS_ROLLING</code> package, but are instead following the manual process outlined in <a href="rollup.htm#GUID-290F632F-5295-47F3-AEF1-2D37C69C00D7">Using SQL Apply to Upgrade the Oracle Database</a> , then query the <code class="codeph">DBA_LOGSTDBY_UNSUPPORTED</code> view.</p>
<p>A rolling upgrade performed using <code class="codeph">DBMS_ROLLING</code> supports more object types than a manual rolling upgrade operation. For example, only upgrades performed with <code class="codeph">DBMS_ROLLING</code> support queue tables. Additionally, a rolling upgrade performed using <code class="codeph">DBMS_ROLLING</code> also supports more PL/SQL packages.</p>
<div class="infoboxnotealso" id="GUID-13DDE926-B175-488D-9037-F707A4D2256D__GUID-49AEEC66-0DC1-4811-BEB2-AB86308F0D8B">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="rollup.htm#GUID-290F632F-5295-47F3-AEF1-2D37C69C00D7">Using SQL Apply to Upgrade the Oracle Database</a> for more information about performing manual rolling upgrades</p>
</li>
<li>
<p><a href="dbms_rolling_upgrades.htm#GUID-70C09F5B-90BE-4C8C-96A5-45A52E05D380">Using DBMS_ROLLING to Perform a Rolling Upgrade</a> for more information about performing rolling upgrades using the <code class="codeph">DBMS_ROLLING</code> PL/SQL package</p>
</li>
<li>
<p><a href="data_support.htm#GUID-F54904C7-F666-4CC3-B1CB-493525476D2F">Additional PL/SQL Package Support Available Only in the Context of DBMS_ROLLING Upgrades</a> for information about PL/SQL package support available only in the context of <code class="codeph">DBMS_ROLLING</code> upgrades</p>
</li>
<li>
<p><a class="olink ARPLS73534" target="_blank" href="../ARPLS/d_rolling.htm#ARPLS73534"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for a description of the <code class="codeph">DBMS_ROLLING</code> PL/SQL package</p>
</li>
<li>
<p><a class="olink REFRN002" target="_blank" href="../REFRN/GUID-8865F65B-EF6D-44A5-B0A1-3179EFF0C36A.htm#REFRN002"><span class="italic">Oracle Database Reference</span></a> for complete information about views</p>
</li>
</ul>
</div>
</div>
</div>
<a id="SBYDB5462"></a>
<div class="props_rev_3"><a id="GUID-8ED9EBC7-4F22-4693-84A7-897763E76A2F"></a>
<h3 id="SBYDB-GUID-8ED9EBC7-4F22-4693-84A7-897763E76A2F" class="sect3"><span class="enumeration_section">C.11.2</span> Unsupported Tables As a Result of DML Performed In a PL/SQL Function</h3>
<div>
<p>If, during an insert or update DML operation on a supported table, an out-of-line column (LOB, XMLType, or ADT) is modified through a PL/SQL function and that function in turn performs DML on another table in the course of its execution, then the redo patterns generated are unsupported by LogMiner. As a result, redo for such a workload cannot be reliably mined using LogMiner.</p>
</div>
</div>
</div>
<a id="SBYDB4955"></a>
<div class="props_rev_3"><a id="GUID-9DBC35BD-43C9-469F-BADD-C91752E88225"></a>
<h2 id="SBYDB-GUID-9DBC35BD-43C9-469F-BADD-C91752E88225" class="sect2"><span class="enumeration_section">C.12</span> Skipped SQL Statements on a Logical Standby Database</h2>
<div>
<div class="section">
<p><a id="d57830e3655" class="indexterm-anchor"></a>By default, the following SQ<a id="d57830e3662" class="indexterm-anchor"></a><a id="d57830e3666" class="indexterm-anchor"></a>L statements are automatically skipped by SQL Apply:</p>
<ul class="simple" style="list-style-type: none;padding-left:0;">
<li><code class="codeph">ALTER DATABASE</code></li>
<li><code class="codeph">ALTER MATERIALIZED VIEW</code></li>
<li><code class="codeph">ALTER MATERIALIZED VIEW LOG</code></li>
<li><code class="codeph">ALTER SESSION</code></li>
<li><code class="codeph">ALTER SYSTEM</code></li>
<li><code class="codeph">CREATE CONTROL FILE</code></li>
<li><code class="codeph">CREATE DATABASE</code></li>
<li><code class="codeph">CREATE DATABASE LINK</code></li>
<li><code class="codeph">CREATE PFILE FROM SPFILE</code></li>
<li><code class="codeph">CREATE MATERIALIZED VIEW</code></li>
<li><code class="codeph">CREATE MATERIALIZED VIEW LOG</code></li>
<li><code class="codeph">CREATE SCHEMA AUTHORIZATION</code></li>
<li><code class="codeph">CREATE SPFILE FROM PFILE</code></li>
<li><code class="codeph">DROP DATABASE LINK</code></li>
<li><code class="codeph">DROP MATERIALIZED VIEW</code></li>
<li><code class="codeph">DROP MATERIALIZED VIEW LOG</code></li>
<li><code class="codeph">EXPLAIN</code></li>
<li><code class="codeph">LOCK TABLE</code></li>
<li><code class="codeph">PURGE DBA_RECYCLEBIN</code></li>
<li><code class="codeph">PURGE INDEX</code></li>
<li><code class="codeph">SET CONSTRAINTS</code></li>
<li><code class="codeph">SET ROLE</code></li>
<li><code class="codeph">SET TRANSACTION</code></li>
</ul>
<p>All other SQL statements executed on the primary database are applied to the logical standby database.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB5097"></a><a id="SBYDB4956"></a>
<div class="props_rev_3"><a id="GUID-1595A660-6790-436A-BB84-D74C9187D8AE"></a>
<h2 id="SBYDB-GUID-1595A660-6790-436A-BB84-D74C9187D8AE" class="sect2"><span class="enumeration_section">C.13</span> DDL Statements Supported by a Logical Standby Database</h2>
<div>
<div class="section">
<p><a href="data_support.htm#GUID-1595A660-6790-436A-BB84-D74C9187D8AE__BABGCFCA" title="This 2 column tables lists the optional keywords for the SKIP statement. Column 1 is the keyword. Column 2 is the Associated SQL Statements.">Table C-1</a> lists the supported values for the <code class="codeph">stmt</code> parameter of the <code class="codeph">DBMS_LOGSTDBY.SKIP</code> procedure. The left column of the table lists the keywords that may be used to identify the set of SQL statements to the right of the keyword. In addition, any of the SQL statements listed in the <code class="codeph">sys.audit_actions</code> table (shown in the right column of Table 1-13) are also valid values. Keywords are generally defined by database object.</p>
<div class="infoboxnotealso" id="GUID-1595A660-6790-436A-BB84-D74C9187D8AE__GUID-AB1FA0FE-358B-4A0D-B86C-B045C0B752C7">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS363" target="_blank" href="../ARPLS/d_lsbydb.htm#ARPLS363"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for complete information about the <a class="olink ARPLS363" target="_blank" href="../ARPLS/d_lsbydb.htm#ARPLS363"><code class="codeph">DBMS_LOGSTDBY</code></a> package and <a href="manage_ls.htm#GUID-28EB46A0-696D-426E-B596-225443867604">Setting up a Skip Handler for a DDL Statement</a></p>
</div>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-1595A660-6790-436A-BB84-D74C9187D8AE__BABGCFCA">
<p class="titleintable">Table C-1 Values for stmt Parameter of the DBMS_LOGSTDBY.SKIP procedure</p>
<table class="cellalignment2269" title="Values for stmt Parameter of the DBMS_LOGSTDBY.SKIP procedure" summary="This 2 column tables lists the optional keywords for the SKIP statement. Column 1 is the keyword. Column 2 is the Associated SQL Statements.">
<thead>
<tr class="cellalignment2253">
<th class="cellalignment2270" id="d57830e3864">Keyword</th>
<th class="cellalignment2290" id="d57830e3867">Associated SQL Statements</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3872" headers="d57830e3864">
<p>There is no keyword for this group of SQL statements.</p>
</td>
<td class="cellalignment2291" headers="d57830e3872 d57830e3867">
<pre dir="ltr">GRANT
REVOKE
ANALYZE TABLE
ANALYZE INDEX
ANALYZE CLUSTER
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3879" headers="d57830e3864">
<p><code class="codeph">CLUSTER</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3879 d57830e3867">
<pre dir="ltr">AUDIT CLUSTER
CREATE CLUSTER
DROP CLUSTER
TRUNCATE CLUSTER
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3897" headers="d57830e3864">
<p><code class="codeph">CONTEXT</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3897 d57830e3867">
<pre dir="ltr">CREATE CONTEXT
DROP CONTEXT
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3909" headers="d57830e3864">
<p><code class="codeph">DATABASE LINK</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3909 d57830e3867">
<pre dir="ltr">CREATE DATABASE LINK
CREATE PUBLIC DATABASE LINK
DROP DATABASE LINK
DROP PUBLIC DATABASE LINK
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3927" headers="d57830e3864">
<p><code class="codeph">DIMENSION</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3927 d57830e3867">
<pre dir="ltr">ALTER DIMENSION
CREATE DIMENSION
DROP DIMENSION
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3942" headers="d57830e3864">
<p><code class="codeph">DIRECTORY</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3942 d57830e3867">
<pre dir="ltr">CREATE DIRECTORY
DROP DIRECTORY
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3954" headers="d57830e3864">
<p><code class="codeph">DML</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3954 d57830e3867">
<p>Includes DML statements on a table (for example: <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, and <code class="codeph">DELETE</code>)</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3971" headers="d57830e3864">
<p><code class="codeph">INDEX</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3971 d57830e3867">
<pre dir="ltr">ALTER INDEX
CREATE INDEX
DROP INDEX
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e3986" headers="d57830e3864">
<p><code class="codeph">NON_SCHEMA_DDL</code></p>
</td>
<td class="cellalignment2291" headers="d57830e3986 d57830e3867">
<p><span class="italic">All DDL that does not pertain to a particular schema</span></p>
<p><span class="bold">Note:</span> <code class="codeph">SCHEMA_NAME</code> and <code class="codeph">OBJECT_NAME</code> must be null</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4005" headers="d57830e3864">
<p><code class="codeph">PROCEDURE</code><a id="fn_1" href="#fn_1" onclick="footdisplay(1,&#34;Java schema objects (sources, classes, and resources) are considered the same as procedures for purposes of skipping (ignoring) SQL statements. &#34;)"><sup>Foot&nbsp;1</sup></a></p>
</td>
<td class="cellalignment2291" headers="d57830e4005 d57830e3867">
<pre dir="ltr">ALTER FUNCTION
ALTER PACKAGE
ALTER PACKAGE BODY
ALTER PROCEDURE
CREATE FUNCTION
CREATE LIBRARY
CREATE PACKAGE
CREATE PACKAGE BODY
CREATE PROCEDURE
DROP FUNCTION
DROP LIBRARY
DROP PACKAGE
DROP PACKAGE BODY
DROP PROCEDURE
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4058" headers="d57830e3864">
<p><code class="codeph">PROFILE</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4058 d57830e3867">
<pre dir="ltr">ALTER PROFILE
CREATE PROFILE
DROP PROFILE
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4074" headers="d57830e3864">
<p><code class="codeph">PUBLIC DATABASE LINK</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4074 d57830e3867">
<pre dir="ltr">CREATE PUBLIC DATABASE LINK
DROP PUBLIC DATABASE LINK
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4086" headers="d57830e3864">
<p><code class="codeph">PUBLIC SYNONYM</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4086 d57830e3867">
<pre dir="ltr">CREATE PUBLIC SYNONYM
DROP PUBLIC SYNONYM
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4098" headers="d57830e3864">
<p><code class="codeph">ROLE</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4098 d57830e3867">
<pre dir="ltr">ALTER ROLE
CREATE ROLE
DROP ROLE
SET ROLE
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4116" headers="d57830e3864">
<p><code class="codeph">ROLLBACK SEGMENT</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4116 d57830e3867">
<pre dir="ltr">ALTER ROLLBACK SEGMENT
CREATE ROLLBACK SEGMENT
DROP ROLLBACK SEGMENT
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4131" headers="d57830e3864">
<p><code class="codeph">SCHEMA_DDL</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4131 d57830e3867">
<p><span class="italic">All DDL statements that create, modify, or drop schema objects (for example: tables, indexes, and columns)</span></p>
<p><span class="bold">Note:</span> <code class="codeph">SCHEMA_NAME</code> and <code class="codeph">OBJECT_NAME</code> must <span class="italic">not</span> be null</p>
</td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4153" headers="d57830e3864">
<p><code class="codeph">SEQUENCE</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4153 d57830e3867">
<pre dir="ltr">ALTER SEQUENCE
CREATE SEQUENCE
DROP SEQUENCE
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4168" headers="d57830e3864">
<p><code class="codeph">SYNONYM</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4168 d57830e3867">
<pre dir="ltr">CREATE PUBLIC SYNONYM
CREATE SYNONYM
DROP PUBLIC SYNONYM
DROP SYNONYM
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4186" headers="d57830e3864">
<p><code class="codeph">SYSTEM AUDIT</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4186 d57830e3867">
<pre dir="ltr">AUDIT <span class="variable">SQL_statements</span>
NOAUDIT <span class="variable">SQL_statements</span>
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4204" headers="d57830e3864">
<p><code class="codeph">TABLE</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4204 d57830e3867">
<pre dir="ltr">CREATE TABLE
ALTER TABLE
DROP TABLE
TRUNCATE TABLE
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4219" headers="d57830e3864">
<p><code class="codeph">TABLESPACE</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4219 d57830e3867">
<pre dir="ltr">CREATE TABLESPACE
DROP TABLESPACE
ALTER TABLESPACE
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4234" headers="d57830e3864">
<p><code class="codeph">TRIGGER</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4234 d57830e3867">
<pre dir="ltr">ALTER TRIGGER
CREATE TRIGGER
DISABLE ALL TRIGGERS
DISABLE TRIGGER
DROP TRIGGER
ENABLE ALL TRIGGERS
ENABLE TRIGGER
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4263" headers="d57830e3864">
<p><code class="codeph">TYPE</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4263 d57830e3867">
<pre dir="ltr">ALTER TYPE
ALTER TYPE BODY
CREATE TYPE
CREATE TYPE BODY
DROP TYPE
DROP TYPE BODY
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4287" headers="d57830e3864">
<p><code class="codeph">USER</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4287 d57830e3867">
<pre dir="ltr">ALTER USER
CREATE USER
DROP USER
</pre></td>
</tr>
<tr class="cellalignment2253">
<td class="cellalignment2272" id="d57830e4302" headers="d57830e3864">
<p><code class="codeph">VIEW</code></p>
</td>
<td class="cellalignment2291" headers="d57830e4302 d57830e3867">
<pre dir="ltr">CREATE VIEW
DROP VIEW
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1</sup></p>
<p>Java schema objects (sources, classes, and resources) are considered the same as procedures for purposes of skipping (ignoring) SQL statements.</p>
<div class="section">
<div class="infoboxnotealso" id="GUID-1595A660-6790-436A-BB84-D74C9187D8AE__GUID-8ECA9D21-78EE-4A9C-8029-7092A49EC0DB">
<p class="notep1">See Also:</p>
<p>The following sections that provide usage examples of the <code class="codeph">SKIP</code> and <code class="codeph">UNSKIP</code> options:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="manage_ls.htm#GUID-B976F237-1888-46D3-A901-F28FE362ACBC">Using DBMS_LOGSTDBY.SKIP to Prevent Changes to Specific Schema Objects</a></p>
</li>
<li>
<p><a href="manage_ls.htm#GUID-28EB46A0-696D-426E-B596-225443867604">Setting up a Skip Handler for a DDL Statement</a></p>
</li>
<li>
<p><a href="manage_ls.htm#GUID-43971CB9-3337-4575-B4EF-D591878982F1">Modifying a Logical Standby Database</a></p>
</li>
<li>
<p><a href="manage_ls.htm#GUID-DD88E3D6-D6DB-4175-BB59-F048B9A87BAA">Adding or Re-Creating Tables On a Logical Standby Database</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
<a id="SBYDB4957"></a>
<div class="props_rev_3"><a id="GUID-84B0FD0B-2193-410B-BAAF-F11E9523803E"></a>
<h3 id="SBYDB-GUID-84B0FD0B-2193-410B-BAAF-F11E9523803E" class="sect3"><span class="enumeration_section">C.13.1</span> DDL Statements that Use DBLINKS</h3>
<div>
<p>SQL Apply<a id="d57830e4414" class="indexterm-anchor"></a> may not correctly apply DDL statements such as the following, that reference a database link:</p>
<pre dir="ltr">CREATE TABLE <span class="italic">tablename</span> AS SELECT * FROM <span class="italic">bar</span>@<span class="italic">dblink</span>
</pre>
<p>This is because the <span class="italic"><code class="codeph">dblink</code></span> at the logical standby database may not point to the same database as the primary database. If SQL Apply fails while executing such a DDL statement, then use the <code class="codeph">DBMS_LOGSTDBY.INSTANTIATE_TABLE</code> procedure for the table being created, and then restart SQL APPLY operations.</p>
</div>
</div>
<a id="SBYDB4958"></a>
<div class="props_rev_3"><a id="GUID-04AE6CBF-F487-4EBC-B066-96F198971872"></a>
<h3 id="SBYDB-GUID-04AE6CBF-F487-4EBC-B066-96F198971872" class="sect3"><span class="enumeration_section">C.13.2</span> Replication of AUD$ and FGA_LOG$ on Logical Standbys</h3>
<div>
<p>Auditing and fine-grained auditing are supported on logical standbys. Changes<a id="d57830e4509" class="indexterm-anchor"></a><a id="d57830e4513" class="indexterm-anchor"></a> made to the <code class="codeph">AUD$</code> and <code class="codeph">FGA_AUD$</code> tables at the primary database are replicated at the logical standby.</p>
<p>Both the <code class="codeph">AUD$</code> table and the <code class="codeph">FGA_AUD$</code> table have a DBID column. If the DBID value is that of the primary database, then the row was replicated to the logical standby based on activities at the primary. If the DBID value is that of the logical standby database, then the row was inserted as a result of local activities at the logical standby.</p>
<p>After the logical standby database assumes the primary role as a result of a role transition (either a switchover or failover), the <code class="codeph">AUD$</code> and <code class="codeph">FGA_AUD$</code> tables at the <span class="italic">new primary</span> (originally the logical standby) and at the <span class="italic">new logical standby</span> (originally the primary) are not necessarily synchronized. Therefore, it is possible that not all rows in the <code class="codeph">AUD$</code> or <code class="codeph">FGA_AUD$</code> tables at the new primary database will be present in the new logical standby database. However, all rows in <code class="codeph">AUD$</code> and <code class="codeph">FGA_LOG$</code> that were inserted while the database was in a primary role are replicated and present in the logical standby database.</p>
</div>
</div>
</div>
<a id="SBYDB4959"></a>
<div class="props_rev_3"><a id="GUID-8BF91B38-CC5C-40A9-B062-683B4A6F5AB8"></a>
<h2 id="SBYDB-GUID-8BF91B38-CC5C-40A9-B062-683B4A6F5AB8" class="sect2"><span class="enumeration_section">C.14</span> Distributed Transactions and XA Support</h2>
<div>
<p>You can perform distributed transactions<a id="d57830e4629" class="indexterm-anchor"></a> using either of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p>Modify tables in multiple databases in a coordinated manner using database links.</p>
</li>
<li>
<p>Use the XA interface, as exposed by the <code class="codeph">DBMS_XA</code> package in supplied PL/SQL packages or via OCI or JDBC libraries. The XA interface implements X/Open Distributed Transaction Processing (DTP) architecture.</p>
</li>
</ul>
<p>Changes made to the primary database during a distributed transaction using either of these two methods are replicated to the logical standby database.</p>
<p>However, the distributed transaction state is not replicated. The logical standby database does not inherit the in-doubt or prepared state of such a transaction, and it does not replicate the changes using the same global transaction identifier used at the primary database for the XA transactions. As a result, if you fail over to a logical standby database before committing a distributed transaction, the changes are rolled back at the logical standby. This rollback occurs even if the distributed transaction on the primary database is in a prepared state and has successfully completed the first phase of the two-phased commit protocol. Switchover operations wait for all active distributed transactions to complete, and are not affected by this restriction.</p>
<p>XA transactions can be performed in two ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>tightly coupled, where different XA branches share locks</p>
</li>
<li>
<p>loosely coupled, where different XA branches do not share locks</p>
</li>
</ul>
<p>Replication of changes made by loosely coupled XA branches is supported regardless of the <code class="codeph">COMPATIBLE</code> parameter value. Replication of changes made by tightly coupled branches on an Oracle RAC primary (introduced in 11g Release 1) is supported only with <code class="codeph">COMPATIBLE=11.2</code> or higher.</p>
</div>
</div>
<a id="SBYDB5120"></a>
<div class="props_rev_3"><a id="GUID-F10F2D96-B441-4465-810D-1A06112552C8"></a>
<h2 id="SBYDB-GUID-F10F2D96-B441-4465-810D-1A06112552C8" class="sect2"><span class="enumeration_section">C.15</span> Support for SecureFiles LOBs</h2>
<div>
<p>SecureFiles LOBs are supported when the database compatibility level is set to 11.2 or higher.</p>
<p>Transparent Data Encryption and data compression can be enabled on SecureFiles LOB columns at the primary database.</p>
<p>Deduplication of SecureFiles LOB columns and SecureFiles Database File System (DBFS) operations are fully supported. Fragment operations are only supported via Extended Datatype Support (EDS).</p>
<p>If SQL Apply encounters redo generated by unsupported operations, it stops with an <code class="codeph">ORA-16211: Unsupported record found in the archived redo log</code> error. To continue, add a skip rule for the affected table using <code class="codeph">DBMS_LOGSTDBY.SKIP</code> and restart SQL Apply.</p>
</div>
</div>
<a id="SBYDB5447"></a>
<div class="props_rev_3"><a id="GUID-0309A2A5-E4DE-406C-9DD3-74DD86F419BB"></a>
<h2 id="SBYDB-GUID-0309A2A5-E4DE-406C-9DD3-74DD86F419BB" class="sect2"><span class="enumeration_section">C.16</span> Support for Database File System (DBFS)</h2>
<div>
<p>Logical standby supports the Database File System (DBFS). DBFS creates a standard file system interface on top of files and directories that are stored in database tables., which makes it easier for you to access and manage files stored in the database. See <a class="olink ADLOB45943" target="_blank" href="../ADLOB/adlob_fs.htm#ADLOB45943"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for more information about DBFS.</p>
</div>
</div>
<a id="SBYDB5121"></a>
<div class="props_rev_3"><a id="GUID-CC85C064-6115-423C-BF30-790B3D17FC43"></a>
<h2 id="SBYDB-GUID-CC85C064-6115-423C-BF30-790B3D17FC43" class="sect2"><span class="enumeration_section">C.17</span> Character Set Considerations</h2>
<div>
<p>Configurations are not supported in which the primary database and standby database have different character sets.</p>
</div>
</div>
<a id="SBYDB5402"></a>
<div class="props_rev_3"><a id="GUID-F54904C7-F666-4CC3-B1CB-493525476D2F"></a>
<h2 id="SBYDB-GUID-F54904C7-F666-4CC3-B1CB-493525476D2F" class="sect2"><span class="enumeration_section">C.18</span> Additional PL/SQL Package Support Available Only in the Context of DBMS_ROLLING Upgrades</h2>
<div>
<div class="section">
<p>Replication of the following packages is available only in the context of rolling upgrades performed using the <code class="codeph">DBMS_ROLLING</code> package:</p>
<ul style="list-style-type: disc;">
<li>
<p>DBFS</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_DBFS_CONTENT_ADMIN</code></p>
</li>
<li>
<p><code class="codeph">DBMS_DBFS_SFS</code></p>
</li>
<li>
<p><code class="codeph">DBMS_DBFS_SFS_ADMIN</code></p>
</li>
</ul>
</li>
<li>
<p>Lightweight Security</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">XS_ACL</code></p>
</li>
<li>
<p><code class="codeph">XS_DATA_SECURITY</code></p>
</li>
<li>
<p><code class="codeph">XS_NAMESPACE</code></p>
</li>
<li>
<p><code class="codeph">XS_PRINCIPAL</code></p>
</li>
<li>
<p><code class="codeph">XS_ROLESET</code></p>
</li>
<li>
<p><code class="codeph">XS_SECURITY_CLASS</code></p>
</li>
</ul>
</li>
<li>
<p>Oracle Streams Advanced Queuing (AQ)</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_AQ</code></p>
</li>
<li>
<p><code class="codeph">DBMS_AQJMS</code></p>
</li>
<li>
<p><code class="codeph">DBMS_AQADM</code> (except for the following procedures: <code class="codeph">SCHEDULE_PROPAGATION</code>, <code class="codeph">RECOVER_PROPAGATION</code>, <code class="codeph">UNSCHEDULE_PROPAGATION</code>, <code class="codeph">ALTER_PROPAGATION_SCHEDULE</code>, <code class="codeph">ENABLE_PROPAGATION_SCHEDULE</code>, and <code class="codeph">DISABLE_PROPAGATION_SCHEDULE</code>)</p>
</li>
</ul>
</li>
<li>
<p>Oracle Text</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CTX_ADM</code></p>
</li>
<li>
<p><code class="codeph">CTX_ANL</code></p>
</li>
<li>
<p><code class="codeph">CTX_CLS</code></p>
</li>
<li>
<p><code class="codeph">CTX_DDL</code></p>
</li>
<li>
<p><code class="codeph">CTX_DOC</code></p>
</li>
<li>
<p><code class="codeph">CTX_ENTITY</code></p>
</li>
<li>
<p><code class="codeph">CTX_OUTPUT</code></p>
</li>
<li>
<p><code class="codeph">CTX_QUERY</code></p>
</li>
<li>
<p><code class="codeph">CTX_THES</code></p>
</li>
<li>
<p><code class="codeph">CTX_TREE</code></p>
</li>
</ul>
</li>
<li>
<p>Scheduler</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_SCHEDULER</code></p>
</li>
</ul>
</li>
<li>
<p>XDB-related</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_RESCONFIG</code></p>
</li>
<li>
<p><code class="codeph">DBMS_XDB_CONFIG</code> (Certain procedures are not supported. See <a class="olink ADXDB5703" target="_blank" href="../ADXDB/appaman.htm#ADXDB5703"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a> for more information.)</p>
</li>
<li>
<p><code class="codeph">DBMS_XDB_REPOS</code></p>
</li>
<li>
<p><code class="codeph">DBMS_XDBRESOURCE</code></p>
</li>
<li>
<p><code class="codeph">DBMS_XDB_VERSION</code></p>
</li>
<li>
<p><code class="codeph">DBMS_XDBZ</code> (Certain procedures are not supported. See <a class="olink ADXDB5703" target="_blank" href="../ADXDB/appaman.htm#ADXDB5703"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a> for more information.)</p>
</li>
</ul>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-F54904C7-F666-4CC3-B1CB-493525476D2F__GUID-3E35D4AA-F6A7-476D-9A73-25700B9DEACB">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="dbms_rolling_upgrades.htm#GUID-70C09F5B-90BE-4C8C-96A5-45A52E05D380">Using DBMS_ROLLING to Perform a Rolling Upgrade</a></p>
</li>
<li>
<p><a class="olink DBFSG80000" target="_blank" href="../DBFSG/plsql_pkg.htm#DBFSG80000"><span class="italic">Oracle Database Real Application Security Administrator&#39;s and Developer&#39;s Guide</span></a> for more information about the Lightweight Security packages</p>
</li>
<li>
<p><a class="olink ARPLS72235" target="_blank" href="../ARPLS/d_sched.htm#ARPLS72235"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <code class="codeph">DBMS_SCHEDULER</code>, XDB-related, and DBFS-related packages</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2252">
<tr>
<td class="cellalignment2259">
<table class="cellalignment2257">
<tr>
<td class="cellalignment2256"><a href="upgrades.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2256"><a href="rac_support.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2261">
<table class="cellalignment2255">
<tr>
<td class="cellalignment2256"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2256"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2256"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2256"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2256"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2256"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>