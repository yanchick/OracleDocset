<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-92009"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Data%20Guard%20Scenarios"></a><title>Oracle Data Guard Scenarios</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="Flashback Database, physical standby database, Redo Apply, flashing back after failover, physical standby databases, after OPEN RESETLOGS, OPEN RESETLOGS, flashing back after, backup operations, after unrecoverable operations, OMF, Oracle Managed Files (OMF), See, ASM, Automatic Storage Management (ASM), character sets, changing on primary databases"/>
<meta name="dcterms.created" content="2017-07-21T12:09:00Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Data Guard Concepts and Administration"/>
<meta name="dcterms.identifier" content="E48552-08"/>
<meta name="dcterms.isVersionOf" content="SBYDB"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="dbms_rolling_upgrades.htm" title="Previous" type="text/html"/>
<link rel="Next" href="partpage2.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48552-08.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-07C5867F-C55F-4B5B-804F-1800CE9985EF"></a> <span id="PAGE" style="display:none;">21/35</span> <!-- End Header -->
<a id="SBYDB5073"></a><a id="SBYDB00900"></a>
<h1 id="SBYDB-GUID-07C5867F-C55F-4B5B-804F-1800CE9985EF" class="sect1"><span class="enumeration_chapter">15</span> Oracle Data Guard Scenarios</h1>
<div>
<p>Sample scenarios are provided for different situations you might encounter while administering your Oracle Data Guard configuration. Each of the following scenarios can be adapted to your specific environment.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="scenarios.htm#GUID-CBC9D920-C2D0-4342-ACEF-C16289D1774A">Configuring Logical Standby Databases After a Failover</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-1163448F-6B18-4A44-AA8D-7CDF0D1360FB">Converting a Failed Primary Into a Standby Database Using Flashback Database</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-BAA5ED38-29A0-4E8D-8435-AA083D19C13E">Using Flashback Database After Issuing an Open Resetlogs Statement</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-BD9E85AB-D812-4659-9C85-26CDFF115A8A">Recovering After the NOLOGGING Clause Is Specified</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-6FB574E5-2F3A-4C9E-A3F0-7C9154B0F540">Creating a Standby Database That Uses OMF or Oracle ASM</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-8F4E7807-6013-480F-8780-088F5639732F">Recovering From Lost-Write Errors on a Primary Database</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-B734C79F-A2BB-43A5-89D7-7733089FB577">Converting a Failed Primary into a Standby Database Using RMAN Backups</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-FCDB44CE-FBFE-43BB-88E3-74267B38FE70">Changing the Character Set of a Primary Without Re-Creating Physical Standbys</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-8D948A24-A3B7-4E4F-917A-00B047CF3CAF">Actions Needed On a Standby After a PDB PITR On a Primary</a></p>
</li>
</ul>
</div>
<a id="SBYDB4885"></a>
<div class="props_rev_3"><a id="GUID-CBC9D920-C2D0-4342-ACEF-C16289D1774A"></a>
<h2 id="SBYDB-GUID-CBC9D920-C2D0-4342-ACEF-C16289D1774A" class="sect2"><span class="enumeration_section">15.1</span> Configuring Logical Standby Databases After a Failover</h2>
<div>
<p>This section presents the steps required on a logical standby database after the primary database has failed over to another standby database. After a failover has occurred, a logical standby database cannot act as a standby database for the new primary database until it has applied the final redo from the original primary database. This is similar to the way the new primary database applied the final redo during the failover. The steps you must perform depend on whether the new primary database was a physical standby or a logical standby database prior to the failover:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="scenarios.htm#GUID-C058F492-C55E-4EF4-929C-CA8AF206F349">When the New Primary Database Was Formerly a Physical Standby Database</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-424FC856-08A5-4F68-9EEC-93F0EF575A3A">When the New Primary Database Was Formerly a Logical Standby Database</a></p>
</li>
</ul>
</div>
<a id="SBYDB4886"></a>
<div class="props_rev_3"><a id="GUID-C058F492-C55E-4EF4-929C-CA8AF206F349"></a>
<h3 id="SBYDB-GUID-C058F492-C55E-4EF4-929C-CA8AF206F349" class="sect3"><span class="enumeration_section">15.1.1</span> When the New Primary Database Was Formerly a Physical Standby Database</h3>
<div>
<div class="section">
<p>This steps in this scenario demonstrate how to configure a logical standby database to support a new primary database that was a physical standby database before it assumed the primary role. In this scenario, SAT is the logical standby database and NYC is the primary database.</p>
<ol>
<li>
<p>On the SAT database, issue the following statement to configure the FAL_SERVER parameter to enable automatic recovery of log files.</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET FAL_SERVER=&#39;&lt;tns_name_to_new_primary&gt;&#39;;
</pre></li>
<li>
<p>Call the PREPARE_FOR_NEW_PRIMARY routine to verify that the logical standby database is capable of serving as a standby database to the new primary database. During this step, local copies of log files that pose a risk for data divergence are deleted from the local database. These log files are then requested for re-archival directly from the new primary database.</p>
<p>On the SAT database, issue the following statement:</p>
<pre dir="ltr">SQL&gt; EXECUTE DBMS_LOGSTDBY.PREPARE_FOR_NEW_PRIMARY( -
&gt;  former_standby_type =&gt; &#39;PHYSICAL&#39; -
&gt;  dblink =&gt; &#39;nyc_link&#39;);
</pre>
<div class="infobox-note" id="GUID-C058F492-C55E-4EF4-929C-CA8AF206F349__GUID-0690661F-5155-4D13-BB14-7DE18F7CAA9C">
<p class="notep1">Note:</p>
<p>If the <code class="codeph">ORA-16109</code> message is returned and the &#39;LOGSTDBY: prepare_for_new_primary failure -- applied too far, flashback required.&#39; warning is written in the alert.log, perform the following steps:</p>
<ol>
<li>
<p>Flash back the database to the SCN as stated in the warning and then</p>
</li>
<li>
<p>Repeat this step before continuing.</p>
</li>
</ol>
<p>See <a href="scenarios.htm#GUID-A6260CFC-7ABA-4478-9211-BC665077725B">Flashing Back a Logical Standby Database to a Specific Applied SCN</a> for an example of how to flash back a logical standby database to an Apply SCN.</p>
</div>
</li>
<li>
<p>On the SAT database, issue the following statement to start SQL Apply:</p>
<pre dir="ltr">SQL&gt; SELECT PENDING_ROLE_CHANGE_TASKS FROM V$DATABASE;
</pre>
<div class="infobox-note" id="GUID-C058F492-C55E-4EF4-929C-CA8AF206F349__GUID-1C063EB5-64DB-4948-9368-3A34F1FBB2C8">
<p class="notep1">Note:</p>
<p>A value of <code class="codeph">NONE</code> must be returned before you attempt to reinstate an old primary database.</p>
</div>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4887"></a>
<div class="props_rev_3"><a id="GUID-424FC856-08A5-4F68-9EEC-93F0EF575A3A"></a>
<h3 id="SBYDB-GUID-424FC856-08A5-4F68-9EEC-93F0EF575A3A" class="sect3"><span class="enumeration_section">15.1.2</span> When the New Primary Database Was Formerly a Logical Standby Database</h3>
<div>
<div class="section">
<p>This steps in this scenario demonstrate how to configure a logical standby database to support a new primary database that was a logical standby database before it assumed the primary role. In this scenario, SAT is the logical standby database and NYC is the primary database.</p>
<ol>
<li>
<p>Ensure the new primary database is ready to support logical standby databases. On the NYC database, ensure the following query returns a value of <code class="codeph">NONE</code>. Otherwise the new primary database has not completed the work required to enable support for logical standby databases. For example:</p>
<pre dir="ltr">SQL&gt; SELECT PENDING_ROLE_CHANGE_TASKS FROM V$DATABASE;
</pre>
<p>A value of <code class="codeph">NONE</code> must be returned before you attempt to reinstate an old primary database.</p>
</li>
<li>
<p>On the SAT database, issue the following statement to configure the FAL_SERVER parameter to enable automatic recover of log files:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET FAL_SERVER=&#39;&lt;tns_name_to_new_primary&gt;&#39;;
</pre></li>
<li>
<p>Call the <code class="codeph">PREPARE_FOR_NEW_PRIMARY</code> routine to verify the logical standby database is capable of being a standby to the new primary. During this step, local copies of log files which pose a risk for data divergence are deleted from the local database. These log files are then requested for re-archival directly from the new primary database.</p>
<p>On the SAT database, issue the following statement:</p>
<pre dir="ltr">SQL&gt; EXECUTE DBMS_LOGSTDBY.PREPARE_FOR_NEW_PRIMARY( -
&gt; former_standby_type =&gt; &#39;LOGICAL&#39; -
&gt; dblink =&gt; &#39;nyc_link&#39;);
</pre>
<div class="infobox-note" id="GUID-424FC856-08A5-4F68-9EEC-93F0EF575A3A__GUID-B2DCBE47-118C-43B0-9F3A-F74D37E2E39F">
<p class="notep1">Note:</p>
<p>If the <code class="codeph">ORA-16109</code> message is returned and the <code class="codeph">LOGSTDBY: prepare_for_new_primary failure -- applied too far, flashback required</code> warning is written in the alert.log file, perform the following steps:</p>
<ol>
<li>
<p>Flash back the database to the SCN as stated in the warning and then</p>
</li>
<li>
<p>Repeat this step before continuing.</p>
</li>
</ol>
<p>See <a href="scenarios.htm#GUID-A6260CFC-7ABA-4478-9211-BC665077725B">Flashing Back a Logical Standby Database to a Specific Applied SCN</a> for an example of how to flash back a logical standby database to an Apply SCN.</p>
</div>
</li>
<li>
<p>On the SAT database, issue the following statements to start SQL Apply:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY NEW PRIMARY nyc_link;
</pre>
<p>This statement must always be issued without the real-time apply option enabled. To enable real-time apply on the logical standby database, wait for the above statement to complete successfully, and then issue the following statements:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE STOP LOGICAL STANDBY APPLY;
SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY IMMEDIATE;
</pre></li>
</ol>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB00910"></a>
<div class="props_rev_3"><a id="GUID-1163448F-6B18-4A44-AA8D-7CDF0D1360FB"></a>
<h2 id="SBYDB-GUID-1163448F-6B18-4A44-AA8D-7CDF0D1360FB" class="sect2"><span class="enumeration_section">15.2</span> Converting a Failed Primary Into a Standby Database Using Flashback Database</h2>
<div>
<p>After a failover occurs, the original primary database can no longer participate in the Oracle Data Guard configuration until it is repaired and established as a standby database in the new configuration. To do this, you can use the Flashback Database feature to recover the failed primary database to a point in time before the failover occurred, and then convert it into a physical or logical standby database in the new configuration. The following sections describe:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="scenarios.htm#GUID-C7C39BEC-A841-48D1-BE4B-9BB49C65B9C9">Flashing Back a Failed Primary Database into a Physical Standby Database</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-324EBFC6-5358-419A-AD4A-E457273E6560">Flashing Back a Failed Primary Database into a Logical Standby Database</a></p>
<div class="infobox-note" id="GUID-1163448F-6B18-4A44-AA8D-7CDF0D1360FB__GUID-66988666-621E-4102-805D-1A0A1695E456">
<p class="notep1">Note:</p>
<p>You must have already enabled Flashback Database on the original primary database before the failover. See <a class="olink BRADV71000" target="_blank" href="../BRADV/flashdb.htm#BRADV71000"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for more information.</p>
</div>
</li>
<li>
<p><a href="scenarios.htm#GUID-A6260CFC-7ABA-4478-9211-BC665077725B">Flashing Back a Logical Standby Database to a Specific Applied SCN</a></p>
<div class="infoboxnotealso" id="GUID-1163448F-6B18-4A44-AA8D-7CDF0D1360FB__GUID-53149AF4-B728-4706-B16C-9205D8089915">
<p class="notep1">See Also:</p>
<p><a class="olink DGBKR3438" target="_blank" href="../DGBKR/dbpropref.htm#DGBKR3438"><span class="italic">Oracle Data Guard Broker</span></a> for information about automatic reinstatement of the failed primary database as a new standby database (as an alternative to using Flashback Database)</p>
</div>
</li>
</ul>
</div>
<a id="SBYDB4888"></a>
<div class="props_rev_3"><a id="GUID-C7C39BEC-A841-48D1-BE4B-9BB49C65B9C9"></a>
<h3 id="SBYDB-GUID-C7C39BEC-A841-48D1-BE4B-9BB49C65B9C9" class="sect3"><span class="enumeration_section">15.2.1</span> Flashing Back a Failed Primary Database into a Physical Standby Database</h3>
<div>
<div class="section">
<p>The following steps assume that a failover has been performed to a physical standby database and that Flashback Database was enabled on the old primary database at the time of the failover. This procedure brings the old primary database back into the Oracle Data Guard configuration as a physical standby database.</p>
<ol>
<li>
<p>On the new primary database, issue the following query to determine the SCN at which the old standby database became the new primary database:</p>
<pre dir="ltr">SQL&gt; SELECT TO_CHAR(STANDBY_BECAME_PRIMARY_SCN) FROM V$DATABASE;
</pre></li>
<li>
<p>Shut down the old primary database (if necessary), mount it, and flash it back to the value for <code class="codeph">STANDBY_BECAME_PRIMARY_SCN</code> that was determined in the previous step.</p>
<pre dir="ltr">SQL&gt; SHUTDOWN IMMEDIATE;
SQL&gt; STARTUP MOUNT;
SQL&gt; FLASHBACK DATABASE TO SCN <span class="variable">standby_became_primary_scn</span>;
</pre></li>
<li>
<p>To convert the database to a physical standby database, issue the following statement on the old primary database:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE CONVERT TO PHYSICAL STANDBY;
</pre></li>
<li>
<p>To start transporting redo to the new physical standby database, perform the following steps on the new primary database:</p>
<ol>
<li>
<p>Issue the following query to see the current state of the archive destinations:</p>
<pre dir="ltr">SQL&gt; SELECT DEST_ID, DEST_NAME, STATUS, PROTECTION_MODE, DESTINATION, -
&gt; ERROR,SRL FROM V$ARCHIVE_DEST_STATUS;
</pre>
<pre dir="ltr"></pre></li>
<li>
<p>If necessary, enable the destination:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET LOG_ARCHIVE_DEST_STATE_<span class="variable">n</span>=ENABLE;
</pre></li>
<li>
<p>Perform a log switch to ensure the standby database begins receiving redo data from the new primary database, and verify it was sent successfully. Issue the following SQL statements on the new primary database:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
SQL&gt; SELECT DEST_ID, DEST_NAME, STATUS, PROTECTION_MODE, DESTINATION,- 
&gt; ERROR,SRL FROM V$ARCHIVE_DEST_STATUS;
</pre>
<p>On the new standby database, you may also need to change the <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> initialization parameters so that redo transport services do not transmit redo data to other databases.</p>
</li>
</ol>
</li>
<li>
<p>Start Redo Apply on the new physical standby database:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;
</pre>
<p>Redo Apply automatically stops each time it encounters a redo record that is generated as the result of a role transition, so Redo Apply needs to be restarted one or more times until it has applied beyond the SCN at which the new primary database became the primary database. Once the failed primary database is restored and is running in the standby role, you can optionally perform a switchover to transition the databases to their original (pre-failure) roles. See <span class="q">&#34;<a href="role_management.htm#GUID-AAD70601-D248-4309-B8DD-F461EE31A5FF">Performing a Switchover to a Physical Standby Database</a>&#34;</span> for more information.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4889"></a>
<div class="props_rev_3"><a id="GUID-324EBFC6-5358-419A-AD4A-E457273E6560"></a>
<h3 id="SBYDB-GUID-324EBFC6-5358-419A-AD4A-E457273E6560" class="sect3"><span class="enumeration_section">15.2.2</span> Flashing Back a Failed Primary Database into a Logical Standby Database</h3>
<div>
<div class="section">
<p>These steps assume that the Oracle Data Guard configuration has already completed a failover involving a logical standby database and that Flashback Database has been enabled on the old primary database. This procedure brings the old primary database back into the Oracle Data Guard configuration as a new logical standby database without having to formally instantiate it from the new primary database.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Determine the flashback SCN and the recovery SCN. The flashback SCN is the SCN to which the failed primary database is flashed back. The recovery SCN is the SCN to which the failed primary database is recovered. Issue the following query on the new primary to identify these SCNs:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT merge_change# AS FLASHBACK_SCN, processed_change# AS RECOVERY_SCN -
&gt; FROM DBA_LOGSTDBY_HISTORY -
&gt; WHERE stream_sequence# = (SELECT MAX(stream_sequence#)-1 -
&gt; FROM DBA_LOGSTDBY_HISTORY);
</pre></div>
</li>
<li class="stepexpand"><span>Flash back the failed primary database to the flashback SCN identified in the previous step:</span>
<div>
<pre dir="ltr">SQL&gt; FLASHBACK DATABASE TO SCN <span class="italic">flashback_scn</span>;
</pre></div>
</li>
<li class="stepexpand"><span>Convert the failed primary into a physical standby, and remount the standby database in preparation for recovery:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE CONVERT TO PHYSICAL STANDBY;
</pre></div>
</li>
<li class="stepexpand"><span>Configure the <code class="codeph">FAL_SERVER</code> parameter to enable automatic recovery of log files. Issue the following statement on the physical standby (failed primary):</span>
<div>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET FAL_SERVER=&#39;&lt;tns_name_to_new_primary&gt;&#39;;
</pre></div>
</li>
<li class="stepexpand"><span>Remove any archive logs created at the time of or, after the failover operation, from the failed primary database. If the failed primary database was isolated from the standby, it could have divergent archive logs that are not consistent with the current primary database. To ensure these divergent archive logs are never applied, they must be deleted from backups and the fast recovery area. You can use the following RMAN command to delete the relevant archive logs from the fast recovery area:</span>
<div>
<pre dir="ltr">RMAN&gt; DELETE FORCE ARCHIVELOG FROM SCN ARCHIVE_SCN;
</pre>
<p>Once deleted, these divergent logs and subsequent transactions can never be recovered.</p>
</div>
</li>
<li class="stepexpand"><span>Recover until the recovery SCN identified in Step 1:</span>
<div>
<pre dir="ltr">SQL&gt; RECOVER MANAGED STANDBY DATABASE UNTIL CHANGE <span class="italic">recovery_scn</span>;
</pre></div>
</li>
<li class="stepexpand"><span>Enable the database guard:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE GUARD ALL;
</pre></div>
</li>
<li class="stepexpand"><span>Activate the physical standby to become a primary database:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE ACTIVATE STANDBY DATABASE;
</pre></div>
</li>
<li class="stepexpand"><span>Open the database:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE OPEN;
</pre></div>
</li>
<li class="stepexpand"><span>Create a database link to the new primary, and start SQL Apply:</span>
<div>
<pre dir="ltr">SQL&gt; CREATE PUBLIC DATABASE LINK <span class="italic">mylink</span> -
&gt; CONNECT TO <span class="italic">system</span> IDENTIFIED BY <span class="italic">password</span> -
&gt; USING &#39;<span class="italic">service_name_of_new_primary_database</span>&#39;;

SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY NEW PRIMARY <span class="italic">mylink</span>;
</pre>
<p>The role reversal is now complete.</p>
</div>
</li>
</ol>
</div>
</div>
<a id="SBYDB4890"></a>
<div class="props_rev_3"><a id="GUID-A6260CFC-7ABA-4478-9211-BC665077725B"></a>
<h3 id="SBYDB-GUID-A6260CFC-7ABA-4478-9211-BC665077725B" class="sect3"><span class="enumeration_section">15.2.3</span> Flashing Back a Logical Standby Database to a Specific Applied SCN</h3>
<div>
<div class="section">
<p>One of the benefits of a standby database is that Flashback Database can be performed on the standby database without affecting the primary database service. Flashing back a database to a specific point in time is a straightforward task, however on a logical standby database, you may want to flash back to a time just before a known transaction was committed. Such a need can arise when configuring a logical standby database with a new primary database after a failover.</p>
<p>The following steps describe how to use Flashback Database and SQL Apply to recover to a known applied SCN.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Once you have determined the known SCN at the primary (APPLIED_SCN), issue the following query to determine the corresponding SCN at the logical standby database, to use for the flashback operation:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT DBMS_LOGSTDBY.MAP_PRIMARY_SCN (PRIMARY_SCN =&gt; APPLIED_SCN) -
&gt; AS TARGET_SCN FROM DUAL;
</pre></div>
</li>
<li class="stepexpand"><span>Issue the following SQL statements to flash back the logical standby database to the specified SCN, and open the logical standby database with the RESETLOGS option:</span>
<div>
<pre dir="ltr">SQL&gt; SHUTDOWN;
SQL&gt; STARTUP MOUNT EXCLUSIVE;
SQL&gt; FLASHBACK DATABASE TO SCN &lt;TARGET_SCN&gt;;
SQL&gt; ALTER DATABASE OPEN RESETLOGS;
</pre></div>
</li>
<li class="stepexpand"><span>Issue the following query to confirm SQL Apply has applied less than or up to the <code class="codeph">APPLIED_SCN</code>.</span>
<div>
<pre dir="ltr">SQL&gt; SELECT APPLIED_SCN FROM V$LOGSTDBY_PROGRESS;
</pre></div>
</li>
</ol>
</div>
</div>
</div>
<a id="SBYDB4891"></a>
<div class="props_rev_3"><a id="GUID-BAA5ED38-29A0-4E8D-8435-AA083D19C13E"></a>
<h2 id="SBYDB-GUID-BAA5ED38-29A0-4E8D-8435-AA083D19C13E" class="sect2"><span class="enumeration_section">15.3</span> Using Flashback Database After Issuing an Open Resetlogs Statement</h2>
<div>
<p>Suppose an error has occurred on the primary database in an Oracle Data Guard configuration in which the standby database is using real-time apply. In this situation, the same error is applied on the standby database.</p>
<p>However, if Flashback Database is enabled, you can revert the primary and standby databases back to their pre-error condition by issuing the <code class="codeph">FLASHBACK DATABASE</code> and <code class="codeph">OPEN RESETLOGS</code> statements on the primary database, and then issuing a similar <code class="codeph">FLASHBACK STANDBY DATABASE</code> statement on the standby database before restarting apply services. (If Flashback Database is not enabled, you need to re-create the standby database, as described in <a href="create_ps.htm#GUID-B511FB6E-E3E7-436D-94B5-071C37550170">Creating a Physical Standby Database</a> and <a href="create_ls.htm#GUID-3666CA35-D993-44B6-8D70-A2B8B9EC8B2E">Creating a Logical Standby Database</a> , after the point-in-time recovery was performed on the primary database.)</p>
</div>
<a id="SBYDB4892"></a>
<div class="props_rev_3"><a id="GUID-09129494-CD98-44B6-821F-A4C2CB5AEE08"></a>
<h3 id="SBYDB-GUID-09129494-CD98-44B6-821F-A4C2CB5AEE08" class="sect3"><span class="enumeration_section">15.3.1</span> Flashing Back a Physical Standby Database to a Specific Point-in-Time</h3>
<div>
<div class="section">
<p>The following steps describe how to avoid re-creating a physical standby database after you issued the <code class="codeph">OPEN RESETLOGS</code> statement on the primary database.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Determine the SCN before the RESETLOGS operation occurred. For example, on the primary database, use the following query to obtain the value of the system change number (SCN) that is 2 SCNs before the <code class="codeph">RESETLOGS</code> operation occurred on the primary database:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT TO_CHAR(RESETLOGS_CHANGE# - 2) FROM V$DATABASE;
</pre></div>
</li>
<li class="stepexpand"><span>On the standby database, obtain the current SCN with the following query:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT TO_CHAR(CURRENT_SCN) FROM V$DATABASE;
</pre></div>
</li>
<li class="stepexpand"><span>If the value of <code class="codeph">CURRENT_SCN</code> is larger than the value of resetlogs_change# - 2, issue the following statement to flash back the standby database.</span>
<div>
<pre dir="ltr">SQL&gt; FLASHBACK STANDBY DATABASE TO SCN resetlogs_change# -2;
</pre>
<ul style="list-style-type: disc;">
<li>
<p>If the value of <code class="codeph">CURRENT_SCN</code> is less than the value of the resetlogs_change# - 2, skip to Step 4.</p>
</li>
<li>
<p>If the standby database&#39;s SCN is far enough behind the primary database&#39;s SCN, and the new branch of redo from the <code class="codeph">OPEN RESETLOGS</code> statement has been registered at the standby, then apply services can continue through the <code class="codeph">OPEN RESETLOGS</code> statement without stopping. In this case, flashing back the database is unnecessary because apply services do not stop upon reaching the <code class="codeph">OPEN RESETLOGS</code> statement in the redo data.</p>
</li>
</ul>
</div>
</li>
<li class="stepexpand"><span>To start Redo Apply on the physical standby database, issue the following statement:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;
</pre>
<p>The standby database is now ready to receive and apply redo from the primary database.</p>
</div>
</li>
</ol>
</div>
</div>
<a id="SBYDB4893"></a>
<div class="props_rev_3"><a id="GUID-A2191DBB-AA91-4C42-8F01-7B7E9529F465"></a>
<h3 id="SBYDB-GUID-A2191DBB-AA91-4C42-8F01-7B7E9529F465" class="sect3"><span class="enumeration_section">15.3.2</span> Flashing Back a Logical Standby Database to a Specific Point-in-Time</h3>
<div>
<div class="section">
<p>The following steps describe how to avoid re-creating a logical standby database after you have flashed back the primary database and opened it by issuing an <code class="codeph">OPEN RESETLOGS</code> statement.</p>
<div class="infobox-note" id="GUID-A2191DBB-AA91-4C42-8F01-7B7E9529F465__GUID-D3616975-2A5C-469E-8433-25CC18CEF600">
<p class="notep1">Note:</p>
<p>If SQL Apply detects the occurrence of a resetlogs operation at the primary database, it automatically mines the correct branch of redo, if it is possible to do so without having to flashback the logical standby database. Otherwise, SQL Apply stops with an error <code class="codeph">ORA-1346: LogMiner processed redo beyond specified reset log scn</code>. In this section, it is assumed that SQL Apply has already stopped with such an error.</p>
</div>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>On the primary database, use the following query to obtain the value of the system change number (SCN) that is 2 SCNs before the <code class="codeph">RESETLOGS</code> operation occurred on the primary database:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT TO_CHAR(RESETLOGS_CHANGE# - 2) AS FLASHBACK_SCN FROM V$DATABASE;
</pre></div>
</li>
<li class="stepexpand"><span>Determine the target SCN for flashback operation at the logical standby.</span>
<div>
<p>In this step, the <code class="codeph">FLASHBACK_SCN</code> value for <code class="codeph">PRIMARY_SCN</code> is from Step 1.</p>
<pre dir="ltr">SQL&gt; SELECT DBMS_LOGSTDBY.MAP_PRIMARY_SCN (PRIMARY_SCN =&gt; FLASHBACK_SCN) -
&gt; AS TARGET_SCN FROM DUAL;
</pre></div>
</li>
<li class="stepexpand"><span>Issue the following SQL statements to flash back the logical standby database to the specified SCN, and open the logical standby database with the <code class="codeph">RESETLOGS</code> option:</span>
<div>
<pre dir="ltr">SQL&gt; SHUTDOWN;
SQL&gt; STARTUP MOUNT EXCLUSIVE;
SQL&gt; FLASHBACK DATABASE TO SCN &lt;TARGET_SCN&gt;;
SQL&gt; ALTER DATABASE OPEN RESETLOGS;
</pre></div>
</li>
<li class="stepexpand"><span>Confirm that a log file from the primary&#39;s new branch is registered before SQL apply is started. Issue the following query on the primary database:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT resetlogs_id FROM V$DATABASE_INCARNATION WHERE status = &#39;CURRENT&#39;;
</pre>
<p>Issue the following query on the standby database:</p>
<pre dir="ltr">SQL&gt; SELECT * FROM DBA_LOGSTDBY_LOG WHERE resetlogs_id = <span class="italic">resetlogs_id_at_primary</span>;
</pre>
<p>If one or more rows are returned, it confirms that there are registered logfiles from the primary&#39;s new branch.</p>
</div>
</li>
<li class="stepexpand"><span>Start SQL Apply:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY IMMEDIATE;
</pre></div>
</li>
</ol>
</div>
</div>
</div>
<a id="SBYDB00920"></a>
<div class="props_rev_3"><a id="GUID-BD9E85AB-D812-4659-9C85-26CDFF115A8A"></a>
<h2 id="SBYDB-GUID-BD9E85AB-D812-4659-9C85-26CDFF115A8A" class="sect2"><span class="enumeration_section">15.4</span> Recovering After the NOLOGGING Clause Is Specified</h2>
<div>
<p>In so<a id="d36990e1370" class="indexterm-anchor"></a>me SQL statements, the user has the option of specifying the <code class="codeph">NOLOGGING</code> clause, which indicates that the database operation is not logged in the online redo log file. Even though the user specifies the clause, a redo record is still written to the online redo log file. However, there is no data associated with this record. This can result in log application or data access errors at the standby site and manual recovery might be required to resume applying log files.</p>
<div class="infobox-note" id="GUID-BD9E85AB-D812-4659-9C85-26CDFF115A8A__GUID-36A34C4B-D0F2-44D1-A061-449EDBE2BCC4">
<p class="notep1">Note:</p>
<p>To avoid these problems, Oracle recommends that you always specify the <code class="codeph">FORCE LOGGING</code> clause in the <a id="d36990e1386" class="indexterm-anchor"></a><a id="d36990e1390" class="indexterm-anchor"></a><code class="codeph">CREATE DATABASE</code> or <code class="codeph">ALTER DATABASE</code> statements. See the <a class="olink ADMIN11096" target="_blank" href="../ADMIN/create.htm#ADMIN11096"><span class="italic">Oracle Database Administrator&#39;s Guide.</span></a></p>
</div>
</div>
<a id="SBYDB4894"></a>
<div class="props_rev_3"><a id="GUID-BB804A80-7F19-4087-BAFA-97552C1DAAEF"></a>
<h3 id="SBYDB-GUID-BB804A80-7F19-4087-BAFA-97552C1DAAEF" class="sect3"><span class="enumeration_section">15.4.1</span> Recovery Steps for Logical Standby Databases</h3>
<div>
<div class="section">
<p>For logical standby databases, when SQL Apply encounters a redo record for an operation performed on an interesting table with the <code class="codeph">NOLOGGING</code> clause, it stops with the following error: <code class="codeph">ORA-16211 unsupported record found in the archived redo log</code>.</p>
<p>To recover after the <code class="codeph">NOLOGGING</code> clause is specified, re-create one or more tables from the primary database, as described in <a href="manage_ls.htm#GUID-DD88E3D6-D6DB-4175-BB59-F048B9A87BAA">Adding or Re-Creating Tables On a Logical Standby Database</a>.</p>
<div class="infobox-note" id="GUID-BB804A80-7F19-4087-BAFA-97552C1DAAEF__GUID-E53772FF-F49B-4C21-B51B-93C133344020">
<p class="notep1">Note:</p>
<p>In general, use of the <code class="codeph">NOLOGGING</code> clause is not recommended. Optionally, if you know in advance that operations using the <code class="codeph">NOLOGGING</code> clause will be performed on certain tables in the primary database, you might want to prevent the application of SQL statements associated with these tables to the logical standby database by using the <code class="codeph">DBMS_LOGSTDBY.SKIP</code> procedure.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4895"></a>
<div class="props_rev_3"><a id="GUID-DDCEF91D-3D6A-45EC-B0ED-8BEBC32FC18B"></a>
<h3 id="SBYDB-GUID-DDCEF91D-3D6A-45EC-B0ED-8BEBC32FC18B" class="sect3"><span class="enumeration_section">15.4.2</span> Recovery Steps for Physical Standby Databases</h3>
<div>
<div class="section">
<p>When the archived redo log file is copied to the standby site and applied to the physical standby database, a portion of the data file is unusable and is marked as being unrecoverable. When you either fail over to the physical standby database, or open the standby database for read-only access, and attempt to read the range of blocks that are marked as <code class="codeph">UNRECOVERABLE</code>, you will see error messages similar to the following:</p>
<pre dir="ltr">ORA-01578: ORACLE data block corrupted (file # 1, block # 2521)
ORA-01110: data file 1: &#39;/oracle/dbs/stdby/tbs_1.dbf&#39;
ORA-26040: Data block was loaded using the NOLOGGING option
</pre>
<p>To recover after the <code class="codeph">NOLOGGING</code> clause is specified, you need to copy the data file that contains the missing redo data from the primary site to the physical standby site. Perform the following steps:</p>
<ol>
<li>
<p>Determine which data files should be copied, as follows:</p>
<ol>
<li>
<p><a id="d36990e1590" class="indexterm-anchor"></a><a id="d36990e1594" class="indexterm-anchor"></a><a id="d36990e1596" class="indexterm-anchor"></a>Query the primary database:</p>
<pre dir="ltr">SQL&gt; SELECT NAME, UNRECOVERABLE_CHANGE# FROM V$DATAFILE;

NAME                                                  UNRECOVERABLE
----------------------------------------------------- -------------
/oracle/dbs/tbs_1.dbf                                       5216
/oracle/dbs/tbs_2.dbf                                          0
/oracle/dbs/tbs_3.dbf                                          0
/oracle/dbs/tbs_4.dbf                                          0
4 rows selected.
</pre></li>
<li>
<p>Query the standby database:</p>
<pre dir="ltr">SQL&gt; SELECT NAME, UNRECOVERABLE_CHANGE# FROM V$DATAFILE;

NAME                                                  UNRECOVERABLE
----------------------------------------------------- -------------
/oracle/dbs/stdby/tbs_1.dbf                                 5186
/oracle/dbs/stdby/tbs_2.dbf                                    0
/oracle/dbs/stdby/tbs_3.dbf                                    0
/oracle/dbs/stdby/tbs_4.dbf                                    0
4 rows selected.
</pre></li>
<li>
<p>Compare the query results of the primary and standby databases.</p>
<p>Compare the value of the <code class="codeph">UNRECOVERABLE_CHANGE#</code> column in both query results. If the value of the <code class="codeph">UNRECOVERABLE_CHANGE#</code> column in the primary database is greater than the same column in the standby database, then the data file needs to be copied from the primary site to the standby site.</p>
<p>In this example, the value of the <code class="codeph">UNRECOVERABLE_CHANGE#</code> in the primary database for the <code class="codeph">tbs_1.dbf</code> data file is greater, so you need to copy the <code class="codeph">tbs_1.dbf</code> data file to the standby site.</p>
</li>
</ol>
</li>
<li>
<p>On the primary site, back up the data file you need to copy to the standby site by issuing the following SQL statements:</p>
<pre dir="ltr">SQL&gt; <a id="d36990e1635" class="indexterm-anchor"></a><a id="d36990e1637" class="indexterm-anchor"></a>ALTER TABLESPACE system BEGIN BACKUP;
SQL&gt; EXIT;
</pre>
<p>Copy the needed data file to a local directory.</p>
<pre dir="ltr">SQL&gt; ALTER TABLESPACE system END BACKUP;
</pre></li>
<li>
<p>Copy the data file that contains the missing redo data from the primary site to a location on the physical standby site where files related to recovery are stored.</p>
</li>
<li>
<p>Issue the following SQL statement on the standby database to restart Redo Apply:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT FROM SESSION;
</pre>
<p>You might get the following error messages (possibly in the alert log) when you try to restart Redo Apply:</p>
<pre dir="ltr">ORA-00308: cannot open archived log &#39;standby1&#39;
ORA-27037: unable to obtain file status
SVR4 Error: 2: No such file or directory
Additional information: 3
ORA-01547: warning: RECOVER succeeded but OPEN RESETLOGS would get error below
ORA-01152: file 1 was not restored from a sufficiently old backup
ORA-01110: data file 1: &#39;/oracle/dbs/stdby/tbs_1.dbf&#39;
</pre>
<p>If you get the <code class="codeph">ORA-00308</code> error and Redo Apply does not terminate automatically, you can cancel recovery by issuing the following SQL statement from another terminal window:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
</pre>
<p>These error messages are returned when one or more log files in the archive gap have not been successfully applied. If you receive these errors, manually resolve the gaps, and repeat Step 4. See <a href="log_transport.htm#GUID-97EB433B-4125-4082-9276-2454349BC4F8">Manual Gap Resolution</a> for information about manually resolving an archive gap.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4896"></a>
<div class="props_rev_3"><a id="GUID-55881B7E-55C1-4342-94DA-A75739504980"></a>
<h3 id="SBYDB-GUID-55881B7E-55C1-4342-94DA-A75739504980" class="sect3"><span class="enumeration_section">15.4.3</span> Determining If a Backup Is Required After Unrecoverable Operations</h3>
<div>
<div class="section">
<p><a id="d36990e1748" class="indexterm-anchor"></a><a id="d36990e1752" class="indexterm-anchor"></a><a id="d36990e1756" class="indexterm-anchor"></a><a id="d36990e1758" class="indexterm-anchor"></a>If you performed unrecoverable operations on your primary database, determine if a new backup operation is required by following these steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Query the <code class="codeph">V$DATAFILE</code> view on the primary database to determine the <span class="bold">system change number (SCN)</span> or the time at which the Oracle database generated the most recent invalidated redo data.</span></li>
<li class="stepexpand"><span>Issue the following SQL statement on the primary database to determine if you need to perform another backup:</span>
<div>
<pre dir="ltr">SQL&gt; SELECT UNRECOVERABLE_CHANGE#,-
&gt; TO_CHAR(UNRECOVERABLE_TIME, &#39;mm-dd-yyyy hh:mi:ss&#39;) -
&gt; FROM V$DATAFILE;
</pre></div>
</li>
<li class="stepexpand"><span>If the query in the previous step reports an unrecoverable time for a data file that is more recent than the time when the data file was last backed up, then make another backup of the data file in question.</span></li>
</ol>
<div class="section">
<p>See <a class="olink REFRN30050" target="_blank" href="../REFRN/GUID-7BF7955C-9705-40F4-B2F6-5D7F3A32DD30.htm#REFRN30050"><span class="italic">Oracle Database Reference</span></a> for more information about the <code class="codeph">V$DATAFILE</code> view.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB4897"></a>
<div class="props_rev_3"><a id="GUID-6FB574E5-2F3A-4C9E-A3F0-7C9154B0F540"></a>
<h2 id="SBYDB-GUID-6FB574E5-2F3A-4C9E-A3F0-7C9154B0F540" class="sect2"><span class="enumeration_section">15.5</span> Creating a Standby Database That Uses OMF or Oracle ASM</h2>
<div>
<div class="section">
<p><a href="create_ps.htm#GUID-B511FB6E-E3E7-436D-94B5-071C37550170">Creating a Physical Standby Database</a> and <a href="create_ls.htm#GUID-3666CA35-D993-44B6-8D70-A2B8B9EC8B2E">Creating a Logical Standby Database</a> described how to create physical and logical standby databases. This section augments the discussions in those chapters with additional steps that must be performed if the primary database uses Oracle Managed Files (OMF) or <a id="d36990e1885" class="indexterm-anchor"></a><a id="d36990e1889" class="indexterm-anchor"></a><a id="d36990e1893" class="indexterm-anchor"></a>Oracle Automatic Storage Management (Oracle ASM).</p>
<div class="infobox-note" id="GUID-6FB574E5-2F3A-4C9E-A3F0-7C9154B0F540__GUID-DE114C1B-01F2-4091-8F28-DDEE323CEDC7">
<p class="notep1">Note:</p>
<p>The discussion in this section is presented at a level of detail that assumes you already know how to create a physical standby database and are an experienced user of the RMAN, OMF, and Oracle ASM features. For more information, see:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="create_ps.htm#GUID-B511FB6E-E3E7-436D-94B5-071C37550170">Creating a Physical Standby Database</a> , <a href="create_ls.htm#GUID-3666CA35-D993-44B6-8D70-A2B8B9EC8B2E">Creating a Logical Standby Database</a> , and <a href="rcmbackp.htm#GUID-82731D59-A20F-45DD-A235-267B3B0E38C5">Creating a Standby Database with Recovery Manager</a> for information about creating physical and logical standby databases</p>
</li>
<li>
<p><a class="olink ADMIN003" target="_blank" href="../ADMIN/omf.htm#ADMIN003"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about OMF</p>
</li>
<li>
<p><a class="olink OSTMG036" target="_blank" href="../OSTMG/GUID-BC612D35-5399-4A35-843E-CF76E3D3CDB5.htm#OSTMG036"><span class="italic">Oracle Automatic Storage Management Administrator&#39;s Guide</span></a> for more information about Oracle ASM</p>
</li>
<li>
<p><a class="olink BRADV89346" target="_blank" href="../BRADV/rcmquick.htm#BRADV89346"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> and <a class="olink RCMRF001" target="_blank" href="../RCMRF/rcmcomma.htm#RCMRF001"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for information about RMAN</p>
</li>
</ul>
</div>
<p>Perform the following tasks to prepare for standby database creation:</p>
<ol>
<li>
<p>Enable forced logging on the primary database.</p>
</li>
<li>
<p>Enable archiving on the primary database.</p>
</li>
<li>
<p>Set all necessary initialization parameters on the primary database.</p>
</li>
<li>
<p>Create an initialization parameter file for the standby database.</p>
</li>
<li>
<p>If the primary database is configured to use OMF, then Oracle recommends that the standby database be configured to use OMF, too. To do this, set the <code class="codeph">DB_CREATE_FILE_DEST</code> and <code class="codeph">DB_CREATE_ONLINE_LOG_DEST_</code><span class="italic"><code class="codeph">n</code></span> initialization parameters to appropriate values. Maintenance and future role transitions are simplified if the same disk group names are used for both the primary and standby databases.</p>
<div class="infobox-note" id="GUID-6FB574E5-2F3A-4C9E-A3F0-7C9154B0F540__GUID-C66C9A8E-0ED7-451F-90BE-7DE0925F7DE4">
<p class="notep1">Note:</p>
<p>If OMF parameters are set on the standby, then new files on that standby are always created as OMF, regardless of how they were created on the primary. Therefore, if both the <code class="codeph">DB_FILE_NAME_CONVERT</code> and <code class="codeph">DB_CREATE_FILE_DEST</code> parameters are set on the standby, the <code class="codeph">DB_CREATE_FILE_DEST</code> parameter takes precedence.</p>
</div>
</li>
<li>
<p>Set the <code class="codeph">STANDBY_FILE_MANAGEMENT</code> initialization parameter to <code class="codeph">AUTO</code>.</p>
</li>
<li>
<p>Configure Oracle Net, as required, to allow connections to the standby database.</p>
</li>
<li>
<p>Configure redo transport authentication as described in <a href="create_ps.htm#GUID-0DC30726-3471-4588-BFE0-9CA0736328E2">Configure Redo Transport Authentication</a>.</p>
</li>
<li>
<p>Start the standby database instance without mounting the control file.</p>
</li>
</ol>
<p>Perform the following tasks to create the standby database:</p>
<ol>
<li>
<p>If the standby database is going to use Oracle ASM, create an Oracle ASM instance if one does not already exist on the standby database system.</p>
</li>
<li>
<p>Use the RMAN <code class="codeph">BACKUP</code> command to create a backup set that contains a copy of the primary database&#39;s data files, archived log files, and a standby control file.</p>
</li>
<li>
<p>Use the RMAN <code class="codeph">DUPLICATE FOR STANDBY</code> command to copy the data files, archived redo log files and standby control file in the backup set to the standby database&#39;s storage area.</p>
<p>The <code class="codeph">DUPLICATE FOR STANDBY</code> command performs the actual data movement at the standby instance. If the backup set is on tape, the media manager must be configured so that the standby instance can read the backup set. If the backup set is on disk, the backup pieces must be readable by the standby instance, either by making their primary path names available through Network File Storage (NFS), or by copying them to the standby system and using RMAN <code class="codeph">CATALOG BACKUPPIECE</code> command to catalog the backup pieces before restoring them.</p>
</li>
</ol>
<p>After you successfully complete these steps, continue with the steps in <a href="create_ps.htm#GUID-AAA6D97B-A345-4825-A320-B662BB16E2ED">Verify the Physical Standby Database Is Performing Properly</a>, to verify the configuration of the physical standby database.</p>
<p>To create a logical standby database, continue with the standby database creation process described in <a href="create_ls.htm#GUID-3666CA35-D993-44B6-8D70-A2B8B9EC8B2E">Creating a Logical Standby Database</a> , but with the following modifications:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>For a logical standby database, setting the <code class="codeph">DB_CREATE_FILE_DEST</code> parameter does not force the creation of OMF filenames. However, if this parameter was set on the primary database, it must also be set on the standby database.</span></li>
<li class="stepexpand"><span>After creating a logical standby control file on the primary system, do not use an operating system command to copy this file to the standby system. Instead, use the RMAN <code class="codeph">RESTORE CONTROLFILE</code> command to restore a copy of the logical standby control file to the standby system.</span></li>
<li class="stepexpand"><span>If the primary database uses OMF files, use RMAN to update the standby database control file to use the new OMF files created on the standby database. To perform this operation, connect only to the standby database, as shown in the following example:</span>
<div>
<pre dir="ltr">&gt; RMAN TARGET sys@lstdby

target database Password: <span class="italic">password</span>

RMAN&gt; CATALOG START WITH &#39;+stby_diskgroup&#39;;
RMAN&gt; SWITCH DATABASE TO COPY;
</pre></div>
</li>
</ol>
<div class="section">
<p>After you successfully complete these steps, continue with the steps in <a href="create_ls.htm#GUID-68777C01-83F6-4CCF-9BA2-547ED180138D">Open the Logical Standby Database</a> to start, recover, and verify the logical standby database.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB5074"></a><a id="SBYDB00930"></a>
<div class="props_rev_3"><a id="GUID-8F4E7807-6013-480F-8780-088F5639732F"></a>
<h2 id="SBYDB-GUID-8F4E7807-6013-480F-8780-088F5639732F" class="sect2"><span class="enumeration_section">15.6</span> Recovering From Lost-Write Errors on a Primary Database</h2>
<div>
<div class="section">
<p>During media recovery in an Oracle Data Guard configuration, a physical standby database can be used to detect lost-write data corruption errors on the primary database. This is done by comparing SCNs of blocks stored in the redo log on the primary database to SCNs of blocks on the physical standby database. If the SCN of the block on the primary database is lower than the SCN on the standby database, then there was a lost-write error on the primary database.</p>
<p>In such a situation, if lost write detection (set with the <a class="olink REFRN10268" target="_blank" href="../REFRN/GUID-52B4045A-5500-4C02-AFEB-80121659C0EE.htm#REFRN10268"><code class="codeph">DB_LOST_WRITE_PROTECT</code></a> initialization parameter) is enabled at both the primary and standby, then a recovery attempt at the standby results in an <code class="codeph">ORA-752</code> error. If lost write detection is not enabled, then a recovery attempt results in an <code class="codeph">ORA-600</code> <code class="codeph">[3020]</code> error. However, not all <code class="codeph">ORA-600</code> <code class="codeph">[3020]</code> errors are due to lost writes at the primary. Therefore, before following the guidelines given in this section, work with your Oracle Support representative to determine whether the root cause for the <code class="codeph">ORA-600</code> <code class="codeph">[3020]</code> error was indeed a lost write that occurred on the primary. Also see &#34;Resolving ORA-752 or ORA-600 [3020] During Standby Recovery&#34; in the My Oracle Support Note 1265884.1 at <a href="http://support.oracle.com" target="_blank"><code class="codeph">http://support.oracle.com</code></a>.</p>
<div class="infobox-note" id="GUID-8F4E7807-6013-480F-8780-088F5639732F__GUID-BE3D28CD-A912-4D5E-B4A8-43DD627E4E3D">
<p class="notep1">Note:</p>
<p>Because lost-write errors are detected only when a block is read into the cache by a primary and the corresponding redo is later compared to the block on the standby, there may be undetected stale blocks on both the primary and the standby that have not yet been read and verified. These stale blocks do not affect operation of the current database because until those blocks are read, all blocks that have been used up to the SCN of the currently applied redo on the standby to do queries or updates were verified by the standby.</p>
</div>
<p>When a primary lost-write error is detected on the standby, one or more block error messages similar to the following for each stale block are printed in the alert file of the standby database:</p>
<pre dir="ltr">Tue Dec 12 19:09:48 2006
STANDBY REDO APPLICATION HAS DETECTED THAT THE PRIMARY DATABASE
LOST A DISK WRITE OF BLOCK 26, FILE 7
NO REDO AT OR AFTER SCN 389667 CAN BE USED FOR RECOVERY.
.
.
.
</pre>
<p>The alert file then shows that an <code class="codeph">ORA-00752</code> error is raised on the standby database and the managed recovery is cancelled:</p>
<pre dir="ltr">Slave exiting with ORA-752 exception
Errors in file /oracle/log/diag/rdbms/dgstwrite2/stwrite2/trace/stwrite2_pr00_23532.trc:
ORA-00752: recovery detected a lost write of a data block
ORA-10567: Redo is inconsistent with data block (file# 7, block# 26)
ORA-10564: tablespace TBS_2
ORA-01110: data file 7: &#39;/oracle/dbs/btbs_21.f&#39;
ORA-10561: block type &#39;TRANSACTION MANAGED DATA BLOCK&#39;, data object# 57503
.
.
.
</pre>
<p>The standby database is then recovered to a consistent state, without any corruption to its data files caused by this error, at the SCN printed in the alert file:</p>
<pre dir="ltr">Recovery interrupted!
Recovered data files to a consistent state at change 389569
</pre>
<p>This last message may appear significantly later in the alert file and it may have a lower SCN than the block error messages. Also, the primary database may operate without visible errors even though its data files may already be corrupted.</p>
<p>The recommended procedure to recover from such errors is a failover to the physical standby, as described in the following steps.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Steps to Failover to a Physical Standby After Lost-Writes Are Detected on the Primary</p>
<ol>
<li>
<p>Shut down the primary database. All data at or after the SCN printed in the block error messages is lost.</p>
</li>
<li>
<p>Issue the following SQL statement on the standby database to convert it to a primary:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE ACTIVATE STANDBY DATABASE;

Database altered.

Tue Dec 12 19:15:23 2006
alter database activate standby database
ALTER DATABASE ACTIVATE [PHYSICAL] STANDBY DATABASE (stwrite2)
RESETLOGS after incomplete recovery UNTIL CHANGE 389569
Resetting resetlogs activation ID 612657558 (0x24846996)
Online log /oracle/dbs/bt_log1.f: Thread 1 Group 1 was previously cleared
Online log /oracle/dbs/bt_log2.f: Thread 1 Group 2 was previously cleared
Standby became primary SCN: 389567
Tue Dec 12 19:15:23 2006
Setting recovery target incarnation to 3
Converting standby mount to primary mount.
ACTIVATE STANDBY: Complete - Database mounted as primary (stwrite2)
Completed: alter database activate standby database
</pre></li>
<li>
<p>Back up the new primary. Performing a backup immediately is a necessary safety measure, because you cannot recover changes made after the failover without a complete backup copy of the database. As a result of the failover, the original primary database can no longer participate in the Oracle Data Guard configuration, and all other standby databases now receive and apply redo data from the new primary database.</p>
</li>
<li>
<p>Open the new primary database.</p>
</li>
<li>
<p>An optional step is to recreate the failed primary as a physical standby. You can do this using the database backup taken at the new primary in step 3. (You cannot use flashback database or the Oracle Data Guard broker to reinstantiate the old primary database in this situation.) Be aware that a physical standby created using the backup taken from the new primary has the same data files as the old standby. Therefore, any undetected lost writes that the old standby had before it was activated are not detected by the new standby, since the new standby compares the same blocks. Any new lost writes that happen on either the primary or the standby are detected.</p>
</li>
</ol>
<div class="infoboxnotealso" id="GUID-8F4E7807-6013-480F-8780-088F5639732F__GUID-41AAD1E5-3136-42B0-9410-F339D21EAEBE">
<p class="notep1">See Also:</p>
<p><a class="olink BRADV89476" target="_blank" href="../BRADV/rcmconfa.htm#BRADV89476"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for more information about enabling lost-write detection</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4898"></a>
<div class="props_rev_3"><a id="GUID-B734C79F-A2BB-43A5-89D7-7733089FB577"></a>
<h2 id="SBYDB-GUID-B734C79F-A2BB-43A5-89D7-7733089FB577" class="sect2"><span class="enumeration_section">15.7</span> Converting a Failed Primary into a Standby Database Using RMAN Backups</h2>
<div>
<p>To convert a failed primary database, Oracle recommends that you enable the Flashback Database feature on the primary and follow the procedure described in either <a href="scenarios.htm#GUID-C7C39BEC-A841-48D1-BE4B-9BB49C65B9C9">Flashing Back a Failed Primary Database into a Physical Standby Database</a> or <a href="scenarios.htm#GUID-324EBFC6-5358-419A-AD4A-E457273E6560">Flashing Back a Failed Primary Database into a Logical Standby Database</a>. The procedures in those sections describe the fastest ways to convert a failed primary into either a physical or logical standby. However, if Flashback Database was not enabled on the failed primary, you can still convert the failed primary into either a physical or logical standby using a local backup of the failed primary, as described in the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="scenarios.htm#GUID-433907DE-DF34-4CE6-989F-8F32F983FD99">Converting a Failed Primary into a Physical Standby Using RMAN Backups</a></p>
</li>
<li>
<p><a href="scenarios.htm#GUID-D93BA2CD-A50B-43A5-91C7-A719998057FC">Converting a Failed Primary into a Logical Standby Using RMAN Backups</a></p>
</li>
</ul>
</div>
<a id="SBYDB4899"></a>
<div class="props_rev_3"><a id="GUID-433907DE-DF34-4CE6-989F-8F32F983FD99"></a>
<h3 id="SBYDB-GUID-433907DE-DF34-4CE6-989F-8F32F983FD99" class="sect3"><span class="enumeration_section">15.7.1</span> Converting a Failed Primary into a Physical Standby Using RMAN Backups</h3>
<div>
<div class="section">
<p>The steps in this section describe how to convert a failed primary into a physical standby by using RMAN backups. This procedure requires that the <code class="codeph">COMPATIBLE</code> initialization parameter of the old primary be set to at least 11.0.0.</p>
<ol>
<li>
<p>On the new primary database, issue the following query to determine the SCN at which the old standby database became the new primary database:</p>
<pre dir="ltr">SQL&gt; SELECT TO_CHAR(STANDBY_BECAME_PRIMARY_SCN) FROM V$DATABASE;
</pre></li>
<li>
<p>Restore the database with a backup taken before the old primary had reached the SCN at which the standby became the new primary (<code class="codeph">standby_became_primary_scn)</code>. Then, perform a point-in-time recovery to recover the old primary to that same point.</p>
<p>Issue the following RMAN commands:</p>
<pre dir="ltr">RMAN&gt; RUN
    {
      SET UNTIL SCN &lt;standby_became_primary_scn + 1&gt;;
      RESTORE DATABASE;
      RECOVER DATABASE;
     }
</pre>
<p>With user-managed recovery, you can first restore the database manually. Typically, a backup taken a couple of hours before the failover would be old enough. You can then recover the failed primary using the following command:</p>
<pre dir="ltr">SQL&gt; RECOVER DATABASE USING BACKUP CONTROLFILE UNTIL CHANGE -
&gt;  &lt;standby_became_primary_scn + 1&gt;;
</pre>
<p>Unlike a reinstantiation that uses Flashback Database, this procedure adds one to <code class="codeph">standby_became_primary_scn</code>. For data files, flashing back to an SCN is equivalent to recovering up until that SCN plus one.</p>
</li>
<li>
<p>Perform the following steps on the old primary database:</p>
<ol>
<li>
<p>Issue the following statement on the old primary database:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE CONVERT TO PHYSICAL STANDBY;
</pre></li>
<li>
<p>Shut down and restart the database:</p>
<pre dir="ltr">SQL&gt; SHUTDOWN IMMEDIATE;
SQL&gt; STARTUP MOUNT;
</pre></li>
</ol>
</li>
<li>
<p>Issue the following command:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE OPEN READ ONLY;
</pre>
<p>The goal of this step is to synchronize the control file with the database by using a dictionary check. After this command, check the alert log for any actions suggested by the dictionary check. Typically, no user action is needed if the old primary was not in the middle of adding or dropping data files during the failover.</p>
</li>
<li>
<p>If you have purchased a license for the Oracle Active Data Guard option and would like to operate your physical standby database in active query mode, skip this step. Otherwise, bring your standby database to the mount state.</p>
<p>For example:</p>
<pre dir="ltr">SQL&gt; SHUTDOWN IMMEDIATE;
SQL&gt; STARTUP MOUNT;
</pre></li>
<li>
<p>Before the new standby database was created, the new primary database probably stopped transmitting redo to the remote destination. To restart redo transport services, perform the following steps on the new primary database:</p>
<ol>
<li>
<p>Issue the following query to see the current state of the archive destinations:</p>
<pre dir="ltr">SQL&gt; SELECT DEST_ID, DEST_NAME, STATUS, PROTECTION_MODE, DESTINATION, -
&gt; ERROR,SRL FROM V$ARCHIVE_DEST_STATUS;
</pre>
<pre dir="ltr"></pre></li>
<li>
<p>If necessary, enable the destination:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET LOG_ARCHIVE_DEST_STATE_<span class="variable">n</span>=ENABLE;
</pre></li>
<li>
<p>Perform a log switch to ensure the standby database begins receiving redo data from the new primary database, and verify it was sent successfully.</p>
<div class="infobox-note" id="GUID-433907DE-DF34-4CE6-989F-8F32F983FD99__GUID-D6298422-A64D-451F-887B-595FF2F7BEAC">
<p class="notep1">Note:</p>
<p>This is an important step in order for the old primary to become a new standby following the new primary. If this step is not done, the old primary may recover to an incorrect database branch. The only way to correct the problem then is to convert the old primary again.</p>
</div>
<p>At the SQL prompt, enter the following statements:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
SQL&gt; SELECT DEST_ID, DEST_NAME, STATUS, PROTECTION_MODE, DESTINATION, -
&gt; ERROR,SRL FROM V$ARCHIVE_DEST_STATUS;
</pre>
<p>On the new standby database, you may also need to change the <code class="codeph">LOG_ARCHIVE_DEST_</code><span class="italic"><code class="codeph">n</code></span> initialization parameters so that redo transport services do not transmit redo data to other databases. This step can be skipped if both the primary and standby database roles were set up with the <code class="codeph">VALID_FOR</code> attribute in one server parameter file (SPFILE). By doing this, the Oracle Data Guard configuration operates properly after a role transition.</p>
</li>
</ol>
</li>
<li>
<p>Start Redo Apply on the new physical standby database, as follows:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;
</pre>
<p>Once the failed primary database is restored and is running in the standby role, you can optionally perform a switchover to transition the databases to their original (pre-failure) roles. See <span class="q">&#34;<a href="role_management.htm#GUID-AAD70601-D248-4309-B8DD-F461EE31A5FF">Performing a Switchover to a Physical Standby Database</a>&#34;</span> for more information.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="SBYDB4900"></a>
<div class="props_rev_3"><a id="GUID-D93BA2CD-A50B-43A5-91C7-A719998057FC"></a>
<h3 id="SBYDB-GUID-D93BA2CD-A50B-43A5-91C7-A719998057FC" class="sect3"><span class="enumeration_section">15.7.2</span> Converting a Failed Primary into a Logical Standby Using RMAN Backups</h3>
<div>
<div class="section">
<p>The steps in this section describe how to convert a failed primary into a logical standby using RMAN backups.</p>
<ol>
<li>
<p>On the new primary database, issue the following query to determine the SCN to which you want to recover the failed primary database:</p>
<pre dir="ltr">SQL&gt; SELECT APPLIED_SCN RECOVERY_SCN FROM V$LOGSTDBY_PROGRESS;
</pre>
<p>Also on the new primary database, determine the SCN to use in dealing with archive logs, as follows:</p>
<ol>
<li>
<p>Ensure all standby redo logs have been archived. Issue the following query, looking for a value of <code class="codeph">NONE</code> to be returned. Depending on the size of the database and the number of logs needing to be archived, it could take some time before a status of <code class="codeph">NONE</code> is returned.</p>
<pre dir="ltr">SQL&gt; SELECT PENDING_ROLE_CHANGE_TASKS FROM V$DATABASE;
</pre></li>
<li>
<p>After a status of <code class="codeph">NONE</code> has been returned, run the following query to retrieve the SCN for dealing with archive logs as part of this recovery:</p>
<pre dir="ltr">SQL&gt; SELECT VALUE ARCHIVE_SCN FROM SYSTEM.LOGSTDBY$PARAMETERS -
&gt; WHERE NAME=&#39;STANDBY_BECAME_PRIMARY_SCN&#39;;
</pre></li>
</ol>
</li>
<li>
<p>Remove any archive logs created at the time of, or after the failover operation, from the failed primary database. If the failed primary database was isolated from the standby, it could have divergent archive logs that are not consistent with the current primary database. To ensure these divergent archive logs are never applied, they must be deleted from backups and the fast recovery area. You can use the following RMAN command to delete the relevant archive logs from the fast recovery area:</p>
<pre dir="ltr">RMAN&gt; DELETE ARCHIVELOG FROM SCN ARCHIVE_SCN;
</pre>
<p>Once deleted, these divergent logs and subsequent transactions can never be recovered.</p>
</li>
<li>
<p>On the new primary database, issue the following query to determine the minimum set of log files that must be copied to the failed primary database before recovering from a backup:</p>
<pre dir="ltr">SQL&gt; SELECT file_name FROM DBA_LOGSTDBY_LOG WHERE next_change# &gt; ARCHIVE_SCN;
</pre>
<p>Retrieve the required standby logs, copy the backup set to the new standby and restore it to the new standby fast recovery area. Because these logs are coming from standby redo logs, they are not part of the standby&#39;s standard archives. The RMAN utility is able to use a partial file name to retrieve the files from the correct location.</p>
<p>The following is a sample use of the RMAN <code class="codeph">BACKUP</code> command:</p>
<pre dir="ltr">RMAN&gt; BACKUP AS COPY DEVICE TYPE DISK FORMAT &#39;/tmp/test/%U&#39;
&gt; ARCHIVELOG LIKE &#39;&lt;partial file names from above&gt;%&#39;;
</pre>
<p>The following is a sample use of the RMAN <code class="codeph">RESTORE</code> command:</p>
<pre dir="ltr">RMAN&gt; CATALOG START WITH &#39;/tmp/test&#39;;
RMAN&gt; RESTORE ARCHIVELOG FROM SEQUENCE 33 UNTIL SEQUENCE 35;
</pre></li>
<li>
<p>Restore a backup of all the original primary&#39;s data files and recover to <code class="codeph">RECOVERY_SCN + 1</code>. Oracle recommends that you leverage the current control file.</p>
<ol>
<li>
<p>Start up the database in restricted mode to protect it from rogue transactions until the <code class="codeph">GUARD ALL</code> command can be issued after the database has been opened.</p>
</li>
<li>
<p>Use the backup to restore the data files of the failed primary database.</p>
</li>
<li>
<p>Turn off flashback database, if it is enabled (necessary for the <code class="codeph">USING BACKUP CONTROLFILE</code> clause).</p>
</li>
<li>
<p>Perform point-in-time recovery to <code class="codeph">RECOVERY_SCN +1</code> in SQL*Plus.</p>
</li>
</ol>
<p>Whether you are using a current control file or a backup control file, you must specify the <code class="codeph">USING BACKUP CONTROLFILE</code> clause to allow you to point to the archive logs being restored. Otherwise, the recovery process could attempt to access online redo logs instead of the logs retrieved in Step 3. When prompted for the sequences retrieved in Step 3, ensure you specify the file names of the restored archive log copies, as follows:</p>
<pre dir="ltr">SQL&gt; RECOVER DATABASE UNTIL CHANGE RECOVERY_SCN + 1 USING BACKUP CONTROLFILE;
</pre></li>
<li>
<p>Open the database with the RESETLOGS option:</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE OPEN RESETLOGS;
</pre></li>
<li>
<p>Enable Database Guard</p>
<pre dir="ltr">SQL&gt; ALTER DATABASE GUARD ALL;
</pre></li>
<li>
<p>Create a database link to the new primary database and start SQL Apply:</p>
<pre dir="ltr">SQL&gt; CREATE PUBLIC DATABASE LINK <span class="italic">myLink</span> -
&gt; CONNECT TO SYSTEM IDENTIFIED BY <span class="italic">password</span> -
&gt; USING &#39;<span class="italic">service name of new primary database</span>&#39;;
</pre>
<pre dir="ltr">SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY NEW PRIMARY <span class="italic">myLink</span>;
</pre>
<p>At this point, you can disable restricted session (<code class="codeph">ALTER SYSTEM DISABLE RESTRICTED SESSION</code>) or, if you need to restart the database to re-enable Flashback from Step 4c, let this restart turn off <code class="codeph">RESTRICTED SESSION</code>.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="SBYDB5134"></a>
<div class="props_rev_3"><a id="GUID-FCDB44CE-FBFE-43BB-88E3-74267B38FE70"></a>
<h2 id="SBYDB-GUID-FCDB44CE-FBFE-43BB-88E3-74267B38FE70" class="sect2"><span class="enumeration_section">15.8</span> Changing the Character Set of a Primary Without Re-Creating Physical Standbys</h2>
<div>
<p>Oracle Data Guard allows you to change both the database character set and the national character set of a primary database without requiring you to recreate any physical standby databases in the configuration. You can continue to use your physical standby database with minimal disruption while performing character set conversion of a primary database.</p>
<p>The character set migration process consists of preparatory steps such as scanning for possible issues and identifying methods to solve them. During the execution of these preparatory steps the Oracle Data Guard configuration can operate unchanged and no extra steps are required to maintain the physical standby. After the preparatory steps are completed, the actual conversion is performed which may involve changes to both system data (metadata) and user data. Several procedures specific to Oracle Data Guard must be run as part of the conversion. The steps to run these procedures are interspersed with the steps performed by the Database Migration Assistant for Unicode (DMU) or other appropriate character set migration tool.</p>
<p>For a detailed description of the steps involved in this process, see My Oracle Support note 1124165.1 at <a href="http://support.oracle.com" target="_blank"><code class="codeph">http://support.oracle.com</code></a>.</p>
</div>
</div>
<a id="SBYDB5448"></a>
<div class="props_rev_3"><a id="GUID-8D948A24-A3B7-4E4F-917A-00B047CF3CAF"></a>
<h2 id="SBYDB-GUID-8D948A24-A3B7-4E4F-917A-00B047CF3CAF" class="sect2"><span class="enumeration_section">15.9</span> Actions Needed On a Standby After a PDB PITR On a Primary</h2>
<div>
<div class="section">
<p>A pluggable database (PDB) point-in-time recovery (PITR) is not allowed at a standby. However, you can perform a PDB PITR on a primary and then let the standby recover and follow it.</p>
<p>When a PDB PITR is performed on the primary, and redo for the start of the PDB PITR operation is encountered for the first time, the MRP at the standby terminates with error <code class="codeph">ORA-39874</code>, followed by the supplemental error <code class="codeph">ORA-39873</code>. The following is an example of the messages that may appear in the alert log:</p>
<pre dir="ltr">Recovery of pluggable database PDB1 aborted due to pluggable database open
resetlog marker. 
To continue recovery, restore all data files for this PDB to
checkpoint SCN lower than 1437261, or timestamp before 11/15/2012 16:38:49,
and restart recovery 
MRP0: Background Media Recovery terminated with error 39874
 
ORA-39874: Pluggable Database PDB1 recovery halted
ORA-39873: Restore all data files to a checkpoint SCN lower than 1437261.
</pre>
<p>Before media recovery on the standby can continue any further, you must restore all data files for that PDB from a backup taken at a time prior to the point-in-time the PDB was recovered on the primary. The supplemental <code class="codeph">ORA-39873</code> error indicates the point-in-time recovery SCN. Take the following steps on the standby:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Determine the affected PDB and PITR SCN.</span>
<div>
<p>The name of the PDB for which recovery was halted is shown in the <code class="codeph">ORA-39874</code> message and the PITR SCN is shown in the <code class="codeph">ORA-39873</code> message.</p>
</div>
</li>
<li class="stepexpand"><span>Close the standby database, if it is still open:</span>
<div>
<pre dir="ltr">SQL&gt; ALTER DATABASE CLOSE;
</pre></div>
</li>
<li class="stepexpand"><span>Restore the PDB data files:</span>
<div>
<pre dir="ltr">RMAN&gt; RESTORE PLUGGABLE DATABASE pdb1 UNTIL SCN 1437261;
</pre>
<p>The <code class="codeph">UNTIL</code> <code class="codeph">SCN</code> syntax allows RMAN to automatically choose a suitable backup to restore from. After the data files have been restored at the standby, MRP should be restarted to continue applying the redo logs.</p>
<p>Alternatively, if the standby is configured for flashback, then instead of restoring PDB data files from a backup, you can flashback the standby multitenant container database (CDB) to the PITR SCN.</p>
<pre dir="ltr">RMAN&gt; FLASHBACK DATABASE UNTIL SCN 1437261;
</pre></div>
</li>
<li class="stepexpand"><span>Restart media recovery on the standby:</span>
<div>
<pre dir="ltr">SQL&gt; RECOVER MANAGED STANDBY DATABASE DISCONNECT;
</pre></div>
</li>
</ol>
<div class="section">
<p>A PDB that has undergone PDB PITR on the primary cannot be opened on a standby until standby recovery has recovered it through that PDB resetlogs operation.</p>
<div class="infoboxnotealso" id="GUID-8D948A24-A3B7-4E4F-917A-00B047CF3CAF__GUID-8119C250-5269-41DF-8163-BF40F3E3AD7C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink BRADV640" target="_blank" href="../BRADV/rcmflash.htm#BRADV640"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for more information about performing point-in-time recovery of PDBs</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2252">
<tr>
<td class="cellalignment2259">
<table class="cellalignment2257">
<tr>
<td class="cellalignment2256"><a href="dbms_rolling_upgrades.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2256"><a href="partpage2.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2261">
<table class="cellalignment2255">
<tr>
<td class="cellalignment2256"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2256"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2256"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2256"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2256"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2256"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>