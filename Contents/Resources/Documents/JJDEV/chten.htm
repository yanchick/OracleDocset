<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-71042"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Security%20for%20Oracle%20Database%20Java%20Applications"></a><title>Security for Oracle Database Java Applications</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="This book describes how to develop, load, and run Java applications in Oracle Database."/>
<meta name="dcterms.created" content="2014-06-30T4:25:1Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Java Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E50793-03"/>
<meta name="dcterms.isVersionOf" content="JJDEV"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="chnine.htm" title="Previous" type="text/html"/>
<link rel="Next" href="jndi_support.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E50793-03.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/23</span> <!-- End Header -->
<div id="JJDEV10000" class="chapter"><a id="BABFBDGG"></a>
<h1 class="chapter"><span class="secnum">10</span> Security for Oracle Database Java Applications</h1>
<p>Security is a large arena that includes network security for the connection, access, and execution control of operating system resources or of Java virtual machine (JVM)-defined and user-defined classes. Security also includes bytecode verification of Java Archive (JAR) files imported from an external source. The following sections describe the various security support available for Java applications within Oracle Database:</p>
<ul>
<li>
<p><a href="#BABFAAHB">Network Connection Security</a></p>
</li>
<li>
<p><a href="#BABBBDJG">Database Contents and Oracle JVM Security</a></p>
</li>
<li>
<p><a href="#BABBJIHA">Database Authentication Mechanisms</a></p>
</li>
<li>
<p><a href="#CACIGEEJ">Secure Use of Runtime.exec Functionality in Oracle Database</a></p>
</li>
</ul>
<a id="BABFAAHB"></a>
<div id="JJDEV10100" class="sect1">
<h2 class="sect1">Network <a id="sthref489"></a><a id="sthref490"></a>Connection Security</h2>
<p><a id="ABC2136224"></a>The two major aspects to network security are authentication and <a id="sthref491"></a><a id="sthref492"></a>data confidentiality. The type of authentication and data confidentiality is dependent on how you connect to the database, either through Oracle Net or Java Database Connectivity (JDBC) connection. The following table provides the security description for Oracle Net and JDBC connections:</p>
<div class="inftblinformal">
<table class="cellalignment4002" title="table" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t2">Connection Security</th>
<th class="cellalignment4003" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t2" headers="r1c1-t2">Oracle Net</td>
<td class="cellalignment4004" headers="r2c1-t2 r1c2-t2">The database can require both authentication and authorization before allowing a user to connect to it. Oracle Net database connection security can require one or more of the following:
<ul>
<li>
<p>A user name and password for client verification. For each connection request, a user name and password configured within Oracle Net has to be provided.</p>
</li>
<li>
<p>Advanced Networking Option for encryption, kerberos, or secureId.</p>
</li>
<li>
<p>SSL for certificate authentication.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t2" headers="r1c1-t2">J<a id="sthref493"></a>DBC</td>
<td class="cellalignment4004" headers="r3c1-t2 r1c2-t2">The JDBC connection security that is required is similar to the constraints required on an Oracle Net database connection.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink NETAG" href="../NETAG/toc.htm"><span class="italic">Oracle Database Net Services Administrator&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink DBSEG030" href="../DBSEG/asojbdc.htm#DBSEG030"><span class="italic">Oracle Database Security Guide</span></a></p>
</li>
<li>
<p><a class="olink JJDBC" href="../JJDBC/toc.htm"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="BABBBDJG"></a>
<div id="JJDEV10200" class="sect1">
<h2 class="sect1">Database Contents and Oracle JVM <a id="sthref494"></a>Security</h2>
<p>Once you are connected to the database, you must have the appropriate Java 2 security permissions and <a id="sthref495"></a><a id="sthref496"></a>database privileges to access the resources stored within the database. These resources include:</p>
<ul>
<li>
<p>Database resources, such as tables and PL/SQL packages</p>
</li>
<li>
<p>Operating system resources, such as files and sockets</p>
</li>
<li>
<p>Oracle JVM classes</p>
</li>
<li>
<p>User-loaded classes</p>
</li>
</ul>
<p>These resources can be protected by the following methods:</p>
<div class="inftblinformal">
<table class="cellalignment4002" title="table" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t4">Resource Security</th>
<th class="cellalignment4003" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t4" headers="r1c1-t4">Database Resource Security</td>
<td class="cellalignment4004" headers="r2c1-t4 r1c2-t4">Authorization for database resources requires that database privileges, which are not the same as the Java 2 security permissions, are granted to resources. For example, database resources include tables, classes, and PL/SQL packages.
<p><a id="sthref497"></a>All user-defined classes are secured against users from other schemas. You can grant execution permission to other users or schemas through an option on the <code>loadjava</code> tool.</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t4" headers="r1c1-t4">JVM Security</td>
<td class="cellalignment4004" headers="r3c1-t4 r1c2-t4">Oracle JVM uses Java 2 security, which uses <code>Permission</code> objects to protect operating system resources. Java 2 security is automatically installed upon startup and protects all operating system resources and Oracle JVM classes from all users, except <a id="sthref498"></a><code>JAVA_ADMIN</code>. The <code>JAVA_ADMIN</code> user can grant permission to other users to access these classes.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The Oracle JVM is shipped with strong but limited encryption as included in JDK1.5 and JDK 6. If you want to have unlimited encryption strength in your application, then you must download and install the appropriate version-specific files from the following Web site</p>
<p><code><a href="http://www.oracle.com/technetwork/indexes/downloads/index.html">http://www.oracle.com/technetwork/indexes/downloads/index.html</a></code></p>
</li>
<li>
<p>The Oracle JVM classes used for granting or revoking permissions can run only on a server.</p>
</li>
</ul>
</div>
<p>This section covers the following topics:</p>
<ul>
<li>
<p><a href="#BABJBJGE">Java 2 Security</a></p>
</li>
<li>
<p><a href="#BABBFIDB">Setting Permissions</a></p>
</li>
<li>
<p><a href="#BABBEIJG">Debugging Permissions</a></p>
</li>
<li>
<p><a href="#BABCFFIB">Permission for Loading Classes</a></p>
</li>
<li>
<p><a href="#CACHDAGJ">Customizing Default java.security Resource</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADFNS" href="../ADFNS/toc.htm"><span class="italic">Oracle Database Development Guide</span></a></p>
</li>
<li>
<p><a href="cheleven.htm#CACCBHIC">Chapter 12, &#34;Schema Objects and Oracle JVM Utilities&#34;</a></p>
</li>
</ul>
</div>
<a id="BABJBJGE"></a>
<div id="JJDEV13325" class="sect2">
<h3 class="sect2">Java 2 Security</h3>
<p>Each user or schema must be assigned the proper permissions to access operating system resources, such as sockets, files, and system properties.</p>
<p>Java 2 security provides a flexible and configurable security for Java applications. With Java 2 security, you can define exactly what permissions on each loaded object that a schema or role will have. In Oracle8<span class="italic">i</span> Database release 8.1.5, the following secure roles are available:</p>
<ul>
<li>
<p><code><a id="sthref499"></a>JAVAUSERPRIV</code></p>
<p>Few permissions, including examining properties</p>
</li>
<li>
<p><code><a id="sthref500"></a>JAVASYSPRIV</code></p>
<p>Major permissions, including updating Oracle JVM-protected packages</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Both roles still exist within this release for backward compatibility. However, Oracle recommends that you specify each permission explicitly, rather than utilize these roles.</div>
<p><a id="sthref501"></a>Because Oracle JVM security is based on Java 2 security, you assign permissions on a class-by-class basis. These permissions are assigned through database management tools. Each permission is encapsulated in a <code>Permission</code> object and is stored within a <code>Permission</code> table. <code>Permission</code> contains the <code>target</code> and <code>action</code> attributes, which take <code>String</code> values.</p>
<p>Java 2 security was created for the non-database world. When you apply the Java 2 security model within the database, certain differences manifest themselves. For example, Java 2 security defines that all applets are implicitly untrusted and all classes within the <code>CLASSPATH</code> are trusted. In Oracle Database, all classes are loaded within a secure database. As a result, no classes are trusted.</p>
<p>The following table describes the differences between the standard Java 2 security and Oracle Database security implementation:</p>
<div class="inftblinformal">
<table class="cellalignment4002" title="table" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t8">Java 2 Security Standard</th>
<th class="cellalignment4003" id="r1c2-t8">Oracle Database Security Implementation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t8" headers="r1c1-t8">Java classes located within the <code>CLASSPATH</code> are trusted.</td>
<td class="cellalignment4004" headers="r2c1-t8 r1c2-t8">All Java classes are loaded within the database. Classes are trusted on a class-by-class basis according to the permission granted.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t8" headers="r1c1-t8"><a id="sthref502"></a>You can specify the policy using the <code>-usepolicy</code> flag on the <code>java</code> command.</td>
<td class="cellalignment4004" headers="r3c1-t8 r1c2-t8">You must specify the policy within <code><a id="sthref503"></a>PolicyTable</code>.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t8" headers="r1c1-t8">You can write your own <code>SecurityManager</code> or use the Launcher.</td>
<td class="cellalignment4004" headers="r4c1-t8 r1c2-t8">You can write your own <code>SecurityManager</code>. However, Oracle recommends that you use only Oracle Database <code>SecurityManager</code> or that you extend it. If you want to modify the behavior, then you should not define a <code>SecurityManager</code>. Instead, you should extend <code>oracle.aurora.rdbms. SecurityManagerImpl</code> and override specific methods.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t8" headers="r1c1-t8"><code>SecurityManager</code> is not initialized by default. You must initialize <code>SecurityManager</code>.</td>
<td class="cellalignment4004" headers="r5c1-t8 r1c2-t8">Oracle JVM always initializes <code>SecurityManager</code> at startup.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t8" headers="r1c1-t8">Permissions are determined by the location or the URL, where the application or applet is loaded, or keycode, that is, signed code.</td>
<td class="cellalignment4004" headers="r6c1-t8 r1c2-t8">Permissions are determined by the schema in which the class is loaded. Oracle Database does not support signed code.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r7c1-t8" headers="r1c1-t8"><a id="sthref504"></a>The security policy is defined in a file.</td>
<td class="cellalignment4004" headers="r7c1-t8 r1c2-t8">The <code>PolicyTable</code> definition is contained in a secure database table.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r8c1-t8" headers="r1c1-t8">You can update the security policy file using a text editor or a tool, if you have the appropriate permissions.</td>
<td class="cellalignment4004" headers="r8c1-t8 r1c2-t8">Y<a id="sthref505"></a>ou can update <code>PolicyTable</code> through <code>DBMS_JAVA</code> procedures. After initialization, only <code>JAVA_ADMIN</code> has permission to modify <code>PolicyTable</code>. <code>JAVA_ADMIN</code> must grant you the right to modify <code>PolicyTable</code> so that you can grant permissions to others.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r9c1-t8" headers="r1c1-t8">Permissions are assigned to a protection domain, which classes can belong to.</td>
<td class="cellalignment4004" headers="r9c1-t8 r1c2-t8">All classes within the same schema are in the same protection domain.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r10c1-t8" headers="r1c1-t8">You can use the <code><a id="sthref506"></a>CodeSource</code> class for identifying code.
<ul>
<li>
<p>The <code><a id="sthref507"></a><a id="sthref508"></a>equals()</code> method returns <code>true</code> if the URL and certificates are equal.</p>
</li>
<li>
<p>The <code><a id="sthref509"></a><a id="sthref510"></a>implies()</code> method returns <code>true</code> if the first <code>CodeSource</code> is a generic representation that includes the specific <code>CodeSource</code> object.</p>
</li>
</ul>
</td>
<td class="cellalignment4004" headers="r10c1-t8 r1c2-t8">You can use the <code>CodeSource</code> class for identifying schema.
<ul>
<li>
<p>The <code>equals()</code> method returns <code>true</code> if the schemas are the same.</p>
</li>
<li>
<p>The <code>implies()</code> method returns <code>true</code> if the schemas are the same.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r11c1-t8" headers="r1c1-t8"><a id="sthref511"></a><a id="sthref512"></a><a id="sthref513"></a><a id="sthref514"></a>Supports positive permissions only, that is, <code>grant</code>.</td>
<td class="cellalignment4004" headers="r11c1-t8 r1c2-t8">Supports both positive and limitation permissions, that is, <code>grant</code> and <code>restrict</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<a id="BABBFIDB"></a>
<div id="JJDEV13326" class="sect2">
<h3 class="sect2">Setting <a id="sthref515"></a><a id="sthref516"></a>Permissions</h3>
<p><a id="sthref517"></a>As with Java 2 security, Oracle Database supports the security classes. Typically, you set the permissions for the code base either using a tool or by editing the security <a id="sthref518"></a>policy file. In Oracle Database, you set the permissions dynamically using <code>DBMS_JAVA</code> procedures, which modify a policy table in the database.</p>
<p><a id="sthref519"></a>Two views have been created for you to view the policy table, <code><a id="sthref520"></a>USER_JAVA_POLICY</code> and <code><a id="sthref521"></a>DBA_JAVA_POLICY</code>. Both views contain information about granted and limitation permissions. The <code>DBA_JAVA_POLICY</code> view can see all rows within the policy table. The <code>USER_JAVA_POLICY</code> view can see only permissions relevant to the current user. The following is a description of the rows within each view:</p>
<div class="inftblinformal">
<table class="cellalignment4002" title="table" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t9">Table Column</th>
<th class="cellalignment4003" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t9" headers="r1c1-t9">Kind</td>
<td class="cellalignment4004" headers="r2c1-t9 r1c2-t9"><code>GRANT</code> or <code>RESTRICT</code>. Shows whether this permission is a positive or a limitation permission.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t9" headers="r1c1-t9">Grantee</td>
<td class="cellalignment4004" headers="r3c1-t9 r1c2-t9">The name of the user, schema, or role to which the <code>Permission</code> object is assigned.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t9" headers="r1c1-t9">Permission_schema</td>
<td class="cellalignment4004" headers="r4c1-t9 r1c2-t9">The schema in which the <code>Permission</code> object is loaded.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t9" headers="r1c1-t9">Permission_type</td>
<td class="cellalignment4004" headers="r5c1-t9 r1c2-t9">The <a id="sthref522"></a><code>Permission</code> class type, which is designated by a string containing the full class name, such as, <code>java.io.<a id="sthref523"></a>FilePermission</code>.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t9" headers="r1c1-t9">Permission_name</td>
<td class="cellalignment4004" headers="r6c1-t9 r1c2-t9">The <code>target</code> attribute of the <code>Permission</code> object. You use this when defining the permission. When defining the target for a <code>Permission</code> object of type <code><a id="sthref524"></a>PolicyTablePermission</code>, the name can become quite complicated.
<p><span class="bold">See Also:</span> <a href="#BABBGAEC">&#34;Acquiring Administrative Permission to Update Policy Table&#34;</a></p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r7c1-t9" headers="r1c1-t9">Permission_action</td>
<td class="cellalignment4004" headers="r7c1-t9 r1c2-t9">The <code>action</code> attribute of the <code>Permission</code> object. Many permissions expect a null value if no action is appropriate for the permission.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r8c1-t9" headers="r1c1-t9">Status</td>
<td class="cellalignment4004" headers="r8c1-t9 r1c2-t9"><code>ENABLED</code> and <code>DISABLED</code>. After creating a row for a <code>Permission</code> object, you can disable or reenable it. This column shows whether the permission is enabled or disabled.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r9c1-t9" headers="r1c1-t9">Key</td>
<td class="cellalignment4004" headers="r9c1-t9 r1c2-t9">Sequence number you use to identify this row. This number should be supplied when disabling, enabling, or deleting a permission.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>There are two ways to set permissions:</p>
<ul>
<li>
<p><a href="#BABHDBCJ">Fine-Grain Definition for Each Permission</a></p>
</li>
<li>
<p><a href="#BABBJAFE">General Permission Definition Assigned to Roles</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
For absolute certainty about the security settings, implement the fine-grain definition. The general definition is easy to implement, but you may not get the exact security settings you require.</div>
<a id="BABHDBCJ"></a>
<div id="JJDEV13327" class="sect3">
<h4 class="sect3">Fine-Grain Definition for Each Permission</h4>
<p>Using fine-grain definition, you can grant each permission individually to specific users or roles. If you do not grant a permission for access, then the schema will be denied access. To set individual permissions within the policy table, you must provide the following information:</p>
<div class="inftblinformal">
<table class="cellalignment4002" title="table" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t11">Parameter</th>
<th class="cellalignment4003" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t11" headers="r1c1-t11">Grantee</td>
<td class="cellalignment4004" headers="r2c1-t11 r1c2-t11">The name of the user, schema, or role to which you want the grant to apply. <code>PUBLIC</code> specifies that the row applies to all users.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t11" headers="r1c1-t11">Permission type</td>
<td class="cellalignment4004" headers="r3c1-t11 r1c2-t11">The <a id="sthref525"></a><code>Permission</code> class on which you are granting permission. For example, if you were defining access to a file, the permission type would be <code>FilePermission</code>. This parameter requires a fully-qualified name of a class that extends <code>java.lang.security.Permission</code>. If the class is not within <code>SYS</code>, then the name should be prefixed by <code><span class="codeinlineitalic">schema</span></code><code>:</code>. For example, <code>mySchema:myPackage.MyPermission</code> is a valid name for a user-generated permission.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t11" headers="r1c1-t11">Permission name</td>
<td class="cellalignment4004" headers="r4c1-t11 r1c2-t11">The meaning of the target attribute as defined by the <code>Permission</code> class. Examine the appropriate <code>Permission</code> class for the relevant name.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t11" headers="r1c1-t11">Permission action</td>
<td class="cellalignment4004" headers="r5c1-t11 r1c2-t11">The type of action that you can specify. This can vary according to the permission type. For example, <code>FilePermission</code> can have the action, read or write.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t11" headers="r1c1-t11">Key</td>
<td class="cellalignment4004" headers="r6c1-t11 r1c2-t11">Number returned from grant or limit to use on enable, disable, or delete methods.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>You can grant permissions using either SQL or Java. Each version returns a row key identifier that identifies the row within the permission table. In the Java version of <code>DBMS_JAVA</code>, each method returns the row key identifier, either as a returned parameter or as an <code>OUT</code> variable in the parameter list. In the PL/SQL <code>DBMS_JAVA</code> package, the row key is returned only in the procedure that defines the <code>key OUT</code> parameter. This key is used to enable and disable specific permissions.</p>
<p>After running the grant, if a row already exists for the exact permission, then no update occurs, but the key for that row is returned. If the row was disabled, then running the grant enables the existing row.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are granting <code><a id="sthref526"></a>FilePermission</code>, then you must provide the physical name of the directory or file, such as <code>/private/oracle</code>. You cannot provide either an environment variable, such as <code>$ORACLE_HOME</code>, or a symbolic link. To denote all files within a directory, provide the <code>*</code> symbol, as follows:
<pre>/private/oracle/*
</pre>
<p>To denote all directories and files within a directory, provide the <code>-</code> symbol, as follows:</p>
<pre>/private/oracle/-
</pre></div>
<p>You can <a id="sthref527"></a><a id="sthref528"></a><a id="sthref529"></a>grant permissions using the <code>DBMS_JAVA</code> package, as follows:</p>
<pre>procedure grant_permission ( grantee varchar2, permission_type varchar2, permission_name varchar2, 
permission_action varchar2 )

procedure grant_permission ( grantee varchar2, permission_type varchar2, permission_name varchar2, 
permission_action varchar2, key OUT number)
</pre>
<p>You can <a id="sthref530"></a>grant permissions using Java, as follows:</p>
<pre>long oracle.aurora.rdbms.security.PolicyTableManager.grant ( java.lang.String grantee, 
java.lang.String permission_type, java.lang.String permission_name, java.lang.String permission_action);

void oracle.aurora.rdbms.security.PolicyTableManager.grant ( java.lang.String grantee, 
java.lang.String permission_type, java.lang.String permission_name, java.lang.String permission_action, long[] key);
</pre>
<p>You can <a id="sthref531"></a><a id="sthref532"></a><a id="sthref533"></a><a id="sthref534"></a><a id="sthref535"></a>limit permissions using the <code>DBMS_JAVA</code> package, as follows:</p>
<pre>procedure restrict_permission ( grantee varchar2, permission_type varchar2, permission_name varchar2, 
permission_action varchar2)

procedure restrict_permission ( grantee varchar2, permission_type varchar2, permission_name varchar2, 
permission_action varchar2, key OUT number)
</pre>
<p>You can <a id="sthref536"></a>limit permissions using Java, as follows:</p>
<pre>long oracle.aurora.rdbms.security.PolicyTableManager.restrict ( java.lang.String grantee, 
java.lang.String permission_type, java.lang.String permission_name, java.lang.String permission_action);

void oracle.aurora.rdbms.security.PolicyTableManager.restrict ( java.lang.String grantee, 
java.lang.String permission_type, java.lang.String permission_name, java.lang.String permission_action, long[] key);
</pre>
<p><a href="#BABBDGAE">Example 10-1</a> shows how to use the <code>grant_permission()</code> method to grant permissions. <a href="#BABDGDIF">Example 10-2</a> shows how to limit permissions using the <code>restrict()</code> method.</p>
<div id="JJDEV13328" class="example">
<p class="titleinexample"><a id="BABBDGAE"></a>Example 10-1 <a id="sthref537"></a>Granting <a id="sthref538"></a>Permissions</p>
<p>Assuming that you have appropriate permissions to modify the policy table, you can use the <code>grant_permission()</code> method, which is in the <code>DBMS_JAVA</code> package, to modify <code>PolicyTable</code> to allow user access to the indicated file. In this example, the user, <code>Larry</code>, has modification permission on <code>PolicyTable</code>. Within a SQL package, <code>Larry</code> can grant permission to <code>Dave</code> to read and write a file, as follows:</p>
<pre>connect larry
Enter password: <span class="italic">password</span>

REM Grant DAVE permission to read and write the Test1 file.
call dbms_java.grant_permission(&#39;DAVE&#39;, &#39;java.io.FilePermission&#39;, &#39;/test/Test1&#39;,  &#39;read,write&#39;);

REM commit the changes to PolicyTable
commit;
</pre></div>
<!-- class="example" -->
<div id="JJDEV13329" class="example">
<p class="titleinexample"><a id="BABDGDIF"></a>Example 10-2 Limiting <a id="sthref539"></a><a id="sthref540"></a><a id="sthref541"></a>Permissions</p>
<p>You can use the <code>restrict()</code> method to specify a limitation or exception to general rules. A general rule is a rule where, in most cases, the permission is true or granted. However, there may be exceptions to this rule. For these exceptions, you specify a limitation permission.</p>
<p>If you have defined a general rule that no one can read or write an entire directory, then you can define a limitation on an aspect of this rule through the <code>restrict()</code> method. For example, if you want to allow access to all files within the <code>/tmp</code> directory, except for your password file that exists in that directory, then you would grant permission for read and write to all files within <code>/tmp</code> and limit read and write access to the password file.</p>
<p>If you want to specify an exception to the limitation, then you must create an explicit grant permission to override the limitation permission. In the previously mentioned scenario, if you want the file owner to still be able to modify the password file, then you can grant a more explicit permission to allow access to one user, which will override the limitation. Oracle JVM security combines all rules to understand who really has access to the password file. This is demonstrated in the following diagram:</p>
<img width="238" height="125" src="img/limitper.gif" alt="Description of limitper.gif follows"/><br/>
<a id="sthref542" href="img_text/limitper.htm">Description of the illustration limitper.gif</a><br/>
<br/>
<p>The explicit rule is as follows:</p>
<p>If the limitation permission implies the request, then for a grant permission to be effective, the limitation permission must also imply the grant.</p>
<p>The following code implements this example:</p>
<pre>connect larry
Enter password: <span class="italic">password</span>

REM Grant permission to all users (PUBLIC) to be able to read and write
REM all files in /tmp.
call dbms_java.grant_permission(&#39;PUBLIC&#39;, &#39;java.io.FilePermission&#39;, &#39;/tmp/*&#39;, &#39;read,write&#39;);

REM Limit permission to all users (PUBLIC) from reading or writing the
REM password file in /tmp.
call dbms_java.restrict_permission(&#39;PUBLIC&#39;, &#39;java.io.FilePermission&#39;, &#39;/tmp/password&#39;, &#39;read,write&#39;);

REM By providing a more specific rule that overrides the limitation,
REM Larry can read and write /tmp/password.
call dbms_java.grant_permission(&#39;LARRY&#39;, &#39;java.io.FilePermission&#39;, &#39;/tmp/password&#39;, &#39;read,write&#39;);

commit;
</pre></div>
<!-- class="example" -->
<p>The preceding code performs the following actions:</p>
<ol>
<li>
<p>Grants everyone read and write permission to all files in <code>/tmp</code>.</p>
</li>
<li>
<p>Limits everyone from reading or writing only the <code>password</code> file in <code>/tmp</code>.</p>
</li>
<li>
<p>Grants only <code>Larry</code> explicit permission to read and write the <code>password</code> file.</p>
</li>
</ol>
<p class="subhead2"><a id="BABBGAEC"></a><a id="JJDEV13330"></a>Acquiring Administrative Permission to Update Policy Table</p>
<p><a id="sthref543"></a><a id="sthref544"></a>All permissions are rows in <code>PolicyTable</code>. Because it is a table in the database, you need appropriate permissions to modify it. Specifically, the <code><a id="sthref545"></a>PolicyTablePermission</code> object is required to modify the table. After initializing Oracle JVM, only a single role, <code>JAVA_ADMIN</code>, is granted <code>PolicyTablePermission</code> to modify <code>PolicyTable</code>. The <code>JAVA_ADMIN</code> role is immediately assigned to the database administrator (DBA). Therefore, if you are assigned to the DBA group, then you will automatically take on all <code>JAVA_ADMIN</code> permissions.</p>
<p><a id="sthref546"></a><a id="sthref547"></a>If you need to add permissions as rows to this table, <code>JAVA_ADMIN</code> must grant your schema update rights using <code>PolicyTablePermission</code>. This permission defines that your schema can add rows to the table. Each <code>PolicyTablePermission</code> is for a specific type of permission. For example, to add a permission that controls access to a file, you must have <code>PolicyTablePermission</code> that lets you grant or limit a permission on <code><a id="sthref548"></a>FilePermission</code>. Once this occurs, you have administrative permission for <code>FilePermission</code>.</p>
<p><a id="sthref549"></a>An administrator can grant and limit <code>PolicyTablePermission</code> in the same manner as other permissions, but the syntax is complicated. For ease of use, you can use the <code>grant_policy_permission()</code> or <code>grantPolicyPermission()</code> method to grant administrative permissions.</p>
<p>You can <a id="sthref550"></a><a id="sthref551"></a><a id="sthref552"></a>grant policy table administrative permission using <code>DBMS_JAVA</code>, as follows:</p>
<pre>procedure grant_policy_permission ( grantee varchar2, permission_schema varchar2,
permission_type varchar2, permission_name varchar2 )

procedure grant_policy_permission ( grantee varchar2, permission_schema varchar2,
permission_type varchar2, permission_name varchar2, key OUT number )
</pre>
<p>You can <a id="sthref553"></a>grant policy table administrative permission using Java, as follows:</p>
<pre>long oracle.aurora.rdbms.security.PolicyTableManager.grantPolicyPermission (java.lang.String grantee, java.lang.String permission_schema,
 java.lang.String permission_type, java.lang.String permission_name);

void oracle.aurora.rdbms.security.PolicyTableManager.grantPolicyPermission (java.lang.String grantee, java.lang.String permission_schema, 
java.lang.String permission_type, java.lang.String permission_name, long[] key);
</pre>
<div class="inftblinformal">
<table class="cellalignment4002" title="table" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t13">Parameter</th>
<th class="cellalignment4003" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t13" headers="r1c1-t13">Grantee</td>
<td class="cellalignment4004" headers="r2c1-t13 r1c2-t13">The name of the user, schema, or role to which you want the grant to apply. <code>PUBLIC</code> specifies that the row applies to all users.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t13" headers="r1c1-t13">Permission_schema</td>
<td class="cellalignment4004" headers="r3c1-t13 r1c2-t13">The schema where the <code>Permission</code> class is loaded.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t13" headers="r1c1-t13">Permission_type</td>
<td class="cellalignment4004" headers="r4c1-t13 r1c2-t13">The <a id="sthref554"></a><code>Permission</code> class on which you are granting permission. For example, if you were defining access to a file, the permission type would be <code>FilePermission</code>. This parameter requires a fully-qualified name of a class that extends <code>java.lang.security.Permission</code>. If the class is not within <code>SYS</code>, the name should be prefixed by <code><span class="codeinlineitalic">schema</span></code><code>:</code>. For example, <code>mySchema:myPackage.MyPermission</code> is a valid name for a user-generated permission.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t13" headers="r1c1-t13">Permission_name</td>
<td class="cellalignment4004" headers="r5c1-t13 r1c2-t13">The meaning of the <code>target</code> attribute as defined by the <code>Permission</code> class. Examine the appropriate <code>Permission</code> class for the relevant name.</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t13" headers="r1c1-t13">Row_ number</td>
<td class="cellalignment4004" headers="r6c1-t13 r1c2-t13">Number returned from grant or limitation to use on enable, disable, or delete methods.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
When looking at the policy table, the name in the <code>PolicyTablePermission</code> rows contains both the permission type and the permission name, which are separated by a <code>#</code>. For example, to grant a user administrative rights for reading a file, the name in the row contains <code>java.io.FilePermission#read</code>. The <code>#</code> separates the <code>Permission</code> class from the permission name.</div>
<p><a href="#BABDBECA">Example 10-3</a> shows how you can modify <code>PolicyTable</code>.</p>
<div id="JJDEV13331" class="example">
<p class="titleinexample"><a id="BABDBECA"></a>Example 10-3 Granting PolicyTable Permission</p>
<p><a id="sthref555"></a>This example shows <code>SYS</code>, which has the <code>JAVA_ADMIN</code> role assigned, giving <code>Larry</code> permission to update <code>PolicyTable</code> for <code>FilePermission</code>. Once this permission is granted, <code>Larry</code> can grant permissions to other users for reading, writing, and deleting files.</p>
<pre>REM Connect as SYS, which is assigned JAVA_ADMIN role, to give Larry permission
REM to modify the PolicyTable
connect SYS as SYSDBA
Enter password: <span class="italic">password</span>

REM SYS grants Larry the right to administer permissions for
REM FilePermission
call dbms_java.grant_policy_permission(&#39;LARRY&#39;, &#39;SYS&#39;, &#39;java.io.FilePermission&#39;, &#39;*&#39;);
</pre></div>
<!-- class="example" -->
<p class="subhead2"><a id="JJDEV13332"></a><a id="sthref556"></a>Creating Permissions</p>
<p>You can create your own permission type by performing the following steps:</p>
<ol>
<li>
<p><a id="sthref557"></a>Create and load the user permission</p>
<p>Create your own permission by extending the <code>java.security.<a id="sthref558"></a>Permission</code> class. Any user-defined permission must extend <code>Permission</code>. The following example creates <code>MyPermission</code>, which extends <code>BasicPermission</code>, which, in turn, extends <code>Permission</code>.</p>
<pre>package test.larry;
import java.security.Permission;
import java.security.BasicPermission;

public class MyPermission extends BasicPermission
{

  public MyPermission(String name)
  {
    super(name);
  }

  public boolean implies(Permission p)
  {
    boolean result = super.implies(p);
    return result;
  }
}
</pre></li>
<li>
<p>Grant administrative and action permissions to specified users</p>
<p><a id="sthref559"></a>When you create a permission, you are designated as the owner of that permission. The owner is implicitly granted administrative permission. This means that the owner can be an administrator for this permission and can run <code><a id="sthref560"></a>grant_policy_permission()</code>. Administrative permission enable the user to update the policy table for the user-defined permission.</p>
<p>For example, if <code>LARRY</code> creates a permission, <code>MyPermission</code>, then only he can call <code>grant_policy_permission()</code> for himself or another user. This method updates <code>PolicyTable</code> on who can grant rights to <code>MyPermission</code>. The following code demonstrates this:</p>
<pre>REM Since Larry is the user that owns MyPermission, Larry connects to
REW the database to assign permissions for MyPermission.
connect larry
Enter password: <span class="italic">password</span>

REM As the owner of MyPermission, Larry grants himself the right to
REM administer permissions for test.larry.MyPermission within the JVM
REM security PolicyTable. Only the owner of the user-defined permission
REM can grant administrative rights.
call dbms_java.grant_policy_permission (&#39;LARRY&#39;, &#39;LARRY&#39;, &#39;test.larry.MyPermission&#39;, &#39;*&#39;);

REM commit the changes to PolicyTable
commit;
</pre>
<p>Once you have granted administrative rights, you can grant action permissions for the created permission. For example, the following SQL statements grant <code>LARRY</code> the permission to run anything within <code>MyPermission</code> and <code>DAVE</code> the permission to run only actions that start with &#34;<code>act.</code>&#34;.</p>
<pre>REM Since Larry is the user that creates MyPermission, Larry connects to
REW the database to assign permissions for MyPermission.
connect larry
Enter password: <span class="italic">password</span>

REM Once able to modify PolicyTable for MyPermission, Larry grants himself
REM full permission for MyPermission. Notice that the Permission is prefixed
REM with its owner schema.
call dbms_java.grant_permission( &#39;LARRY&#39;, &#39;LARRY:test.larry.MyPermission&#39;, &#39;*&#39;, null);

REM Larry grants Dave permission to do any actions that start with &#39;act.*&#39;.
call dbms_java.grant_permission
 (&#39;DAVE&#39;, &#39;LARRY:test.larry.MyPermission&#39;, &#39;act.*&#39;, null);

REM commit the changes to PolicyTable
commit;
</pre></li>
<li>
<p>Implement security checks using the permission</p>
<p>Once you have created, loaded, and assigned permissions for <code>MyPermission</code>, you must implement the call to <code>SecurityManager</code> to have the permission checked. There are four methods in the following example: <code>sensitive()</code>, <code>act()</code>, <code>print()</code>, and <code>hello()</code>. Because of the permissions granted using SQL in the preceding steps, the following users can run methods within the example class:</p>
<ul>
<li>
<p><code>LARRY</code> can run any of the methods.</p>
</li>
<li>
<p><code>DAVE</code> is given permission to run only the <code>act()</code> method.</p>
</li>
<li>
<p>Anyone can run the <code>print()</code> and <code>hello()</code> methods. The <code>print()</code> method does not check any permissions. As a result, anyone can run it. The <code>hello()</code> method runs <code>AccessController.doPrivileged()</code>, which means that the method runs with the permissions assigned to <code>LARRY</code>. This is referred to as the definer&#39;s rights.</p>
</li>
</ul>
<pre>package test.larry;
import java.security.AccessController;
import java.security.Permission;
import java.security.PrivilegedAction;

import java.sql.Connection;
import java.sql.SQLException;

/**
* MyActions is a class with a variety of public methods that
* have some security risks associated with them. We will rely
* on the Java security mechanisms to ensure that they are
* performed only by code that is authorized to do so.
*/

public class Larry {

  private static String secret = &#34;Larry&#39;s secret&#34;;
  MyPermission sensitivePermission = new MyPermission(&#34;sensitive&#34;);

/**
* This is a security sensitive operation. That is it can
* compromise our security if it is executed by a &#34;bad guy&#34;.
* Only larry has permission to execute sensitive.
*/
  public void sensitive()
  {
    checkPermission(sensitivePermission);
    print();
  }

/**
* Will display a message from Larry. You must be
* careful about who is allowed to do this
* because messages from Larry may have extra impact.
* Both larry and dave have permission to execute act.
*/
  public void act(String message)
  {
    MyPermission p = new MyPermission(&#34;act.&#34; + message);
    checkPermission(p);
    System.out.println(&#34;Larry says: &#34; + message);
  }

/**
* display secret key
* No permission check is made; anyone can execute print.
*/
  private void print()
  {
    System.out.println(secret);
  }

/**
* Display &#34;Hello&#34;
* This method invokes doPrivileged, which makes the method run
* under definer&#39;s rights. So, this method runs under Larry&#39;s
* rights, so anyone can execute hello. Only Larry can execute hello
*/
  public void hello()
  {
    AccessController.doPrivileged(new PrivilegedAction() {
      public Object run() { act(&#34;hello&#34;); return null; }
    });
  }

/**
* If a security manager is installed ask it to check permission
* otherwise use the AccessController directly
*/
  void checkPermission(Permission permission)
  {
    SecurityManager sm = System.getSecurityManager();
    sm.checkPermission(permission);
  }
}
</pre></li>
</ol>
<p class="subhead2"><a id="CBBIHIGI"></a><a id="JJDEV13333"></a><a id="sthref561"></a><a id="sthref562"></a>Enabling or Disabling Permissions</p>
<p>Once you have created a row that defines a permission, you can disable it so that it no longer applies. However, if you decide that you want the row action again, then you can enable the row. You can delete the row from the table if you believe that it will never be used again. To delete, you must first disable the row. If you do not disable the row, then the deletion will not occur.</p>
<p>To disable rows, you can use either of the following methods:</p>
<ul>
<li>
<p><code>revoke_permission()</code></p>
<p>This method accepts parameters similar to the <code>grant()</code> and <code>restrict()</code> methods. It searches the entire policy table for all rows that match the parameters provided.</p>
</li>
<li>
<p><code>disable_permission()</code></p>
<p>This method disables only a single row within the policy table. To do this, it accepts the policy table key as parameter. This key is also necessary to enable or delete a permission. To retrieve the permission key number, perform one of the following:</p>
<ul>
<li>
<p>Save the key when it is returned on the grant or limit calls. If you do not foresee a need to ever enable or disable the permission, then you can use the grant and limit calls that do not return the permission number.</p>
</li>
<li>
<p>Look up <a id="sthref563"></a><code>DBA_JAVA_POLICY</code> or <a id="sthref564"></a><code>USER_JAVA_POLICY</code> for the appropriate permission key number.</p>
</li>
</ul>
</li>
</ul>
<p>You can <a id="sthref565"></a><a id="sthref566"></a><a id="sthref567"></a>disable permissions using <code>DBMS_JAVA</code>, as follows:</p>
<pre>procedure revoke_permission (grantee varchar2, permission_type varchar2, permission_name varchar2, permission_action varchar2)

procedure disable_permission (key number)
</pre>
<p>You can <a id="sthref568"></a><a id="sthref569"></a>disable permissions using Java, as follows:</p>
<pre>void oracle.aurora.rdbms.security.PolicyTableManager.revoke (java.lang.String grantee, java.lang.String permission_type,
 java.lang.String permission_name, java.lang.String permission_action_type);

void oracle.aurora.rdbms.security.<a id="sthref570"></a>PolicyTableManager.disable (long key);
</pre>
<p>You can <a id="sthref571"></a>enable permissions using <code>DBMS_JAVA</code>, as follows:</p>
<pre>procedure enable_permission (key number)
</pre>
<p>You can <a id="sthref572"></a>enable permissions using Java, as follows:</p>
<pre>void oracle.aurora.rdbms.security.<a id="sthref573"></a>PolicyTableManager.enable (long key);
</pre>
<p>You can <a id="sthref574"></a><a id="sthref575"></a>delete permissions using <code>DBMS_JAVA</code>, as follows:</p>
<pre>procedure delete_permission (key number)
</pre>
<p>You can <a id="sthref576"></a>delete permissions using Java, as follows:</p>
<pre>void oracle.aurora.rdbms.security.<a id="sthref577"></a>PolicyTableManager.delete (long key);
<a id="sthref578"></a><a id="sthref579"></a>
</pre>
<p class="subhead2"><a id="JJDEV13334"></a>Permission Types</p>
<p>Whenever you want to grant or limit a permission, you must provide the permission type. The permission types with which you control access are the following:</p>
<ul>
<li>
<p>Java 2 permission types</p>
</li>
<li>
<p>Oracle-specific permission types</p>
</li>
<li>
<p>User-defined permission types that extend <code>java.security.<a id="sthref580"></a>Permission</code></p>
</li>
</ul>
<p><a href="#BABFHEIC">Table 10-1</a> lists the installed <a id="sthref581"></a>permission types.</p>
<div id="JJDEV13335" class="tblformal">
<p class="titleintable"><a id="sthref582"></a><a id="BABFHEIC"></a>Table 10-1 Predefined Permissions</p>
<table class="cellalignment4009" title="Predefined Permissions" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t15">Type</th>
<th class="cellalignment4003" id="r1c2-t15">Permissions</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t15" headers="r1c1-t15">
<p>Java 2</p>
</td>
<td class="cellalignment4004" headers="r2c1-t15 r1c2-t15">
<ul>
<li>
<p><code>java.util.<a id="sthref583"></a>PropertyPermission</code></p>
</li>
<li>
<p><code>java.io.<a id="sthref584"></a>SerializablePermission</code></p>
</li>
<li>
<p><code>java.io.<a id="sthref585"></a>FilePermission</code></p>
</li>
<li>
<p><code>java.net.<a id="sthref586"></a>NetPermission</code></p>
</li>
<li>
<p><code>java.net.<a id="sthref587"></a>SocketPermission</code></p>
</li>
<li>
<p><code>java.lang.<a id="sthref588"></a>RuntimePermission</code></p>
</li>
<li>
<p><code>java.lang.reflect.<a id="sthref589"></a>ReflectPermission</code></p>
</li>
<li>
<p><code>java.security.<a id="sthref590"></a>SecurityPermission</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t15" headers="r1c1-t15">
<p>Oracle specific</p>
</td>
<td class="cellalignment4004" headers="r3c1-t15 r1c2-t15">
<ul>
<li>
<p><code>oracle.aurora.rdbms.security.<a id="sthref591"></a>PolicyTablePermission</code></p>
</li>
<li>
<p><code>oracle.aurora.security.<a id="sthref592"></a>JServerPermission</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>SYS</code> is granted permission to load libraries that come with Oracle Database. However, Oracle JVM does not support other users loading libraries, because loading C libraries within the database is insecure. As a result, you are not allowed to grant <code>RuntimePermission</code> for <code>loadLibrary.*</code>.</div>
<p>The<a id="sthref593"></a> Oracle-specific permissions are:</p>
<ul>
<li>
<p><code>oracle.aurora.rdbms.security.PolicyTablePermission</code></p>
<p><a id="sthref594"></a>This permission controls who can update the policy table. Once granted the right to update the policy table for a certain permission type, you can control the access to few resources.</p>
<p>After the initialization of Oracle JVM, only the <code>JAVA_ADMIN</code> role can grant administrative rights for the policy table through <code>PolicyTablePermission</code>. Once it grants this right to other users, these users can, in turn, update the policy table with their own grant and limitation permissions.</p>
<p>To grant policy table updates, you can use the <code><a id="sthref595"></a><a id="sthref596"></a>grant_policy_permission()</code> method, which is in the <code>DBMS_JAVA</code> package. Once you have updated the table, you can view either the <code><a id="sthref597"></a>DBA_JAVA_POLICY</code> or <code><a id="sthref598"></a>USER_JAVA_POLICY</code> view to see who has been granted permissions.</p>
</li>
<li>
<p><code>oracle.aurora.security.<a id="sthref599"></a>JServerPermission</code></p>
<p>This permission is used to grant and limit access to Oracle JVM resources. The <code>JServerPermission</code> extends <code>BasicPermission</code>. The following table lists the permission names for which <code>JServerPermission</code> grants access:</p>
<div id="JJDEV13336" class="tblformalwide">
<p class="titleintable"><a id="sthref600"></a><a id="sthref601"></a>Table 10-2 JServerPermission Description</p>
<table class="cellalignment4002" title="JServerPermission Description" summary="JServerPermission description" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t17">Grantee</th>
<th class="cellalignment4003" id="r1c2-t17">Permission Type</th>
<th class="cellalignment4003" id="r1c3-t17">Permission Name</th>
<th class="cellalignment4003" id="r1c4-t17">Permission Granted or Restricted</th>
<th class="cellalignment4003" id="r1c5-t17">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t17" headers="r1c1-t17">
<p><code>JAVADEBUGPRIV</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t17 r1c3-t17">
<p><code>Debug</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r2c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t17" headers="r1c1-t17">
<p><code>SYS</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t17 r1c3-t17">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r3c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t17" headers="r1c1-t17">
<p><code>SYS</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.java.*</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r4c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t17" headers="r1c1-t17">
<p><code>SYS</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.oracle.aurora.*</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r5c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t17" headers="r1c1-t17">
<p><code>SYS</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.oracle.jdbc.*</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r6c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r7c1-t17" headers="r1c1-t17">
<p><code>PUBLIC</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.*</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r7c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r8c1-t17" headers="r1c1-t17">
<p><code>PUBLIC</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.java.*</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t17 r1c4-t17">
<p>Restricted</p>
</td>
<td class="cellalignment4004" headers="r8c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r9c1-t17" headers="r1c1-t17">
<p><code>PUBLIC</code></p>
</td>
<td class="cellalignment4004" headers="r9c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r9c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.oracle.aurora.*</code></p>
</td>
<td class="cellalignment4004" headers="r9c1-t17 r1c4-t17">
<p>Restricted</p>
</td>
<td class="cellalignment4004" headers="r9c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r10c1-t17" headers="r1c1-t17">
<p><code>PUBLIC</code></p>
</td>
<td class="cellalignment4004" headers="r10c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r10c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.oracle.jdbc.*</code></p>
</td>
<td class="cellalignment4004" headers="r10c1-t17 r1c4-t17">
<p>Restricted</p>
</td>
<td class="cellalignment4004" headers="r10c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r11c1-t17" headers="r1c1-t17">
<p><code>JAVA_DEPLOY</code></p>
</td>
<td class="cellalignment4004" headers="r11c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r11c1-t17 r1c3-t17">
<p><code>LoadClassInPackage.oracle.aurora.deploy.*</code></p>
</td>
<td class="cellalignment4004" headers="r11c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r11c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r12c1-t17" headers="r1c1-t17">
<p><code>JAVA_DEPLOY</code></p>
</td>
<td class="cellalignment4004" headers="r12c1-t17 r1c2-t17">
<p><code>SYS:oracle.aurora.security.JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r12c1-t17 r1c3-t17">
<p><code>Deploy</code></p>
</td>
<td class="cellalignment4004" headers="r12c1-t17 r1c4-t17">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r12c1-t17 r1c5-t17">
<p>null</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></li>
</ul>
<p class="subhead2"><a id="BABIGHDC"></a><a id="JJDEV13337"></a>Initial Permission Grants</p>
<p>When you first initialize Oracle JVM, several roles are populated with certain permission grants. The following tables show these roles and their initial Permissions:</p>
<ul>
<li>
<p><a href="#BABCECGE">Table 10-3, &#34;SYS Initial Permissions&#34;</a></p>
</li>
<li>
<p><a href="#BABEHIBB">Table 10-4, &#34;PUBLIC Default Permissions&#34;</a></p>
</li>
<li>
<p><a href="#BABBIAGC">Table 10-5, &#34;JAVAUSERPRIV Permissions&#34;</a></p>
</li>
<li>
<p><a href="#BABHDDDF">Table 10-6, &#34;JAVASYSPRIV Permissions&#34;</a></p>
</li>
<li>
<p><a href="#BABJEJCA">Table 10-7, &#34;JAVADEBUGPRIV Permissions&#34;</a></p>
</li>
</ul>
<p>The <code><a id="sthref602"></a><a id="sthref603"></a>JAVA_ADMIN</code> role is given access to modify the policy table for all permissions. All DBAs, including <code>SYS</code>, are granted <code>JAVA_ADMIN</code>. Full administrative rights to update the policy table are granted for the permissions listed in <a href="#BABFHEIC">Table 10-1</a>. In addition to the <code>JAVA_ADMIN</code> permissions, <code>SYS</code> is granted some additional permissions that are needed to support the standard JDK functionality and Oracle JVM specifics.</p>
<p><a href="#BABCECGE">Table 10-3</a> lists some of the additional permissions granted to <code>SYS</code>.</p>
<div id="JJDEV13338" class="tblformalwide">
<p class="titleintable"><a id="sthref604"></a><a id="BABCECGE"></a>Table 10-3 <a id="sthref605"></a>SYS Initial Permissions</p>
<table class="cellalignment4002" title="SYS Initial Permissions" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t18">Permission Type</th>
<th class="cellalignment4003" id="r1c2-t18">Permission Name</th>
<th class="cellalignment4003" id="r1c3-t18">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t18" headers="r1c1-t18">
<p><code>oracle.aurora.rdbms.security. <a id="sthref606"></a>PolicyTablePermission</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t18 r1c2-t18">
<p><code>oracle.aurora.rdbms.security.PolicyTablePermission#*</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t18" headers="r1c1-t18">
<p><code>oracle.aurora.security.<a id="sthref607"></a>JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t18 r1c2-t18">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t18" headers="r1c1-t18">
<p><code>java.net.<a id="sthref608"></a>NetPermission</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t18 r1c2-t18">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t18" headers="r1c1-t18">
<p><code>java.security.<a id="sthref609"></a>SecurityPermission</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t18 r1c2-t18">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t18" headers="r1c1-t18">
<p><code>java.util.<a id="sthref610"></a>PropertyPermission</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t18 r1c2-t18">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t18 r1c3-t18">
<p>write</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r7c1-t18" headers="r1c1-t18">
<p><code>java.lang.reflect.<a id="sthref611"></a>ReflectPermission</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t18 r1c2-t18">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r8c1-t18" headers="r1c1-t18">
<p><code>java.lang.<a id="sthref612"></a>RuntimePermission</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t18 r1c2-t18">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r9c1-t18" headers="r1c1-t18">&nbsp;</td>
<td class="cellalignment4004" headers="r9c1-t18 r1c2-t18">
<p><code>loadLibrary.xaNative</code></p>
</td>
<td class="cellalignment4004" headers="r9c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r10c1-t18" headers="r1c1-t18">&nbsp;</td>
<td class="cellalignment4004" headers="r10c1-t18 r1c2-t18">
<p><code>loadLibrary.corejava</code></p>
</td>
<td class="cellalignment4004" headers="r10c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r11c1-t18" headers="r1c1-t18">&nbsp;</td>
<td class="cellalignment4004" headers="r11c1-t18 r1c2-t18">
<p><code>loadLibrary.corejava_d</code></p>
</td>
<td class="cellalignment4004" headers="r11c1-t18 r1c3-t18">
<p>null</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p><a href="#BABEHIBB">Table 10-4</a> lists permissions initially granted or restricted to all users.</p>
<div id="JJDEV13339" class="tblformalwide">
<p class="titleintable"><a id="sthref613"></a><a id="BABEHIBB"></a>Table 10-4 <a id="sthref614"></a><a id="sthref615"></a>PUBLIC Default Permissions</p>
<table class="cellalignment4002" title="PUBLIC Default Permissions" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t19">Permission Type</th>
<th class="cellalignment4003" id="r1c2-t19">Permission Name</th>
<th class="cellalignment4003" id="r1c3-t19">Permission Granted or Restricted</th>
<th class="cellalignment4003" id="r1c4-t19">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t19" headers="r1c1-t19">
<p><code>oracle.aurora.rdbms.security. PolicyTablePermission</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t19 r1c2-t19">
<p><code>java.lang.RuntimePermission#loadLibrary.*</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t19 r1c3-t19">
<p>Restricted</p>
</td>
<td class="cellalignment4004" headers="r2c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t19" headers="r1c1-t19">
<p><code>java.util.PropertyPermission</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t19 r1c2-t19">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r3c1-t19 r1c4-t19">
<p>read</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r4c1-t19 r1c2-t19">
<p><code>user.language</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r4c1-t19 r1c4-t19">
<p>write</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r5c1-t19 r1c2-t19">
<p><code>oracle.net.tns_admin</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r5c1-t19 r1c4-t19">
<p>write</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t19" headers="r1c1-t19">
<p><code>java.lang.RuntimePermission</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t19 r1c2-t19">
<p><code>_</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r6c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r7c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r7c1-t19 r1c2-t19">
<p><code>exitVM</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r7c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r8c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r8c1-t19 r1c2-t19">
<p><code>createSecurityManager</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r8c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r9c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r9c1-t19 r1c2-t19">
<p><code>modifyThread</code></p>
</td>
<td class="cellalignment4004" headers="r9c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r9c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r10c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r10c1-t19 r1c2-t19">
<p><code>modifyThreadGroup</code></p>
</td>
<td class="cellalignment4004" headers="r10c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r10c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r11c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r11c1-t19 r1c2-t19">
<p><code>getenv.ORACLE_HOME</code></p>
</td>
<td class="cellalignment4004" headers="r11c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r11c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r12c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r12c1-t19 r1c2-t19">
<p><code>getenv.TNS_ADMIN</code></p>
</td>
<td class="cellalignment4004" headers="r12c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r12c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r13c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r13c1-t19 r1c2-t19">
<p><code>preferences</code></p>
</td>
<td class="cellalignment4004" headers="r13c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r13c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r14c1-t19" headers="r1c1-t19">&nbsp;</td>
<td class="cellalignment4004" headers="r14c1-t19 r1c2-t19">
<p><code>loadLibrary.*</code></p>
</td>
<td class="cellalignment4004" headers="r14c1-t19 r1c3-t19">
<p>Restricted</p>
</td>
<td class="cellalignment4004" headers="r14c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r15c1-t19" headers="r1c1-t19">
<p><code>oracle.aurora.security. JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r15c1-t19 r1c2-t19">
<p><code>LoadClassInPackage.*</code> except for <code>LoadClassInPackage.java.*</code>, <code>LoadClassInPackage.oracle.aurora.*</code>, and <code>LoadClassInPackage.oracle.jdbc.*</code></p>
</td>
<td class="cellalignment4004" headers="r15c1-t19 r1c3-t19">
<p>Granted</p>
</td>
<td class="cellalignment4004" headers="r15c1-t19 r1c4-t19">
<p>null</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p><a href="#BABBIAGC">Table 10-5</a> lists permissions initially granted to the <code>JAVAUSERPRIV</code> role.</p>
<div id="JJDEV13340" class="tblformalwide">
<p class="titleintable"><a id="sthref616"></a><a id="BABBIAGC"></a>Table 10-5 <a id="sthref617"></a><a id="sthref618"></a>JAVAUSERPRIV Permissions</p>
<table class="cellalignment4002" title="JAVAUSERPRIV Permissions" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t20">Permission Type</th>
<th class="cellalignment4003" id="r1c2-t20">Permission Name</th>
<th class="cellalignment4003" id="r1c3-t20">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t20" headers="r1c1-t20">
<p><code>java.net.<a id="sthref619"></a>SocketPermission</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t20 r1c2-t20">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t20 r1c3-t20">
<p>connect, resolve</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t20" headers="r1c1-t20">
<p><code>java.io.<a id="sthref620"></a>FilePermission</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t20 r1c2-t20">
<p><code>&lt;&lt;ALL FILES&gt;&gt;</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t20 r1c3-t20">
<p>read</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t20" headers="r1c1-t20">
<p><code>java.lang.RuntimePermission</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t20 r1c2-t20">
<p><code>stopThread</code>, <code>getProtectionDomain</code>, <code>accessClassInPackage.*</code>, and <code>defineClassInPackage.*</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t20 r1c3-t20">
<p>null</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p><a href="#BABHDDDF">Table 10-6</a> lists permissions initially granted to the <code>JAVASYSPRIV</code> role.</p>
<div id="JJDEV13341" class="tblformalwide">
<p class="titleintable"><a id="sthref621"></a><a id="BABHDDDF"></a>Table 10-6 <a id="sthref622"></a><a id="sthref623"></a>JAVASYSPRIV Permissions</p>
<table class="cellalignment4002" title="JAVASYSPRIV Permissions" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t21">Permission Type</th>
<th class="cellalignment4003" id="r1c2-t21">Permission Name</th>
<th class="cellalignment4003" id="r1c3-t21">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t21" headers="r1c1-t21">
<p><code>java.io.<a id="sthref624"></a>SerializablePermission</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t21 r1c2-t21">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t21 r1c3-t21">
<p>no applicable action</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r3c1-t21" headers="r1c1-t21">
<p><code>java.io.<a id="sthref625"></a>FilePermission</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t21 r1c2-t21">
<p><code>&lt;&lt;ALL FILES&gt;&gt;</code></p>
</td>
<td class="cellalignment4004" headers="r3c1-t21 r1c3-t21">
<p>read, write, execute, delete</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r4c1-t21" headers="r1c1-t21">
<p><code>java.net.<a id="sthref626"></a>SocketPermission</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t21 r1c2-t21">
<p><code>*</code></p>
</td>
<td class="cellalignment4004" headers="r4c1-t21 r1c3-t21">
<p>accept, connect, listen, resolve</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r5c1-t21" headers="r1c1-t21">
<p><code>java.sql.SQLPermission</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t21 r1c2-t21">
<p><code>setLog</code></p>
</td>
<td class="cellalignment4004" headers="r5c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r6c1-t21" headers="r1c1-t21">
<p><code>java.lang.<a id="sthref627"></a>RuntimePermission</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t21 r1c2-t21">
<p><code>createClassLoader</code></p>
</td>
<td class="cellalignment4004" headers="r6c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r7c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r7c1-t21 r1c2-t21">
<p><code>getClassLoader</code></p>
</td>
<td class="cellalignment4004" headers="r7c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r8c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r8c1-t21 r1c2-t21">
<p><code>setContextClassLoader</code></p>
</td>
<td class="cellalignment4004" headers="r8c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r9c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r9c1-t21 r1c2-t21">
<p><code>setFactory</code></p>
</td>
<td class="cellalignment4004" headers="r9c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r10c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r10c1-t21 r1c2-t21">
<p><code>setIO</code></p>
</td>
<td class="cellalignment4004" headers="r10c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r11c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r11c1-t21 r1c2-t21">
<p><code>setFileDescriptor</code></p>
</td>
<td class="cellalignment4004" headers="r11c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r12c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r12c1-t21 r1c2-t21">
<p><code>readFileDescriptor</code></p>
</td>
<td class="cellalignment4004" headers="r12c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r13c1-t21" headers="r1c1-t21">&nbsp;</td>
<td class="cellalignment4004" headers="r13c1-t21 r1c2-t21">
<p><code>writeFileDescriptor</code></p>
</td>
<td class="cellalignment4004" headers="r13c1-t21 r1c3-t21">
<p>null</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" -->
<p><a href="#BABJEJCA">Table 10-7</a> lists permissions initially granted to the <code>JAVADEBUGPRIV</code> role.</p>
<div id="JJDEV13342" class="tblformalwide">
<p class="titleintable"><a id="sthref628"></a><a id="BABJEJCA"></a>Table 10-7 <a id="sthref629"></a><a id="sthref630"></a>JAVADEBUGPRIV Permissions</p>
<table class="cellalignment4002" title="JAVADEBUGPRIV Permissions" summary="table" dir="ltr">
<thead>
<tr class="cellalignment3996">
<th class="cellalignment4003" id="r1c1-t22">Permission Type</th>
<th class="cellalignment4003" id="r1c2-t22">Permission Name</th>
<th class="cellalignment4003" id="r1c3-t22">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3996">
<td class="cellalignment4004" id="r2c1-t22" headers="r1c1-t22">
<p><code>oracle.aurora.security.<a id="sthref631"></a>JServerPermission</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t22 r1c2-t22">
<p><code>Debug</code></p>
</td>
<td class="cellalignment4004" headers="r2c1-t22 r1c3-t22">
<p>null</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect3" -->
<a id="BABBJAFE"></a>
<div id="JJDEV13343" class="sect3">
<h4 class="sect3">General Permission Definition Assigned to Roles</h4>
<p><a id="sthref632"></a>In Oracle8<span class="italic">i</span> Database release 8.1.5, Oracle JVM security was controlled by granting the <code><a id="sthref633"></a>JAVASYSPRIV</code>, <code><a id="sthref634"></a>JAVAUSERPRIV</code>, or <code>JAVADEBUGPRIV</code> role to schemas. In Oracle Database 12<span class="italic">c</span> Release 1 (12.1), these roles still exist as permission groups. You can set up and define your own collection of permissions. Once defined, you can grant any collection of permissions to any user or role. That user will then have the same permissions that exist within the role. In addition, if you need additional permissions, then you can add individual permissions to either your specified user or role. Permissions defined within the policy table have a cumulative effect.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The ability to write to properties, granted through the write action on <code><a id="sthref635"></a>PropertyPermission</code>, is no longer granted to all users. Instead, you must have either <code>JAVA_ADMIN</code> grant this permission to you or you can receive it by being granted the <code>JAVASYSPRIV</code> role.</div>
<p>The following example gives Larry and Dave the following permissions:</p>
<ul>
<li>
<p>Larry receives <code>JAVASYSPRIV</code> permissions.</p>
</li>
<li>
<p>Dave receives <code>JAVADEBUGPRIV</code> permissions and the ability to read and write all files on the system.</p>
</li>
</ul>
<pre>REM Granting Larry the same permissions as those existing within JAVASYSPRIV
grant javasyspriv to larry;

REM Granting Dave the ability to debug
grant javadebugpriv to dave;

commit;

REM I also want Dave to be able to read and write all files on the system
call dbms_java.grant_permission(&#39;DAVE&#39;, &#39;SYS:java.io.FilePermission&#39;,
 &#39;&lt;&lt;ALL FILES&gt;&gt;&#39;, &#39;read,write&#39;, null);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABHDBCJ">&#34;Fine-Grain Definition for Each Permission&#34;</a>.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABBEIJG"></a>
<div id="JJDEV13344" class="sect2">
<h3 class="sect2">Debugging <a id="sthref636"></a><a id="sthref637"></a>Permissions</h3>
<p>A debug role, <code><a id="sthref638"></a>JAVADEBUGPRIV</code>, was created to grant permissions for running the debugger. The permissions assigned to this role are listed in <a href="#BABJEJCA">Table 10-7</a>. To receive permission to call the debug agent, the caller must have been granted <code>JAVADEBUGPRIV</code> or the debug <code><a id="sthref639"></a>JServerPermission</code> as follows:</p>
<pre>REM Granting Dave the ability to debug
grant javadebugpriv to dave;

REM Larry grants himself permission to start the debug agent.
call dbms_java.grant_permission(
  &#39;LARRY&#39;, &#39;oracle.aurora.security.JServerPermission&#39;, &#39;Debug&#39;, null);
</pre>
<p>Although a debugger provides extensive access to both code and data on the server, its use should be limited to development environments.</p>
</div>
<!-- class="sect2" -->
<a id="BABCFFIB"></a>
<div id="JJDEV13345" class="sect2">
<h3 class="sect2"><a id="sthref640"></a>Permission for<a id="sthref641"></a> Loading Classes</h3>
<p>To load classes, you must have the following permission:</p>
<pre>JServerPermission(&#34;LoadClassInPackage.&#34; + <span class="italic">class_name</span>)
</pre>
<p>where, <code><span class="codeinlineitalic">class_name</span></code> is the fully qualified name of the class that you are loading.</p>
<p>This excludes loading into System packages or replacing any System classes. Even if you are granted permission to load a System class, Oracle Database prevents you from performing the load. System classes are classes that are installed by Oracle Database using the <code>CREATE JAVA SYSTEM</code> statement. The following error is thrown if you try to replace a System class:</p>
<pre>ORA-01031 &#34;Insufficient privileges&#34;
</pre>
<p>The following describes what each user can do after database installation:</p>
<ul>
<li>
<p><code>SYS</code> can load any class except for System classes.</p>
</li>
<li>
<p>Any user can load classes in its own schema that do not start with the following patterns: <code>java.*</code>, <code>oracle.aurora.*</code>, and <code>oracle.jdbc.*</code>. If the user wants to load such classes into another schema, then it must be granted the <code>JServerPermission(LoadClassInPackage.</code><code><span class="codeinlineitalic">class</span></code><code>)</code> permission.</p>
<p>The following example shows how to grant <code>HR</code> permission to load classes into the <code>oracle.aurora.tools.*</code> package:</p>
<pre>dbms_java.grant_permission(&#39;HR&#39;,&#39;SYS:oracle.aurora.security.JServerPermission&#39;,&#39;LoadClassInPackage.oracle.aurora.tools.*&#39;,null);
</pre></li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CACHDAGJ"></a>
<div id="JJDEV13561" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref642"></a>Customizing Default java.security Resource</h3>
<p>If you want to add a security provider or change the order of the security providers listed in the default <code>java.security</code> resource, then you can create an alternate resource and add it to the Database. This change affects all new Oracle JVM sessions that start after the resource is loaded. Perform the following steps to configure the default <code>java.security</code> resource:</p>
<ol>
<li id="CACHCIIF">
<p>Create the following file:</p>
<p><code>$ORACLE_HOME/javavm/lib/security/java.security.alt</code></p>
</li>
<li>
<p>Use the following command to copy the contents of the file <code>$ORACLE_HOME/javavm/lib/security/java.security</code> into the file created in step <a href="#CACHCIIF">1</a>:</p>
<pre>cp $ORACLE_HOME/javavm/lib/security/java.security $ORACLE_HOME/javavm/lib/security/java.security.alt
</pre></li>
<li>
<p>Edit the <code>$ORACLE_HOME/javavm/lib/security/java.security.alt</code> file and make the necessary changes as necessary.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
If you make a mistake in specifying the order of the service providers or defined devices, then some features may become unusable.</div>
</li>
<li>
<p>Use the following commands to load the <code>java.security.alt</code> file:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must be able to login as <code>SYS</code> to load the <code>lib/security/java.security.alt</code> file.</div>
<pre>cd $ORACLE_HOME/javavm
loadjava -u sys/&lt;sys_pwd&gt; -v -g public lib/security/java.security.alt
</pre></li>
</ol>
<p>This security setting affects every future Oracle JVM session started from the Database. However, the changes in the security settings are not in effect for the loading session.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
You must have knowledge about the security parameters before configuring them. Incorrect settings can lead to abnormal operations.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<code><a href="http://docs.oracle.com/javase/7/docs/technotes/guides/security/index.html">http://docs.oracle.com/javase/7/docs/technotes/guides/security/index.html</a></code> for more information about this security setting</div>
<p class="subhead2"><a id="sthref643"></a>Create or Replace Java System</p>
<p>You must now perform a Create or Replace Java System, for <code>java.security.alt</code> to provide a different set of security parameters to the OJVM. Before this, all system sessions should be re-started using:</p>
<pre>sqlplus / as sysdba
shutdown

sqlplus / as sysdba
startup
</pre>
<p>Create Java System is performed in the following way:</p>
<pre>sqlplus / as sysdba
create or replace java system
</pre>
<p>For Linux.X64 databases, the Create Java System will not work. In that case, use the following command:</p>
<pre>sqlplus / as sysdba
call rehotload();
</pre>
<p class="subhead2"><a id="JJDEV13562"></a>Restoring the Security Settings</p>
<p>You can restore the original security settings in either of the two following ways:</p>
<ul>
<li>
<p>Use the following commands:</p>
<pre>cd $ORACLE_HOME/javavm
dropjava -u sys/&lt;sys_pwd&gt; -v lib/security/java.security.alt
</pre></li>
<li>
<p>Use the following commands:</p>
<pre>sqlplus sys/&lt;sys_pwd&gt; as sysdba
SQL&gt; drop java resource &#34;lib/security/java.security.alt&#34;;
</pre></li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABBJIHA"></a>
<div id="JJDEV10300" class="sect1">
<h2 class="sect1">Database<a id="sthref644"></a> Authentication Mechanisms</h2>
<p>The following database authentication mechanisms are available:</p>
<ul>
<li>
<p>Password authentication</p>
</li>
<li>
<p>Strong authentication</p>
</li>
<li>
<p>Proxy authentication</p>
</li>
<li>
<p>Single sign-on</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CACIGEEJ"></a>
<div id="JJDEV13638" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Secure Use of Runtime.exec Functionality in Oracle Database</h2>
<div class="infobox-note">
<p class="notep1">Note:</p>
This section is intended for DBAs and security administrators, and provides guidelines for secure use of the Java SE functionality <code>Runtime.exec</code> in Java applications running inside Oracle Database.</div>
<p>The <code>java.lang.Runtime.exec</code> methods, found in Java SE libraries and supported by Java Virtual Machine (Java VM) since release 9, span a new operating system (OS) process and execute the specified command and arguments in the new process. If a <code>SecurityManager</code> is present, which is always the case for Java VM running in the database, then a security check for file execution permissions on relevant path names is performed before the new OS process starts. If you are a DBA or a security administrator, then you are responsible for granting the appropriate file read, write, and execute permissions selectively to the database users, who are authorized to run server-side OS commands. In addition, Oracle strongly recommends that the <code>dbms_java.set_runtime_exec_credentials</code> procedure is used to control OS user identities of spawned commands as described in the following sections.</p>
<p>By design, the <code>Runtime.exec</code> and the related functionality of the <code>java.lang.ProcessBuilder</code> and <code>java.lang.Process</code> classes provide no control over the identity of the user associated with the newly created process. In most Java implementations, including the default behavior of Java VM, the forked process runs with the identity of the parent process, which is the Oracle OS user in Oracle Database. For security reasons, it is advisable to run the processes forked by the <code>Runtime.exec</code> functionality with OS identity granted lesser rights. The <code>dbms_java.set_runtime_exec_credentials</code> procedure provides a mechanism to bind a specified database user/schema to a specific OS account. If you are a DBA, then you should bind database users issuing <code>Runtime.exec</code> calls to OS accounts with the least possible power. The following call associates database user/schema <code>DBUSER</code> with an OS <code>osuser</code> account:</p>
<pre>dbms_java.set_runtime_exec_credentials(&#39;DBUSER&#39;, &#39;osuser&#39;, &#39;ospass&#39;);
</pre>
<p>As a result, the OS process spawned to run the <code>Runtime.exec</code> commands issued by <code>DBUSER</code> runs with the identity of <code>osuser</code>. You must be the <code>SYS</code> user to use <code>set_runtime_exec_credentials</code> procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="appendixa.htm#CHDFDDHH">&#34;set_runtime_exec_credentials&#34;</a></div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3995">
<tr>
<td class="cellalignment4004">
<table class="cellalignment4000">
<tr>
<td class="cellalignment3999"><a href="chnine.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3999"><a href="jndi_support.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4006">
<table class="cellalignment3998">
<tr>
<td class="cellalignment3999"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3999"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3999"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3999"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3999"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3999"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>