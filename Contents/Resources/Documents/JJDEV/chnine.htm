<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-71038"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Database%20Java%20Application%20Performance"></a><title>Oracle Database Java Application Performance</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="This book describes how to develop, load, and run Java applications in Oracle Database."/>
<meta name="dcterms.created" content="2014-06-30T4:25:1Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Java Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E50793-03"/>
<meta name="dcterms.isVersionOf" content="JJDEV"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="cheight.htm" title="Previous" type="text/html"/>
<link rel="Next" href="chten.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E50793-03.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">16/23</span> <!-- End Header -->
<div id="JJDEV09000" class="chapter"><a id="BABDCIBH"></a>
<h1 class="chapter"><span class="secnum">9</span> Oracle Database Java Application <a id="sthref470"></a>Performance</h1>
<p>You can enhance the performance of your Java application using the following:</p>
<ul>
<li>
<p><a href="#BABCDHHF">Oracle JVM Just-in-Time Compiler (JIT)</a></p>
</li>
<li>
<p><a href="#BABHEBIE">Java Memory Usage</a></p>
</li>
</ul>
<a id="BABCDHHF"></a>
<div id="JJDEV13306" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref471"></a><a id="sthref472"></a>Oracle JVM Just-in-Time Compiler (JIT)</h2>
<p>This section describes the just-in-time (JIT) compiler that has been introduced since Oracle Database 11<span class="italic">g</span> release 1 (11.1). This section covers the following topics:</p>
<ul>
<li>
<p><a href="#BABJFAIF">Overview of Oracle JVM JIT</a></p>
</li>
<li>
<p><a href="#BABCDEAH">Advantages of JIT Compilation</a></p>
</li>
<li>
<p><a href="#BABDEEAB">Methods Introduced in Oracle Database 11g</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The JIT compiler is a replacement of the compilers that were used in the earlier versions of Oracle Database.</div>
<a id="BABJFAIF"></a>
<div id="JJDEV13307" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref473"></a>Overview of Oracle JVM JIT</h3>
<p>Starting with Oracle 11<span class="italic">g</span> release 1 (11.1), there is a just-in-time (JIT) compiler for Oracle JVM environment. A JIT compiler for Oracle JVM enables much faster execution because, it manages the invalidation, recompilation, and storage of code without an external mechanism. Based on dynamically gathered profiling data, this compiler transparently selects Java methods to compile the native machine code and dynamically makes them available to running Java sessions. Additionally, the compiler can take advantage of the class resolution model of Oracle JVM to optionally persist compiled Java methods across database calls, sessions, or instances. Such persistence avoids the overhead of unnecessary recompilations across sessions or instances, when it is known that semantically the Java code has not changed.</p>
<p>The JIT compiler is controlled by a new boolean-valued initialization parameter called <a id="sthref474"></a><code>java_jit_enabled</code>. When running heavily used Java methods with <code>java_jit_enabled</code> parameter value as <code>true</code>, the Java methods are automatically compiled to native code by the JIT compiler and made available for use by all sessions in the instance. Setting the <code>java_jit_enabled</code> parameter to <code>true</code> also causes further JIT compilation to cease, and reverts any already compiled methods to be interpreted. The VM automatically recompiles native code for Java methods when necessary, such as following reresolution of the containing Java class.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
On Linux, Oracle JVM JIT uses POSIX shared memory that requires access to the <code>/dev/shm</code> directory. The <code>/dev/shm</code> directory should be of type <code>tmpfs</code> and you must mount this directory as follows:
<ul>
<li>
<p>With <code>rw</code> and <code>execute</code> permissions set on it</p>
</li>
<li>
<p>Without <code>noexec</code> or <code>nosuid</code> set on it</p>
</li>
</ul>
<p>If the correct mount options are not used, then the following failure may occur during installation of the database:</p>
<pre>ORA-29516: Aurora assertion failure: Assertion failure at joez.c:
Bulk load of method java/lang/Object.&lt;init&gt; failed; insufficient shm-object space
</pre></div>
<p>The JIT compiler runs as an MMON slave, in a single background process for the instance. So, while the JIT compiler is running and actively compiling methods, you may see this background process consuming CPU and memory resources equivalent to an active user Java session.</p>
</div>
<!-- class="sect2" -->
<a id="BABCDEAH"></a>
<div id="JJDEV13308" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref475"></a>Advantages of JIT Compilation</h3>
<p>The following are the advantages of using JIT compilation over the compilation techniques used in earlier versions of Oracle database:</p>
<ul>
<li>
<p>JIT compilation works transparently</p>
</li>
<li>
<p>JIT compilation speeds up the performance of Java classes</p>
</li>
<li>
<p>JIT stored compiled code avoids recompilation of Java programs across sessions or instances when it is known that semantically the Java code has not changed.</p>
</li>
<li>
<p>JIT compilation does not require a C compiler</p>
</li>
<li>
<p>JIT compilation eliminates some of the array bounds checking</p>
</li>
<li>
<p>JIT compilation eliminates common sub-expressions within blocks</p>
</li>
<li>
<p>JIT compilation eliminates empty methods</p>
</li>
<li>
<p>JIT compilation defines the region for register allocation of local variables</p>
</li>
<li>
<p>JIT compilation eliminates the need of flow analysis</p>
</li>
<li>
<p>JIT compilation limits inline code</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABDEEAB"></a>
<div id="JJDEV13309" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Methods Introduced in Oracle Database 11g</h3>
<p>Since 11g release 1 (11.1), the <code>DBMS_JAVA</code> package has been enhanced with the following new public methods to provide Java entrypoints for controlling synchronous method compilation and reverting to interpreted method execution:</p>
<p class="subhead2"><a id="JJDEV13310"></a>set_native_compiler_option</p>
<p>This procedure sets a native-compiler option to the specified value for the current schema. If the option given by <span class="italic">optionName</span> is not allowed to have duplicate values, then the value is ignored.</p>
<pre>PROCEDURE set_native_compiler_option(optionName VARCHAR2,
value VARCHAR2);
</pre>
<p class="subhead2"><a id="JJDEV13311"></a>unset_native_compiler_option</p>
<p>This procedure unsets a native-compiler option/value pair for the current schema. If the option given by <span class="italic">optionName</span> is not allowed to have duplicate values, then the value is ignored.</p>
<pre>PROCEDURE unset_native_compiler_option(optionName VARCHAR2,
value VARCHAR2);
</pre>
<p class="subhead2"><a id="JJDEV13312"></a>compile_class</p>
<p>This function compiles all methods defined by the class that is identified by <span class="italic">classname</span> in the current schema. It returns the number of methods successfully compiled. If the class does not exist, then an <code>ORA-29532 (Uncaught Java exception)</code> occurs.</p>
<pre>FUNCTION compile_class(classname VARCHAR2) return NUMBER;
</pre>
<p class="subhead2"><a id="JJDEV13313"></a>uncompile_class</p>
<p>This function uncompiles all methods defined by the class that is identified by <span class="italic">classname</span> in the current schema. It returns the number of methods successfully uncompiled. If the value of the argument <span class="italic">permanentp</span> is nonzero, then mark these methods as permanently dynamically uncompilable. Otherwise, they are eligible for future dynamic recompilation. If the class does not exist, then an <code>ORA-29532 (Uncaught Java exception)</code> occurs.</p>
<pre>FUNCTION uncompile_class(classname VARCHAR2,
permanentp NUMBER default 0) return NUMBER;
</pre>
<p class="subhead2"><a id="JJDEV13314"></a>compile_method</p>
<p>This function compiles the method specified by <span class="italic">name</span> and <span class="italic">Java type</span> signatures defined by the class, which is identified by <span class="italic">classname</span> in the current schema. It returns the number of methods successfully compiled. If the class does not exist, then an <span class="italic">ORA-29532 (Uncaught Java exception)</span> occurs.</p>
<pre>FUNCTION compile_method(classname  VARCHAR2,
methodname VARCHAR2,
methodsig  VARCHAR2) return NUMBER;
</pre>
<p class="subhead2"><a id="JJDEV13315"></a>uncompile_method</p>
<p>This function uncompiles the method specified by the <span class="italic">name</span> and <span class="italic">Java type</span> signatures defined by the class that is identified by <span class="italic">classname</span> in the current schema. It returns the number of methods successfully uncompiled. If the value of the argument <span class="italic">permanentp</span> is nonzero, then mark the method as permanently dynamically uncompilable. Otherwise, it is eligible for future dynamic recompilation. If the class does not exist, then an <code>ORA-29532 (Uncaught Java exception)</code> occurs.</p>
<pre>FUNCTION uncompile_method(classname  VARCHAR2,
methodname VARCHAR2,
methodsig  VARCHAR2,
permanentp NUMBER default 0) return NUMBER;
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABHEBIE"></a>
<div id="JJDEV09200" class="sect1">
<h2 class="sect1">Java Memory Usage</h2>
<p>The typical and custom database installation process furnishes a database that has <a id="sthref476"></a>been configured for reasonable Java usage during development. However, run-time use of Java should be determined by the usage of system resources for a given deployed application. Resources you use during development can vary widely, depending on your activity. <a id="sthref477"></a><a id="sthref478"></a>The following sections describe how you can configure memory, how to tell how much System Global Area (SGA) memory you are using, and what errors denote a Java memory issue:</p>
<ul>
<li>
<p><a href="#BABGFDAE">Configuring Memory Initialization Parameters</a></p>
</li>
<li>
<p><a href="#BABHCAFE">Java Pool Memory</a></p>
</li>
<li>
<p><a href="#BABBBDIB">Displaying Used Amounts of Java Pool Memory</a></p>
</li>
<li>
<p><a href="#BABFCDEE">Correcting Out of Memory Errors</a></p>
</li>
<li>
<p><a href="#BABHFDDI">Displaying Java Call and Session Heap Statistics</a></p>
</li>
</ul>
<a id="BABGFDAE"></a>
<div id="JJDEV13316" class="sect2">
<h3 class="sect2">Configuring Memory Initialization Parameters</h3>
<p>You can modify the following database initialization parameters to tune your memory usage to reflect your application needs more accurately:</p>
<ul>
<li>
<p><a id="sthref479"></a><code>SHARED_POOL_SIZE</code></p>
<p>Shared pool memory is used by the class loader within the JVM. The class loader, on an average, uses about 8 KB of memory for each loaded class. Shared pool memory is used when loading and resolving classes into the database. It is also used when compiling the source in the database or when using Java resource objects in the database.</p>
<p><a id="sthref480"></a>The memory specified in <code>SHARED_POOL_SIZE</code> is consumed transiently when you use the <code>loadjava</code> tool. The database initialization process requires <code>SHARED_POOL_SIZE</code> to be set to 96 MB because it loads the Java binaries for approximately 8,000 classes and resolves them. The <code>SHARED_POOL_SIZE</code> resource is also consumed when you create call specifications and as the system tracks dynamically loaded Java classes at run time.</p>
</li>
<li>
<p><code><a id="sthref481"></a>JAVA_POOL_SIZE</code></p>
<p>Oracle JVM memory manager uses <code>JAVA_POOL_SIZE</code> mainly for in-memory representation of Java method and class definitions, and static Java states that are migrated to session space at end-of-call in shared server mode. In the first case, you will be sharing the memory cost with all Java users. In the second case, the value of <code>JAVA_POOL_SIZE</code> varies according to the actual amount of state held in static variables for each session. But, Oracle recommends the minimum value as 50 MB.</p>
</li>
<li>
<p><a id="sthref482"></a><code>JAVA_SOFT_SESSIONSPACE_LIMIT</code></p>
<p>This parameter lets you specify a soft limit on Java memory usage in a session, which will warn you if you must increase your Java memory limits. Every time memory is allocated, the total memory allocated is checked against this limit.</p>
<p>When a user&#39;s session Java state exceeds this size, Oracle JVM generates a warning that is written into the trace files. Although this warning is an informational message and has no impact on your application, you should understand and manage the memory requirements of your deployed classes, especially as they relate to usage of session space.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This parameter is applicable only to a shared-server environment.</div>
</li>
<li>
<p><code><a id="sthref483"></a>JAVA_MAX_SESSIONSPACE_SIZE</code></p>
<p>If a Java program, which can be called by a user, running in the server can be used in a way that is not self-limiting in its memory usage, then this setting may be useful to place a hard limit on the amount of session space made available to it. The default is 4 GB. This limit is purposely set extremely high to be usually invisible.</p>
<p>When a user&#39;s session Java state attempts to exceeds this size, the application can receive an out-of-memory failure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This parameter is applicable only to a shared-server environment.</div>
</li>
</ul>
<div id="JJDEV13317" class="sect3"><a id="sthref484"></a>
<h4 class="sect3">Initializing Pool Sizes within Database Templates</h4>
<p>You can set the defaults for <code>JAVA_POOL_SIZE</code> and <code>SHARED_POOL_SIZE</code> in the database installation template.</p>
<p><a href="#BABCECIC">Figure 9-1</a> illustrates how the Database Configuration Assistant enables you to modify these values in the Memory section.</p>
<div id="JJDEV13318" class="figure">
<p class="titleinfigure"><a id="BABCECIC"></a>Figure 9-1 Configuring Oracle JVM Memory Parameters</p>
<img width="756" height="541" src="img/dbca_poolnew.gif" alt="Description of Figure 9-1 follows"/><br/>
<a id="sthref485" href="img_text/dbca_poolnew.htm">Description of &#34;Figure 9-1 Configuring Oracle JVM Memory Parameters&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHCAFE"></a>
<div id="JJDEV13319" class="sect2">
<h3 class="sect2"><a id="sthref486"></a>Java Pool Memory</h3>
<p>Java pool memory is a subset of SGA, which is used exclusively by Java for memory that must be aligned pagewise. This includes the majority, but, not all of the memory used for the shared definitions of Java classes. Other uses of Java pool memory depend on the mode in which the Oracle Database server runs.</p>
<p class="subhead2"><a id="JJDEV13320"></a>Java Pool Memory Used within a Dedicated Server</p>
<p>The following is what constitutes the Java pool memory used within a dedicated server:</p>
<ul>
<li>
<p>Most of the shared part of each Java class in use.</p>
<p>This includes read-only memory, such as code vectors, and methods. In total, this can average about 4 KB to 8 KB for each class.</p>
</li>
<li>
<p>None of the per-session Java state of each session.</p>
<p>For a dedicated server, this is stored in the User Global Area (UGA) within the Program Global Area (PGA), and not within the SGA.</p>
</li>
</ul>
<p>Under dedicated servers, the total required Java pool memory depends on the applications running and usually ranges between 10 and 50 MB.</p>
<p class="subhead2"><a id="JJDEV13321"></a>Java Pool Memory Used within a Shared Server</p>
<p>The following constitutes the Java pool memory used within a shared server:</p>
<ul>
<li>
<p>Most of the shared part of each Java class in use</p>
<p>This includes read-only memory, such as vectors and methods. In total, this memory usually averages to be about 4 KB to 8 KB for each class.</p>
</li>
<li>
<p>Some of the UGA for per session memory</p>
<p>In particular, the memory for objects that remain in use across Database calls is always allocated from Java pool.</p>
<p>Because the Java pool memory size is limited, you must estimate the total requirement for your applications and multiply by the number of concurrent sessions the applications want to create, to calculate the total amount of necessary Java pool memory. Each UGA grows and shrinks as necessary. However, all UGAs combined must be able to fit within the entire fixed Java pool space.</p>
</li>
</ul>
<p>Under shared servers, Java pool could be large. Java-intensive, multiuser applications could require more than 100 MB.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are compiling code on the server, rather than compiling on the client and loading to the server, then you might need a bigger <code>JAVA_POOL_SIZE</code> than the default 20 MB.</div>
<p class="subhead2"><a id="JJDEV13560"></a>Reducing the Number of Java-Enabled Sessions</p>
<p>The top-level invocation of Java in the database is issued by a client-side application or utility. If each client has a dedicated server, then large-scale deployment involves significant consumption of resources on the database server and also leads to resource wastage. You can use Client-side connection pools or Database Resident Connection Pool (DRCP) to reduce the number of database processes and sessions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJDBC29023" href="../JJDBC/drcp.htm#JJDBC29023"><span class="italic">Oracle Database JDBC Developer&#39;s Guide</span></a> for more information about DRCP</div>
</div>
<!-- class="sect2" -->
<a id="BABBBDIB"></a>
<div id="JJDEV13322" class="sect2">
<h3 class="sect2">Displaying Used Amounts of Java Pool Memory</h3>
<p>You can find out how much of Java pool memory is being used by viewing the <a id="sthref487"></a><code>V$SGASTAT</code> table. Its rows include pool, name, and bytes. Specifically, the last two rows show the amount of Java pool memory used and how much is free. The total of these two items equals the number of bytes that you configured in the database initialization file.</p>
<pre>SVRMGR&gt; select * from v$sgastat;

POOL        NAME                            BYTES
----------- -------------------------- ----------
            fixed_sga                       69424
            db_block_buffers              2048000
            log_buffer                     524288
shared pool free memory                  22887532
shared pool miscellaneous                  559420
shared pool character set object            64080
shared pool State objects                   98504
shared pool message pool freequeue         231152
shared pool PL/SQL DIANA                  2275264
shared pool db_files                        72496
shared pool session heap                    59492
shared pool joxlod: init P                   7108
shared pool PLS non-lib hp                   2096
shared pool joxlod: in ehe                4367524
shared pool VIRTUAL CIRCUITS               162576
shared pool joxlod: in phe                2726452
shared pool long op statistics array        44000
shared pool table definiti                    160
shared pool KGK heap                         4372
shared pool table columns                  148336
shared pool db_block_hash_buckets           48792
shared pool dictionary cache              1948756
shared pool fixed allocation callback         320
shared pool SYSTEM PARAMETERS               63392
shared pool joxlod: init s                   7020
shared pool KQLS heap                     1570992
shared pool library cache                 6201988
shared pool trigger inform                  32876
shared pool sql area                      7015432
shared pool sessions                       211200
shared pool KGFF heap                        1320
shared pool joxs heap init                   4248
shared pool PL/SQL MPCODE                  405388
shared pool event statistics per sess      339200
shared pool db_block_buffers               136000
<span class="bold">java pool   free memory                  30261248</span>
<span class="bold">java pool   memory in use                19742720</span>
37 rows selected.
</pre></div>
<!-- class="sect2" -->
<a id="BABFCDEE"></a>
<div id="JJDEV13323" class="sect2">
<h3 class="sect2">Correcting Out of Memory Errors</h3>
<p>If you run out of memory while loading classes, then it can fail silently, leaving invalid classes in the database. Later, if you try to call or resolve any invalid classes, then a <code>ClassNotFoundException</code> or <code>NoClassDefFoundException</code> instance will be thrown at run time. You would get the same exceptions if you were to load corrupted class files. You should perform the following:</p>
<ul>
<li>
<p>Verify that the class was actually included in the set you are loading to the server.</p>
</li>
<li>
<p><a id="sthref488"></a>Use the <code>loadjava -force</code> option to force the new class being loaded to replace the class already resident in the server.</p>
</li>
<li>
<p>Use the <code>loadjava -resolve</code> option to attempt resolution of a class during the load process. This enables you to catch missing classes at load time, rather than at run time.</p>
</li>
<li>
<p>Double check the status of the newly loaded class by connecting to the database in the schema containing the class, and run the following:</p>
<pre>SELECT * FROM user_objects WHERE object_name = dbms_java.shortname(&#39;&#39;);
</pre>
<p>The <code>STATUS</code> field should be <code>VALID</code>. If the <code>loadjava</code> tool complains about memory problems or failures, such as lost connection, then increase <code>SHARED_POOL_SIZE</code> and <code>JAVA_POOL_SIZE</code>, and try again.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABHFDDI"></a>
<div id="JJDEV13324" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying Java Call and Session Heap Statistics</h3>
<p>Database performance view <code>v$sesstat</code> records a number of Java memory usage statistics. These statistics are updated often during Java calls. The following example shows the Java call return and session heap statistics for the database session with SID=102.</p>
<pre>SQL&gt; select s.sid, n.name p_name, st.value from v$session s, v$sesstat st, v$statname n where s.sid=102 
 and s.sid=st.sid and n.statistic# = st.statistic# and n.name like &#39;java%&#39;;

 SID P_NAME                                        VALUE
   ---------- ---------------------------------------- ----------
          102 java call heap total size                   6815744
          102 java call heap total size max               6815744
          102 java call heap used size                     668904
          102 java call heap used size max                 846920
          102 java call heap live size                     667112
          102 java call heap live size max                 704312
          102 java call heap object count                   13959
          102 java call heap object count max               17173
          102 java call heap live object count              13907
          102 java call heap live object count max          14916
          102 java call heap gc count                      432433
          102 java call heap collected count            123196423
          102 java call heap collected bytes           5425972216
          102 java session heap used size                  444416
          102 java session heap used size max              444416
          102 java session heap live size                  444416
          102 java session heap live size max              444416
          102 java session heap object count                    0
          102 java session heap object count max                0
          102 java session heap live object count               0
          102 java session heap live object count max           0
          102 java session heap gc count                        0
          102 java session heap collected count                 0
          102 java session heap collected bytes                 0
   
   24 rows selected.
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3995">
<tr>
<td class="cellalignment4004">
<table class="cellalignment4000">
<tr>
<td class="cellalignment3999"><a href="cheight.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3999"><a href="chten.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4006">
<table class="cellalignment3998">
<tr>
<td class="cellalignment3999"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3999"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3999"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3999"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3999"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3999"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>