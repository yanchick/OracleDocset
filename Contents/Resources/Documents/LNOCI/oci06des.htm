<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-73977"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Describing%20Schema%20Metadata"></a><title>Describing Schema Metadata</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="OCIDescribeAny(), overview, tables, describing, describe, of tables, views, of views, synonyms, of synonyms, stored procedures, of stored procedures, stored functions, of stored functions, packages, of packages, sequences, of sequences, collections, of collections, types, of types, schemas, of schemas, databases, of databases, limitations on OCIDescribeAny() and OCIStmtExecute(), limitations, OCI_ATTR_TYPECODE, attribute, OCI_ATTR_DATA_TYPE, OCI_TYPECODE, explicit and implicit, columns, attributes, OCI_ATTR_PRECISION, OCI_ATTR_LIST_ARGUMENTS, parameters, of parameters, parameter descriptor, of parameter descriptors, OCI_ATTR_OBJ_ID, OCI_ATTR_OBJ_NAME, OCI_ATTR_OBJ_SCHEMA, OCI_ATTR_PTYPE, possible values of, OCI_PTYPE_VIEW, possible value of OCI_ATTR_PTYPE, OCI_PTYPE_FUNC, OCI_PTYPE_TYPE_COLL, OCI_PTYPE_ARG, OCI_PTYPE_UNK, OCI_ATTR_TIMESTAMP, OCI_PTYPE_TABLE, subprogram attributes, procedures, functions, OCI_PTYPE_PROC, OCI_ATTR_IS_INVOKER_RIGHTS, OCI_ATTR_NAME, OCI_PTYPE_PKG, OCI_ATTR_LIST_SUBPROGRAMS, OCI_PTYPE_TYPE, OCI_ATTR_REF_TDO, OCI_ATTR_COLLECTION_TYPECODE, OCI_ATTR_IS_INCOMPLETE_TYPE, OCI_ATTR_IS_SYSTEM_TYPE, OCI_ATTR_IS_PREDEFINED_TYPE, OCI_ATTR_IS_TRANSIENT_TYPE, OCI_ATTR_IS_SYSTEM_GENERATED_TYPE, OCI_ATTR_HAS_NESTED_TABLE, OCI_TYPECODE_ITABLE, possible value of OCI_ATTR_COLLECTION_TYPECODE, OCI_ATTR_HAS_LOB, OCI_ATTR_HAS_FILE, OCI_ATTR_COLLECTION_ELEMENT, OCI_ATTR_NUM_TYPE_ATTRS, OCI_ATTR_LIST_TYPE_ATTRS, OCI_ATTR_NUM_TYPE_METHODS, OCI_ATTR_LIST_TYPE_METHODS, OCI_ATTR_MAP_METHOD, OCI_ATTR_ORDER_METHOD, OCI_ATTR_SCHEMA_NAME, OCI_ATTR_IS_FINAL_TYPE, OCI_ATTR_IS_INSTANTIABLE_TYPE, OCI_ATTR_IS_SUBTYPE, OCI_ATTR_SUPERTYPE_SCHEMA_NAME, OCI_ATTR_SUPERTYPE_NAME, type attributes, OCI_PTYPE_TYPE_ATTR, OCI_ATTR_DATA_SIZE, OCI_ATTR_SCALE, OCI_ATTR_TYPE_NAME, OCI_ATTR_CHARSET_ID, OCI_ATTR_CHARSET_FORM, OCI_ATTR_FSPRECISION, OCI_ATTR_LFPRECISION, type method attributes, type procedures, type functions, OCI_PTYPE_TYPE_PROC, OCI_PTYPE_TYPE_FUNC, OCI_ATTR_ENCAPSULATION, OCI_ATTR_IS_CONSTRUCTOR, OCI_ATTR_IS_DESTRUCTOR, OCI_ATTR_IS_OPERATOR, OCI_ATTR_IS_SELFISH, OCI_ATTR_IS_MAP, OCI_ATTR_IS_ORDER, OCI_ATTR_IS_RNDS, OCI_ATTR_IS_RNPS, OCI_ATTR_IS_WNDS, OCI_ATTR_IS_WNPS, OCI_ATTR_IS_FINAL_METHOD, OCI_ATTR_IS_INSTANTIABLE_METHOD, OCI_ATTR_IS_OVERRIDING_METHOD, OCI_PTYPE_COLL, OCI_ATTR_NUM_ELEMS, OCI_PTYPE_SYN, OCI_ATTR_OBJID, OCI_ATTR_LINK, OCI_ATTR_SEQ, OCI_ATTR_MIN, OCI_ATTR_MAX, OCI_ATTR_INCR, OCI_ATTR_CACHE, OCI_ATTR_ORDER, OCI_ATTR_HW_MARK, OCI_PTYPE_COL, argument attributes, OCI_ATTR_POSITION, OCI_ATTR_LEVEL, OCI_ATTR_HAS_DEFAULT, OCI_ATTR_IOMODE, OCI_ATTR_RADIX, OCI_ATTR_IS_NULL, OCI_ATTR_SUB_NAME, method results, type OCI_PTYPE_TYPE_RESULT, lists, OCI_PTYPE_LIST, list attributes, type OCI_PTYPE_LIST, OCI_ATTR_LIST_TYPE, OCI_LTYPE_ARG_PROC list attribute, OCI_LTYPE_ARG_FUNC list attribute, OCI_LTYPE_SUBPRG list attribute, OCI_LTYPE_TYPE_ATTR list attribute, OCI_LTYPE_TYPE_METHOD list attribute, OCI_LTYPE_TYPE_ARG_PROC list attribute, OCI_LTYPE_TYPE_ARG_FUNC list attribute, OCI_LTYPE_SCH_OBJ list attribute, OCI_LTYPE_DB_SCH list attribute, OCI_ATTR_NUM_HANDLES attribute, OCI_PTYPE_SCHEMA, schema type attributes, type OCI_PTYPE_SCHEMA, OCI_ATTR_LIST_OBJECTS, OCI_PTYPE_DATABASE, database type attributes, type OCI_PTYPE_DATABASE, OCI_ATTR_VERSION, OCI_ATTR_NCHARSET_ID, OCI_ATTR_LIST_SCHEMAS, OCI_ATTR_MAX_PROC_LEN, OCI_ATTR_MAX_COLUMN_ NAMELEN, OCI_ATTR_CURSOR_COMMIT_ BEHAVIOR, OCI_ATTR_MAX_CATALOG_ NAMELEN, OCI_ATTR_CATALOG_LOCATION, OCI_ATTR_SAVEPOINT_SUPPORT, OCI_ATTR_NOWAIT_SUPPORT, OCI_ATTR_AUTOCOMMIT_DDL, OCI_ATTR_LOCKING_MODE, OCI_PTYPE_RULES, rules, attributes, type OCI_PTYPE_RULE, OCI_ATTR_CONDITION, OCI_ATTR_EVAL_CONTEXT_OWNER, OCI_ATTR_EVAL_CONTEXT_NAME, OCI_ATTR_COMMENT, OCI_ATTR_LIST_ACTION_CONTEXT, OCI_PTYPE_RULE_SET, rule sets, type OCI_PTYPE_RULE_SET, OCI_ATTR_LIST_RULES, OCI_PTYPE_EVALUATION CONTEXT, evaluation context attributes, evaluation context, OCI_ATTR_EVALUATION_FUNCTION, OCI_ATTR_LIST_TABLE_ALIASES, OCI_ATTR_LIST_VARIABLE_TYPES, OCI_PTYPE_TABLE_ALIAS, table alias, type OCI_PTYPE_TABLE_ALIAS, OCI_ATTR_TABLE_NAME, OCI_PTYPE_VARIABLE_TYPE, variable type attributes, type OCI_PTYPE_VARIABLE_TYPE, OCI_PTYPE_NAME_VALUE, name-value pair attributes, type OCI_PTYPE_NAME_VALUE, OCI_ATTR_VALUE, character-length semantics, OCI_ATTR_CHAR_SIZE, OCI_ATTR_CHAR_USED, explicit describe, attribute, usage examples, retrieving column data types for a table, example, using an explicit describe to retrieve column data types for a table, describing the stored procedure, example, retrieving attributes of an object type, using an explicit describe on a named object type, retrieving the collection element&rsquo;s data type of a named collection type, using an explicit describe on a named collection type, OCI_ATTR_SHOW_INVISIBLE_COLUMNS"/>
<meta name="dcterms.created" content="2017-06-09T09:07:30Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49886-11"/>
<meta name="dcterms.isVersionOf" content="LNOCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="oci05bnd.htm" title="Previous" type="text/html"/>
<link rel="Next" href="oci07lob.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49886-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-CED0D15A-D873-43F7-A5B2-51FC0662C250"></a> <span id="PAGE" style="display:none;">13/84</span> <!-- End Header -->
<a id="LNOCI060"></a>
<h1 id="LNOCI-GUID-CED0D15A-D873-43F7-A5B2-51FC0662C250" class="sect1"><span class="enumeration_chapter">6</span> Describing Schema Metadata</h1>
<div>
<p>This chapter discusses the use of the <code class="codeph">OCIDescribeAny()</code> function to obtain information about schema elements.</p>
<p>This chapter contains these topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci06des.htm#GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB" title="Performs an explicit describe of schema objects and their subschema objects.">About Using OCIDescribeAny()</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-2EB52CE1-9947-472C-B8B3-24214D66EE19" title="This section describes the attributes and handles that belong to different parameters.">Parameter Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-6941EC35-5C3F-4031-94E5-2347C4ABE96A" title="Query and column information are supported with character-length semantics.">Character-Length Semantics Support in Describe Operations</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-A1FEDF38-F835-49D5-BBB5-69E5BAA7D759" title="The following examples demonstrate the use of OCIDescribeAny() for describing different types of schema objects.">Examples Using OCIDescribeAny()</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-CED0D15A-D873-43F7-A5B2-51FC0662C250__GUID-06F7B851-9CCB-45CC-AFA6-8A06001F27FD">
<p class="notep1">See Also:</p>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</div>
</div>
<a id="LNOCI16439"></a><a id="LNOCI16438"></a>
<div class="props_rev_3"><a id="GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB"></a>
<h2 id="LNOCI-GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB" class="sect2">About Using OCIDescribeAny()</h2>
<div>
<p>Performs an explicit describe of schema objects and their subschema objects.</p>
<p>The <code class="codeph">OCIDescribeAny()</code> function enables you to perform an explicit describe of the following schema objects and their subschema objects:</p>
<ul style="list-style-type: disc;">
<li>
<p>Tables and views</p>
</li>
<li>
<p>Synonyms</p>
</li>
<li>
<p>Procedures</p>
</li>
<li>
<p>Functions</p>
</li>
<li>
<p>Packages</p>
</li>
<li>
<p>Sequences</p>
</li>
<li>
<p>Collections</p>
</li>
<li>
<p>Types</p>
</li>
<li>
<p>Schemas</p>
</li>
<li>
<p>Databases</p>
</li>
</ul>
<p>Information about other schema elements (function arguments, columns, type attributes, and type methods) is available through a describe of one of the preceding schema objects or an explicit describe of the subschema object.</p>
<p>When an application describes a table, it can then retrieve information about that table&#39;s columns. Additionally, <code class="codeph">OCIDescribeAny()</code> can directly describe subschema objects such as columns of a table, packages of a function, or fields of a type if given the name of the subschema object.</p>
<p>The <code class="codeph">OCIDescribeAny()</code> call requires a describe handle as one of its arguments. The describe handle must be previously allocated with a call to <code class="codeph">OCIHandleAlloc()</code>.</p>
<p>The information returned by <code class="codeph">OCIDescribeAny()</code> is organized hierarchically like a tree, as shown in <a href="oci06des.htm#GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB__I444983">Figure 6-1</a>.</p>
<div class="figure" id="GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB__I444983">
<p class="titleinfigure">Figure 6-1 OCIDescribeAny() Table Description</p>
<img width="285" height="248" src="img/GUID-2488A553-2031-4922-B2F6-FE90E2933110-default.gif" alt="Description of Figure 6-1 follows" title="Description of Figure 6-1 follows"/><br/>
<a href="img_text/GUID-2488A553-2031-4922-B2F6-FE90E2933110-default.htm">Description of &#34;Figure 6-1 OCIDescribeAny() Table Description&#34;</a></div>
<!-- class="figure" -->
<p>The describe handle returned by the <code class="codeph">OCIDescribeAny()</code> call has an attribute, <code class="codeph">OCI_ATTR_PARAM</code>, that points to such a description tree. Each node of the tree has attributes associated with that node, as well as attributes that are like recursive describe handles and point to subtrees containing further information. If all the attributes are homogenous, as with elements of a column list, they are called <span class="italic">parameters</span>. The attributes associated with any node are returned by <code class="codeph">OCIAttrGet()</code>, and the parameters are returned by <code class="codeph">OCIParamGet()</code>.</p>
<p>A call to <code class="codeph">OCIAttrGet()</code> on the describe handle for the table returns a handle to the column-list information. An application can then use <code class="codeph">OCIParamGet()</code> to retrieve the handle to the column description of a particular column in the column list. The handle to the column descriptor can be passed to <code class="codeph">OCIAttrGet()</code> to get further information about the column, such as the name and data type.</p>
<p>After a SQL statement is executed, information about the select list is available as an attribute of the statement handle. No explicit describe call is needed. To retrieve information about select-list items from the statement handle, the application must call <code class="codeph">OCIParamGet()</code> once for each position in the select list to allocate a parameter descriptor for that position.</p>
<div class="infobox-note" id="GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB__GUID-DF122FC0-2D50-4C33-A64C-F7DB3CD622F2">
<p class="notep1">Note:</p>
<p>No subsequent <code class="codeph">OCIAttrGet()</code> or <code class="codeph">OCIParamGet()</code> call requires extra round-trips, as the entire description is cached on the client side by <code class="codeph">OCIDescribeAny()</code>.</p>
</div>
<div class="p">This section includes the following topics:
<ul style="list-style-type: disc;">
<li>
<p><a href="oci06des.htm#GUID-32624134-60CA-4C3E-8F5F-B5434A333A7E" title="The OCIDescribeAny() call limits information returned to the basic information and stops expanding a node if it amounts to another describe operation.">Limitations on OCIDescribeAny()</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-D5D06FFC-2E27-4EA4-A01B-B1032D665FB7" title="What to be aware of when performing describe operations.">Notes on Types and Attributes</a></p>
</li>
</ul>
</div>
<div class="infoboxnotealso" id="GUID-EE0CB5DB-CF1A-425B-AFAF-6B944E2639DB__GUID-4EA026F9-F799-48CE-811F-1A18F33BDE89">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</li>
<li>
<p><a href="oci16rel002.htm#GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5" title="Returns a pointer to an allocated and initialized handle.">OCIHandleAlloc()</a></p>
</li>
<li>
<p><a href="oci16rel002.htm#GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9" title="Gets the value of an attribute of a handle.">OCIAttrGet()</a></p>
</li>
<li>
<p><a href="oci16rel002.htm#GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4" title="Returns a descriptor of a parameter specified by position in the describe handle or statement handle.">OCIParamGet()</a></p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16440"></a>
<div class="props_rev_3"><a id="GUID-32624134-60CA-4C3E-8F5F-B5434A333A7E"></a>
<h3 id="LNOCI-GUID-32624134-60CA-4C3E-8F5F-B5434A333A7E" class="sect3">Limitations on OCIDescribeAny()</h3>
<div>
<p>The <code class="codeph">OCIDescribeAny()</code> call limits information returned to the basic information and stops expanding a node if it amounts to another describe operation.</p>
<p>For example, if a table column is of an object type, then OCI does not return a subtree describing the type, because this information can be obtained by another describe call.</p>
<p>The table name is not returned by <code class="codeph">OCIDescribeAny()</code> or the implicit use of <code class="codeph">OCIStmtExecute()</code>. Sometimes a column is not associated with a table. In most cases, the table is already known.</p>
<div class="infoboxnotealso" id="GUID-32624134-60CA-4C3E-8F5F-B5434A333A7E__GUID-F141A914-879D-46DE-955D-E1C612D96D5A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci04sql.htm#GUID-DDB109DD-52EB-4AA8-A69A-34015F8D5D6E" title="If your OCI application is processing a query, you may need to obtain more information about the items in the select list.">About Describing Select-List Items</a></p>
</li>
<li>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</li>
<li>
<p><a href="oci17msc001.htm#GUID-98B26708-3E02-45C0-8258-5D5544F32BE9" title="Associates an application request with a server.">OCIStmtExecute()</a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI16441"></a>
<div class="props_rev_3"><a id="GUID-D5D06FFC-2E27-4EA4-A01B-B1032D665FB7"></a>
<h3 id="LNOCI-GUID-D5D06FFC-2E27-4EA4-A01B-B1032D665FB7" class="sect3">Notes on Types and Attributes</h3>
<div>
<p>What to be aware of when performing describe operations.</p>
<div class="p">When performing describe operations, you should be aware of the following topics:
<ul style="list-style-type: disc;">
<li>
<p><a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-78A2AD9B-A6D6-46FD-A0E5-9034A8CF4731" title="To describe type objects, it is necessary to initialize the OCI process in object mode.">About Describing Types</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-8FDE667A-F0E9-413D-A2E0-6E23A04BEF8E" title="The column attribute OCI_ATTR_PRECISION can be returned using an implicit describe with OCIStmtExecute() and an explicit describe with OCIDescribeAny().">Implicit and Explicit Describe Operations</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-D88B96F9-7405-4864-BAFF-BAF70AC80016">OCI_ATTR_LIST_ARGUMENTS Attribute</a></p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16442"></a>
<div class="sect4"><a id="GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311"></a>
<h4 id="LNOCI-GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" class="sect4">Data Type Codes</h4>
<div>
<p>The <code class="codeph">OCI_ATTR_TYPECODE</code> attribute returns typecodes that represent the types supplied by the user when a new type is created using the <code class="codeph">CREATE TYPE</code> statement.</p>
<p>These typecodes are of the enumerated type <code class="codeph">OCITypeCode</code>, and are represented by <code class="codeph">OCI_TYPECODE</code> constants. Internal PL/SQL type (boolean) is supported.</p>
<p>The <code class="codeph">OCI_ATTR_DATA_TYPE</code> attribute returns typecodes that represent the data types stored in database columns. These are similar to the describe values returned by previous versions of Oracle Database. These values are represented by SQLT constants (<code class="codeph">ub2</code> values). Boolean types return <code class="codeph">SQLT_BOL</code>.</p>
<div class="infoboxnotealso" id="GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311__GUID-18EDD17A-0E02-4A4D-84C0-5DE8046C7CE0">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci03typ.htm#GUID-D69455D9-CE01-44CC-B5A9-E541C7774805" title="Lists and describes the data type codes for external data types.">External Data Types</a> for more information about <code class="codeph">SQLT_BOL</code></p>
</li>
<li>
<p><a href="oci03typ.htm#GUID-65066795-6F95-44AE-A454-31CF70A46A1F" title="A unique typecode is associated with each Oracle Database type, whether scalar, collection, reference, or object type.">Typecodes</a> for more information about typecodes, such as the <code class="codeph">OCI_TYPECODE</code> values returned in the <code class="codeph">OCI_ATTR_TYPECODE</code> attribute and the SQLT typecodes returned in the <code class="codeph">OCI_ATTR_DATA_TYPE</code> attribute</p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI72629"></a><a id="LNOCI16443"></a>
<div class="props_rev_3"><a id="GUID-78A2AD9B-A6D6-46FD-A0E5-9034A8CF4731"></a>
<h4 id="LNOCI-GUID-78A2AD9B-A6D6-46FD-A0E5-9034A8CF4731" class="sect4">About Describing Types</h4>
<div>
<p>To describe type objects, it is necessary to initialize the OCI process in object mode.</p>
<p>This is shown in <a href="oci06des.htm#GUID-78A2AD9B-A6D6-46FD-A0E5-9034A8CF4731__CIHDBGDD">Example 6-1</a>.</p>
<div class="example" id="GUID-78A2AD9B-A6D6-46FD-A0E5-9034A8CF4731__CIHDBGDD">
<p class="titleinexample">Example 6-1 Initializing the OCI Process in Object Mode</p>
<pre dir="ltr">/* Initialize the OCI Process */
 if (OCIEnvCreate((OCIEnv **) &amp;envhp, (ub4) OCI_OBJECT, (voivoid *) 0,
                  (void * (*)(void *,size_t)) 0,
                  (void * (*)(void *, void *, size_t)) 0,
                  (void (*)(void *, void *)) 0, (size_t) 0, (void **) 0))
 {
   printf(&#34;FAILED: OCIEnvCreate()\n&#34;);
   return OCI_ERROR;
 }
</pre></div>
<!-- class="example" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-78A2AD9B-A6D6-46FD-A0E5-9034A8CF4731__GUID-061F9761-60A9-4E15-807F-75DE92B31C4F">
<p class="notep1">See Also:</p>
<p><a href="oci16rel001.htm#GUID-16BDA1F1-7DAF-41CA-9EE1-C9A4CB467244" title="Creates and initializes an environment handle for OCI functions to work under.">OCIEnvCreate()</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16444"></a>
<div class="props_rev_3"><a id="GUID-8FDE667A-F0E9-413D-A2E0-6E23A04BEF8E"></a>
<h4 id="LNOCI-GUID-8FDE667A-F0E9-413D-A2E0-6E23A04BEF8E" class="sect4">Implicit and Explicit Describe Operations</h4>
<div>
<p>The column attribute <code class="codeph">OCI_ATTR_PRECISION</code> can be returned using an implicit describe with <code class="codeph">OCIStmtExecute()</code> and an explicit describe with <code class="codeph">OCIDescribeAny()</code>.</p>
<p>When you use an implicit describe, set the precision to <code class="codeph">sb2</code>. When you use an explicit describe, set the precision to <code class="codeph">ub1</code> for a placeholder. This is necessary to match the data type of precision in the dictionary.</p>
<div class="infoboxnotealso" id="GUID-8FDE667A-F0E9-413D-A2E0-6E23A04BEF8E__GUID-FF6B5005-6264-4AC3-B561-774E9032CD13">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci17msc001.htm#GUID-98B26708-3E02-45C0-8258-5D5544F32BE9" title="Associates an application request with a server.">OCIStmtExecute()</a></p>
</li>
<li>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI16445"></a>
<div class="props_rev_3"><a id="GUID-D88B96F9-7405-4864-BAFF-BAF70AC80016"></a>
<h4 id="LNOCI-GUID-D88B96F9-7405-4864-BAFF-BAF70AC80016" class="sect4">OCI_ATTR_LIST_ARGUMENTS Attribute</h4>
<div>
<p>The <code class="codeph">OCI_ATTR_LIST_ARGUMENTS</code> attribute for type methods represents <span class="italic">second-level</span> arguments for the method.</p>
<p>For example, consider the following record <code class="codeph">my_type</code> and the procedure <code class="codeph">my_proc</code> that takes an argument of type <code class="codeph">my_type:</code></p>
<pre dir="ltr">my_type record(a number, b char)
my_proc (my_input my_type)
</pre>
<p>In this example, the <code class="codeph">OCI_ATTR_LIST_ARGUMENTS</code> attribute would apply to arguments <code class="codeph">a</code> and <code class="codeph">b</code> of the <code class="codeph">my_type</code> record.</p>
</div>
</div>
</div>
</div>
<a id="LNOCI16447"></a><a id="LNOCI16446"></a>
<div class="props_rev_3"><a id="GUID-2EB52CE1-9947-472C-B8B3-24214D66EE19"></a>
<h2 id="LNOCI-GUID-2EB52CE1-9947-472C-B8B3-24214D66EE19" class="sect2">Parameter Attributes</h2>
<div>
<p>This section describes the attributes and handles that belong to different parameters.</p>
<div class="section">
<p>A parameter is returned by <code class="codeph">OCIParamGet()</code>. Parameters can describe different types of objects or information, and have attributes depending on the type of description they contain, or type-specific attributes.</p>
<p>The <code class="codeph">OCIDescribeAny()</code> call does support more than two name components (for example, <code class="codeph">schema.type.attr1.attr2.method1</code>). With more than one component, the first component is interpreted as the schema name (unless some other flag is set). There is a flag to specify that the object must be looked up under PUBLIC, that is, describe &#34;a&#34;, where &#34;a&#34; can be either in the current schema or a public synonym.</p>
<p>If you do not know what the object type is, specify <code class="codeph">OCI_PTYPE_UNK</code>. Otherwise, an error is returned if the actual object type does not match the specified type.</p>
<p><a href="oci06des.htm#GUID-2EB52CE1-9947-472C-B8B3-24214D66EE19__G454436" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-1</a> lists the attributes of all parameters.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-2EB52CE1-9947-472C-B8B3-24214D66EE19__G454436">
<p class="titleintable">Table 6-1 Attributes of All Parameters</p>
<table class="cellalignment6157" title="Attributes of All Parameters " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6166" id="d75736e2003">Attribute</th>
<th class="cellalignment6198" id="d75736e2006">Description</th>
<th class="cellalignment6167" id="d75736e2009">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e2014" headers="d75736e2003">
<p><code class="codeph">OCI_ATTR_OBJ_ID</code></p>
</td>
<td class="cellalignment6199" headers="d75736e2014 d75736e2006">
<p>Object or schema ID</p>
</td>
<td class="cellalignment6171" headers="d75736e2014 d75736e2009">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e2025" headers="d75736e2003">
<p><code class="codeph">OCI_ATTR_OBJ_NAME</code></p>
</td>
<td class="cellalignment6199" headers="d75736e2025 d75736e2006">
<p>Database name or object name in a schema</p>
</td>
<td class="cellalignment6171" headers="d75736e2025 d75736e2009">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e2036" headers="d75736e2003">
<p><code class="codeph">OCI_ATTR_OBJ_SCHEMA</code></p>
</td>
<td class="cellalignment6199" headers="d75736e2036 d75736e2006">
<p>Schema name where the object is located</p>
</td>
<td class="cellalignment6171" headers="d75736e2036 d75736e2009">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e2047" headers="d75736e2003">
<p><code class="codeph">OCI_ATTR_PTYPE</code></p>
</td>
<td class="cellalignment6199" headers="d75736e2047 d75736e2006">
<p>Type of information described by the parameter. Possible values:</p>
<p><code class="codeph">OCI_PTYPE_TABLE</code> - table</p>
<p><code class="codeph">OCI_PTYPE_VIEW</code> - view</p>
<p><code class="codeph">OCI_PTYPE_PROC</code> - procedure</p>
<p><code class="codeph">OCI_PTYPE_FUNC</code> - function</p>
<p><code class="codeph">OCI_PTYPE_PKG</code> - package</p>
<p><code class="codeph">OCI_PTYPE_TYPE</code> - type, including a package type</p>
<p><code class="codeph">OCI_PTYPE_TYPE_ATTR</code> - attribute of a type, including package record type attributes</p>
<p><code class="codeph">OCI_PTYPE_TYPE_COLL</code> - collection type information, including package collection elements</p>
<p><code class="codeph">OCI_PTYPE_TYPE_METHOD</code> - method of a type</p>
<p><code class="codeph">OCI_PTYPE_SYN</code> - synonym</p>
<p><code class="codeph">OCI_PTYPE_SEQ</code> - sequence</p>
<p><code class="codeph">OCI_PTYPE_COL</code> - column of a table or view</p>
<p><code class="codeph">OCI_PTYPE_ARG</code> - argument of a function or procedure</p>
<p><code class="codeph">OCI_PTYPE_TYPE_ARG</code> - argument of a type method</p>
<p><code class="codeph">OCI_PTYPE_TYPE_RESULT</code> - results of a method</p>
<p><code class="codeph">OCI_PTYPE_LIST</code> - column list for tables and views, argument list for functions and procedures, or subprogram list for packages</p>
<p><code class="codeph">OCI_PTYPE_SCHEMA</code> - schema</p>
<p><code class="codeph">OCI_PTYPE_DATABASE</code> - database</p>
<p><code class="codeph">OCI_PTYPE_UNK</code> - unknown schema object</p>
</td>
<td class="cellalignment6171" headers="d75736e2047 d75736e2009">
<pre dir="ltr">ub1 
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e2135" headers="d75736e2003">
<p><code class="codeph">OCI_ATTR_TIMESTAMP</code></p>
</td>
<td class="cellalignment6199" headers="d75736e2135 d75736e2006">
<p>The time stamp of the object on which the description is based in Oracle date format</p>
</td>
<td class="cellalignment6171" headers="d75736e2135 d75736e2009">
<pre dir="ltr">ub1 *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="p">The following sections list the attributes and handles specific to different types of parameters:
<ul style="list-style-type: disc;">
<li>
<p><a href="oci06des.htm#GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C">Table or View Parameters</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-516A81C4-245D-425D-9FDC-F18B35748D74" title="Lists and describes the type-specific attributes when a parameter is for a procedure or function.">Procedure, Function, and Subprogram Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-0C3F0925-5F19-4418-9111-6B4490F0AB45" title="Lists and describes the attributes when a parameter is for a package.">Package Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-6607CBC1-27BB-425D-A54C-0DDD098D1684" title="Lists and describes the attributes when a parameter is for a type.">Type Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-529D89A1-EBDF-4940-8CAE-70C6D6594E79" title="Lists and describes the attributes when a parameter is for an attribute of a type.">Type Attribute Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE" title="Lists and dsescribes the attributes when a parameter is for a method of a type.">Type Method Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-4D1F157D-8BDB-40A7-815E-5D530C301430" title="Lists and describes the attributes when a parameter is for a collection type.">Collection Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-817BA0FE-BEC5-4094-ACE3-B2246F4FF45D" title="Lists and describes the attributes when a parameter is for a synonym.">Synonym Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-D8CAC448-045B-499D-94AF-5827E0E92444" title="Lists and describes the attributes when a parameter is for a sequence.">Sequence Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46">Column Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-93E64E03-2D20-4CDB-B13F-1E39AA4116D1" title="Lists and describes the attributes when a parameter is for an argument of a procedure or function.">Argument and Result Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" title="Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.">List Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-B1E89CCE-EAAE-48D7-8A4F-D6A22EB3BB41" title="Lists and describes the attributes when a parameter is for a schema type.">Schema Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-BFB18B6E-E306-457D-90AF-22E6C6D03735" title="Lists and describes the attributes when a parameter is for a database type.">Database Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-B061B1F7-12E3-4BFC-AC24-13ADAE451072" title="Lists and describes the attributes when a parameter is for a rule.">Rule Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-5E754680-5B3F-4FEB-B3F0-DAD2CC7F8BA5" title="Lists and describes the attributes when a parameter is for a rule set.">Rule Set Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-DD810E59-1CD3-4B79-8C0D-FEF227513D3E" title="Lists and describes the attributes when a parameter is for an evaluation context.">Evaluation Context Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-0F0239DB-441F-4BF5-8044-BA50F841CE3D" title="Lists and describes the attributes when a parameter is for a table alias.">Table Alias Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-B29283D0-16A6-4D7E-839B-3A6354C47CD9" title="Lists and describes the attributes when a parameter is for a variable.">Variable Type Attributes</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-4400488C-B9EC-4EAF-879D-D21AC90F4817" title="Lists and describes the attributes when a parameter is for a name-value pair.">Name Value Attributes</a></p>
</li>
</ul>
</div>
<div class="infoboxnotealso" id="GUID-2EB52CE1-9947-472C-B8B3-24214D66EE19__GUID-B9486528-8036-4309-89D8-246C9CDF41DD">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci16rel002.htm#GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4" title="Returns a descriptor of a parameter specified by position in the describe handle or statement handle.">OCIParamGet()</a></p>
</li>
<li>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
<a id="LNOCI16449"></a><a id="LNOCI16450"></a><a id="LNOCI16448"></a>
<div class="props_rev_3"><a id="GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C"></a>
<h3 id="LNOCI-GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C" class="sect3">Table or View Parameters</h3>
<div>
<div class="section">
<p><a href="oci06des.htm#GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C__CIHHHICB" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-2</a> lists the type-specific attributes for parameters for a table or view (type <code class="codeph">OCI_PTYPE_TABLE</code> or <code class="codeph">OCI_PTYPE_VIEW</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C__CIHHHICB">
<p class="titleintable">Table 6-2 Attributes of Tables or Views</p>
<table class="cellalignment6157" title="Attributes of Tables or Views " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e2492">Attribute</th>
<th class="cellalignment6201" id="d75736e2495">Description</th>
<th class="cellalignment6202" id="d75736e2498">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2503" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_OBJID</code><a id="d75736e2507" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2503 d75736e2495">
<p>Object ID</p>
</td>
<td class="cellalignment6205" headers="d75736e2503 d75736e2498">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2518" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_NUM_COLS</code><a id="d75736e2522" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2518 d75736e2495">
<p>Number of columns</p>
</td>
<td class="cellalignment6205" headers="d75736e2518 d75736e2498">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2533" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_LIST_COLUMNS</code><a id="d75736e2537" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2533 d75736e2495">
<p>Column list (type <code class="codeph">OCI_PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment6205" headers="d75736e2533 d75736e2498">
<pre dir="ltr">OCIParam *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2551" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_REF_TDO</code><a id="d75736e2555" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2551 d75736e2495">
<p><code class="codeph">REF</code> to the type description object (TDO) of the base type for extent tables</p>
</td>
<td class="cellalignment6205" headers="d75736e2551 d75736e2498">
<pre dir="ltr">OCIRef *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2568" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_IS_TEMPORARY</code><a id="d75736e2572" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2568 d75736e2495">
<p>Indicates that the table is temporary</p>
</td>
<td class="cellalignment6205" headers="d75736e2568 d75736e2498">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2583" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_IS_TYPED</code></p>
</td>
<td class="cellalignment6204" headers="d75736e2583 d75736e2495">
<p>Indicates that the table is typed</p>
</td>
<td class="cellalignment6205" headers="d75736e2583 d75736e2498">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2594" headers="d75736e2492">
<p><code class="codeph">OCI_ATTR_DURATION</code><a id="d75736e2598" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2594 d75736e2495">
<p>Duration of a temporary table. Values can be:</p>
<p><code class="codeph">OCI_DURATION_SESSION</code> - session</p>
<p><a id="d75736e2610" class="indexterm-anchor"></a><a id="d75736e2614" class="indexterm-anchor"></a><code class="codeph">OCI_DURATION_TRANS</code> - transaction</p>
<p><code class="codeph">OCI_DURATION_NULL</code> - table not temporary</p>
</td>
<td class="cellalignment6205" headers="d75736e2594 d75736e2498">
<pre dir="ltr">OCIDuration
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p><a href="oci06des.htm#GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C__CIHIDHJE" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-3</a> lists additional attributes that belong to tables.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-1B5FD28A-4B2B-4499-A6A5-55CFED63F84C__CIHIDHJE">
<p class="titleintable">Table 6-3 Attributes Specific to Tables</p>
<table class="cellalignment6157" title="Attributes Specific to Tables " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e2644">Attribute</th>
<th class="cellalignment6201" id="d75736e2647">Description</th>
<th class="cellalignment6202" id="d75736e2650">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2655" headers="d75736e2644">
<p><code class="codeph">OCI_ATTR_RDBA</code><a id="d75736e2659" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2655 d75736e2647">
<p>Data block address of the segment header</p>
</td>
<td class="cellalignment6205" headers="d75736e2655 d75736e2650">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2670" headers="d75736e2644">
<p><code class="codeph">OCI_ATTR_TABLESPACE</code><a id="d75736e2674" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2670 d75736e2647">
<p>Tablespace that the table resides in</p>
</td>
<td class="cellalignment6205" headers="d75736e2670 d75736e2650">
<pre dir="ltr">word
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2685" headers="d75736e2644">
<p><code class="codeph">OCI_ATTR_CLUSTERED</code><a id="d75736e2689" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2685 d75736e2647">
<p>Indicates that the table is clustered</p>
</td>
<td class="cellalignment6205" headers="d75736e2685 d75736e2650">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2700" headers="d75736e2644">
<p><code class="codeph">OCI_ATTR_PARTITIONED</code><a id="d75736e2704" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2700 d75736e2647">
<p>Indicates that the table is partitioned</p>
</td>
<td class="cellalignment6205" headers="d75736e2700 d75736e2650">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e2715" headers="d75736e2644">
<p><code class="codeph">OCI_ATTR_INDEX_ONLY</code><a id="d75736e2719" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6204" headers="d75736e2715 d75736e2647">
<p>Indicates that the table is index-only</p>
</td>
<td class="cellalignment6205" headers="d75736e2715 d75736e2650">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16452"></a><a id="LNOCI16453"></a><a id="LNOCI16451"></a>
<div class="props_rev_3"><a id="GUID-516A81C4-245D-425D-9FDC-F18B35748D74"></a>
<h3 id="LNOCI-GUID-516A81C4-245D-425D-9FDC-F18B35748D74" class="sect3">Procedure, Function, and Subprogram Attributes</h3>
<div>
<p>Lists and describes the type-specific attributes when a parameter is for a procedure or function.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-516A81C4-245D-425D-9FDC-F18B35748D74__CIHDGCHI" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-4</a> lists the type-specific attributes when a parameter is for a procedure or function (type <code class="codeph">OCI_PTYPE_PROC</code> or <code class="codeph">OCI_PTYPE_FUNC</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-516A81C4-245D-425D-9FDC-F18B35748D74__CIHDGCHI">
<p class="titleintable">Table 6-4 Attributes of Procedures or Functions</p>
<table class="cellalignment6157" title="Attributes of Procedures or Functions " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6168" id="d75736e2938">Attribute</th>
<th class="cellalignment6206" id="d75736e2941">Description</th>
<th class="cellalignment6207" id="d75736e2944">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e2949" headers="d75736e2938">
<p><code class="codeph">OCI_ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e2949 d75736e2941">
<p>Argument list. See <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" title="Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.">List Attributes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e2949 d75736e2944">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e2966" headers="d75736e2938">
<p><code class="codeph">OCI_ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e2966 d75736e2941">
<p>Indicates that the procedure or function has invoker&#39;s rights</p>
</td>
<td class="cellalignment6209" headers="d75736e2966 d75736e2944">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p><a href="oci06des.htm#GUID-516A81C4-245D-425D-9FDC-F18B35748D74__CIHBICAE" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-5</a> lists the attributes that are defined only for package subprograms.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-516A81C4-245D-425D-9FDC-F18B35748D74__CIHBICAE">
<p class="titleintable">Table 6-5 Attributes Specific to Package Subprograms</p>
<table class="cellalignment6157" title="Attributes Specific to Package Subprograms" summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e2994">Attribute</th>
<th class="cellalignment6201" id="d75736e2997">Description</th>
<th class="cellalignment6202" id="d75736e3000">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e3005" headers="d75736e2994">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6204" headers="d75736e3005 d75736e2997">
<p>Name of the procedure or function</p>
</td>
<td class="cellalignment6205" headers="d75736e3005 d75736e3000">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e3016" headers="d75736e2994">
<p><code class="codeph">OCI_ATTR_OVERLOAD_ID</code></p>
</td>
<td class="cellalignment6204" headers="d75736e3016 d75736e2997">
<p>Overloading ID number (relevant in case the procedure or function is part of a package and is overloaded). Values returned may be different from direct query of a PL/SQL function or procedure.</p>
</td>
<td class="cellalignment6205" headers="d75736e3016 d75736e3000">
<pre dir="ltr">ub2
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16455"></a><a id="LNOCI16454"></a>
<div class="props_rev_3"><a id="GUID-0C3F0925-5F19-4418-9111-6B4490F0AB45"></a>
<h3 id="LNOCI-GUID-0C3F0925-5F19-4418-9111-6B4490F0AB45" class="sect3">Package Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a package.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-0C3F0925-5F19-4418-9111-6B4490F0AB45__CIHDECFF" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-6</a> lists the attributes when a parameter is for a package (type <code class="codeph">OCI_PTYPE_PKG</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-0C3F0925-5F19-4418-9111-6B4490F0AB45__CIHDECFF">
<p class="titleintable">Table 6-6 Attributes of Packages</p>
<table class="cellalignment6157" title="Attributes of Packages " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6167" id="d75736e3216">Attribute</th>
<th class="cellalignment6194" id="d75736e3219">Description</th>
<th class="cellalignment6207" id="d75736e3222">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6171" id="d75736e3227" headers="d75736e3216">
<p><code class="codeph">OCI_ATTR_LIST_PKG_TYPES</code></p>
</td>
<td class="cellalignment6196" headers="d75736e3227 d75736e3219">
<p>Get a list of all types in an <code class="codeph">OCI_PTYPE_PKG</code> package parameter handle.</p>
</td>
<td class="cellalignment6209" headers="d75736e3227 d75736e3222">
<div class="p">
<pre dir="ltr">void *
</pre></div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6171" id="d75736e3242" headers="d75736e3216">
<p><code class="codeph">OCI_ATTR_LIST_SUBPROGRAMS</code></p>
</td>
<td class="cellalignment6196" headers="d75736e3242 d75736e3219">
<p>Subprogram list. See <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" title="Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.">List Attributes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e3242 d75736e3222">
<div class="p">
<pre dir="ltr">void *
</pre></div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6171" id="d75736e3260" headers="d75736e3216">
<p><code class="codeph">OCI_ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment6196" headers="d75736e3260 d75736e3219">
<p>Indicates that the package has invoker&#39;s rights?</p>
</td>
<td class="cellalignment6209" headers="d75736e3260 d75736e3222">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16457"></a><a id="LNOCI16456"></a>
<div class="props_rev_3"><a id="GUID-6607CBC1-27BB-425D-A54C-0DDD098D1684"></a>
<h3 id="LNOCI-GUID-6607CBC1-27BB-425D-A54C-0DDD098D1684" class="sect3">Type Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a type.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-6607CBC1-27BB-425D-A54C-0DDD098D1684__G453808" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-7</a> lists the attributes when a parameter is for a type (type <code class="codeph">OCI_PTYPE_TYPE</code>). These attributes are only valid if the application initialized the OCI process in <code class="codeph">OCI_OBJECT</code> mode in a call to <code class="codeph">OCIEnvCreate()</code>.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-6607CBC1-27BB-425D-A54C-0DDD098D1684__G453808">
<p class="titleintable">Table 6-7 Attributes of Types</p>
<table class="cellalignment6157" title="Attributes of Types " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6166" id="d75736e3568">Attribute</th>
<th class="cellalignment6206" id="d75736e3571">Description</th>
<th class="cellalignment6210" id="d75736e3574">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3579" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3579 d75736e3571">
<p>Returns the in-memory <code class="codeph">REF</code> of the type descriptor object (TDO) for the type, if the column type is an object type. If space has not been reserved for the <code class="codeph">OCIRef</code>, then it is allocated implicitly in the cache. The caller can then pin the TDO with <code class="codeph">OCIObjectPin()</code>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3579 d75736e3574">
<pre dir="ltr">OCIRef *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3599" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3599 d75736e3571">
<p>Typecode. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>. Currently can be only <code class="codeph">OCI_TYPECODE_OBJECT</code>, <code class="codeph">OCI_TYPECODE_NAMEDCOLLECTION</code>, or <code class="codeph">OCI_TYPECODE_RECORD</code>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3599 d75736e3574">
<pre dir="ltr">OCITypeCode
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3631" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_COLLECTION_TYPECODE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3631 d75736e3571">
<p>Typecode of collection if type is collection; invalid otherwise. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>. Currently can be only <code class="codeph">OCI_TYPECODE_VARRAY</code>, <code class="codeph">OCI_TYPECODE_TABLE</code>, or <code class="codeph">OCI_TYPECODE_ITABLE</code>. If this attribute is queried for a type that is not a collection, an error is returned.</p>
</td>
<td class="cellalignment6211" headers="d75736e3631 d75736e3574">
<pre dir="ltr">OCITypeCode
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3663" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_INCOMPLETE_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3663 d75736e3571">
<p>Indicates that this is an incomplete type</p>
</td>
<td class="cellalignment6211" headers="d75736e3663 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3674" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_SYSTEM_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3674 d75736e3571">
<p>Indicates that this is a system type</p>
</td>
<td class="cellalignment6211" headers="d75736e3674 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3685" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_PREDEFINED_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3685 d75736e3571">
<p>Indicates that this is a predefined type</p>
</td>
<td class="cellalignment6211" headers="d75736e3685 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3696" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_TRANSIENT_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3696 d75736e3571">
<p>Indicates that this is a transient type</p>
</td>
<td class="cellalignment6211" headers="d75736e3696 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3707" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_SYSTEM_GENERATED_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3707 d75736e3571">
<p>Indicates that this is a system-generated type</p>
</td>
<td class="cellalignment6211" headers="d75736e3707 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3718" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_HAS_NESTED_TABLE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3718 d75736e3571">
<p>This type contains a nested table attribute.</p>
</td>
<td class="cellalignment6211" headers="d75736e3718 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3729" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_HAS_LOB</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3729 d75736e3571">
<p>This type contains a LOB attribute.</p>
</td>
<td class="cellalignment6211" headers="d75736e3729 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3740" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_HAS_FILE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3740 d75736e3571">
<p>This type contains a <code class="codeph">BFILE</code> attribute.</p>
</td>
<td class="cellalignment6211" headers="d75736e3740 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3755" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_COLLECTION_ELEMENT</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3755 d75736e3571">
<p>Handle to collection element. See <a href="oci06des.htm#GUID-4D1F157D-8BDB-40A7-815E-5D530C301430" title="Lists and describes the attributes when a parameter is for a collection type.">Collection Attributes</a>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3755 d75736e3574">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3772" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_NUM_TYPE_ATTRS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3772 d75736e3571">
<p>Number of type attributes</p>
</td>
<td class="cellalignment6211" headers="d75736e3772 d75736e3574">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3783" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_LIST_TYPE_ATTRS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3783 d75736e3571">
<p>List of type attributes. See <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" title="Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.">List Attributes</a>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3783 d75736e3574">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3800" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_NUM_TYPE_METHODS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3800 d75736e3571">
<p>Number of type methods</p>
</td>
<td class="cellalignment6211" headers="d75736e3800 d75736e3574">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3811" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_LIST_TYPE_METHODS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3811 d75736e3571">
<p>List of type methods. See <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" title="Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.">List Attributes</a>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3811 d75736e3574">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3828" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_MAP_METHOD</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3828 d75736e3571">
<p>Map method of type. See <a href="oci06des.htm#GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE" title="Lists and dsescribes the attributes when a parameter is for a method of a type.">Type Method Attributes</a>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3828 d75736e3574">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3845" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_ORDER_METHOD</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3845 d75736e3571">
<p>Order method of type. See <a href="oci06des.htm#GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE" title="Lists and dsescribes the attributes when a parameter is for a method of a type.">Type Method Attributes</a>.</p>
</td>
<td class="cellalignment6211" headers="d75736e3845 d75736e3574">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3862" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3862 d75736e3571">
<p>Indicates that the type has invoker&#39;s rights</p>
</td>
<td class="cellalignment6211" headers="d75736e3862 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3873" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3873 d75736e3571">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment6211" headers="d75736e3873 d75736e3574">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3884" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_PACKAGE_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3884 d75736e3571">
<p>A string with the package name if the attribute is a package type.</p>
</td>
<td class="cellalignment6211" headers="d75736e3884 d75736e3574">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3895" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3895 d75736e3571">
<p>A string with the schema name where the type has been created</p>
</td>
<td class="cellalignment6211" headers="d75736e3895 d75736e3574">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3907" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_FINAL_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3907 d75736e3571">
<p>Indicates that this is a final type</p>
</td>
<td class="cellalignment6211" headers="d75736e3907 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3918" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_INSTANTIABLE_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3918 d75736e3571">
<p>Indicates that this is an instantiable type</p>
</td>
<td class="cellalignment6211" headers="d75736e3918 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3929" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_IS_SUBTYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3929 d75736e3571">
<p>Indicates that this is a subtype</p>
</td>
<td class="cellalignment6211" headers="d75736e3929 d75736e3574">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3940" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_SUPERTYPE_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3940 d75736e3571">
<p>Name of the schema that contains the supertype</p>
</td>
<td class="cellalignment6211" headers="d75736e3940 d75736e3574">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e3951" headers="d75736e3568">
<p><code class="codeph">OCI_ATTR_SUPERTYPE_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e3951 d75736e3571">
<p>Name of the supertype</p>
</td>
<td class="cellalignment6211" headers="d75736e3951 d75736e3574">
<pre dir="ltr">OraText *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-6607CBC1-27BB-425D-A54C-0DDD098D1684__GUID-BCAA19BD-753E-4D2F-B352-970F57E29ABE">
<p class="notep1">See Also:</p>
<p><a href="oci16rel001.htm#GUID-16BDA1F1-7DAF-41CA-9EE1-C9A4CB467244" title="Creates and initializes an environment handle for OCI functions to work under.">OCIEnvCreate()</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16459"></a><a id="LNOCI16458"></a>
<div class="props_rev_3"><a id="GUID-529D89A1-EBDF-4940-8CAE-70C6D6594E79"></a>
<h3 id="LNOCI-GUID-529D89A1-EBDF-4940-8CAE-70C6D6594E79" class="sect3">Type Attribute Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for an attribute of a type.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-529D89A1-EBDF-4940-8CAE-70C6D6594E79__G453920" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-8</a> lists the attributes when a parameter is for an attribute of a type (type <code class="codeph">OCI_PTYPE_TYPE_ATTR</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-529D89A1-EBDF-4940-8CAE-70C6D6594E79__G453920">
<p class="titleintable">Table 6-8 Attributes of Type Attributes</p>
<table class="cellalignment6157" title="Attributes of Type Attributes " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6168" id="d75736e4205">Attribute</th>
<th class="cellalignment6206" id="d75736e4208">Description</th>
<th class="cellalignment6207" id="d75736e4211">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4216" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4216 d75736e4208">
<p>The maximum size of the type attribute. This length is returned in bytes and not characters for strings and raws. It returns 22 for <code class="codeph">NUMBER</code>s.</p>
</td>
<td class="cellalignment6209" headers="d75736e4216 d75736e4211">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4230" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4230 d75736e4208">
<p>Typecode. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e4230 d75736e4211">
<pre dir="ltr">OCITypeCode
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4253" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4253 d75736e4208">
<p>The data type of the type attribute. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e4253 d75736e4211">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4276" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4276 d75736e4208">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment6209" headers="d75736e4276 d75736e4211">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4287" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_PRECISION</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4287 d75736e4208">
<p>The precision of numeric type attributes. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6209" headers="d75736e4287 d75736e4211">
<div class="p">
<pre dir="ltr">ub1
</pre>
for explicit describe</div>
<div class="p">
<pre dir="ltr">sb2
</pre>
for implicit describe</div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4316" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_SCALE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4316 d75736e4208">
<p>The scale of numeric type attributes. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6209" headers="d75736e4316 d75736e4211">
<pre dir="ltr">sb1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4339" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_PACKAGE_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4339 d75736e4208">
<p>A string that is the package name of a type if it is a package type.</p>
</td>
<td class="cellalignment6209" headers="d75736e4339 d75736e4211">
<div class="p">
<pre dir="ltr">OraText *
</pre></div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4351" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4351 d75736e4208">
<p>A string that is the type name. The returned value contains the type name if the data type is <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>. If the data type is <code class="codeph">SQLT_NTY</code>, the name of the named data type&#39;s type is returned. If the data type is <code class="codeph">SQLT_REF</code>, the type name of the named data type pointed to by the <code class="codeph">REF</code> is returned.</p>
</td>
<td class="cellalignment6209" headers="d75736e4351 d75736e4211">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4377" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4377 d75736e4208">
<p>A string with the schema name under which the type has been created</p>
</td>
<td class="cellalignment6209" headers="d75736e4377 d75736e4211">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4388" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4388 d75736e4208">
<p>Returns the in-memory <code class="codeph">REF</code> of the TDO for the type, if the column type is an object type. If space has not been reserved for the <code class="codeph">OCIRef</code>, then it is allocated implicitly in the cache. The caller can then pin the TDO with <code class="codeph">OCIObjectPin()</code>.</p>
</td>
<td class="cellalignment6209" headers="d75736e4388 d75736e4211">
<pre dir="ltr">OCIRef *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4408" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4408 d75736e4208">
<p>The character set ID, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment6209" headers="d75736e4408 d75736e4211">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4420" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4420 d75736e4208">
<p>The character set form, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment6209" headers="d75736e4420 d75736e4211">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4431" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_FSPRECISION</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4431 d75736e4208">
<p>The fractional seconds precision of a datetime or interval</p>
</td>
<td class="cellalignment6209" headers="d75736e4431 d75736e4211">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6172" id="d75736e4442" headers="d75736e4205">
<p><code class="codeph">OCI_ATTR_LFPRECISION</code></p>
</td>
<td class="cellalignment6208" headers="d75736e4442 d75736e4208">
<p>The leading field precision of an interval</p>
</td>
<td class="cellalignment6209" headers="d75736e4442 d75736e4211">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16461"></a><a id="LNOCI16460"></a>
<div class="props_rev_3"><a id="GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE"></a>
<h3 id="LNOCI-GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE" class="sect3">Type Method Attributes</h3>
<div>
<p>Lists and dsescribes the attributes when a parameter is for a method of a type.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE__G454036" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-9</a> lists the attributes when a parameter is for a method of a type (type <a id="d75736e4695" class="indexterm-anchor"></a><code class="codeph">OCI_PTYPE_TYPE_METHOD</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-9D9DBD87-CFE9-415F-A2DD-85B0B01F65EE__G454036">
<p class="titleintable">Table 6-9 Attributes of Type Methods</p>
<table class="cellalignment6157" title="Attributes of Type Methods " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6212" id="d75736e4711">Attribute</th>
<th class="cellalignment6213" id="d75736e4714">Description</th>
<th class="cellalignment6207" id="d75736e4717">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4722" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4722 d75736e4714">
<p>Name of method (procedure or function)</p>
</td>
<td class="cellalignment6209" headers="d75736e4722 d75736e4717">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4733" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_ENCAPSULATION</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4733 d75736e4714">
<p>Encapsulation level of the method (either <code class="codeph">OCI_TYPEENCAP_PRIVATE</code> or <code class="codeph">OCI_TYPEENCAP_PUBLIC</code>)</p>
</td>
<td class="cellalignment6209" headers="d75736e4733 d75736e4717">
<pre dir="ltr">OCITypeEncap
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4750" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4750 d75736e4714">
<p>Argument list. See <a href="oci06des.htm#GUID-D88B96F9-7405-4864-BAFF-BAF70AC80016">OCI_ATTR_LIST_ARGUMENTS Attribute</a>, and <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" title="Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.">List Attributes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e4750 d75736e4717">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4770" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_CONSTRUCTOR</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4770 d75736e4714">
<p>Indicates that method is a constructor</p>
</td>
<td class="cellalignment6209" headers="d75736e4770 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4781" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_DESTRUCTOR</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4781 d75736e4714">
<p>Indicates that method is a destructor</p>
</td>
<td class="cellalignment6209" headers="d75736e4781 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4792" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_OPERATOR</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4792 d75736e4714">
<p>Indicates that method is an operator</p>
</td>
<td class="cellalignment6209" headers="d75736e4792 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4803" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_SELFISH</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4803 d75736e4714">
<p>Indicates that method is selfish</p>
</td>
<td class="cellalignment6209" headers="d75736e4803 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4814" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_MAP</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4814 d75736e4714">
<p>Indicates that method is a map method</p>
</td>
<td class="cellalignment6209" headers="d75736e4814 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4825" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_ORDER</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4825 d75736e4714">
<p>Indicates that method is an order method</p>
</td>
<td class="cellalignment6209" headers="d75736e4825 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4836" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_RNDS</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4836 d75736e4714">
<p>Indicates that &#34;Read No Data State&#34; is set for method</p>
</td>
<td class="cellalignment6209" headers="d75736e4836 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4847" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_RNPS</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4847 d75736e4714">
<p>Indicates that &#34;Read No Process State&#34; is set for method</p>
</td>
<td class="cellalignment6209" headers="d75736e4847 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4859" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_WNDS</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4859 d75736e4714">
<p>Indicates that &#34;Write No Data State&#34; is set for method</p>
</td>
<td class="cellalignment6209" headers="d75736e4859 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4870" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_WNPS</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4870 d75736e4714">
<p>Indicates that &#34;Write No Process State&#34; is set for method</p>
</td>
<td class="cellalignment6209" headers="d75736e4870 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4881" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_FINAL_METHOD</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4881 d75736e4714">
<p>Indicates that this is a final method</p>
</td>
<td class="cellalignment6209" headers="d75736e4881 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4892" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_INSTANTIABLE_METHOD</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4892 d75736e4714">
<p>Indicates that this is an instantiable method</p>
</td>
<td class="cellalignment6209" headers="d75736e4892 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d75736e4903" headers="d75736e4711">
<p><code class="codeph">OCI_ATTR_IS_OVERRIDING_METHOD</code></p>
</td>
<td class="cellalignment6215" headers="d75736e4903 d75736e4714">
<p>Indicates that this is an overriding method</p>
</td>
<td class="cellalignment6209" headers="d75736e4903 d75736e4717">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16463"></a><a id="LNOCI16462"></a>
<div class="props_rev_3"><a id="GUID-4D1F157D-8BDB-40A7-815E-5D530C301430"></a>
<h3 id="LNOCI-GUID-4D1F157D-8BDB-40A7-815E-5D530C301430" class="sect3">Collection Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a collection type.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-4D1F157D-8BDB-40A7-815E-5D530C301430__G453980" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-10</a> lists the attributes when a parameter is for a collection type (type <code class="codeph">OCI_PTYPE_COLL</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-4D1F157D-8BDB-40A7-815E-5D530C301430__G453980">
<p class="titleintable">Table 6-10 Attributes of Collection Types</p>
<table class="cellalignment6157" title="Attributes of Collection Types " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6216" id="d75736e5144">Attribute</th>
<th class="cellalignment6217" id="d75736e5147">Description</th>
<th class="cellalignment6207" id="d75736e5150">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5155" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5155 d75736e5147">
<p>The maximum size of the type attribute. This length is returned in bytes and not characters for strings and raws. It returns 22 for <code class="codeph">NUMBER</code>s.</p>
</td>
<td class="cellalignment6209" headers="d75736e5155 d75736e5150">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5169" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5169 d75736e5147">
<p>Typecode. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e5169 d75736e5150">
<pre dir="ltr">OCITypeCode
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5192" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5192 d75736e5147">
<p>The data type of the type attribute. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>.</p>
</td>
<td class="cellalignment6209" headers="d75736e5192 d75736e5150">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5215" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_NUM_ELEMS</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5215 d75736e5147">
<p>The number of elements in an array. It is only valid for collections that are arrays.</p>
</td>
<td class="cellalignment6209" headers="d75736e5215 d75736e5150">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5226" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5226 d75736e5147">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment6209" headers="d75736e5226 d75736e5150">
<pre dir="ltr"><span>OraText *</span>
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5238" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_PRECISION</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5238 d75736e5147">
<p>The precision of numeric type attributes. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6209" headers="d75736e5238 d75736e5150">
<pre dir="ltr">ub1
</pre>
<p>for explicit describe</p>
<pre dir="ltr">sb2
</pre>
<p>for implicit describe</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5267" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_SCALE</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5267 d75736e5147">
<p>The scale of numeric type attributes. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6209" headers="d75736e5267 d75736e5150">
<pre dir="ltr">sb1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5290" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_PACKAGE_NAME</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5290 d75736e5147">
<p>A string that is the package name of a type if it is a package type.</p>
</td>
<td class="cellalignment6209" headers="d75736e5290 d75736e5150">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5301" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5301 d75736e5147">
<p>A string that is the type name. The returned value contains the type name if the data type is <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>. If the data type is <code class="codeph">SQLT_NTY</code>, the name of the named data type&#39;s type is returned. If the data type is <code class="codeph">SQLT_REF</code>, the type name of the named data type pointed to by the <code class="codeph">REF</code> is returned.</p>
</td>
<td class="cellalignment6209" headers="d75736e5301 d75736e5150">
<pre dir="ltr"><span>OraText *</span>
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5328" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5328 d75736e5147">
<p>A string with the schema name under which the type has been created</p>
</td>
<td class="cellalignment6209" headers="d75736e5328 d75736e5150">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5339" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5339 d75736e5147">
<p>Returns the in-memory <code class="codeph">REF</code> of the type descriptor object (TDO) for the type, if the column type is an object type. If space has not been reserved for the <code class="codeph">OCIRef</code>, then it is allocated implicitly in the cache. The caller can then pin the TDO with <code class="codeph">OCIObjectPin()</code>.</p>
</td>
<td class="cellalignment6209" headers="d75736e5339 d75736e5150">
<pre dir="ltr">OCIRef *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5360" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5360 d75736e5147">
<p>The character set ID, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment6209" headers="d75736e5360 d75736e5150">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e5371" headers="d75736e5144">
<p><code class="codeph">OCI_ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment6219" headers="d75736e5371 d75736e5147">
<p>The character set form, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment6209" headers="d75736e5371 d75736e5150">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16465"></a><a id="LNOCI16464"></a>
<div class="props_rev_3"><a id="GUID-817BA0FE-BEC5-4094-ACE3-B2246F4FF45D"></a>
<h3 id="LNOCI-GUID-817BA0FE-BEC5-4094-ACE3-B2246F4FF45D" class="sect3">Synonym Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a synonym.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-817BA0FE-BEC5-4094-ACE3-B2246F4FF45D__G454108" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-11</a> lists the attributes when a parameter is for a synonym (type <code class="codeph">OCI_PTYPE_SYN</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-817BA0FE-BEC5-4094-ACE3-B2246F4FF45D__G454108">
<p class="titleintable">Table 6-11 Attributes of Synonyms</p>
<table class="cellalignment6157" title="Attributes of Synonyms " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6220" id="d75736e5580">Attribute</th>
<th class="cellalignment6192" id="d75736e5583">Description</th>
<th class="cellalignment6202" id="d75736e5586">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6221" id="d75736e5591" headers="d75736e5580">
<p><code class="codeph">OCI_ATTR_OBJID</code></p>
</td>
<td class="cellalignment6193" headers="d75736e5591 d75736e5583">
<p>Object ID</p>
</td>
<td class="cellalignment6205" headers="d75736e5591 d75736e5586">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6221" id="d75736e5602" headers="d75736e5580">
<p><code class="codeph">OCI_ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment6193" headers="d75736e5602 d75736e5583">
<p>A string containing the schema name of the synonym translation</p>
</td>
<td class="cellalignment6205" headers="d75736e5602 d75736e5586">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6221" id="d75736e5613" headers="d75736e5580">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6193" headers="d75736e5613 d75736e5583">
<p>A <code class="codeph">NULL</code>-terminated string containing the object name of the synonym translation</p>
</td>
<td class="cellalignment6205" headers="d75736e5613 d75736e5586">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6221" id="d75736e5627" headers="d75736e5580">
<p><code class="codeph">OCI_ATTR_LINK</code></p>
</td>
<td class="cellalignment6193" headers="d75736e5627 d75736e5583">
<p>A <code class="codeph">NULL</code>-terminated string containing the database link name of the synonym translation</p>
</td>
<td class="cellalignment6205" headers="d75736e5627 d75736e5586">
<pre dir="ltr">OraText *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16467"></a><a id="LNOCI16466"></a>
<div class="props_rev_3"><a id="GUID-D8CAC448-045B-499D-94AF-5827E0E92444"></a>
<h3 id="LNOCI-GUID-D8CAC448-045B-499D-94AF-5827E0E92444" class="sect3">Sequence Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a sequence.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-D8CAC448-045B-499D-94AF-5827E0E92444__G454132" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-12</a> lists the attributes when a parameter is for a sequence (type <code class="codeph">OCI_PTYPE_SEQ</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-D8CAC448-045B-499D-94AF-5827E0E92444__G454132">
<p class="titleintable">Table 6-12 Attributes of Sequences</p>
<table class="cellalignment6157" title="Attributes of Sequences " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e5850">Attribute</th>
<th class="cellalignment6201" id="d75736e5853">Description</th>
<th class="cellalignment6202" id="d75736e5856">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5861" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_OBJID</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5861 d75736e5853">
<p>Object ID</p>
</td>
<td class="cellalignment6205" headers="d75736e5861 d75736e5856">
<div class="p">
<pre dir="ltr">ub4
</pre></div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5873" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_MIN</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5873 d75736e5853">
<p>Minimum value (in Oracle <code class="codeph">NUMBER</code> format)</p>
</td>
<td class="cellalignment6205" headers="d75736e5873 d75736e5856">
<div class="p">
<pre dir="ltr">ub1
</pre></div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5888" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_MAX</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5888 d75736e5853">
<p>Maximum value (in Oracle <code class="codeph">NUMBER</code> format)</p>
</td>
<td class="cellalignment6205" headers="d75736e5888 d75736e5856">
<div class="p">
<pre dir="ltr">ub1
</pre></div>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5903" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_INCR</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5903 d75736e5853">
<p>Increment (in Oracle <code class="codeph">NUMBER</code> format)</p>
</td>
<td class="cellalignment6205" headers="d75736e5903 d75736e5856">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5917" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_CACHE</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5917 d75736e5853">
<p>Number of sequence numbers cached; zero if the sequence is not a cached sequence (in Oracle <code class="codeph">NUMBER</code> format)</p>
</td>
<td class="cellalignment6205" headers="d75736e5917 d75736e5856">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5931" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_ORDER</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5931 d75736e5853">
<p>Whether the sequence is ordered</p>
</td>
<td class="cellalignment6205" headers="d75736e5931 d75736e5856">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e5942" headers="d75736e5850">
<p><code class="codeph">OCI_ATTR_HW_MARK</code></p>
</td>
<td class="cellalignment6204" headers="d75736e5942 d75736e5853">
<p>High-water mark (in <code class="codeph">NUMBER</code> format)</p>
</td>
<td class="cellalignment6205" headers="d75736e5942 d75736e5856">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-D8CAC448-045B-499D-94AF-5827E0E92444__GUID-04DDA8D3-CD78-4945-B52C-45D3A7FB285D">
<p class="notep1">See Also:</p>
<p><a href="oci12oty.htm#GUID-E1683C5B-40A2-4D79-993D-D1B9B9256B41">OCINumber Examples</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16469"></a><a id="LNOCI16468"></a>
<div class="props_rev_3"><a id="GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46"></a>
<h3 id="LNOCI-GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46" class="sect3">Column Attributes</h3>
<div>
<div class="section">
<div class="infobox-note" id="GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46__GUID-FEB84B14-918B-4724-900A-8CE9A11ADE57">
<p class="notep1">Note:</p>
<p>For <code class="codeph">BINARY_FLOAT</code> and <code class="codeph">BINARY_DOUBLE</code>:</p>
<p>If <a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a> is used to retrieve the column data type (<code class="codeph">OCI_ATTR_DATA_TYPE</code>) for <code class="codeph">BINARY_FLOAT</code> or <code class="codeph">BINARY_DOUBLE</code> columns in a table, it returns the internal data type code.</p>
<p>The SQLT codes corresponding to the internal data type codes for <code class="codeph">BINARY_FLOAT</code> and <code class="codeph">BINARY_DOUBLE</code> are <a id="d75736e6155" class="indexterm-anchor"></a><code class="codeph">SQLT_IBFLOAT</code> and <a id="d75736e6160" class="indexterm-anchor"></a><code class="codeph">SQLT_IBDOUBLE</code>.</p>
</div>
<p><a href="oci06des.htm#GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46__G454168" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-13</a> lists the attributes when a parameter is for a column of a table or view (type <code class="codeph">OCI_PTYPE_COL</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46__G454168">
<p class="titleintable">Table 6-13 Attributes of Columns of Tables or Views</p>
<table class="cellalignment6157" title="Attributes of Columns of Tables or Views " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6166" id="d75736e6185">Attribute</th>
<th class="cellalignment6222" id="d75736e6188">Description</th>
<th class="cellalignment6223" id="d75736e6191">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6196" headers="d75736e6185">
<p><a id="d75736e6198" class="indexterm-anchor"></a><code class="codeph">OCI_ATTR_CHAR_USED</code></p>
</td>
<td class="cellalignment6224" headers="d75736e6196 d75736e6188">
<p>Returns the type of length semantics of the column. Zero (0) means byte-length semantics and 1 means character-length semantics. See <span class="q">&#34;<a href="oci06des.htm#GUID-6941EC35-5C3F-4031-94E5-2347C4ABE96A" title="Query and column information are supported with character-length semantics.">Character-Length Semantics Support in Describe Operations</a>&#34;</span>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6196 d75736e6191">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6217" headers="d75736e6185">
<p><a id="d75736e6219" class="indexterm-anchor"></a><code class="codeph">OCI_ATTR_CHAR_SIZE</code></p>
</td>
<td class="cellalignment6224" headers="d75736e6217 d75736e6188">
<p>Returns the column character length that is the number of characters allowed in the column. It is the counterpart of <code class="codeph">OCI_ATTR_DATA_SIZE</code>, which gets the byte length. See <span class="q">&#34;<a href="oci06des.htm#GUID-6941EC35-5C3F-4031-94E5-2347C4ABE96A" title="Query and column information are supported with character-length semantics.">Character-Length Semantics Support in Describe Operations</a>&#34;</span>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6217 d75736e6191">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6241" headers="d75736e6185">
<p><a id="d75736e6243" class="indexterm-anchor"></a><code class="codeph">OCI_ATTR_COLUMN_ PROPERTIES</code></p>
</td>
<td class="cellalignment6224" headers="d75736e6241 d75736e6188">
<p>Return describe data regarding certain column properties. The following are the flags available in <code class="codeph">OCI_ATTR_COLUMN_PROPERTIES</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_ATTR_COLUMN_PROPERTY_IS_IDENTITY</code></p>
</li>
<li>
<p><code class="codeph">OCI_ATTR_COLUMN_PROPERTY_IS_GEN_ALWAYS</code></p>
<ul style="list-style-type: disc;">
<li>
<p>1 - represents it is <code class="codeph">ALWAYS GENERATED</code></p>
</li>
<li>
<p>0 - represents <code class="codeph">GENERATED BY DEFAULT</code></p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">OCI_ATTR_COLUMN_PROPERTY_IS_GEN_BY_DEF_ON_NULL</code></p>
</li>
</ul>
<p>The following is a sample usage:</p>
<pre dir="ltr">OCIAttrGet((dvoid*) mypard, (ub4) OCI_DTYPE_PARAM,
  (dvoid*) &amp;col_prop, (ub4 *) 0,(ub4) OCI_ATTR_COL_PROPERTIES,
  (OCIError *) errhp  ));
if(col_prop &amp; OCI_ATTR_COL_PROPERTY_IS_IDENTITY)
  printf(&#34;Identity Column \n&#34;);
if(col_prop &amp; OCI_ATTR_COL_PROPERTY_IS_GEN_ALWAYS)
  printf(&#34;Column is always generated\n&#34;);
if(col_prop &amp; OCI_ATTR_COL_PROPERTY_IS_GEN_BY_DEF_ON_NULL)
  printf(&#34;Column is generated by default on NULL\n&#34;);
</pre>
<p>See <a class="olink SQLRF55655" target="_blank" href="../SQLRF/statements_7002.htm#SQLRF55655"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the SQL syntax to specify these properties in an identity clause for a column definition in the <code class="codeph">CREATE TABLE</code> statement.</p>
</td>
<td class="cellalignment6225" headers="d75736e6241 d75736e6191">
<p><code class="codeph">ub8</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6296" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_INVISIBLE_COL</code></p>
</td>
<td class="cellalignment6224" headers="d75736e6296 d75736e6188">
<p>This attribute returns whether a column is invisible or not. <code class="codeph">TRUE</code> indicates the column is an invisible column, or else returns <code class="codeph">FALSE</code>. See <span class="q">&#34;<a href="oci06des.htm#GUID-226E1195-36C2-4296-9247-C06055198E24" title="Illustrates the use of invisible column properties and checking each column to determine if it is an invisible column.">Describing Each Column to Know Whether It Is an Invisible Column</a>&#34;</span> for an example.</p>
</td>
<td class="cellalignment6225" headers="d75736e6296 d75736e6191">
<p><code class="codeph">ub1 *</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6322" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_DATA_SIZE</code><a id="d75736e6326" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6322 d75736e6188">
<p>The maximum size of the column. This length is returned in bytes and not characters for strings and raws. It returns 22 for <code class="codeph">NUMBER</code>s.</p>
</td>
<td class="cellalignment6225" headers="d75736e6322 d75736e6191">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6340" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_DATA_TYPE</code><a id="d75736e6344" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6340 d75736e6188">
<p>The data type of the column. See <span class="q">&#34;<a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>&#34;</span>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6340 d75736e6191">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6369" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_NAME</code><a id="d75736e6373" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6369 d75736e6188">
<p>A pointer to a string that is the column name</p>
</td>
<td class="cellalignment6225" headers="d75736e6369 d75736e6191">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6384" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_PRECISION</code><a id="d75736e6388" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6384 d75736e6188">
<p>The precision of numeric columns. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6384 d75736e6191">
<pre dir="ltr">ub1 for explicit describe
sb2 for implicit describe
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6411" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_SCALE</code><a id="d75736e6415" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6411 d75736e6188">
<p>The scale of numeric columns. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER</code>(<code class="codeph">precision, scale</code>). When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6411 d75736e6191">
<pre dir="ltr">sb1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6441" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_IS_NULL</code><a id="d75736e6445" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6441 d75736e6188">
<p>Returns 0 if null values are not permitted for the column. Does not return a correct value for a <code class="codeph">CUBE</code> or <code class="codeph">ROLLUP</code> operation.</p>
</td>
<td class="cellalignment6225" headers="d75736e6441 d75736e6191">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6462" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_TYPE_NAME</code><a id="d75736e6466" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6462 d75736e6188">
<p>Returns a string that is the type name. The returned value contains the type name if the data type is <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>. If the data type is <code class="codeph">SQLT_NTY</code>, the name of the named data type&#39;s type is returned. If the data type is <code class="codeph">SQLT_REF</code>, the type name of the named data type pointed to by the <code class="codeph">REF</code> is returned.</p>
</td>
<td class="cellalignment6225" headers="d75736e6462 d75736e6191">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6493" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_SCHEMA_NAME</code><a id="d75736e6497" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6493 d75736e6188">
<p>Returns a string with the schema name under which the type has been created</p>
</td>
<td class="cellalignment6225" headers="d75736e6493 d75736e6191">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6508" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_REF_TDO</code><a id="d75736e6512" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6508 d75736e6188">
<p>The <code class="codeph">REF</code> of the TDO for the type, if the column type is an object type</p>
</td>
<td class="cellalignment6225" headers="d75736e6508 d75736e6191">
<pre dir="ltr">OCIRef *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6526" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_CHARSET_ID</code><a id="d75736e6530" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6526 d75736e6188">
<p>The character set ID, if the column is of a string or character type</p>
</td>
<td class="cellalignment6225" headers="d75736e6526 d75736e6191">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6170" id="d75736e6541" headers="d75736e6185">
<p><code class="codeph">OCI_ATTR_CHARSET_FORM</code><a id="d75736e6545" class="indexterm-anchor"></a></p>
</td>
<td class="cellalignment6224" headers="d75736e6541 d75736e6188">
<p>The character set form, if the column is of a string or character type</p>
</td>
<td class="cellalignment6225" headers="d75736e6541 d75736e6191">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16471"></a><a id="LNOCI16470"></a>
<div class="props_rev_3"><a id="GUID-93E64E03-2D20-4CDB-B13F-1E39AA4116D1"></a>
<h3 id="LNOCI-GUID-93E64E03-2D20-4CDB-B13F-1E39AA4116D1" class="sect3">Argument and Result Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for an argument of a procedure or function.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-93E64E03-2D20-4CDB-B13F-1E39AA4116D1__G454228" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-14</a> lists the attributes when a parameter is for an argument of a procedure or function (type <code class="codeph">OCI_PTYPE_ARG</code>), for a type method argument (type <code class="codeph">OCI_PTYPE_TYPE_ARG</code>), or for method results (type <code class="codeph">OCI_PTYPE_TYPE_RESULT</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-93E64E03-2D20-4CDB-B13F-1E39AA4116D1__G454228">
<p class="titleintable">Table 6-14 Attributes of Arguments and Results</p>
<table class="cellalignment6157" title="Attributes of Arguments and Results " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6216" id="d75736e6823">Attribute</th>
<th class="cellalignment6206" id="d75736e6826">Description</th>
<th class="cellalignment6223" id="d75736e6829">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6834" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6834 d75736e6826">
<p>Returns a pointer to a string that is the argument name</p>
</td>
<td class="cellalignment6225" headers="d75736e6834 d75736e6829">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6845" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_POSITION</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6845 d75736e6826">
<p>The position of the argument in the argument list. Always returns zero.</p>
</td>
<td class="cellalignment6225" headers="d75736e6845 d75736e6829">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6856" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6856 d75736e6826">
<p>Typecode. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6856 d75736e6829">
<pre dir="ltr">OCITypeCode
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6879" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6879 d75736e6826">
<p>The data type of the argument. See <a href="oci06des.htm#GUID-3DAA1B33-CF11-46CF-8F73-176A019FE311" title="The OCI_ATTR_TYPECODE attribute returns typecodes that represent the types supplied by the user when a new type is created using the CREATE TYPE statement.">Data Type Codes</a>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6879 d75736e6829">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6902" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6902 d75736e6826">
<p>The size of the data type of the argument. This length is returned in bytes and not characters for strings and raws. It returns 22 for <code class="codeph">NUMBER</code>s.</p>
</td>
<td class="cellalignment6225" headers="d75736e6902 d75736e6829">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6916" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_PRECISION</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6916 d75736e6826">
<p>The precision of numeric arguments. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6916 d75736e6829">
<p><code class="codeph">sb1</code> for explicit describe</p>
<p><code class="codeph">sb2</code> for implicit describe</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6945" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_SCALE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6945 d75736e6826">
<p>The scale of numeric arguments. If the precision is nonzero and scale is -127, then it is a <code class="codeph">FLOAT</code>; otherwise, it is a <code class="codeph">NUMBER(precision, scale)</code>. When precision is 0, <code class="codeph">NUMBER(precision, scale)</code> can be represented simply as <code class="codeph">NUMBER</code>.</p>
</td>
<td class="cellalignment6225" headers="d75736e6945 d75736e6829">
<p><code class="codeph">sb1</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6969" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_LEVEL</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6969 d75736e6826">
<p>The data type levels. This attribute always returns zero.</p>
</td>
<td class="cellalignment6225" headers="d75736e6969 d75736e6829">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6980" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_HAS_DEFAULT</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6980 d75736e6826">
<p>Indicates whether an argument has a default</p>
</td>
<td class="cellalignment6225" headers="d75736e6980 d75736e6829">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e6991" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment6208" headers="d75736e6991 d75736e6826">
<p>The list of arguments at the next level (when the argument is of a record or table type)</p>
</td>
<td class="cellalignment6225" headers="d75736e6991 d75736e6829">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7002" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_IOMODE</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7002 d75736e6826">
<p>Indicates the argument mode:</p>
<p>0 is IN (<code class="codeph">OCI_TYPEPARAM_IN</code>),</p>
<p>1 is OUT (<code class="codeph">OCI_TYPEPARAM_OUT</code>),</p>
<p>2 is IN/OUT (<code class="codeph">OCI_TYPEPARAM_INOUT</code>)</p>
</td>
<td class="cellalignment6225" headers="d75736e7002 d75736e6829">
<pre dir="ltr">OCITypeParamMode
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7029" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_RADIX</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7029 d75736e6826">
<p>Returns a radix (if number type)</p>
</td>
<td class="cellalignment6225" headers="d75736e7029 d75736e6829">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7040" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_IS_NULL</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7040 d75736e6826">
<p>Returns 0 if null values are not permitted for the column</p>
</td>
<td class="cellalignment6225" headers="d75736e7040 d75736e6829">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7051" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7051 d75736e6826">
<p>Returns a string that is the type name or the package name for package local types. The returned value contains the type name if the data type is <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>. If the data type is <code class="codeph">SQLT_NTY</code>, the name of the named data type&#39;s type is returned. If the data type is <code class="codeph">SQLT_REF</code>, the type name of the named data type pointed to by the <code class="codeph">REF</code> is returned.</p>
</td>
<td class="cellalignment6225" headers="d75736e7051 d75736e6829">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7077" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7077 d75736e6826">
<p>For <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>, returns a string with the schema name under which the type was created, or under which the package was created for package local types</p>
</td>
<td class="cellalignment6225" headers="d75736e7077 d75736e6829">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7094" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_SUB_NAME</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7094 d75736e6826">
<p>For <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>, returns a string with the type name, for package local types</p>
</td>
<td class="cellalignment6225" headers="d75736e7094 d75736e6829">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7111" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_LINK</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7111 d75736e6826">
<p>For <code class="codeph">SQLT_NTY</code> or <code class="codeph">SQLT_REF</code>, returns a string with the database link name of the database on which the type exists. This can happen only for package local types, when the package is remote.</p>
</td>
<td class="cellalignment6225" headers="d75736e7111 d75736e6829">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7128" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7128 d75736e6826">
<p>Returns the <code class="codeph">REF</code> of the type descriptor object (TDO) for the type, if the argument type is an object</p>
</td>
<td class="cellalignment6225" headers="d75736e7128 d75736e6829">
<pre dir="ltr">OCIRef *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7142" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7142 d75736e6826">
<p>Returns the character set ID if the argument is of a string or character type</p>
</td>
<td class="cellalignment6225" headers="d75736e7142 d75736e6829">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6218" id="d75736e7153" headers="d75736e6823">
<p><code class="codeph">OCI_ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment6208" headers="d75736e7153 d75736e6826">
<p>Returns the character set form if the argument is of a string or character type</p>
</td>
<td class="cellalignment6225" headers="d75736e7153 d75736e6829">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16473"></a><a id="LNOCI16472"></a>
<div class="props_rev_3"><a id="GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B"></a>
<h3 id="LNOCI-GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B" class="sect3">List Attributes</h3>
<div>
<p>Lists and describes the attributes when the parameter is for a list of columns, arguments, and subprograms, or fields of a package record type.</p>
<div class="section">
<p>When a parameter is for a list of columns, arguments, and subprograms, or fields of a package record type (type <code class="codeph">OCI_PTYPE_LIST</code>), it has the type-specific attributes and handles (parameters) shown in <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B__G453664" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-15</a>.</p>
<p>The list has an <code class="codeph">OCI_ATTR_LTYPE</code> attribute that designates the list type. <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B__G453664" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-15</a> lists the possible values and their lower bounds when traversing the list.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B__G453664">
<p class="titleintable">Table 6-15 List Attributes</p>
<table class="cellalignment6157" title="List Attributes " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e7385">List Attribute</th>
<th class="cellalignment6201" id="d75736e7388">Description</th>
<th class="cellalignment6226" id="d75736e7391">Lower Bound</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7396" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_COLUMN</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7396 d75736e7388">
<p>Column list</p>
</td>
<td class="cellalignment6227" headers="d75736e7396 d75736e7391">
<p>1</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7407" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_ARG_PROC</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7407 d75736e7388">
<p>Procedure argument list</p>
</td>
<td class="cellalignment6227" headers="d75736e7407 d75736e7391">
<p>1</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7418" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_ARG_FUNC</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7418 d75736e7388">
<p>Function argument list</p>
</td>
<td class="cellalignment6227" headers="d75736e7418 d75736e7391">
<p>0</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7429" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_SUBPRG</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7429 d75736e7388">
<p>Subprogram list</p>
</td>
<td class="cellalignment6227" headers="d75736e7429 d75736e7391">
<p>0</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7440" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_TYPE_ATTR</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7440 d75736e7388">
<p>Type attribute list</p>
</td>
<td class="cellalignment6227" headers="d75736e7440 d75736e7391">
<p>1</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7451" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_TYPE_METHOD</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7451 d75736e7388">
<p>Type method list</p>
</td>
<td class="cellalignment6227" headers="d75736e7451 d75736e7391">
<p>1</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7462" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_TYPE_ARG_PROC</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7462 d75736e7388">
<p>Type method without result argument list</p>
</td>
<td class="cellalignment6227" headers="d75736e7462 d75736e7391">
<p>0</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7473" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_TYPE_ARG_FUNC</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7473 d75736e7388">
<p>Type method without result argument list</p>
</td>
<td class="cellalignment6227" headers="d75736e7473 d75736e7391">
<p>1</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7484" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_SCH_OBJ</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7484 d75736e7388">
<p>Object list within a schema</p>
</td>
<td class="cellalignment6227" headers="d75736e7484 d75736e7391">
<p>0</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7495" headers="d75736e7385">
<p><code class="codeph">OCI_LTYPE_DB_SCH</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7495 d75736e7388">
<p>Schema list within a database</p>
</td>
<td class="cellalignment6227" headers="d75736e7495 d75736e7391">
<p>0</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>The list has an <code class="codeph">OCI_ATTR_NUM_PARAMS</code> attribute, which tells the number of elements in the list.</p>
<p>Each list has <code class="codeph">LowerBound</code> ... <code class="codeph">OCI_ATTR_NUM_PARAMS</code> parameters. <code class="codeph">LowerBound</code> is the value in the Lower Bound column of <a href="oci06des.htm#GUID-C4DC723E-DE79-43FB-9733-F5E32373F69B__G453664" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-15</a>. For a function argument list, position 0 has a parameter for the return value (type <code class="codeph">OCI_PTYPE_ARG</code>).</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16475"></a><a id="LNOCI16474"></a>
<div class="props_rev_3"><a id="GUID-B1E89CCE-EAAE-48D7-8A4F-D6A22EB3BB41"></a>
<h3 id="LNOCI-GUID-B1E89CCE-EAAE-48D7-8A4F-D6A22EB3BB41" class="sect3">Schema Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a schema type.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-B1E89CCE-EAAE-48D7-8A4F-D6A22EB3BB41__G454316" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-16</a> lists the attributes when a parameter is for a schema type (type <code class="codeph">OCI_PTYPE_SCHEMA</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-B1E89CCE-EAAE-48D7-8A4F-D6A22EB3BB41__G454316">
<p class="titleintable">Table 6-16 Attributes Specific to Schemas</p>
<table class="cellalignment6157" title="Attributes Specific to Schemas " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e7720">Attribute</th>
<th class="cellalignment6201" id="d75736e7723">Description</th>
<th class="cellalignment6202" id="d75736e7726">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e7731" headers="d75736e7720">
<p><code class="codeph">OCI_ATTR_LIST_OBJECTS</code></p>
</td>
<td class="cellalignment6204" headers="d75736e7731 d75736e7723">
<p>List of objects in the schema</p>
</td>
<td class="cellalignment6205" headers="d75736e7731 d75736e7726">
<pre dir="ltr">OCIParam *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16477"></a><a id="LNOCI16476"></a>
<div class="props_rev_3"><a id="GUID-BFB18B6E-E306-457D-90AF-22E6C6D03735"></a>
<h3 id="LNOCI-GUID-BFB18B6E-E306-457D-90AF-22E6C6D03735" class="sect3">Database Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a database type.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-BFB18B6E-E306-457D-90AF-22E6C6D03735__G454328" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-17</a> lists the attributes when a parameter is for a database type (type <code class="codeph">OCI_PTYPE_DATABASE</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-BFB18B6E-E306-457D-90AF-22E6C6D03735__G454328">
<p class="titleintable">Table 6-17 Attributes Specific to Databases</p>
<table class="cellalignment6157" title="Attributes Specific to Databases " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6186" id="d75736e7981">Attribute</th>
<th class="cellalignment6178" id="d75736e7984">Description</th>
<th class="cellalignment6202" id="d75736e7987">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e7992" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_VERSION</code></p>
</td>
<td class="cellalignment6181" headers="d75736e7992 d75736e7984">
<p>Database version</p>
</td>
<td class="cellalignment6205" headers="d75736e7992 d75736e7987">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8003" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8003 d75736e7984">
<p>Database character set ID from the server handle</p>
</td>
<td class="cellalignment6205" headers="d75736e8003 d75736e7987">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8014" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_NCHARSET_ID</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8014 d75736e7984">
<p>Database national character set ID from the server handle</p>
</td>
<td class="cellalignment6205" headers="d75736e8014 d75736e7987">
<pre dir="ltr">ub2
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8025" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_LIST_SCHEMAS</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8025 d75736e7984">
<p>List of schemas (type <code class="codeph">OCI_PTYPE_SCHEMA</code>) in the database</p>
</td>
<td class="cellalignment6205" headers="d75736e8025 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8039" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_MAX_PROC_LEN</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8039 d75736e7984">
<p>Maximum length of a procedure name</p>
</td>
<td class="cellalignment6205" headers="d75736e8039 d75736e7987">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8050" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_MAX_COLUMN_LEN</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8050 d75736e7984">
<p>Maximum length of a column name</p>
</td>
<td class="cellalignment6205" headers="d75736e8050 d75736e7987">
<pre dir="ltr">ub4
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8061" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_CURSOR_COMMIT_BEHAVIOR</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8061 d75736e7984">
<p>How a <code class="codeph">COMMIT</code> operation affects cursors and prepared statements in the database. Values are:</p>
<p><code class="codeph">OCI_CURSOR_OPEN</code> - Preserve cursor state as before the commit operation.</p>
<p><code class="codeph">OCI_CURSOR_CLOSED</code> - Cursors are closed on <code class="codeph">COMMIT</code>, but the application can still reexecute the statement without preparing it again.</p>
</td>
<td class="cellalignment6205" headers="d75736e8061 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8086" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_MAX_CATALOG_NAMELEN</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8086 d75736e7984">
<p>Maximum length of a catalog (database) name</p>
</td>
<td class="cellalignment6205" headers="d75736e8086 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8097" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_CATALOG_LOCATION</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8097 d75736e7984">
<p>Position of the catalog in a qualified table. Values are <code class="codeph">OCI_CL_START</code> and <code class="codeph">OCI_CL_END</code>.</p>
</td>
<td class="cellalignment6205" headers="d75736e8097 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8114" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_SAVEPOINT_SUPPORT</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8114 d75736e7984">
<p>Does database support savepoints? Values are <code class="codeph">OCI_SP_SUPPORTED</code> and <code class="codeph">OCI_SP_UNSUPPORTED</code>.</p>
</td>
<td class="cellalignment6205" headers="d75736e8114 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8131" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_NOWAIT_SUPPORT</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8131 d75736e7984">
<p>Does database support the nowait clause? Values are <code class="codeph">OCI_NW_SUPPORTED</code> and <code class="codeph">OCI_NW_UNSUPPORTED</code>.</p>
</td>
<td class="cellalignment6205" headers="d75736e8131 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8149" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_AUTOCOMMIT_DDL</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8149 d75736e7984">
<p>Is autocommit mode required for DDL statements? Values are <code class="codeph">OCI_AC_DDL</code> and <code class="codeph">OCI_NO_AC_DDL</code>.</p>
</td>
<td class="cellalignment6205" headers="d75736e8149 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6189" id="d75736e8166" headers="d75736e7981">
<p><code class="codeph">OCI_ATTR_LOCKING_MODE</code></p>
</td>
<td class="cellalignment6181" headers="d75736e8166 d75736e7984">
<p>Locking mode for the database. Values are <code class="codeph">OCI_LOCK_IMMEDIATE</code> and <code class="codeph">OCI_LOCK_DELAYED</code>.</p>
</td>
<td class="cellalignment6205" headers="d75736e8166 d75736e7987">
<pre dir="ltr">ub1
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16479"></a><a id="LNOCI16478"></a>
<div class="props_rev_3"><a id="GUID-B061B1F7-12E3-4BFC-AC24-13ADAE451072"></a>
<h3 id="LNOCI-GUID-B061B1F7-12E3-4BFC-AC24-13ADAE451072" class="sect3">Rule Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a rule.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-B061B1F7-12E3-4BFC-AC24-13ADAE451072__G454404" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-18</a> lists the attributes when a parameter is for a rule (type <code class="codeph">OCI_PTYPE_RULE</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-B061B1F7-12E3-4BFC-AC24-13ADAE451072__G454404">
<p class="titleintable">Table 6-18 Attributes Specific to Rules</p>
<table class="cellalignment6157" title="Attributes Specific to Rules " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6178" id="d75736e8394">Attribute</th>
<th class="cellalignment6186" id="d75736e8397">Description</th>
<th class="cellalignment6226" id="d75736e8400">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6181" id="d75736e8405" headers="d75736e8394">
<p><code class="codeph">OCI_ATTR_CONDITION</code></p>
</td>
<td class="cellalignment6189" headers="d75736e8405 d75736e8397">
<p>Rule condition</p>
</td>
<td class="cellalignment6227" headers="d75736e8405 d75736e8400">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6181" id="d75736e8416" headers="d75736e8394">
<p><code class="codeph">OCI_ATTR_EVAL_CONTEXT_OWNER</code></p>
</td>
<td class="cellalignment6189" headers="d75736e8416 d75736e8397">
<p>Owner name of the evaluation context associated with the rule, if any</p>
</td>
<td class="cellalignment6227" headers="d75736e8416 d75736e8400">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6181" id="d75736e8427" headers="d75736e8394">
<p><code class="codeph">OCI_ATTR_EVAL_CONTEXT_NAME</code></p>
</td>
<td class="cellalignment6189" headers="d75736e8427 d75736e8397">
<p>Object name of the evaluation context associated with the rule, if any</p>
</td>
<td class="cellalignment6227" headers="d75736e8427 d75736e8400">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6181" id="d75736e8438" headers="d75736e8394">
<p><code class="codeph">OCI_ATTR_COMMENT</code></p>
</td>
<td class="cellalignment6189" headers="d75736e8438 d75736e8397">
<p>Comment associated with the rule, if any</p>
</td>
<td class="cellalignment6227" headers="d75736e8438 d75736e8400">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6181" id="d75736e8449" headers="d75736e8394">
<p><code class="codeph">OCI_ATTR_LIST_ACTION_CONTEXT</code></p>
</td>
<td class="cellalignment6189" headers="d75736e8449 d75736e8397">
<p>List of name-value pairs in the action context (type <code class="codeph">OCI_PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment6227" headers="d75736e8449 d75736e8400">
<pre dir="ltr">void *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16481"></a><a id="LNOCI16480"></a>
<div class="props_rev_3"><a id="GUID-5E754680-5B3F-4FEB-B3F0-DAD2CC7F8BA5"></a>
<h3 id="LNOCI-GUID-5E754680-5B3F-4FEB-B3F0-DAD2CC7F8BA5" class="sect3">Rule Set Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a rule set.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-5E754680-5B3F-4FEB-B3F0-DAD2CC7F8BA5__G454468" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-19</a> lists the attributes when a parameter is for a rule set (type <code class="codeph">OCI_PTYPE_RULE_SET</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-5E754680-5B3F-4FEB-B3F0-DAD2CC7F8BA5__G454468">
<p class="titleintable">Table 6-19 Attributes Specific to Rule Sets</p>
<table class="cellalignment6157" title="Attributes Specific to Rule Sets " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e8670">Attribute</th>
<th class="cellalignment6201" id="d75736e8673">Description</th>
<th class="cellalignment6202" id="d75736e8676">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8681" headers="d75736e8670">
<p><code class="codeph">OCI_ATTR_EVAL_CONTEXT_OWNER</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8681 d75736e8673">
<p>Owner name of the evaluation context associated with the rule set, if any</p>
</td>
<td class="cellalignment6205" headers="d75736e8681 d75736e8676">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8692" headers="d75736e8670">
<p><code class="codeph">OCI_ATTR_EVAL_CONTEXT_NAME</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8692 d75736e8673">
<p>Object name of the evaluation context associated with the rule set, if any</p>
</td>
<td class="cellalignment6205" headers="d75736e8692 d75736e8676">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8703" headers="d75736e8670">
<p><code class="codeph">OCI_ATTR_COMMENT</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8703 d75736e8673">
<p>Comment associated with the rule set, if any</p>
</td>
<td class="cellalignment6205" headers="d75736e8703 d75736e8676">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8714" headers="d75736e8670">
<p><code class="codeph">OCI_ATTR_LIST_RULES</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8714 d75736e8673">
<p>List of rules in the rule set (type <code class="codeph">OCI_PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment6205" headers="d75736e8714 d75736e8676">
<pre dir="ltr">void *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16483"></a><a id="LNOCI16482"></a>
<div class="props_rev_3"><a id="GUID-DD810E59-1CD3-4B79-8C0D-FEF227513D3E"></a>
<h3 id="LNOCI-GUID-DD810E59-1CD3-4B79-8C0D-FEF227513D3E" class="sect3">Evaluation Context Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for an evaluation context.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-DD810E59-1CD3-4B79-8C0D-FEF227513D3E__G454492" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-20</a> lists the attributes when a parameter is for an evaluation context (type <code class="codeph">OCI_PTYPE_EVALUATION_CONTEXT</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-DD810E59-1CD3-4B79-8C0D-FEF227513D3E__G454492">
<p class="titleintable">Table 6-20 Attributes Specific to Evaluation Contexts</p>
<table class="cellalignment6157" title="Attributes Specific to Evaluation Contexts " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e8932">Attribute</th>
<th class="cellalignment6201" id="d75736e8935">Description</th>
<th class="cellalignment6202" id="d75736e8938">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8943" headers="d75736e8932">
<p><code class="codeph">OCI_ATTR_EVALUATION_FUNCTION</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8943 d75736e8935">
<p>Evaluation function associated with the evaluation context, if any</p>
</td>
<td class="cellalignment6205" headers="d75736e8943 d75736e8938">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8954" headers="d75736e8932">
<p><code class="codeph">OCI_ATTR_COMMENT</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8954 d75736e8935">
<p>Comment associated with the evaluation context, if any</p>
</td>
<td class="cellalignment6205" headers="d75736e8954 d75736e8938">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8965" headers="d75736e8932">
<p><code class="codeph">OCI_ATTR_LIST_TABLE_ALIASES</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8965 d75736e8935">
<p>List of table aliases in the evaluation context (type <code class="codeph">OCI_PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment6205" headers="d75736e8965 d75736e8938">
<pre dir="ltr">void *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e8979" headers="d75736e8932">
<p><code class="codeph">OCI_ATTR_LIST_VARIABLE_TYPES</code></p>
</td>
<td class="cellalignment6204" headers="d75736e8979 d75736e8935">
<p>List of variable types in the evaluation context (type <code class="codeph">OCI_PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment6205" headers="d75736e8979 d75736e8938">
<pre dir="ltr">void *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16485"></a><a id="LNOCI16484"></a>
<div class="props_rev_3"><a id="GUID-0F0239DB-441F-4BF5-8044-BA50F841CE3D"></a>
<h3 id="LNOCI-GUID-0F0239DB-441F-4BF5-8044-BA50F841CE3D" class="sect3">Table Alias Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a table alias.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-0F0239DB-441F-4BF5-8044-BA50F841CE3D__G454516" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-21</a> lists the attributes when a parameter is for a table alias (type <code class="codeph">OCI_PTYPE_TABLE_ALIAS</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-0F0239DB-441F-4BF5-8044-BA50F841CE3D__G454516">
<p class="titleintable">Table 6-21 Attributes Specific to Table Aliases</p>
<table class="cellalignment6157" title="Attributes Specific to Table Aliases " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e9188">Attribute</th>
<th class="cellalignment6201" id="d75736e9191">Description</th>
<th class="cellalignment6202" id="d75736e9194">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e9199" headers="d75736e9188">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6204" headers="d75736e9199 d75736e9191">
<p>Table alias name</p>
</td>
<td class="cellalignment6205" headers="d75736e9199 d75736e9194">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e9210" headers="d75736e9188">
<p><code class="codeph">OCI_ATTR_TABLE_NAME</code></p>
</td>
<td class="cellalignment6204" headers="d75736e9210 d75736e9191">
<p>Table name associated with the alias</p>
</td>
<td class="cellalignment6205" headers="d75736e9210 d75736e9194">
<pre dir="ltr">OraText *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16487"></a><a id="LNOCI16486"></a>
<div class="props_rev_3"><a id="GUID-B29283D0-16A6-4D7E-839B-3A6354C47CD9"></a>
<h3 id="LNOCI-GUID-B29283D0-16A6-4D7E-839B-3A6354C47CD9" class="sect3">Variable Type Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a variable.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-B29283D0-16A6-4D7E-839B-3A6354C47CD9__G454532" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-22</a> lists the attributes when a parameter is for a variable (type <code class="codeph">OCI_PTYPE_VARIABLE_TYPE</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-B29283D0-16A6-4D7E-839B-3A6354C47CD9__G454532">
<p class="titleintable">Table 6-22 Attributes Specific to Variable Types</p>
<table class="cellalignment6157" title="Attributes Specific to Variable Types " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6228" id="d75736e9406">Attribute</th>
<th class="cellalignment6186" id="d75736e9409">Description</th>
<th class="cellalignment6229" id="d75736e9412">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6230" id="d75736e9417" headers="d75736e9406">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6189" headers="d75736e9417 d75736e9409">
<p>Variable name</p>
</td>
<td class="cellalignment6231" headers="d75736e9417 d75736e9412">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6230" id="d75736e9428" headers="d75736e9406">
<p><code class="codeph">OCI_ATTR_TYPE</code></p>
</td>
<td class="cellalignment6189" headers="d75736e9428 d75736e9409">
<p>Variable type</p>
</td>
<td class="cellalignment6231" headers="d75736e9428 d75736e9412">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6230" id="d75736e9439" headers="d75736e9406">
<p><code class="codeph">OCI_ATTR_VAR_VALUE_FUNCTION</code></p>
</td>
<td class="cellalignment6189" headers="d75736e9439 d75736e9409">
<p>Variable value function associated with the variable, if any</p>
</td>
<td class="cellalignment6231" headers="d75736e9439 d75736e9412">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6230" id="d75736e9450" headers="d75736e9406">
<p><code class="codeph">OCI_ATTR_VAR_METHOD_FUNCTION</code></p>
</td>
<td class="cellalignment6189" headers="d75736e9450 d75736e9409">
<p>Variable method function associated with the variable, if any</p>
</td>
<td class="cellalignment6231" headers="d75736e9450 d75736e9412">
<pre dir="ltr">OraText *
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16489"></a><a id="LNOCI16488"></a>
<div class="props_rev_3"><a id="GUID-4400488C-B9EC-4EAF-879D-D21AC90F4817"></a>
<h3 id="LNOCI-GUID-4400488C-B9EC-4EAF-879D-D21AC90F4817" class="sect3">Name Value Attributes</h3>
<div>
<p>Lists and describes the attributes when a parameter is for a name-value pair.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-4400488C-B9EC-4EAF-879D-D21AC90F4817__G454556" title="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">Table 6-23</a> lists the attributes when a parameter is for a name-value pair (type <code class="codeph">OCI_PTYPE_NAME_VALUE</code>).</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-4400488C-B9EC-4EAF-879D-D21AC90F4817__G454556">
<p class="titleintable">Table 6-23 Attributes Specific to Name-Value Pair</p>
<table class="cellalignment6157" title="Attributes Specific to Name-Value Pair " summary="This table has 3 columns. Column 1 is the attribute name, column 2 is its description, and column 3 is the corresponding attribute data type.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6200" id="d75736e9655">Attribute</th>
<th class="cellalignment6201" id="d75736e9658">Description</th>
<th class="cellalignment6202" id="d75736e9661">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e9666" headers="d75736e9655">
<p><code class="codeph">OCI_ATTR_NAME</code></p>
</td>
<td class="cellalignment6204" headers="d75736e9666 d75736e9658">
<p>Name</p>
</td>
<td class="cellalignment6205" headers="d75736e9666 d75736e9661">
<pre dir="ltr">OraText *
</pre></td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6203" id="d75736e9677" headers="d75736e9655">
<p><code class="codeph">OCI_ATTR_VALUE</code></p>
</td>
<td class="cellalignment6204" headers="d75736e9677 d75736e9658">
<p>Value</p>
</td>
<td class="cellalignment6205" headers="d75736e9677 d75736e9661">
<pre dir="ltr">OCIAnyData*
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="LNOCI16490"></a>
<div class="props_rev_3"><a id="GUID-6941EC35-5C3F-4031-94E5-2347C4ABE96A"></a>
<h2 id="LNOCI-GUID-6941EC35-5C3F-4031-94E5-2347C4ABE96A" class="sect2">Character-Length Semantics Support in Describe Operations</h2>
<div>
<p>Query and column information are supported with character-length semantics.</p>
<p>Since release Oracle9<span class="italic">i</span>, query and column information are supported with character-length semantics.</p>
<p>The following attributes of describe handles support character-length semantics:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_ATTR_CHAR_SIZE</code> gets the column character length, which is the number of characters allowed in the column. It is the counterpart of <code class="codeph">OCI_ATTR_DATA_SIZE</code>, which gets the byte length.</p>
</li>
<li>
<p>Calling <code class="codeph">OCIAttrGet()</code> with attribute <code class="codeph">OCI_ATTR_CHAR_SIZE</code> or <code class="codeph">OCI_ATTR_DATA_SIZE</code> does not return data on stored procedure parameters, because stored procedure parameters are not bounded.</p>
</li>
<li>
<p><code class="codeph">OCI_ATTR_CHAR_USED</code> gets the type of length semantics of the column. Zero (0) means byte-length semantics and 1 means character-length semantics.</p>
</li>
</ul>
<p>An application can describe a select-list query either implicitly or explicitly through <code class="codeph">OCIStmtExecute()</code>. Other schema elements must be described explicitly through <code class="codeph">OCIDescribeAny()</code>.</p>
<div class="p">This section includes the following topics:
<ul style="list-style-type: disc;">
<li>
<p><a href="oci06des.htm#GUID-2B84E3EF-2C89-4DDC-9EE5-8F5CAD505D7B">Implicit Describing</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-5980E756-5D6F-4CB4-B108-FC9ED4F0A95A" title="Explicit describes of tables have three attributes: OCI_ATTR_DATA_SIZE, OCI_ATTR_CHAR_SIZE, and OCI_ATTR_CHAR_USED.">Explicit Describing</a></p>
</li>
</ul>
</div>
<div class="infoboxnotealso" id="GUID-6941EC35-5C3F-4031-94E5-2347C4ABE96A__GUID-90EB5A7A-E981-4A25-9FFA-849EDF5DC054">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci17msc001.htm#GUID-98B26708-3E02-45C0-8258-5D5544F32BE9" title="Associates an application request with a server.">OCIStmtExecute()</a></p>
</li>
<li>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16491"></a>
<div class="props_rev_3"><a id="GUID-2B84E3EF-2C89-4DDC-9EE5-8F5CAD505D7B"></a>
<h3 id="LNOCI-GUID-2B84E3EF-2C89-4DDC-9EE5-8F5CAD505D7B" class="sect3">Implicit Describing</h3>
<div>
<p>If the database <a id="d75736e10080" class="indexterm-anchor"></a>column was created using character-length semantics, then the implicit describe information contains the character length, the byte length, and a flag indicating how the database column was created. <code class="codeph">OCI_ATTR_CHAR_SIZE</code> is the character length of the column or expression. The <code class="codeph">OCI_ATTR_CHAR_USED</code> flag is 1 in this case, indicating that the column or expression was created with character-length semantics.</p>
<p>The <code class="codeph">OCI_ATTR_DATA_SIZE</code> value is always large enough to hold all the data, as many as <code class="codeph">OCI_ATTR_CHAR_SIZE</code> number of characters. The <code class="codeph">OCI_ATTR_DATA_SIZE</code> is usually set to (<code class="codeph">OCI_ATTR_CHAR_SIZE</code>)*(the client&#39;s maximum number of bytes) for each character value.</p>
<p>If the database column was created with byte-length semantics, then for the implicit describe (it behaves exactly as it does before release 9.0) the <code class="codeph">OCI_ATTR_DATA_SIZE</code> value returned is (column&#39;s byte length)*(the maximum conversion ratio between the client and server&#39;s character set). That is, the column byte length divided by the server&#39;s maximum number of bytes for each character multiplied by the client&#39;s maximum number of bytes for each character. The <code class="codeph">OCI_ATTR_CHAR_USED</code> value is 0 and the <code class="codeph">OCI_ATTR_CHAR_SIZE</code> value is set to the same value as <code class="codeph">OCI_ATTR_DATA_SIZE</code>.</p>
</div>
</div>
<a id="LNOCI16492"></a>
<div class="props_rev_3"><a id="GUID-5980E756-5D6F-4CB4-B108-FC9ED4F0A95A"></a>
<h3 id="LNOCI-GUID-5980E756-5D6F-4CB4-B108-FC9ED4F0A95A" class="sect3">Explicit Describing</h3>
<div>
<p>Explicit describes of tables have three attributes: <code class="codeph">OCI_ATTR_DATA_SIZE</code>, <code class="codeph">OCI_ATTR_CHAR_SIZE</code>, and <code class="codeph">OCI_ATTR_CHAR_USED</code>.</p>
<p>Explicit describes of tables have the following attributes:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_ATTR_DATA_SIZE</code> gets the column&#39;s size in bytes, as it appears in the server</p>
</li>
<li>
<p><code class="codeph">OCI_ATTR_CHAR_SIZE</code> indicates the length of the column in characters</p>
</li>
<li>
<p><code class="codeph">OCI_ATTR_CHAR_USED</code>, is a flag that indicates how the column was created, as described previously in terms of the type of length semantics of the column</p>
</li>
</ul>
<p>When inserting, if the <code class="codeph">OCI_ATTR_CHAR_USED</code> flag is set, you can set the <code class="codeph">OCI_ATTR_MAXCHAR_SIZE</code> in the bind handle to the value returned by <code class="codeph">OCI_ATTR_CHAR_SIZE</code> in the parameter handle. This prevents you from violating the size constraint for the column.</p>
<p>This section includes the following topic: <a href="oci06des.htm#GUID-BFECC627-DBE5-49B0-9E97-49B65A040EF9" title="Character-length semantics depends on the release of the server or client. It is best described when both server and client are Oracle9i or later. Otherwise, compatibility issues as described result.">Client and Server Compatibility Issues for Describing</a>.</p>
<div class="infoboxnotealso" id="GUID-5980E756-5D6F-4CB4-B108-FC9ED4F0A95A__GUID-8DAA27F0-6CA2-4E92-88E8-2CB173EE00A7">
<p class="notep1">See Also:</p>
<p><a href="oci05bnd.htm#GUID-FC68A968-3B5F-4991-B676-3B8E3B78E177">IN Binds</a></p>
</div>
</div>
<a id="LNOCI16493"></a>
<div class="props_rev_3"><a id="GUID-BFECC627-DBE5-49B0-9E97-49B65A040EF9"></a>
<h4 id="LNOCI-GUID-BFECC627-DBE5-49B0-9E97-49B65A040EF9" class="sect4">Client and Server Compatibility Issues for Describing</h4>
<div>
<p>Character-length semantics depends on the release of the server or client. It is best described when both server and client are Oracle9<span class="italic">i</span> or later. Otherwise, compatibility issues as described result.</p>
<p>When an Oracle9<span class="italic">i</span> or later client talks to an Oracle8<span class="italic">i</span> or earlier server, it behaves as if the database is only using byte-length semantics.</p>
<p>When an Oracle8<span class="italic">i</span> or earlier client talks to a Oracle9<span class="italic">i</span> or later server, the attributes <code class="codeph">OCI_ATTR_CHAR_SIZE</code> and <code class="codeph">OCI_ATTR_CHAR_USED</code> are not available on the client side.</p>
<p>In both cases, the character-length semantics cannot be described when either the server or client has an Oracle8<span class="italic">i</span> or earlier software release.</p>
</div>
</div>
</div>
</div>
<a id="LNOCI16494"></a>
<div class="props_rev_3"><a id="GUID-A1FEDF38-F835-49D5-BBB5-69E5BAA7D759"></a>
<h2 id="LNOCI-GUID-A1FEDF38-F835-49D5-BBB5-69E5BAA7D759" class="sect2">Examples Using OCIDescribeAny()</h2>
<div>
<p>The following examples demonstrate the use of <code class="codeph">OCIDescribeAny()</code> for describing different types of schema objects.</p>
<p>For a more detailed code sample, see the demonstration program <code class="codeph">cdemodsa.c</code> included with your Oracle Database installation.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci06des.htm#GUID-003FE6DB-BDB6-4670-9C17-DDAD5E4533FE">Retrieving Column Data Types for a Table</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-620445C6-0F81-4DA8-AC79-CB046F52890B">Describing the Stored Procedure</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-C806C276-30B1-4074-92E5-23EEDBDF896F">Retrieving Attributes of an Object Type</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-11A36FA7-EDD1-471E-8E84-850A4D9C6B75">Retrieving the Collection Element&#39;s Data Type of a Named Collection Type</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-04D81FC2-A24D-4F57-B9A3-0F66E03D7105" title="Shows a loop that retrieves the column names and data types corresponding to a query following query execution.">Describing with Character-Length Semantics</a></p>
</li>
<li>
<p><a href="oci06des.htm#GUID-226E1195-36C2-4296-9247-C06055198E24" title="Illustrates the use of invisible column properties and checking each column to determine if it is an invisible column.">Describing Each Column to Know Whether It Is an Invisible Column</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-A1FEDF38-F835-49D5-BBB5-69E5BAA7D759__GUID-170158AB-286B-412E-9782-572E6A81B304">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ociabdem.htm#GUID-75E18629-0C54-4495-A747-AFB346034F26" title="Lists example programs with sample code demonstrating the allocation and use of OCI handles.">OCI Demonstration Programs</a> for additional information about the demonstration programs</p>
</li>
<li>
<p><a href="oci16rel003.htm#GUID-AE9F73FB-DCC1-401E-8151-A8A89059163A" title="Describes existing schema and subschema objects.">OCIDescribeAny()</a></p>
</li>
</ul>
</div>
</div>
<a id="LNOCI72630"></a><a id="LNOCI16495"></a>
<div class="props_rev_3"><a id="GUID-003FE6DB-BDB6-4670-9C17-DDAD5E4533FE"></a>
<h3 id="LNOCI-GUID-003FE6DB-BDB6-4670-9C17-DDAD5E4533FE" class="sect3">Retrieving Column Data Types for a Table</h3>
<div>
<div class="section">
<p><a href="oci06des.htm#GUID-003FE6DB-BDB6-4670-9C17-DDAD5E4533FE__CIHEEEEH">Example 6-2</a> illustrates the use of an explicit describe that retrieves the column data types for a table.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-003FE6DB-BDB6-4670-9C17-DDAD5E4533FE__CIHEEEEH">
<p class="titleinexample">Example 6-2 Using an Explicit Describe to Retrieve Column Data Types for a Table</p>
<pre dir="ltr">...
int i=0;
text objptr[] = &#34;EMPLOYEES&#34;; /* the name of a table to be described */
ub2          numcols, col_width;
ub1          char_semantics;
ub2  coltyp;
ub4 objp_len = (ub4) strlen((char *)objptr);
OCIParam *parmh = (OCIParam *) 0;         /* parameter handle */
OCIParam *collsthd = (OCIParam *) 0;      /* handle to list of columns */
OCIParam *colhd = (OCIParam *) 0;         /* column handle */
OCIDescribe *dschp = (OCIDescribe *)0;      /* describe handle */

OCIHandleAlloc((void *)envhp, (void **)&amp;dschp,
        (ub4)OCI_HTYPE_DESCRIBE, (size_t)0, (void **)0);

/* get the describe handle for the table */
if (OCIDescribeAny(svch, errh, (void *)objptr, objp_len, OCI_OTYPE_NAME, 0,
     OCI_PTYPE_TABLE, dschp))
   return OCI_ERROR;

/* get the parameter handle */
if (OCIAttrGet((void *)dschp, OCI_HTYPE_DESCRIBE, (void *)&amp;parmh, (ub4 *)0,
                OCI_ATTR_PARAM, errh))
    return OCI_ERROR;

/* The type information of the object, in this case, OCI_PTYPE_TABLE,
is obtained from the parameter descriptor returned by the OCIAttrGet(). */
/* get the number of columns in the table */
numcols = 0;
if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, (void *)&amp;numcols, (ub4 *)0,
     OCI_ATTR_NUM_COLS, errh))
    return OCI_ERROR;

/* get the handle to the column list of the table */
if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, (void *)&amp;collsthd, (ub4 *)0,
     OCI_ATTR_LIST_COLUMNS, errh)==OCI_NO_DATA)
   return OCI_ERROR;

/* go through the column list and retrieve the data type of each column,
and then recursively describe column types. */

for (i = 1; i &lt;= numcols; i++)
{
    /* get parameter for column i */
    if (OCIParamGet((void *)collsthd, OCI_DTYPE_PARAM, errh, (void **)&amp;colhd, (ub4)i))
        return OCI_ERROR;

    /* for example, get data type for ith column */
    coltyp = 0;
    if (OCIAttrGet((void *)colhd, OCI_DTYPE_PARAM, (void *)&amp;coltyp, (ub4 *)0,
       OCI_ATTR_DATA_TYPE, errh))
        return OCI_ERROR;

    /* Retrieve the length semantics for the column */
    char_semantics = 0;
    OCIAttrGet((void*) colhd, (ub4) OCI_DTYPE_PARAM,
                 (void*) &amp;char_semantics,(ub4 *) 0, (ub4) OCI_ATTR_CHAR_USED,
                 (OCIError *) errh);

    col_width = 0;
    if (char_semantics)
        /* Retrieve the column width in characters */
        OCIAttrGet((void*) colhd, (ub4) OCI_DTYPE_PARAM,
                 (void*) &amp;col_width, (ub4 *) 0, (ub4) OCI_ATTR_CHAR_SIZE,
                 (OCIError *) errh);
    else
        /* Retrieve the column width in bytes */
        OCIAttrGet((void*) colhd, (ub4) OCI_DTYPE_PARAM,
                 (void*) &amp;col_width,(ub4 *) 0, (ub4) OCI_ATTR_DATA_SIZE,
                 (OCIError *) errh);
}

if (dschp)
    OCIHandleFree((void *) dschp, OCI_HTYPE_DESCRIBE);
...
</pre></div>
<!-- class="example" --></div>
</div>
<a id="LNOCI72631"></a><a id="LNOCI16496"></a>
<div class="props_rev_3"><a id="GUID-620445C6-0F81-4DA8-AC79-CB046F52890B"></a>
<h3 id="LNOCI-GUID-620445C6-0F81-4DA8-AC79-CB046F52890B" class="sect3">Describing the Stored Procedure</h3>
<div>
<div class="section">
<p>The difference between a procedure and a function is that the latter has a return type at position 0 in the argument list, whereas the former has no argument associated with position 0 in the argument list. The steps required to describe type methods (also divided into functions and procedures) are identical to those of regular PL/SQL functions and procedures. Note that procedures and functions can take the default types of objects as arguments. Consider the following procedure:</p>
<pre dir="ltr">P1 (arg1 emp.sal%type, arg2 emp%rowtype)
</pre>
<p>In <a href="oci06des.htm#GUID-620445C6-0F81-4DA8-AC79-CB046F52890B__CIHHHCAE">Example 6-3</a>, assume that each row in <code class="codeph">emp</code> table has two columns: <code class="codeph">name(VARCHAR2(20))</code> and <code class="codeph">sal(NUMBER)</code>. In the argument list for <code class="codeph">P1</code>, there are two arguments (<code class="codeph">arg1</code> and <code class="codeph">arg2</code> at positions 1 and 2, respectively) at level 0 and arguments (<code class="codeph">name</code> and <code class="codeph">sal</code> at positions 1 and 2, respectively) at level 1. Description of <code class="codeph">P1</code> returns the number of arguments as two while returning the higher level (&gt; 0) arguments as attributes of the 0 zero level arguments.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-620445C6-0F81-4DA8-AC79-CB046F52890B__CIHHHCAE">
<p class="titleinexample">Example 6-3 Describing the Stored Procedure</p>
<pre dir="ltr">...
int i = 0, j = 0;
text objptr[] = &#34;add_job_history&#34;; /* the name of a procedure to be described */
ub4 objp_len = (ub4)strlen((char *)objptr);
ub2 numargs = 0, numargs1, pos, level;
text *name, *name1;
ub4 namelen, namelen1;
OCIParam *parmh = (OCIParam *) 0;         /* parameter handle */
OCIParam *arglst = (OCIParam *) 0;          /* list of args */
OCIParam *arg = (OCIParam *) 0;             /* argument handle */
OCIParam *arglst1 = (OCIParam *) 0;          /* list of args */
OCIParam *arg1 = (OCIParam *) 0;             /* argument handle */
OCIDescribe *dschp = (OCIDescribe *)0;      /* describe handle */

OCIHandleAlloc((void *)envhp, (void **)&amp;dschp,
        (ub4)OCI_HTYPE_DESCRIBE, (size_t)0, (void **)0);

/* get the describe handle for the procedure */
if (OCIDescribeAny(svch, errh, (void *)objptr, objp_len, OCI_OTYPE_NAME, 0,
     OCI_PTYPE_PROC, dschp))
   return OCI_ERROR;

/* get the parameter handle */
if (OCIAttrGet((void *)dschp, OCI_HTYPE_DESCRIBE, (void *)&amp;parmh, (ub4 *)0,
         OCI_ATTR_PARAM, errh))
    return OCI_ERROR;

/* Get the number of arguments and the arg list */
if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, (void *)&amp;arglst,
       (ub4 *)0, OCI_ATTR_LIST_ARGUMENTS, errh))
    return OCI_ERROR;

if (OCIAttrGet((void *)arglst, OCI_DTYPE_PARAM, (void *)&amp;numargs, (ub4 *)0,
    OCI_ATTR_NUM_PARAMS, errh))
    return OCI_ERROR;

/* For a procedure, you begin with i = 1; for a
function, you begin with i = 0. */

for (i = 1; i &lt;= numargs; i++) {
  OCIParamGet ((void *)arglst, OCI_DTYPE_PARAM, errh, (void **)&amp;arg, (ub4)i);
  namelen = 0;
  OCIAttrGet((void *)arg, OCI_DTYPE_PARAM, (void *)&amp;name, (ub4 *)&amp;namelen,
       OCI_ATTR_NAME, errh);

  /* to print the attributes of the argument of type record
  (arguments at the next level), traverse the argument list */

  OCIAttrGet((void *)arg, OCI_DTYPE_PARAM, (void *)&amp;arglst1, (ub4 *)0,
        OCI_ATTR_LIST_ARGUMENTS, errh);

  /* check if the current argument is a record. For arg1 in the procedure
  arglst1 is NULL. */

  if (arglst1) {
    numargs1 = 0;
    OCIAttrGet((void *)arglst1, OCI_DTYPE_PARAM, (void *)&amp;numargs1, (ub4 *)0,
         OCI_ATTR_NUM_PARAMS, errh);

    /* Note that for both functions and procedures,the next higher level
    arguments start from index 1. For arg2 in the procedure, the number of
    arguments at the level 1 would be 2 */

    for (j = 1; j &lt;= numargs1; j++) {
      OCIParamGet((void *)arglst1, OCI_DTYPE_PARAM, errh, (void **)&amp;arg1,
          (ub4)j);
      namelen1 = 0;
      OCIAttrGet((void *)arg1, OCI_DTYPE_PARAM, (void *)&amp;name1, (ub4 *)&amp;namelen1,
        OCI_ATTR_NAME, errh);
    }
  }
}

if (dschp)
    OCIHandleFree((void *) dschp, OCI_HTYPE_DESCRIBE);
...
</pre></div>
<!-- class="example" --></div>
</div>
<a id="LNOCI72632"></a><a id="LNOCI16497"></a>
<div class="props_rev_3"><a id="GUID-C806C276-30B1-4074-92E5-23EEDBDF896F"></a>
<h3 id="LNOCI-GUID-C806C276-30B1-4074-92E5-23EEDBDF896F" class="sect3">Retrieving Attributes of an Object Type</h3>
<div>
<div class="section">
<p><a href="oci06des.htm#GUID-C806C276-30B1-4074-92E5-23EEDBDF896F__CIHDDJEH">Example 6-4</a> illustrates the use of an explicit describe on a named object type. It illustrates how you can describe an object by its name or by its object reference (<code class="codeph">OCIRef</code>). The following code fragment attempts to retrieve the data type value of each of the object type&#39;s attributes.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-C806C276-30B1-4074-92E5-23EEDBDF896F__CIHDDJEH">
<p class="titleinexample">Example 6-4 Using an Explicit Describe on a Named Object Type</p>
<pre dir="ltr">...
int i = 0;
text type_name[] = &#34;inventory_typ&#34;;
ub4 type_name_len = (ub4)strlen((char *)type_name);
OCIRef *type_ref = (OCIRef *) 0;
ub2 numattrs = 0, describe_by_name = 1;
ub2 datatype = 0;
OCITypeCode typecode = 0;
OCIDescribe *dschp = (OCIDescribe *) 0;      /* describe handle */
OCIParam *parmh = (OCIParam *) 0;         /* parameter handle */
OCIParam *attrlsthd = (OCIParam *) 0;     /* handle to list of attrs */
OCIParam *attrhd = (OCIParam *) 0;        /* attribute handle */

/* allocate describe handle */
if (OCIHandleAlloc((void *)envh, (void **)&amp;dschp,
                  (ub4)OCI_HTYPE_DESCRIBE, (size_t)0, (void **)0))
   return OCI_ERROR;

/* get the describe handle for the type */
if (describe_by_name) {
  if (OCIDescribeAny(svch, errh, (void *)type_name, type_name_len,
       OCI_OTYPE_NAME, 0, OCI_PTYPE_TYPE, dschp))
       return OCI_ERROR;
}
else {
  /* get ref to type using OCIAttrGet */

  /* get the describe handle for the type */
  if (OCIDescribeAny(svch, errh, (void*)type_ref, 0, OCI_OTYPE_REF,
        0, OCI_PTYPE_TYPE, dschp))
       return OCI_ERROR;
}

/* get the parameter handle */
if (OCIAttrGet((void *)dschp, OCI_HTYPE_DESCRIBE, (void *)&amp;parmh, (ub4 *)0,
        OCI_ATTR_PARAM, errh))
    return OCI_ERROR;

/* The type information of the object, in this case, OCI_PTYPE_TYPE, is
obtained from the parameter descriptor returned by OCIAttrGet */

/* get the number of attributes in the type */
if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, (void *)&amp;numattrs, (ub4 *)0,
    OCI_ATTR_NUM_TYPE_ATTRS, errh))
    return OCI_ERROR;

/* get the handle to the attribute list of the type */
if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, (void *)&amp;attrlsthd, (ub4 *)0,
      OCI_ATTR_LIST_TYPE_ATTRS, errh))
  return OCI_ERROR;

/* go through the attribute list and retrieve the data type of each attribute,
and then recursively describe attribute types. */

for (i = 1; i &lt;= numattrs; i++)
{
/* get parameter for attribute i */
if (OCIParamGet((void *)attrlsthd, OCI_DTYPE_PARAM, errh, (void **)&amp;attrhd, i))
      return OCI_ERROR;

/* for example, get data type and typecode for attribute; note that
OCI_ATTR_DATA_TYPE returns the SQLT code, whereas OCI_ATTR_TYPECODE returns the
Oracle Type System typecode. */

datatype = 0;
if (OCIAttrGet((void *)attrhd, OCI_DTYPE_PARAM, (void *)&amp;datatype, (ub4 *)0,
               OCI_ATTR_DATA_TYPE,errh))
    return OCI_ERROR;

typecode = 0;
if (OCIAttrGet((void *)attrhd, OCI_DTYPE_PARAM,(void *)&amp;typecode, (ub4 *)0,
               OCI_ATTR_TYPECODE, errh))
    return OCI_ERROR;

/* if attribute is an object type, recursively describe it */
if (typecode == OCI_TYPECODE_OBJECT)
{
  OCIRef *attr_type_ref;
  OCIDescribe *nested_dschp;

  /* allocate describe handle */
  if (OCIHandleAlloc((void *)envh,(void**)&amp;nested_dschp,
    (ub4)OCI_HTYPE_DESCRIBE,(size_t)0, (void **)0))
    return OCI_ERROR;

  if (OCIAttrGet((void *)attrhd, OCI_DTYPE_PARAM,
          (void *)&amp;attr_type_ref, (ub4 *)0, OCI_ATTR_REF_TDO,errh))
    return OCI_ERROR;

   OCIDescribeAny(svch, errh,(void*)attr_type_ref, 0,
          OCI_OTYPE_REF, 0, OCI_PTYPE_TYPE, nested_dschp);
    /* go on describing the attribute type... */
}
}

if (dschp)
    OCIHandleFree((void *) dschp, OCI_HTYPE_DESCRIBE);
...
</pre></div>
<!-- class="example" --></div>
</div>
<a id="LNOCI72633"></a><a id="LNOCI16498"></a>
<div class="props_rev_3"><a id="GUID-11A36FA7-EDD1-471E-8E84-850A4D9C6B75"></a>
<h3 id="LNOCI-GUID-11A36FA7-EDD1-471E-8E84-850A4D9C6B75" class="sect3">Retrieving the Collection Element&#39;s Data Type of a Named Collection Type</h3>
<div>
<div class="section">
<p><a href="oci06des.htm#GUID-11A36FA7-EDD1-471E-8E84-850A4D9C6B75__CIHGGHIG">Example 6-5</a> illustrates the use of an explicit describe on a named collection type.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-11A36FA7-EDD1-471E-8E84-850A4D9C6B75__CIHGGHIG">
<p class="titleinexample">Example 6-5 Using an Explicit Describe on a Named Collection Type</p>
<pre dir="ltr">text type_name[] = &#34;phone_list_typ&#34;;
ub4 type_name_len = (ub4) strlen((char *)type_name);
OCIRef *type_ref = (OCIRef *) 0;
ub2 describe_by_name = 1;
ub4 num_elements = 0;
OCITypeCode typecode = 0, collection_typecode = 0, element_typecode = 0;
void *collection_element_parmh = (void *) 0;
OCIDescribe *dschp = (OCIDescribe *) 0;      /* describe handle */
OCIParam *parmh = (OCIParam *) 0;         /* parameter handle */

/* allocate describe handle */
if (OCIHandleAlloc((void *)envh, (void **)&amp;dschp,
                  (ub4)OCI_HTYPE_DESCRIBE, (size_t)0, (void **)0))
   return OCI_ERROR;

/* get the describe handle for the type */
if (describe_by_name) {
  if (OCIDescribeAny(svch, errh, (void *)type_name, type_name_len,
       OCI_OTYPE_NAME, 0, OCI_PTYPE_TYPE, dschp))
       return OCI_ERROR;
}
else {
  /* get ref to type using OCIAttrGet */

  /* get the describe handle for the type */
  if (OCIDescribeAny(svch, errh, (void*)type_ref, 0, OCI_OTYPE_REF,
        0, OCI_PTYPE_TYPE, dschp))
       return OCI_ERROR;
}

/* get the parameter handle */
if (OCIAttrGet((void *)dschp, OCI_HTYPE_DESCRIBE, (void *)&amp;parmh, (ub4 *)0,
        OCI_ATTR_PARAM, errh))
    return OCI_ERROR;

/* get the Oracle Type System type code of the type to determine that this is a
collection type */
typecode = 0;
if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM,(void *)&amp;typecode, (ub4 *)0,
      OCI_ATTR_TYPECODE, errh))
    return OCI_ERROR;

/* if typecode is OCI_TYPECODE_NAMEDCOLLECTION,
  proceed to describe collection element */
if (typecode == OCI_TYPECODE_NAMEDCOLLECTION)
{
  /* get the collection&#39;s type: OCI_TYPECODE_VARRAY or OCI_TYPECODE_TABLE */
  collection_typecode = 0;
  if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, (void *)&amp;collection_typecode,
 (ub4 *)0,
       OCI_ATTR_COLLECTION_TYPECODE, errh))
    return OCI_ERROR;

  /* get the collection element; you MUST use this to further retrieve information
     about the collection&#39;s element */
  if (OCIAttrGet((void *)parmh, OCI_DTYPE_PARAM, &amp;collection_element_parmh,
                 (ub4 *)0,
        OCI_ATTR_COLLECTION_ELEMENT, errh))
    return OCI_ERROR;
  /* get the number of elements if collection is a VARRAY; not valid for nested
     tables */
  if (collection_typecode == OCI_TYPECODE_VARRAY) {
    if (OCIAttrGet((void *)collection_element_parmh, OCI_DTYPE_PARAM,
          (void *)&amp;num_elements, (ub4 *)0, OCI_ATTR_NUM_ELEMS, errh))
      return OCI_ERROR;
  }
  /* now use the collection_element parameter handle to retrieve information about
     the collection element */
  element_typecode = 0;
  if (OCIAttrGet((void *)collection_element_parmh, OCI_DTYPE_PARAM,
        (void *)&amp;element_typecode, (ub4 *)0, OCI_ATTR_TYPECODE, errh))
    return OCI_ERROR;

  /* do the same to describe additional collection element information; this is
  very similar to describing type attributes */
}

if (dschp)
    OCIHandleFree((void *) dschp, OCI_HTYPE_DESCRIBE);
...
</pre></div>
<!-- class="example" --></div>
</div>
<a id="LNOCI72634"></a><a id="LNOCI16499"></a>
<div class="props_rev_3"><a id="GUID-04D81FC2-A24D-4F57-B9A3-0F66E03D7105"></a>
<h3 id="LNOCI-GUID-04D81FC2-A24D-4F57-B9A3-0F66E03D7105" class="sect3">Describing with Character-Length Semantics</h3>
<div>
<p>Shows a loop that retrieves the column names and data types corresponding to a query following query execution.</p>
<div class="section">
<p><a href="oci06des.htm#GUID-04D81FC2-A24D-4F57-B9A3-0F66E03D7105__CIHCCBHD">Example 6-6</a> shows a loop that retrieves the column names and data types corresponding to a query following query execution. The query was associated with the statement handle by a prior call to <a href="oci17msc001.htm#GUID-E6C1DC67-D464-4D2A-9F19-737423D31779" title="Prepares a SQL or PL/SQL statement for execution.">OCIStmtPrepare2()</a>.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-04D81FC2-A24D-4F57-B9A3-0F66E03D7105__CIHCCBHD">
<p class="titleinexample">Example 6-6 Using a Parameter Descriptor to Retrieve the Data Types, Column Names, and Character-Length Semantics</p>
<pre dir="ltr">...
OCIParam     *mypard = (OCIParam *) 0;
ub2          dtype;
text         *col_name;
ub4          counter, col_name_len, char_semantics;
ub2          col_width;
sb4          parm_status;

text *sqlstmt = (text *)&#34;SELECT * FROM employees WHERE employee_id = 100&#34;;

checkerr(errhp, OCIStmtPrepare2(svchp, &amp;stmthp, errhp, (OraText *)sqlstmt,
                    (ub4)strlen((char *)sqlstmt), NULL, 0,
                    (ub4) OCI_NTV_SYNTAX, (ub4) OCI_DEFAULT));
checkerr(errhp, OCIStmtExecute(svchp, stmthp, errhp, 0, 0, (OCISnapshot *)0, (OCISnapshot *)0, OCI_DEFAULT));

/* Request a parameter descriptor for position 1 in the select list */
counter = 1;
parm_status = OCIParamGet((void *)stmthp, OCI_HTYPE_STMT, errhp,
               (void **)&amp;mypard, (ub4) counter);
/* Loop only if a descriptor was successfully retrieved for
   current position, starting at 1 */
while (parm_status == OCI_SUCCESS) {
   /* Retrieve the data type attribute */
   checkerr(errhp, OCIAttrGet((void*) mypard, (ub4) OCI_DTYPE_PARAM,
           (void*) &amp;dtype,(ub4 *) 0, (ub4) OCI_ATTR_DATA_TYPE,
           (OCIError *) errhp  ));
   /* Retrieve the column name attribute */
   col_name_len = 0;
   checkerr(errhp, OCIAttrGet((void*) mypard, (ub4) OCI_DTYPE_PARAM,
           (void**) &amp;col_name, (ub4 *) &amp;col_name_len, (ub4) OCI_ATTR_NAME,
           (OCIError *) errhp ));
   /* Retrieve the length semantics for the column */
   char_semantics = 0;
   checkerr(errhp, OCIAttrGet((void*) mypard, (ub4) OCI_DTYPE_PARAM,
           (void*) &amp;char_semantics,(ub4 *) 0, (ub4) OCI_ATTR_CHAR_USED,
           (OCIError *) errhp  ));
   col_width = 0;
   if (char_semantics)
       /* Retrieve the column width in characters */
       checkerr(errhp, OCIAttrGet((void*) mypard, (ub4) OCI_DTYPE_PARAM,
               (void*) &amp;col_width, (ub4 *) 0, (ub4) OCI_ATTR_CHAR_SIZE,
               (OCIError *) errhp  ));
   else
       /* Retrieve the column width in bytes */
       checkerr(errhp, OCIAttrGet((void*) mypard, (ub4) OCI_DTYPE_PARAM,
               (void*) &amp;col_width,(ub4 *) 0, (ub4) OCI_ATTR_DATA_SIZE,
               (OCIError *) errhp  ));
   /* increment counter and get next descriptor, if there is one */
   counter++;
   parm_status = OCIParamGet((void *)stmthp, OCI_HTYPE_STMT, errhp,
          (void **)&amp;mypard, (ub4) counter);
} /* while */
...

</pre></div>
<!-- class="example" --></div>
</div>
<a id="LNOCI80662"></a><a id="LNOCI80661"></a>
<div class="props_rev_3"><a id="GUID-226E1195-36C2-4296-9247-C06055198E24"></a>
<h3 id="LNOCI-GUID-226E1195-36C2-4296-9247-C06055198E24" class="sect3">Describing Each Column to Know Whether It Is an Invisible Column</h3>
<div>
<p>Illustrates the use of invisible column properties and checking each column to determine if it is an invisible column.</p>
<div class="section">
<p>The following code example illustrates the use of invisible column properties and checking each column to determine if it is an invisible column. See the <code class="codeph">OCI_ATTR_INVISIBLE_COL</code> attribute description in the table in <a href="oci06des.htm#GUID-B4EE393C-FE7F-4BA5-91A4-7CF6FC171C46">Column Attributes</a> for more information.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-226E1195-36C2-4296-9247-C06055198E24__GUID-E76A2667-2EBF-4708-B4C9-D18A3D81053F">
<p class="titleinexample">Example 6-7 Checking for Invisible Columns</p>
<pre dir="ltr">.....
.....
  checkerr(errhp, OCIHandleAlloc((dvoid *) envhp, (dvoid **) &amp;dschp,
                           (ub4) OCI_HTYPE_DESCRIBE,
                           (size_t) 0, (dvoid **) 0));
  /* Set the invisible column attribute to get the invisible column(s). */
  checkerr(errhp, OCIAttrSet(dschp, OCI_HTYPE_DESCRIBE, &amp;invscols, 0,
                             OCI_ATTR_SHOW_INVISIBLE_COLUMNS, errhp));
 
  if ((retval = OCIDescribeAny(svchp, errhp, (dvoid *)tablename,
                               (ub4) strlen((char *) tablename),
                               OCI_OTYPE_NAME, (ub1)1,
                               OCI_PTYPE_TABLE, dschp)) != OCI_SUCCESS)
  {
    if (retval == OCI_NO_DATA)
    {
      printf(&#34;NO DATA: OCIDescribeAny on %s\n&#34;, tablename);
    }
    else                                                      /* OCI_ERROR */
    {
      printf( &#34;ERROR: OCIDescribeAny on %s\n&#34;, tablename);
      checkerr(errhp, retval);
      return;
    }
  }
  else
  {
    ub1 colIsInv;
    /* Get the parameter descriptor. */
    checkerr (errhp, OCIAttrGet((dvoid *)dschp, (ub4)OCI_HTYPE_DESCRIBE,
                         (dvoid *)&amp;parmp, (ub4 *)0, (ub4)OCI_ATTR_PARAM,
                         (OCIError *)errhp));
 
    /* Get the attributes of the table. */
    checkerr (errhp, OCIAttrGet((dvoid*) parmp, (ub4) OCI_DTYPE_PARAM,
                         (dvoid*) &amp;objid, (ub4 *) 0,
                         (ub4) OCI_ATTR_OBJID, (OCIError *)errhp));
    /* Get the column list of the table. */
    checkerr (errhp, OCIAttrGet((dvoid*) parmp, (ub4) OCI_DTYPE_PARAM,
                         (dvoid*) &amp;collst, (ub4 *) 0,
                         (ub4) OCI_ATTR_LIST_COLUMNS, (OCIError *)errhp));
    /* Get the number of columns. */
    checkerr (errhp, OCIAttrGet((dvoid*) parmp, (ub4) OCI_DTYPE_PARAM,
                         (dvoid*) &amp;numcols, (ub4 *) 0,
                         (ub4) OCI_ATTR_NUM_COLS, (OCIError *)errhp));
 
   /* Now describe each column to know whether it is a invisible column or not. */
 
     for (pos = 1; pos &lt;= parmcnt; pos++)
       {
       /* Get the parameter descriptor for each column. */
       checkerr (errhp, OCIParamGet((dvoid *)parmp, (ub4)OCI_DTYPE_PARAM, errhp,
                       (dvoid *)&amp;parmdp, (ub4) pos));
       .....
       .....
    
       checkerr (errhp, OCIAttrGet((dvoid*) parmdp, (ub4) OCI_DTYPE_PARAM,
                         (dvoid*) &amp;colIsInv, (ub4 *) 0,
                         (ub4) OCI_ATTR_INVISIBLE_COL, (OCIError *)errhp));
 
       .....
       .....
 
       }
 
   }
    .....
    .....
</pre></div>
<!-- class="example" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6150">
<tr>
<td class="cellalignment6162">
<table class="cellalignment6155">
<tr>
<td class="cellalignment6154"><a href="oci05bnd.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6154"><a href="oci07lob.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6164">
<table class="cellalignment6153">
<tr>
<td class="cellalignment6154"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6154"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6154"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6154"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6154"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6154"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>