<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us" lang="en-us"><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="Content-Script-Type" content="text/javascript"/>
<meta name="generator" content="DITA Open Toolkit version 1.8.5"/>
<a class="dashingAutolink" name="autolink-73961"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Description%20of%20the%20illustration%20lnoci020.eps"></a><title>Description of the illustration lnoci020.eps</title>
<link rel="stylesheet" href="../../dcommon/css/blafdoc.css" title="Oracle BLAFDoc" type="text/css"/>
</head>
<body>
<div>
<p>This illustration depicts the steps involved in processing SQL statements. This illustration shows six boxes stacked one above the other with downward connecting arrows from the box above to the box below. In addition an arrow from the bottom box returns to the third box and the same arrow returns to the top box The top box is labelled &ldquo;prepare statements&rdquo;, the second box is labelled &ldquo;bind placeholders&rdquo;, the third box is labelled &ldquo;execute statement&rdquo;, the fourth box is labelled &ldquo;describe select-list items&rdquo;, the fifth box is labelled &ldquo;define output variables&rdquo;, and the sixth and bottom box is labelled &ldquo;fetch and process data&rdquo;. Each box represents a processing step for processing SQL statements. Boxes representing Steps 2, 4, 5, and 6 are performed if necessary.</p>
<p>To the right of each box are the calls that can be used for each step. These include:</p>
<ul style="list-style-type: disc;">
<li>
<p>For preparing a statement, you can call OCIStmtPrepare() or OCIStmtPrepare2().</p>
</li>
<li>
<p>For binding placeholders, you can call OCIBindByName() or OCIBindByName2(), OCIBindByPos() or OCIBindByPos(), OCIBindObject(), OCIBindArrayOfStruct(), or OCIBindDynamic().</p>
</li>
<li>
<p>For executing the statement, you can call OCIStmtExecute() or OCIStmtExecute2().</p>
</li>
<li>
<p>For describing select-list items, you can call OCIParamGet() or OCIAttrGet().</p>
</li>
<li>
<p>For defining output variables, you can call OCIDefineByPos() or OCIDefineByPos2(), OCIDefineObject(), OCIDefineArraytOfStruct(), or OCIDefineDynamic().</p>
</li>
<li>
<p>For fetching and processing data, you can call OCIStmtFetch() or OCIStmtFetch2().</p>
</li>
</ul>
</div>
<div class="footer"><img class="copyrightlogo" src="../../dcommon/gifs/oracle.gif" alt="Oracle Logo"/> <a href="../../dcommon/html/cpyr.htm"><br/>
<span class="copyrightlogo">Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.</span></a></div>


</body></html>