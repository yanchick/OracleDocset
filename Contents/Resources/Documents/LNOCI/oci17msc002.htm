<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-74424"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/LOB%20Functions"></a><title>LOB Functions</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="LOB functions, OCIDurationBegin(), OCI_DURATION_STATEMENT, OCI_DURATION_SESSION, OCIDurationEnd(), OCILobAppend(), OCILobArrayRead(), OCILobArrayWrite(), OCILobAssign(), OCILobCharSetForm(), OCILobCharSetId(), OCILobClose(), OCILobCopy2(), OCILobCreateTemporary(), SQLCS_IMPLICIT, SQLCS_NCHAR, OCILobDisableBuffering(), OCILobEnableBuffering(), OCILobErase2(), OCILobFileClose(), OCILobFileCloseAll(), OCILobFileExists(), OCILobFileGetName(), OCILobFileIsOpen(), OCILobFileOpen(), OCILobFileSetName(), OCILobFlushBuffer(), OCILobFreeTemporary(), OCILobGetChunkSize(), OCILobGetContentType(), SecureFiles, OCILobGetLength2(), OCILobGetOptions(), OCILobGetStorageLimit(), OCILobIsEqual(), OCILobIsOpen(), OCILobIsTemporary(), OCILobLoadFromFile2(), OCILobLocatorAssign(), OCILobLocatorIsInit(), OCILobOpen(), OCILobRead2(), OCILobSetContentType(), OCILobSetOptions(), OCILobTrim2(), OCILobWrite2(), Unicode, OCILobWrite(), OCILobWriteAppend2()"/>
<meta name="dcterms.created" content="2017-06-09T09:07:30Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49886-11"/>
<meta name="dcterms.isVersionOf" content="LNOCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="oci17msc001.htm" title="Previous" type="text/html"/>
<link rel="Next" href="oci17msc003.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49886-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-699FFE4B-07C8-4904-959F-3686E73B8188"></a> <span id="PAGE" style="display:none;">29/84</span> <!-- End Header -->
<a id="LNOCI17171"></a><a id="LNOCI162"></a>
<h1 id="LNOCI-GUID-699FFE4B-07C8-4904-959F-3686E73B8188" class="sect1">LOB Functions</h1>
<div>
<div class="section">
<p><a href="oci17msc002.htm#GUID-699FFE4B-07C8-4904-959F-3686E73B8188__CIHFBAAG" title="This table has 2 columns. Column 1 is the OCI function name and column 2 describes its purpose.">Table 17-2</a> lists the LOB functions that use the LOB locator that are described in this section. Use functions that end in &#34;2&#34; for all new applications.</p>
<div class="infobox-note" id="GUID-699FFE4B-07C8-4904-959F-3686E73B8188__GUID-81960303-06A5-47E8-81FE-B3A9B9266159">
<p class="notep1">Note:</p>
<p>There is another way of accessing LOBs -- using the data interface for LOBs. You can bind or define character data for a <code class="codeph">CLOB</code> column or <code class="codeph">RAW</code> data for a <code class="codeph">BLOB</code> column, as described in these locations:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="oci05bnd.htm#GUID-D757C946-BCDA-4A32-867B-BE951BA9BBF4" title="Oracle Database allows nonzero binds for INSERTs and UPDATEs of any size LOB.">About Binding LOB Data</a>&#34;</span> for usage and examples for both <code class="codeph">INSERT</code> and <code class="codeph">UPDATE</code> statements</p>
</li>
<li>
<p><span class="q">&#34;<a href="oci05bnd.htm#GUID-FE7DB3D8-9310-41ED-8869-B5106E60D29E">About Defining LOB Data</a>&#34;</span> for usage and examples of <code class="codeph">SELECT</code> statements</p>
</li>
<li>
<p><a href="oci07lob.htm#GUID-0A094518-F97C-40BE-A336-259AA82BD0A2" title="This chapter describes LOB and BFILE operations.">LOB and BFILE Operations</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-699FFE4B-07C8-4904-959F-3686E73B8188__CIHFBAAG">
<p class="titleintable">Table 17-2 LOB Functions&nbsp;</p>
<table class="cellalignment6157" title="LOB Functions&nbsp;" summary="This table has 2 columns. Column 1 is the OCI function name and column 2 describes its purpose.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6201" id="d186371e218">Function</th>
<th class="cellalignment6251" id="d186371e221">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e226" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-84EA4A66-27BF-470C-8464-3DE31937702A" title="Starts a user duration for a temporary LOB.">OCIDurationBegin()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e226 d186371e221">
<p>Start user duration for temporary LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e239" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962" title="Terminates a user duration for a temporary LOB.">OCIDurationEnd()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e239 d186371e221">
<p>End user duration for temporary LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e252" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e252 d186371e221">
<p>Append one LOB to another</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e262" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-47652C79-0635-4595-A34B-CD03B7F81A9F">OCILobArrayRead()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e262 d186371e221">
<p>Read LOB data for multiple locators</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e272" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93">OCILobArrayWrite()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e272 d186371e221">
<p>Write LOB data for multiple locators</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e282" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC">OCILobAssign()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e282 d186371e221">
<p>Assign one LOB locator to another</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e292" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8">OCILobCharSetForm()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e292 d186371e221">
<p>Get character set form from LOB locator</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e302" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B">OCILobCharSetId()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e302 d186371e221">
<p>Get character set ID from LOB locator</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e312" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-CBEB9238-6B47-4A08-8C8D-FC2E5ED56557" title="Closes a previously opened LOB or BFILE.">OCILobClose()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e312 d186371e221">
<p>Close a previously opened LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e328" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e328 d186371e221">
<p>Copy all or part of one LOB to another. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e338" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-63F75EC5-EB14-4E25-B593-270FF814615A" title="Creates a temporary LOB.">OCILobCreateTemporary()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e338 d186371e221">
<p>Create a temporary LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e352" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-6BE287D0-3385-4514-850A-349940ECB26A">OCILobDisableBuffering()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e352 d186371e221">
<p>Turn LOB buffering off</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e362" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917">OCILobEnableBuffering()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e362 d186371e221">
<p>Turn LOB buffering on</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e372" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA">OCILobErase2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e372 d186371e221">
<p>Erase a portion of a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e382" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A" title="Closes a previously opened BFILE.">OCILobFileClose()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e382 d186371e221">
<p>Close a previously opened <code class="codeph">BFILE</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e400" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-7401D38E-DDB4-4826-8910-94A2FB739A4B" title="Closes all open BFILEs on a given service context.">OCILobFileCloseAll()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e400 d186371e221">
<p>Close all previously opened files</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e416" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-977F905D-DAFB-4D88-8FE0-7A345837B147" title="Tests to see if the BFILE exists on the server&#39;s operating system.">OCILobFileExists()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e416 d186371e221">
<p>Check if a file exists on the server</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e432" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-BF637A34-B18A-47EE-A060-93C4E79D1813" title="Gets the BFILE locator&#39;s directory object and file name.">OCILobFileGetName()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e432 d186371e221">
<p>Get directory object and file name from the LOB locator</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e448" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7" title="Tests to see if the BFILE is open.">OCILobFileIsOpen()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e448 d186371e221">
<p>Check if file on server is open using this locator</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e464" headers="d186371e218">
<p><span class="q">&#34; <a href="oci17msc002.htm#GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0" title="Opens a BFILE on the file system of the server for read-only access.">OCILobFileOpen()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e464 d186371e221">
<p>Open a <code class="codeph">BFILE</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e482" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C" title="Sets the directory object and file name in the BFILE locator.">OCILobFileSetName()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e482 d186371e221">
<p>Set directory object and file name in the LOB locator</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e498" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1">OCILobFlushBuffer()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e498 d186371e221">
<p>Flush the LOB buffer</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e509" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-E0FBF017-1B08-410C-9E53-F6E14008813A">OCILobFreeTemporary()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e509 d186371e221">
<p>Free a temporary LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e519" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072" title="Gets the chunk size of a LOB.">OCILobGetChunkSize()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e519 d186371e221">
<p>Get the chunk size of a LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e532" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-D62200EF-FA60-4788-950F-0C0686D807FD">OCILobGetContentType()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e532 d186371e221">
<p>Retrieve the user-specified content type string (a file format identifier) for a SecureFile</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e542" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e542 d186371e221">
<p>Get length of a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e552" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5">OCILobGetOptions()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e552 d186371e221">
<p>Get option settings of a SecureFile</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e562" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27" title="Gets the maximum length of an internal LOB (BLOB, CLOB, or NCLOB) in bytes.">OCILobGetStorageLimit()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e562 d186371e221">
<p>Get the maximum length of an internal LOB (BLOB, CLOB, or NCLOB) in bytes</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e584" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-5142710F-03AD-43D5-BBAB-6732B874E52E">OCILobIsEqual()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e584 d186371e221">
<p>Compare two LOB locators for Equality</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e594" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-FFF883CE-3B99-4319-A81C-A11F8740209E" title="Tests whether a LOB or BFILE is open.">OCILobIsOpen()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e594 d186371e221">
<p>Check to see if a LOB is open</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e610" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3">OCILobIsTemporary()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e610 d186371e221">
<p>Determine if a given LOB is temporary</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e620" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4">OCILobLoadFromFile2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e620 d186371e221">
<p>Load a LOB from a <code class="codeph">BFILE</code>. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e633" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-F7887376-4B3C-430C-94A3-11FE96E26627">OCILobLocatorAssign()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e633 d186371e221">
<p>Assign one LOB locator to another</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e644" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" title="Tests to see if a given LOB or BFILE locator is initialized.">OCILobLocatorIsInit()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e644 d186371e221">
<p>Check to see if a LOB locator is initialized</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e660" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470" title="Opens a LOB, internal or external, in the indicated mode.">OCILobOpen()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e660 d186371e221">
<p>Open a LOB</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e673" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e673 d186371e221">
<p>Read a portion of a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e689" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-789C0971-76D5-4439-9379-E3DCE7885528">OCILobSetContentType()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e689 d186371e221">
<p>Store the user-specified content type string of the SecureFile</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e699" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26">OCILobSetOptions()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e699 d186371e221">
<p>Enable option settings for existing and newly created SecureFiles</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e709" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-ABDB1543-1782-4216-AD80-55FA82CFF733">OCILobTrim2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e709 d186371e221">
<p>Truncate a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e719" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e719 d186371e221">
<p>Write into a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d186371e732" headers="d186371e218">
<p><span class="q">&#34;<a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d186371e732 d186371e221">
<p>Write data beginning at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>Note the following for parameters in the OCI LOB calls:<a id="d186371e747" class="indexterm-anchor"></a><a id="d186371e751" class="indexterm-anchor"></a><a id="d186371e755" class="indexterm-anchor"></a><a id="d186371e759" class="indexterm-anchor"></a></p>
<ul style="list-style-type: disc;">
<li>
<p>For fixed-width client-side character sets, the offset and amount parameters are always in characters for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, and in bytes for <code class="codeph">BLOB</code>s and <code class="codeph">BFILE</code>s.</p>
</li>
<li>
<p>For varying-width client-side character sets, these rules generally apply:</p>
<ul style="list-style-type: disc;">
<li>
<p>Amount (<code class="codeph">amtp</code>) parameter - When the amount parameter refers to the server-side LOB, the amount is in characters. When the amount parameter refers to the client-side buffer, the amount is in bytes.</p>
<p>For more information, see individual LOB calls, such as <a href="ociaedep003.htm#GUID-3CEE9E79-A7E5-4078-949B-BD0ED3FB4124" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobGetLength()</a> (deprecated), <a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a>, <a href="ociaedep003.htm#GUID-4F904ADC-547E-40CE-8F2F-98C7D7480D03" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobRead()</a> (deprecated), <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="ociaedep003.htm#GUID-CA0A90B9-0BB0-4017-AC53-996A102A7854" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWrite()</a> (deprecated), and <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>.</p>
</li>
<li>
<p>Offset (<code class="codeph">offset</code>) parameter - Regardless of whether the client-side character set is varying-width, the offset parameter is always in characters for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s and in bytes for <code class="codeph">BLOB</code>s and <code class="codeph">BFILE</code>s.</p>
</li>
</ul>
</li>
<li>
<p>For many of the LOB operations, regardless of the client-side character set, the amount parameter is in characters for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s. These LOB operations include <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc002.htm#GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA">OCILobErase2()</a>, <a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a>, <a href="oci17msc002.htm#GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4">OCILobLoadFromFile2()</a>, and <a href="oci17msc002.htm#GUID-ABDB1543-1782-4216-AD80-55FA82CFF733">OCILobTrim2()</a>. All these operations refer to the amount of LOB data on the server.</p>
</li>
</ul>
<p>A <span class="italic">streaming operation</span> means that the LOB is read or written in pieces. Streaming can be implemented using a polling mechanism or by registering a user-defined callback.</p>
</div>
<!-- class="section" --></div>
<a id="LNOCI17172"></a>
<div class="props_rev_3"><a id="GUID-84EA4A66-27BF-470C-8464-3DE31937702A"></a>
<h2 id="LNOCI-GUID-84EA4A66-27BF-470C-8464-3DE31937702A" class="sect2">OCIDurationBegin()</h2>
<div>
<p>Starts a user duration for a temporary LOB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Starts a user duration for a temporary LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIDurationBegin ( OCIEnv              *env,
                         OCIError            *err,
                         const OCISvcCtx     *svc, 
                         OCIDuration          parent,
                         OCIDuration         *duration );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74425"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-84EA4A66-27BF-470C-8464-3DE31937702A__GUID-433D4903-5F4D-4B71-8EBE-5AF17D637B1B"><!-- --></a>env (IN/OUT)</dt>
<dd>
<p>Pass as a <code class="codeph">NULL</code> pointer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74426"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-84EA4A66-27BF-470C-8464-3DE31937702A__GUID-BFE4C4A1-2EE8-4712-9A62-BE8C266DB674"><!-- --></a>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code class="codeph">err</code> and this function returns <code class="codeph">OCI_ERROR</code>. Diagnostic information can be obtained by calling <code class="codeph">OCIErrorGet()</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74427"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-84EA4A66-27BF-470C-8464-3DE31937702A__GUID-4BBEA4F3-538E-4F13-BE4B-4F5A272ED09B"><!-- --></a>svc (IN)</dt>
<dd>
<p>An OCI service context handle. Must be non-<code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74428"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-84EA4A66-27BF-470C-8464-3DE31937702A__GUID-1F41E1E7-0A58-4952-A02E-C7FDAC5AD905"><!-- --></a>parent (IN)</dt>
<dd>
<p>The duration number of the parent duration. It is one of these:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_DURATION_STATEMENT</code></p>
</li>
<li>
<p><code class="codeph">OCI_DURATION_SESSION</code></p>
</li>
</ul>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74429"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-84EA4A66-27BF-470C-8464-3DE31937702A__GUID-FC918B60-A50A-4F71-BA1D-904FEEE830A4"><!-- --></a>duration (OUT)</dt>
<dd>
<p>An identifier unique to the newly created user duration.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function starts a user duration. In release 8.1 or later, user durations can be used when creating temporary LOBs. A user can have multiple active user durations simultaneously. The user durations do not have to be nested. The <code class="codeph">duration</code> parameter is used to return a number that uniquely identifies the duration created by this call.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17173"></a>
<div class="props_rev_3"><a id="GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962"></a>
<h2 id="LNOCI-GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962" class="sect2">OCIDurationEnd()</h2>
<div>
<p>Terminates a user duration for a temporary LOB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Terminates a user duration for a temporary LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIDurationEnd ( OCIEnv             *env, 
                       OCIError           *err, 
                       const OCISvcCtx    *svc,
                       OCIDuration         duration );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74430"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962__GUID-AA9B5BCC-8A20-42FB-9DC8-90A8F56B2DE9"><!-- --></a>env (IN/OUT)</dt>
<dd>
<p>Pass as a <code class="codeph">NULL</code> pointer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74431"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962__GUID-0ECDC6BE-1544-47E6-AD31-AFACCE0CD355"><!-- --></a>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code class="codeph">err</code> and this function returns <code class="codeph">OCI_ERROR</code>. Diagnostic information can be obtained by calling <code class="codeph">OCIErrorGet()</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74432"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962__GUID-45775316-9C16-4C79-A359-4B0CC8BFBACD"><!-- --></a>svc (IN)</dt>
<dd>
<p>OCI service context. This should be passed as <code class="codeph">NULL</code> for cartridge services.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74433"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-AABC3F29-C91B-45A7-AF1E-D486C12E4962__GUID-42B37FC8-55E9-4E11-BCE4-B453446354A7"><!-- --></a>duration (IN)</dt>
<dd>
<p>A number to identify the user duration.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function terminates a user duration. Temporary LOBs that are allocated for the user duration are freed.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17174"></a>
<div class="props_rev_3"><a id="GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE"></a>
<h2 id="LNOCI-GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE" class="sect2">OCILobAppend()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Appends a LOB value at the end of another LOB as specified.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobAppend ( OCISvcCtx        *svchp,
                     OCIError         *errhp,
                     OCILobLocator    *dst_locp,
                     OCILobLocator    *src_locp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74434"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE__GUID-0C216F91-811B-4417-B895-BF3399EDCC7D"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74435"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE__GUID-FC47BAA3-F23B-4CAA-8E20-1F860EACA506"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74436"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE__GUID-7A7EC32C-2B5A-48D3-A0F9-9534389A6704"><!-- --></a><span class="bold">dst_locp</span> (IN/OUT)</dt>
<dd>
<p>An internal LOB locator uniquely referencing the destination LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74437"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE__GUID-73724FB1-9DD9-40FF-A737-C63DDE936374"><!-- --></a><span class="bold">src_locp</span> (IN)</dt>
<dd>
<p>An internal LOB locator uniquely referencing the source LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Appends a LOB value at the end of another LOB as specified. The data is copied from the source to the end of the destination. The source and destination LOBs must exist. The destination LOB is extended to accommodate the newly written data. It is an error to extend the destination LOB beyond the maximum length allowed (4 Gigabytes (GB)) or to try to copy from a <code class="codeph">NULL</code> LOB.</p>
<p>The source and the destination LOB locators must be of the same type (that is, they must both be <code class="codeph">BLOB</code>s or both be <code class="codeph">CLOB</code>s). LOB buffering must not be enabled for either type of locator. This function does not accept a <code class="codeph">BFILE</code> locator as the source or the destination.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="ociaedep003.htm#GUID-2D1D8F83-040B-4923-9F02-108D1F636B20" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobTrim()</a> (deprecated), <a href="oci17msc002.htm#GUID-ABDB1543-1782-4216-AD80-55FA82CFF733">OCILobTrim2()</a>, <a href="ociaedep003.htm#GUID-CA0A90B9-0BB0-4017-AC53-996A102A7854" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWrite()</a> (deprecated), <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="ociaedep003.htm#GUID-2E89A469-397B-45BD-871B-4A7E7A5815C1" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobCopy()</a> (deprecated), <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="ociaedep003.htm#GUID-BC03A84A-5747-414F-9A79-BAAF0EE71EF8" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWriteAppend()</a> (deprecated), <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17175"></a>
<div class="props_rev_3"><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F"></a>
<h2 id="LNOCI-GUID-47652C79-0635-4595-A34B-CD03B7F81A9F" class="sect2">OCILobArrayRead()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Reads LOB data for multiple locators in one round-trip. This function can be used for LOBs of size greater than or less than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobArrayRead ( OCISvcCtx                *svchp,
                        OCIError                 *errhp,
                        ub4                      *array_iter,
                        OCILobLocator            **locp_arr,
                        oraub8                   *byte_amt_arr,
                        oraub8                   *char_amt_arr,
                        oraub8                   *offset_arr,
                        void                     **bufp_arr,
                        oraub8                   bufl_arr,
                        ub1                      piece,
                        void                     *ctxp, 
                        OCICallbackLobArrayRead  (cbfp)
                                        (
                                         void          *ctxp,
                                         ub4           array_iter,
                                         const void    *bufp,
                                         oraub8        lenp,
                                         ub1           piecep
                                         void          **changed_bufpp,
                                         oraub8        *changed_lenp
                                        )
                        ub2                      csid,
                        ub1                      csfrm );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74438"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-B9869F87-BBBE-4CCB-A072-B535AC4179B4"><!-- --></a><span class="bold">svchp</span> (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74439"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-AA6E55DE-3C94-4F5D-84B5-9E338A341206"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74440"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-0F8E3320-8791-49BF-A699-E9F5B61B369A"><!-- --></a><span class="bold">array_iter</span> (IN/OUT)</dt>
<dd>
<p>IN - This parameter indicates the size of the LOB locator array. For polling this is relevant only for the first call and is ignored in subsequent calls.</p>
<p>OUT - In polling mode, this parameter indicates the array index of the element read from.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74441"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-77D1956D-ABD9-4A9A-9844-A742AE62D593"><!-- --></a><span class="bold">locp_arr</span> (IN)</dt>
<dd>
<p>An array of LOB or <code class="codeph">BFILE</code> locators.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74442"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-5BD547A8-36F1-4CD5-A5D0-7ABAF92719CF"><!-- --></a><span class="bold">byte_amt_arr</span> (IN/OUT)</dt>
<dd>
<p>An array of <code class="codeph">oraub8</code> variables. The array size must be the same as the locator array size. The entries correspond to the amount in bytes for the locators.</p>
<p>IN - The number of bytes to read from the database. Used for <code class="codeph">BLOB</code> and <code class="codeph">BFILE</code> always. For <code class="codeph">CLOB</code> and <code class="codeph">NCLOB</code>, it is used only when the corresponding value in <code class="codeph">char_amt_arr</code> is zero.</p>
<p>OUT - The number of bytes read into the user buffer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74443"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-20FF6A5D-DDC0-476E-9E5D-0BF2E66F19C5"><!-- --></a><span class="bold">char_amt_arr</span> (IN/OUT)</dt>
<dd>
<p>An array of <code class="codeph">oraub8</code> variables. The array size must be the same as the locator array size. The entries correspond to the amount in characters for the locators.</p>
<p>IN - The maximum number of characters to read into the user buffer. Ignored for <code class="codeph">BLOB</code> and <code class="codeph">BFILE</code>.</p>
<p>OUT - The number of characters read into the user buffer. Undefined for <code class="codeph">BLOB</code> and <code class="codeph">BFILE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74444"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-EB3BB74B-3A0F-44DA-BE3F-5579969FED8B"><!-- --></a><span class="bold">offset</span>_arr (IN)</dt>
<dd>
<p>An array of <code class="codeph">oraub8</code> variables. The array size must be the same as the locator array size. For character LOBs (<code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s) it is the number of characters from the beginning of the LOB; for binary LOBs or <code class="codeph">BFILE</code>s, it is the number of bytes. The first position is 1.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74445"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-790D5075-5C32-41C0-A12A-B44AA7628F72"><!-- --></a><span class="bold">bufp</span> _arr (IN/OUT)</dt>
<dd>
<p>An array of pointers to buffers into which the piece is read. The array size must be the same as the locator array size.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74446"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-CE7231A7-0260-4880-A175-32C638E06C56"><!-- --></a><span class="bold">bufl</span>_arr (IN)</dt>
<dd>
<p>An array of <code class="codeph">oraub8</code> variables indicating the buffer lengths for the buffer array. The array size must be the same as the locator array size.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74447"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-CC64A6F5-ED34-456C-8DAE-69706FA50CE6"><!-- --></a>piece (IN)</dt>
<dd>
<p><code class="codeph">OCI_ONE_PIECE</code> - The call never assumes polling. If the amount indicated is more than the buffer length, then the buffer is filled as much as possible.</p>
<p>For polling, pass <code class="codeph">OCI_FIRST_PIECE</code> the first time and <code class="codeph">OCI_NEXT_PIECE</code> in subsequent calls. <code class="codeph">OCI_FIRST_PIECE</code> should be passed while using the callback.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74448"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-11481E14-9BF4-45E7-98B5-2F252AC4B981"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context pointer for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74449"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-FD0D9F0A-F877-46FF-BC5E-7222D0AF67FE"><!-- --></a><span class="bold">cbfp</span> (IN)</dt>
<dd>
<p>A callback that can be registered to be called for each piece. If this is <code class="codeph">NULL</code>, then <code class="codeph">OCI_NEED_DATA</code> is returned for each piece.</p>
<p>The callback function must return <code class="codeph">OCI_CONTINUE</code> for the read to continue. If any other error code is returned, the LOB read is terminated.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74450"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-64FB09FC-FBC0-491A-A335-272252AB244A"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74451"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-7E3E523D-8306-43CB-9DE9-E08D07F57EB4"><!-- --></a><span class="bold">array_iter</span> (IN)</dt>
<dd>
<p>The index of the element read from.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74452"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-949C6230-8A54-4D35-BC5E-BB54C32F028F"><!-- --></a><span class="bold">bufp</span> (IN/OUT)</dt>
<dd>
<p>A buffer pointer for the piece.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74453"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-7559451E-6C85-45C4-A9F6-46A754F64919"><!-- --></a><span class="bold">lenp</span> (IN)</dt>
<dd>
<p>The length in bytes of the current piece in <code class="codeph">bufp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74454"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-BA303466-E3B5-4B82-B0C4-023B52C5CA7D"><!-- --></a><span class="bold">piecep</span> (IN)</dt>
<dd>
<p>Which piece: <code class="codeph">OCI_FIRST_PIECE</code>, <code class="codeph">OCI_NEXT_PIECE</code>, or <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74455"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-26709006-74F7-4F8F-A147-38E74C24759F"><!-- --></a>changed_bufpp (OUT)</dt>
<dd>
<p>The callback function can put the address of a new buffer if it prefers to use a new buffer for the next piece to read. The default old buffer <code class="codeph">bufp</code> is used if this parameter is set to <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74456"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-0B1A6541-DC2D-4766-A74B-A30643C1B4B4"><!-- --></a>changed_lenp (OUT)</dt>
<dd>
<p>Length of the new buffer, if provided.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74457"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-ED4BD5A7-5ED6-4EEF-830D-357B66F7903D"><!-- --></a><span class="bold">csid</span> (IN)</dt>
<dd>
<p>The character set ID of the buffer data. If this value is 0, then <code class="codeph">csid</code> is set to the client&#39;s <code class="codeph">NLS_LANG</code> or <code class="codeph">NLS_CHAR</code> value, depending on the value of <code class="codeph">csfrm</code>. It is never assumed to be the server character set, unless the server and client have the same settings.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74458"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-3F32887F-2BE0-4F34-83A8-09D9DEB886FF"><!-- --></a><span class="bold">csfrm (IN)</span></dt>
<dd>
<p>The character set form of the buffer data. The <code class="codeph">csfrm</code> parameter must be consistent with the type of the LOB.</p>
<p>The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><a id="d186371e2112" class="indexterm-anchor"></a><code class="codeph">SQLCS_IMPLICIT</code> - database character set ID</p>
</li>
<li>
<p><code class="codeph">SQLCS_NCHAR</code> - NCHAR character set ID</p>
</li>
</ul>
<p>The default value is <code class="codeph">SQLCS_IMPLICIT</code>. If <code class="codeph">csfrm</code> is not specified, the default is assumed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>It is an error to try to read from a <code class="codeph">NULL</code> LOB or <code class="codeph">BFILE</code>.</p>
<div class="infobox-note" id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-9A6EB2BB-AF7E-4B65-A5E5-552DB5E2B99B">
<p class="notep1">Note:</p>
<p>When reading or writing LOBs, the character set form (<code class="codeph">csfrm</code>) specified should match the form of the locator itself.</p>
</div>
<p>For <code class="codeph">BFILE</code>s, the operating system file must exist on the server, and it must have been opened by <a href="oci17msc002.htm#GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0" title="Opens a BFILE on the file system of the server for read-only access.">OCILobFileOpen()</a> or <a href="oci17msc002.htm#GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470" title="Opens a LOB, internal or external, in the indicated mode.">OCILobOpen()</a> using the input locator. The Oracle Database must have permission to read the operating system file, and the user must have read permission on the directory object.</p>
<p>When you use the polling mode for <code class="codeph">OCILobArrayRead()</code>, the first call must specify values for <code class="codeph">offset_arr</code> and <code class="codeph">amt_arr</code>, but on subsequent polling calls to <code class="codeph">OCILobArrayRead()</code>, you need not specify these values.</p>
<p>If the LOB is a <code class="codeph">BLOB</code>, the <code class="codeph">csid</code> and <code class="codeph">csfrm</code> parameters are ignored.</p>
<div class="infobox-note" id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-0AF28BD7-FBBD-40DF-9315-2EEAE902F426">
<p class="notep1">Note:</p>
<p>To terminate an <code class="codeph">OCILobArrayRead()</code> operation and free the statement handle, use the <code class="codeph">OCIBreak()</code> call.</p>
</div>
<p>The following points apply to reading LOB data in streaming mode:</p>
<ul style="list-style-type: disc;">
<li>
<p>When you use polling mode, be sure to specify the <code class="codeph">char_amt_arr</code> and <code class="codeph">byte_amt_arr</code> and <code class="codeph">offset_arr</code> parameters only in the first call to <code class="codeph">OCILobArrayRead()</code>. On subsequent polling calls, these parameters are ignored. If both <code class="codeph">byte_amt_arr</code> and <code class="codeph">char_amt_arr</code> are set to point to zero and <code class="codeph">OCI_FIRST_PIECE</code> is passed, then polling mode is assumed and data is read to the end of the LOB. On output, <code class="codeph">byte_amt_arr</code> gives the number of bytes read in the current piece. For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">char_amt_arr</code> gives the number of characters read in the current piece.</p>
</li>
<li>
<p>When you use callbacks, the <code class="codeph">lenp</code> parameter, which is input to the callback, indicates how many bytes are filled in the buffer. Check the <code class="codeph">lenp</code> parameter during your callback processing, because the entire buffer may not be filled with data.</p>
</li>
<li>
<p>When you use polling, examine the <code class="codeph">byte_amt_arr</code> parameter to see how much the buffer is filled for the current piece. For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">char_amt_arr</code> returns the number of characters read in the buffer as well.</p>
</li>
</ul>
<p>To read data in UTF-16 format, set the <code class="codeph">csid</code> parameter to <code class="codeph">OCI_UTF16ID</code>. If the c<code class="codeph">sid</code> parameter is set, it overrides the <code class="codeph">NLS_LANG</code> environment variable.</p>
<div class="infoboxnotealso" id="GUID-47652C79-0635-4595-A34B-CD03B7F81A9F__GUID-7FD7639E-9EF4-4511-95E0-4C840124B761">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="oci05bnd.htm#GUID-5495CEEB-17D0-4185-8879-3356A21E7888">PL/SQL REF CURSORs and Nested Tables in OCI</a>&#34;</span> for additional information on Unicode format</p>
</li>
<li>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</li>
<li>
<p>The demonstration programs included with your Oracle Database installation for a code sample showing the use of LOB reads and writes.</p>
</li>
<li>
<p><a href="ociabdem.htm#GUID-75E18629-0C54-4495-A747-AFB346034F26" title="Lists example programs with sample code demonstrating the allocation and use of OCI handles.">OCI Demonstration Programs</a></p>
</li>
<li>
<p><span class="q">&#34;<a href="oci05bnd.htm#GUID-6C5EA0C6-0C1D-4CD5-B47F-1B95B4E9C558" title="You can use OCI to perform piecewise inserts, updates, and fetches of data.">Runtime Data Allocation and Piecewise Operations in OCI</a>&#34;</span> for general information about piecewise OCI operations</p>
</li>
</ul>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="oci17msc002.htm#GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C" title="Sets the directory object and file name in the BFILE locator.">OCILobFileSetName()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a>, <a href="oci17msc002.htm#GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93">OCILobArrayWrite()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17176"></a>
<div class="props_rev_3"><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93"></a>
<h2 id="LNOCI-GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93" class="sect2">OCILobArrayWrite()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Writes LOB data for multiple locators in one round-trip. This function can be used for LOBs of size greater than or less than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobArrayWrite ( OCISvcCtx             *svchp,
                         OCIError              *errhp,
                         ub4                   *array_iter,
                         OCILobLocator         **locp_arr,
                         oraub8                *byte_amt_arr,
                         oraub8                *char_amt_arr,
                         oraub8                *offset_arr,
                         void                  **bufp_arr, 
                         oraub8                *bufl_arr,
                         ub1                   piece,
                         void                  *ctxp, 
                         OCICallbackLobArrayWrite (cbfp)
                                          (
                                            void     *ctxp,
                                            ub4      array_iter,
                                            void     *bufp,
                                            oraub8   *lenp,
                                            ub1      *piecep
                                            void     **changed_bufpp,
                                            oraub8   *changed_lenp
                                          ) 
                         ub2             csid,
                         ub1             csfrm );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74459"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-14C9FF89-1B86-43A9-A549-18FC788B3A8E"><!-- --></a><span class="bold">svchp</span> (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74460"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-ECE29059-73C2-4A67-A818-221829D6E059"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74461"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-BC7B245A-221B-4523-AA85-F54290226543"><!-- --></a><span class="bold">array_iter</span> (IN/OUT)</dt>
<dd>
<p>IN - This parameter indicates the size of the LOB locator array. For polling this is relevant only for the first call and is ignored in subsequent calls.</p>
<p>OUT - In polling mode this parameter indicates the array index of the element just written to.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74462"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-0DA9D654-D5CD-4D7D-9A7D-D2E2D5F89C67"><!-- --></a><span class="bold">locp_arr</span> (IN/OUT)</dt>
<dd>
<p>An array of LOB locators.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74463"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-054C9D6A-80DF-40D3-92BB-1188685056A2"><!-- --></a><span class="bold">byte_amt</span>_arr (IN/OUT)</dt>
<dd>
<p>An array of pointers to <code class="codeph">oraub8</code> variables. The array size must be the same as the locator array size. The entries correspond to the amount in bytes for the locators.</p>
<p>IN - The number of bytes to write to the database. Always used for <code class="codeph">BLOB</code>. For <code class="codeph">CLOB</code> and <code class="codeph">NCLOB</code> it is used only when <code class="codeph">char_amt_arr</code> is zero.</p>
<p>OUT - The number of bytes written to the database.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74464"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-6EFAFC92-2872-47D5-835B-456E8B6BE80E"><!-- --></a>char_amt (IN/OUT)</dt>
<dd>
<p>An array of pointers to <code class="codeph">oraub8</code> variables. The array size must be the same as the locator array size. The entries correspond to the amount in characters for the locators.</p>
<p>IN - The maximum number of characters to write to the database. Ignored for <code class="codeph">BLOB</code>.</p>
<p>OUT - The number of characters written to the database. Undefined for <code class="codeph">BLOB</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74465"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-0B83E2CD-F974-4E7B-91FB-59EB575A7000"><!-- --></a><span class="bold">offset</span>_arr (IN)</dt>
<dd>
<p>An array of pointers to <code class="codeph">oraub8</code> variables. The array size must be the same as the locator array size. Each entry in the array is the absolute offset from the beginning of the LOB value. For character LOBs (<code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s), it is the number of characters from the beginning of the LOB; for <code class="codeph">BLOB</code>s, it is the number of bytes. The first position is 1.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74466"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-96F6FC8F-38EC-41CD-B573-D3BEC7ED6C27"><!-- --></a><span class="bold">bufp_arr</span> (IN/OUT)</dt>
<dd>
<p>An array of pointers to buffers into which the pieces for the locators are written. The array size must be the same as the locator array size.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74467"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-359FCD9D-5EA7-4432-A9AF-81BDFE909863"><!-- --></a><span class="bold">bufl_arr</span> (IN)</dt>
<dd>
<p>An array of <code class="codeph">oraub8</code> variables indicating the buffer lengths for the buffer array. The array size must be the same as the locator array size.</p>
<div class="infobox-note" id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-C176E383-E364-46BB-AEA2-5F6DDDE63530">
<p class="notep1">Note:</p>
<p>This parameter assumes an 8-bit byte. If your operating system uses a longer byte, you must adjust the value of <code class="codeph">bufl_arr</code> accordingly.</p>
</div>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74468"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-78BC09BE-378E-4376-8520-E32DA6EA06FD"><!-- --></a><span class="bold">piece</span> (IN)</dt>
<dd>
<p>Which piece of the buffer is being written. The default value for this parameter is <code class="codeph">OCI_ONE_PIECE</code>, indicating that the buffer is written in a single piece.</p>
<p>The following other values are also possible for piecewise or callback mode: <code class="codeph">OCI_FIRST_PIECE</code>, <code class="codeph">OCI_NEXT_PIECE</code>, and <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74469"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-CCF1AE3A-C7E4-4B30-9269-295D8BFF1509"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74470"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-2C84A071-DA1D-4BAC-BFFD-471BA2E26BC3"><!-- --></a><span class="bold">cbfp</span> (IN)</dt>
<dd>
<p>A callback that can be registered to be called for each piece. If this is <code class="codeph">NULL</code>, then <code class="codeph">OCI_NEED_DATA</code> is returned for each piece. The callback function must return <code class="codeph">OCI_CONTINUE</code> for the write to continue. If any other error code is returned, the LOB write is terminated.</p>
<p>The callback takes the following parameters:</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74471"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-D56C1DAF-986C-476A-B2C7-8B800F37343F"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74472"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-80A2523B-AFFD-48E3-AADC-A52F9D651CD6"><!-- --></a><span class="bold">array_iter</span> (IN)</dt>
<dd>
<p>The index of the element written to.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74473"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-9E015324-AB0D-48DB-871B-089FD6E9D92C"><!-- --></a><span class="bold">bufp</span> (IN/OUT)</dt>
<dd>
<p>A buffer pointer for the piece. This is the same as the <code class="codeph">bufp</code> passed as an input to the <code class="codeph">OCILobArrayWrite()</code> routine.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74474"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-770F28F5-AF0E-4889-A311-FAE1E8B87EB9"><!-- --></a><span class="bold">lenp</span> (IN/OUT)</dt>
<dd>
<p>The length (in bytes) of the data in the buffer (IN), and the length (in bytes) of the current piece in <code class="codeph">bufp</code> (OUT).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74475"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-E14562CE-75CD-4B42-A7A8-5F2739D1FD3E"><!-- --></a><span class="bold">piecep</span> (OUT)</dt>
<dd>
<p>Which piece: <code class="codeph">OCI_NEXT_PIECE</code> or <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74476"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-C0DA0890-9C2F-4E3F-8C1A-C68EFBD9D907"><!-- --></a>changed_bufpp (OUT)</dt>
<dd>
<p>The callback function can put the address of a new buffer if it prefers to use a new buffer for the next piece to read. The default old buffer <code class="codeph">bufp</code> is used if this parameter is set to <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74477"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-7156D705-4469-4DB6-A1A6-5EBD0A694588"><!-- --></a>changed_lenp (OUT)</dt>
<dd>
<p>Length of the new buffer, if provided.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74478"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-3A072FF5-871E-4CFA-8FD3-541D0DE6ED65"><!-- --></a>csid (IN)</dt>
<dd>
<p>The character set ID of the data in the buffer. If this value is 0, then <code class="codeph">csid</code> is set to the client&#39;s <code class="codeph">NLS_LANG</code> or <code class="codeph">NLS_CHAR</code> value, depending on the value of <code class="codeph">csfrm</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74479"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-54015378-CF98-4580-A9F0-F07503733512"><!-- --></a>csfrm (IN)</dt>
<dd>
<p>The character set form of the buffer data. The <code class="codeph">csfrm</code> parameter must be consistent with the type of the LOB.</p>
<p>The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
<ul style="list-style-type: disc;">
<li>
<p><a id="d186371e2816" class="indexterm-anchor"></a><code class="codeph">SQLCS_IMPLICIT</code> - Database character set ID</p>
</li>
<li>
<p><a id="d186371e2823" class="indexterm-anchor"></a><code class="codeph">SQLCS_NCHAR</code> - NCHAR character set ID</p>
</li>
</ul>
<p>The default value is <code class="codeph">SQLCS_IMPLICIT</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>If LOB data exists, it is overwritten with the data stored in the buffer. The buffers can be written to the LOBs in a single piece with this call, or the buffers can be provided piecewise using callbacks or a standard polling method.</p>
<div class="infobox-note" id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-1BB4F54A-499B-4FF0-A139-C812A983DDCB">
<p class="notep1">Note:</p>
<p>When you read or write LOBs, specify a character set form (<code class="codeph">csfrm</code>) that matches the form of the locator itself.</p>
<p>The parameters <code class="codeph">piece</code>, <code class="codeph">csid</code>, and <code class="codeph">csfrm</code> are the same for all locators of the array.</p>
</div>
<p>When you use the polling mode for <code class="codeph">OCILobArrayWrite()</code>, the first call must specify values for <code class="codeph">offset_arr</code>, <code class="codeph">byte_amt_arr</code>, and <code class="codeph">char_amt_arr</code>, but on subsequent polling calls to <code class="codeph">OCILobArrayWrite()</code>, you need not specify these values.</p>
<p>If the value of the <code class="codeph">piece</code> parameter is <code class="codeph">OCI_FIRST_PIECE</code>, data may need to be provided through callbacks or polling.</p>
<p>If a callback function is defined in the <code class="codeph">cbfp</code> parameter, then this callback function is invoked to get the next piece after a piece is written to the pipe. Each piece is written from <code class="codeph">bufp_arr</code>. If no callback function is defined, then <code class="codeph">OCILobArrayWrite()</code> returns the <code class="codeph">OCI_NEED_DATA</code> error code. The application must call <code class="codeph">OCILobArrayWrite()</code> again to write more pieces of the LOBs. In this mode, the buffer pointer and the length can be different in each call if the pieces are of different sizes and from different locations.</p>
<p>A <code class="codeph">piece</code> value of <code class="codeph">OCI_LAST_PIECE</code> terminates the piecewise write, regardless of whether the polling or callback method is used.</p>
<p>If the amount of data passed to the database (through either input mechanism) is less than the amount specified by the <code class="codeph">byte_amt_arr</code> or the <code class="codeph">char_amt_arr</code> parameter, an ORA-22993 error is returned.</p>
<p>This function is valid for internal LOBs only. <code class="codeph">BFILE</code>s are not valid, because they are read-only. If the LOB is a <code class="codeph">BLOB</code>, the <code class="codeph">csid</code> and <code class="codeph">csfrm</code> parameters are ignored.</p>
<p>If both <code class="codeph">byte_amt_arr</code> and <code class="codeph">char_amt_arr</code> are set to point to zero amount and <code class="codeph">OCI_FIRST_PIECE</code> is given as input, then polling mode is assumed and data is written until you specify <code class="codeph">OCI_LAST_PIECE</code>. For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">byte_amt_arr</code> and <code class="codeph">char_amt_arr</code> return the data written by each piece in terms of number of bytes and number of characters respectively. For <code class="codeph">BLOB</code>s, <code class="codeph">byte_amt_arr</code> returns the number of bytes written by each piece, whereas <code class="codeph">char_amt_arr</code> is undefined on output.</p>
<p><a id="d186371e2964" class="indexterm-anchor"></a>To write data in UTF-16 format, set the <code class="codeph">csid</code> parameter to <code class="codeph">OCI_UTF16ID</code>. If the <code class="codeph">csid</code> parameter is set, it overrides the <code class="codeph">NLS_LANG</code> environment variable.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
<div class="infoboxnotealso" id="GUID-10AB60C9-13FE-4CC9-9C62-CAD45DBB3B93__GUID-8C261640-9D5E-4B4F-BD75-C4A161C53518">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="oci05bnd.htm#GUID-5495CEEB-17D0-4185-8879-3356A21E7888">PL/SQL REF CURSORs and Nested Tables in OCI</a>&#34;</span> for additional information on Unicode format</p>
</li>
<li>
<p>The demonstration programs included with your Oracle Database installation for a code sample showing the use of LOB reads and writes.</p>
</li>
<li>
<p><a href="ociabdem.htm#GUID-75E18629-0C54-4495-A747-AFB346034F26" title="Lists example programs with sample code demonstrating the allocation and use of OCI handles.">OCI Demonstration Programs</a></p>
</li>
<li>
<p><span class="q">&#34;<a href="oci05bnd.htm#GUID-6C5EA0C6-0C1D-4CD5-B47F-1B95B4E9C558" title="You can use OCI to perform piecewise inserts, updates, and fetches of data.">Runtime Data Allocation and Piecewise Operations in OCI</a>&#34;</span> for general information about piecewise OCI operations</p>
</li>
</ul>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="ociaedep003.htm#GUID-2E89A469-397B-45BD-871B-4A7E7A5815C1" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobCopy()</a> (deprecated), <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a>, <a href="oci17msc002.htm#GUID-47652C79-0635-4595-A34B-CD03B7F81A9F">OCILobArrayRead()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17177"></a>
<div class="props_rev_3"><a id="GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC"></a>
<h2 id="LNOCI-GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC" class="sect2">OCILobAssign()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Assigns one LOB or <code class="codeph">BFILE</code> locator to another.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobAssign ( OCIEnv                *envhp, 
                     OCIError              *errhp, 
                     const OCILobLocator   *src_locp, 
                     OCILobLocator         **dst_locpp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74480"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC__GUID-E34BA3C2-0504-43D2-95F9-AEAEE56CB411"><!-- --></a>envhp (IN/OUT)</dt>
<dd>
<p>OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74481"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC__GUID-D31A64B5-6FE1-4F1F-AFDC-6E62BBF754DF"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74482"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC__GUID-EBC544B4-8240-495A-9BEE-449E9238AB56"><!-- --></a>src_locp (IN)</dt>
<dd>
<p>LOB or <code class="codeph">BFILE</code> locator to copy from.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74483"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC__GUID-48E0D8C6-89CD-442B-9336-517FD186B9FF"><!-- --></a>dst_locpp (IN/OUT)</dt>
<dd>
<p>LOB or <code class="codeph">BFILE</code> locator to copy to. The caller must have allocated space for the destination locator by calling <a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Assign <span class="italic">source</span> locator to <span class="italic">destination</span> locator. After the assignment, both locators refer to the same LOB value. For internal LOBs, the source locator&#39;s LOB value gets copied to the <span class="italic">destination</span> locator&#39;s LOB value only when the <span class="italic">destination</span> locator gets stored in the table. Therefore, issuing a flush of the object containing the <span class="italic">destination</span> locator copies the LOB value.</p>
<p><code class="codeph">OCILobAssign()</code> throws an error when a remote locator is passed to it.</p>
<p><code class="codeph">OCILobAssign()</code> cannot be used for temporary LOBs; it generates an <code class="codeph">OCI_INVALID_HANDLE</code> error. For temporary LOBs, use <a href="oci17msc002.htm#GUID-F7887376-4B3C-430C-94A3-11FE96E26627">OCILobLocatorAssign()</a>.</p>
<p>For <code class="codeph">BFILE</code>s, only the locator that refers to the file is copied to the table. The operating system file itself is not copied.</p>
<p>It is an error to assign a <code class="codeph">BFILE</code> locator to an internal LOB locator, and vice versa.</p>
<p>If the source locator is for an internal LOB that was enabled for buffering, and the source locator has been used to modify the LOB data through the LOB buffering subsystem, and the buffers have not been flushed since the write, then the source locator may not be assigned to the destination locator. This is because only one locator for each LOB can modify the LOB data through the LOB buffering subsystem.</p>
<p>The value of the input destination locator must have been allocated with a call to <a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>. For example, assume the following declarations:</p>
<pre dir="ltr">OCILobLocator     *source_loc = (OCILobLocator *) 0;
OCILobLocator     *dest_loc = (OCILobLocator *) 0;
</pre>
<p>The following code example shows how an application could allocate the <code class="codeph">source_loc</code> locator.</p>
<p>Allocating a source_loc Source Locator</p>
<pre dir="ltr">if (OCIDescriptorAlloc((void  *) envhp, (void  **) &amp;source_loc,
    (ub4) OCI_DTYPE_LOB, (size_t) 0, (void  **) 0))
    handle_error;
</pre>
<p>Assume that it then selects a LOB from a table into the <code class="codeph">source_loc</code> to initialize it. The application must allocate the destination locator, <code class="codeph">dest_loc</code>, before issuing the <code class="codeph">OCILobAssign()</code> call to assign the value of <code class="codeph">source_loc</code> to <code class="codeph">dest_loc</code>, as shown in the following code example.</p>
<p>Allocating a dest_loc Destination Locator</p>
<pre dir="ltr">if (OCIDescriptorAlloc((void  *) envhp, (void  **) &amp;dest_loc,
    (ub4)OCI_DTYPE_LOB, (size_t) 0, (void  **) 0))
    handle_error;
if (OCILobAssign(envhp, errhp, source_loc, &amp;dest_loc))
    handle_error
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-5142710F-03AD-43D5-BBAB-6732B874E52E">OCILobIsEqual()</a>, <a href="oci17msc002.htm#GUID-F7887376-4B3C-430C-94A3-11FE96E26627">OCILobLocatorAssign()</a>, <a href="oci17msc002.htm#GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" title="Tests to see if a given LOB or BFILE locator is initialized.">OCILobLocatorIsInit()</a>, <a href="oci17msc002.htm#GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917">OCILobEnableBuffering()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17178"></a>
<div class="props_rev_3"><a id="GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8"></a>
<h2 id="LNOCI-GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8" class="sect2">OCILobCharSetForm()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the character set form of the LOB locator, if any.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobCharSetForm ( OCIEnv                *envhp, 
                          OCIError              *errhp, 
                          const OCILobLocator   *locp, 
                          ub1                   *csfrm );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74484"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8__GUID-D8A86704-4A00-44C7-AB1D-EB6637ECFD13"><!-- --></a>envhp (IN/OUT)</dt>
<dd>
<p>OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74485"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8__GUID-48CF548A-C954-4261-B162-77BF1427B0BB"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74486"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8__GUID-9E086D41-12F1-4CF8-BDDE-34D6A0F02B11"><!-- --></a>locp (IN)</dt>
<dd>
<p>LOB locator for which to get the character set form.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74487"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8__GUID-793225FA-7E6E-47C5-BC6E-CDBFD2B290D8"><!-- --></a>csfrm (OUT)</dt>
<dd>
<p>Character set form of the input LOB locator. If the input locator, <code class="codeph">locp,</code> is for a <code class="codeph">BLOB</code> or a <code class="codeph">BFILE</code>, <code class="codeph">csfrm</code> is set to 0 because there is no concept of a character set for binary LOBs and <code class="codeph">BFILE</code>s. The caller must allocate space for <code class="codeph">csfrm</code> (a <code class="codeph">ub1</code>).</p>
<p>The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><a id="d186371e3619" class="indexterm-anchor"></a><code class="codeph">SQLCS_IMPLICIT</code> - Database character set ID, the default</p>
</li>
<li>
<p><a id="d186371e3626" class="indexterm-anchor"></a><code class="codeph">SQLCS_NCHAR</code> - NCHAR character set ID</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Returns the character set form of the input <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code> locator in the <code class="codeph">csfrm</code> output parameter.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B">OCILobCharSetId()</a>, <a href="oci17msc002.htm#GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" title="Tests to see if a given LOB or BFILE locator is initialized.">OCILobLocatorIsInit()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17179"></a>
<div class="props_rev_3"><a id="GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B"></a>
<h2 id="LNOCI-GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B" class="sect2">OCILobCharSetId()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the LOB locator&#39;s database character set ID of the LOB locator, if any.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobCharSetId ( OCIEnv                  *envhp, 
                        OCIError                *errhp, 
                        const OCILobLocator     *locp, 
                        ub2                     *csid );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74488"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B__GUID-376E9F18-ADEC-4549-9C89-F702E1A75192"><!-- --></a>envhp (IN/OUT)</dt>
<dd>
<p>OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74489"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B__GUID-B359B67C-36F8-43CD-BB34-A2B7BF31A754"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74490"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B__GUID-B3110C6A-76A7-4D35-ACA0-34314298D2E7"><!-- --></a>locp (IN)</dt>
<dd>
<p>LOB locator for which to get the character set ID.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74491"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A243691D-8180-4AF6-AA6E-DF9333F8258B__GUID-006580A9-1FD1-440B-AAAA-DA00C73D9B05"><!-- --></a>csid (OUT)</dt>
<dd>
<p>Database character set ID of the input LOB locator. If the input locator is for a <code class="codeph">BLOB</code> or a <code class="codeph">BFILE</code>, <code class="codeph">csid</code> is set to 0 because there is no concept of a character set for binary LOBs or binary files. The caller must allocate space for the <code class="codeph">csid</code> <code class="codeph">ub2</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Returns the character set ID of the input <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code> locator in the <code class="codeph">csid</code> output parameter.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-9B25760D-649E-4B83-A0AA-8C4F3C479BC8">OCILobCharSetForm()</a>, <a href="oci17msc002.htm#GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" title="Tests to see if a given LOB or BFILE locator is initialized.">OCILobLocatorIsInit()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17180"></a>
<div class="props_rev_3"><a id="GUID-CBEB9238-6B47-4A08-8C8D-FC2E5ED56557"></a>
<h2 id="LNOCI-GUID-CBEB9238-6B47-4A08-8C8D-FC2E5ED56557" class="sect2">OCILobClose()</h2>
<div>
<p>Closes a previously opened LOB or <code class="codeph">BFILE</code>.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Closes a previously opened LOB or <code class="codeph">BFILE</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobClose ( OCISvcCtx      *svchp,
                    OCIError       *errhp, 
                    OCILobLocator  *locp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74492"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CBEB9238-6B47-4A08-8C8D-FC2E5ED56557__GUID-D6002BAE-0E2D-4D10-AD56-709C25578A7B"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74493"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CBEB9238-6B47-4A08-8C8D-FC2E5ED56557__GUID-1CC6F9E4-5700-4569-99A6-351BE4AC9C2B"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74494"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CBEB9238-6B47-4A08-8C8D-FC2E5ED56557__GUID-4F57D737-F737-4F35-ACB5-038DF9ED6BCB"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>The LOB to close. The locator can refer to an internal or external LOB.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Closes a previously opened internal or external LOB. No error is returned if the <code class="codeph">BFILE</code> exists but is not opened. An error is returned if the internal LOB is not open.</p>
<p>Closing a LOB requires a round-trip to the server for both internal and external LOBs. For internal LOBs, close triggers other code that relies on the close call and for external LOBs (<code class="codeph">BFILEs</code>), close actually closes the server-side operating system file.</p>
<p>It is not mandatory that you wrap all LOB operations inside the open or close calls. However, if you open a LOB, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column. It is an error to commit the transaction before closing all opened LOBs that were opened by the transaction.</p>
<p>When the error is returned, the LOB is no longer marked as open, but the transaction is successfully committed. Hence, all the changes made to the LOB and non-LOB data in the transaction are committed, but the domain and function-based indexing are not updated. If this happens, rebuild your functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance, so if you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17182"></a>
<div class="props_rev_3"><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF"></a>
<h2 id="LNOCI-GUID-404C8A50-516F-4DFD-939D-646A232AF7DF" class="sect2">OCILobCopy2()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Copies all or a portion of a LOB value into another LOB value. This function must be used for LOBs of size greater than 4 GB. You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobCopy2 ( OCISvcCtx        *svchp,
                    OCIError         *errhp,
                    OCILobLocator    *dst_locp,
                    OCILobLocator    *src_locp,
                    oraub8           amount,
                    oraub8           dst_offset,
                    oraub8           src_offset );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74495"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-2457F05D-2168-4E56-9EA0-275A8B7C6AC8"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74496"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-F3F17FD6-9D89-4B0D-BEE6-79253551F4AD"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74497"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-6334EAFE-35D8-4873-A3DC-E58E11430FD3"><!-- --></a><span class="bold">dst_locp</span> (IN/OUT)</dt>
<dd>
<p>An internal LOB locator uniquely referencing the destination LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74498"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-7FB4136F-B32D-491B-A227-A42FC3D3172F"><!-- --></a><span class="bold">src_locp</span> (IN)</dt>
<dd>
<p>An internal LOB locator uniquely referencing the source LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74499"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-98B73F61-37E9-4793-A24E-6F4A64F1FB7F"><!-- --></a><span class="bold">amount</span> (IN)</dt>
<dd>
<p>The number of characters for <code class="codeph">CLOB</code>s or <code class="codeph">NCLOB</code>s or the number of bytes for <code class="codeph">BLOB</code>s to be copied from the source LOB to the destination LOB. The maximum value accepted by this parameter is <code class="codeph">UB8MAXVAL</code> (18446744073709551615). Specifying <code class="codeph">UB8MAXVAL</code> also indicates that the entire source LOB will be copied to the destination LOB using the specified source and destination offsets.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74500"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-0FA306BA-331C-4CE2-9509-867A6B1E7A01"><!-- --></a><span class="bold">dst_offset</span> (IN)</dt>
<dd>
<p>This is the absolute offset for the destination LOB. For character LOBs, it is the number of characters from the beginning of the LOB at which to begin writing. For binary LOBs, it is the number of bytes from the beginning of the LOB from which to begin writing. The offset starts at 1.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74501"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-394DD504-D33A-476D-9042-7E73D3BC6604"><!-- --></a><span class="bold">src_offset</span> (IN)</dt>
<dd>
<p>This is the absolute offset for the source LOB. For character LOBs, it is the number of characters from the beginning of the LOB. For binary LOBs, it is the number of bytes. Starts at 1.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Copies all or a portion of an internal LOB value into another internal LOB as specified. The data is copied from the source to the destination. The source (<code class="codeph">src_locp</code>) and the destination (<code class="codeph">dst_locp</code>) LOBs must exist.</p>
<p>Copying a complete SecureFile in a column or partition with deduplicate enabled, to a LOB in the same column or partition, causes the copy to be deduplicated.</p>
<p>If the data exists at the destination&#39;s start position, it is overwritten with the source data. If the destination&#39;s start position is beyond the end of the current data, zero-byte fillers (for <code class="codeph">BLOBs</code>) or spaces (for <code class="codeph">CLOBs</code>) are written into the destination LOB from the end of the current data to the beginning of the newly written data from the source. The destination LOB is extended to accommodate the newly written data if it extends beyond the current length of the destination LOB. It is an error to extend the destination LOB beyond the maximum length allowed (that is, 4 gigabytes) or to try to copy from a <code class="codeph">NULL</code> LOB. Use <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a> for LOBs of size greater than 4 GB.</p>
<p>Both the source and the destination LOB locators must be of the same type (that is, they must both be <code class="codeph">BLOBs</code> or both be <code class="codeph">CLOBs</code>). LOB buffering must not be enabled for either locator.</p>
<p>This function does not accept a <code class="codeph">BFILE</code> locator as the source or the destination.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
<div class="infobox-note" id="GUID-404C8A50-516F-4DFD-939D-646A232AF7DF__GUID-AFB29F4C-D12B-4469-A6F5-DEFCCD60A3DA">
<p class="notep1">Note:</p>
<p>You can call <a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a> to determine the length of the source LOB.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17183"></a>
<div class="props_rev_3"><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A"></a>
<h2 id="LNOCI-GUID-63F75EC5-EB14-4E25-B593-270FF814615A" class="sect2">OCILobCreateTemporary()</h2>
<div>
<p>Creates a temporary LOB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Creates a temporary LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobCreateTemporary(OCISvcCtx          *svchp,
                            OCIError           *errhp,
                            OCILobLocator      *locp,
                            ub2                 csid,
                            ub1                 csfrm,
                            ub1                 lobtype,
                            boolean             cache,
                            OCIDuration         duration);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74502"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-F175D538-8520-44BB-978A-24CC7C65B673"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The OCI service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74503"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-309C7C6B-C832-4F7C-8C5C-00C0034DA88E"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74504"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-4F0F16B0-6A14-4409-8392-56729B1387FC"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>A locator that points to the temporary LOB. You must allocate the locator using <code class="codeph">OCIDescriptorAlloc()</code> before passing it to this function. It does not matter whether this locator points to a LOB; the temporary LOB gets overwritten either way.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74505"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-7C41E6E5-5153-4304-81B1-007A2EB5619E"><!-- --></a>csid (IN)</dt>
<dd>
<p>The LOB character set ID. For Oracle8<span class="italic">i</span> or later, pass as <code class="codeph">OCI_DEFAULT</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74506"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-1ED22381-BFCC-454C-9EC0-836AE31AA74E"><!-- --></a>csfrm (IN)</dt>
<dd>
<p>The LOB character set form of the buffer data. The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SQLCS_IMPLICIT</code> - Database character set ID, to create a <code class="codeph">CLOB</code>. <code class="codeph">OCI_DEFAULT</code> can also be used to implicitly create a <code class="codeph">CLOB</code>.</p>
</li>
<li>
<p><code class="codeph">SQLCS_NCHAR</code> - <code class="codeph">NCHAR</code> character set ID, to create an <code class="codeph">NCLOB</code>.</p>
</li>
</ul>
<p>The default value is <code class="codeph">SQLCS_IMPLICIT</code>.</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74507"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-44ECED4C-E031-416A-BD25-C64C1906475F"><!-- --></a>lobtype (IN)</dt>
<dd>
<p>The type of LOB to create. Valid values include:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_TEMP_BLOB</code> - For a temporary <code class="codeph">BLOB</code></p>
</li>
<li>
<p><code class="codeph">OCI_TEMP_CLOB</code> - For a temporary <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code></p>
</li>
</ul>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74508"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-C07E52AE-DE2D-4C1D-99D7-46D1D86AD193"><!-- --></a>cache (IN)</dt>
<dd>
<p>Pass <code class="codeph">TRUE</code> if the temporary LOB should be read into the cache; pass <code class="codeph">FALSE</code> if it should not. The default is <code class="codeph">FALSE</code> for <code class="codeph">NOCACHE</code> functionality.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74509"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-107EF1B1-94EA-40A3-BFF3-1012B2C05894"><!-- --></a>duration (IN)</dt>
<dd>
<p>The duration of the temporary LOB. The following are valid values:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_DURATION_SESSION</code></p>
</li>
<li>
<p><code class="codeph">OCI_DURATION_CALL</code></p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function creates a temporary LOB and its corresponding index in the user&#39;s temporary tablespace.</p>
<p>When this function is complete, the <code class="codeph">locp</code> parameter points to an empty temporary LOB whose length is zero.</p>
<p>The lifetime of the temporary LOB is determined by the <code class="codeph">duration</code> parameter. At the end of its duration the temporary LOB is freed. An application can free a temporary LOB sooner with the <code class="codeph">OCILobFreeTemporary()</code> call.</p>
<p>If the LOB is a <code class="codeph">BLOB</code>, the <code class="codeph">csid</code> and <code class="codeph">csfrm</code> parameters are ignored.</p>
<div class="infoboxnotealso" id="GUID-63F75EC5-EB14-4E25-B593-270FF814615A__GUID-161E22DA-78AD-4F99-8F6C-C43903EB1C20">
<p class="notep1">See Also:</p>
<p><a href="oci07lob.htm#GUID-B9A9B78B-570B-4B54-A4C4-A2F2D2808B06" title="OCI provides functions for creating and freeing temporary LOBs, OCILobCreateTemporary() and OCILobFreeTemporary(), and a function for determining whether a LOB is temporary, OCILobIsTemporary().">Temporary LOB Support</a> for more information about temporary LOBs and their durations</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17184"></a>
<div class="props_rev_3"><a id="GUID-6BE287D0-3385-4514-850A-349940ECB26A"></a>
<h2 id="LNOCI-GUID-6BE287D0-3385-4514-850A-349940ECB26A" class="sect2">OCILobDisableBuffering()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Disables LOB buffering for the input locator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobDisableBuffering ( OCISvcCtx      *svchp, 
                               OCIError       *errhp, 
                               OCILobLocator  *locp ); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74510"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6BE287D0-3385-4514-850A-349940ECB26A__GUID-0B054BF2-DD2C-4392-97D7-5453086E334F"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74511"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6BE287D0-3385-4514-850A-349940ECB26A__GUID-DEED8F10-3076-4CBA-AB0F-DCF7530DED11"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> or diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74512"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6BE287D0-3385-4514-850A-349940ECB26A__GUID-56C7D96E-3D5C-494B-A3E7-3E34A7192550"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>An internal LOB locator uniquely referencing the LOB.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Disables LOB buffering for the input internal LOB locator. The next time data is read from or written to the LOB through the input locator, the LOB buffering subsystem is <span class="italic">not</span> used. Note that this call does <span class="italic">not</span> implicitly flush the changes made in the buffering subsystem. The user must explicitly call <a href="oci17msc002.htm#GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1">OCILobFlushBuffer()</a> to do this.</p>
<p>This function does not accept a <code class="codeph">BFILE</code> locator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917">OCILobEnableBuffering()</a>, <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1">OCILobFlushBuffer()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17185"></a>
<div class="props_rev_3"><a id="GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917"></a>
<h2 id="LNOCI-GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917" class="sect2">OCILobEnableBuffering()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Enables LOB buffering for the input locator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobEnableBuffering ( OCISvcCtx      *svchp, 
                              OCIError       *errhp, 
                              OCILobLocator  *locp ); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74513"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917__GUID-14C9998C-21B1-4C86-AB8B-6BC92C56D9BB"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74514"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917__GUID-71FF1760-55A7-4522-908B-7199368BB45C"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74515"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917__GUID-CF7976B4-41F4-41BA-821D-049F22BF21F9"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>An internal LOB locator uniquely referencing the LOB.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Enables LOB buffering for the input internal LOB locator. The next time data is read from or written to the LOB through the input locator, the LOB buffering subsystem is used.</p>
<p>If LOB buffering is enabled for a locator and that locator is passed to one of these routines, an error is returned: <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="ociaedep003.htm#GUID-2E89A469-397B-45BD-871B-4A7E7A5815C1" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobCopy()</a> (deprecated), <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="ociaedep003.htm#GUID-FD529B73-7D7B-4F93-BB01-4A4625503C36" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobErase()</a> (deprecated), <a href="oci17msc002.htm#GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA">OCILobErase2()</a>, <a href="ociaedep003.htm#GUID-3CEE9E79-A7E5-4078-949B-BD0ED3FB4124" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobGetLength()</a> (deprecated), <a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a>, <a href="ociaedep003.htm#GUID-87C6AE88-5E71-4D89-A2B8-B391BFF73AC6" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobLoadFromFile()</a> (deprecated), <a href="oci17msc002.htm#GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4">OCILobLoadFromFile2()</a>, <a href="ociaedep003.htm#GUID-2D1D8F83-040B-4923-9F02-108D1F636B20" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobTrim()</a> (deprecated), <a href="oci17msc002.htm#GUID-ABDB1543-1782-4216-AD80-55FA82CFF733">OCILobTrim2()</a>, <a href="ociaedep003.htm#GUID-BC03A84A-5747-414F-9A79-BAAF0EE71EF8" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWriteAppend()</a> (deprecated), or <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a>.</p>
<p>This function does not accept a <code class="codeph">BFILE</code> locator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-6BE287D0-3385-4514-850A-349940ECB26A">OCILobDisableBuffering()</a>, <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="ociaedep003.htm#GUID-CA0A90B9-0BB0-4017-AC53-996A102A7854" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWrite()</a> (deprecated), <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="ociaedep003.htm#GUID-4F904ADC-547E-40CE-8F2F-98C7D7480D03" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobRead()</a> (deprecated), <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1">OCILobFlushBuffer()</a>, <a href="ociaedep003.htm#GUID-BC03A84A-5747-414F-9A79-BAAF0EE71EF8" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWriteAppend()</a> (deprecated), <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17187"></a>
<div class="props_rev_3"><a id="GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA"></a>
<h2 id="LNOCI-GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA" class="sect2">OCILobErase2()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Erases a specified portion of the internal LOB data starting at a specified offset. This function must be used for LOBs of size greater than 4 GB. You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobErase2 ( OCISvcCtx       *svchp,
                     OCIError        *errhp,
                     OCILobLocator   *locp,
                     oraub8          *amount,
                     oraub8          offset );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74516"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA__GUID-BC511059-D975-4488-87A8-F5F3A3DC6DD1"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74517"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA__GUID-3A74B034-9D49-46BB-9944-70FA77A8564F"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74518"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA__GUID-AA3B8C90-FE1A-4C49-AF2D-75A3A816932A"><!-- --></a><span class="bold">locp</span> (IN/OUT)</dt>
<dd>
<p>An internal LOB locator that uniquely references the LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74519"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA__GUID-CDDB2A8B-8B19-4011-8933-D57579BD93AB"><!-- --></a><span class="bold">amount</span> (IN/OUT)</dt>
<dd>
<p>The number of characters for <code class="codeph">CLOB</code>s or <code class="codeph">NCLOB</code>s, or bytes for <code class="codeph">BLOB</code>s, to erase. On IN, the value signifies the number of characters or bytes to erase. On OUT, the value identifies the actual number of characters or bytes erased.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74520"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA__GUID-BF6B04F3-6551-43DC-9118-D1EDEF1C5506"><!-- --></a><span class="bold">offset</span> (IN)</dt>
<dd>
<p>Absolute offset in characters for <code class="codeph">CLOB</code>s or <code class="codeph">NCLOB</code>s, or bytes for <code class="codeph">BLOB</code>s, from the beginning of the LOB value from which to start erasing data. Starts at 1.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>The actual number of characters or bytes erased is returned. For <code class="codeph">BLOB</code>s, erasing means that zero-byte fillers overwrite the existing LOB value. For <code class="codeph">CLOB</code>s, erasing means that spaces overwrite the existing LOB value.</p>
<p>This function is valid only for internal LOBs; <code class="codeph">BFILE</code>s are not allowed.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA">OCILobErase2()</a>, <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17188"></a>
<div class="props_rev_3"><a id="GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A"></a>
<h2 id="LNOCI-GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A" class="sect2">OCILobFileClose()</h2>
<div>
<p>Closes a previously opened <code class="codeph">BFILE</code>.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Closes a previously opened <code class="codeph">BFILE</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileClose ( OCISvcCtx            *svchp,
                        OCIError             *errhp,
                        OCILobLocator        *filep );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74521"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A__GUID-E409BC00-8CA8-4916-A50A-211B41887397"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74522"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A__GUID-90B2C670-C9AF-45B9-9D1A-F8B78EA59C01"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74523"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A__GUID-A98ADB39-4143-42A5-BFC1-D12950AADD68"><!-- --></a><span class="bold">filep</span> (IN/OUT)</dt>
<dd>
<p>A pointer to a <code class="codeph">BFILE</code> locator that refers to the <code class="codeph">BFILE</code> to be closed.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Closes a previously opened <code class="codeph">BFILE</code>. It is an error if this function is called for an internal LOB. No error is returned if the <code class="codeph">BFILE</code> exists but is not opened.</p>
<p>This function is only meaningful the first time it is called for a particular <code class="codeph">BFILE</code> locator. Subsequent calls to this function using the same <code class="codeph">BFILE</code> locator have no effect.</p>
<div class="infoboxnotealso" id="GUID-40AFA7A3-3A24-4DF7-A719-AECA7C1F522A__GUID-0FBBAB16-C786-4517-871A-4E5DB597375E">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17189"></a>
<div class="props_rev_3"><a id="GUID-7401D38E-DDB4-4826-8910-94A2FB739A4B"></a>
<h2 id="LNOCI-GUID-7401D38E-DDB4-4826-8910-94A2FB739A4B" class="sect2">OCILobFileCloseAll()</h2>
<div>
<p>Closes all open <code class="codeph">BFILE</code>s on a given service context.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Closes all open <code class="codeph">BFILE</code>s on a given service context.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileCLoseAll ( OCISvcCtx   *svchp,
                           OCIError    *errhp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74524"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7401D38E-DDB4-4826-8910-94A2FB739A4B__GUID-C6C3D54A-A40D-4209-846A-8295AECC6126"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74525"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7401D38E-DDB4-4826-8910-94A2FB739A4B__GUID-C2E94D29-4299-4B33-B86F-7604DCAA02D4"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Closes all open <code class="codeph">BFILE</code>s on a given service context.</p>
<div class="infoboxnotealso" id="GUID-7401D38E-DDB4-4826-8910-94A2FB739A4B__GUID-CC0A4EF7-ED5D-47CD-9AEE-00AAEDB9F255">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17190"></a>
<div class="props_rev_3"><a id="GUID-977F905D-DAFB-4D88-8FE0-7A345837B147"></a>
<h2 id="LNOCI-GUID-977F905D-DAFB-4D88-8FE0-7A345837B147" class="sect2">OCILobFileExists()</h2>
<div>
<p>Tests to see if the <code class="codeph">BFILE</code> exists on the server&#39;s operating system.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Tests to see if the <code class="codeph">BFILE</code> exists on the server&#39;s operating system.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileExists ( OCISvcCtx        *svchp,
                         OCIError         *errhp,
                         OCILobLocator    *filep,
                         boolean          *flag );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74526"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-977F905D-DAFB-4D88-8FE0-7A345837B147__GUID-F5D8441D-9433-4A47-8E5E-D1DF19584DFC"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The OCI service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74527"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-977F905D-DAFB-4D88-8FE0-7A345837B147__GUID-05649A8A-4607-4DEA-BD82-52D8AB9169AD"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74528"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-977F905D-DAFB-4D88-8FE0-7A345837B147__GUID-3C612E4C-BED5-41BF-9CB6-F644D8A9D112"><!-- --></a>filep (IN)</dt>
<dd>
<p>Pointer to the <code class="codeph">BFILE</code> locator that refers to the file.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74529"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-977F905D-DAFB-4D88-8FE0-7A345837B147__GUID-6F1A82F0-E529-4875-B576-4D441F056777"><!-- --></a>flag (OUT)</dt>
<dd>
<p>Returns <code class="codeph">TRUE</code> if the <code class="codeph">BFILE</code> exists on the server; <code class="codeph">FALSE</code> if it does not.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Checks to see if the <code class="codeph">BFILE</code> exists on the server&#39;s file system. It is an error to call this function for an internal LOB.</p>
<div class="infoboxnotealso" id="GUID-977F905D-DAFB-4D88-8FE0-7A345837B147__GUID-FF93487E-7871-48BD-AF90-F195EC031558">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17191"></a>
<div class="props_rev_3"><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813"></a>
<h2 id="LNOCI-GUID-BF637A34-B18A-47EE-A060-93C4E79D1813" class="sect2">OCILobFileGetName()</h2>
<div>
<p>Gets the <code class="codeph">BFILE</code> locator&#39;s directory object and file name.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the <code class="codeph">BFILE</code> locator&#39;s directory object and file name.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileGetName ( OCIEnv                   *envhp,
                          OCIError                 *errhp, 
                          const OCILobLocator      *filep, 
                          OraText                  *dir_alias,
                          ub2                      *d_length, 
                          OraText                  *filename, 
                          ub2                      *f_length );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74530"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-0BA08DF7-DDEE-4BB1-A23B-CBBB7C3CCC7E"><!-- --></a>envhp (IN/OUT)</dt>
<dd>
<p>OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74531"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-12CD80EA-8604-4AD2-BA8C-FE86DCC5AF93"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74532"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-F2BCA184-8054-456E-8D26-BE14F48C508B"><!-- --></a>filep (IN)</dt>
<dd>
<p><code class="codeph">BFILE</code> locator for which to get the directory object and file name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74533"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-5CA72723-DB45-45A8-BB87-ED6CB24C7115"><!-- --></a>dir_alias (OUT)</dt>
<dd>
<p>Buffer into which the directory object name is placed. This can be in UTF-16. You must allocate enough space for the directory object name. The maximum length for the directory object is 30 bytes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74534"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-71B87B77-019B-4B70-8F09-B93C1488FD56"><!-- --></a>d_length (IN/OUT)</dt>
<dd>
<p>Serves the following purposes (can be in code point for Unicode, or bytes):</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p>IN: length of the input <code class="codeph">dir_alias</code> string</p>
</li>
<li>
<p>OUT: length of the returned <code class="codeph">dir_alias</code> string</p>
</li>
</ul>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74535"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-3018FA92-765A-4AFC-8171-8CB1B2F85F0C"><!-- --></a>filename (OUT)</dt>
<dd>
<p>Buffer into which the file name is placed. You must allocate enough space for the file name. The maximum length for the file name is 255 bytes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74536"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-68CAC74B-0A29-407E-96A1-4A4AB1BB1DB1"><!-- --></a>f_length (IN/OUT)</dt>
<dd>
<p>Serves the following purposes (in number of bytes):</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p>IN: length of the input <code class="codeph">filename</code> buffer</p>
</li>
<li>
<p>OUT: length of the returned <code class="codeph">filename</code> string</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Returns the directory object and file name associated with this <code class="codeph">BFILE</code> locator. The environment handle determines whether it is in Unicode. It is an error to call this function for an internal LOB.</p>
<div class="infoboxnotealso" id="GUID-BF637A34-B18A-47EE-A060-93C4E79D1813__GUID-C68E5CD6-F7CA-4A82-8A21-6421E8B1F455">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17192"></a>
<div class="props_rev_3"><a id="GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7"></a>
<h2 id="LNOCI-GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7" class="sect2">OCILobFileIsOpen()</h2>
<div>
<p>Tests to see if the <code class="codeph">BFILE</code> is open.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Tests to see if the <code class="codeph">BFILE</code> is open.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileIsOpen ( OCISvcCtx        *svchp,
                         OCIError         *errhp,
                         OCILobLocator    *filep,
                         boolean          *flag );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74537"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7__GUID-9C8FFA8E-8729-498E-8426-E2B6E45EDD87"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The OCI service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74538"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7__GUID-6A0BADEC-44D9-4168-A4C3-5F07FB3F345F"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74539"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7__GUID-2C446D2F-334F-4195-A479-59FA64683E4A"><!-- --></a>filep (IN)</dt>
<dd>
<p>Pointer to the <code class="codeph">BFILE</code> locator being examined.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74540"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7__GUID-C41337C5-BD49-49E5-AF24-176F03B3605E"><!-- --></a>flag (OUT)</dt>
<dd>
<p>Returns <code class="codeph">TRUE</code> if the <code class="codeph">BFILE</code> was opened using this particular locator; returns <code class="codeph">FALSE</code> if it was not.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Checks to see if a file on the server was opened with the <code class="codeph">filep</code> <code class="codeph">BFILE</code> locator. It is an error to call this function for an internal LOB.</p>
<p>If the input <code class="codeph">BFILE</code> locator was never passed to the <code class="codeph">OCILobFileOpen()</code> or <code class="codeph">OCILobOpen()</code> command, the file is considered not to be opened by this locator. However, a different locator may have the file open. Openness is associated with a particular locator.</p>
<div class="infoboxnotealso" id="GUID-A662166C-DC74-40B4-9BFA-8D3ED216FDE7__GUID-AAC82DA7-5C76-4F7E-8817-4E871B1BC41D">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17193"></a>
<div class="props_rev_3"><a id="GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0"></a>
<h2 id="LNOCI-GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0" class="sect2">OCILobFileOpen()</h2>
<div>
<p>Opens a <code class="codeph">BFILE</code> on the file system of the server for read-only access.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Opens a <code class="codeph">BFILE</code> on the file system of the server for read-only access.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileOpen ( OCISvcCtx            *svchp,
                       OCIError             *errhp,
                       OCILobLocator        *filep,
                       ub1                   mode );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74541"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0__GUID-39454DE2-48DA-436B-8D96-FD873E534EDE"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74542"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0__GUID-D4768B9A-0EDE-4F57-B1FD-0B1620B15207"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74543"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0__GUID-F070185A-7E5F-4A11-A0B2-D68A82A9333B"><!-- --></a><span class="bold">filep</span> (IN/OUT)</dt>
<dd>
<p>The <code class="codeph">BFILE</code> to open. It is an error if the locator does not refer to a <code class="codeph">BFILE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74544"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0__GUID-A8632C04-9604-4EC2-AB7F-D11AACB4C001"><!-- --></a><span class="bold">mode</span> (IN)</dt>
<dd>
<p>Mode in which to open the file. The only valid mode is <code class="codeph">OCI_FILE_READONLY</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Opens a <code class="codeph">BFILE</code> on the file system of the server. The <code class="codeph">BFILE</code> can be opened for read-only access. <code class="codeph">BFILE</code>s can not be written through Oracle Database. It is an error to call this function for an internal LOB.</p>
<p>This function is only meaningful the first time it is called for a particular <code class="codeph">BFILE</code> locator. Subsequent calls to this function using the same <code class="codeph">BFILE</code> locator have no effect.</p>
<div class="infoboxnotealso" id="GUID-2E933BBA-BCE3-41F2-B8A2-4F9485F0BCB0__GUID-91AE7373-2E76-494C-B9B9-442DBC4F6D71">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17194"></a>
<div class="props_rev_3"><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C"></a>
<h2 id="LNOCI-GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C" class="sect2">OCILobFileSetName()</h2>
<div>
<p>Sets the directory object and file name in the <code class="codeph">BFILE</code> locator.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Sets the directory object and file name in the <code class="codeph">BFILE</code> locator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFileSetName ( OCIEnv             *envhp,
                          OCIError           *errhp,
                          OCILobLocator     **filepp,
                          const OraText      *dir_alias,
                          ub2                 d_length, 
                          const OraText      *filename, 
                          ub2                 f_length );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74545"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-5D87BE81-DC84-4DC7-85F1-5963AD55B72C"><!-- --></a>envhp (IN/OUT)</dt>
<dd>
<p>OCI environment handle. Contains the UTF-16 setting.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74546"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-8586740F-CDB5-4E77-AC44-C475D5AE79E0"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74547"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-AA35FE83-E1C2-42D1-B843-A65211FD5C0B"><!-- --></a>filepp (IN/OUT)</dt>
<dd>
<p>Pointer to the <code class="codeph">BFILE</code> locator for which to set the directory object and file name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74548"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-C2C6F8F4-EF98-4945-8456-4AF738C75373"><!-- --></a>dir_alias (IN)</dt>
<dd>
<p>Buffer that contains the directory object name (must be in the encoding specified by the <code class="codeph">charset</code> parameter of a previous call to <a href="oci16rel001.htm#GUID-0B6911A9-4B46-476C-BC5E-B87581666CD9" title="Creates and initializes an environment handle for OCI functions to work under.">OCIEnvNlsCreate()</a> to set in the <code class="codeph">BFILE</code> locator.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74549"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-D222F83A-375E-4CFC-8E9A-973D23951F43"><!-- --></a>d_length (IN)</dt>
<dd>
<p>Length (in bytes) of the input <code class="codeph">dir_alias</code> parameter.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74550"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-EA7CF9AC-663E-4860-9538-58EAD9003BFC"><!-- --></a>filename (IN)</dt>
<dd>
<p>Buffer that contains the file name (must be in the encoding specified by the <code class="codeph">charset</code> parameter of a previous call to <code class="codeph">OCIEnvNlsCreate()</code> to set in the <code class="codeph">BFILE</code> locator.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74551"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-59B5BD42-5C4E-4E5C-AB82-09161E57D023"><!-- --></a>f_length (IN)</dt>
<dd>
<p>Length (in bytes) of the input <code class="codeph">filename</code> parameter.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>It is an error to call this function for an internal LOB.</p>
<div class="infoboxnotealso" id="GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C__GUID-9C0F74A0-53D8-4055-B741-34A292B9CC2E">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17195"></a>
<div class="props_rev_3"><a id="GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1"></a>
<h2 id="LNOCI-GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1" class="sect2">OCILobFlushBuffer()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Flushes or write s all buffers for this LOB to the server.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFlushBuffer ( OCISvcCtx       *svchp, 
                          OCIError        *errhp, 
                          OCILobLocator   *locp
                          ub4             flag ); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74552"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1__GUID-0BEF398B-F21D-48AE-B7F4-A7E85AD4F2D5"><!-- --></a>svchp (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74553"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1__GUID-01B2FCE3-4573-413D-897D-0A86CEBB133F"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74554"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1__GUID-7AA63F71-A29E-4B01-A880-D34600DF32E0"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>An internal locator uniquely referencing the LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74555"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E63ACF53-B64F-4E57-9EBE-B7B73C033EE1__GUID-706EA210-D251-4D7F-9471-A6EAFF639F52"><!-- --></a>flag (IN)</dt>
<dd>
<p>When this flag is set to <code class="codeph">OCI_LOB_BUFFER_FREE</code>, the buffer resources for the LOB are freed after the flush. See the Comments section.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Flushes to the server changes made to the buffering subsystem that are associated with the LOB referenced by the input locator. This routine actually writes the data in the buffer to the LOB in the database. LOB buffering must have been enabled for the input LOB locator.</p>
<p>The flush operation, by default, does not free the buffer resources for reallocation to another buffered LOB operation. To free the buffer explicitly, you can set the flag parameter to <code class="codeph">OCI_LOB_BUFFER_FREE</code>.</p>
<p>If the client application intends to read the buffer value after the flush and knows in advance that the current value in the buffer is the desired value, there is no need to reread the data from the server.</p>
<p>The effects of freeing the buffer are mostly transparent to the user, except that the next access to the same range in the LOB involves a round-trip to the server, and there is an added cost for acquiring buffer resources and initializing the buffer with the data read from the LOB. This option is intended for client environments that have low on-board memory.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-588B17BE-DB5F-4D2D-8FF1-7E4BEABFA917">OCILobEnableBuffering()</a>, <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="ociaedep003.htm#GUID-CA0A90B9-0BB0-4017-AC53-996A102A7854" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWrite()</a> (deprecated), <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="ociaedep003.htm#GUID-4F904ADC-547E-40CE-8F2F-98C7D7480D03" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobRead()</a> (deprecated), <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-6BE287D0-3385-4514-850A-349940ECB26A">OCILobDisableBuffering()</a>, <a href="ociaedep003.htm#GUID-BC03A84A-5747-414F-9A79-BAAF0EE71EF8" title="This function was deprecated in a release previous to Oracle Database 11g Release 2 (11.2).">OCILobWriteAppend()</a> (deprecated), <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17196"></a>
<div class="props_rev_3"><a id="GUID-E0FBF017-1B08-410C-9E53-F6E14008813A"></a>
<h2 id="LNOCI-GUID-E0FBF017-1B08-410C-9E53-F6E14008813A" class="sect2">OCILobFreeTemporary()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Frees a temporary LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobFreeTemporary( OCISvcCtx          *svchp,
                           OCIError           *errhp,
                           OCILobLocator      *locp);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74556"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E0FBF017-1B08-410C-9E53-F6E14008813A__GUID-A3C7852F-AEEB-4FC5-A34F-CCAF2F6BE4FF"><!-- --></a>svchp (IN/OUT)</dt>
<dd>
<p>The OCI service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74557"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E0FBF017-1B08-410C-9E53-F6E14008813A__GUID-11BBE01A-A739-4077-8134-4E50F36BD330"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74558"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E0FBF017-1B08-410C-9E53-F6E14008813A__GUID-B61CC364-0CDD-4756-BAE0-72AE1467871E"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>A locator uniquely referencing the LOB to be freed.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function frees the contents of the temporary LOB to which this locator points. Note that the locator itself is not freed until <a href="oci16rel002.htm#GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629">OCIDescriptorFree()</a> is called.</p>
<p>This function returns an error if the LOB locator passed in the <code class="codeph">locp</code> parameter does not point to a temporary LOB, possibly because the LOB locator:</p>
<ul style="list-style-type: disc;">
<li>
<p>Points to a permanent LOB</p>
</li>
<li>
<p>Pointed to a temporary LOB that has been freed</p>
</li>
<li>
<p>Has never pointed to anything</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related functions</p>
<p><a href="oci17msc002.htm#GUID-63F75EC5-EB14-4E25-B593-270FF814615A" title="Creates a temporary LOB.">OCILobCreateTemporary()</a>, <a href="oci17msc002.htm#GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3">OCILobIsTemporary()</a>, <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17197"></a>
<div class="props_rev_3"><a id="GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072"></a>
<h2 id="LNOCI-GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072" class="sect2">OCILobGetChunkSize()</h2>
<div>
<p>Gets the chunk size of a LOB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the chunk size of a LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobGetChunkSize ( OCISvcCtx       *svchp,
                           OCIError        *errhp,
                           OCILobLocator   *locp,
                           ub4             *chunk_size );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74559"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072__GUID-C308B4F2-ABA7-43C4-9842-71B4E8CCA917"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74560"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072__GUID-C5365B1B-C693-4104-8EC4-48A69B315E57"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74561"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072__GUID-347D46B2-FC7C-47C9-9E69-744708C1931C"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>The internal LOB for which to get the usable chunk size.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74562"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072__GUID-8D68539F-4004-45BB-BE13-B95379A3A971"><!-- --></a>chunk_size (OUT)</dt>
<dd>
<p>For LOBs with storage parameter <code class="codeph">BASICFILE</code>, the amount of a chunk&#39;s space that is used to store the internal LOB value. This is the amount that users should use when reading or writing the LOB value. If possible, users should start their writes at chunk boundaries, such as the beginning of a chunk, and write a chunk at a time.</p>
<p>The <code class="codeph">chunk_size</code> parameter is returned in terms of bytes for <code class="codeph">BLOB</code>s, <code class="codeph">CLOB</code>s, and <code class="codeph">NCLOB</code>s.</p>
<p>For LOBs with storage parameter <code class="codeph">SECUREFILE</code>, <code class="codeph">chunk_size</code> is an advisory size and is provided for backward compatibility.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>When creating a table that contains an internal LOB, the user can specify the chunking factor, which can be a multiple of Oracle Database blocks. This corresponds to the chunk size used by the LOB data layer when accessing and modifying the LOB value. Part of the chunk is used to store system-related information, and the rest stores the LOB value. This function returns the amount of space used in the LOB chunk to store the LOB value. Performance is improved if the application issues read or write requests using a multiple of this chunk size. For writes, there is an added benefit because LOB chunks are versioned and, if all writes are done on a chunk basis, no extra versioning is done or duplicated. Users could batch up the write until they have enough for a chunk instead of issuing several write calls for the same chunk.</p>
<div class="infoboxnotealso" id="GUID-ABB71585-172E-4F3E-A0CF-F70D709F2072__GUID-C88D1308-4E54-4816-82E4-A73501E10E33">
<p class="notep1">See Also:</p>
<p><a href="oci07lob.htm#GUID-8C5ABC9E-3048-49AE-BFE3-DB4CB1A63AB3" title="How to improve LOB Read/Write performance.">About Improving LOB Read/Write Performance</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17198"></a>
<div class="props_rev_3"><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD"></a>
<h2 id="LNOCI-GUID-D62200EF-FA60-4788-950F-0C0686D807FD" class="sect2">OCILobGetContentType()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the user-specified content type string for the data in a SecureFile, if set.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobGetContentType ( OCIEnv         *envhp, 
                             OCISvcCtx      *svchp,  
                             OCIError       *errhp, 
                             OCILobLocator  *lobp, 
                             oratext        *contenttypep, 
                             ub4            *contenttypelenp,
                             ub4            mode );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74563"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-E726CFE5-A9F0-4EF9-867D-CCF82322CE9E"><!-- --></a>envhp (IN)</dt>
<dd>
<p>The environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74564"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-C99E57FD-E282-4BA9-8561-8037790A2816"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74565"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-AA794D69-B82A-42B3-BE15-805F80F57350"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that can be passed to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74566"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-D3D967CF-D721-43EA-93C6-1D72F3A060AF"><!-- --></a>lobp (IN)</dt>
<dd>
<p>A LOB locator that uniquely references a LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74567"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-356262E1-E781-4A2D-A16A-D8D71C9A5914"><!-- --></a>contenttypep (IN/OUT)</dt>
<dd>
<p>Pointer to the buffer where the content type is stored after successful execution. You must allocate the buffer before calling this function. The size of the allocated buffer must be <code class="codeph">&gt;= OCI_LOB_CONTENTTYPE_MAXSIZE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74568"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-B49A7353-D171-40D2-AF5C-664B99336B27"><!-- --></a>contenttypelenp (IN/OUT)</dt>
<dd>
<p>Set this field to the size of <code class="codeph">contenttypep</code> buffer. After the call successfully executes, this field holds the size of the <code class="codeph">contenttypep</code> returned.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74569"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D62200EF-FA60-4788-950F-0C0686D807FD__GUID-76C6E6D5-0713-43A5-9940-45CB69EA34D5"><!-- --></a>mode (IN)</dt>
<dd>
<p>For future use. Pass zero now.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function only works on SecureFiles. If <code class="codeph">lobp</code> is not a SecureFile, then the error <code class="codeph">SECUREFILE_WRONGTYPE</code> is returned. If <code class="codeph">lobp</code> is buffered, a temporary LOB, or an abstract LOB, then the error <code class="codeph">SECUREFILE_BADLOB</code> is returned.</p>
<p>If the SecureFile does not have a <code class="codeph">contenttype</code> associated with it, the <code class="codeph">contenttype</code> length (<code class="codeph">contenttypelenp</code>) is returned as 0 without modifying the buffer <code class="codeph">contenttypep</code>.</p>
<p>The maximum possible size of the <code class="codeph">ContentType</code> string is defined as:</p>
<pre dir="ltr">#define OCI_LOB_CONTENTTYPE_MAXSIZE 128
</pre>
<p>The <code class="codeph">ContentType</code> is ASCII (that is, 1-byte/7-bit UTF8).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-789C0971-76D5-4439-9379-E3DCE7885528">OCILobSetContentType()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17200"></a>
<div class="props_rev_3"><a id="GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C"></a>
<h2 id="LNOCI-GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C" class="sect2">OCILobGetLength2()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the length of a LOB. This function must be used for LOBs of size greater than 4 GB. You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobGetLength2 ( OCISvcCtx      *svchp,
                         OCIError       *errhp,
                         OCILobLocator  *locp,
                         oraub8         *lenp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74570"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C__GUID-0D737A6A-8823-492D-933A-5921729B433F"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74571"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C__GUID-F064C54C-B54F-49BD-BAAA-4482721AD9FD"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74572"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C__GUID-12880DDB-B901-4687-B110-4B5E0895400B"><!-- --></a><span class="bold">locp</span> (IN)</dt>
<dd>
<p>A LOB locator that uniquely references the LOB. For internal LOBs, this locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>. For <code class="codeph">BFILE</code>s, the locator can be set by <a href="oci17msc002.htm#GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C" title="Sets the directory object and file name in the BFILE locator.">OCILobFileSetName()</a>, by a <code class="codeph">SELECT</code> statement, or by <a href="oci18nav005.htm#GUID-89F29585-2F16-4FA3-B1E0-BDD83707CA62" title="Pins a referenceable object.">OCIObjectPin()</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74573"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C__GUID-A71E9B5D-803A-4497-B704-DEF586DE8F7C"><!-- --></a><span class="bold">lenp</span> (OUT)</dt>
<dd>
<p>On output, it is the length of the LOB if the LOB is not <code class="codeph">NULL</code>. For character LOBs, it is the number of characters; for binary LOBs and <code class="codeph">BFILE</code>s, it is the number of bytes in the LOB.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Gets the length of a LOB. If the LOB is <code class="codeph">NULL</code>, the length is undefined. The length of a <code class="codeph">BFILE</code> includes the EOF, if it exists. The length of an empty internal LOB is zero.</p>
<p>Regardless of whether the client-side character set is varying-width, the output length is in characters for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, and in bytes for <code class="codeph">BLOB</code>s and <code class="codeph">BFILE</code>s.</p>
<div class="infobox-note" id="GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C__GUID-74E32597-64F1-4DCF-A75E-122B86B38D3E">
<p class="notep1">Note:</p>
<p>Any zero-byte or space fillers in the LOB written by previous calls to <code class="codeph">OCILobErase2()</code> or <code class="codeph">OCILobWrite2()</code> are also included in the length count.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C" title="Sets the directory object and file name in the BFILE locator.">OCILobFileSetName()</a>, <a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a>, <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="oci17msc002.htm#GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4">OCILobLoadFromFile2()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17201"></a>
<div class="props_rev_3"><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5"></a>
<h2 id="LNOCI-GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5" class="sect2">OCILobGetOptions()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Obtains the enabled settings corresponding to the given input option types for a given <span>SecureFile</span> LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobGetOptions ( OCISvcCtx         *svchp,
                         OCIError          *errhp,
                         OCILobLocator     *locp,
                         ub4               option_types,
                         void              *optionsp,
                         ub4               optionslenp,
                         ub4               mode );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74574"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-DA0C11EB-3020-4CA1-B3B8-4FB532806AC9"><!-- --></a>svchp (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74575"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-02586A22-B2D6-430C-836C-A250CCB5F097"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74576"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-283EF787-0D98-4CA1-AA43-AA1F4FC787DD"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>The LOB locator or <code class="codeph">BFILE</code> locator that uniquely references the LOB or <code class="codeph">BFILE</code>. This locator must have been obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74577"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-A351958E-DBBF-4097-A870-BC95DCD3D2BD"><!-- --></a>option_types (IN)</dt>
<dd>
<p>The given option types that can be combined by a bit-wise inclusive <code class="codeph">OR</code> (symbol &#34;|&#34;):</p>
<ul style="list-style-type: disc;">
<li>
<p>Compression - <code class="codeph">OCI_LOB_OPT_COMPRESS</code></p>
</li>
<li>
<p>Encryption - <code class="codeph">OCI_LOB_OPT_ENCRYPT</code></p>
</li>
<li>
<p>Deduplication - <code class="codeph">OCI_LOB_OPT_DEDUPLICATE</code></p>
</li>
</ul>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74578"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-C5C8A7F7-D46B-46D3-AD6D-8B33179FCD50"><!-- --></a>optionsp (OUT)</dt>
<dd>
<p>The current settings for each of the option types given. Possible values are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_LOB_OPT_COMPRESS_ON</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_OPT_ENCRYPT_ON</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_OPT_DEDUPLICATE_ON</code></p>
</li>
</ul>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74579"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-B349351D-CD52-4D2F-8304-78B83014858B"><!-- --></a>optionslenp (OUT)</dt>
<dd>
<p>The length of the value in <code class="codeph">optionsp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74580"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5__GUID-AEB4EF31-AC27-409C-BEEF-54A32F5718C7"><!-- --></a>mode (IN)</dt>
<dd>
<p>Reserved for future use. Pass in 0.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>You can only specify option types that have been enabled on the column. An error is returned when an attempt is made to get the value of an option type that is not enabled on the column. For example, if you have a LOB column with compression enabled, and you call <code class="codeph">OCILobGetOptions()</code> with <code class="codeph">OCI_LOB_OPT_ENCRYPT</code> set in the <code class="codeph">option_types</code> parameter, an error occurs.</p>
<p>Note that the returned value is a <code class="codeph">ub4</code> pointer cast as a <code class="codeph">void</code> pointer to allow for future expansion of option types and values. The <code class="codeph">optionslenp</code> returned should be equal to <code class="codeph">sizeof(ub4)</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26">OCILobSetOptions()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17203"></a>
<div class="props_rev_3"><a id="GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27"></a>
<h2 id="LNOCI-GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27" class="sect2">OCILobGetStorageLimit()</h2>
<div>
<p>Gets the maximum length of an internal LOB (<code class="codeph">BLOB</code>, <code class="codeph">CLOB</code>, or <code class="codeph">NCLOB</code>) in bytes.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the maximum length of an internal LOB (<code class="codeph">BLOB</code>, <code class="codeph">CLOB</code>, or <code class="codeph">NCLOB</code>) in bytes.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobGetStorageLimit ( OCISvcCtx      *svchp,
                              OCIError       *errhp,
                              OCILobLocator  *locp,
                              oraub8         *limitp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74581"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27__GUID-EFBD3A63-B00E-44EB-A6C0-D1077FDD4B45"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74582"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27__GUID-B25462BF-7CC0-44BE-9EFF-92CF076904B4"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74583"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27__GUID-C57A1467-9572-42A3-8A5C-95C1CF34E534"><!-- --></a>locp (IN)</dt>
<dd>
<p>A LOB locator that uniquely references the LOB. The locator must have been one that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74584"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CBDB3C7-8A27-4A82-8C46-698B83C45A27__GUID-AC8AA520-010C-4089-B0A1-BFDA27D62A31"><!-- --></a>limitp (OUT)</dt>
<dd>
<p>The maximum length of the LOB (in bytes) that can be stored in the database.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Because block size ranges from 2 KB to 32 KB, the maximum LOB size ranges from 8 terabytes to 128 terabytes (TB) for LOBs.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17204"></a>
<div class="props_rev_3"><a id="GUID-5142710F-03AD-43D5-BBAB-6732B874E52E"></a>
<h2 id="LNOCI-GUID-5142710F-03AD-43D5-BBAB-6732B874E52E" class="sect2">OCILobIsEqual()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Compares two LOB or <code class="codeph">BFILE</code> locators for equality.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobIsEqual ( OCIEnv                  *envhp,
                      const OCILobLocator     *x,
                      const OCILobLocator     *y,
                      boolean                 *is_equal );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74585"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5142710F-03AD-43D5-BBAB-6732B874E52E__GUID-F71C54E8-61EF-4462-8D71-37C6DEFD9069"><!-- --></a>envhp (IN)</dt>
<dd>
<p>The OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74586"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5142710F-03AD-43D5-BBAB-6732B874E52E__GUID-54760A7B-A898-48FE-AE45-B4329621A695"><!-- --></a>x (IN)</dt>
<dd>
<p>LOB locator to compare.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74587"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5142710F-03AD-43D5-BBAB-6732B874E52E__GUID-FE05BB1B-12D0-4031-ABFD-3DF5D39C3E92"><!-- --></a>y (IN)</dt>
<dd>
<p>LOB locator to compare.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74588"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-5142710F-03AD-43D5-BBAB-6732B874E52E__GUID-A4DACC53-E5A8-4FC8-AB64-56B0F313B391"><!-- --></a>is_equal (OUT)</dt>
<dd>
<p><code class="codeph">TRUE</code>, if the LOB locators are equal; <code class="codeph">FALSE</code> if they are not.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Compares the given LOB or <code class="codeph">BFILE</code> locators for equality. Two LOB or <code class="codeph">BFILE</code> locators are equal if and only if they both refer to the same LOB or <code class="codeph">BFILE</code> value.</p>
<p>Two <code class="codeph">NULL</code> locators are considered <span class="italic">not</span> equal by this function.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC">OCILobAssign()</a>, <a href="oci17msc002.htm#GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" title="Tests to see if a given LOB or BFILE locator is initialized.">OCILobLocatorIsInit()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17205"></a>
<div class="props_rev_3"><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E"></a>
<h2 id="LNOCI-GUID-FFF883CE-3B99-4319-A81C-A11F8740209E" class="sect2">OCILobIsOpen()</h2>
<div>
<p>Tests whether a LOB or <code class="codeph">BFILE</code> is open.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Tests whether a LOB or <code class="codeph">BFILE</code> is open.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobIsOpen ( OCISvcCtx        *svchp,
                     OCIError         *errhp, 
                     OCILobLocator    *locp, 
                     boolean          *flag );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74589"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E__GUID-79F4AD34-E05A-43C8-BEAC-DDCC9E31CDA3"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74590"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E__GUID-F4CBD8C9-06BA-4D30-97B0-2D2B14A897B6"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that can be passed to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74591"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E__GUID-707D584B-1513-43D9-A94D-A01DE0D6D495"><!-- --></a>locp (IN)</dt>
<dd>
<p>Pointer to the LOB locator being examined. The locator can refer to an internal or external LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74592"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E__GUID-01F6672D-1FC8-436D-956A-3512DED10E99"><!-- --></a>flag (OUT)</dt>
<dd>
<p>Returns <code class="codeph">TRUE</code> if the internal LOB is open or if the <code class="codeph">BFILE</code> was opened using the input locator. Returns <code class="codeph">FALSE</code> if it was not.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Checks to see if the internal LOB is open or if the <code class="codeph">BFILE</code> was opened using the input locator.</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74593"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E__GUID-59D32D60-2771-44FD-840D-169E416F4F68"><!-- --></a>For BFILEs</dt>
<dd>
<p>If the input <code class="codeph">BFILE</code> locator was never passed to <code class="codeph">OCILobOpen()</code> or <code class="codeph">OCILobFileOpen()</code>, the <code class="codeph">BFILE</code> is considered not to be opened by this <code class="codeph">BFILE</code> locator. However, a different <code class="codeph">BFILE</code> locator may have opened the <code class="codeph">BFILE</code>. Multiple opens can be performed on the same <code class="codeph">BFILE</code> using different locators. In other words, openness is associated with a specific locator for <code class="codeph">BFILEs</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74594"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FFF883CE-3B99-4319-A81C-A11F8740209E__GUID-993AF0BD-0B34-46B7-BD55-C4C4F8C63604"><!-- --></a>For internal LOBs</dt>
<dd>
<p>Openness is associated with the LOB, not with the locator. If <code class="codeph">locator1</code> opened the LOB, then <code class="codeph">locator2</code> also sees the LOB as open.</p>
<p>For internal LOBs, this call requires a server round-trip because it checks the state on the server to see if the LOB is open. For external LOBs (<code class="codeph">BFILEs</code>), this call also requires a round-trip because the operating system file on the server side must be checked to see if it is open.</p>
</dd>
</dl>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17206"></a>
<div class="props_rev_3"><a id="GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3"></a>
<h2 id="LNOCI-GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3" class="sect2">OCILobIsTemporary()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Tests if a locator points to a temporary LOB</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobIsTemporary(OCIEnv            *envhp,
                        OCIError          *errhp,
                        OCILobLocator     *locp,
                        boolean           *is_temporary);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74595"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3__GUID-BB7FD1B4-C4F1-4357-A21A-A1392FE9F3AC"><!-- --></a>envhp (IN)</dt>
<dd>
<p>The OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74596"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3__GUID-AF4AD03A-98EB-48E5-AC4F-F27E83B950E9"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74597"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3__GUID-4D57E57F-735C-4A37-841D-07399610AAA5"><!-- --></a>locp (IN)</dt>
<dd>
<p>The locator to test.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74598"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-071D8134-F9E7-4C5A-8E63-E90831FA7AC3__GUID-AB0689DF-9A47-4EDE-B17B-8F66DECB7749"><!-- --></a>is_temporary (OUT)</dt>
<dd>
<p>Returns <code class="codeph">TRUE</code> if the LOB locator points to a temporary LOB; <code class="codeph">FALSE</code> if it does not.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function tests a locator to determine if it points to a temporary LOB. If so, <code class="codeph">is_temporary</code> is set to <code class="codeph">TRUE</code>. If not, <code class="codeph">is_temporary</code> is set to <code class="codeph">FALSE</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-63F75EC5-EB14-4E25-B593-270FF814615A" title="Creates a temporary LOB.">OCILobCreateTemporary()</a>, <a href="oci17msc002.htm#GUID-E0FBF017-1B08-410C-9E53-F6E14008813A">OCILobFreeTemporary()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17208"></a>
<div class="props_rev_3"><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4"></a>
<h2 id="LNOCI-GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4" class="sect2">OCILobLoadFromFile2()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Loads and copies all or a portion of the file into an internal LOB. This function must be used for LOBs of size greater than 4 GB. You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobLoadFromFile2 ( OCISvcCtx        *svchp, 
                            OCIError         *errhp, 
                            OCILobLocator    *dst_locp, 
                            OCILobLocator    *src_locp, 
                            oraub8           amount, 
                            oraub8           dst_offset, 
                            oraub8           src_offset ); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74599"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-5DD9818D-1FF5-4E3A-987C-40F6CA1B1C53"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74600"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-2416583D-AE87-487F-BCBD-72BFAEF09421"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74601"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-10FD0C3E-6F8E-4641-A7D9-673EAA407DB6"><!-- --></a>dst_locp (IN/OUT)</dt>
<dd>
<p>A locator uniquely referencing the destination internal LOB, that may be of type <code class="codeph">BLOB</code>, <code class="codeph">CLOB</code>, or <code class="codeph">NCLOB</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74602"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-917663D7-8D76-4A22-894E-BA2CF9BF5B02"><!-- --></a>src_locp (IN/OUT)</dt>
<dd>
<p>A locator uniquely referencing the source <code class="codeph">BFILE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74603"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-79B7ABDE-D3A0-4D75-B38F-D4B7EF7E75D5"><!-- --></a>amount (IN)</dt>
<dd>
<p>The number of bytes to be loaded.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74604"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-1F259067-B673-4E9E-AE68-2BC43C0233EC"><!-- --></a>dst_offset (IN)</dt>
<dd>
<p>This is the absolute offset for the destination LOB. For character LOBs, it is the number of characters from the beginning of the LOB at which to begin writing. For binary LOBs, it is the number of bytes from the beginning of the LOB from which to begin reading. The offset starts at 1.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74605"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4__GUID-99A7E031-26B1-4BFA-8883-8C514E823601"><!-- --></a>src_offset (IN)</dt>
<dd>
<p>This is the absolute offset for the source <code class="codeph">BFILE</code>. It is the number of bytes from the beginning of the <code class="codeph">BFILE</code>. The offset starts at 1.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Loads and copies a portion or all of a <code class="codeph">BFILE</code> value into an internal LOB as specified. The data is copied from the source <code class="codeph">BFILE</code> to the destination internal LOB (<code class="codeph">BLOB</code> or <code class="codeph">CLOB</code>). No character set conversions are performed when copying the <code class="codeph">BFILE</code> data to a <code class="codeph">CLOB</code> or <code class="codeph">NCLOB</code>. Also, when binary data is loaded into a <code class="codeph">BLOB</code>, no character set conversions are performed. Therefore, the <code class="codeph">BFILE</code> data must be in the same character set as the LOB in the database. No error checking is performed to verify this.</p>
<p>The source (<code class="codeph">src_locp</code>) and the destination (<code class="codeph">dst_locp</code>) LOBs must exist. If the data exists at the destination&#39;s start position, it is overwritten with the source data. If the destination&#39;s start position is beyond the end of the current data, zero-byte fillers (for <code class="codeph">BLOB</code>s) or spaces (for <code class="codeph">CLOB</code>s) are written into the destination LOB from the end of the data to the beginning of the newly written data from the source. The destination LOB is extended to accommodate the newly written data if it extends beyond the current length of the destination LOB.</p>
<p>It is an error to extend the destination LOB beyond the maximum length allowed (4 gigabytes) (see <a href="oci17msc002.htm#GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4">OCILobLoadFromFile2()</a> to use for LOBs of size greater than 4 GB) or to try to copy from a NULL <code class="codeph">BFILE</code>.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="oci17msc002.htm#GUID-ABDB1543-1782-4216-AD80-55FA82CFF733">OCILobTrim2()</a>, <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc002.htm#GUID-9BC0A78A-37CB-432F-AE2B-22C905608C4C">OCILobGetLength2()</a>, <a href="oci17msc002.htm#GUID-DA1CD18B-7044-4E40-B1F4-4FCC1FCAB6C4">OCILobLoadFromFile2()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17209"></a>
<div class="props_rev_3"><a id="GUID-F7887376-4B3C-430C-94A3-11FE96E26627"></a>
<h2 id="LNOCI-GUID-F7887376-4B3C-430C-94A3-11FE96E26627" class="sect2">OCILobLocatorAssign()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Assigns one LOB or <code class="codeph">BFILE</code> locator to another.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobLocatorAssign ( OCISvcCtx            *svchp,
                            OCIError             *errhp,
                            const OCILobLocator  *src_locp,
                            OCILobLocator         **dst_locpp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74606"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F7887376-4B3C-430C-94A3-11FE96E26627__GUID-BA03ECFC-A293-46BC-9886-1D4A35FE7BCB"><!-- --></a>svchp (IN/OUT)</dt>
<dd>
<p>The OCI service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74607"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F7887376-4B3C-430C-94A3-11FE96E26627__GUID-468510A4-1076-4662-AF77-6D2836126B73"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74608"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F7887376-4B3C-430C-94A3-11FE96E26627__GUID-481F8BB9-4DF0-483F-9ABB-E61C8E8FEE0B"><!-- --></a>src_locp (IN)</dt>
<dd>
<p>The LOB or <code class="codeph">BFILE</code> locator to copy from.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74609"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F7887376-4B3C-430C-94A3-11FE96E26627__GUID-22EABEAA-6DA6-4911-BAE7-5F86559B8095"><!-- --></a>dst_locpp (IN/OUT)</dt>
<dd>
<p>The LOB or <code class="codeph">BFILE</code> locator to copy to. The caller must allocate space for the <code class="codeph">OCILobLocator</code> by calling <a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This call assigns the source locator to the destination locator. After the assignment, both locators refer to the same LOB data. For internal LOBs, the source locator&#39;s LOB data gets copied to the destination locator&#39;s LOB data only when the destination locator gets stored in the table. Therefore, issuing a flush of the object containing the destination locator copies the LOB data. For <code class="codeph">BFILE</code>s, only the locator that refers to the operating system file is copied to the table; the operating system file is not copied.</p>
<p>Note that this call is similar to <a href="oci17msc002.htm#GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC">OCILobAssign()</a>, but <code class="codeph">OCILobLocatorAssign()</code> takes an OCI service handle pointer instead of an OCI environment handle pointer. Also, <code class="codeph">OCILobLocatorAssign()</code> can be used for temporary LOBs, but <a href="oci17msc002.htm#GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC">OCILobAssign()</a> cannot be used for temporary LOBs.</p>
<div class="infobox-note" id="GUID-F7887376-4B3C-430C-94A3-11FE96E26627__GUID-0467982B-4404-4550-B052-51666847BACC">
<p class="notep1">Note:</p>
<p>If the <code class="codeph">OCILobLocatorAssign()</code> function fails, the target locator is not restored to its previous state. The target locator should not be used in subsequent operations unless it is reinitialized.</p>
</div>
<p>If the destination locator is for a temporary LOB, the destination temporary LOB is freed before the source LOB locator is assigned to it.</p>
<p>If the source LOB locator refers to a temporary LOB, the destination is made into a temporary LOB too. The source and the destination are conceptually different temporary LOBs. In the <code class="codeph">OCI_DEFAULT</code> mode, the source temporary LOB is deep copied, and a destination locator is created to refer to the new deep copy of the temporary LOB. Hence <a href="oci17msc002.htm#GUID-5142710F-03AD-43D5-BBAB-6732B874E52E">OCILobIsEqual()</a> returns <code class="codeph">FALSE</code> after the <code class="codeph">OCILobLocatorAssign()</code> call. However, in the <code class="codeph">OCI_OBJECT</code> mode, an optimization is made to minimize the number of deep copies, so the source and destination locators point to the same LOB until any modification is made through either LOB locator. Hence <a href="oci17msc002.htm#GUID-5142710F-03AD-43D5-BBAB-6732B874E52E">OCILobIsEqual()</a> returns <code class="codeph">TRUE</code> right after <code class="codeph">OCILobLocatorAssign()</code> until the first modification. In both these cases, after the <code class="codeph">OCILobLocatorAssign()</code>, any changes to the source or the destination do not reflect in the other (that is, destination or source) LOB. If you want the source and the destination to point to the same LOB and want your changes to reflect in the other, then you must use the equal sign to ensure that the two LOB locator pointers refer to the same LOB locator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-B052C110-D039-44A1-85C6-F5CC7348E2DC">OCILobAssign()</a>, <a href="oci17msc002.htm#GUID-5142710F-03AD-43D5-BBAB-6732B874E52E">OCILobIsEqual()</a>, <a href="oci17msc002.htm#GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" title="Tests to see if a given LOB or BFILE locator is initialized.">OCILobLocatorIsInit()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17210"></a>
<div class="props_rev_3"><a id="GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE"></a>
<h2 id="LNOCI-GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE" class="sect2">OCILobLocatorIsInit()</h2>
<div>
<p>Tests to see if a given LOB or <code class="codeph">BFILE</code> locator is initialized.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Tests to see if a given LOB or <code class="codeph">BFILE</code> locator is initialized.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobLocatorIsInit ( OCIEnv               *envhp,
                            OCIError             *errhp,
                            const OCILobLocator  *locp,
                            boolean              *is_initialized );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74610"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE__GUID-3A7C84F8-8B1D-4DB0-AA3C-EB9DBFD7C2F0"><!-- --></a>envhp (IN/OUT)</dt>
<dd>
<p>OCI environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74611"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE__GUID-87C9D283-411C-4C50-A40D-54AE409556F5"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74612"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE__GUID-1D214448-EF9D-400C-A26A-26860686CF2C"><!-- --></a>locp (IN)</dt>
<dd>
<p>The LOB or <code class="codeph">BFILE</code> locator being tested.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74613"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE__GUID-4F910AB9-C543-42DD-9A66-CD55E9435FB9"><!-- --></a>is_initialized (OUT)</dt>
<dd>
<p>Returns <code class="codeph">TRUE</code> if the given LOB or <code class="codeph">BFILE</code> locator is initialized; returns <code class="codeph">FALSE</code> if it is not.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Tests to see if a given LOB or <code class="codeph">BFILE</code> locator is initialized.</p>
<p>Internal LOB locators can be initialized by one of these methods:</p>
<ul style="list-style-type: disc;">
<li>
<p>Selecting a non-<code class="codeph">NULL</code> LOB into the locator</p>
</li>
<li>
<p>Pinning an object that contains a non-<code class="codeph">NULL</code> LOB attribute by <code class="codeph">OCIObjectPin()</code></p>
</li>
<li>
<p>Setting the locator to empty by <code class="codeph">OCIAttrSet()</code></p>
<div class="infoboxnotealso" id="GUID-4CA17A83-795F-43B2-8B76-611B13E4C8DE__GUID-C72B799A-2B95-498F-9213-515C7B111102">
<p class="notep1">See Also:</p>
<p><a href="ociaahan.htm#GUID-E3E231A7-00B9-42F0-B47D-A38E3F131A67">LOB Locator Attributes</a></p>
</div>
</li>
</ul>
<p><code class="codeph">BFILE</code> locators can be initialized by one of these methods:</p>
<ul style="list-style-type: disc;">
<li>
<p>Selecting a non-<code class="codeph">NULL</code> <code class="codeph">BFILE</code> into the locator</p>
</li>
<li>
<p>Pinning an object that contains a non-<code class="codeph">NULL</code> <code class="codeph">BFILE</code> attribute by <code class="codeph">OCIObjectPin()</code></p>
</li>
<li>
<p>Calling <a href="oci17msc002.htm#GUID-507AC0EF-4CAB-437E-BB94-1FD77EDC1B5C" title="Sets the directory object and file name in the BFILE locator.">OCILobFileSetName()</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17211"></a>
<div class="props_rev_3"><a id="GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470"></a>
<h2 id="LNOCI-GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470" class="sect2">OCILobOpen()</h2>
<div>
<p>Opens a LOB, internal or external, in the indicated mode.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Opens a LOB, internal or external, in the indicated mode.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobOpen ( OCISvcCtx        *svchp,
                   OCIError         *errhp, 
                   OCILobLocator    *locp, 
                   ub1               mode );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74614"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470__GUID-F34D7B22-8BCB-4153-90EA-EA271650798B"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74615"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470__GUID-0F6FBCC3-6B36-44D7-AAC2-F76EC2A2ED6C"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74616"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470__GUID-1DEADA25-CE33-4794-9DCE-E1AF942095CE"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>The LOB to open. The locator can refer to an internal or external LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74617"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B007A3C7-999B-4AD7-8BF7-C6D14572F470__GUID-AAC42E28-C8CF-414A-8A49-383B2B6516D5"><!-- --></a>mode (IN)</dt>
<dd>
<p>The mode in which to open the LOB or <code class="codeph">BFILE</code>. In Oracle8<span class="italic">i</span> or later, valid modes for LOBs are <code class="codeph">OCI_LOB_READONLY</code> and <code class="codeph">OCI_LOB_READWRITE</code>. Note that <code class="codeph">OCI_FILE_READONLY</code> exists as input to <code class="codeph">OCILobFileOpen()</code>. <code class="codeph">OCI_FILE_READONLY</code> can be used with <code class="codeph">OCILobOpen()</code> if the input locator is for a <code class="codeph">BFILE</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>It is an error to open the same LOB twice. <code class="codeph">BFILE</code>s cannot be opened in read/write mode. If a user tries to write to a LOB or <code class="codeph">BFILE</code> that was opened in read-only mode, an error is returned.</p>
<p>Opening a LOB requires a round-trip to the server for both internal and external LOBs. For internal LOBs, the open triggers other code that relies on the open call. For external LOBs (<code class="codeph">BFILE</code>s), open requires a round-trip because the actual operating system file on the server side is being opened.</p>
<p>It is not necessary to open a LOB to perform operations on it. When using function-based indexes, extensible indexes or context, and making multiple calls to update or write to the LOB, you should first call <code class="codeph">OCILobOpen()</code>, then update the LOB as many times as you want, and finally call <code class="codeph">OCILobClose()</code>. This sequence of operations ensures that the indexes are only updated once at the end of all the write operations instead of once for each write operation.</p>
<p>It is not mandatory that you wrap all LOB operations inside the open and close calls. However, if you open a LOB, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column. It is an error to commit the transaction before closing all opened LOBs that were opened by the transaction.</p>
<p>When the error is returned, the LOB is no longer marked as open, but the transaction is successfully committed. Hence, all the changes made to the LOB and non-LOB data in the transaction are committed, but the domain and function-based indexing are not updated. If this happens, rebuild your functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance, so if you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17214"></a>
<div class="props_rev_3"><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA"></a>
<h2 id="LNOCI-GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" class="sect2">OCILobRead2()</h2>
<div>
<p>Reads a portion of a LOB or <code class="codeph">BFILE</code>, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobRead2 ( OCISvcCtx           *svchp,
                    OCIError            *errhp,
                    OCILobLocator       *locp,
                    oraub8              *byte_amtp,
                    oraub8              *char_amtp,
                    oraub8               offset,
                    void                *bufp,
                    oraub8               bufl,
                    ub1                  piece,
                    void                *ctxp, 
                    OCICallbackLobRead2 (cbfp)
                                        ( void          *ctxp,
                                          const void    *bufp,
                                          oraub8         lenp,
                                          ub1            piecep
                                          void         **changed_bufpp,
                                          oraub8        *changed_lenp
                                        )
                    ub2                  csid,
                    ub1                  csfrm );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74618"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-40C00149-00A0-4153-91A0-76A74003B911"><!-- --></a><span class="bold">svchp</span> (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74619"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-C34C65E6-256B-4CB1-949C-27B9ACC7C09B"><!-- --></a><span class="bold">errhp</span> (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74620"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-3FD289CD-D458-4F05-A8CD-C0D51F1AC221"><!-- --></a><span class="bold">locp</span> (IN)</dt>
<dd>
<p>A LOB or <code class="codeph">BFILE</code> locator that uniquely references the LOB or <code class="codeph">BFILE</code>. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74621"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-F52F0B89-9686-4BF0-947A-B47A7625E942"><!-- --></a><span class="bold">byte_amtp</span> (IN/OUT)</dt>
<dd>
<p>IN - The number of bytes to read from the database. Used for <code class="codeph">BLOB</code> and <code class="codeph">BFILE</code> always. For <code class="codeph">CLOB</code> and <code class="codeph">NCLOB</code>, it is used only when <code class="codeph">char_amtp</code> is zero.</p>
<p>OUT - The number of bytes read into the user buffer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74622"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-39E48457-379F-4B88-AB72-2636CBA9BAF9"><!-- --></a><span class="bold">char_amtp</span> (IN/OUT)</dt>
<dd>
<p>IN - The maximum number of characters to read into the user buffer. Ignored for <code class="codeph">BLOB</code> and <code class="codeph">BFILE</code>.</p>
<p>OUT - The number of characters read into the user buffer. Undefined for <code class="codeph">BLOB</code> and <code class="codeph">BFILE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74623"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-E365EB53-296A-4363-8D84-45346CA415EB"><!-- --></a><span class="bold">offset</span> (IN)</dt>
<dd>
<p>On input, this is the absolute offset from the beginning of the LOB value. For character LOBs (<code class="codeph">CLOB</code>s, <code class="codeph">NCLOB</code>s), it is the number of characters from the beginning of the LOB; for binary LOBs or <code class="codeph">BFILE</code>s, it is the number of bytes. The first position is 1.</p>
<p>If you use streaming (by polling or a callback), specify the offset in the first call; in subsequent polling calls, the offset parameter is ignored. When you use a callback, there is no offset parameter.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74624"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-1D9F0427-192E-4CAC-B0E3-2D49372DC2E5"><!-- --></a><span class="bold">bufp</span> (IN/OUT)</dt>
<dd>
<p>The pointer to a buffer into which the piece is read. The length of the allocated memory is assumed to be <code class="codeph">bufl</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74625"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-41366CEA-374E-40EC-ACB4-CB0B91D08E6A"><!-- --></a><span class="bold">bufl</span> (IN)</dt>
<dd>
<p>The length of the buffer in octets. This value differs from the <code class="codeph">amtp</code> value for <code class="codeph">CLOB</code>s and for <code class="codeph">NCLOB</code>s (<code class="codeph">csfrm</code>=<code class="codeph">SQLCS_NCHAR</code>) when the <code class="codeph">amtp</code> parameter is specified in terms of characters, and the <code class="codeph">bufl</code> parameter is specified in terms of bytes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74626"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-2A17C859-7EC6-4CA1-B319-1E981A6E856E"><!-- --></a><span class="bold">piece</span> (IN)</dt>
<dd>
<p><code class="codeph">OCI_ONE_PIECE</code> - The call never assumes polling. If the amount indicated is more than the buffer length, then the buffer is filled as much as possible.</p>
<p>For polling, pass <code class="codeph">OCI_FIRST_PIECE</code> the first time and <code class="codeph">OCI_NEXT_PIECE</code> in subsequent calls. <code class="codeph">OCI_FIRST_PIECE</code> should be passed while using the callback.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74627"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-0D8496F4-3FF4-48FD-831E-2177B925B501"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context pointer for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74628"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-C0DDE29E-9C8A-402B-8ACE-CB0F69BE42A5"><!-- --></a><span class="bold">cbfp</span> (IN)</dt>
<dd>
<p>A callback that can be registered to be called for each piece. If this is <code class="codeph">NULL</code>, then <code class="codeph">OCI_NEED_DATA</code> is returned for each piece.</p>
<p>The callback function must return <code class="codeph">OCI_CONTINUE</code> for the read to continue. If any other error code is returned, the LOB read is terminated.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74629"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-D9A2E5EE-7ADD-4F81-84DE-34FD3972FC78"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74630"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-7BB96A85-400C-46C0-97A9-B8DAA1EA3BF8"><!-- --></a><span class="bold">bufp</span> (IN/OUT)</dt>
<dd>
<p>A buffer pointer for the piece.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74631"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-46871C4B-D06B-472E-BE1D-64851EA93CBB"><!-- --></a><span class="bold">lenp</span> (IN)</dt>
<dd>
<p>The length in bytes of the current piece in <code class="codeph">bufp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74632"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-C2F6DFC1-56B9-4EBA-AAEC-FB322A49489B"><!-- --></a><span class="bold">piecep</span> (IN)</dt>
<dd>
<p>Which piece: <code class="codeph">OCI_FIRST_PIECE</code>, <code class="codeph">OCI_NEXT_PIECE</code>, or <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74633"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-C2960DF2-86DB-4D78-B491-1E5194093D85"><!-- --></a><span class="bold">changed_bufpp</span> (OUT)</dt>
<dd>
<p>The callback function can put the address of a new buffer if it prefers to use a new buffer for the next piece to read. The default old buffer <code class="codeph">bufp</code> is used if this parameter is set to <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74634"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-94955212-670F-4B0F-B90E-A03384C09986"><!-- --></a><span class="bold">changed_lenp</span> (OUT)</dt>
<dd>
<p>Length of the new buffer, if provided.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74635"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-ED6D3582-75B2-4718-8413-A1B15A9263F2"><!-- --></a><span class="bold">csid</span> (IN)</dt>
<dd>
<p>The character set ID of the buffer data. If this value is 0, then <code class="codeph">csid</code> is set to the client&#39;s <code class="codeph">NLS_LANG</code> or <code class="codeph">NLS_CHAR</code> value, depending on the value of <code class="codeph">csfrm</code>. It is never assumed to be the server character set, unless the server and client have the same settings.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74636"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-AC152F41-481A-4C48-97FD-3B75FC82BB02"><!-- --></a><span class="bold">csfrm (IN)</span></dt>
<dd>
<p>The character set form of the buffer data. The <code class="codeph">csfrm</code> parameter must be consistent with the type of the LOB.</p>
<p>The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SQLCS_IMPLICIT</code> - Database character set ID</p>
</li>
<li>
<p><code class="codeph">SQLCS_NCHAR</code> - NCHAR character set ID</p>
</li>
</ul>
<p>The default value is <code class="codeph">SQLCS_IMPLICIT</code>. If <code class="codeph">csfrm</code> is not specified, the default is assumed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Reads a portion of a LOB or <code class="codeph">BFILE</code> as specified by the call into a buffer. It is an error to try to read from a <code class="codeph">NULL</code> LOB or <code class="codeph">BFILE</code>.</p>
<div class="infobox-note" id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-68F65D81-AECB-4FB7-91F6-2B76B0129275">
<p class="notep1">Note:</p>
<p>When you read or write LOBs, specify a character set form (<code class="codeph">csfrm</code>) that matches the form of the locator itself.</p>
</div>
<p>For <code class="codeph">BFILE</code>s, the operating system file must exist on the server, and it must have been opened by <code class="codeph">OCILobFileOpen()</code> or <code class="codeph">OCILobOpen()</code> using the input locator. Oracle Database must have permission to read the operating system file, and the user must have read permission on the directory object.</p>
<p>When you use the polling mode for <code class="codeph">OCILobRead2()</code>, the first call must specify values for <code class="codeph">offset</code> and <code class="codeph">amtp</code>, but on subsequent polling calls to <code class="codeph">OCILobRead2()</code>, you need not specify these values.</p>
<p>If the LOB is a <code class="codeph">BLOB</code>, the <code class="codeph">csid</code> and <code class="codeph">csfrm</code> parameters are ignored.</p>
<div class="infobox-note" id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-8C0591DB-5B32-47EF-A1DD-C8A84CBC3182">
<p class="notep1">Note:</p>
<p>To terminate an <code class="codeph">OCILobRead2()</code> operation and free the statement handle, use the <code class="codeph">OCIBreak()</code> call.</p>
</div>
<p>The following points apply to reading LOB data in streaming mode:</p>
<ul style="list-style-type: disc;">
<li>
<p>When you use polling mode, be sure to specify the <code class="codeph">char_amtp</code> and <code class="codeph">byte_amtp</code> and offset parameters only in the first call to <code class="codeph">OCILobRead2()</code>. On subsequent polling calls these parameters are ignored. If both <code class="codeph">byte_amtp</code> and <code class="codeph">char_amtp</code> are set to point to zero and <code class="codeph">OCI_FIRST_PIECE</code> is passed, then polling mode is assumed and data is read till the end of the LOB. On output, <code class="codeph">byte_amtp</code> gives the number of bytes read in the current piece.</p>
<p>For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">char_amtp</code> gives the number of characters read in the current piece.</p>
<p>For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, if you do not pass <code class="codeph">char_amtp</code>, then <code class="codeph">char_amtp</code> is calculated internally as <code class="codeph">byte_amtp</code>/<code class="codeph">max char width</code>, so if <code class="codeph">max char width</code> is 4, <code class="codeph">char_amtp</code> is calculated as <code class="codeph">byte_amtp</code>/4. Thus, <code class="codeph">OCILobRead2()</code> does not calculate how many bytes are required for each character. Instead, <code class="codeph">OCILobRead2()</code> fetches in the worst case the number of characters that can fit in <code class="codeph">byte_amtp</code>. To fill the buffer, check the <code class="codeph">byte_amtp</code> parameter to see how much of the buffer is filled, then call <code class="codeph">OCILobRead2()</code> again to fetch the remaining bytes.</p>
</li>
<li>
<p>When you use callbacks, the <code class="codeph">len</code> parameter, which is input to the callback, indicates how many bytes are filled in the buffer. Check the <code class="codeph">len</code> parameter during your callback processing, because the entire buffer cannot be filled with data.</p>
</li>
<li>
<p>When you use polling, look at the <code class="codeph">byte_amtp</code> parameter to see how much the buffer is filled for the current piece. For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">char_amtp</code> returns the number of characters read in the buffer as well.</p>
</li>
</ul>
<p>To read data in UTF-16 format, set the <code class="codeph">csid</code> parameter to <code class="codeph">OCI_UTF16ID</code>. If the c<code class="codeph">sid</code> parameter is set, it overrides the <code class="codeph">NLS_LANG</code> environment variable.</p>
<div class="infoboxnotealso" id="GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA__GUID-C69BFABE-974A-4799-90D8-44C1582DB20A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci05bnd.htm#GUID-5495CEEB-17D0-4185-8879-3356A21E7888">PL/SQL REF CURSORs and Nested Tables in OCI</a> for additional information about Unicode format</p>
</li>
<li>
<p><a class="olink ADLOB012" target="_blank" href="../ADLOB/adlob_bfile_ops.htm#ADLOB012"><span><cite>Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</cite></span></a> for a description of <code class="codeph">BFILE</code>s</p>
</li>
<li>
<p>The demonstration programs included with your Oracle Database installation for a code sample showing the use of LOB reads and writes.</p>
</li>
<li>
<p><a href="ociabdem.htm#GUID-75E18629-0C54-4495-A747-AFB346034F26" title="Lists example programs with sample code demonstrating the allocation and use of OCI handles.">OCI Demonstration Programs</a></p>
</li>
<li>
<p><a href="oci05bnd.htm#GUID-6C5EA0C6-0C1D-4CD5-B47F-1B95B4E9C558" title="You can use OCI to perform piecewise inserts, updates, and fetches of data.">Runtime Data Allocation and Piecewise Operations in OCI</a> for general information about piecewise OCI operations</p>
</li>
<li>
<p><a href="oci02bas.htm#GUID-83F4D3B1-56A7-4EEE-A905-BB84D399713D">Polling Mode Operations in OCI</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17215"></a>
<div class="props_rev_3"><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528"></a>
<h2 id="LNOCI-GUID-789C0971-76D5-4439-9379-E3DCE7885528" class="sect2">OCILobSetContentType()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Sets a content type string for the data in the SecureFile to something that can be used by an application.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobSetContentType ( OCIEnv        *envhp, 
                             OCISvcCtx     *svchp, 
                             OCIError      *errhp, 
                             OCILobLocator *lobp, 
                             const oratext *contenttypep, 
                             ub4           contenttypelen,
                             ub4           mode);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74637"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-2D9A23CD-5412-4610-960A-43EE9679B52C"><!-- --></a>envhp (IN)</dt>
<dd>
<p>The environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74638"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-B7C5AB93-1213-416C-A796-E20ED2085B97"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74639"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-1A2AF403-06EA-4B93-8259-E2AA573CC3FC"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that can be passed to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74640"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-934FC9AA-356B-46D5-BC3D-C12043A8C1E9"><!-- --></a>lobp (IN)</dt>
<dd>
<p>A LOB locator that uniquely references a LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74641"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-F4B6C359-CF04-4BFE-B684-EFF5A4F46F4D"><!-- --></a>contenttypep (IN)</dt>
<dd>
<p>The <code class="codeph">contenttype</code> to be set for the given LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74642"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-8F32DC8A-C517-4EA7-8FCE-D22A16AFE3C4"><!-- --></a>contenttypelen (IN)</dt>
<dd>
<p>The size of <code class="codeph">contenttype</code> in bytes. The size must be less than or equal to <code class="codeph">OCI_LOB_CONTENTTYPE_MAXSIZE</code> bytes.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74643"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-789C0971-76D5-4439-9379-E3DCE7885528__GUID-7CEEC09B-7A92-437D-B672-8191933ADBEE"><!-- --></a>mode (IN)</dt>
<dd>
<p>For future use. Pass zero now.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function only works on SecureFiles. If <code class="codeph">lobp</code> is not a SecureFile, then the error <code class="codeph">SECUREFILE_WRONGTYPE</code> is returned. If <code class="codeph">lobp</code> is buffered, a temporary LOB, or an abstract LOB, then the error <code class="codeph">SECUREFILE_BADLOB</code> is returned.</p>
<p>The maximum possible size of the <code class="codeph">ContentType</code> string is defined as:</p>
<pre dir="ltr">#define OCI_LOB_CONTENTTYPE_MAXSIZE 128
</pre>
<p>The <code class="codeph">ContentType</code> is ASCII (that is, 1-byte/7-bit UTF8).</p>
<p>To clear an existing <code class="codeph">contenttype</code> set on a SecureFile, invoke <code class="codeph">OCILobSetContentType()</code> with <code class="codeph">contenttypep</code> set to (<code class="codeph">oratext *)0</code> and <code class="codeph">contenttypelen</code> set to <code class="codeph">0</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-D62200EF-FA60-4788-950F-0C0686D807FD">OCILobGetContentType()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17216"></a>
<div class="props_rev_3"><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26"></a>
<h2 id="LNOCI-GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26" class="sect2">OCILobSetOptions()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Enables option settings for a <span>SecureFile</span> LOB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobSetOptions ( OCISvcCtx       *svchp,
                         OCIError        *errhp,
                         OCILobLocator   *locp,
                         ub4             option_types,
                         void            *optionsp,
                         ub4             optionslen,
                         ub4             mode );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74644"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-0EE2266F-29E7-4885-AE31-5F3519DA230F"><!-- --></a>svchp (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74645"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-E145443C-A9FC-44FB-819B-005272FD2C67"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74646"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-69C2B901-D008-4A39-B0E4-2761D0F7B14D"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>The LOB locator that uniquely references the LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74647"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-530AC5D6-9624-420F-BC0C-13F72CD07B78"><!-- --></a>option_types (IN)</dt>
<dd>
<p>You can specify multiple option types and values by using the bit-wise inclusive OR (&#34;|&#34;). An error results if you specify an <code class="codeph">option_types</code> value that is not enabled on the LOB column.</p>
<ul style="list-style-type: disc;">
<li>
<p>Compression &mdash;<code class="codeph">OCI_LOB_OPT_COMPRESS</code></p>
</li>
<li>
<p>Encryption &mdash; <code class="codeph">OCI_LOB_OPT_ENCRYPT</code></p>
</li>
<li>
<p>Deduplication &mdash;<code class="codeph">OCI_LOB_OPT_DEDUPLICATE</code></p>
</li>
<li>
<p>Allocation size &mdash; <code class="codeph">OCI_LOB_OPT_ALLOCSIZE</code></p>
</li>
<li>
<p>Content type &mdash; <code class="codeph">OCI_LOB_OPT_CONTENTTYPE</code></p>
</li>
<li>
<p>Modification time &mdash; <code class="codeph">OCI_LOB_OPT_MODTIME</code></p>
</li>
</ul>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74648"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-1E55119F-D3A2-4420-9333-2CA9065F782A"><!-- --></a>optionsp (IN)</dt>
<dd>
<p>The possible settings are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_LOB_OPT_COMPRESS_OFF</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_OPT_COMPRESS_ON</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_ENCRYPT_OFF</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_ENCRYPT_ON</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_OPT_DEDUPLICATE_OFF</code></p>
</li>
<li>
<p><code class="codeph">OCI_LOB_OPT_DEDUPLICATE_ON</code></p>
</li>
</ul>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74649"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-26D9CAD6-8718-49FA-9A81-3F212E49F1F1"><!-- --></a>optionslen (IN)</dt>
<dd>
<p>The length of the value in <code class="codeph">optionsp</code>. Note that the only valid length at this time is <code class="codeph">sizeof(ub4)</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74650"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A6CCDD69-980B-423A-B6B4-BF75B8DBCC26__GUID-06B4391F-DA21-4470-9F91-A0D110D4F718"><!-- --></a>mode (IN)</dt>
<dd>
<p>Reserved for future use. Pass in 0.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc002.htm#GUID-E989E74D-F00C-476A-A8A5-D8E84F83F2F5">OCILobGetOptions()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17218"></a>
<div class="props_rev_3"><a id="GUID-ABDB1543-1782-4216-AD80-55FA82CFF733"></a>
<h2 id="LNOCI-GUID-ABDB1543-1782-4216-AD80-55FA82CFF733" class="sect2">OCILobTrim2()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Truncates the LOB value to a shorter length. This function must be used for LOBs of size greater than 4 GB. You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobTrim2 ( OCISvcCtx       *svchp,
                    OCIError        *errhp,
                    OCILobLocator   *locp,
                    oraub8          newlen );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74651"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABDB1543-1782-4216-AD80-55FA82CFF733__GUID-021633D0-5408-49F0-89C7-049E40483C97"><!-- --></a><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74652"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABDB1543-1782-4216-AD80-55FA82CFF733__GUID-F999AFFB-C96C-42BE-BC72-056D55C5FAFB"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74653"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABDB1543-1782-4216-AD80-55FA82CFF733__GUID-5F51A442-E5CA-46B0-AA39-6B4050D00448"><!-- --></a><span class="bold">locp</span> (IN/OUT)</dt>
<dd>
<p>An internal LOB locator that uniquely references the LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74654"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ABDB1543-1782-4216-AD80-55FA82CFF733__GUID-03505F63-7D6D-4E18-9E55-DDD12BFB661D"><!-- --></a><span class="bold">newlen</span> (IN)</dt>
<dd>
<p>The new length of the LOB value, which must be less than or equal to the current length. For character LOBs, it is the number of characters; for binary LOBs and <code class="codeph">BFILE</code>s, it is the number of bytes in the LOB.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This function trims the LOB data to a specified shorter length. The function returns an error if <code class="codeph">newlen</code> is greater than the current LOB length. This function is valid only for internal LOBs. <code class="codeph">BFILE</code>s are not allowed.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci17msc007.htm#GUID-4B99087C-74F6-498A-8310-D6645172390A" title="Returns an error message and an Oracle Database error code.">OCIErrorGet()</a>, <a href="oci17msc002.htm#GUID-6AC6E6DA-236B-4BF9-942F-9FCC4178FEDA" title="Reads a portion of a LOB or BFILE, as specified by the call, into a buffer. This function must be used for LOBs of size greater than 4 GB.">OCILobRead2()</a>, <a href="oci17msc002.htm#GUID-5B43FC88-A649-4764-8C1E-6D792F05F7CE">OCILobAppend()</a>, <a href="oci17msc002.htm#GUID-404C8A50-516F-4DFD-939D-646A232AF7DF">OCILobCopy2()</a>, <a href="oci17msc002.htm#GUID-264797B2-B3EA-4F6D-9A0E-BF8A4DDA13FA">OCILobErase2()</a>, <a href="oci17msc002.htm#GUID-ABDB1543-1782-4216-AD80-55FA82CFF733">OCILobTrim2()</a>, <a href="oci17msc002.htm#GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" title="Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWrite2()</a>, <a href="oci17msc002.htm#GUID-87D3275A-B042-4991-B261-AB531BB83CA2" title="Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.">OCILobWriteAppend2()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17221"></a>
<div class="props_rev_3"><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE"></a>
<h2 id="LNOCI-GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE" class="sect2">OCILobWrite2()</h2>
<div>
<p>Writes a buffer into a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobWrite2 ( OCISvcCtx       *svchp,
                     OCIError        *errhp,
                     OCILobLocator   *locp,
                     oraub8          *byte_amtp,
                     oraub8          *char_amtp,
                     oraub8           offset,
                     void            *bufp, 
                     oraub8           buflen,
                     ub1              piece,
                     void            *ctxp, 
                     OCICallbackLobWrite2 (cbfp)
                                     (
                                       void     *ctxp,
                                       void     *bufp,
                                       oraub8   *lenp,
                                       ub1      *piecep
                                       void    **changed_bufpp,
                                       oraub8   *changed_lenp
                                     ) 
                     ub2              csid,
                     ub1              csfrm );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74655"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-D48E74C9-17FC-4FA1-9B07-F58212409B01"><!-- --></a><span class="bold">svchp</span> (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74656"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-EF59A221-781C-45F8-AFC2-BA6556F0BC3F"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74657"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-02969115-F471-4647-9A99-42AA1D1134E3"><!-- --></a><span class="bold">locp</span> (IN/OUT)</dt>
<dd>
<p>An internal LOB locator that uniquely references the LOB. This locator must have been a locator that was obtained from the server specified by <code class="codeph">svchp</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74658"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-4A2203A3-029E-4AF4-86A4-9DAAA8A3657C"><!-- --></a><span class="bold">byte_amtp</span> (IN/OUT)</dt>
<dd>
<p>IN - The number of bytes to write to the database. Always used for <code class="codeph">BLOB</code>. For <code class="codeph">CLOB</code> and <code class="codeph">NCLOB</code> it is used only when <code class="codeph">char_amtp</code> is zero.</p>
<p>OUT - The number of bytes written to the database. In polling mode, it is the length of the piece, in bytes, just written.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74659"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-B7FBA7C5-9B22-4A74-A8E2-63EDF4BBCCAA"><!-- --></a>char_amtp (IN/OUT)</dt>
<dd>
<p>IN - The maximum number of characters to write to the database. Ignored for <code class="codeph">BLOB</code>.</p>
<p>OUT - The number of characters written to the database. Undefined for <code class="codeph">BLOB</code>. In polling mode, it is the length of the piece, in characters, just written.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74660"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-02598C9A-2861-4F08-8643-B6E62EA877C7"><!-- --></a><span class="bold">offset</span> (IN)</dt>
<dd>
<p>On input, it is the absolute offset from the beginning of the LOB value. For character LOBs, it is the number of characters from the beginning of the LOB; for binary LOBs, it is the number of bytes. The first position is 1.</p>
<p>If you use streaming (by polling or a callback), specify the offset in the first call; in subsequent polling calls, the offset parameter is ignored. When you use a callback, there is no offset parameter.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74661"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-A0037592-AF15-4A1A-899E-26D7B8E0114D"><!-- --></a><span class="bold">bufp</span> (IN)</dt>
<dd>
<p>The pointer to a buffer from which the piece is written. The length of the data in the buffer is assumed to be the value passed in <code class="codeph">buflen</code>. Even if the data is being written in pieces using the polling method, <code class="codeph">bufp</code> must contain the first piece of the LOB when this call is invoked. If a callback is provided, <code class="codeph">bufp</code> must not be used to provide data or an error results.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74662"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-6474528F-ED2C-49A0-99BD-5EAB75C6B11D"><!-- --></a><span class="bold">buflen</span> (IN)</dt>
<dd>
<p>The length, in bytes, of the data in the buffer. This value differs from the <code class="codeph">char_amtp</code> value for <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s when the amount is specified in terms of characters using the <code class="codeph">char_amtp</code> parameter, and the <code class="codeph">buflen</code> parameter is specified in terms of bytes.</p>
<div class="infobox-note" id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-0E7372B0-6B69-421C-A89B-317E01A2AB1B">
<p class="notep1">Note:</p>
<p>This parameter assumes an 8-bit byte. If your operating system uses a longer byte, you must adjust the value of <code class="codeph">buflen</code> accordingly.</p>
</div>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74663"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-B7937983-E92F-450C-BC03-007BE39E1A98"><!-- --></a><span class="bold">piece</span> (IN)</dt>
<dd>
<p>Which piece of the buffer is being written. The default value for this parameter is <code class="codeph">OCI_ONE_PIECE</code>, indicating that the buffer is written in a single piece.</p>
<p>The following other values are also possible for piecewise or callback mode: <code class="codeph">OCI_FIRST_PIECE</code>, <code class="codeph">OCI_NEXT_PIECE</code>, and <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74664"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-DB7B8B47-BAA3-46A9-ACB7-2A6F4E8BE284"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74665"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-9429BDAD-219B-440F-A051-E74DA7F26F71"><!-- --></a><span class="bold">cbfp</span> (IN)</dt>
<dd>
<p>A callback that can be registered to be called for each piece in a piecewise write. If this is <code class="codeph">NULL</code>, the standard polling method is used.</p>
<p>The callback function must return <code class="codeph">OCI_CONTINUE</code> for the write to continue. If any other error code is returned, the LOB write is terminated. The callback takes the following parameters:</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74666"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-F9C7D95D-8E4A-48C3-9C3E-021EDC282951"><!-- --></a><span class="bold">ctxp</span> (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74667"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-41887C26-DBB0-444B-AB60-992786778EE4"><!-- --></a><span class="bold">bufp</span> (IN/OUT)</dt>
<dd>
<p>A buffer pointer for the piece. This is the same as the <code class="codeph">bufp</code> passed as an input to the <code class="codeph">OCILobWrite()</code> routine.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74668"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-065C1A25-0E5D-453D-ABB4-0460737E0C6C"><!-- --></a><span class="bold">lenp</span> (IN/OUT)</dt>
<dd>
<p>The length (in bytes) of the data in the buffer (IN), and the length (in bytes) of the current piece in <code class="codeph">bufp</code> (OUT).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74669"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-E40BC756-73AC-4F91-B273-39D1029FD2BC"><!-- --></a><span class="bold">piecep</span> (OUT)</dt>
<dd>
<p>Which piece: <code class="codeph">OCI_NEXT_PIECE</code> or <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74670"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-FD6AE89B-A9F0-43AD-9529-72C0FA0259C0"><!-- --></a>changed_bufpp (OUT)</dt>
<dd>
<p>The callback function can put the address of a new buffer if it prefers to use a new buffer for next piece to read. The default old buffer <code class="codeph">bufp</code> is used if this parameter is set to <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74671"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-EB5D2DDA-1ACB-4387-85F2-083C3FE94408"><!-- --></a>changed_lenp (OUT)</dt>
<dd>
<p>Length of the new buffer, if provided.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74672"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-595C409D-AA9E-4DB7-97E2-65F4BDD08505"><!-- --></a>csid (IN)</dt>
<dd>
<p>The character set ID of the data in the buffer. If this value is 0, then <code class="codeph">csid</code> is set to the client&#39;s <code class="codeph">NLS_LANG</code> or <code class="codeph">NLS_CHAR</code> value, depending on the value of <code class="codeph">csfrm</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74673"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-785DB159-A566-4D75-A65B-185490F0C541"><!-- --></a>csfrm (IN)</dt>
<dd>
<p>The character set form of the buffer data. The <code class="codeph">csfrm</code> parameter must be consistent with the type of the LOB.</p>
<p>The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SQLCS_IMPLICIT</code> - Database character set ID</p>
</li>
<li>
<p><code class="codeph">SQLCS_NCHAR</code> - NCHAR character set ID</p>
</li>
</ul>
<p>The default value is <code class="codeph">SQLCS_IMPLICIT</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Writes a buffer into an internal LOB as specified. If LOB data exists, it is overwritten with the data stored in the buffer. The buffer can be written to the LOB in a single piece with this call, or it can be provided piecewise using callbacks or a standard polling method.</p>
<div class="infobox-note" id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-32EA906C-35AB-4F2C-A0A7-8C4E72093FB6">
<p class="notep1">Note:</p>
<p>When you read or write LOBs, specify a character set form (<code class="codeph">csfrm</code>) that matches the form of the locator itself.</p>
</div>
<p>When you use the polling mode for <code class="codeph">OCILobWrite2()</code>, the first call must specify values for <code class="codeph">offset</code>, <code class="codeph">byte_amtp</code>, and <code class="codeph">char_amtp</code>, but on subsequent polling calls to <code class="codeph">OCILobWrite2()</code>, you need not specify these values.</p>
<p>If the value of the <code class="codeph">piece</code> parameter is <code class="codeph">OCI_FIRST_PIECE</code>, data may need to be provided through callbacks or polling.</p>
<p>If a callback function is defined in the <code class="codeph">cbfp</code> parameter, then this callback function is invoked to get the next piece after a piece is written to the pipe. Each piece is written from <code class="codeph">bufp</code>. If no callback function is defined, then <code class="codeph">OCILobWrite2()</code> returns the <code class="codeph">OCI_NEED_DATA</code> error code. The application must call <code class="codeph">OCILobWrite2()</code> again to write more pieces of the LOB. In this mode, the buffer pointer and the length can be different in each call if the pieces are of different sizes and from different locations.</p>
<p>A <code class="codeph">piece</code> value of <code class="codeph">OCI_LAST_PIECE</code> terminates the piecewise write, regardless of whether the polling or callback method is used.</p>
<p>If the amount of data passed to the database (through either input mechanism) is less than the amount specified by the <code class="codeph">byte_amtp</code> or the <code class="codeph">char_amtp</code> parameter, an ORA-22993 error is returned.</p>
<p>This function is valid for internal LOBs only. <code class="codeph">BFILE</code>s are not allowed, because they are read-only. If the LOB is a <code class="codeph">BLOB</code>, the <code class="codeph">csid</code> and <code class="codeph">csfrm</code> parameters are ignored.</p>
<p>If both <code class="codeph">byte_amtp</code> and <code class="codeph">char_amtp</code> are set to point to zero amount, and <code class="codeph">OCI_FIRST_PIECE</code> is given as input, then polling mode is assumed and data is written until you specify <code class="codeph">OCI_LAST_PIECE</code>. For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">byte_amtp</code> and <code class="codeph">char_amtp</code> return the data written by each piece in terms of number of bytes and number of characters respectively. For <code class="codeph">BLOB</code>s, <code class="codeph">byte_amtp</code> returns the number of bytes written by each piece, whereas <code class="codeph">char_amtp</code> is undefined on output.</p>
<p>To write data in UTF-16 format, set the <code class="codeph">csid</code> parameter to <code class="codeph">OCI_UTF16ID</code>. If the <code class="codeph">csid</code> parameter is set, it overrides the <code class="codeph">NLS_LANG</code> environment variable.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
<div class="infoboxnotealso" id="GUID-77F056CA-9EEE-4550-8A8E-0155DF994DBE__GUID-55682921-8212-4BFA-BEF3-1EB7A0F610A6">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci05bnd.htm#GUID-5495CEEB-17D0-4185-8879-3356A21E7888">PL/SQL REF CURSORs and Nested Tables in OCI</a> for additional information about Unicode format</p>
</li>
<li>
<p>The demonstration programs included with your Oracle Database installation for a code sample showing the use of LOB reads and writes.</p>
</li>
<li>
<p><a href="ociabdem.htm#GUID-75E18629-0C54-4495-A747-AFB346034F26" title="Lists example programs with sample code demonstrating the allocation and use of OCI handles.">OCI Demonstration Programs</a></p>
</li>
<li>
<p><a href="oci05bnd.htm#GUID-6C5EA0C6-0C1D-4CD5-B47F-1B95B4E9C558" title="You can use OCI to perform piecewise inserts, updates, and fetches of data.">Runtime Data Allocation and Piecewise Operations in OCI</a> for general information about piecewise OCI operations</p>
</li>
<li>
<p><a href="oci02bas.htm#GUID-83F4D3B1-56A7-4EEE-A905-BB84D399713D">Polling Mode Operations in OCI</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17224"></a>
<div class="props_rev_3"><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2"></a>
<h2 id="LNOCI-GUID-87D3275A-B042-4991-B261-AB531BB83CA2" class="sect2">OCILobWriteAppend2()</h2>
<div>
<p>Writes data starting at the end of a LOB. This function must be used for LOBs of size greater than 4 GB.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>You can also use this function for LOBs smaller than 4 GB.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCILobWriteAppend2 ( OCISvcCtx            *svchp,
                           OCIError             *errhp,
                           OCILobLocator        *locp,
                           oraub8               *byte_amtp,
                           oraub8               *char_amtp,
                           void                 *bufp, 
                           oraub8                buflen, 
                           ub1                   piece, 
                           void                 *ctxp, 
                           OCICallbackLobWrite2 (cbfp)
                                         (
                                           void     *ctxp,
                                           void     *bufp,
                                           oraub8   *lenp,
                                           ub1      *piecep
                                           void    **changed_bufpp,
                                           oraub8   *changed_lenp
                                          ) 
                           ub2                   csid, 
                           ub1                   csfrm);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74674"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-C24E3764-C503-4830-B573-0DA41C0E22AC"><!-- --></a>svchp (IN)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74675"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-0E267A0F-CC74-45FD-8BC3-E93954EC7243"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74676"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-73B1A33E-9731-43B1-9F27-D37BE38D8960"><!-- --></a>locp (IN/OUT)</dt>
<dd>
<p>An internal LOB locator that uniquely references a LOB.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74677"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-169F338F-B221-49E4-A0AB-3233093A56EB"><!-- --></a>byte_amtp (IN/OUT)</dt>
<dd>
<p>IN - The number of bytes to write to the database. Used for <code class="codeph">BLOB</code>. For <code class="codeph">CLOB</code> and <code class="codeph">NCLOB</code> it is used only when <code class="codeph">char_amtp</code> is zero.</p>
<p>OUT - The number of bytes written to the database.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74678"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-B2F6A7E1-3EAC-4581-902D-DC1B6DAE2CB4"><!-- --></a>char_amtp (IN/OUT)</dt>
<dd>
<p>IN - The maximum number of characters to write to the database. Ignored for <code class="codeph">BLOB</code>.</p>
<p>OUT - The number of characters written to the database. Undefined for <code class="codeph">BLOB</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74679"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-8629E463-D355-4DDB-8223-CD5CE3DC0604"><!-- --></a>bufp (IN)</dt>
<dd>
<p>The pointer to a buffer from which the piece is written. The length of the data in the buffer is assumed to be the value passed in <code class="codeph">buflen</code>. Even if the data is being written in pieces, <code class="codeph">bufp</code> must contain the first piece of the LOB when this call is invoked. If a callback is provided, <code class="codeph">bufp</code> must not be used to provide data or an error results.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74680"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-0AA60E89-F312-4111-BE50-0191F62ABD0E"><!-- --></a>buflen (IN)</dt>
<dd>
<p>The length, in bytes, of the data in the buffer. Note that this parameter assumes an 8-bit byte. If your operating system uses a longer byte, the value of <code class="codeph">buflen</code> must be adjusted accordingly.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74681"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-82C370A6-994A-44F5-BE86-655BE6CC8C70"><!-- --></a>piece (IN)</dt>
<dd>
<p>Which piece of the buffer is being written. The default value for this parameter is <code class="codeph">OCI_ONE_PIECE</code>, indicating that the buffer is written in a single piece. The following other values are also possible for piecewise or callback mode: <code class="codeph">OCI_FIRST_PIECE</code>, <code class="codeph">OCI_NEXT_PIECE</code>, and <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74682"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-A002E997-9813-4FE8-B9D8-B811E8D524BC"><!-- --></a>ctxp (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74683"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-9EFAF4A2-5C11-402A-9E9C-8F959E6F331C"><!-- --></a>cbfp (IN)</dt>
<dd>
<p>A callback that can be registered to be called for each piece in a piecewise write. If this is <code class="codeph">NULL</code>, the standard polling method is used. The callback function must return <code class="codeph">OCI_CONTINUE</code> for the write to continue. If any other error code is returned, the LOB write is terminated. The callback takes the following parameters:</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74684"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-3CA55C35-7FA6-4642-A366-8DFAD7E34720"><!-- --></a>ctxp (IN)</dt>
<dd>
<p>The context for the callback function. Can be <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74685"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-ED08A1D4-6022-4269-BB2F-6F65048F318B"><!-- --></a>bufp (IN/OUT)</dt>
<dd>
<p>A buffer pointer for the piece.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74686"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-6E2491DB-8BCE-469A-BC52-E10BC3EE8B9A"><!-- --></a><span class="bold">lenp</span> (IN/OUT)</dt>
<dd>
<p>The length (in bytes) of the data in the buffer (IN), and the length (in bytes) of the current piece in <code class="codeph">bufp</code> (OUT).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74687"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-D1DEFB4E-4D37-4845-B2F8-3BCEDD8CE749"><!-- --></a><span class="bold">piecep</span> (OUT)</dt>
<dd>
<p>Which piece: <code class="codeph">OCI_NEXT_PIECE</code> or <code class="codeph">OCI_LAST_PIECE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74688"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-047CF229-362E-4CAE-A40C-FF51ABFEB8E5"><!-- --></a>changed_bufpp (OUT)</dt>
<dd>
<p>The callback function can put the address of a new buffer if it prefers to use a new buffer for next piece to be written. The default old buffer <code class="codeph">bufp</code> is used if this parameter is set to <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74689"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-8890B110-FEC6-4ABB-8B49-448CBAB5C68D"><!-- --></a>changed_lenp (OUT)</dt>
<dd>
<p>Length of the new buffer, if provided.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74690"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-C68FB496-52A0-43E2-A20E-E5E400B166D4"><!-- --></a>csid (IN)</dt>
<dd>
<p>The character set ID of the buffer data.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74691"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-CEA7955B-02CF-4A01-9B33-4200445F054D"><!-- --></a>csfrm (IN)</dt>
<dd>
<p>The character set form of the buffer data.</p>
<p>The <code class="codeph">csfrm</code> parameter has two possible nonzero values:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SQLCS_IMPLICIT</code> - Database character set ID</p>
</li>
<li>
<p><code class="codeph">SQLCS_NCHAR</code> - NCHAR character set ID</p>
</li>
</ul>
<p>The default value is <code class="codeph">SQLCS_IMPLICIT</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>The buffer can be written to the LOB in a single piece with this call, or it can be provided piecewise using callbacks or a standard polling method. If the value of the piece parameter is <code class="codeph">OCI_FIRST_PIECE</code>, data must be provided through callbacks or polling. If a callback function is defined in the <code class="codeph">cbfp</code> parameter, then this callback function is invoked to get the next piece after a piece is written to the pipe. Each piece is written from <code class="codeph">bufp</code>. If no callback function is defined, then <code class="codeph">OCILobWriteAppend2()</code> returns the <code class="codeph">OCI_NEED_DATA</code> error code.</p>
<p>The application must call <code class="codeph">OCILobWriteAppend2()</code> again to write more pieces of the LOB. In this mode, the buffer pointer and the length can be different in each call if the pieces are of different sizes and from different locations. A piece value of <code class="codeph">OCI_LAST_PIECE</code> terminates the piecewise write.</p>
<p>The <code class="codeph">OCILobWriteAppend2()</code> function is not supported if LOB buffering is enabled.</p>
<p>If the LOB is a <code class="codeph">BLOB</code>, the <code class="codeph">csid</code> and <code class="codeph">csfrm</code> parameters are ignored.</p>
<p>If both <code class="codeph">byte_amtp</code> and <code class="codeph">char_amtp</code> are set to point to zero amount and <code class="codeph">OCI_FIRST_PIECE</code> is given as input, then polling mode is assumed and data is written until you specify <code class="codeph">OCI_LAST_PIECE</code>. For <code class="codeph">CLOB</code>s and <code class="codeph">NCLOB</code>s, <code class="codeph">byte_amtp</code> and <code class="codeph">char_amtp</code> return the data written by each piece in terms of number of bytes and number of characters respectively. For <code class="codeph">BLOB</code>s, <code class="codeph">byte_amtp</code> returns the number of bytes written by each piece whereas <code class="codeph">char_amtp</code> is undefined on output.</p>
<p>It is not mandatory that you wrap this LOB operation inside the open or close calls. If you did not open the LOB before performing this operation, then the functional and domain indexes on the LOB column are updated during this call. However, if you did open the LOB before performing this operation, then you must close it before you commit your transaction. When an internal LOB is closed, it updates the functional and domain indexes on the LOB column.</p>
<p>If you do not wrap your LOB operations inside the open or close API, then the functional and domain indexes are updated each time you write to the LOB. This can adversely affect performance. If you have functional or domain indexes, Oracle recommends that you enclose write operations to the LOB within the open or close statements.</p>
<div class="infoboxnotealso" id="GUID-87D3275A-B042-4991-B261-AB531BB83CA2__GUID-A878ED53-D5D0-4380-85AF-BE27584B481C">
<p class="notep1">See Also:</p>
<p><a href="oci07lob.htm#GUID-8C5ABC9E-3048-49AE-BFE3-DB4CB1A63AB3" title="How to improve LOB Read/Write performance.">About Improving LOB Read/Write Performance</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6150">
<tr>
<td class="cellalignment6162">
<table class="cellalignment6155">
<tr>
<td class="cellalignment6154"><a href="oci17msc001.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6154"><a href="oci17msc003.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6164">
<table class="cellalignment6153">
<tr>
<td class="cellalignment6154"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6154"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6154"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6154"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6154"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6154"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>