<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-74203"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Handle%20and%20Descriptor%20Functions"></a><title>Handle and Descriptor Functions</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="handle functions, descriptor, functions, OCIArrayDescriptorAlloc(), OCIArrayDescriptorFree(), OCIAttrGet(), OCI_DTYPE_PARAM, OCI_HTYPE_STMT, when used, OCI_ATTR_PARAM, use when an attribute is itself a descriptor, OCIAttrSet(), OCIDescriptorAlloc(), OCIDescriptorFree(), OCIHandleAlloc(), OCIHandleFree(), OCIParamGet(), OCI_HTYPE_COR, OCIParamSet()"/>
<meta name="dcterms.created" content="2017-06-09T09:07:30Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49886-11"/>
<meta name="dcterms.isVersionOf" content="LNOCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="oci16rel001.htm" title="Previous" type="text/html"/>
<link rel="Next" href="oci16rel003.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49886-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-2B988C76-2185-4D18-8EBB-A3FEDA285DD2"></a> <span id="PAGE" style="display:none;">25/84</span> <!-- End Header -->
<a id="LNOCI17128"></a><a id="LNOCI152"></a>
<h1 id="LNOCI-GUID-2B988C76-2185-4D18-8EBB-A3FEDA285DD2" class="sect1">Handle and Descriptor Functions</h1>
<div>
<div class="section">
<p><a href="oci16rel002.htm#GUID-2B988C76-2185-4D18-8EBB-A3FEDA285DD2__CIHGGHDJ" title="This table has 2 columns. Column 1 is the OCI function name and column 2 describes its purpose.">Table 16-3</a> lists the OCI handle and descriptor functions that are described in this section.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-2B988C76-2185-4D18-8EBB-A3FEDA285DD2__CIHGGHDJ">
<p class="titleintable">Table 16-3 Handle and Descriptor Functions &nbsp;</p>
<table class="cellalignment6157" title="Handle and Descriptor Functions &nbsp;" summary="This table has 2 columns. Column 1 is the OCI function name and column 2 describes its purpose.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6201" id="d174241e172">Function</th>
<th class="cellalignment6251" id="d174241e175">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e180" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F" title="Allocates an array of descriptors.">OCIArrayDescriptorAlloc()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e180 d174241e175">
<p>Allocate an array of descriptors</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e193" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-0CBCF1BE-45A0-409D-B386-433070E244E3">OCIArrayDescriptorFree()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e193 d174241e175">
<p>Free an array of descriptors</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e203" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9" title="Gets the value of an attribute of a handle.">OCIAttrGet()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e203 d174241e175">
<p>Get the value of an attribute of a handle</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e216" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03" title="Sets the value of an attribute of a handle or a descriptor.">OCIAttrSet()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e216 d174241e175">
<p>Set the value of an attribute of a handle or descriptor</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e229" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e229 d174241e175">
<p>Allocate and initialize a descriptor or LOB locator</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e239" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629">OCIDescriptorFree()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e239 d174241e175">
<p>Free a previously allocated descriptor</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e249" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5" title="Returns a pointer to an allocated and initialized handle.">OCIHandleAlloc()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e249 d174241e175">
<p>Allocate and initialize a handle</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e262" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-E87E9F91-D3DC-4F35-BE7C-F1EFBFEEBA0A">OCIHandleFree()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e262 d174241e175">
<p>Free a previously allocated handle</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e272" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4" title="Returns a descriptor of a parameter specified by position in the describe handle or statement handle.">OCIParamGet()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e272 d174241e175">
<p>Get a parameter descriptor</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6204" id="d174241e285" headers="d174241e172">
<p><span class="q">&#34;<a href="oci16rel002.htm#GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266" title="Sets a complex object retrieval (COR) descriptor into a COR handle.">OCIParamSet()</a>&#34;</span></p>
</td>
<td class="cellalignment6252" headers="d174241e285 d174241e175">
<p>Set parameter descriptor in COR handle</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="LNOCI16100"></a>
<div class="props_rev_3"><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F"></a>
<h2 id="LNOCI-GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F" class="sect2">OCIArrayDescriptorAlloc()</h2>
<div>
<p>Allocates an array of descriptors.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Allocates an array of descriptors.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIArrayDescriptorAlloc ( const void    *parenth,
                                void         **descpp, 
                                const ub4      type,
                                ub4            array_size,
                                const size_t   xtramem_sz,
                                void         **usrmempp);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74158"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-FB84BFFF-6C0C-44F8-BDD1-6B6CDB747EEC"><!-- --></a>parenth (IN)</dt>
<dd>
<p>An environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74159"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-CBFE749D-2EDA-43BB-8F3F-3243999DE328"><!-- --></a>descpp (OUT)</dt>
<dd>
<p>Returns a pointer to a contiguous array of descriptors of the desired type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74160"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-8B21FD5E-B3E2-4B9C-8B64-2B6F39DE4ED8"><!-- --></a>type (IN)</dt>
<dd>
<p>Specifies the type of descriptor or LOB locator to be allocated. For a list of types, see <code class="codeph">OCIDescriptorAlloc()</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74161"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-162DA90C-188F-4CB2-8DA6-A09738E203FC"><!-- --></a>array_size (IN)</dt>
<dd>
<p>Specifies the number of descriptors to allocate. An error is thrown when the call cannot allocate the number of descriptors.</p>
</dd>
</dl>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74162"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-F2602DA8-4B6E-415C-8313-0405D850E533"><!-- --></a><span class="bold">xtramem_sz</span> (IN)</dt>
<dd>
<p>Specifies an amount of user memory to be allocated for use by the application for the lifetime of the descriptors.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74163"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-4116E730-645B-41F1-A4D8-EA8E9F597E29"><!-- --></a><span class="bold">usrmempp</span> (OUT)</dt>
<dd>
<p>Returns a pointer to an array of pointers numbering in <code class="codeph">array_size</code>, since there is one chunk allocated for each of the descriptors allocated.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This call returns <code class="codeph">OCI_SUCCESS</code> if successful, or a suitable error if an out-of-memory condition occurs.</p>
<div class="infoboxnotealso" id="GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F__GUID-1BA3C60E-3990-485C-9D3B-F61E3FC10739">
<p class="notep1">See Also:</p>
<p><a href="oci02bas.htm#GUID-394C2CED-C264-4F81-BD97-CCF9F149CC4C">User Memory Allocation</a> for more information about the <code class="codeph">xtramem_sz</code> parameter and user memory allocation</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<p>The following code example can be modified to allocate a large number of descriptors.</p>
<p>Allocating a Large Number of Descriptors</p>
<pre dir="ltr">OCIDateTime *descpp1[500];
...
for (i = 0; i!=500; i++)
{
     /* Allocate descriptors */
OCIDescriptorAlloc((void  *)envhp,(void  **)&amp;descpp1[i], OCI_DTYPE_TIMESTAMP_TZ,
                   0,(void  **)0);
}
...
</pre>
<p>The for loop in the previous code example can now be replaced with a single call, as shown in the following code example.</p>
<p>Allocating an Array of Descriptors</p>
<pre dir="ltr">OCIArrayDescriptorAlloc((void *)envhp,(void **)&amp;descpp1,
                        OCI_DTYPE_TIMESTAMP_TZ, 500, 0, (void **)0);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17129"></a>
<div class="props_rev_3"><a id="GUID-0CBCF1BE-45A0-409D-B386-433070E244E3"></a>
<h2 id="LNOCI-GUID-0CBCF1BE-45A0-409D-B386-433070E244E3" class="sect2">OCIArrayDescriptorFree()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Free a previously allocated array of descriptors.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIArrayDescriptorFree ( void       **descp,
                               const ub4  type );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74164"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CBCF1BE-45A0-409D-B386-433070E244E3__GUID-423C1021-CB36-42BE-9709-7184BAA83D62"><!-- --></a><span class="bold">descp</span> (IN)</dt>
<dd>
<p>Pointer to an array of allocated descriptors.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74165"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CBCF1BE-45A0-409D-B386-433070E244E3__GUID-2E95E73A-64FB-4CD0-B1F1-F7A2A489B7E3"><!-- --></a><span class="bold">type</span> (IN)</dt>
<dd>
<p>Specifies the type of storage to be freed. See the types listed in <span class="q">&#34;<a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>&#34;</span>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>An error is returned when a descriptor is allocated using <a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>, but freed using <a href="oci16rel002.htm#GUID-0CBCF1BE-45A0-409D-B386-433070E244E3">OCIArrayDescriptorFree()</a>.</p>
<p>Descriptors allocated using <code class="codeph">OCIArrayDescriptorAlloc()</code> must be freed using <code class="codeph">OCIArrayDescriptorFree()</code>. You must be careful to free the entire array at once: pass in the pointer <code class="codeph">descpp</code> returned by <code class="codeph">OCIArrayDescriptorAlloc()</code> to <code class="codeph">OCIArrayDescriptorFree()</code> appropriately. Otherwise, there can be memory leaks.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci16rel002.htm#GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F" title="Allocates an array of descriptors.">OCIArrayDescriptorAlloc()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17130"></a>
<div class="props_rev_3"><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9"></a>
<h2 id="LNOCI-GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9" class="sect2">OCIAttrGet()</h2>
<div>
<p>Gets the value of an attribute of a handle.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Gets the value of an attribute of a handle.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIAttrGet ( const void     *trgthndlp,
                   ub4             trghndltyp,
                   void           *attributep,
                   ub4            *sizep,
                   ub4             attrtype,
                   OCIError       *errhp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74166"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-B3793556-86AA-488B-9441-20208F66F88F"><!-- --></a><span class="bold">trgthndlp</span> (IN)</dt>
<dd>
<p>Pointer to a handle type. The actual handle can be a statement handle, a session handle, and so on. When this call is used to get encoding, users are allowed to check against either an environment or statement handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74167"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-B8664FDC-3067-41F7-B76F-0F2BC38B134C"><!-- --></a><span class="bold">trghndltyp</span> (IN)</dt>
<dd>
<p>The handle type. Valid types are:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_DTYPE_PARAM</code>, for a parameter descriptor</p>
</li>
<li>
<p><code class="codeph">OCI_HTYPE_STMT</code>, for a statement handle</p>
</li>
<li>
<p>Any handle type in <a href="oci02bas.htm#GUID-5F13B2EC-E29C-4710-8AD7-E97E6C28085E__G466063" title="This table has 3 columns. Column 1 is the handle type description, column 2 is the C data type, and column 3 is the handle type constant.">Table 2-1</a> or any descriptor in <a href="oci02bas.htm#GUID-82F35CC7-A79D-42CE-BF90-DE63FCBAAB7C__G466207" title="This table has 3 columns. Column 1 is the descriptor type description, column 2 is the C data type, and column 3 is the OCI type constant.">Table 2-2</a>.</p>
</li>
</ul>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74168"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-E574388A-0CBE-4965-97BA-91DD08EB176D"><!-- --></a><span class="bold">attributep</span> (OUT)</dt>
<dd>
<p>Pointer to the storage for an attribute value. Is in the encoding specified by the <code class="codeph">charset</code> parameter of a previous call to <code class="codeph">OCIEnvNlsCreate()</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74169"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-B04A06AB-A47B-4B9A-A502-E9E7E132633E"><!-- --></a><span class="bold">sizep</span> (OUT)</dt>
<dd>
<p>The size of the attribute value, always in bytes because <code class="codeph">attributep</code> is a <code class="codeph">void</code> pointer. This can be passed as <code class="codeph">NULL</code> for most attributes because the sizes of non-string attributes are already known by the OCI library. For <code class="codeph">text*</code> parameters, a pointer to a <code class="codeph">ub4</code> must be passed in to get the length of the string.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74170"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-B7DC8604-E53E-45EB-9EE7-2FBC6A485436"><!-- --></a><span class="bold">attrtype</span> (IN)</dt>
<dd>
<p>The type of attribute being retrieved. The handle types and their readable attributes are listed in <a href="ociaahan.htm#GUID-CB59C987-07E7-42D4-ADDF-96142CBD3D11" title="This appendix describes the attributes for OCI handles and descriptors.">Handle and Descriptor Attributes</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74171"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-797E6FC6-79F2-49E2-82F4-6B0398F0F952"><!-- --></a><span class="bold">errhp</span> (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This call is used to get a particular attribute of a handle. <code class="codeph">OCI_DTYPE_PARAM</code> is used to do implicit and explicit describes. The parameter descriptor is also used in direct path loading. For implicit describes, the parameter descriptor has the column description for each select list. For explicit describes, the parameter descriptor has the describe information for each schema object that you are trying to describe. If the top-level parameter descriptor has an attribute that is itself a descriptor, use <code class="codeph">OCI_ATTR_PARAM</code> as the attribute type in the subsequent call to <code class="codeph">OCIAttrGet()</code> to get the Unicode information in an environment or statement handle.</p>
<div class="infoboxnotealso" id="GUID-FA199A99-4D7A-42C2-BB0A-C20047B95DF9__GUID-556CB478-2156-4845-BDFC-0C30930B04DA">
<p class="notep1">See Also:</p>
<p><a href="oci06des.htm#GUID-A1FEDF38-F835-49D5-BBB5-69E5BAA7D759" title="The following examples demonstrate the use of OCIDescribeAny() for describing different types of schema objects.">Examples Using OCIDescribeAny()</a> and <a href="oci04sql.htm#GUID-DDB109DD-52EB-4AA8-A69A-34015F8D5D6E" title="If your OCI application is processing a query, you may need to obtain more information about the items in the select list.">About Describing Select-List Items</a></p>
</div>
<p>A function closely related to <code class="codeph">OCIAttrGet()</code> is <code class="codeph">OCIDescribeAny()</code>, which is a generic describe call that describes existing schema objects: tables, views, synonyms, procedures, functions, packages, sequences, and types. As a result of this call, the describe handle is populated with the object-specific attributes that can be obtained through an <code class="codeph">OCIAttrGet()</code> call.</p>
<p>Then an <code class="codeph">OCIParamGet()</code> call on the describe handle returns a parameter descriptor for a specified position. Parameter positions begin with 1. Calling <code class="codeph">OCIAttrGet()</code> on the parameter descriptor returns the specific attributes of a stored procedure or function parameter or a table column descriptor. These subsequent calls do not need an extra round-trip to the server because the entire schema object description is cached on the client side by <code class="codeph">OCIDescribeAny()</code>. Calling <code class="codeph">OCIAttrGet()</code> on the describe handle can also return the total number of positions.</p>
<p>In <code class="codeph">UTF-16</code> mode, particularly when executing a loop, try to reuse the same pointer variable corresponding to an attribute and copy the contents to local variables after <code class="codeph">OCIAttrGet()</code> is called. If multiple pointers are used for the same attribute, a memory leak can occur.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17131"></a>
<div class="props_rev_3"><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03"></a>
<h2 id="LNOCI-GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03" class="sect2">OCIAttrSet()</h2>
<div>
<p>Sets the value of an attribute of a handle or a descriptor.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Sets the value of an attribute of a handle or a descriptor.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIAttrSet ( void        *trgthndlp,
                   ub4          trghndltyp,
                   void        *attributep,
                   ub4          size,
                   ub4          attrtype,
                   OCIError    *errhp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74172"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03__GUID-72A7EA58-C36D-415E-8A80-168DF1564AFB"><!-- --></a><span class="bold">trgthndlp</span> (IN/OUT)</dt>
<dd>
<p>Pointer to a handle whose attribute gets modified.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74173"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03__GUID-241C8868-6666-4524-AB7C-4ED443D6248F"><!-- --></a><span class="bold">trghndltyp</span> (IN/OUT)</dt>
<dd>
<p>The handle type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74174"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03__GUID-DB12F5FC-F35D-410F-8252-67ED69917C0C"><!-- --></a><span class="bold">attributep</span> (IN)</dt>
<dd>
<p>Pointer to an attribute value. The attribute value is copied into the target handle. If the attribute value is a pointer, then only the pointer is copied, not the contents of the pointer. String attributes must be in the encoding specified by the <code class="codeph">charset</code> parameter of a previous call to <code class="codeph">OCIEnvNlsCreate()</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74175"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03__GUID-8785ABA7-4BDC-466D-BEF6-A2D0099FAACC"><!-- --></a><span class="bold">size</span> (IN)</dt>
<dd>
<p>The size of an attribute value. This can be passed in as 0 for most attributes, as the size is already known by the OCI library. For <code class="codeph">text*</code> attributes, a <code class="codeph">ub4</code> must be passed in set to the length of the string in bytes, regardless of encoding.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74176"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03__GUID-6534C5A3-2CA1-49EC-B83A-68218E764856"><!-- --></a><span class="bold">attrtype</span> (IN)</dt>
<dd>
<p>The type of attribute being set.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74177"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-3741D7BD-7652-4D7A-8813-AC2AEA8D3B03__GUID-15CFCBF5-611D-4DC7-B5B9-AEDD9D6B25E4"><!-- --></a><span class="bold">errhp</span> (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>See <a href="ociaahan.htm#GUID-CB59C987-07E7-42D4-ADDF-96142CBD3D11" title="This appendix describes the attributes for OCI handles and descriptors.">Handle and Descriptor Attributes</a> for a list of handle types and their writable attributes.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17132"></a>
<div class="props_rev_3"><a id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F"></a>
<h2 id="LNOCI-GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F" class="sect2">OCIDescriptorAlloc()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Allocates storage to hold descriptors or LOB locators.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIDescriptorAlloc ( const void    *parenth,
                           void          **descpp, 
                           ub4           type,
                           size_t        xtramem_sz,
                           void          **usrmempp);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74178"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F__GUID-24DE7E82-EB77-4187-9C6C-DB9A90198810"><!-- --></a>parenth (IN)</dt>
<dd>
<p>An environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74179"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F__GUID-77C06AB7-75C4-4B08-BF40-0FD0F476CA19"><!-- --></a>descpp (OUT)</dt>
<dd>
<p>Returns a descriptor or LOB locator of the desired type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74180"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F__GUID-D0ABC59F-44AA-42AE-9409-553CA269625E"><!-- --></a>type (IN)</dt>
<dd>
<p>Specifies the type of descriptor or LOB locator to be allocated:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_DTYPE_SNAP</code> - Specifies generation of snapshot descriptor of C type <code class="codeph">OCISnapshot</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_LOB</code> - Specifies generation of a LOB value type locator (for a <code class="codeph">BLOB</code> or <code class="codeph">CLOB</code>) of C type <code class="codeph">OCILobLocator</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_FILE</code> - Specifies generation of a FILE value type locator of C type <code class="codeph">OCILobLocator</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_ROWID</code> - Specifies generation of a <code class="codeph">ROWID</code> descriptor of C type <code class="codeph">OCIRowid</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_DATE</code> - Specifies generation of an <code class="codeph">ANSI</code> <code class="codeph">DATE</code> descriptor of C type <code class="codeph">OCIDateTime</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_PARAM</code> - Specifies generation of a read-only parameter descriptor of C type <code class="codeph">OCIParam</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_TIMESTAMP</code> - Specifies generation of a <code class="codeph">TIMESTAMP</code> descriptor of C type <code class="codeph">OCIDateTime</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_TIMESTAMP_TZ</code> - Specifies generation of a <code class="codeph">TIMESTAMP</code> <code class="codeph">WITH</code> <code class="codeph">TIME</code> <code class="codeph">ZONE</code> descriptor of C type <code class="codeph">OCIDateTime</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_TIMESTAMP_LTZ</code> - Specifies generation of a <code class="codeph">TIMESTAMP</code> <code class="codeph">WITH</code> <code class="codeph">LOCAL</code> <code class="codeph">TIME</code> <code class="codeph">ZONE</code> descriptor of C type <code class="codeph">OCIDateTime</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_INTERVAL_YM</code> - Specifies generation of an <code class="codeph">INTERVAL</code> <code class="codeph">YEAR</code> <code class="codeph">TO</code> <code class="codeph">MONTH</code> descriptor of C type <code class="codeph">OCIInterval</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_INTERVAL_DS</code> - Specifies generation of an <code class="codeph">INTERVAL</code> <code class="codeph">DAY</code> <code class="codeph">TO</code> <code class="codeph">SECOND</code> descriptor of C type <code class="codeph">OCIInterval</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_COMPLEXOBJECTCOMP</code> - Specifies generation of a complex object retrieval descriptor of C type <code class="codeph">OCIComplexObjectComp</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQENQ_OPTIONS</code> - Specifies generation of an Advanced Queuing enqueue options descriptor of C type <code class="codeph">OCIAQEnqOptions</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQDEQ_OPTIONS</code> - Specifies generation of an Advanced Queuing dequeue options descriptor of C type <code class="codeph">OCIAQDeqOptions</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQMSG_PROPERTIES</code> - Specifies generation of an Advanced Queuing message properties descriptor of C type <code class="codeph">OCIAQMsgProperties</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQAGENT</code> - Specifies generation of an Advanced Queuing agent descriptor of C type <code class="codeph">OCIAQAgent</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQNFY</code> - Specifies generation of an Advanced Queuing notification descriptor of C type <code class="codeph">OCIAQNotify</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQLIS_OPTIONS</code> - Specifies generation of an Advanced Queuing listen descriptor of C type <code class="codeph">OCIAQListenOpts</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_AQLIS_MSG_PROPERTIES</code> - Specifies generation of an Advanced Queuing message properties descriptor of C type <code class="codeph">OCIAQLisMsgProps</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_SRVDN</code> - Specifies generation of a Distinguished Names descriptor of C type <code class="codeph">OCIServerDNs</code>.</p>
</li>
<li>
<p><code class="codeph">OCI_DTYPE_UCB</code> - Specifies generation of a user callback descriptor of C type <code class="codeph">OCIUcb</code>.</p>
</li>
</ul>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74181"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F__GUID-6719C895-EC60-4975-B2A4-6533827DA9CD"><!-- --></a><span class="bold">xtramem_sz</span> (IN)</dt>
<dd>
<p>Specifies an amount of user memory to be allocated for use by the application for the lifetime of the descriptor.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74182"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F__GUID-1FFFAD5E-6E05-493C-B10C-778BE40E167E"><!-- --></a><span class="bold">usrmempp</span> (OUT)</dt>
<dd>
<p>Returns a pointer to the user memory of size <code class="codeph">xtramem_sz</code> allocated by the call for the user for the lifetime of the descriptor.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Returns a pointer to an allocated and initialized descriptor, corresponding to the type specified in <code class="codeph">type</code>. A non-<code class="codeph">NULL</code> descriptor or LOB locator is returned on success. No diagnostics are available on error.</p>
<p>This call returns <code class="codeph">OCI_SUCCESS</code> if successful, or <code class="codeph">OCI_INVALID_HANDLE</code> if an out-of-memory error occurs.</p>
<div class="infoboxnotealso" id="GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F__GUID-58FDC0AC-7EC4-4DC8-B0D3-4AEF2915F195">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="oci02bas.htm#GUID-394C2CED-C264-4F81-BD97-CCF9F149CC4C">User Memory Allocation</a>&#34;</span> for more information about the <code class="codeph">xtramem_sz</code> parameter and user memory allocation</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci16rel002.htm#GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629">OCIDescriptorFree()</a>, <a href="oci16rel002.htm#GUID-8218D5F2-139B-4FA9-BA4A-ED0126687C0F" title="Allocates an array of descriptors.">OCIArrayDescriptorAlloc()</a>, <a href="oci16rel002.htm#GUID-0CBCF1BE-45A0-409D-B386-433070E244E3">OCIArrayDescriptorFree()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17133"></a>
<div class="props_rev_3"><a id="GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629"></a>
<h2 id="LNOCI-GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629" class="sect2">OCIDescriptorFree()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Deallocates a previously allocated descriptor.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIDescriptorFree ( void     *descp,
                          ub4      type );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74183"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629__GUID-83EC0318-7BFC-4C1B-8F9C-65FBD77F283A"><!-- --></a><span class="bold">descp</span> (IN)</dt>
<dd>
<p>An allocated descriptor.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74184"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A32BF051-3DC1-491C-AAFD-A46034DD1629__GUID-08777F18-739F-4C56-A3AC-4FD939B07E6E"><!-- --></a><span class="bold">type</span> (IN)</dt>
<dd>
<p>Specifies the type of storage to be freed. See the types listed in <span class="q">&#34;<a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a>&#34;</span>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This call frees storage associated with a descriptor. Returns <code class="codeph">OCI_SUCCESS</code> or <code class="codeph">OCI_INVALID_HANDLE</code>. All descriptors can be explicitly deallocated; however, OCI deallocates a descriptor if the environment handle is deallocated.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci16rel002.htm#GUID-E9EF2766-E078-49A7-B1D1-738E4BA4814F">OCIDescriptorAlloc()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17134"></a>
<div class="props_rev_3"><a id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5"></a>
<h2 id="LNOCI-GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5" class="sect2">OCIHandleAlloc()</h2>
<div>
<p>Returns a pointer to an allocated and initialized handle.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Returns a pointer to an allocated and initialized handle.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIHandleAlloc ( const void    *parenth,
                       void         **hndlpp, 
                       ub4            type, 
                       size_t         xtramem_sz,
                       void         **usrmempp );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74185"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5__GUID-B6EC3B72-D3AD-434F-970B-E0EE80A1A189"><!-- --></a><span class="bold">parenth</span> (IN)</dt>
<dd>
<p>An environment handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74186"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5__GUID-9A8E4BA0-78CA-429C-8124-BC10C79EDFCD"><!-- --></a><span class="bold">hndlpp</span> (OUT)</dt>
<dd>
<p>Returns a handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74187"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5__GUID-3887916F-2633-4669-BA0B-B83A630CEA6C"><!-- --></a><span class="bold">type</span> (IN)</dt>
<dd>
<p>Specifies the type of handle to be allocated. The allowed handles are described in <a href="oci02bas.htm#GUID-5F13B2EC-E29C-4710-8AD7-E97E6C28085E__G466063" title="This table has 3 columns. Column 1 is the handle type description, column 2 is the C data type, and column 3 is the handle type constant.">Table 2-1</a>.</p>
</dd>
</dl>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74188"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5__GUID-4EA96C5B-4236-4DCE-AC1B-DF7822B0A080"><!-- --></a><span class="bold">xtramem_sz</span> (IN)</dt>
<dd>
<p>Specifies an amount of user memory to be allocated.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74189"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5__GUID-9A040446-DB6B-49A3-A03B-36E4DCB62715"><!-- --></a><span class="bold">usrmempp</span> (OUT)</dt>
<dd>
<p>Returns a pointer to the user memory of size <code class="codeph">xtramem_sz</code> allocated by the call for the user.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>Returns a pointer to an allocated and initialized handle, corresponding to the type specified in <code class="codeph">type</code>. A non-<code class="codeph">NULL</code> handle is returned on success. All handles are allocated with respect to an environment handle that is passed in as a parent handle.</p>
<p>No diagnostics are available on error. This call returns <code class="codeph">OCI_SUCCESS</code> if successful, or <code class="codeph">OCI_INVALID_HANDLE</code> if an error occurs.</p>
<p>Handles must be allocated using <code class="codeph">OCIHandleAlloc()</code> before they can be passed into an OCI call.</p>
<div class="infoboxnotealso" id="GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5__GUID-615D1FBB-D278-4F9E-84E1-DBE829B54045">
<p class="notep1">See Also:</p>
<p><a href="oci02bas.htm#GUID-394C2CED-C264-4F81-BD97-CCF9F149CC4C">User Memory Allocation</a> for more information about using the <code class="codeph">xtramem_sz</code> parameter for user memory allocation</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17135"></a>
<div class="props_rev_3"><a id="GUID-E87E9F91-D3DC-4F35-BE7C-F1EFBFEEBA0A"></a>
<h2 id="LNOCI-GUID-E87E9F91-D3DC-4F35-BE7C-F1EFBFEEBA0A" class="sect2">OCIHandleFree()</h2>
<div>
<div class="section">
<p class="subhead2">Purpose</p>
<p>This call explicitly deallocates a handle.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIHandleFree ( void      *hndlp,
                      ub4       type );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74190"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E87E9F91-D3DC-4F35-BE7C-F1EFBFEEBA0A__GUID-0FA7D6B3-F3D7-4460-AD01-AEF697A66F31"><!-- --></a><span class="bold">hndlp</span> (IN)</dt>
<dd>
<p>A handle allocated by <a href="oci16rel002.htm#GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5" title="Returns a pointer to an allocated and initialized handle.">OCIHandleAlloc()</a>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74191"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E87E9F91-D3DC-4F35-BE7C-F1EFBFEEBA0A__GUID-C921C151-F735-4C42-8BC2-2A350F4700B0"><!-- --></a><span class="bold">type</span> (IN)</dt>
<dd>
<p>Specifies the type of storage to be freed. The handles are described in <a href="oci02bas.htm#GUID-5F13B2EC-E29C-4710-8AD7-E97E6C28085E__G466063" title="This table has 3 columns. Column 1 is the handle type description, column 2 is the C data type, and column 3 is the handle type constant.">Table 2-1</a>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This call frees up storage associated with a handle, corresponding to the type specified in the <code class="codeph">type</code> parameter.</p>
<p>This call returns either <code class="codeph">OCI_SUCCESS</code>, <code class="codeph">OCI_INVALID_HANDLE</code>, or <code class="codeph">OCI_ERROR</code>.</p>
<p>All handles may be explicitly deallocated. The OCI deallocates a child handle if the parent is deallocated.</p>
<p>When a statement handle is freed, the cursor associated with the statement handle is closed, but the actual cursor closing may be deferred to the next round-trip to the server. If the application must close the cursor immediately, you can make a server round-trip call, such as <a href="oci17msc007.htm#GUID-5EED124F-6D98-40EA-8B3F-09374F020B89">OCIServerVersion()</a> or <a href="oci17msc007.htm#GUID-033BF96D-D88D-4F18-909A-3AB7C2F6C70F">OCIPing()</a>, after the <code class="codeph">OCIHandleFree()</code> call.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Functions</p>
<p><a href="oci16rel002.htm#GUID-C5BF55F7-A110-4CB5-9663-5056590F12B5" title="Returns a pointer to an allocated and initialized handle.">OCIHandleAlloc()</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17136"></a>
<div class="props_rev_3"><a id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4"></a>
<h2 id="LNOCI-GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4" class="sect2">OCIParamGet()</h2>
<div>
<p>Returns a descriptor of a parameter specified by position in the describe handle or statement handle.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Returns a descriptor of a parameter specified by position in the describe handle or statement handle.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIParamGet ( const void        *hndlp,
                    ub4                htype,
                    OCIError          *errhp,
                    void             **parmdpp,
                    ub4                pos );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74192"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-99D51ECA-4889-476A-9363-1034FBFACA9C"><!-- --></a>hndlp (IN)</dt>
<dd>
<p>A statement handle or describe handle. The <code class="codeph">OCIParamGet()</code> function returns a parameter descriptor for this handle.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74193"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-693AB946-4F4A-4D18-8F7E-80BC9C82ECBB"><!-- --></a>htype (IN)</dt>
<dd>
<p>The type of the handle passed in the <code class="codeph">hndlp</code> parameter. Valid types are:</p>
</dd>
</dl>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OCI_DTYPE_PARAM</code>, for a parameter descriptor</p>
</li>
<li>
<p><code class="codeph">OCI_HTYPE_COMPLEXOBJECT</code>, for a complex object retrieval handle</p>
</li>
<li>
<p><code class="codeph">OCI_HTYPE_STMT</code>, for a statement handle</p>
</li>
</ul>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74194"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-2BF52CE7-CDEB-43E7-B950-C53CEA35233A"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74195"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-346D4B46-0143-438D-A313-8A5EED7BE16C"><!-- --></a>parmdpp (OUT)</dt>
<dd>
<p>A descriptor of the parameter at the position given in the <code class="codeph">pos</code> parameter, of handle type <code class="codeph">OCI_DTYPE_PARAM</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74196"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-48FC4FFE-79D2-4C0C-83B3-B2AFA140C678"><!-- --></a>pos (IN)</dt>
<dd>
<p>Position number in the statement handle or describe handle. A parameter descriptor is returned for this position.</p>
<div class="infobox-note" id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-024B6493-4B0E-485F-8FBE-D615D8C38A03">
<p class="notep1">Note:</p>
<p><code class="codeph">OCI_ERROR</code> is returned if there are no parameter descriptors for this position.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>This call returns a descriptor of a parameter specified by position in the describe handle or statement handle. Parameter descriptors are always allocated internally by the OCI library. They can be freed using <code class="codeph">OCIDescriptorFree()</code>. For example, if you fetch the same column metadata for every execution of a statement, then the program leaks memory unless you explicitly free the parameter descriptor between each call to <code class="codeph">OCIParamGet()</code>.</p>
<div class="infoboxnotealso" id="GUID-35D2FF91-139B-4A5C-97C8-8BC29866CCA4__GUID-6D2E19D8-166F-43A9-8200-E24B6393B973">
<p class="notep1">See Also:</p>
<p><a href="ociaahan.htm#GUID-CB59C987-07E7-42D4-ADDF-96142CBD3D11" title="This appendix describes the attributes for OCI handles and descriptors.">Handle and Descriptor Attributes</a> for more detailed information about parameter descriptor attributes</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI17137"></a>
<div class="props_rev_3"><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266"></a>
<h2 id="LNOCI-GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266" class="sect2">OCIParamSet()</h2>
<div>
<p>Sets a complex object retrieval (COR) descriptor into a COR handle.</p>
<div class="section">
<p class="subhead2">Purpose</p>
<p>Sets a complex object retrieval (COR) descriptor into a COR handle.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">sword OCIParamSet ( void           *hndlp,
                    ub4             htype,
                    OCIError       *errhp,
                    const void     *dscp,
                    ub4             dtyp,
                    ub4             pos );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Parameters</p>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74197"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-A87F5E97-1407-4B4D-8EE6-0A814B476C49"><!-- --></a>hndlp (IN/OUT)</dt>
<dd>
<p>Handle pointer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74198"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-C18C2A90-7806-4FA7-B362-C50F052F8F8F"><!-- --></a>htype (IN)</dt>
<dd>
<p>Handle type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74199"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-78ED8E87-4033-47F9-BF7A-C056D5526F30"><!-- --></a>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <code class="codeph">OCIErrorGet()</code> for diagnostic information when there is an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74200"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-F244FC2C-852F-48F3-9252-6C12CCE313D8"><!-- --></a>dscp (IN)</dt>
<dd>
<p>Complex object retrieval descriptor pointer.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74201"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-CB54FF41-BD71-4BA3-B9A5-301170488578"><!-- --></a>dtyp (IN)</dt>
<dd>
<p>Descriptor type. The descriptor type for a COR descriptor is <code class="codeph">OCI_DTYPE_COMPLEXOBJECTCOMP</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-74202"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-8942E112-7EAD-4828-9AF7-F8C73808E540"><!-- --></a>pos (IN)</dt>
<dd>
<p>Position number.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Comments</p>
<p>The COR handle must have been previously allocated using <code class="codeph">OCIHandleAlloc()</code>, and the descriptor must have been previously allocated using <code class="codeph">OCIDescriptorAlloc()</code>. Attributes of the descriptor are set using <code class="codeph">OCIAttrSet()</code>.</p>
<div class="infoboxnotealso" id="GUID-280CF9E5-3537-4785-9AFA-4E63DE29A266__GUID-A479FB40-079F-4E0B-9D09-EE47A6563070">
<p class="notep1">See Also:</p>
<p><a href="oci11obj.htm#GUID-03683C87-7758-421A-BC51-C54A5A7679F2" title="A complex object includes its root object and its set of logically related objects each of which are prefetched based on a given depth level.">Complex Object Retrieval</a> for more information about complex object retrieval</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6150">
<tr>
<td class="cellalignment6162">
<table class="cellalignment6155">
<tr>
<td class="cellalignment6154"><a href="oci16rel001.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6154"><a href="oci16rel003.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6164">
<table class="cellalignment6153">
<tr>
<td class="cellalignment6154"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6154"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6154"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6154"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6154"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6154"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>