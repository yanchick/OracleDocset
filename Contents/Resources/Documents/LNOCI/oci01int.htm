<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-73972"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/OCI%3A%20Introduction%20and%20Upgrading"></a><title>OCI: Introduction and Upgrading</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="OCI, overview, TimesTen In-Memory Database access from OCI, opaque, definition of, advantages, OCI applications, compiling, linking, alternatives to OCI, ODPI-C, OCCI, Pro*C/C++, for Oracle Database drivers, for user applications, alternative to OCI, parts of, Oracle Call Interface, object support, SQL statements, types, data definition language, DDL, control statements, data manipulation language, DML, queries, SQL query, statement type, PL/SQL, embedded SQL, mixing with OCI calls, terminology, used in this manual, XA Library, OCI support, xa.h header, header files, location of, upgrading OCI, statically linked applications, dynamically linked applications, relinking, need for, new release, relinking, version compatibility, OCI functions, obsolescent, not supported, Instant Client, TNS_ADMIN, Instant Client Light (English), SDK for Instant Client Light"/>
<meta name="dcterms.created" content="2017-06-09T09:07:30Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Call Interface Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49886-11"/>
<meta name="dcterms.isVersionOf" content="LNOCI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="release_changes.htm" title="Previous" type="text/html"/>
<link rel="Next" href="oci02bas.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49886-11.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-27645179-6957-4004-8BB8-38775266B038"></a> <span id="PAGE" style="display:none;">8/84</span> <!-- End Header -->
<script>
//<![CDATA[
window.name='oci01int'
//]]>
</script> <script>
    function footdisplay(footnum,footnote) {
    var msg = window.open('about:blank', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');
    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'); 
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" ><head><title>');
   
    msg.document.write('Footnote&amp;nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() {
        var height = msg.document.getElementById('footnote').offsetHeight;
        msg.resizeTo(598, height + 100);
    }
    , 100);
    msg.focus();
}
</script><noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript><a id="LNOCI010"></a>
<h1 id="LNOCI-GUID-27645179-6957-4004-8BB8-38775266B038" class="sect1"><span class="enumeration_chapter">1</span> OCI: Introduction and Upgrading</h1>
<div>
<p>This chapter contains these topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-169F309C-279B-410C-9844-E0ACC505F789" title="You compile and link an OCI program in the same way that you compile and link a non-database application. There is no need for a separate preprocessing or precompilation step.What are the alternatives to OCI?OCI has facilities for working with object types and objects.One of the main tasks of an OCI application is to process SQL statements. OCI applications treat transaction control, session control, and system control statements as if they were DML statements. Data manipulation language (DML) statements can change data in the database tables. Queries are statements that retrieve data from a database. PL/SQL is Oracle&#39;s procedural extension to the SQL language. OCI processes SQL statements as text strings that an application passes to the database on execution. This guide uses special terms to refer to the different parts of a SQL statement. OCI provides a comprehensive application programming interface for programmers seeking to use Oracle Database object capabilities. OCI provides an interface to Oracle Streams Advanced Queuing (Streams AQ) feature. OCI supports the Oracle XA library.">Overview of OCI</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-1B41866A-7D99-4335-8E73-E0BCF54CB532" title="What are the rules for relinking for a new release?">About Compatibility and Upgrading</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-6895DB45-97AA-4738-9959-BD677D610186" title="Instant Client is a deployment choice and can be used for running production applications.Because Instant Client is a deployment feature, the number and size of files (client footprint) required to run an OCI application has been reduced. What character sets are supported by Instant Client Light.">OCI Instant Client</a></p>
</li>
</ul>
</div>
<a id="LNOCI16114"></a>
<div class="props_rev_3"><a id="GUID-169F309C-279B-410C-9844-E0ACC505F789"></a>
<h2 id="LNOCI-GUID-169F309C-279B-410C-9844-E0ACC505F789" class="sect2">Overview of OCI</h2>
<div>
<p>Oracle Call Interface (OCI) is an application programming interface (API) that lets you create applications that use function calls to access an Oracle database and control all phases of SQL statement execution. OCI supports the data types, calling conventions, syntax, and semantics of C and C++.</p>
<p>OCI provides:</p>
<ul style="list-style-type: disc;">
<li>
<p>Improved performance and scalability through the efficient use of system memory and network connectivity</p>
</li>
<li>
<p>Consistent interfaces for dynamic session and transaction management in a two-tier client/server or multitier environment</p>
</li>
<li>
<p>N-tier authentication</p>
</li>
<li>
<p>Comprehensive support for application development using Oracle Database objects</p>
</li>
<li>
<p>Access to external databases</p>
</li>
<li>
<p>Applications that support an increasing number of users and requests without additional hardware investments</p>
</li>
</ul>
<p>OCI enables you to manipulate data and schemas in an Oracle Database using the C programming language. It provides a library of standard database access and retrieval functions in the form of a dynamic runtime library (OCI library) that can be linked in an application at run time.</p>
<p>You can use OCI to access Oracle TimesTen In-Memory Database and Oracle In-Memory Database Cache. See <span><cite>Oracle TimesTen In-Memory Database C Developers Guide</cite></span></p>
<p>OCI has many new features that can be categorized into several primary areas:</p>
<ul style="list-style-type: disc;">
<li>
<p>Encapsulated or opaque interfaces, whose implementation details are unknown</p>
</li>
<li>
<p>Simplified user authentication and password management</p>
</li>
<li>
<p>Extensions to improve application performance and scalability</p>
</li>
<li>
<p>Consistent interface for transaction management</p>
</li>
<li>
<p>OCI extensions to support client-side access to Oracle objects</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-169F309C-279B-410C-9844-E0ACC505F789__GUID-A0670170-D4E3-45C4-9DBD-327402D689F0">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="http://www.oracle.com/technetwork/database/features/oci/" target="_blank">Oracle Technology Network URL for the OCI page: http://www.oracle.com/technetwork/database/features/oci/</a></p>
</li>
<li>
<p><a class="olink LNCPP001" target="_blank" href="../LNCPP/introduction.htm#LNCPP001"><span><cite>Oracle C++ Call Interface Programmer&#39;s Guide</cite></span></a></p>
</li>
<li>
<p><span class="q">&#34;<a href="preface.htm#GUID-D6162783-7F3D-4463-B304-D64243574357">Related Documents</a>&#34;</span></p>
</li>
</ul>
</div>
<div class="p">This section includes the following topics:
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-6603B46A-CFB3-4A15-9E37-6F2C279CC627">Advantages of OCI</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-D08162C9-A0D6-434E-9A0F-43998BB80E01" title="You compile and link an OCI program in the same way that you compile and link a non-database application. There is no need for a separate preprocessing or precompilation step.">Building an OCI Application</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-B71BBAF0-471D-4705-A2EF-92C4280326D8" title="What are the alternatives to OCI?">Alternatives to OCI</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-76C87AE9-7464-4259-B6EF-C2F7A92E93CF">Parts of OCI</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-33E27E78-ED24-479F-A77C-86F576A0DED8">Procedural and Nonprocedural Elements</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-777626DD-9CFE-423A-BECB-5E4484A06049" title="OCI has facilities for working with object types and objects.">Object Support</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-0938E7F8-63F4-4D27-B86C-C27E8E6099F2" title="One of the main tasks of an OCI application is to process SQL statements.">SQL Statements</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-EB950D34-489C-4921-B0BC-107E1CC82F65">Encapsulated Interfaces</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-9222D817-7693-4AE6-BF1C-BEBB59DDCDE7">Simplified User Authentication and Password Management</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-2EB428B9-A074-4B79-BB3E-4310317F2A26">Features to Improve Application Performance and Scalability</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-F091C7FC-97CE-4C94-9D62-F9308550A5CC" title="OCI provides a comprehensive application programming interface for programmers seeking to use Oracle Database object capabilities.">OCI Object Support</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-C27DFAA6-B396-469C-ABE0-83DBFC8DEC6A" title="OCI provides an interface to Oracle Streams Advanced Queuing (Streams AQ) feature.">OCI Support for Oracle Streams Advanced Queuing</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-AF569BC4-3087-45F3-AA56-1CBCBB00EF2D" title="OCI supports the Oracle XA library.">XA Library Support</a></p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16115"></a>
<div class="props_rev_3"><a id="GUID-6603B46A-CFB3-4A15-9E37-6F2C279CC627"></a>
<h3 id="LNOCI-GUID-6603B46A-CFB3-4A15-9E37-6F2C279CC627" class="sect3">Advantages of OCI</h3>
<div>
<p>OCI provides significant advantages over other methods of accessing an Oracle Database:</p>
<ul style="list-style-type: disc;">
<li>
<p>More fine-grained control over all aspects of application design</p>
</li>
<li>
<p>High degree of control over program execution</p>
</li>
<li>
<p>Use of familiar third-generation language programming techniques and application development tools, such as browsers and debuggers</p>
</li>
<li>
<p>Connection pooling, session pooling, and statement caching that enable building of scalable applications</p>
</li>
<li>
<p>Support of dynamic SQL</p>
</li>
<li>
<p>Availability on the broadest range of operating systems of all the Oracle programmatic interfaces</p>
</li>
<li>
<p>Dynamic binding and defining using callbacks</p>
</li>
<li>
<p>Description functionality to expose layers of server metadata</p>
</li>
<li>
<p>Asynchronous event notification for registered client applications</p>
</li>
<li>
<p>Enhanced array data manipulation language (DML) capability for array inserts, updates, and deletes</p>
</li>
<li>
<p>Ability to associate commit requests with executes to reduce round-trips</p>
</li>
<li>
<p>Optimization of queries using transparent prefetch buffers to reduce round-trips</p>
</li>
<li>
<p>Thread safety, which eliminates the need for mutual exclusive locks (mutexes) on OCI handles</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16116"></a>
<div class="props_rev_3"><a id="GUID-D08162C9-A0D6-434E-9A0F-43998BB80E01"></a>
<h3 id="LNOCI-GUID-D08162C9-A0D6-434E-9A0F-43998BB80E01" class="sect3">Building an OCI Application</h3>
<div>
<p>You compile and link an OCI program in the same way that you compile and link a non-database application. There is no need for a separate preprocessing or precompilation step.</p>
<p>Oracle Database supports most popular compilers. The details of linking an OCI program vary from system to system. On some operating systems, it may be necessary to include other libraries, in addition to the OCI library, to properly link your OCI programs. See your Oracle Database system-specific documentation and the installation guide for more information about compiling and linking an OCI application for your operating system.</p>
<div class="infoboxnotealso" id="GUID-D08162C9-A0D6-434E-9A0F-43998BB80E01__GUID-750E83CD-2311-458B-A530-1A1B518AFD81">
<p class="notep1">See Also:</p>
<p><a href="ociadwin.htm#GUID-AF5B9CF0-EA9A-4786-80AF-1FEF13363C88" title="How to get started with OCI for Windows.">Getting Started with OCI for Windows</a></p>
</div>
</div>
</div>
<div class="sect3"><a id="GUID-B71BBAF0-471D-4705-A2EF-92C4280326D8"></a>
<h3 id="LNOCI-GUID-B71BBAF0-471D-4705-A2EF-92C4280326D8" class="sect3">Alternatives to OCI</h3>
<div>
<p>What are the alternatives to OCI?</p>
<p>Some alternatives to using the Oracle Call Interface (OCI) include:</p>
<ul style="list-style-type: disc;">
<li>
<p>Oracle Database Programming Interface for C (ODPI-C)</p>
</li>
<li>
<p>Oracle C++ Call Interface (OCCI)</p>
</li>
<li>
<p>Oracle Pro*C/C++ Precompiler</p>
</li>
</ul>
<div class="section">
<p class="subhead3">Oracle Database Programming Interface for C (ODPI-C)</p>
<p>ODPI-C is an open source library of C code that simplifies the use of common Oracle Call Interface (OCI) features for Oracle Database drivers and user applications. ODPI-C sits on top of OCI and requires Oracle client libraries. ODPI-C:</p>
<ul style="list-style-type: disc;">
<li>
<p>Favors ease of use aimed at driver writers where niche special-case OCI features are not needed.</p>
</li>
<li>
<p>Provides a faster implementation of drivers with considerably less code.&nbsp;Oracle features can be exposed to users rapidly and in a consistent way.</p>
</li>
<li>
<p>Provides simpler memory management for binding variables and fetching.</p>
</li>
<li>
<p>Automatically converts binding and &#39;defining&#39; (for fetches) to &#34;native&#34; C types so that additional calls do not need to be made. This is beneficial particularly for numbers and dates. The ability to retrieve LONG and LOB columns as strings and buffers is an advantage as well.</p>
</li>
<li>
<p>Provisdes a &#34;safer&#34; API in that resource handles are validated.&nbsp;Casts are not needed.&nbsp;A reference counting mechanism adds resiliency by stopping applications from destroying in-use OCI resources.</p>
</li>
<li>
<p>Provides an API that simplifies connection and resource management. For example, it automatically does session pool pinging to provide better High Availability.</p>
</li>
<li>
<p>Provides an alternative programming experience from OCI that uses a multiple getter and setter model for handling attributes.</p>
</li>
<li>
<p>Provides a sample Makefile that builds ODPI-C as a shared library. Or, the ODPI-C source code can be included in your project and built as you would build an OCI application.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-B71BBAF0-471D-4705-A2EF-92C4280326D8__GUID-2A8F4717-3C1B-4712-88CF-2382BA28A121">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p>Product Launch: <a class="olink odpi_c_interface" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=odpi_c_interface">Oracle Database Programming Interface for C (ODPI-C)</a>, for a list of ODPI-C supported features and a list of references including to its home page, code location on github, and documentation</p>
</li>
<li>
<p><a href="oci01int.htm#GUID-6895DB45-97AA-4738-9959-BD677D610186" title="Instant Client is a deployment choice and can be used for running production applications.Because Instant Client is a deployment feature, the number and size of files (client footprint) required to run an OCI application has been reduced. What character sets are supported by Instant Client Light.">OCI Instant Client</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Oracle C++ Call Interface (OCCI)</p>
<p>The Oracle C++ Call Interface (OCCI) is an application programming interface (API) that allows applications written in C++ to interact with one or more Oracle database servers. OCCI gives your programs the ability to perform the full range of database operations that are possible with an Oracle database server, including SQL statement processing and object manipulation.</p>
<div class="infoboxnotealso" id="GUID-B71BBAF0-471D-4705-A2EF-92C4280326D8__GUID-E44B9507-FB7D-48BA-BD22-8B10A60E0A73">
<p class="notep1">See Also:</p>
<p><a class="olink LNCPP-GUID-99077609-BFCC-4FF7-9D23-C45623DDD465" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=LNCPP-GUID-99077609-BFCC-4FF7-9D23-C45623DDD465">Introduction to OCCI</a> in <span><cite>Oracle C++ Call Interface Programmer&#39;s Guide</cite></span></p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Oracle Pro*C/C++ Precompiler</p>
<p>Oracle Pro*C/C++ Precompiler is a programming tool that enables the user to embed SQL statements in a high-level source program. The precompiler accepts the source program as input, translates the embedded SQL statements into standard Oracle runtime library calls, and generates a modified source program that you can compile, link, and execute in the usual way.</p>
<div class="infoboxnotealso" id="GUID-B71BBAF0-471D-4705-A2EF-92C4280326D8__GUID-2426A525-5741-4844-A4F9-345D05D994F7">
<p class="notep1">See Also:</p>
<p><a class="olink LNPCC-GUID-20CBCC27-EC6B-4651-92CC-7E008BD73611" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=LNPCC-GUID-20CBCC27-EC6B-4651-92CC-7E008BD73611">Introduction</a> to Oracle Pro*C/C++ Precompiler in <span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16117"></a>
<div class="props_rev_3"><a id="GUID-76C87AE9-7464-4259-B6EF-C2F7A92E93CF"></a>
<h3 id="LNOCI-GUID-76C87AE9-7464-4259-B6EF-C2F7A92E93CF" class="sect3">Parts of OCI</h3>
<div>
<p>OCI has the following functionality:</p>
<ul style="list-style-type: disc;">
<li>
<p>APIs to design a scalable, multithreaded application that can support large numbers of users securely</p>
</li>
<li>
<p>SQL access functions, for managing database access, processing SQL statements, and manipulating objects retrieved from an Oracle database</p>
</li>
<li>
<p>Data type mapping and manipulation functions, for manipulating data attributes of Oracle types</p>
</li>
<li>
<p>Data loading functions, for loading data directly into the database without using SQL statements</p>
</li>
<li>
<p>External procedure functions, for writing C callbacks from PL/SQL</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16118"></a>
<div class="props_rev_3"><a id="GUID-33E27E78-ED24-479F-A77C-86F576A0DED8"></a>
<h3 id="LNOCI-GUID-33E27E78-ED24-479F-A77C-86F576A0DED8" class="sect3">Procedural and Nonprocedural Elements</h3>
<div>
<p>OCI enables you to develop scalable, multithreaded applications in a multitier architecture that combines the nonprocedural data access power of structured query language (SQL) with the procedural capabilities of C and C++.</p>
<ul style="list-style-type: disc;">
<li>
<p>In a nonprocedural language program, the set of data to be operated on is specified, but what operations are to be performed, or how the operations are to be conducted, is not specified. The nonprocedural nature of SQL makes it an easy language to learn and to use to perform database transactions. It is also the standard language used to access and manipulate data in modern relational and object-relational database systems.</p>
</li>
<li>
<p>In a procedural language program, the execution of most statements depends on previous or subsequent statements and on control structures, such as loops or conditional branches, that are not available in SQL. The procedural nature of these languages makes them more complex than SQL, but it also makes them more flexible and powerful.</p>
</li>
</ul>
<p>The combination of both nonprocedural and procedural language elements in an OCI program provides easy access to an Oracle database in a structured programming environment.</p>
<p>OCI supports all SQL data definition, data manipulation, query, and transaction control facilities that are available through an Oracle database. For example, an OCI program can run a query against an Oracle database. The query can require the program to supply data to the database using input (bind) variables, as follows:</p>
<pre dir="ltr">SELECT name FROM employees WHERE empno = :empnumber;
</pre>
<p>In the preceding SQL statement, <code class="codeph">:empnumber</code> is a placeholder for a value that is to be supplied by the application.</p>
<p>You can also take advantage of PL/SQL, Oracle&#39;s procedural extension to SQL. The applications you develop can be more powerful and flexible than applications written in SQL alone. OCI also provides facilities for accessing and manipulating objects in a database.</p>
</div>
</div>
<a id="LNOCI16119"></a>
<div class="props_rev_3"><a id="GUID-777626DD-9CFE-423A-BECB-5E4484A06049"></a>
<h3 id="LNOCI-GUID-777626DD-9CFE-423A-BECB-5E4484A06049" class="sect3">Object Support</h3>
<div>
<p>OCI has facilities for working with <span class="italic">object types</span> and <span class="italic">objects</span>.</p>
<p>An object type is a user-defined data structure representing an abstraction of a real-world entity. For example, the database might contain a definition of a <code class="codeph">person</code> object. That object might have <span class="italic">attributes</span>&mdash;<code class="codeph">first_name</code>, <code class="codeph">last_name</code>, and <code class="codeph">age</code>&mdash;to represent a person&#39;s identifying characteristics.</p>
<p>The object type definition serves as the basis for creating objects that represent instances of the object type by using the object type as a structural definition, you could create a <code class="codeph">person</code> object with the attribute values &#39;John&#39;, &#39;Bonivento&#39;, and &#39;30&#39;. Object types may also contain <span class="italic">methods</span>&mdash;programmatic functions that represent the behavior of that object type.</p>
<p>OCI includes functions that extend the capabilities of OCI to handle objects in an Oracle Database. These capabilities include:</p>
<ul style="list-style-type: disc;">
<li>
<p>Executing SQL statements that manipulate object data and schema information</p>
</li>
<li>
<p>Passing of object references and instances as input variables in SQL statements</p>
</li>
<li>
<p>Declaring object references and instances as variables to receive the output of SQL statements</p>
</li>
<li>
<p>Fetching object references and instances from a database</p>
</li>
<li>
<p>Describing the properties of SQL statements that return object instances and references</p>
</li>
<li>
<p>Describing PL/SQL procedures or functions with object parameters or results</p>
</li>
<li>
<p>Extension of commit and rollback calls to synchronize object and relational functionality</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-777626DD-9CFE-423A-BECB-5E4484A06049__GUID-02950F3B-660E-4452-BAB5-59336491D242">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-EB950D34-489C-4921-B0BC-107E1CC82F65">Encapsulated Interfaces</a> which describes additional OCI calls that are provided to support manipulation of objects after they have been accessed by SQL statements</p>
</li>
<li>
<p><a class="olink CNCPT88817" target="_blank" href="../CNCPT/tablecls.htm#CNCPT88817"><span><cite>Oracle Database Concepts</cite></span></a></p>
</li>
<li>
<p><a class="olink ADOBJ001" target="_blank" href="../ADOBJ/adobjint.htm#ADOBJ001"><span><cite>Oracle Database Object-Relational Developer&#39;s Guide</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI16120"></a>
<div class="props_rev_3"><a id="GUID-0938E7F8-63F4-4D27-B86C-C27E8E6099F2"></a>
<h3 id="LNOCI-GUID-0938E7F8-63F4-4D27-B86C-C27E8E6099F2" class="sect3">SQL Statements</h3>
<div>
<p>One of the main tasks of an OCI application is to process SQL statements.</p>
<p>Different types of SQL statements require different processing steps in your program. It is important to take this into account when coding your OCI application. Oracle Database recognizes several types of SQL statements:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-65A5DBCA-F6A6-4BD1-83D1-6A6D56F86808">Data Definition Language</a> (DDL)</p>
</li>
<li>
<p><a href="oci01int.htm#GUID-301496D9-4092-4A6E-B6B5-6245C68B4B72" title="OCI applications treat transaction control, session control, and system control statements as if they were DML statements.">Control Statements</a></p>
<ul style="list-style-type: disc;">
<li>
<p>Transaction Control</p>
</li>
<li>
<p>Session Control</p>
</li>
<li>
<p>System Control</p>
</li>
</ul>
</li>
<li>
<p><a href="oci01int.htm#GUID-843C90F1-A92B-49C8-9A77-1515F628A7DF" title="Data manipulation language (DML) statements can change data in the database tables.">Data Manipulation Language</a> (DML)</p>
</li>
<li>
<p><a href="oci01int.htm#GUID-EFBB2D51-746E-4A98-A223-8BFC7AB27E3D" title="Queries are statements that retrieve data from a database.">Queries</a></p>
<div class="infobox-note" id="GUID-0938E7F8-63F4-4D27-B86C-C27E8E6099F2__GUID-940AEF1F-0987-4F62-97FF-0354071F3C7D">
<p class="notep1">Note:</p>
<p>Queries are often classified as DML statements, but OCI applications process queries differently, so they are considered separately here.</p>
</div>
</li>
</ul>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-3828E8D5-7A54-42F8-A244-7AFC75ED9C1B" title="PL/SQL is Oracle&#39;s procedural extension to the SQL language.">PL/SQL</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-CC37E0A5-0993-4E14-9109-9DC6F4855C8C" title="OCI processes SQL statements as text strings that an application passes to the database on execution.">Embedded SQL</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-D64A518B-AE76-449D-8392-54394FB7A42C" title="This guide uses special terms to refer to the different parts of a SQL statement.">Special OCI Terms for SQL</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-0938E7F8-63F4-4D27-B86C-C27E8E6099F2__GUID-FF788FB2-E738-4D25-AD2D-3031F95A43AA">
<p class="notep1">See Also:</p>
<p><a href="oci04sql.htm#GUID-3F20EDC9-D436-4A54-9698-4FA95988A819" title="This chapter discusses the concepts and steps involved in processing SQL statements with Oracle Call Interface.">Using SQL Statements in OCI</a></p>
</div>
</div>
<a id="LNOCI16121"></a>
<div class="props_rev_3"><a id="GUID-65A5DBCA-F6A6-4BD1-83D1-6A6D56F86808"></a>
<h4 id="LNOCI-GUID-65A5DBCA-F6A6-4BD1-83D1-6A6D56F86808" class="sect4">Data Definition Language</h4>
<div>
<p>Data definition language (DDL) statements manage schema objects in the database. DDL statements create new tables, drop old tables, and establish other schema objects. They also control access to schema objects.</p>
<p>The following is an example of creating and specifying access to a table:</p>
<pre dir="ltr">CREATE TABLE employees
    (name       VARCHAR2(20),
     ssn        VARCHAR2(12),
     empno      NUMBER(6),
     mgr        NUMBER(6),
     salary     NUMBER(6));

GRANT UPDATE, INSERT, DELETE ON employees TO donna;
REVOKE UPDATE ON employees FROM jamie;
</pre>
<p>DDL statements also allow you to work with objects in the Oracle database, as in the following series of statements that create an object table:</p>
<pre dir="ltr">CREATE TYPE person_t AS OBJECT (
    name     VARCHAR2(30),
    ssn      VARCHAR2(12),
    address  VARCHAR2(50));

CREATE TABLE person_tab OF person_t;
</pre></div>
</div>
<a id="LNOCI16122"></a>
<div class="props_rev_3"><a id="GUID-301496D9-4092-4A6E-B6B5-6245C68B4B72"></a>
<h4 id="LNOCI-GUID-301496D9-4092-4A6E-B6B5-6245C68B4B72" class="sect4">Control Statements</h4>
<div>
<p>OCI applications treat transaction control, session control, and system control statements as if they were DML statements.</p>
<div class="infoboxnotealso" id="GUID-301496D9-4092-4A6E-B6B5-6245C68B4B72__GUID-363BCEA0-F988-4BC1-BABD-4A7219D2EFC7">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF30042" target="_blank" href="../SQLRF/statements_1001.htm#SQLRF30042"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for information about these types of statements</p>
</div>
</div>
</div>
<a id="LNOCI16123"></a>
<div class="props_rev_3"><a id="GUID-843C90F1-A92B-49C8-9A77-1515F628A7DF"></a>
<h4 id="LNOCI-GUID-843C90F1-A92B-49C8-9A77-1515F628A7DF" class="sect4">Data Manipulation Language</h4>
<div>
<p>Data manipulation language (DML) statements can change data in the database tables.</p>
<p>For example, DML statements are used to:</p>
<ul style="list-style-type: disc;">
<li>
<p>Insert new rows into a table</p>
</li>
<li>
<p>Update column values in existing rows</p>
</li>
<li>
<p>Delete rows from a table</p>
</li>
<li>
<p>Lock a table in the database</p>
</li>
<li>
<p>Explain the execution plan for a SQL statement</p>
</li>
<li>
<p>Require an application to supply data to the database using input (bind) variables</p>
<div class="infoboxnotealso" id="GUID-843C90F1-A92B-49C8-9A77-1515F628A7DF__GUID-82ADBCB7-0C4E-4E9E-AC4C-CAAA19A36AFD">
<p class="notep1">See Also:</p>
<p><a href="oci04sql.htm#GUID-CB348BD8-9A45-4921-B397-ADFE96B75C70" title="Most DML statements, and some queries (such as those with a WHERE clause), require a program to pass data to Oracle Database as part of a SQL or PL/SQL statement.">About Binding Placeholders in OCI</a> for more information about input bind variables</p>
</div>
</li>
</ul>
<p>DML statements also allow you to work with objects in the Oracle database, as in the following example, which inserts an instance of type <code class="codeph">person_t</code> into the object table <code class="codeph">person_tab</code>:</p>
<pre dir="ltr">INSERT INTO person_tab
    VALUES (person_t(&#39;Steve May&#39;,&#39;987-65-4320&#39;,&#39;146 Winfield Street&#39;));
</pre></div>
</div>
<a id="LNOCI16124"></a>
<div class="props_rev_3"><a id="GUID-EFBB2D51-746E-4A98-A223-8BFC7AB27E3D"></a>
<h4 id="LNOCI-GUID-EFBB2D51-746E-4A98-A223-8BFC7AB27E3D" class="sect4">Queries</h4>
<div>
<p>Queries are statements that retrieve data from a database.</p>
<p>A query can return zero, one, or many rows of data. All queries begin with the SQL keyword <code class="codeph">SELECT</code>, as in the following example:</p>
<pre dir="ltr">SELECT dname FROM dept
     WHERE deptno = 42;
</pre>
<p>Queries access data in tables, and they are often classified with DML statements. However, OCI applications process queries differently, so they are considered separately in this guide.</p>
<p>Queries can require the program to supply data to the database using input (bind) variables, as in the following example:</p>
<pre dir="ltr">SELECT name 
    FROM employees
    WHERE empno = :empnumber;
</pre>
<p>In the preceding SQL statement, <code class="codeph">:empnumber</code> is a placeholder for a value that is to be supplied by the application.</p>
<p>When processing a query, an OCI application also must define output variables to receive the returned results. In the preceding statement, you must define an output variable to receive any <code class="codeph">name</code> values returned from the query.</p>
<div class="infoboxnotealso" id="GUID-EFBB2D51-746E-4A98-A223-8BFC7AB27E3D__GUID-E848EE2C-F3BD-4DE3-A172-32F69CB05FE0">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci05bnd.htm#GUID-77A26CEA-1C41-46A2-866C-622F9FEB5482" title="This chapter expands on the basic concepts of binding and defining, and provides more detailed information about the different types of binds and defines you can use in OCI applications.">Overview of Binding in OCI</a> for more information about input bind variables</p>
</li>
<li>
<p><a href="oci05bnd.htm#GUID-8A09BC68-4C3D-4977-86C9-134F73121E26" title="Query statements return data from the database to your application.">Overview of Defining in OCI</a> for information about defining output variables</p>
</li>
<li>
<p><a href="oci04sql.htm#GUID-3F20EDC9-D436-4A54-9698-4FA95988A819" title="This chapter discusses the concepts and steps involved in processing SQL statements with Oracle Call Interface.">Using SQL Statements in OCI</a> for detailed information about how SQL statements are processed in an OCI program</p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI16125"></a>
<div class="props_rev_3"><a id="GUID-3828E8D5-7A54-42F8-A244-7AFC75ED9C1B"></a>
<h4 id="LNOCI-GUID-3828E8D5-7A54-42F8-A244-7AFC75ED9C1B" class="sect4">PL/SQL</h4>
<div>
<p>PL/SQL is Oracle&#39;s procedural extension to the SQL language.</p>
<p>PL/SQL processes tasks that are more complicated than simple queries and SQL data manipulation language statements. PL/SQL allows some constructs to be grouped into a single block and executed as a unit. Among these are:</p>
<ul style="list-style-type: disc;">
<li>
<p>One or more SQL statements</p>
</li>
<li>
<p>Variable declarations</p>
</li>
<li>
<p>Assignment statements</p>
</li>
<li>
<p>Procedural control statements (IF...THEN...ELSE statements and loops)</p>
</li>
<li>
<p>Exception handling</p>
</li>
</ul>
<p>You can use PL/SQL blocks in your OCI program to:</p>
<ul style="list-style-type: disc;">
<li>
<p>Call Oracle Database stored procedures and stored functions</p>
</li>
<li>
<p>Combine procedural control statements with several SQL statements, so that they are executed as a unit</p>
</li>
<li>
<p>Access special PL/SQL features such as records, tables, cursor FOR loops, and exception handling</p>
</li>
<li>
<p>Use cursor variables</p>
</li>
<li>
<p>Take advantage of implicit result set capability that allows reuse of existing stored procedure designs that return implicit result sets</p>
</li>
<li>
<p>Access and manipulate objects in an Oracle database</p>
</li>
</ul>
<p>The following PL/SQL example issues a SQL statement to retrieve values from a table of employees, given a particular employee number. This example also demonstrates the use of placeholders in PL/SQL statements.</p>
<pre dir="ltr">BEGIN
    SELECT ename, sal, comm INTO :emp_name, :salary, :commission
    FROM emp
    WHERE empno = :emp_number;
END;
</pre>
<p>Note that the placeholders in this statement are not PL/SQL variables. They represent input values passed to the database when the statement is processed. These placeholders must be bound to C language variables in your program.</p>
<div class="infoboxnotealso" id="GUID-3828E8D5-7A54-42F8-A244-7AFC75ED9C1B__GUID-797AF221-E9EC-4720-8AF1-6ED9571AD30F">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink LNPLS141" target="_blank" href="../LNPLS/overview.htm#LNPLS141"><span><cite>Oracle Database PL/SQL Language Reference</cite></span></a> for information about coding PL/SQL blocks</p>
</li>
<li>
<p><a href="oci05bnd.htm#GUID-6D3F22A5-BA2E-4A22-BBFC-7FDA3B22557D" title="You process a PL/SQL block by placing the block in a string variable, binding any variables, and then executing the statement containing the block, just as you would with a single SQL statement.">About Binding Placeholders in PL/SQL</a> for information about working with placeholders in PL/SQL</p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI16126"></a>
<div class="props_rev_3"><a id="GUID-CC37E0A5-0993-4E14-9109-9DC6F4855C8C"></a>
<h4 id="LNOCI-GUID-CC37E0A5-0993-4E14-9109-9DC6F4855C8C" class="sect4">Embedded SQL</h4>
<div>
<p>OCI processes SQL statements as text strings that an application passes to the database on execution.</p>
<p>The Oracle precompilers (Pro*C/C++, Pro*COBOL, Pro*FORTRAN) allow you to embed SQL statements directly into your application code. A separate precompilation step is then necessary to generate an executable application.</p>
<p>It is possible to mix OCI calls and embedded SQL in a precompiler program.</p>
<div class="infoboxnotealso" id="GUID-CC37E0A5-0993-4E14-9109-9DC6F4855C8C__GUID-6309A564-B3A7-4027-9D2C-9B52F7A2B1D0">
<p class="notep1">See Also:</p>
<p><a class="olink LNPCC3059" target="_blank" href="../LNPCC/pc_02prc.htm#LNPCC3059"><span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></a></p>
</div>
</div>
</div>
<a id="LNOCI16127"></a>
<div class="props_rev_3"><a id="GUID-D64A518B-AE76-449D-8392-54394FB7A42C"></a>
<h4 id="LNOCI-GUID-D64A518B-AE76-449D-8392-54394FB7A42C" class="sect4">Special OCI Terms for SQL</h4>
<div>
<p>This guide uses special terms to refer to the different parts of a SQL statement.</p>
<p>For example, consider the following SQL statement:</p>
<pre dir="ltr">SELECT customer, address
FROM customers
WHERE bus_type = &#39;SOFTWARE&#39;
AND sales_volume = :sales;
</pre>
<p>It contains the following parts:</p>
<ul style="list-style-type: disc;">
<li>
<p>A SQL <span class="italic">command -</span> <code class="codeph">SELECT</code></p>
</li>
<li>
<p>Two <span class="italic">select-list items</span> - <code class="codeph">customer</code> and <code class="codeph">address</code></p>
</li>
<li>
<p>A <span class="italic">table name</span> in the <code class="codeph">FROM</code> clause - <code class="codeph">customers</code></p>
</li>
<li>
<p>Two <span class="italic">column names</span> in the <code class="codeph">WHERE</code> clause - <code class="codeph">bus_type</code> and <code class="codeph">sales_volume</code></p>
</li>
<li>
<p>A <span class="italic">literal input value</span> in the <code class="codeph">WHERE</code> clause - &#39;<code class="codeph">SOFTWARE</code>&#39;</p>
</li>
<li>
<p>A <span class="italic">placeholder</span> for an input variable in the <code class="codeph">WHERE</code> clause - <code class="codeph">:sales</code></p>
</li>
</ul>
<p>When you develop your OCI application, you call routines that specify to the Oracle database the address (location) of input and output variables of your program. In this guide, specifying the address of a placeholder variable for data input is called a <span class="italic">bind operation</span>. Specifying the address of a variable to receive select-list items is called a <span class="italic">define operation</span>.</p>
<p>For PL/SQL, both input and output specifications are called bind operations.</p>
<div class="infoboxnotealso" id="GUID-D64A518B-AE76-449D-8392-54394FB7A42C__GUID-2F7F5540-2308-4595-89F5-431DBDF115FD">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li><a href="oci04sql.htm#GUID-3F20EDC9-D436-4A54-9698-4FA95988A819" title="This chapter discusses the concepts and steps involved in processing SQL statements with Oracle Call Interface.">Using SQL Statements in OCI</a> for more information about these terms and operations</li>
</ul>
</div>
</div>
</div>
</div>
<a id="LNOCI16128"></a>
<div class="props_rev_3"><a id="GUID-EB950D34-489C-4921-B0BC-107E1CC82F65"></a>
<h3 id="LNOCI-GUID-EB950D34-489C-4921-B0BC-107E1CC82F65" class="sect3">Encapsulated Interfaces</h3>
<div>
<p>All the data structures that are used by OCI calls are encapsulated in the form of opaque interfaces that are called handles. A <span class="italic">handle</span> is an opaque pointer to a storage area allocated by the OCI library that stores context information, connection information, error information, or bind information about a SQL or PL/SQL statement. A client allocates certain types of handles, populates one or more of those handles through well-defined interfaces, and sends requests to the server using those handles. In turn, applications can access the specific information contained in a handle by using accessor functions.</p>
<p>The OCI library manages a hierarchy of handles. Encapsulating the OCI interfaces with these handles has several benefits to the application developer, including:</p>
<ul style="list-style-type: disc;">
<li>
<p>Reduction of server-side state information that must be retained, thereby reducing server-side memory usage</p>
</li>
<li>
<p>Improvement of productivity by eliminating the need for global variables, making error reporting easier, and providing consistency in the way OCI variables are accessed and used</p>
</li>
<li>
<p>Allows changes to be made to the underlying structure without affecting applications</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16129"></a>
<div class="props_rev_3"><a id="GUID-9222D817-7693-4AE6-BF1C-BEBB59DDCDE7"></a>
<h3 id="LNOCI-GUID-9222D817-7693-4AE6-BF1C-BEBB59DDCDE7" class="sect3">Simplified User Authentication and Password Management</h3>
<div>
<p>OCI provides application developers with simplified user authentication and password management in several ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>OCI enables a single OCI application to authenticate and maintain multiple users.</p>
</li>
<li>
<p>OCI enables the application to update a user&#39;s password, which is particularly helpful if an expired password message is returned by an authentication attempt.</p>
</li>
</ul>
<p>OCI supports two types of login sessions:</p>
<ul style="list-style-type: disc;">
<li>
<p>A simplified login function for sessions by which a single user connects to the database using a login name and password</p>
</li>
<li>
<p>A mechanism by which a single OCI application authenticates and maintains multiple sessions by separating the login session (the session created when a user logs in to an Oracle database) from the user sessions (all other sessions created by a user)</p>
</li>
</ul>
<p>Privileged connections, such as <code class="codeph">SYSDBA</code>, <code class="codeph">SYSOPER</code> and others, are also supported.</p>
</div>
</div>
<a id="LNOCI16130"></a>
<div class="props_rev_3"><a id="GUID-2EB428B9-A074-4B79-BB3E-4310317F2A26"></a>
<h3 id="LNOCI-GUID-2EB428B9-A074-4B79-BB3E-4310317F2A26" class="sect3">Features to Improve Application Performance and Scalability</h3>
<div>
<p>OCI provides several feature extensions to improve application performance and scalability. Application performance has been improved by reducing the number of client to server round-trips required, and scalability improvements have been made by reducing the amount of state information that must be retained on the server side. Some of these features include:</p>
<ul style="list-style-type: disc;">
<li>
<p>Statement caching to improve performance by caching executable statements that are used repeatedly</p>
</li>
<li>
<p>Client result caching to limit the number of round trips to the database server</p>
</li>
<li>
<p>Implicit prefetching of <code class="codeph">SELECT</code> statement result sets to eliminate the describe round-trip, reduce round-trips, and reduce memory usage</p>
</li>
<li>
<p>Elimination of open and close cursor round-trips</p>
</li>
<li>
<p>Support for multithreaded environments</p>
</li>
<li>
<p>Session multiplexing over connections</p>
</li>
<li>
<p>Consistent support for a variety of configurations, including standard two-tier client/server configurations, server-to-server transaction coordination, and three-tier transaction processing (TP)-monitor configurations</p>
</li>
<li>
<p>Consistent support for local and global transactions, including support for the XA interface&#39;s TM_JOIN operation</p>
</li>
<li>
<p>Improved scalability by providing the ability to concentrate connections, processes, and sessions across users on connections and by eliminating the need for separate sessions to be created for each branch of a global transaction</p>
</li>
<li>
<p>Allowing applications to authenticate multiple users and allow transactions to be started on their behalf</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16131"></a>
<div class="props_rev_3"><a id="GUID-F091C7FC-97CE-4C94-9D62-F9308550A5CC"></a>
<h3 id="LNOCI-GUID-F091C7FC-97CE-4C94-9D62-F9308550A5CC" class="sect3">OCI Object Support</h3>
<div>
<p>OCI provides a comprehensive application programming interface for programmers seeking to use Oracle Database object capabilities.</p>
<p>These features can be divided into the following major categories:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-58F58AE4-0B26-4850-B512-20725267E9C8">Client-Side Object Cache</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-F94EE1BF-6E75-49BD-A592-29802CAD4072">Associative and Navigational Interfaces</a> to access and manipulate objects</p>
</li>
<li>
<p><a href="oci01int.htm#GUID-C330747C-53E6-4142-9585-D406279A97DA">OCI Runtime Environment for Objects</a></p>
</li>
<li>
<p><a href="oci01int.htm#GUID-191A5948-75B5-4F77-8177-75164928C7BC">Type Management: Mapping and Manipulation Functions</a> to access information about object types and control data attributes of Oracle types</p>
</li>
<li>
<p><a href="oci01int.htm#GUID-6C6CDCCC-AFE5-4D8C-9EF9-85C50281C10B">Object Type Translator</a> (OTT) utility, for mapping internal Oracle Database schema information to client-side language bind variables</p>
</li>
</ul>
</div>
<a id="LNOCI16132"></a>
<div class="props_rev_3"><a id="GUID-58F58AE4-0B26-4850-B512-20725267E9C8"></a>
<h4 id="LNOCI-GUID-58F58AE4-0B26-4850-B512-20725267E9C8" class="sect4">Client-Side Object Cache</h4>
<div>
<p>The object cache is a client-side memory buffer that provides lookup and memory management support for objects. It stores and tracks object instances that have been fetched by an OCI application from the server to the client side. The object cache is created when the OCI environment is initialized. When multiple applications run against the same server, each has its own object cache. The cache tracks the objects that are currently in memory, maintains references to objects, manages automatic object swapping, and tracks the meta-attributes or type information about objects. The object cache provides the following features to OCI applications:</p>
<ul style="list-style-type: disc;">
<li>
<p>Improved application performance by reducing the number of client/server round-trips required to fetch and operate on objects</p>
</li>
<li>
<p>Enhanced scalability by supporting object swapping from the client-side cache</p>
</li>
<li>
<p>Improved concurrency by supporting object-level locking</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16133"></a>
<div class="props_rev_3"><a id="GUID-F94EE1BF-6E75-49BD-A592-29802CAD4072"></a>
<h4 id="LNOCI-GUID-F94EE1BF-6E75-49BD-A592-29802CAD4072" class="sect4">Associative and Navigational Interfaces</h4>
<div>
<p>Applications using OCI can access objects in an Oracle database through several types of interfaces:</p>
<ul style="list-style-type: disc;">
<li>
<p>Using SQL <code class="codeph">SELECT</code>, <code class="codeph">INSERT</code>, and <code class="codeph">UPDATE</code> statements</p>
</li>
<li>
<p>Using a C-style <span class="italic">pointer chasing</span> scheme to access objects in the client-side cache by traversing the corresponding smart pointers or <code class="codeph">REF</code>s</p>
</li>
</ul>
<p>OCI provides a set of functions with extensions to support object manipulation using SQL <code class="codeph">SELECT</code>, <code class="codeph">INSERT</code>, and <code class="codeph">UPDATE</code> statements. To access Oracle Database objects, these SQL statements use a consistent set of steps as if they were accessing relational tables. OCI provides the following sets of functions required to access objects:</p>
<ul style="list-style-type: disc;">
<li>
<p>Binding and defining object type instances and references as input and output variables of SQL statements</p>
</li>
<li>
<p>Executing SQL statements that contain object type instances and references</p>
</li>
<li>
<p>Fetching object type instances and references</p>
</li>
<li>
<p>Describing select-list items of an Oracle object type</p>
</li>
</ul>
<p>OCI also provides a set of functions using a C-style pointer chasing scheme to access objects after they have been fetched into the client-side cache by traversing the corresponding smart pointers or <code class="codeph">REF</code>s. This <span class="italic">navigational interface</span> provides functions for:</p>
<ul style="list-style-type: disc;">
<li>
<p>Instantiating a copy of a referenceable persistent object (that is, of a persistent object with object ID in the client-side cache) by <span class="italic">pinning</span> its smart pointer or <code class="codeph">REF</code></p>
</li>
<li>
<p>Traversing a sequence of objects that are <span class="italic">connected</span> to each other by traversing the <code class="codeph">REF</code>s that point from one to the other</p>
</li>
<li>
<p>Dynamically getting and setting values of an object&#39;s attributes</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16134"></a>
<div class="props_rev_3"><a id="GUID-C330747C-53E6-4142-9585-D406279A97DA"></a>
<h4 id="LNOCI-GUID-C330747C-53E6-4142-9585-D406279A97DA" class="sect4">OCI Runtime Environment for Objects</h4>
<div>
<p>OCI provides functions for objects to manage how Oracle Database objects are used on the client side. These functions provide for:</p>
<ul style="list-style-type: disc;">
<li>
<p>Connecting to an Oracle database server to access its object functionality, including initializing a session, logging on to a database server, and registering a connection</p>
</li>
<li>
<p>Setting up the client-side object cache and tuning its parameters</p>
</li>
<li>
<p>Getting errors and warning messages</p>
</li>
<li>
<p>Controlling transactions that access objects in the database</p>
</li>
<li>
<p>Associatively accessing objects through SQL</p>
</li>
<li>
<p>Describing PL/SQL procedures or functions whose parameters or results are Oracle types</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI16135"></a>
<div class="props_rev_3"><a id="GUID-191A5948-75B5-4F77-8177-75164928C7BC"></a>
<h4 id="LNOCI-GUID-191A5948-75B5-4F77-8177-75164928C7BC" class="sect4">Type Management: Mapping and Manipulation Functions</h4>
<div>
<p>OCI provides two sets of functions to work with Oracle Database objects:</p>
<ul style="list-style-type: disc;">
<li>
<p>Type Mapping functions allow applications to map attributes of an Oracle schema represented in the server as internal Oracle data types to their corresponding host language types.</p>
</li>
<li>
<p>Type Manipulation functions allow host language applications to manipulate individual attributes of an Oracle schema such as setting and getting their values and flushing their values to the server.</p>
</li>
</ul>
<p>Additionally, the <code class="codeph">OCIDescribeAny()</code> function provides information about objects stored in the database.</p>
</div>
</div>
<a id="LNOCI16136"></a>
<div class="props_rev_3"><a id="GUID-6C6CDCCC-AFE5-4D8C-9EF9-85C50281C10B"></a>
<h4 id="LNOCI-GUID-6C6CDCCC-AFE5-4D8C-9EF9-85C50281C10B" class="sect4">Object Type Translator</h4>
<div>
<p>The Object Type Translator (OTT) utility translates schema information about Oracle object types into client-side language bindings of host language variables, such as structures. The OTT takes as input an <code class="codeph">intype</code> file that contains metadata information about Oracle schema objects. It generates an <code class="codeph">outtype</code> file and the header and implementation files that must be included in a C application that runs against the object schema. Both OCI applications and Pro*C/C++ precompiler applications may include code generated by the OTT. The OTT is beneficial because it:</p>
<ul style="list-style-type: disc;">
<li>
<p>Improves application developer productivity: OTT eliminates the need for you to code the host language variables that correspond to schema objects.</p>
</li>
<li>
<p>Maintains SQL as the data definition language of choice: By providing the ability to automatically map Oracle schema objects that are created using SQL to host language variables, OTT facilitates the use of SQL as the data definition language of choice. This in turn allows Oracle Database to support a consistent model of data.</p>
</li>
<li>
<p>Facilitates schema evolution of object types: OTT regenerates included header files when the schema is changed, allowing Oracle applications to support schema evolution.</p>
</li>
</ul>
<p>OTT is typically invoked from the command line by specifying the <code class="codeph">intype</code> file, the <code class="codeph">outtype</code> file, and the specific database connection. With Oracle Database, OTT can only generate C structures that can either be used with OCI programs or with the Pro*C/C++ precompiler programs.</p>
</div>
</div>
</div>
<a id="LNOCI16137"></a>
<div class="props_rev_3"><a id="GUID-C27DFAA6-B396-469C-ABE0-83DBFC8DEC6A"></a>
<h3 id="LNOCI-GUID-C27DFAA6-B396-469C-ABE0-83DBFC8DEC6A" class="sect3">OCI Support for Oracle Streams Advanced Queuing</h3>
<div>
<p>OCI provides an interface to Oracle Streams Advanced Queuing (Streams AQ) feature.</p>
<p>Streams AQ provides message queuing as an integrated part of Oracle Database. Streams AQ provides this functionality by integrating the queuing system with the database, thereby creating a <span class="italic">message-enabled database.</span> By providing an integrated solution, Streams AQ frees you to devote your efforts to your specific business logic rather than having to construct a messaging infrastructure.</p>
<div class="infoboxnotealso" id="GUID-C27DFAA6-B396-469C-ABE0-83DBFC8DEC6A__GUID-234B8089-71E4-4C39-996B-59B4B7C58EA9">
<p class="notep1">See Also:</p>
<p><a href="oci09adv.htm#GUID-FF4165B2-A44C-4F76-AC26-DA860F340CA8" title="OCI provides an interface to the Streams Advanced Queuing (Streams AQ) feature. Streams AQ provides message queuing as an integrated part of Oracle Database.">OCI and Streams Advanced Queuing</a></p>
</div>
</div>
</div>
<a id="LNOCI16138"></a>
<div class="props_rev_3"><a id="GUID-AF569BC4-3087-45F3-AA56-1CBCBB00EF2D"></a>
<h3 id="LNOCI-GUID-AF569BC4-3087-45F3-AA56-1CBCBB00EF2D" class="sect3">XA Library Support</h3>
<div>
<p>OCI supports the Oracle XA library.</p>
<p>The <code class="codeph">xa.h</code> header file is in the same location as all the other OCI header files. For Linux or UNIX, the path is <code class="codeph">$ORACLE_HOME/rdbms/public</code>. Users of the <code class="codeph">demo_rdbms.mk</code> file on Linux or UNIX are not affected because this make file includes the <code class="codeph">$ORACLE_HOME/rdbms/public</code> directory.</p>
<p>For Windows, the path is <span class="italic"><code class="codeph">ORACLE_BASE\ORACLE_HOME</code></span>\<code class="codeph">oci\include</code>.</p>
<div class="infoboxnotealso" id="GUID-AF569BC4-3087-45F3-AA56-1CBCBB00EF2D__GUID-1EC301ED-F8A2-4B5E-991D-3BF5545474B5">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ociadwin.htm#GUID-2129561A-A16C-4ADE-8B73-DBFED7F883D7" title="The database supports the use of XA dynamic registration.">Oracle XA Library</a> for more information about Windows and XA applications</p>
</li>
<li>
<p><a class="olink ADFNS017" target="_blank" href="../ADFNS/adfns_xa.htm#ADFNS017"><span><cite>Oracle Database Development Guide</cite></span></a> for information about developing applications with Oracle XA</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="LNOCI16139"></a>
<div class="props_rev_3"><a id="GUID-1B41866A-7D99-4335-8E73-E0BCF54CB532"></a>
<h2 id="LNOCI-GUID-1B41866A-7D99-4335-8E73-E0BCF54CB532" class="sect2">About Compatibility and Upgrading</h2>
<div>
<p>The following sections discuss issues concerning compatibility between different releases<a id="d15043e5426" class="indexterm-anchor"></a> of OCI client and server, changes in the OCI library routines, and upgrading an application from the release 7.<span class="italic">x</span> OCI to the current release of OCI.</p>
</div>
<a id="LNOCI16140"></a>
<div class="props_rev_3"><a id="GUID-44C7F521-5578-498E-AAC4-713F3E5C7C94"></a>
<h3 id="LNOCI-GUID-44C7F521-5578-498E-AAC4-713F3E5C7C94" class="sect3">Version Compatibility of Statically Linked and Dynamically Linked Applications</h3>
<div>
<p>What are the rules for relinking for a new release?</p>
<p>Here are the rules for relinking for a new release.</p>
<ul style="list-style-type: disc;">
<li>
<p>Statically linked OCI applications:</p>
<p>Statically linked OCI applications must be relinked for both major and minor releases, because the statically linked Oracle Database client-side library code may be incompatible with the error messages in the upgraded Oracle home. For example, if an error message was updated with additional parameters then it is no longer compatible with the statically linked code.</p>
</li>
<li>
<p>Dynamically linked OCI applications:</p>
<p>Dynamically linked OCI applications from Oracle Database 10<span class="italic">g</span> and later releases need not be relinked. That is, the Oracle Database client-side dynamic library is upwardly compatible with the previous version of the library. Oracle Universal Installer creates a symbolic link for the previous version of the library that resolves to the current version. Therefore, an application that is dynamically linked with the previous version of the Oracle Database client-side dynamic library does not need to be relinked to operate with the current version of the Oracle Database client-side library.</p>
<div class="infobox-note" id="GUID-44C7F521-5578-498E-AAC4-713F3E5C7C94__GUID-FDDA2AAE-DA81-46B6-AB20-6AE703515D55">
<p class="notep1">Note:</p>
<p>If the application is linked with a runtime library search path (such as <code class="codeph">-rpath</code> on Linux), then the application may still run with the version of Oracle Database client-side library it is linked with. To run with the current version of Oracle Database client-side library, it must be relinked.</p>
</div>
<div class="infoboxnotealso" id="GUID-44C7F521-5578-498E-AAC4-713F3E5C7C94__GUID-A5E9D897-B4F0-4688-A287-01E162AFE35E">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink UPGRD005" target="_blank" href="../UPGRD/intro.htm#UPGRD005"><span><cite>Oracle Database Upgrade Guide</cite></span></a> for information about compatibility and upgrading</p>
</li>
<li>
<p>The server versions supported currently are found on My Oracle Support <a class="olink mos_doc_207303_1" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=mos_doc_207303_1">Document 207303.1</a></p>
.</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<a id="LNOCI16141"></a>
<div class="props_rev_3"><a id="GUID-D849EF63-969E-44AE-A6B1-2FC3B669406D"></a>
<h3 id="LNOCI-GUID-D849EF63-969E-44AE-A6B1-2FC3B669406D" class="sect3">About Upgrading of Existing OCI Release 7 Applications</h3>
<div>
<p>OCI has been significantly improved with many features since OCI release 7. Applications that use the OCI release 7.3 API work unchanged against the current release of Oracle Database. They do need to be linked with the current client library. However, OCI release 7.3 API has been deprecated and this option will not be available in future Oracle releases.</p>
<p>OCI release 7 and the OCI calls of this release can be mixed in the same application and in the same transaction provided they are not mixed within the same statement execution. As a result, when migrating an existing OCI version 7 application you have the following two alternatives:</p>
<ul style="list-style-type: disc;">
<li>
<p>Upgrade to the current OCI client but do not modify the application: If you choose to upgrade from an Oracle release 7 OCI client to the current release OCI client, you need only link the new version of the OCI library and need <span class="italic">not</span> recompile your application. The relinked Oracle Database release 7 OCI applications work unchanged against a current Oracle Database. This option is deprecated and will not be available in future Oracle releases.</p>
</li>
<li>
<p>Upgrade to the current OCI client and modify the application: To use the performance and scalability benefits provided by the current OCI, however, you must modify your existing applications to use the current OCI programming paradigm, rebuild and relink them with the current OCI library, and run them against the current release of the Oracle database.</p>
</li>
</ul>
<p>If you want to use any of the object capabilities of the current Oracle Database release, you must upgrade your client to the current release of OCI.</p>
<div class="infobox-note" id="GUID-D849EF63-969E-44AE-A6B1-2FC3B669406D__GUID-10CC6FFD-D522-415B-BA94-A0CE6DE70DA3">
<p class="notep1">Note:</p>
<p>Applications using version 7 API will not be able to connect to Oracle Database 12<span class="italic">c</span> by default. Such applications willing to connect to Oracle Database 12<span class="italic">c</span> must set <code class="codeph">sqlnet.allowed_logon_version</code> to <code class="codeph">8</code>.</p>
</div>
</div>
</div>
<a id="LNOCI16143"></a><a id="LNOCI16142"></a>
<div class="props_rev_3"><a id="GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3"></a>
<h3 id="LNOCI-GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3" class="sect3">Obsolete OCI Routines</h3>
<div>
<div class="section">
<p>Release 8.0 of the OCI introduced an entirely new set of functions that were not available in release 7.3. Oracle strongly recommends that new applications use the new calls to improve performance and provide increased functionality. Future releases of Oracle will not be supporting the release 7.3 API.</p>
<p><a href="oci01int.htm#GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3__G435463" title="This table has 2 columns. Column 1 is the 7.x OCI routine name and column 2 is its equivalent or similar later OCI routine name.">Table 1-1</a> lists the 7.<span class="italic">x</span> OCI calls with their later equivalents. For more information about the OCI calls, see the function descriptions in this guide. For more information about the 7<span class="italic">.x</span> calls, see <span class="italic">Programmer&#39;s Guide to the Oracle Call Interface, Release 7.3</span>.</p>
<div class="infobox-note" id="GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3__GUID-5C677D27-42F2-425C-8DCA-9FFDEA84B714">
<p class="notep1">Note:</p>
<p>In many cases the new or current OCI routines do not map directly onto the 7.<span class="italic">x</span> routines, so it almost may not be possible to simply replace one function call and parameter list with another. Additional program logic may be required before or after the new or current call is made. See the remaining chapters, in particular <a href="oci02bas.htm#GUID-4CFB8AF7-EF05-4E0F-847F-2D0710E552C5" title="This chapter introduces concepts and procedures involved in programming with OCI.">OCI Programming Basics</a> of this guide for more information.</p>
</div>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3__G435463">
<p class="titleintable">Table 1-1 Obsolescent OCI Functions</p>
<table class="cellalignment6175" title="Obsolescent OCI Functions " summary="This table has 2 columns. Column 1 is the 7.x OCI routine name and column 2 is its equivalent or similar later OCI routine name.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6254" id="d15043e6009">7.x OCI Routine</th>
<th class="cellalignment6253" id="d15043e6015">Equivalent or Similar Later OCI Routine</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6020" headers="d15043e6009">
<p><code class="codeph">obindps(), obndra(), obndrn(), obndrv()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6020 d15043e6015">
<p><code class="codeph">OCIBindByName()</code>, <code class="codeph">OCIBindByPos()</code> (Note: additional bind calls may be necessary for some data types)</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6033" headers="d15043e6009">
<p><code class="codeph">obreak()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6033 d15043e6015">
<p><code class="codeph">OCIBreak()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6042" headers="d15043e6009">
<p><code class="codeph">ocan()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6042 d15043e6015">
<p>none</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6050" headers="d15043e6009">
<p><code class="codeph">oclose()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6050 d15043e6015">
<p>Note: cursors are not used in release 8<span class="italic">.</span>x or later</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6061" headers="d15043e6009">
<p><code class="codeph">ocof(), ocon()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6061 d15043e6015">
<p><code class="codeph">OCIStmtExecute()</code> with <code class="codeph">OCI_COMMIT_ON_SUCCESS</code> mode</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6074" headers="d15043e6009">
<p><code class="codeph">ocom()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6074 d15043e6015">
<p><code class="codeph">OCITransCommit()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6083" headers="d15043e6009">
<p><code class="codeph">odefin(), odefinps()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6083 d15043e6015">
<p><code class="codeph">OCIDefineByPos()</code> (Note: additional define calls may be necessary for some data types)</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6093" headers="d15043e6009">
<p><code class="codeph">odescr()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6093 d15043e6015">
<p>Note: schema objects are described with OCIDescribeAny(). A describe, as used in release 7.<span class="italic">x</span>, most often be done by calling OCIAttrGet() on the statement handle after SQL statement execution.</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6104" headers="d15043e6009">
<p><code class="codeph">odessp()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6104 d15043e6015">
<p><code class="codeph">OCIDescribeAny()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6113" headers="d15043e6009">
<p><code class="codeph">oerhms()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6113 d15043e6015">
<p><code class="codeph">OCIErrorGet()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6122" headers="d15043e6009">
<p><code class="codeph">oexec(), oexn()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6122 d15043e6015">
<p><code class="codeph">OCIStmtExecute()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6132" headers="d15043e6009">
<p><code class="codeph">oexfet()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6132 d15043e6015">
<p><code class="codeph">OCIStmtExecute()</code>, <code class="codeph">OCIStmtFetch()</code> (Note: result set rows can be implicitly prefetched)</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6145" headers="d15043e6009">
<p><code class="codeph">ofen()</code>, <code class="codeph">ofetch()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6145 d15043e6015">
<p><code class="codeph">OCIStmtFetch()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6157" headers="d15043e6009">
<p><code class="codeph">oflng()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6157 d15043e6015">
<p>none</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6165" headers="d15043e6009">
<p><code class="codeph">ogetpi()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6165 d15043e6015">
<p><code class="codeph">OCIStmtGetPieceInfo()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6174" headers="d15043e6009">
<p><code class="codeph">olog()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6174 d15043e6015">
<p><code class="codeph">OCILogon()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6183" headers="d15043e6009">
<p><code class="codeph">ologof()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6183 d15043e6015">
<p><code class="codeph">OCILogoff()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6192" headers="d15043e6009">
<p><code class="codeph">onbclr(), onbset(), onbtst()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6192 d15043e6015">
<p>Note: nonblocking mode can be set or checked by calling <code class="codeph">OCIAttrSet()</code> or <code class="codeph">OCIAttrGet()</code> on the server context handle or service context handle</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6206" headers="d15043e6009">
<p><code class="codeph">oopen()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6206 d15043e6015">
<p>Note: cursors are not used in release 8.<span class="italic">x</span> or later</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6217" headers="d15043e6009">
<p><code class="codeph">oopt()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6217 d15043e6015">
<p>none</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6225" headers="d15043e6009">
<p><code class="codeph">oparse()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6225 d15043e6015">
<p><code class="codeph">OCIStmtPrepare()</code>; however, it is all local</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6235" headers="d15043e6009">
<p><code class="codeph">opinit()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6235 d15043e6015">
<p><code class="codeph">OCIEnvCreate()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6245" headers="d15043e6009">
<p><code class="codeph">orol()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6245 d15043e6015">
<p><code class="codeph">OCITransRollback()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6254" headers="d15043e6009">
<p><code class="codeph">osetpi()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6254 d15043e6015">
<p><code class="codeph">OCIStmtSetPieceInfo()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6263" headers="d15043e6009">
<p><code class="codeph">sqlld2()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6263 d15043e6015">
<p><code class="codeph">SQLSvcCtxGet or SQLEnvGet</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6272" headers="d15043e6009">
<p><code class="codeph">sqllda()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6272 d15043e6015">
<p><code class="codeph">SQLSvcCtxGet or SQLEnvGet</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6281" headers="d15043e6009">
<p><code class="codeph">odsc()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6281 d15043e6015">
<p>Note: see odescr() preceding</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6289" headers="d15043e6009">
<p><code class="codeph">oermsg()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6289 d15043e6015">
<p><code class="codeph">OCIErrorGet()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6298" headers="d15043e6009">
<p><code class="codeph">olon()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6298 d15043e6015">
<p><code class="codeph">OCILogon()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6307" headers="d15043e6009">
<p><code class="codeph">orlon()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6307 d15043e6015">
<p><code class="codeph">OCILogon()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6316" headers="d15043e6009">
<p><code class="codeph">oname()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6316 d15043e6015">
<p>Note: see <code class="codeph">odescr()</code> preceding</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6256" id="d15043e6327" headers="d15043e6009">
<p><code class="codeph">osql3()</code></p>
</td>
<td class="cellalignment6255" headers="d15043e6327 d15043e6015">
<p>Note: see <code class="codeph">oparse()</code> preceding</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="infobox-note" id="GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3__GUID-478B2E46-394D-40A1-8B93-914BF39D3922">
<p class="notep1">Note:</p>
<p>Applications using <code class="codeph">size_t</code> to define host area (<code class="codeph">hda</code>) that is passed to the OCI 7 calls, may crash on some platforms due to misaligned data. <code class="codeph">Hda_Def</code> should be used instead of <code class="codeph">size_t</code> in that case. If the application cannot be modified, the compiler and linker flag <code class="codeph">misalign</code> can be used on a SPARC platform. Refer to the demos and the following documentation for more information: <a href="http://docs.oracle.com/cd/E19205-01/819-5267/bkauj/index.html" target="_blank"><code class="codeph">http://docs.oracle.com/cd/E19205-01/819-5267/bkauj/index.html</code></a>.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16145"></a><a id="LNOCI16144"></a>
<div class="props_rev_3"><a id="GUID-02E4847A-28D8-410C-B40D-17E60CDE29D0"></a>
<h3 id="LNOCI-GUID-02E4847A-28D8-410C-B40D-17E60CDE29D0" class="sect3">OCI Routines Not Supported</h3>
<div>
<div class="section">
<p>Some OCI routines that were available in previous versions of OCI are not supported in the current release. They are listed in <a href="oci01int.htm#GUID-02E4847A-28D8-410C-B40D-17E60CDE29D0__G435610" title="This table has 2 columns. Column 1 is the OCI routine name and column 2 is its equivalent or similar later OCI routine name.">Table 1-2</a>.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-02E4847A-28D8-410C-B40D-17E60CDE29D0__G435610">
<p class="titleintable">Table 1-2 OCI Functions Not Supported</p>
<table class="cellalignment6175" title="OCI Functions Not Supported " summary="This table has 2 columns. Column 1 is the OCI routine name and column 2 is its equivalent or similar later OCI routine name.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6195" id="d15043e6535">OCI Routine</th>
<th class="cellalignment6194" id="d15043e6538">Equivalent or Similar Later OCI Routine</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6197" id="d15043e6543" headers="d15043e6535">
<p><code class="codeph">obind()</code></p>
</td>
<td class="cellalignment6196" headers="d15043e6543 d15043e6538">
<p><code class="codeph">OCIBindByName()</code>, <code class="codeph">OCIBindByPos()</code> (Note: additional bind calls may be necessary for some data types)</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6197" id="d15043e6556" headers="d15043e6535">
<p><code class="codeph">obindn()</code></p>
</td>
<td class="cellalignment6196" headers="d15043e6556 d15043e6538">
<p><code class="codeph">OCIBindByName()</code>, <code class="codeph">OCIBindByPos()</code> (Note: additional bind calls may be necessary for some data types)</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6197" id="d15043e6569" headers="d15043e6535">
<p><code class="codeph">odfinn()</code></p>
</td>
<td class="cellalignment6196" headers="d15043e6569 d15043e6538">
<p><code class="codeph">OCIDefineByPos()</code> (Note: additional define calls may be necessary for some data types)</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6197" id="d15043e6579" headers="d15043e6535">
<p><code class="codeph">odsrbn()</code></p>
</td>
<td class="cellalignment6196" headers="d15043e6579 d15043e6538">
<p>Note: see <code class="codeph">odescr()</code> in <a href="oci01int.htm#GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3__G435463" title="This table has 2 columns. Column 1 is the 7.x OCI routine name and column 2 is its equivalent or similar later OCI routine name.">Table 1-1</a></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6197" id="d15043e6594" headers="d15043e6535">
<p><code class="codeph">ologon()</code></p>
</td>
<td class="cellalignment6196" headers="d15043e6594 d15043e6538">
<p><code class="codeph">OCILogon()</code></p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6197" id="d15043e6603" headers="d15043e6535">
<p><code class="codeph">osql()</code></p>
</td>
<td class="cellalignment6196" headers="d15043e6603 d15043e6538">
<p>Note: see <code class="codeph">oparse()</code> <a href="oci01int.htm#GUID-8291144F-63BE-45EF-8197-FEAFFE9616F3__G435463" title="This table has 2 columns. Column 1 is the 7.x OCI routine name and column 2 is its equivalent or similar later OCI routine name.">Table 1-1</a></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="LNOCI16149"></a><a id="LNOCI019"></a>
<div class="props_rev_3"><a id="GUID-6895DB45-97AA-4738-9959-BD677D610186"></a>
<h2 id="LNOCI-GUID-6895DB45-97AA-4738-9959-BD677D610186" class="sect2">OCI Instant Client</h2>
<div>
<div class="section">
<p>The Instant Client feature simplifies the deployment of customer applications based on OCI, OCCI, ODBC, and JDBC OCI by eliminating the need for an Oracle home on the client machines. The storage space requirement of an OCI application running in Instant Client mode is significantly reduced compared to the same application running in a full client-side installation. The Instant Client shared libraries occupy only about one-fourth the disk space of a full client-side installation.</p>
<p>A README file is included with the Instant Client installation. It describes the version, date and time, and the operating system the Instant Client was generated on.</p>
<p><a href="oci01int.htm#GUID-6895DB45-97AA-4738-9959-BD677D610186__G435667" title="This table has 4 columns. Column 1 is Linux and UNIX library names, column 2 is the description for Linux and UNIX library names, column 3 is Microsoft Windows DLL and symbol tables, and column 4 is the description for Microsoft Windows DLL and symbol tables.">Table 1-3</a> shows the Oracle Database client-side files required to deploy an OCI application:</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6895DB45-97AA-4738-9959-BD677D610186__G435667">
<p class="titleintable">Table 1-3 OCI Instant Client Shared Libraries</p>
<table class="cellalignment6175" title="OCI Instant Client Shared Libraries" summary="This table has 4 columns. Column 1 is Linux and UNIX library names, column 2 is the description for Linux and UNIX library names, column 3 is Microsoft Windows DLL and symbol tables, and column 4 is the description for Microsoft Windows DLL and symbol tables.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6212" id="d15043e6794">Linux and UNIX</th>
<th class="cellalignment6168" id="d15043e6797">Description for Linux and UNIX</th>
<th class="cellalignment6167" id="d15043e6800">Microsoft Windows</th>
<th class="cellalignment6245" id="d15043e6803">Description for Microsoft Windows</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d15043e6808" headers="d15043e6794">
<p><code class="codeph">libclntsh.so.12.1</code></p>
<p><code class="codeph">libclntshcore.so.12.1</code></p>
</td>
<td class="cellalignment6172" headers="d15043e6808 d15043e6797">
<p>Client Code Library</p>
</td>
<td class="cellalignment6171" headers="d15043e6808 d15043e6800">
<p><code class="codeph">oci.dll</code></p>
</td>
<td class="cellalignment6246" headers="d15043e6808 d15043e6803">
<p>Forwarding functions that applications link with</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d15043e6826" headers="d15043e6794">
<p><code class="codeph">libociei.so</code><a id="fn_1" href="#fn_1" onclick="footdisplay(1,&#34;Beginning with Oracle Database 12c Release 1 (12.1), libclntshcore.so.12.1 is separated from libclntsh.so.12.1 and the data shared library. libclntsh.so.12.1, libclntshcore.so.12.1, and libociei.so must reside in the same directory in order to operate in instant client mode. &#34;)"><sup>Foot&nbsp;1</sup></a></p>
</td>
<td class="cellalignment6172" headers="d15043e6826 d15043e6797">
<p>OCI Instant Client Data Shared Library</p>
</td>
<td class="cellalignment6171" headers="d15043e6826 d15043e6800">
<p><code class="codeph">oraociei12.dll</code></p>
</td>
<td class="cellalignment6246" headers="d15043e6826 d15043e6803">
<p>Data and code</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d15043e6853" headers="d15043e6794">
<p><code class="codeph">libnnz12.so</code></p>
</td>
<td class="cellalignment6172" headers="d15043e6853 d15043e6797">
<p>Security Library</p>
</td>
<td class="cellalignment6171" headers="d15043e6853 d15043e6800">
<p><code class="codeph">orannzsbb12.dll</code></p>
</td>
<td class="cellalignment6246" headers="d15043e6853 d15043e6803">
<p>Security Library</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d15043e6868" headers="d15043e6794">
<p><code class="codeph">libons.so</code></p>
</td>
<td class="cellalignment6172" headers="d15043e6868 d15043e6797">
<p>ONS library</p>
</td>
<td class="cellalignment6171" headers="d15043e6868 d15043e6800">
<p><code class="codeph">oraons.dll</code></p>
</td>
<td class="cellalignment6246" headers="d15043e6868 d15043e6803">
<p>ONS library used by OCI internally</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6214" id="d15043e6883" headers="d15043e6794">
<p>NA<a id="GUID-6895DB45-97AA-4738-9959-BD677D610186__CIHJDHJD" href="#GUID-6895DB45-97AA-4738-9959-BD677D610186__CIHJDHJD" onclick="footdisplay(2,&#34;NA means not applicable. &#34;)"><sup>Foot&nbsp;2</sup></a></p>
</td>
<td class="cellalignment6172" headers="d15043e6883 d15043e6797">
<p>NA<a id="fnsrc_d15043e6892" href="#fnsrc_d15043e6892" onclick="footdisplay(2,&#34;NA means not applicable. &#34;)"><sup>Footref&nbsp;2</sup></a></p>
</td>
<td class="cellalignment6171" headers="d15043e6883 d15043e6800">
<p><code class="codeph">oci.sym</code>, <code class="codeph">oraociei12.sym</code>, <code class="codeph">orannzsbb12.sym</code></p>
</td>
<td class="cellalignment6246" headers="d15043e6883 d15043e6803">
<p>Symbol tables</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1</sup></p>
<p>Beginning with Oracle Database 12<span class="italic">c</span> Release 1 (12.1), <code class="codeph">libclntshcore.so.12.1</code> is separated from <code class="codeph">libclntsh.so.12.1</code> and the data shared library. libclntsh.so.12.1, libclntshcore.so.12.1, and libociei.so must reside in the same directory in order to operate in instant client mode.</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2</sup></p>
<p>NA means not applicable.</p>
<div class="section">
<p>A <code class="codeph">.sym</code> file is provided for each dynamic-link library (DLL). When the <code class="codeph">.sym</code> file is present in the same location as the DLL, a stack trace with function names is generated when a failure occurs in OCI on Windows.</p>
<div class="infoboxnotealso" id="GUID-6895DB45-97AA-4738-9959-BD677D610186__GUID-00A8709E-878D-4494-8FA6-9D0F95ACCE78">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="oci10new.htm#GUID-0A4A1E6C-F321-4858-A535-E47240DC9EA1" title="Describes how the location of the ADR base is determined.">Fault Diagnosability in OCI</a>&#34;</span></p>
</div>
<p>Oracle Database 12<span class="italic">c</span> Release 1 (12.1) library names are used in the table.</p>
<p>To use the Microsoft ODBC and OLEDB driver, you must copy <code class="codeph">ociw32.dll</code> from the <span class="italic"><code class="codeph">ORACLE_HOME</code></span><code class="codeph">\bin</code> directory.</p>
</div>
<!-- class="section" --></div>
<a id="LNOCI16150"></a>
<div class="props_rev_3"><a id="GUID-3B67EAE7-B33F-4DC3-8051-AA5C4D5994BD"></a>
<h3 id="LNOCI-GUID-3B67EAE7-B33F-4DC3-8051-AA5C4D5994BD" class="sect3">Benefits of Instant Client</h3>
<div>
<p>Why use Instant Client?</p>
<ul style="list-style-type: disc;">
<li>
<p>Installation involves copying a small number of files.</p>
</li>
<li>
<p>The Oracle Database client-side number of required files and the total disk storage are significantly reduced.</p>
</li>
<li>
<p>There is no loss of functionality or performance for applications deployed in Instant Client mode.</p>
</li>
<li>
<p>It is simple for independent software vendors to package applications.</p>
</li>
</ul>
</div>
</div>
<a id="LNOCI72573"></a><a id="LNOCI72574"></a><a id="LNOCI16151"></a>
<div class="props_rev_3"><a id="GUID-7D65474A-8790-4E81-B535-409010791C2F"></a>
<h3 id="LNOCI-GUID-7D65474A-8790-4E81-B535-409010791C2F" class="sect3">Installing the OCI Instant Client</h3>
<div>
<div class="section">
<p>The Instant Client libraries can be installed by either choosing the Instant Client option from Oracle Universal Installer or by downloading and installing the Instant Client libraries from the OCI page (see the bottom of OCI page for the Instant Client link) on the Oracle Technology Network website:</p>
<pre dir="ltr"><a href="http://www.oracle.com/technology/tech/oci/instantclient/index.html" target="_blank">http://www.oracle.com/technology/tech/oci/instantclient/index.html</a>
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To Download and Install the Instant Client Libraries from the Oracle Technology Network Website</p>
</div>
<!-- class="section" -->
<div class="section">
<ol>
<li>
<p>Download and install the Instant Client shared libraries to an empty directory, such as <code class="codeph">instantclient_12_1</code>, for Oracle Database 12<span class="italic">c</span> Release 1 (12.1). Choose the Basic package.</p>
</li>
<li>
<p>Set the operating system shared library path environment variable to the directory from Step 1. For example, on Linux or UNIX, set <code class="codeph">LD_LIBRARY_PATH</code> to <code class="codeph">instantclient_12_1</code>. On Windows, set <code class="codeph">PATH</code> to the <code class="codeph">instantclient_12_1</code> directory.</p>
</li>
<li>
<p>If necessary, set the <code class="codeph">NLS_LANG</code> environment variable to specify the language and territory used by the client application and database connections opened by the application, and the client&#39;s character set, which is the character set for data entered or displayed by a client program. <code class="codeph">NLS_LANG</code> is set as an environment variable on UNIX platforms and is set in the registry on Windows platforms. See <a class="olink NLSPG189" target="_blank" href="../NLSPG/ch3globenv.htm#NLSPG189"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information on setting the <code class="codeph">NLS_LANG</code> environment variable.</p>
</li>
</ol>
<p>After completing the preceding steps you are ready to run the OCI application.</p>
<p>The OCI application operates in Instant Client mode when the OCI shared libraries are accessible through the operating system Library Path variable. In this mode, there is no dependency on the Oracle home and none of the other code and data files provided in the Oracle home are needed by OCI (except for the <a id="d15043e7312" class="indexterm-anchor"></a><code class="codeph">tnsnames.ora</code> file described later).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To Install the Instant Client from the Oracle Universal Installer</p>
</div>
<!-- class="section" -->
<ol>
<li><span>Invoke the Oracle Universal Installer and select the Instant Client option.</span></li>
<li><span>Install the Instant Client shared libraries to an empty directory, such as <code class="codeph">instantclient_12_1</code>, for Oracle Database 12<span class="italic">c</span> Release 1 (12.1).</span></li>
<li><span>Set the <code class="codeph">LD_LIBRARY_PATH</code> to the instant client directory to operate in instant client mode.</span></li>
<li><span>If necessary, set the <code class="codeph">NLS_LANG</code> environment variable to specify the language and territory used by the client application and database connections opened by the application, and the client&#39;s character set, which is the character set for data entered or displayed by a client program. <code class="codeph">NLS_LANG</code> is set as an environment variable on UNIX platforms and is set in the registry on Windows platforms. See <a class="olink NLSPG189" target="_blank" href="../NLSPG/ch3globenv.htm#NLSPG189"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information on setting the <code class="codeph">NLS_LANG</code> environment variable.</span></li>
</ol>
<div class="section">
<p>If you did a complete client installation (by choosing the <code class="codeph">Admin</code> option in Oracle Universal Installer), the Instant Client shared libraries are also installed. The locations of the Instant Client shared libraries in a full client installation are:</p>
<p>On Linux or UNIX:</p>
<p><code class="codeph">libociei.so</code> library is in <code class="codeph">$ORACLE_HOME/instantclient</code></p>
<p><code class="codeph">libclntsh.so.12.1</code>, <code class="codeph">libclntshcore.so.12.1</code>, and <code class="codeph">libnnz12.so</code> are in <code class="codeph">$ORACLE_HOME/lib</code></p>
<p>On Windows:</p>
<p><code class="codeph">oraociei12.dll</code> library is in <code class="codeph">ORACLE_HOME\instantclient</code></p>
<p><code class="codeph">oci.dll</code>, <code class="codeph">ociw32.dll</code>, and <code class="codeph">orannzsbb12.dll</code> are in <code class="codeph">ORACLE_HOME\bin</code></p>
<p>To enable running the OCI application in Instant Client mode, copy the preceding libraries to a different directory and set the operating system shared library path to locate this directory.</p>
<div class="infobox-note" id="GUID-7D65474A-8790-4E81-B535-409010791C2F__GUID-F5E0097D-7BB9-43B7-856F-E0449171CEEC">
<p class="notep1">Note:</p>
<p>All the libraries must be copied from the same Oracle home and must be placed in the same directory. Co-location of symlinks to Instant Client libraries is not a substitute for physical co-location of the libraries.</p>
<p>There should be only one set of Oracle libraries on the operating system Library Path variable. That is, if you have multiple directories containing Instant Client libraries, then only one such directory should be on the operating system Library Path.</p>
<p>Similarly, if an Oracle home-based installation is performed on the same system, then you should not have <code class="codeph">ORACLE_HOME/lib</code> and the Instant Client directory on the operating system Library Path simultaneously regardless of the order in which they appear on the Library Path. That is, either the <code class="codeph">ORACLE_HOME/lib</code> directory (for non-Instant Client operation) or Instant Client directory (for Instant Client operation) should be on the operating system Library Path variable, but not both.</p>
</div>
<p>To enable other capabilities such as OCCI and JDBC OCI, you must copy a few additional files. To enable OCCI, you must install the OCCI Library (<code class="codeph">libocci.so.12.1</code> on Linux or UNIX and <code class="codeph">oraocci12.dll</code> on Windows) in the Instant Client directory. For the JDBC OCI driver, in addition to the three OCI shared libraries, you must also download OCI JDBC Library (for example <code class="codeph">libocijdbc12.so</code> on Linux or UNIX and <code class="codeph">ocijdbc12.dll</code> on Windows). Place all libraries in the Instant Client directory.</p>
<div class="infobox-note" id="GUID-7D65474A-8790-4E81-B535-409010791C2F__GUID-A2EF9D2C-B437-40AD-A169-6DDAB55E9E63">
<p class="notep1">Note:</p>
<p>On hybrid platforms, such as Sparc64, to operate the JDBC OCI driver in the Instant Client mode, copy the <code class="codeph">libociei.so</code> library from the <code class="codeph">ORACLE_HOME/instantclient32</code> directory to the Instant Client directory. Copy all other Sparc64 libraries needed for the JDBC OCI Instant Client from the <code class="codeph">ORACLE_HOME/lib32</code> directory to the Instant Client directory.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16152"></a>
<div class="props_rev_3"><a id="GUID-C22A2236-D237-45C7-AEE5-64A49FA9BCDD"></a>
<h3 id="LNOCI-GUID-C22A2236-D237-45C7-AEE5-64A49FA9BCDD" class="sect3">When to Use Instant Client</h3>
<div>
<p>Instant Client is a deployment choice and can be used for running production applications.</p>
<p>In general, all OCI functionality is available to an application being run using the Instant Client, except that the Instant Client is for client-side operation only. Therefore, server-side external procedures cannot use Instant Client libraries.</p>
<p>For development you can also use the Instant Client SDK.</p>
<div class="infoboxnotealso" id="GUID-C22A2236-D237-45C7-AEE5-64A49FA9BCDD__GUID-03DDC014-BF35-4CE0-ADEF-EA112650963A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="oci01int.htm#GUID-16475230-7573-4A14-B76A-31E4F4CEEBCA">SDK for Instant Client</a></p>
</li>
<li>
<p><a href="oci10new.htm#GUID-0A4A1E6C-F321-4858-A535-E47240DC9EA1" title="Describes how the location of the ADR base is determined.">Fault Diagnosability in OCI</a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="LNOCI16153"></a>
<div class="props_rev_3"><a id="GUID-DD9744B5-4DFD-4BDF-B6C5-7011A6C0B1E9"></a>
<h3 id="LNOCI-GUID-DD9744B5-4DFD-4BDF-B6C5-7011A6C0B1E9" class="sect3">About Patching Instant Client Shared Libraries on Linux or UNIX</h3>
<div>
<p>Because Instant Client is a deployment feature, the number and size of files (client footprint) required to run an OCI application has been reduced.</p>
<p>Hence, all files needed to patch Instant Client shared libraries are not available in an Instant Client deployment. A complete client installation based on Oracle home is needed for patching. Use the <code class="codeph">opatch</code> utility for patching.</p>
<p>After you apply the patch in an Oracle home environment, copy the files listed in <a href="oci01int.htm#GUID-6895DB45-97AA-4738-9959-BD677D610186" title="Instant Client is a deployment choice and can be used for running production applications.Because Instant Client is a deployment feature, the number and size of files (client footprint) required to run an OCI application has been reduced. What character sets are supported by Instant Client Light.">OCI Instant Client</a> to the instant client directory, as described in <a href="oci01int.htm#GUID-7D65474A-8790-4E81-B535-409010791C2F">Installing the OCI Instant Client</a>.</p>
<p>Instead of copying individual files, you can generate Instant Client zip and RPM files for OCI and OCCI, JDBC, and SQL*Plus as described in <a href="oci01int.htm#GUID-2D8925E7-ABA5-44BF-BB14-F1D48CF1C242">Regeneration of Data Shared Library and Zip and RPM Files</a>. Then, you can copy the zip and RPM files to the target system and unzip them as described in <a href="oci01int.htm#GUID-7D65474A-8790-4E81-B535-409010791C2F">Installing the OCI Instant Client</a>.</p>
<p>The <code class="codeph">opatch</code> utility stores the patching information of the <code class="codeph">ORACLE_HOME</code> installation in <code class="codeph">libclntsh.so</code>. This information can be retrieved by the following command:</p>
<pre dir="ltr">genezi -v
</pre>
<p>If the Instant Client deployment system does not have the <code class="codeph">genezi</code> utility, you can copy it from the <span class="italic"><code class="codeph">ORACLE_HOME</code></span><code class="codeph">/bin</code> <span>directory</span>.</p>
<div class="infobox-note" id="GUID-DD9744B5-4DFD-4BDF-B6C5-7011A6C0B1E9__GUID-699BF34F-3C18-44AF-AFED-388AF59D2B26">
<p class="notep1">Note:</p>
<p>The <code class="codeph">opatch</code> utility is not available on Windows.</p>
</div>
</div>
</div>
<a id="LNOCI16154"></a>
<div class="props_rev_3"><a id="GUID-2D8925E7-ABA5-44BF-BB14-F1D48CF1C242"></a>
<h3 id="LNOCI-GUID-2D8925E7-ABA5-44BF-BB14-F1D48CF1C242" class="sect3">Regeneration of Data Shared Library and Zip and RPM Files</h3>
<div>
<p>The process to regenerate the data shared library and the zip and RPM files has changed for Oracle Database 12<span class="italic">c</span> Release 1 (12.1) and later. Separate targets are added to create the data shared libraries, zip, and RPM files either individually or all at once. In previous releases, one target, <code class="codeph">ilibociei</code>, was provided to build the data shared libraries, zip, and RPM files. Now <code class="codeph">ilibociei</code> builds only the zip and RPM files. Regeneration of data shared libraries requires both a compiler and linker, which may not be available on all installations. Therefore, separate targets have been added to regenerate the data shared libraries.</p>
<div class="infobox-note" id="GUID-2D8925E7-ABA5-44BF-BB14-F1D48CF1C242__GUID-61BA8523-3DB5-4FBA-97F5-6D580B4CAB87">
<p class="notep1">Note:</p>
<p>The regenerated Instant Client binaries contain only the Instant Client files installed in the Oracle Client Administrator Home from which the regeneration is done. Therefore, error messages, character set encodings, and time zone files that are present in the regeneration environment are the only ones that are packaged in the data shared libraries. Error messages, character set encodings, and time zone files depend on which national languages were selected for the installation of the Oracle Client Administrator Home.</p>
</div>
</div>
<a id="LNOCI16155"></a>
<div class="props_rev_3"><a id="GUID-728592E6-2301-4CC8-99CA-F1C28BB9763B"></a>
<h4 id="LNOCI-GUID-728592E6-2301-4CC8-99CA-F1C28BB9763B" class="sect4">Regenerating Data Shared Library libociei.so</h4>
<div>
<div class="section">
<p>The OCI Instant Client Data Shared Library (<code class="codeph">libociei.so</code>) can be regenerated by using the following commands in an Administrator Install of <code class="codeph">ORACLE_HOME</code>:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk igenlibociei
</pre>
<p>The new regenerated <code class="codeph">libociei.so</code> is placed in the <code class="codeph">ORACLE_HOME</code><code class="codeph">/instantclient</code> directory. The original existing <code class="codeph">libociei.so</code> located in this same directory is renamed to <code class="codeph">libociei.so0</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16156"></a>
<div class="props_rev_3"><a id="GUID-6603DE9D-EFEA-4E72-B28E-36E891ADB446"></a>
<h4 id="LNOCI-GUID-6603DE9D-EFEA-4E72-B28E-36E891ADB446" class="sect4">Regenerating Data Shared Library libociicus.so</h4>
<div>
<div class="section">
<p>To regenerate Instant Client Light data shared library (<code class="codeph">libociicus.so</code>), use the following commands:</p>
<pre dir="ltr">mkdir -p $ORACLE_HOME/rdbms/install/instantclient/light
cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk igenlibociicus
</pre>
<p>The newly regenerated <code class="codeph">libociicus.so</code> is placed in the <code class="codeph">ORACLE_HOME</code>/<code class="codeph">instantclient</code>/<code class="codeph">light</code> directory. The original existing <code class="codeph">libociicus.so</code> located in this same directory is renamed to <code class="codeph">libociicus.so0</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16157"></a>
<div class="props_rev_3"><a id="GUID-FB14202B-3F81-411D-A8CD-E2BB777A0640"></a>
<h4 id="LNOCI-GUID-FB14202B-3F81-411D-A8CD-E2BB777A0640" class="sect4">Regenerating Data Shared Libraries libociei.so and libociicus.so in One Step</h4>
<div>
<div class="section">
<p>To regenerate the data shared libraries <code class="codeph">libociei.so</code> and libociicus.so, use the following commands:</p>
<pre dir="ltr">mkdir -p $ORACLE_HOME/rdbms/install/instantclient/light
cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk igenliboci
</pre>
<p>The newly regenerated <code class="codeph">libociei.so</code> is placed in the <code class="codeph">ORACLE_HOME</code>/<code class="codeph">instantclient</code> directory. The original existing <code class="codeph">libociei.so</code> located in this same directory is renamed to <code class="codeph">libociei.so0</code>.</p>
<p>The newly regenerated <code class="codeph">libociicus.so</code> is placed in the <code class="codeph">ORACLE_HOME</code>/<code class="codeph">instantclient</code>/<code class="codeph">light</code> directory. The original existing <code class="codeph">libociicus.so</code> located in this same directory is renamed to <code class="codeph">libociicus.so0</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16159"></a>
<div class="props_rev_3"><a id="GUID-E5F012CC-1ED0-4122-9CCE-BEB815D1B853"></a>
<h4 id="LNOCI-GUID-E5F012CC-1ED0-4122-9CCE-BEB815D1B853" class="sect4">Regenerating Zip and RPM Files for the Basic Package</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for the basic package, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ic_basic_zip
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16160"></a>
<div class="props_rev_3"><a id="GUID-4FEAD6CE-0A5B-4DB2-BC73-AB7026448EED"></a>
<h4 id="LNOCI-GUID-4FEAD6CE-0A5B-4DB2-BC73-AB7026448EED" class="sect4">Regenerating Zip and RPM Files for the Basic Light Package</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for the basic light package, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ic_basiclite_zip
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16161"></a>
<div class="props_rev_3"><a id="GUID-62A6A942-088B-427B-9BD3-2D3F01B0BFB8"></a>
<h4 id="LNOCI-GUID-62A6A942-088B-427B-9BD3-2D3F01B0BFB8" class="sect4">Regenerating Zip and RPM Files for the JDBC Package</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for the JDBC package, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ic_jdbc_zip
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16162"></a>
<div class="props_rev_3"><a id="GUID-AE4AB334-F5AD-40C8-94C5-C015EA5D85AD"></a>
<h4 id="LNOCI-GUID-AE4AB334-F5AD-40C8-94C5-C015EA5D85AD" class="sect4">Regenerating Zip and RPM Files for the ODBC Package</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for the ODBC package, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ic_odbc_zip
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16164"></a>
<div class="props_rev_3"><a id="GUID-049B1DCB-9D31-4693-AD09-660CA5DB65EA"></a>
<h4 id="LNOCI-GUID-049B1DCB-9D31-4693-AD09-660CA5DB65EA" class="sect4">Regenerating Zip and RPM Files for the SQL*Plus Package</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for the SQL*Plus package, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ic_sqlplus_zip
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16165"></a>
<div class="props_rev_3"><a id="GUID-E62E70C7-BAD5-4553-BC3D-D3249E23EF30"></a>
<h4 id="LNOCI-GUID-E62E70C7-BAD5-4553-BC3D-D3249E23EF30" class="sect4">Regenerating Zip and RPM Files for the Tools Package</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for the tools package, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ic_tools_zip
</pre></div>
<!-- class="section" --></div>
</div>
<a id="LNOCI16166"></a>
<div class="props_rev_3"><a id="GUID-8E048468-3224-4FDC-B66D-EBC4434F673D"></a>
<h4 id="LNOCI-GUID-8E048468-3224-4FDC-B66D-EBC4434F673D" class="sect4">Regenerating Zip and RPM Files for All Packages</h4>
<div>
<div class="section">
<p>To regenerate the zip and RPM files for all packages, use the following commands:</p>
<pre dir="ltr">cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk ilibociei
</pre>
<p>The new zip and RPM files are generated under the following directory:</p>
<p><code class="codeph">$ORACLE_HOME/rdbms/install/instantclient</code></p>
<p>Regeneration of the data shared library and the zip and RPM files is not available on Windows platforms.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="LNOCI16167"></a>
<div class="props_rev_3"><a id="GUID-B3694EC0-637E-434F-A92F-C301CC133CA2"></a>
<h3 id="LNOCI-GUID-B3694EC0-637E-434F-A92F-C301CC133CA2" class="sect3">Database Connection Strings for OCI Instant Client</h3>
<div>
<p>OCI Instant Client can make remote database connections in all the ways that ordinary SQL clients can. However, because Instant Client does not have the Oracle home environment and directory structure, some database naming methods require additional configuration steps.</p>
<p>All Oracle Net naming methods that do not require use of <code class="codeph">ORACLE_HOME</code> or <code class="codeph">TNS_ADMIN</code> (to locate configuration files such as <code class="codeph">tnsnames.ora</code> or <code class="codeph">sqlnet.ora</code>) work in the Instant Client mode. In particular, the <code class="codeph">connect_identifier</code> in the <code class="codeph">OCIServerAttach()</code> call can be specified in the following formats:</p>
<ul style="list-style-type: disc;">
<li>
<p>A SQL Connect URL string of the form:</p>
<pre dir="ltr">[//]<span class="italic">host</span>[:<span class="italic">port</span>][/<span class="italic">service name</span>]
</pre>
<p>For example:</p>
<pre dir="ltr">//dlsun242:5521/bjava21
</pre></li>
<li>
<p>As an Oracle Net connect descriptor. For example:</p>
<pre dir="ltr">&#34;(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp) (HOST=dlsun242) (PORT=5521))
(CONNECT_DATA=(SERVICE_NAME=bjava21)))&#34;
</pre></li>
<li>
<p>A Connection Name that is resolved through Directory Naming where the site is configured for LDAP server discovery.</p>
</li>
</ul>
<p>For naming methods such as <code class="codeph">tnsnames</code> and directory naming to work, the <code class="codeph">TNS_ADMIN</code> environment variable must be set.</p>
<div class="infoboxnotealso" id="GUID-B3694EC0-637E-434F-A92F-C301CC133CA2__GUID-F49DFA6A-B11E-416D-ACC5-24A98381D4FE">
<p class="notep1">See Also:</p>
<p><a class="olink NETAG008" target="_blank" href="../NETAG/naming.htm#NETAG008"><span><cite>Oracle Database Net Services Administrator&#39;s Guide</cite></span></a> chapter on &#34;Configuring Naming Methods&#34; for more about connect descriptors</p>
</div>
<p>If the <code class="codeph">TNS_ADMIN</code> environment variable is not set, and <code class="codeph">TNSNAMES</code> entries such as <code class="codeph">inst1</code>, and so on, are used, then the <code class="codeph">ORACLE_HOME</code> variable must be set, and the configuration files are expected to be in the <code class="codeph">$ORACLE_HOME/network/admin</code> directory.</p>
<p>Note that the <code class="codeph">ORACLE_HOME</code> variable in this case is only used for locating Oracle Net configuration files, and no other component of Client Code Library (OCI, NLS, and so on) uses the value of <code class="codeph">ORACLE_HOME</code>.</p>
<p>If a <code class="codeph">NULL</code> string, &#34;&#34;, is used as the connection string in the <code class="codeph">OCIServerAttach()</code> call, then the <code class="codeph">TWO_TASK</code> environment variable can be set to the <code class="codeph">connect_identifier</code>. On a Windows operating system, the <code class="codeph">LOCAL</code> environment variable is used instead of <code class="codeph">TWO_TASK</code>.</p>
<p>Similarly, for OCI command-line applications such as SQL*Plus, the <code class="codeph">TWO_TASK</code> (or <code class="codeph">LOCAL</code> on Windows) environment variable can be set to the connect_identifier. Its value can be anything that would have gone to the right of the &#39;@&#39; on a typical connect string.</p>
</div>
<a id="LNOCI16168"></a>
<div class="props_rev_3"><a id="GUID-E97921AA-A166-44EB-97B7-9EEFE3A23ED3"></a>
<h4 id="LNOCI-GUID-E97921AA-A166-44EB-97B7-9EEFE3A23ED3" class="sect4">Examples of Instant Client Connect Identifiers</h4>
<div>
<p>If you are using SQL*Plus in Instant Client mode, then you can specify the connect identifier in the following ways:</p>
<p>If the <code class="codeph">listener.ora</code> file on the Oracle database contains the following:</p>
<pre dir="ltr">LISTENER = (ADDRESS_LIST=
 (ADDRESS=(PROTOCOL=tcp)(HOST=server6)(PORT=1573))
)
 
SID_LIST_LISTENER = (SID_LIST= 
 (SID_DESC=(SID_NAME=rdbms3)(GLOBAL_DBNAME=rdbms3.server6.us.alchemy.com)
(ORACLE_HOME=/home/dba/rdbms3/oracle))
)
</pre>
<p>The SQL*Plus connect identifier is:</p>
<pre dir="ltr">&#34;(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=server6)(PORT=1573))(CONNECT_DATA=
(SERVICE_NAME=rdbms3.server6.us.alchemy.com)))&#34;
</pre>
<p>The connect identifier can also be specified as:</p>
<pre dir="ltr">&#34;//server6:1573/rdbms3.server6.us.alchemy.com&#34;
</pre>
<p>Alternatively, you can set the <code class="codeph">TWO_TASK</code> environment variable to any of the previous connect identifiers and connect without specifying the connect identifier. For example:</p>
<pre dir="ltr">setenv TWO_TASK &#34;(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=server6)(PORT=1573))
(CONNECT_DATA=(SERVICE_NAME=rdbms3.server6.us.alchemy.com)))&#34;
</pre>
<p>You can also specify the <code class="codeph">TWO_TASK</code> environment variable as:</p>
<pre dir="ltr">setenv TWO_TASK //server6:1573/rdbms3.server6.us.alchemy.com
</pre>
<p>Then you can invoke SQL*Plus with an empty connect identifier (you are prompted for the password):</p>
<pre dir="ltr">sqlplus <span class="italic">user</span>
</pre>
<p>The connect descriptor can also be stored in the <code class="codeph">tnsnames.ora</code> file. For example, if the <code class="codeph">tnsnames.ora</code> file contains the following connect descriptor:</p>
<pre dir="ltr">conn_str = (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=server6)(PORT=1573))(CONNECT_DATA=
(SERVICE_NAME=rdbms3.server6.us.alchemy.com)))
</pre>
<p>The <code class="codeph">tnsnames.ora</code> file is located in the <code class="codeph">/home/webuser/instantclient</code> directory, so you can set the variable <code class="codeph">TNS_ADMIN</code> (or <code class="codeph">LOCAL</code> on Windows) as:</p>
<pre dir="ltr">setenv TNS_ADMIN /home/webuser/instantclient
</pre>
<p>Then you can use the connect identifier <code class="codeph">conn_str</code> for invoking SQL*Plus, or for your OCI connection.</p>
<div class="infobox-note" id="GUID-E97921AA-A166-44EB-97B7-9EEFE3A23ED3__GUID-732F59D2-62DC-425C-94BB-CEA2B973C8FC">
<p class="notep1">Note:</p>
<p><code class="codeph">TNS_ADMIN</code> specifies the directory where the <code class="codeph">tnsnames.ora</code> file is located and <code class="codeph">TNS_ADMIN</code> is not the full path of the <code class="codeph">tnsnames.ora</code> file.</p>
</div>
<p>If the preceding <code class="codeph">tnsnames.ora</code> file is located in an installation based Oracle home, in the /<code class="codeph">network/server6/home/dba/oracle/network/admin</code> directory, then the <code class="codeph">ORACLE_HOME</code> environment variable can be set as follows and SQL*Plus can be invoked as previously, with the identifier <code class="codeph">conn_str</code>:</p>
<pre dir="ltr">setenv ORACLE_HOME /network/server6/home/dba/oracle
</pre>
<p>Finally, if <code class="codeph">tnsnames.ora</code> can be located by <code class="codeph">TNS_ADMIN</code> or <code class="codeph">ORACLE_HOME</code>, then the <code class="codeph">TWO_TASK</code> environment variable can be set as follows enabling you to invoke SQL*Plus without a connect identifier:</p>
<pre dir="ltr">setenv TWO_TASK conn_str
</pre></div>
</div>
</div>
<a id="LNOCI16169"></a>
<div class="props_rev_3"><a id="GUID-7392A747-E097-4326-A194-62CE07093136"></a>
<h3 id="LNOCI-GUID-7392A747-E097-4326-A194-62CE07093136" class="sect3">Environment Variables for OCI Instant Client</h3>
<div>
<p>The <code class="codeph">ORACLE_HOME</code> environment variable no longer determines the location of NLS, CORE, and error message files. An OCI-only application should not require <code class="codeph">ORACLE_HOME</code> to be set. However, if it is set, it does not affect OCI. OCI always obtains its data from the Data Shared Library. If the Data Shared Library is not available, only then is <code class="codeph">ORACLE_HOME</code> used and a full client installation is assumed. Though <code class="codeph">ORACLE_HOME</code> is not required to be set, if it is set, then it must be set to a valid operating system path name that identifies a directory.</p>
<p>If Dynamic User callback libraries are to be loaded, then as this guide specifies, the callback package must reside in <code class="codeph">ORACLE_HOME/lib</code> (<code class="codeph">ORACLE_HOME\bin</code> on Windows). Set <code class="codeph">ORACLE_HOME</code> in this case.</p>
<p>Environment variables <code class="codeph">ORA_NLS10</code> and <code class="codeph">ORA_NLS_PROFILE33</code> are ignored in the Instant Client mode.</p>
<p>In the Instant Client mode, if the <code class="codeph">ORA_TZFILE</code> variable is not set, then the larger, default, <code class="codeph">timezlrg_n.dat</code> file from the Data Shared Library is used. If the smaller <code class="codeph">timezone_n.dat</code> file is to be used from the Data Shared Library, then set the <code class="codeph">ORA_TZFILE</code> environment variable to the name of the file without any absolute or relative path names. The file must be copied to subdirectory <code class="codeph">oracore/zoneinfo</code>for (UNIX/LINUX) or <code class="codeph">oracore\zoneinfo</code> for (Microsoft Windows) in the instant client directory. You can use the <code class="codeph">genezi</code> utility with the <code class="codeph">-v</code> option to verify that the time zone file and location is valid or run SQL*Plus.</p>
<p>On Linux or UNIX:</p>
<pre dir="ltr">setenv ORA_TZFILE timezone_<span class="italic">n</span>.dat
</pre>
<p>On Windows:</p>
<pre dir="ltr">set ORA_TZFILE=timezone_<span class="italic">n</span>.dat
</pre>
<p>In these examples, <span class="italic">n</span> is the time zone data file version number.</p>
<p>To determine the versions of small and large timezone files that are packaged in the Instant Client Data Shared Library, enter the following command to run the <code class="codeph">genezi</code> utility:</p>
<pre dir="ltr">genezi -v
</pre>
<p>If OCI is not operating in the Instant Client mode (because the Data Shared Library is not available), then <code class="codeph">ORA_TZFILE</code> variable, if set, names a complete path name as it does in previous Oracle Database releases.</p>
<p>If <code class="codeph">TNSNAMES</code> entries are used, then, as mentioned earlier, <code class="codeph">TNS_ADMIN</code> directory must contain the <code class="codeph">TNSNAMES</code> configuration files. If <code class="codeph">TNS_ADMIN</code> is not set, then the <code class="codeph">ORACLE_HOME/network/admin</code> directory must contain Oracle Net Services configuration files.</p>
</div>
</div>
<a id="LNOCI13309"></a>
<div class="props_rev_3"><a id="GUID-81D364CE-326D-4B3C-8C82-F468FF1AF30C"></a>
<h3 id="LNOCI-GUID-81D364CE-326D-4B3C-8C82-F468FF1AF30C" class="sect3">Instant Client Light (English)</h3>
<div>
<p>The Instant Client Light (English) version of Instant Client further reduces the disk space requirements of the client installation. The size of the library has been reduced by removing error message files for languages other than English and leaving only a few supported character set definitions out of around 250.</p>
<p>This Instant Client Light version is geared toward applications that use either US7ASCII, WE8DEC, WE8ISO8859P1, WE8MSWIN1252, or a Unicode character set. There is no restriction on the <code class="codeph">LANGUAGE</code> and the <code class="codeph">TERRITORY</code> fields of the <code class="codeph">NLS_LANG</code> setting, so the Instant Client Light operates with any language and territory settings. Because only English error messages are provided with the Instant Client Light, error messages generated on the client side, such as Net connection errors, are always reported in English, even if <code class="codeph">NLS_LANG</code> is set to a language other than <code class="codeph">AMERICAN</code>. Error messages generated by the database side, such as syntax errors in SQL statements, are in the selected language provided the appropriate translated message files are installed in the Oracle home of the database instance.</p>
</div>
<a id="LNOCI16170"></a>
<div class="props_rev_3"><a id="GUID-635CDBDC-A9DB-4547-A24B-AE4108339F18"></a>
<h4 id="LNOCI-GUID-635CDBDC-A9DB-4547-A24B-AE4108339F18" class="sect4">Globalization Settings</h4>
<div>
<p>What character sets are supported by Instant Client Light.</p>
<p>Instant Client Light supports the following client character sets:</p>
<p>Single-byte</p>
<ul style="list-style-type: disc;">
<li>
<p>US7ASCII</p>
</li>
<li>
<p>WE8DEC</p>
</li>
<li>
<p>WE8MSWIN1252</p>
</li>
<li>
<p>WE8ISO8859P1</p>
</li>
</ul>
<p>Unicode</p>
<ul style="list-style-type: disc;">
<li>
<p>UTF8</p>
</li>
<li>
<p>AL16UTF16</p>
</li>
<li>
<p>AL32UTF8</p>
</li>
</ul>
<p>Instant Client Light can connect to databases having one of these database character sets:</p>
<ul style="list-style-type: disc;">
<li>
<p>US7ASCII</p>
</li>
<li>
<p>WE8DEC</p>
</li>
<li>
<p>WE8MSWIN1252</p>
</li>
<li>
<p>WE8ISO8859P1</p>
</li>
<li>
<p>WE8EBCDIC37C</p>
</li>
<li>
<p>WE8EBCDIC1047</p>
</li>
<li>
<p>UTF8</p>
</li>
<li>
<p>AL32UTF8</p>
</li>
</ul>
<p>Instant Client Light returns an error if a character set other than those in the preceding lists is used as the client or database character set.</p>
<p>Instant Client Light can also operate with the OCI Environment handles created in the <code class="codeph">OCI_UTF16</code> mode.</p>
<div class="infoboxnotealso" id="GUID-635CDBDC-A9DB-4547-A24B-AE4108339F18__GUID-C20EC854-BE54-4F40-A031-1183774355EB">
<p class="notep1">See Also:</p>
<p><a class="olink NLSPG003" target="_blank" href="../NLSPG/ch3globenv.htm#NLSPG003"><span><cite>Oracle Database Globalization Support Guide</cite></span></a> for more information about National Language Support (NLS) settings</p>
</div>
</div>
</div>
<a id="LNOCI16172"></a><a id="LNOCI16171"></a>
<div class="props_rev_3"><a id="GUID-E436205F-2A39-45AC-BD28-969D4B74128B"></a>
<h4 id="LNOCI-GUID-E436205F-2A39-45AC-BD28-969D4B74128B" class="sect4">Operation of Instant Client Light</h4>
<div>
<div class="section">
<p>OCI applications, by default, look for the OCI Data Shared Library, <code class="codeph">libociei.so</code> (or <code class="codeph">Oraociei12.dll</code> on Windows) on the <code class="codeph">LD_LIBRARY_PATH</code> (<code class="codeph">PATH</code> on Windows) to determine if the application should operate in the Instant Client mode. If this library is not found, then OCI tries to load the Instant Client Light Data Shared Library (see <a href="oci01int.htm#GUID-E436205F-2A39-45AC-BD28-969D4B74128B__CIHGDBFI" title="This table has 4 columns. Column 1 is Linux and UNIX library names, column 2 is the description for Linux and UNIX library names, column 3 is Microsoft Windows DLL and symbol tables, and column 4 is the description for Microsoft Windows DLL and symbol tables.">Table 1-4</a>), <code class="codeph">libociicus.so</code> (or <code class="codeph">Oraociicus12.dll</code> on Windows). If the Instant Client Light library is found, then the application operates in the Instant Client Light mode. Otherwise, a full installation based on Oracle home is assumed.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E436205F-2A39-45AC-BD28-969D4B74128B__CIHGDBFI">
<p class="titleintable">Table 1-4 OCI Instant Client Light Shared Libraries</p>
<table class="cellalignment6175" title="OCI Instant Client Light Shared Libraries" summary="This table has 4 columns. Column 1 is Linux and UNIX library names, column 2 is the description for Linux and UNIX library names, column 3 is Microsoft Windows DLL and symbol tables, and column 4 is the description for Microsoft Windows DLL and symbol tables.">
<thead>
<tr class="cellalignment6151">
<th class="cellalignment6276" id="d15043e10966">Linux and UNIX</th>
<th class="cellalignment6202" id="d15043e10969">Description for Linux and UNIX</th>
<th class="cellalignment6212" id="d15043e10972">Windows</th>
<th class="cellalignment6216" id="d15043e10975">Description for Windows</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6151">
<td class="cellalignment6278" id="d15043e10980" headers="d15043e10966">
<p><code class="codeph">libclntsh.so.12.1</code></p>
<p><code class="codeph">libclntshcore.so.12.1</code></p>
</td>
<td class="cellalignment6205" headers="d15043e10980 d15043e10969">
<p>Client Code Library</p>
</td>
<td class="cellalignment6214" headers="d15043e10980 d15043e10972">
<p><code class="codeph">oci.dll</code></p>
</td>
<td class="cellalignment6218" headers="d15043e10980 d15043e10975">
<p>Forwarding functions that applications link with</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6278" id="d15043e10998" headers="d15043e10966">
<p><code class="codeph">libociicus.so</code></p>
</td>
<td class="cellalignment6205" headers="d15043e10998 d15043e10969">
<p>OCI Instant Client Light Data Shared Library</p>
</td>
<td class="cellalignment6214" headers="d15043e10998 d15043e10972">
<p><code class="codeph">oraociicus12.dll</code></p>
</td>
<td class="cellalignment6218" headers="d15043e10998 d15043e10975">
<p>Data and code</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6278" id="d15043e11013" headers="d15043e10966">
<p><code class="codeph">libnnz12.so</code></p>
</td>
<td class="cellalignment6205" headers="d15043e11013 d15043e10969">
<p>Security Library</p>
</td>
<td class="cellalignment6214" headers="d15043e11013 d15043e10972">
<p><code class="codeph">orannzsbb12.dll</code></p>
</td>
<td class="cellalignment6218" headers="d15043e11013 d15043e10975">
<p>Security Library</p>
</td>
</tr>
<tr class="cellalignment6151">
<td class="cellalignment6278" id="d15043e11028" headers="d15043e10966">
<p>Not Applicable</p>
</td>
<td class="cellalignment6205" headers="d15043e11028 d15043e10969">
<p>Not Applicable</p>
</td>
<td class="cellalignment6214" headers="d15043e11028 d15043e10972">
<p><code class="codeph">oci.sym</code>, <code class="codeph">oraociicus12.sym</code>, <code class="codeph">orannzsbb12.sym</code></p>
</td>
<td class="cellalignment6218" headers="d15043e11028 d15043e10975">
<p>Symbol tables</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="LNOCI16173"></a>
<div class="props_rev_3"><a id="GUID-2F3D53E5-0743-4F0C-9A47-FA06C12C6607"></a>
<h4 id="LNOCI-GUID-2F3D53E5-0743-4F0C-9A47-FA06C12C6607" class="sect4">Installing Instant Client Light</h4>
<div>
<div class="section">
<p>Instant Client Light can be installed in one of these ways:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>From OTN</p>
<p>Go to the Instant Client link from the OCI URL (see the bottom of OCI page for the Instant Client link) on the Oracle Technology Network website:</p>
<pre dir="ltr"><a href="http://www.oracle.com/technology/software/tech/oci/instantclient/" target="_blank">http://www.oracle.com/technology/software/tech/oci/instantclient/</a>
</pre>
<p>For Instant Client Light, download and unzip the <code class="codeph">basiclite.zip</code> package in to an empty <code class="codeph">instantclient_12_1</code> directory.</p>
</li>
<li>
<p>From Client Admin Install</p>
<p>From the <code class="codeph">ORACLE_HOME/instantclient/light</code> subdirectory, copy <code class="codeph">libociicus.so</code> (or <code class="codeph">Oraociicus12.dll</code> on Windows). The Instant Client directory on the <code class="codeph">LD_LIBRARY_PATH</code> (<code class="codeph">PATH</code> on Windows) should contain the Instant Client Light Data Shared Library, <code class="codeph">libociicus.so</code> (<code class="codeph">Oraociicus12.dll</code> on Windows), instead of the larger OCI Instant Client Data Shared Library, <code class="codeph">libociei.so</code> (<code class="codeph">Oraociei12.dll</code> on Windows).</p>
</li>
<li>
<p>From Oracle Universal Installer</p>
<p>When you select the Instant Client option from the Oracle Universal Installer, <code class="codeph">libociei.so</code> (or <code class="codeph">Oraociei12.dll</code> on Windows) is installed in the base directory of the installation, which means these files are placed on the <code class="codeph">LD_LIBRARY_PATH</code> (<code class="codeph">PATH</code> on Widows).</p>
<p>The Instant Light Client Data Shared Library, <code class="codeph">libociicus.so</code> (or <code class="codeph">Oraociicus12.dll</code> on Windows), is installed in the <code class="codeph">light</code> subdirectory of the base directory and not enabled by default. Therefore, to operate in the Instant Client Light mode, the OCI Data Shared Library, <code class="codeph">libociei.so</code> (or <code class="codeph">Oraociei12.dll</code> on Windows) must be deleted or renamed and the Instant Client Light library must be copied from the <code class="codeph">light</code> subdirectory to the base directory of the installation.</p>
<p>For example, if Oracle Universal Installer has installed the Instant Client in <code class="codeph">my_oraic_12_1</code> directory on the <code class="codeph">LD_LIBRARY_PATH</code> (<code class="codeph">PATH</code> on Windows), then use the following command sequence to operate in the Instant Client Light mode:</p>
<pre dir="ltr">cd my_oraic_12_1
rm libociei.so
mv light/libociicus.so .
</pre>
<div class="infobox-note" id="GUID-2F3D53E5-0743-4F0C-9A47-FA06C12C6607__GUID-880E254D-8792-4EA3-BCFA-7C6A8058C910">
<p class="notep1">Note:</p>
<p>To ensure that no incompatible binaries exist in the installation, always copy and install the Instant Client files in to an empty directory.</p>
</div>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="LNOCI16174"></a>
<div class="props_rev_3"><a id="GUID-16475230-7573-4A14-B76A-31E4F4CEEBCA"></a>
<h3 id="LNOCI-GUID-16475230-7573-4A14-B76A-31E4F4CEEBCA" class="sect3">SDK for Instant Client</h3>
<div>
<p>The SDK can be downloaded from the Instant Client link on the OCI URL (see the bottom of OCI page for the Instant Client link) on the Oracle Technology Network website:</p>
<pre dir="ltr"><a href="http://www.oracle.com/technology/tech/oci/instantclient/" target="_blank">http://www.oracle.com/technology/tech/oci/instantclient/</a>
</pre>
<ul style="list-style-type: disc;">
<li>
<p>The Instant Client SDK package has both C and C++ header files and a makefile for developing OCI and OCCI applications while in an Instant Client environment. Developed applications can be deployed in any client environment.</p>
</li>
<li>
<p>The SDK contains C and C++ demonstration programs.</p>
</li>
<li>
<p>On Windows, libraries required to link the OCI or OCCI applications are also included. <code class="codeph">Make.bat</code> is provided to build the demos.</p>
</li>
<li>
<p>On UNIX or Linux, the makefile <code class="codeph">demo.mk</code> is provided to build the demos. The <code class="codeph">instantclient_12_1</code> directory must be on the <code class="codeph">LD_LIBRARY_PATH</code> before linking the application. The OCI and OCCI programs require the presence of <code class="codeph">libclntsh.so</code> and <code class="codeph">libocci.so</code> symbolic links in the <code class="codeph">instantclient_12_1</code> directory. <code class="codeph">demo.mk</code> creates these before the link step. These symbolic links can also be created in a shell:</p>
<pre dir="ltr">cd instantclient_12_1
ln -s libclntsh.so.12.1 libclntsh.so
ln -s libocci.so.12.1 libocci.so
</pre></li>
<li>
<p>The SDK also contains the Object Type Translator (OTT) utility and its classes to generate the application header files.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6150">
<tr>
<td class="cellalignment6162">
<table class="cellalignment6155">
<tr>
<td class="cellalignment6154"><a href="release_changes.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6154"><a href="oci02bas.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6164">
<table class="cellalignment6153">
<tr>
<td class="cellalignment6154"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6154"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6154"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6154"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6154"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6154"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>