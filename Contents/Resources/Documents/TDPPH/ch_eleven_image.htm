<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106343"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20JSON%20and%20generating%20a%20JPEG%20image"></a><title>Using JSON and generating a JPEG image</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743"/>
<meta name="dcterms.created" content="2014-02-04T21:52:15Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database 2 Day + PHP Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E18554-05"/>
<meta name="dcterms.isVersionOf" content="TDPPH"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2010, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ch_ten_insert_multiple.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_twelve_blobs.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18554-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">14/18</span> <!-- End Header -->
<div id="TDPPH180" class="chapter"><a id="BABFADFD"></a>
<h1 class="chapter"><span class="secnum">11</span> Using JSON and generating a JPEG image</h1>
<p>This chapter shows how the JSON serialization format can be used for transferring data from a simple web service. The web service is called by a client that creates an image using PHP&#39;s GD extension.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABHIEHJ">Creating a Simple Web Service Returning JSON</a></p>
</li>
<li>
<p><a href="#BABHCAHF">Creating a JPEG image</a></p>
</li>
</ul>
<a id="BABHIEHJ"></a>
<div id="TDPPH181" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating a Simple Web Service Returning JSON</h2>
<p>Create a new PHP file <code>ac_get_json.php</code> containing:</p>
<pre>&lt;?php
 
/**
 * ac_get_json.php: Service returning equipment counts in JSON
 * @package WebService
 */
 
require(&#39;ac_db.inc.php&#39;);
 
if (!isset($_POST[&#39;username&#39;])) {
    header(&#39;Location: index.php&#39;);
    exit;
}
 
$db = new \Oracle\Db(&#34;Equipment&#34;, $_POST[&#39;username&#39;]);
 
$sql = &#34;select equip_name, count(equip_name) as cn
        from equipment
        group by equip_name&#34;;
$res = $db-&gt;execFetchAll($sql, &#34;Get Equipment Counts&#34;);
 
$mydata = array();
foreach ($res as $row) {
    $mydata[$row[&#39;EQUIP_NAME&#39;]] = (int) $row[&#39;CN&#39;];
}
 
echo json_encode($mydata);
 
?&gt;
</pre>
<p>Note there is no authentication in this web service. It is &#34;external&#34; to the AnyCo application. All it requires is a <code>username</code> entry in the <code>POST</code> data.</p>
<p>The file queries the AnyCo Corp. equipment allocation and uses PHP&#39;s <code>json_encode()</code> to return the statistics in JSON format. The output returned by the web service is something like this, depending on which data you currently have in the <code>EQUIPMENT</code> table:</p>
<pre>{&#34;cardboard box&#34;:1,&#34;pen&#34;:4,&#34;computer&#34;:2,&#34;telephone&#34;:3,&#34;paper&#34;:3,&#34;car&#34;:1}
</pre></div>
<!-- class="sect1" -->
<a id="BABHCAHF"></a>
<div id="TDPPH182" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating a JPEG image</h2>
<p>Create a new PHP file <code>ac_graph_img.php</code> to call the web service and create a graph. The file initially contains:</p>
<pre>&lt;?php
 
/**
 * ac_graph_img.php: Create a JPEG image of the equipment allocation statistics
 *
 * Do not put any text or white space before the &#34;&lt;?php&#34; tag because it will
 * be incorporated into the image stream and corrupt the picture.
 *
 * @package Graph
 */
 
define(&#39;WEB_SERVICE_URL&#39;, &#34;http://localhost/ac_get_json.php&#34;);
 
session_start();
require(&#39;ac_equip.inc.php&#39;);
 
$sess = new \Equipment\Session;
$sess-&gt;getSession();
if (!isset($sess-&gt;username) || empty($sess-&gt;username)
    || !$sess-&gt;isPrivilegedUser()) {
    header(&#39;Location: index.php&#39;);
    exit;
}
$data = callservice($sess);
do_graph(&#34;Equipment Count&#34;, 600, $data);
 
// Functions
 
?&gt;
</pre>
<p>Change the web service URL to match your system.</p>
<p>To this file add the <code>callservice()</code> function:</p>
<pre>/**
 * Call the service and return its results
 *
 * @param Session $sess
 * @return array Equipment name/count array
 */
function callservice($sess) {
    // Call the web &#34;service&#34; to get the Equipment statistics
    // Change the URL to match your system configuration
    $calldata = array(&#39;username&#39; =&gt; $sess-&gt;username);
    $options = array(
        &#39;http&#39; =&gt; array(
            &#39;method&#39;  =&gt; &#39;POST&#39;,
            &#39;header&#39;  =&gt; &#39;Content-type: application/x-www-form-urlencoded&#39;,
            &#39;content&#39; =&gt; http_build_query($calldata)
        )
    );
    $ctx = stream_context_create($options);
    $result = file_get_contents(WEB_SERVICE_URL, false, $ctx);
    if (!$result) {
        $data = null;
    } else {
        $data = json_decode($result, true);
 
        // Sort an array by keys using an anonymous function
        uksort($data, function($a, $b) {
            if ($a == $b)
                return 0;
            else
                return ($a &lt; $b) ? -1 : 1;
            });
        }
    return($data);
}
</pre>
<p>This uses the PHP streams functionality to request the URL and get the statistics. The stream context includes the <code>username</code> as a post variable, which is required by the service.</p>
<p>The data is decoded from the JSON format and the array is sorted by name order. The second argument to PHP&#39;s <code>uksort()</code> function is an anonymous function that does the data comparison.</p>
<p>Edit ac_graph_img.php and add the function to create the image:</p>
<pre>/**
 * Draw a bar graph, with bars projecting horizontally
 *
 * @param string $title The Graph&#39;s title
 * @param type $width Desired image width in pixels
 * @param array $items Array of (caption, value) tuples
 */
function do_graph($title, $width, $items) {
    $border = 50;             // border space around bars
    $caption_gap = 4;         // space between bar and its caption
    $bar_width = 20;          // width of each bar
    $bar_gap = 40;            // space between each bar
    $title_font_id = 5;       // font id for the main title
    $bar_caption_font_id = 5; // font id for each bar&#39;s title
 
    // Image height depends on the number of items
    $height = (2 * $border) + (count($items) * $bar_width) +
        ((count($items) - 1) * $bar_gap);
 
    // Find the horizontal distance unit for one item
    $unit = ($width - (2 * $border)) / max($items);
 
    // Create the image and add the title
    $im = ImageCreate($width, $height);
    if (!$im) {
        trigger_error(&#34;Cannot create image&lt;br&gt;\n&#34;, E_USER_ERROR);
    }
    $background_col = ImageColorAllocate($im, 255, 255, 255); // white
    $bar_col = ImageColorAllocate($im, 0, 64, 128);           // blue
    $letter_col = ImageColorAllocate($im, 0, 0, 0);           // black
    ImageFilledRectangle($im, 0, 0, $width, $height, $background_col);
    ImageString($im, $title_font_id, $border, 4, $title, $letter_col);

    // Draw each bar and add a caption
    $start_y = $border;
    foreach ($items as $caption =&gt; $value) {
        $end_x = $border + ($value * $unit);
        $end_y = $start_y + $bar_width;
        ImageFilledRectangle($im, $border, $start_y, $end_x, $end_y, $bar_col);
        ImageString($im, $bar_caption_font_id, $border,
            $start_y + $bar_width + $caption_gap, $caption, $letter_col);
        $start_y = $start_y + ($bar_width + $bar_gap);
    }
 
    // Output the complete image.
    // Any text, error message or even white space that appears before this
    // (including any white space before the &#34;&lt;?php&#34; tag) will corrupt the
    // image data.  Comment out the &#34;header&#34; line to debug any issues.
    header(&#34;Content-type: image/jpg&#34;);
    ImageJpeg($im);
    ImageDestroy($im);
}
</pre>
<p>This function uses PHP&#39;s GD extension to create the graph. The default GD fonts are a bit clunky but new ones can be added. The output is a JPEG stream so the PHP file can be called anywhere in a web page&#39;s HTML code where you would otherwise include an image file.</p>
<p>In the AnyCo application, the image can be integrated by creating a new file <code>ac_graph_page.php</code>:</p>
<pre>&lt;?php
 
/**
 * ac_graph_page.php: Display a page containing the equipment graph
 * @package Graph
 */
 
session_start();
require(&#39;ac_equip.inc.php&#39;);
 
$sess = new \Equipment\Session;
$sess-&gt;getSession();
if (!isset($sess-&gt;username) || empty($sess-&gt;username)
         || !$sess-&gt;isPrivilegedUser()) {
    header(&#39;Location: index.php&#39;);
    exit;
}
 
$page = new \Equipment\Page;
$page-&gt;printHeader(&#34;AnyCo Corp. Equipment Graph&#34;);
$page-&gt;printMenu($sess-&gt;username, $sess-&gt;isPrivilegedUser());
 
echo &lt;&lt;&lt;EOF
&lt;div id=&#39;content&#39;&gt;
&lt;img src=&#39;ac_graph_img.php&#39; alt=&#39;Graph of office equipment&#39;&gt;
&lt;/div&gt;
EOF;
 
$page-&gt;printFooter();
 
?&gt;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The &#39;EOF;&#39; token must be at the start of a line and not have trailing white space.</div>
<p>The image is included in a normal HTML <code>img</code> tag.</p>
<p>Load the AnyCo application in a browser and log in as <code>Administrator</code>. Click the <span class="bold">Equipment Graph</span> link in the left hand navigation menu. The graph is displayed.</p>
<img width="809" height="644" src="img/chap11_jpeg_image.png" alt="JPEG Image for Equipment Graph"/><br/>
<p>If the image does not display, it might be a problem in <code>ac_graph_img.php</code> due to text such as an error message or even because of white space before the <code>&lt;?php</code> tag. This text will be included in the image stream and make the picture invalid. To help debug this kind of problem you could comment out the <code>$session</code> checks and also the <code>header()</code> call in <code>ac_graph_img.php</code>. Then to show the raw data of the image stream load the following link in a browser:</p>
<p><code>http://localhost/ac_graph_img.php</code></p>
<p>The JSON format is often used to efficiently transfer data between a browser and a PHP server. The <code>ac_get_json.php</code> web service could be used directly in many of the available JSON graphics libraries.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4949">
<tr>
<td class="cellalignment4956">
<table class="cellalignment4954">
<tr>
<td class="cellalignment4953"><a href="ch_ten_insert_multiple.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4953"><a href="ch_twelve_blobs.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2010, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4958">
<table class="cellalignment4952">
<tr>
<td class="cellalignment4953"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4953"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4953"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4953"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4953"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4953"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>