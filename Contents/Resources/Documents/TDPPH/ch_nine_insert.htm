<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106347"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Inserting%20Data"></a><title>Inserting Data</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743"/>
<meta name="dcterms.created" content="2014-02-04T21:52:15Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database 2 Day + PHP Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E18554-05"/>
<meta name="dcterms.isVersionOf" content="TDPPH"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2010, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ch_eight_query.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_ten_insert_multiple.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18554-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/18</span> <!-- End Header -->
<div id="TDPPH173" class="chapter"><a id="BEHCJBGD"></a>
<h1 class="chapter"><span class="secnum">9</span> Inserting Data</h1>
<p>To enable pieces of equipment to be assigned to employees the AnyCo application will have an HTML form. The form allows administrators to assign a piece of equipment to a specific employee.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BEHJFAFA">Building the Insert Form</a></p>
</li>
<li>
<p><a href="#BEHGIIDI">Running the Single Insert Form</a></p>
</li>
<li>
<p><a href="#BEHCDCFA">CSRF example with ac_add_one.php</a></p>
</li>
</ul>
<a id="BEHJFAFA"></a>
<div id="TDPPH174" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Building the Insert Form</h2>
<p>Create a new PHP file <code>ac_add_one.php</code>. Initially the file looks like:</p>
<pre>&lt;?php
 
/**
 * ac_add_one.php: Add one piece of equipment to an employee
 * @package Application
 */
session_start();
require(&#39;ac_db.inc.php&#39;);
require(&#39;ac_equip.inc.php&#39;);
 
$sess = new \Equipment\Session;
$sess-&gt;getSession();
if (!isset($sess-&gt;username) || empty($sess-&gt;username)
        || !$sess-&gt;isPrivilegedUser()
        || (!isset($_GET[&#39;empid&#39;]) &amp;&amp; !isset($_POST[&#39;empid&#39;]))) {
    header(&#39;Location: index.php&#39;);
    exit;
}
$empid = (int) (isset($_GET[&#39;empid&#39;]) ? $_GET[&#39;empid&#39;] : $_POST[&#39;empid&#39;]);
 
$page = new \Equipment\Page;
$page-&gt;printHeader(&#34;AnyCo Corp. Add Equipment&#34;);
$page-&gt;printMenu($sess-&gt;username, $sess-&gt;isPrivilegedUser());
printcontent($sess, $empid);
$page-&gt;printFooter();
 
// Functions
 
?&gt;
</pre>
<p>The process flow of operation will be similar to <code>index.php</code>. The first time <code>ac_add_one.php</code> is run an HTML input form will be displayed. When the user submits the form, <code>ac_add_one.php</code> is invoked again, which will insert the data into the database.</p>
<p>The privileges required by this function include checks that an employee id is set in either the <code>$_GET[&#39;empid&#39;]</code> or <code>$_POST[&#39;empid&#39;]</code> superglobals. When <code>ac_add_one.php</code> is first called (see <code>printrecords()</code> in <code>ac_emp_list.php</code>), the employee id is passed as a URL parameter and will be in the <code>$_GET</code> superglobal. When the form (that will shortly be shown) in <code>ac_add_one.php</code> is submitted, the employee identifier will be in <code>$_POST</code>.</p>
<p>Add the <code>printcontent()</code> function to <code>ac_add_one.php</code>:</p>
<pre>/**
 * Print the main body of the page
 *
 * @param Session $sess
 * @param integer $empid Employee identifier
 */
function printcontent($sess, $empid) {
    echo &#34;&lt;div id=&#39;content&#39;&gt;\n&#34;;
    $db = new \Oracle\Db(&#34;Equipment&#34;, $sess-&gt;username);
    if (!isset($_POST[&#39;equip&#39;]) || empty($_POST[&#39;equip&#39;])) {
        printform($sess, $db, $empid);
    } else {
        /* if (!isset($_POST[&#39;csrftoken&#39;])
                || $_POST[&#39;csrftoken&#39;] != $sess-&gt;csrftoken) {
            // the CSRF token they submitted does not match the one sent
            header(&#39;Location: index.php&#39;);
            exit;
        } */
        $equip = getcleanequip();
        if (empty($equip)) {
            printform($sess, $db, $empid);
        } else {
            doinsert($db, $equip, $empid);
            echo &#34;&lt;p&gt;Added new equipment&lt;/p&gt;&#34;;
            echo &#39;&lt;a href=&#34;ac_show_equip.php?empid=&#39;
                 . $empid . &#39;&#34;&gt;Show Equipment&lt;/a&gt;&#39; . &#34;\n&#34;;
        }
    }
    echo &#34;&lt;/div&gt;&#34;;  // content
}
</pre>
<p>The <code>printcontent()</code> function contains the logic to decide if the HTML form should be printed or the user-entered data should be inserted. The commented-out CSRF token code will be discussed below.</p>
<p>Also in <code>ac_add_one.php</code> add the <code>printform()</code> function:</p>
<pre>/**
 * Print the HTML form for entering new equipment
 *
 * @param Session $sess
 * @param Db $db
 * @param integer $empid Employee identifier
 */
function printform($sess, $db, $empid) {
    $empname = htmlspecialchars(getempname($db, $empid), ENT_NOQUOTES, &#39;UTF-8&#39;);
    $empid = (int) $empid;
    $sess-&gt;setCsrfToken();
    echo &lt;&lt;&lt;EOF
Add equipment for $empname
&lt;form method=&#39;post&#39; action=&#39;${_SERVER[&#34;PHP_SELF&#34;]}&#39;&gt;
&lt;div&gt;
    Equipment name &lt;input type=&#34;text&#34; name=&#34;equip&#34;&gt;&lt;br&gt;
    &lt;input type=&#34;hidden&#34; name=&#34;empid&#34; value=&#34;$empid&#34;&gt;
    &lt;input type=&#34;hidden&#34; name=&#34;csrftoken&#34; value=&#34;$sess-&gt;csrftoken&#34;&gt;
    &lt;input type=&#34;submit&#34; value=&#34;Submit&#34;&gt;
&lt;/div&gt;
&lt;/form&gt;
EOF;
}
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>EOF;</code> token must be at the start of a line and not have trailing white space.</div>
<p>This simple form prompts the user for a value. The CSRF token will be described later.</p>
<p>Add the <code>getcleanequip()</code> function to <code>ac_add_one.php</code>:</p>
<pre>/**
 * Perform validation and data cleaning so empty strings are not inserted
 *
 * @return string The new data to enter
 */
function getcleanequip() {
    if (!isset($_POST[&#39;equip&#39;])) {
        return null;
    } else {
        $equip = $_POST[&#39;equip&#39;];
        return(trim($equip));
    }
}
</pre>
<p>This implementation strips any leading or trailing white space from the entered data.</p>
<p>The general mantra for basic web application security is to filter input and escape output. The <code>getcleanequip()</code> function filters input. The data could be sanitized in other ways here. You may decide that you do not want HTML tags to be accepted. You can strip such tags by using one of PHP&#39;s input filters. For example, if you wanted, you could change:</p>
<pre>        $equip = $_POST[&#39;equip&#39;];
</pre>
<p>to</p>
<pre>        $equip = filter_input(INPUT_POST, &#39;equip&#39;, FILTER_SANITIZE_STRING);
</pre>
<p>This would remove HTML tags, leaving other text in place.</p>
<p>In <code>ac_add_one.php</code>, valid data is inserted by <code>doinsert()</code>. Add the code for this function to the file:</p>
<pre>/**
 * Insert a piece of equipment for an employee
 *
 * @param Db $db
 * @param string $equip Name of equipment to insert
 * @param string $empid Employee identifier
 */
function doinsert($db, $equip, $empid) {
    $sql = &#34;INSERT INTO equipment (employee_id, equip_name) VALUES (:ei, :nm)&#34;;
    $db-&gt;execute($sql, &#34;Insert Equipment&#34;, array(array(&#34;ei&#34;, $empid, -1),
                                                 array(&#34;nm&#34;, $equip, -1)));
}
</pre>
<p>This uses the existing <code>Db::execute()</code> method in <code>ac_db.inc.php</code> with familiar bind variable syntax. The <code>Db</code> class automatically commits each time <code>oci_execute()</code> is called as discussed earlier in the section <a href="ch_three_db_access_class.htm#CIHHDJHB">Running SQL with the Db Class</a>.</p>
<p>Finally, to complete <code>ac_add_one.php</code>, add the helper function <code>getempname()</code>:</p>
<pre>/**
 * Get an Employee Name
 *
 * @param Db $db
 * @param integer $empid
 * @return string An employee name
 */
function getempname($db, $empid) {
    $sql = &#34;SELECT first_name || &#39; &#39; || last_name AS emp_name
        FROM employees
        WHERE employee_id = :id&#34;;
    $res = $db-&gt;execFetchAll($sql, &#34;Get EName&#34;, array(array(&#34;id&#34;, $empid, -1)));
    $empname = $res[0][&#39;EMP_NAME&#39;];
    return($empname);
}
</pre>
<p>This is identical to the function of the same name in <code>ac_show_equip.php</code>.</p>
<p>Similar functionality to the <code>ac_show_equip.php</code> form could be used to delete or update records, remembering the limitations of a stateless web architecture means that rows cannot be locked in one HTML page and changed in another.</p>
</div>
<!-- class="sect1" -->
<a id="BEHGIIDI"></a>
<div id="TDPPH175" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Running the Single Insert Form</h2>
<p>Run the AnyCo application and log in as <code>Administrator</code>. Click the <span class="bold">Add One</span> link next to Steven King. The equipment input form is displayed:</p>
<img width="736" height="222" src="img/chap9_insert.png" alt="Insert Form"/><br/>
<p>Enter a new piece of equipment, <code>paper</code>, and click <span class="bold">Submit</span>. The new data is inserted. The updated list can be seen by clicking <span class="bold">Show</span> link next to Steven King.</p>
<img width="736" height="208" src="img/chap9_paper.png" alt="Show Equipment"/><br/></div>
<!-- class="sect1" -->
<a id="BEHCDCFA"></a>
<div id="TDPPH176" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">CSRF example with ac_add_one.php</h2>
<p>The form is currently prone to CSRF attacks, where another site can take advantage of you being logged in and cause you to submit data or do some other privileged operation.</p>
<p>To show this, create a new HTML page called <code>hack.html</code>:</p>
<pre>&lt;html&gt;
&lt;!-- hack.html: Show issues with CSRF --&gt;
&lt;body&gt;
&lt;h1&gt;Make Millions!&lt;/h1&gt;
&lt;form method=&#39;post&#39; action=&#39;http://localhost/ac_add_one.php&#39;&gt;
&lt;div&gt;
    Do you dream of being rich?&lt;br&gt;
    &lt;input type=&#34;hidden&#34; name=&#34;equip&#34; value=&#34;fish&#34;&gt;
    &lt;input type=&#34;hidden&#34; name=&#34;empid&#34; value=&#34;100&#34;&gt;
    &lt;input type=&#34;submit&#34; value=&#34;Win&#34;&gt;
&lt;/div&gt;
&lt;/form&gt;
 
&lt;/body&gt;
&lt;/html&gt;
</pre>
<p>Change the HTML form action URL to match your system.</p>
<p>Run the AnyCo application in a browser and login as <code>Administrator</code>. In a new browser tab or window, open the following file:</p>
<p><code>http://localhost/hack.html</code></p>
<p>Ostensibly to the person looking at the page it has nothing to do with the AnyCo application.</p>
<img width="235" height="122" src="img/chap9_csrf_ac_add_1.png" alt="CSRF"/><br/>
<p>Click the <span class="bold">Win</span> button. This calls the AnyCo application and causes the bogus equipment name <code>fish</code> to be inserted into the equipment list of employee <code>100</code> (which is Steven King). The inserted value can be seen on the subsequent <span class="bold">Show Equipment</span> page:</p>
<img width="736" height="218" src="img/chap9_fish.png" alt="Show Equipment result with the entry fish"/><br/>
<p>Now edit <code>ac_add_one.php</code> and enable CSRF protection by removing the comments for the check in <code>printcontent()</code>:</p>
<pre>    ...
    } else {
        <span class="bold">if (!isset($_POST[&#39;csrftoken&#39;])</span>
                <span class="bold">|| $_POST[&#39;csrftoken&#39;] != $sess-&gt;csrftoken) {</span>
            <span class="bold">// the CSRF token they submitted does not match the one sent</span>
            <span class="bold">header(&#39;Location: index.php&#39;);</span>
            <span class="bold">exit;</span>
        <span class="bold">}</span>
        $equip = getcleanequip();
     ...
</pre>
<p>The form in <code>ac_add_one.php</code> includes a generated Cross-Site Request Forgery token as a hidden field. The value is also stored in the user session. The CSRF check in <code>printcontent()</code> will verify that the token in the submitted form matches PHP&#39;s stored session value.</p>
<p>Save the file and run the AnyCo application again, logging in as <code>Administrator</code>. In a new browser tab or window, open the following file:</p>
<p><code>http://localhost/hack.html</code></p>
<p>Now click <span class="bold">Win</span>.</p>
<p>This time the CSRF protection in <code>printcontent()</code> does not find a CSRF token in the submitted form and redirects to the login page, index.php, which logs out. Log back in again to the AnyCo application and check that Steven King&#39;s equipment list is unchanged, with no second entry for <code>fish</code>. For hack.html to be successful it would have to know the value of the <code>csrftoken</code> field that gets stored in the PHP session when the <code>ac_add_one.php</code> generates the real entry form.</p>
<p>CSRF protection is just one of many kinds of security restrictions that web applications should enforce. You should do a thorough security evaluation of any code you deploy on the web.</p>
<p>Many of the popular PHP frameworks provide assistance to reduce the amount of effort required in producing a secure application. For example they may provide a more secure implementation of CSRF token generation than the one in the AnyCo Session class.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4949">
<tr>
<td class="cellalignment4956">
<table class="cellalignment4954">
<tr>
<td class="cellalignment4953"><a href="ch_eight_query.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4953"><a href="ch_ten_insert_multiple.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2010, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4958">
<table class="cellalignment4952">
<tr>
<td class="cellalignment4953"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4953"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4953"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4953"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4953"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4953"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>