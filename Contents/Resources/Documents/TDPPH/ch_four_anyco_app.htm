<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106345"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Building%20the%20AnyCo%20Application"></a><title>Building the AnyCo Application</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743"/>
<meta name="dcterms.created" content="2014-02-04T21:52:15Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database 2 Day + PHP Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E18554-05"/>
<meta name="dcterms.isVersionOf" content="TDPPH"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2010, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ch_three_db_access_class.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_five_emp_data.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18554-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/18</span> <!-- End Header -->
<div id="TDPPH153" class="chapter"><a id="sthref139"></a>
<h1 class="chapter"><span class="secnum">4</span> Building the AnyCo Application</h1>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CEGCHCFF">A Cascading Style Sheet</a></p>
</li>
<li>
<p><a href="#CEGDFADB">An Application Class for Sessions</a></p>
</li>
<li>
<p><a href="#CEGGDGJF">Providing a Stateful Web Experience with PHP Sessions</a></p>
</li>
<li>
<p><a href="#CEGEBGDC">Adding a Page Class</a></p>
</li>
<li>
<p><a href="#CEGHAEDE">The Application Login Page</a></p>
</li>
</ul>
<a id="CEGCHCFF"></a>
<div id="TDPPH154" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">A Cascading Style Sheet</h2>
<p>To start creating the AnyCo application, create a cascading style sheet file <code>style.css</code>. It contains:</p>
<pre>/* style.css */
 
body {
    background: #FFFFFF;
    color:      #000000;
    font-family: Arial, sans-serif;
}
 
table {
    border-collapse: collapse;
    margin: 5px;
}
 
tr:nth-child(even) {background-color: #FFFFFF}
tr:nth-child(odd) {background-color: #EDF3FE}
 
td, th {
    border: solid #000000 1px;
    text-align: left;
    padding: 5px;
}
 
#header {
    font-weight: bold;
    font-size: 160%;
    text-align: center;
    border-bottom: solid #334B66 4px;
    margin-bottom: 10px;
}
 
#menu {
    position: absolute;
    left: 5px;
    width: 180px;
    display: block;
    background-color: #dddddd;
}
#user {
    font-size: 90%;
    font-style:italic;
    padding: 3px;
}
 
#content {
    margin-left: 200px;
}
</pre>
<p>This gives a simple styling to the application, keeping a menu to the left hand side of the main content. Alternate rows of table output are colored differently. See <a href="ch_one.htm#BABGJGFJ">Figure 1-1</a> in <a href="ch_one.htm#CHDEECCB">Chapter 1, &#34;Introducing PHP with Oracle Database.&#34;</a></p>
</div>
<!-- class="sect1" -->
<a id="CEGDFADB"></a>
<div id="TDPPH155" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">An Application Class for Sessions</h2>
<p>For the AnyCo application two classes are created, Session and Page, to give some reusable components.</p>
<p>The Session class is where web user authentication will be added. It also provides the components for saving and retrieving web user &#34;session&#34; information on the mid-tier, allowing the application to be stateful. PHP sessions are not directly related to Oracle sessions which were discussed in the DRCP overview. Data such as starting row number of the currently displayed page of query results can be stored in the PHP session. The next HTTP request can retrieve this value from the session storage and show the next page of results.</p>
<p>Create a new PHP file called <code>ac_equip.inc.php</code> initially containing:</p>
<pre>&lt;?php
 
/**
 * ac_equip.inc.php: PHP classes for the employee equipment example
 * @package Equipment
 */
namespace Equipment;
 
/**
 * URL of the company logo
 */
//define(&#39;LOGO_URL&#39;, &#39;http://localhost/ac_logo_img.php&#39;);
 
/**
 * @package Equipment
 * @subpackage Session
 */
class Session {
    /**
     *
     * @var string Web user&#39;s name
     */
    public $username = null;
    /**
     *
     * @var integer  current record number for paged employee results
     */
    public $empstartrow = 1;
    /**
     *
     * @var string CSRF token for HTML forms
     */
    public $csrftoken = null;
 
}
 
?&gt;
</pre>
<p>The file starts with a namespace declaration, <code>Equipment</code> in this case.</p>
<p>The commented out LOGO_URL constant will be described later in the <a href="ch_twelve_blobs.htm#BABEIGDA">Chapter 12, &#34;Uploading and Displaying BLOBs.&#34;</a></p>
<p>The <code>$username</code> attribute will store the web user&#39;s name. The <code>$empstartrow</code> attribute stores the first row number of the currently displayed set of employees. This allows employee data to be &#34;paged&#34; through with <span class="bold">Next</span> and <span class="bold">Previous</span> buttons as shown in <a href="ch_one.htm#BABGJGFJ">Figure 1-1, &#34;Overview of the Sample Application&#34;</a>. The <code>$csrftoken</code> value will be described in the <a href="ch_nine_insert.htm#BEHCJBGD">Chapter 9, &#34;Inserting Data.&#34;</a></p>
<p>Add two authentication methods to the Session class:</p>
<pre>    /**
     * Simple authentication of the web end-user
     *
     * @param string $username
     * @return boolean True if the user is allowed to use the application
     */
    public function authenticateUser($username) {
        switch ($username) {
            case &#39;admin&#39;:
            case &#39;simon&#39;:
                $this-&gt;username = $username;
                return(true);  // OK to login
            default:
                $this-&gt;username = null;
                return(false); // Not OK
        }
    }
 
    /**
     * Check if the current user is allowed to do administrator tasks
     *
     * @return boolean
     */
    public function isPrivilegedUser() {
        if ($this-&gt;username === &#39;admin&#39;)
            return(true);
        else
            return(false);
    }
</pre>
<p>The <code>authenticateUser()</code> method implements extremely unsophisticated and insecure user authentication. Typically PHP web applications do their own user authentication. Here only <code>admin</code> and <code>simon</code> will be allowed to use the application. For more information on authentication refer to</p>
<p><code><a href="http://www.oracle.com/technetwork/articles/mclaughlin-phpid1-091467.html">http://www.oracle.com/technetwork/articles/mclaughlin-phpid1-091467.html</a></code></p>
<p>The <code>isPrivilegedUser()</code> method returns a boolean value indicating if the current user is considered privileged. In the AnyCo application this will be used to determine if the user can see extra reports and can upload new data. Only the AnyCo &#34;admin&#34; will be allowed to do these privileged operations.</p>
</div>
<!-- class="sect1" -->
<a id="CEGGDGJF"></a>
<div id="TDPPH156" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Providing a Stateful Web Experience with PHP Sessions</h2>
<p>PHP can store session values that appear persistent as users move from HTML page to HTML page. By default the session data is stored in a file on the PHP server&#39;s disk. The session data is identified by a unique cookie value, or a value passed in the URL if the user has cookies turned off. The cookie allows PHP to associate its local session storage with the correct web user.</p>
<p>PHP sessions allow user HTTP page requests to be handled seamlessly by random mid-tier Apache processes while still allowing access to the current session data for each user. PHP allow extensive customization of session handling, including ways to perform session expiry and giving you ways to store the session data in a database. Refer to the PHP documentation for more information.</p>
<p>To store, fetch and clear the session values in the AnyCo application, add these three methods to the Session class:</p>
<pre>    /**
     * Store the session data to provide a stateful web experience
     */
    public function setSession() {
        $_SESSION[&#39;username&#39;]    = $this-&gt;username;
        $_SESSION[&#39;empstartrow&#39;] = (int)$this-&gt;empstartrow;
        $_SESSION[&#39;csrftoken&#39;]   = $this-&gt;csrftoken;
    }
 
    /**
     * Get the session data to provide a stateful web experience
     */
    public function getSession() {
        $this-&gt;username = isset($_SESSION[&#39;username&#39;]) ?
             $_SESSION[&#39;username&#39;] : null;
        $this-&gt;empstartrow = isset($_SESSION[&#39;empstartrow&#39;]) ?
             (int)$_SESSION[&#39;empstartrow&#39;] : 1;
        $this-&gt;csrftoken = isset($_SESSION[&#39;csrftoken&#39;]) ?
             $_SESSION[&#39;csrftoken&#39;] : null;
    }
 
    /**
     * Logout the current user
     */
    public function clearSession() {
        $_SESSION = array();
        $this-&gt;username = null;
        $this-&gt;empstartrow = 1;
        $this-&gt;csrftoken = null;
    }
</pre>
<p>These reference the superglobal associative array <code>$_SESSION</code> which gives access to PHP&#39;s session data. When any of the Session attributes change, the AnyCo application will call <code>setSession()</code> to record the changed state. Later when another application request starts processing, its script will call the <code>getSession()</code> method to retrieve the saved attribute values. The ternary &#34;<code>?:</code>&#34; tests will use the session value if there is one, or else use a hardcoded default.</p>
<p>Finally, add the following method to the Session class to aid CSRF protection in HTML forms. This will be described in the section <a href="ch_nine_insert.htm#BEHCDCFA">CSRF example with ac_add_one.php</a> in <a href="ch_nine_insert.htm#BEHCJBGD">Chapter 9, &#34;Inserting Data.&#34;</a></p>
<pre>    /**
     * Records a token to check that any submitted form was generated
     * by the application.
     *
     * For real systems the CSRF token should be securely,
     * randomly generated so it cannot be guessed by a hacker
     * mt_rand() is not sufficient for production systems.
     */
    public function setCsrfToken() {
        $this-&gt;csrftoken = mt_rand();
        $this-&gt;setSession();
    }
</pre></div>
<!-- class="sect1" -->
<a id="CEGEBGDC"></a>
<div id="TDPPH157" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding a Page Class</h2>
<p>A Page class will provide methods to output blocks of HTML output so each web page of the application has the same appearance.</p>
<p>Add the new Page class to the <code>ac_equip.inc.php</code> file after the closing brace of the Session class, but before the PHP closing tag &#39;<code>?&gt;</code>&#39;. The class initially looks like:</p>
<pre>/**
 * @package Equipment
 * @subpackage Page
 */
class Page {
    /**
     * Print the top section of each HTML page
     * @param string $title The page title
     */
    public function printHeader($title) {
        $title = htmlspecialchars($title, ENT_NOQUOTES, &#39;UTF-8&#39;);
        echo &lt;&lt;&lt;EOF
&lt;!DOCTYPE HTML PUBLIC &#34;-//W3C//DTD HTML 4.01//EN&#34;
     &#34;http://www.w3.org/TR/html4/strict.dtd&#34;&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta http-equiv=&#34;Content-Type&#34;
        content=&#34;text/html; charset=utf-8&#34;&gt;
  &lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;style.css&#34;&gt;
  &lt;title&gt;$title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=&#34;header&#34;&gt;
EOF;
// Important: do not put white space on the &#39;EOF;&#39; line before or after the tag
 
        if (defined(&#39;LOGO_URL&#39;)) {
            echo &#39;&lt;img src=&#34;&#39; . LOGO_URL . &#39;&#34; alt=&#34;Company Icon&#34;&gt;&amp;nbsp;&#39;;
        }
        echo &#34;$title&lt;/div&gt;&#34;;
    }
    /**
     * Print the bottom of each HTML page
     */
    public function printFooter() {
        echo &#34;&lt;/body&gt;&lt;/html&gt;\n&#34;;
    }
 
}
</pre>
<p>The <code>printHeader()</code> method prints the HTML page prologue, includes the style sheet, and prints the page title.</p>
<p>A PHP &#39;heredoc&#39; is used to print the big block of HTML content. The variable $title in the text will be expanded and its value displayed. The closing tag &#39;<code>EOF;</code>&#39; must be at the start of the line and also not have any trailing white space. Otherwise the PHP parser will treat the rest of the file as part of the string text and will produce a random parsing error when it encounters something that looks like a PHP variable.</p>
<p>A logo will also be displayed in the header when <code>LOGO_URL</code> is defined in a later example, remember it is currently commented out at the top of <code>ac_equip.inc.php</code>.</p>
<p>The <code>printFooter()</code> methods simply ends the HTML page body. A general application could augment this to display content that should be printed at the bottom of each page, such as site copyright information.</p>
<p>The AnyCo application has a left hand navigation menu. Add a method to the Page class to print this:</p>
<pre>    /**
     * Print the navigation menu for each HTML page
     *
     * @param string $username The current web user
     * @param type $isprivilegeduser True if the web user is privileged
     */
    public function printMenu($username, $isprivilegeduser) {
        $username = htmlspecialchars($username, ENT_NOQUOTES, &#39;UTF-8&#39;);
        echo &lt;&lt;&lt;EOF
&lt;div id=&#39;menu&#39;&gt;
&lt;div id=&#39;user&#39;&gt;Logged in as: $username &lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;ac_emp_list.php&#39;&gt;Employee List&lt;/a&gt;&lt;/li&gt;
EOF;
        if ($isprivilegeduser) {
            echo &lt;&lt;&lt;EOF
&lt;li&gt;&lt;a href=&#39;ac_report.php&#39;&gt;Equipment Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;ac_graph_page.php&#39;&gt;Equipment Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;ac_logo_upload.php&#39;&gt;Upload Logo&lt;/a&gt;&lt;/li&gt;
EOF;
        }
        echo &lt;&lt;&lt;EOF
&lt;li&gt;&lt;a href=&#34;index.php&#34;&gt;Logout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
EOF;
    }
</pre>
<p>The user name and privileged status of the user will be passed in to customize the menu for each user. These values will come from the <code>Session</code> class.</p>
<p>Later chapters in this manual will create the PHP files referenced in the links. Clicking those link without having the files created will give an expected error.</p>
<p>The three classes: <code>Db</code>, <code>Session</code>, and <code>Page</code>, used by the AnyCo application are now complete.</p>
</div>
<!-- class="sect1" -->
<a id="CEGHAEDE"></a>
<div id="TDPPH158" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">The Application Login Page</h2>
<p>The start page of the AnyCo application is the login page. Create a new PHP file called <code>index.php</code>. In NetBeans replace the existing contents of this file. The <code>index.php</code> file should contain:</p>
<pre>&lt;?php
 
/**
 * index.php: Start page for the AnyCo Equipment application
 *
 * @package Application
 */
 
session_start();
require(&#39;ac_equip.inc.php&#39;);
 
$sess = new \Equipment\Session;
$sess-&gt;clearSession();
 
if (!isset($_POST[&#39;username&#39;])) {
    $page = new \Equipment\Page;
    $page-&gt;printHeader(&#34;Welcome to AnyCo Corp.&#34;);
    echo &lt;&lt;&lt; EOF
&lt;div id=&#34;content&#34;&gt;
&lt;h3&gt;Select User&lt;/h3&gt;
&lt;form method=&#34;post&#34; action=&#34;index.php&#34;&gt;
&lt;div&gt;
&lt;input type=&#34;radio&#34; name=&#34;username&#34; value=&#34;admin&#34;&gt;Administrator&lt;br&gt;
&lt;input type=&#34;radio&#34; name=&#34;username&#34; value=&#34;simon&#34;&gt;Simon&lt;br&gt;
&lt;input type=&#34;submit&#34; value=&#34;Login&#34;&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
EOF;
// Important: do not put white space on the &#39;EOF;&#39; line before or after the tag
    $page-&gt;printFooter();
} else {
    if ($sess-&gt;authenticateUser($_POST[&#39;username&#39;])) {
        $sess-&gt;setSession();
        header(&#39;Location: ac_emp_list.php&#39;);
    } else {
        header(&#39;Location: index.php&#39;);
    }
}
 
?&gt;
</pre>
<p>The <code>index.php</code> file begins with a <code>session_start()</code> call. This must occur in code that wants to use the <code>$_SESSION</code> superglobal and should be called before any output is created.</p>
<p>An instance of the Session class is created and any existing session data is discarded by the <code>$sess-&gt;clearSession()</code> call. This allows the file to serve as a logout page. Any time <code>index.php</code> is loaded, the web user will be logged out of the application.</p>
<p>The bulk of the file is in two parts, one creating an HTML form and the other processing it. The execution path is determined by the PHP superglobal <code>$_POST</code>. The first time this file is run <code>$_POST[&#39;username&#39;]</code> won&#39;t be set so the HTML form along with the page header and footer will be displayed. The form allows the web user login as <code>Administrator</code> or <code>Simon</code>.</p>
<p>The submission action target for the form is <code>index.php</code> itself. So after the user submits the form in their browser, this same PHP file is run. Since the submission method is &#34;<code>post</code>&#34;, PHP will populate the superglobal <code>$_POST</code> with the form values. This time the second branch of the &#39;<code>if</code>&#39; statement will be run.</p>
<p>The user is then authenticated. The radio button input values &#39;<code>admin</code>&#39; and &#39;<code>simon</code>&#39; are the values that will be passed to <code>$sess-&gt;authenticateUser()</code>. A valid user will be recorded in the session data. PHP then sends back an HTTP header causing a browser redirect to <code>ac_emp_list.php</code>. This file will be created in the next section.</p>
<p>If the user is not validated by <code>$sess-&gt;authenticateUser()</code> then the login form is redisplayed.</p>
<p>Scripts should not display text before a <code>header()</code> call is run.</p>
<p>To run the application as it stands, load <code>index.php</code> in a browser. In NetBeans, use Run-&gt;Run Project, or press <span class="bold">F6</span>. The browser will show:</p>
<img width="812" height="227" src="img/chap3_login.png" alt="AnyCo Corp login page"/><br/></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4949">
<tr>
<td class="cellalignment4956">
<table class="cellalignment4954">
<tr>
<td class="cellalignment4953"><a href="ch_three_db_access_class.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4953"><a href="ch_five_emp_data.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2010, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4958">
<table class="cellalignment4952">
<tr>
<td class="cellalignment4953"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4953"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4953"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4953"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4953"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4953"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>