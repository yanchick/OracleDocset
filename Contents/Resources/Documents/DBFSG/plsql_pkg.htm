<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-5121"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Database%20Real%20Application%20Security%20PL%2FSQL%C2%A0Packages"></a><title>Oracle Database Real Application Security PL/SQL&nbsp;Packages</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-02-17T18:31:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Real Application Security Administrator&#39;s and Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E48189-13"/>
<meta name="dcterms.isVersionOf" content="DBFSG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2012, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="plsql_fun.htm" title="Previous" type="text/html"/>
<link rel="Next" href="security_hr_demo_tutorial.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E48189-13.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-42EF8B2A-31E4-4EE9-8963-5BDE681193A5"></a> <span id="PAGE" style="display:none;">18/25</span> <!-- End Header -->
<a id="DBFSG99295"></a><a id="DBFSG80000"></a>
<h1 id="DBFSG-GUID-42EF8B2A-31E4-4EE9-8963-5BDE681193A5" class="sect1"><span class="enumeration_chapter">11</span> Oracle Database Real Application Security PL/SQL&nbsp;Packages</h1>
<div>
<p>This chapter describes the PL/SQL packages that are available with Oracle Database Real Application Security.</p>
<p><a href="plsql_pkg.htm#GUID-42EF8B2A-31E4-4EE9-8963-5BDE681193A5__BABBCAAC" title="This table has 2 columns. Column 1 is the name of the PL/SQL package and column 2 is its description.">Table 11-1</a> lists these packages. Detailed information on each package follows this table.</p>
<div class="tblformal" id="GUID-42EF8B2A-31E4-4EE9-8963-5BDE681193A5__BABBCAAC">
<p class="titleintable">Table 11-1 Oracle Database Real Application Security PL/SQL Packages</p>
<table class="cellalignment5205" title="Oracle Database Real Application Security PL/SQL Packages" summary="This table has 2 columns. Column 1 is the name of the PL/SQL package and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5206" id="d84027e121">PL/SQL Package</th>
<th class="cellalignment5207" id="d84027e124">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e129" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-58E91ECF-5260-4648-9100-FADEC5FA9DE7">DBMS_XS_SESSIONS Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e129 d84027e124">
<p>Includes subprograms to manage an application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e138" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-7EDC932E-82DE-4CC5-A9AC-F5A376D7621F">XS_ACL Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e138 d84027e124">
<p>Includes subprograms to create, manage, and delete Access Control Lists (ACLs) and to add and remove parameter values.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e147" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-F39AEA2C-EF16-4E19-BE15-55CFD799E7F8">XS_ADMIN_UTIL Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e147 d84027e124">
<p>Includes helper subprograms.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e156" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-86D3D88B-27EA-440E-9D62-5771F0BF2593">XS_DATA_SECURITY Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e156 d84027e124">
<p>Includes subprograms to create, manage, and delete data security policies, associated data realm constraints, column constraints, and ACL parameters.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e165" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-90D4C94D-AE95-4DD5-ACE4-DDD6D3F28D0D">XS_DATA_SECURITY_UTIL Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e165 d84027e124">
<p>Includes subprograms to schedule automatic refreshment for static ACL to a user table and change the ACL refreshment mode to on-commit or on-demand refresh.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e174" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-A9C89475-4E4F-43D4-981B-C44596FB2B54">XS_DIAG Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e174 d84027e124">
<p>Includes subprograms to diagnose potential problems in Real Application Security objects and report identified inconsistencies.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e183" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-CDDF9856-4F59-44D6-923B-85957FB1BE7B">XS_NAMESPACE Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e183 d84027e124">
<p>Includes subprograms to create, manage, and delete namespace templates and attributes.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e192" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-50D04FCD-BB85-42A5-851D-559D5D537325">XS_PRINCIPAL Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e192 d84027e124">
<p>Includes subprograms to create, manage, and delete application users and roles.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e201" headers="d84027e121">
<p><a href="plsql_pkg.htm#GUID-0141A8A6-DF49-49F6-95C8-B14231092BB8">XS_SECURITY_CLASS Package</a></p>
</td>
<td class="cellalignment5209" headers="d84027e201 d84027e124">
<p>Includes subprograms to create, manage, and delete security classes and their privileges. Also includes subprograms for managing security class inheritance.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG107"></a>
<div class="props_rev_3"><a id="GUID-58E91ECF-5260-4648-9100-FADEC5FA9DE7"></a>
<h2 id="DBFSG-GUID-58E91ECF-5260-4648-9100-FADEC5FA9DE7" class="sect2">DBMS_XS_SESSIONS Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">DBMS_XS_SESSIONS</code> package <a id="d84027e318" class="indexterm-anchor"></a>manages an application session.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG108"></a>
<div class="props_rev_3"><a id="GUID-A8A0EB64-F537-4FB8-9B2B-E2806A14603E"></a>
<h3 id="DBFSG-GUID-A8A0EB64-F537-4FB8-9B2B-E2806A14603E" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">DBMS_XS_SESSIONS</code> package <a id="d84027e432" class="indexterm-anchor"></a>is created in the <code class="codeph">SYS</code> schema. The privilege to execute the package is granted to <code class="codeph">PUBLIC</code>. The executing user must have the appropriate privilege for the particular operation.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG607"></a>
<div class="props_rev_3"><a id="GUID-DB5E93B6-0E2C-4BCD-93DB-06B7FFC220B8"></a>
<h3 id="DBFSG-GUID-DB5E93B6-0E2C-4BCD-93DB-06B7FFC220B8" class="sect3">Constants</h3>
<div>
<div class="section">
<p>The following constants<a id="d84027e549" class="indexterm-anchor"></a> define operation codes passed into namespace event handling functions:</p>
<pre dir="ltr">attribute_first_read_operation CONSTANT PLS_INTEGER := 1;
modify_attribute_operation     CONSTANT PLS_INTEGER := 2;
</pre>
<p>The following constants represent bit values that identify events of interest for a particular attribute in a namespace that has an event handling function:</p>
<pre dir="ltr">attribute_first_read_event     CONSTANT PLS_INTEGER := 1;
modify_attribute_event         CONSTANT PLS_INTEGER := 2;
</pre>
<p>The following constants define return codes that can be returned by a namespace event handling function:</p>
<pre dir="ltr">event_handling_succeeded       CONSTANT PLS_INTEGER := 0;
event_handling_failed          CONSTANT PLS_INTEGER := 1;
</pre>
<p>The following constants are used as input into the <code class="codeph">ADD_GLOBAL_CALLBACK</code>, <code class="codeph">DELETE_GLOBAL_CALLBACK</code>, and <code class="codeph">ENABLE_GLOBAL_CALLBACK</code> procedures:</p>
<pre dir="ltr">create_session_event       CONSTANT PLS_INTEGER := 1;
attach_session_event       CONSTANT PLS_INTEGER := 2;
guest_to_user_event        CONSTANT PLS_INTEGER := 3;
proxy_to_user_event        CONSTANT PLS_INTEGER := 4;
revert_to_user_event       CONSTANT PLS_INTEGER := 5;
enable_role_event          CONSTANT PLS_INTEGER := 6;
disable_role_event         CONSTANT PLS_INTEGER := 7;
enable_dynamic_role_event  CONSTANT PLS_INTEGER := 8;
disable_dynamic_role_event CONSTANT PLS_INTEGER := 9;
detach_session_event       CONSTANT PLS_INTEGER := 10;
terminate_session_event    CONSTANT PLS_INTEGER := 11;
direct_login_event         CONSTANT PLS_INTEGER := 12;
direct_logoff_event        CONSTANT PLS_INTEGER := 13;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG690"></a>
<div class="props_rev_3"><a id="GUID-6FF4F14E-4B37-4FD2-A183-8C3C04C402DC"></a>
<h3 id="DBFSG-GUID-6FF4F14E-4B37-4FD2-A183-8C3C04C402DC" class="sect3">Object Types, Constructor Functions, Synonyms, and Grants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e684" class="indexterm-anchor"></a>object types, constructor functions, synonyms, and <code class="codeph">GRANT</code> statements are defined for this package.</p>
<pre dir="ltr">CREATE OR REPLACE TYPE DBMS_XS_NSATTR AS OBJECT ( 
  --- Member variables   
  namespace        varchar2(130),
  attribute        varchar2(4000),
  attribute_value  varchar2(4000),
 
  --- Constructor for DBMS_XS_NSATTR type
  --- Only namespace name is mandatory
  CONSTRUCTOR FUNCTION DBMS_XS_NSATTR(
     namespace         IN VARCHAR2,
     attribute         IN VARCHAR2 DEFAULT NULL,
     attribute_value   IN VARCHAR2 DEFAULT NULL)
  RETURN SELF AS RESULT);

CREATE OR REPLACE PUBLIC SYNONYM DBMS_XS_NSATTR FOR SYS.DBMS_XS_NSATTR;
CREATE OR REPLACE TYPE DBMS_XS_NSATTRLIST AS VARRAY(1000) OF DBMS_XS_NSATTR;
CREATE OR REPLACE PUBLIC SYNONYM DBMS_XS_NSATTRLIST FOR SYS.DBMS_XS_NSATTRLIST;
GRANT EXECUTE ON DBMS_XS_NSATTR TO PUBLIC;
GRANT EXECUTE ON DBMS_XS_NSATTRLIST TO PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM DBMS_XS_SESSIONS FOR SYS.DBMS_XS_SESSIONS;
GRANT EXECUTE ON DBMS_XS_SESSIONS TO PUBLIC;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG110"></a><a id="DBFSG109"></a>
<div class="props_rev_3"><a id="GUID-3DA601CE-2902-486C-911E-D3EC2044F1D1"></a>
<h3 id="DBFSG-GUID-3DA601CE-2902-486C-911E-D3EC2044F1D1" class="sect3">Summary of DBMS_XS_SESSIONS Subprograms</h3>
<div>
<div class="tblformalwide" id="GUID-3DA601CE-2902-486C-911E-D3EC2044F1D1__GUID-336D98CC-E7FA-4DC5-8B68-E1263657D39F">
<p class="titleintable">Table 11-2 Summary of DBMS_XS_SESSIONS Subprograms</p>
<table class="cellalignment5210" title="Summary of DBMS_XS_SESSIONS Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5211" id="d84027e809">Subprogram</th>
<th class="cellalignment5212" id="d84027e812">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e817" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-9C80BEC1-29EA-430D-B597-3CA6182A7DFB">CREATE_SESSION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e817 d84027e812">
<p>Creates a new application session for the specified application user name.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e826" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-2CCDFDD1-F3B4-4EE5-A261-7871B18A0A91">ATTACH_SESSION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e826 d84027e812">
<p>Attaches the current traditional database session to the application session identified by the session ID.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e835" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-C93E0B47-6F3E-44E0-8A3F-5EE868050923">ASSIGN_USER Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e835 d84027e812">
<p>Assigns a named user to the currently attached anonymous Real Application Security session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e844" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-6F9F4CE9-A434-4F43-9141-48E3F7B0A800">SWITCH_USER Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e844 d84027e812">
<p>Switches the application user in the currently attached session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e853" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-0D41166C-98B5-4043-8A20-E524A2AE8BA6">CREATE_NAMESPACE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e853 d84027e812">
<p>Creates a new application namespace in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e862" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-60C4E4D8-714F-4732-815F-2261F8B5D022">CREATE_ATTRIBUTE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e862 d84027e812">
<p>Creates a new custom attribute for the specified application namespace in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e871" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-D82F1CAA-EE0A-4A75-A1B9-4BFCD301FDC4">SET_ATTRIBUTE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e871 d84027e812">
<p>Sets a new value for the specified attribute in the namespace in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e880" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-9A541912-E165-4204-A1A4-4E044628E8AE">GET_ATTRIBUTE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e880 d84027e812">
<p>Gets the value of an attribute in the namespace in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e889" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-4EDB9A35-A825-42BB-81B3-2D0A9ABAC9C3">RESET_ATTRIBUTE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e889 d84027e812">
<p>Resets an application namespace attribute to its original value in the specified namespace in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e898" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-68341420-959E-4FD6-B46D-3F06F8630424">DELETE_ATTRIBUTE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e898 d84027e812">
<p>Deletes the specified attribute from the specified namespace in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e907" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-E1FEF449-B93D-46A8-9319-63DB225C0BF6">DELETE_NAMESPACE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e907 d84027e812">
<p>Deletes the specified namespace and its attributes from the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e917" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-7EB3339F-E06A-4F0C-8615-D049CA3D9AD2">ENABLE_ROLE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e917 d84027e812">
<p>Enables a real application role in the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e926" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-4EC230A2-6155-420F-B995-0D9C4B5C3B38">DISABLE_ROLE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e926 d84027e812">
<p>Disables a real application role from the currently attached application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e935" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-AEA590DF-3C7C-4A50-A38E-53DB54266BF2">SET_SESSION_COOKIE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e935 d84027e812">
<p>Sets a new cookie value with the specified session ID.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e944" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-87606516-D001-4F52-92DB-F243027FF0DF">REAUTH_SESSION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e944 d84027e812">
<p>Updates the last authentication time for the session identified by specified session ID.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e953" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-A4B9CA18-5778-422C-89B6-E17D321A10BF">SET_INACTIVITY_TIMEOUT Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e953 d84027e812">
<p>Sets an inactivity timeout value, in minutes, for the specified session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e962" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-0F69D39A-CA89-4F88-9268-BABEED216B9D">SAVE_SESSION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e962 d84027e812">
<p>Saves or persists the changes performed in the currently attached session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e971" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-E991C805-AFFF-432D-877B-262EE8E9FA32">DETACH_SESSION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e971 d84027e812">
<p>Detaches the current traditional database session from the application session to which it is attached.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e980" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-65D575BD-FE85-4DA6-9C0D-8A3C9BD31E2A">DESTROY_SESSION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e980 d84027e812">
<p>Destroys or terminates the session specified by the session ID.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e989" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-A26E667D-741A-4371-9BE3-CCE27BE99FB6">ADD_GLOBAL_CALLBACK Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e989 d84027e812">
<p>Registers an existing event handler with the database.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e998" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-5C06BDE3-60A1-4EAF-8D16-4DB7931C779F">ENABLE_GLOBAL_CALLBACK Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e998 d84027e812">
<p>Enables or disables the global callback for the session event specified by the <code class="codeph">event_type</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e1010" headers="d84027e809">
<p><a href="plsql_pkg.htm#GUID-EE158701-CDD0-4C6E-8225-EA300F9FC352">DELETE_GLOBAL_CALLBACK Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e1010 d84027e812">
<p>Deletes an existing global callback association.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG144"></a><a id="DBFSG145"></a><a id="DBFSG146"></a><a id="DBFSG143"></a>
<div class="props_rev_3"><a id="GUID-9C80BEC1-29EA-430D-B597-3CA6182A7DFB"></a>
<h4 id="DBFSG-GUID-9C80BEC1-29EA-430D-B597-3CA6182A7DFB" class="sect4">CREATE_SESSION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_SESSION</code> procedure <a id="d84027e1131" class="indexterm-anchor"></a>creates a new application session for the specified user name. It returns a session identifier that you can use to reference the session in future calls.</p>
<p>The session can be created with a regular application user or an external application user. The session can be created in trusted mode or secure mode. In trusted mode, data security checks are bypassed; in secure mode, they are enforced.</p>
<p>The combination of regular session in trusted mode is not supported. Other combinations, regular session in secure mode, external session in trusted mode, or external session in secure mode are supported.</p>
<p>The <code class="codeph">namespaces</code> parameter is a list of triplet namespaces to be created, the attribute to be created, and the attribute value to be set. This is an optional parameter. The default value is <code class="codeph">NULL</code>. The <code class="codeph">XS$GLOBAL_VAR</code> and <code class="codeph">XS$SESSION</code> namespaces and their attributes are always available to the session.</p>
<p>This function does not attach the current traditional session to the newly created application session. Use the <a href="plsql_pkg.htm#GUID-2CCDFDD1-F3B4-4EE5-A261-7871B18A0A91">ATTACH_SESSION Procedure</a> to perform this task.</p>
<p>The user executing the procedure must have the <code class="codeph">CREATE_SESSION</code> application privilege for the application user specified by the <code class="codeph">username</code> parameter. You can also specify a list of namespaces to be created when the session is created. If you specify namespaces during creation of the session, the caller is required to be granted application privileges <code class="codeph">MODIFY_NAMESPACE</code> or <code class="codeph">MODIFY_ATTRIBUTE</code> on the namespaces, or be granted the <code class="codeph">ADMIN_NAMESPACE</code> system privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">CREATE_SESSION (
 username      IN  VARCHAR2,
 sessionid     OUT NOCOPY RAW,
 is_external   IN  BOOLEAN DEFAULT FALSE,
 is_trusted    IN  BOOLEAN DEFAULT FALSE,
 namespaces    IN  DBMS_XS_NSATTRLIST DEFAULT NULL,
 cookie        IN  VARCHAR2 DEFAULT NULL); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9C80BEC1-29EA-430D-B597-3CA6182A7DFB__GUID-20F8D6A8-6699-4A56-9AF3-662ADF67BC61">
<table class="cellalignment5205" summary="CREATE_SESSION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e1194">Parameter</th>
<th class="cellalignment5216" id="d84027e1197">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e1202" headers="d84027e1194">
<p><code class="codeph">username</code></p>
</td>
<td class="cellalignment5218" headers="d84027e1202 d84027e1197">
<p>The name of a regular application user or an external application user for which to create the application session.</p>
<p>To find a listing of the user names and application roles for the current session, query the <a href="parm_views.htm#GUID-97B36DFE-DA8F-41E3-9141-37C8B0E6E2ED">DBA_XS_USERS</a> data dictionary view. To find all application users and roles, query the <a href="parm_views.htm#GUID-AE38EBE0-F7DA-4F22-A499-0EE6BB0AAA5F">DBA_XS_PRINCIPALS</a> data dictionary view as follows:</p>
<p>Users:</p>
<pre dir="ltr">SELECT NAME FROM DBA_XS_USERS;
</pre>
<p>Roles:</p>
<pre dir="ltr">SELECT NAME FROM DBA_XS_ROLES;

SELECT NAME FROM DBA_XS_DYNAMIC_ROLES;
</pre></td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e1228" headers="d84027e1194">
<p><code class="codeph">sessionid</code></p>
</td>
<td class="cellalignment5218" headers="d84027e1228 d84027e1197">
<p>Session ID of the newly created application session. You can get the session ID by using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT XS_SYS_CONTEXT(&#39;XS$SESSION&#39;, &#39;SESSION_ID&#39;) FROM DUAL;</code></p>
</li>
<li>
<p>Using the <code class="codeph">DBMS_XS_SESSIONS.GET_ATTRIBUTE</code> procedure.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e1247" headers="d84027e1194">
<p><code class="codeph">is_external</code></p>
</td>
<td class="cellalignment5218" headers="d84027e1247 d84027e1197">
<p>Specifies whether the session is to be created as an external principal session. This is an optional parameter. The default value is <code class="codeph">FALSE</code>, indicating that a regular session is to be created. A <code class="codeph">NULL</code> value is taken to mean <code class="codeph">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e1264" headers="d84027e1194">
<p><code class="codeph">is_trusted</code></p>
</td>
<td class="cellalignment5218" headers="d84027e1264 d84027e1197">
<p>Specifies if the session is to be created in trusted mode or secure mode. In trusted mode, data security checks are bypassed; in secure mode, they are enforced. This is an optional parameter. The default value is <code class="codeph">FALSE</code>, indicating secure mode. A <code class="codeph">NULL</code> value is taken to mean <code class="codeph">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e1281" headers="d84027e1194">
<p><code class="codeph">namespaces</code></p>
</td>
<td class="cellalignment5218" headers="d84027e1281 d84027e1197">
<p>The list of name, attribute, and attribute value triplet. If the namespace is not accessible to the session or no such namespace template exists, an error is thrown.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e1289" headers="d84027e1194">
<p><code class="codeph">cookie</code></p>
</td>
<td class="cellalignment5218" headers="d84027e1289 d84027e1197">
<p>Specifies the server cookie to be set for the session. This is an optional parameter. The default value is <code class="codeph">NULL</code>. The maximum allowed length of the cookie is 1024 bytes.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  nsList DBMS_XS_NSATTRLIST;
  sessionid RAW(16);
BEGIN
    nsList := DBMS_XS_NSATTRLIST(DBMS_XS_NSATTR(&#39;ns1&#39;),DBMS_XS_NSATTR(&#39;ns2&#39;));
    <span class="bold">SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwuser1&#39;, sessionid, FALSE, FALSE, nsList);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG124"></a><a id="DBFSG125"></a><a id="DBFSG126"></a><a id="DBFSG123"></a>
<div class="props_rev_3"><a id="GUID-2CCDFDD1-F3B4-4EE5-A261-7871B18A0A91"></a>
<h4 id="DBFSG-GUID-2CCDFDD1-F3B4-4EE5-A261-7871B18A0A91" class="sect4">ATTACH_SESSION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ATTACH_SESSION</code> procedure <a id="d84027e1421" class="indexterm-anchor"></a>attaches the current traditional database session to the application session identified by the session ID (<code class="codeph">session_id</code>). The attached session enables the roles granted (directly or indirectly) to the application user with which the session was created and the session scope dynamic application roles that were enabled until the last detach of this session. If you execute <code class="codeph">ATTACH_SESSION</code> with a list of dynamic application roles using the optional parameter <code class="codeph">enable_dynamic_roles</code>, the provided dynamic application roles are enabled for the session. To disable a list of dynamic roles, specify the list using the optional parameter <code class="codeph">disable_dynamic_roles</code>.</p>
<p>You can specify a list of triplet values (namespace, attribute, attribute value) during the attach operation. The namespaces and attributes are then created and attribute values set. This is in addition to any namespaces and attributes that were present in the session.</p>
<p>To execute this procedure, the traditional session user must have the <code class="codeph">ATTACH_SESSION</code> application privilege. If you specify namespaces, then the user is required to be granted application privileges <code class="codeph">MODIFY_NAMESPACE</code> or <code class="codeph">MODIFY_ATTRIBUTE</code> on the namespaces, or <code class="codeph">ADMIN_NAMESPACE</code> system privilege.</p>
<p>A self password change is allowed using the SQL*Plus <code class="codeph">PASSWORD</code> command if invoked from an explicitly attached session (a session attached using the <code class="codeph">ATTACH_SESSION</code> procedure or the <code class="codeph">attachSession()</code> method in Java), provided that session has the <code class="codeph">ALTER_USER</code> privilege and the user name is provided with the <code class="codeph">PASSWORD</code> command.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ATTACH_SESSION (
 sessionid              IN RAW,
 enable_dynamic_roles   IN XS$NAME_LIST         DEFAULT NULL,
 disable_dynamic_roles  IN XS$NAME_LIST         DEFAULT NULL,
 external_roles         IN XS$NAME_LIST         DEFAULT NULL,
 authentication_time    IN TIMESTAMP WITH TIME ZONE DEFAULT NULL,
 namespaces             IN DBMS_XS_NSATTRLIST   DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-2CCDFDD1-F3B4-4EE5-A261-7871B18A0A91__GUID-25DD0AF2-031F-4D40-9E00-14CA80AC6258">
<table class="cellalignment5205" summary="ATTACH_SESSION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5219" id="d84027e1491">Parameter</th>
<th class="cellalignment5220" id="d84027e1494">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1499" headers="d84027e1491">
<p><code class="codeph">sessionid</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1499 d84027e1494">
<p>Session ID of the application session. You can get the session ID by using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT XS_SYS_CONTEXT(&#39;XS$SESSION&#39;, &#39;SESSION_ID&#39;) FROM DUAL;</code></p>
</li>
<li>
<p>Using the <code class="codeph">DBMS_XS_SESSIONS.GET_ATTRIBUTE</code> procedure.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1519" headers="d84027e1491">
<p><code class="codeph">enable_dynamic_roles</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1519 d84027e1494">
<p>A list of dynamic roles to be granted to be enabled in the application session. This is an optional parameter. If any of the dynamic roles specified does not exist, the attach session fails. If the session is an external principal session, a list of external roles can be specified for enabling. These roles will remain enabled until detach and will not be enabled in the next attach by default.</p>
<p>To find a listing of the application roles for the current session, query the <a href="parm_views.htm#GUID-3F086A30-CC0C-4A68-B1D0-71206066F8E3">DBA_XS_SESSION_ROLES</a> data dictionary view. To find a listing of all dynamic application roles, query the <a href="parm_views.htm#GUID-AE38EBE0-F7DA-4F22-A499-0EE6BB0AAA5F">DBA_XS_PRINCIPALS</a> data dictionary view as follows:</p>
<pre dir="ltr">SELECT NAME, TYPE FROM DBA_XS_PRINCIPALS; 
</pre></td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1540" headers="d84027e1491">
<p><code class="codeph">disable_dynamic_roles</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1540 d84027e1494">
<p>A list of dynamic roles to be disabled from the session. This is an optional parameter.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1548" headers="d84027e1491">
<p><code class="codeph">external_roles</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1548 d84027e1494">
<p>A list of external roles if the session is an external principal session. This is an optional parameter. These external roles remain enabled until a detach operation and are not enabled again in the next attach by default.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1556" headers="d84027e1491">
<p><code class="codeph">authentication_time</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1556 d84027e1494">
<p>The updated authentication time for the session. This is an optional parameter. The time must be specified in the following format:</p>
<p><code class="codeph">YYYY-MM-DD HH:MI:SS.FF TZR</code></p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1567" headers="d84027e1491">
<p><code class="codeph">namespaces</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1567 d84027e1494">
<p>The list of name, attribute, and attribute value triplet. If the namespace is not accessible to the session or no such namespace template exists, an error is thrown.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  nsList DBMS_XS_NSATTRLIST;
  sessionid RAW(16);
BEGIN
    nsList := DBMS_XS_NSATTRLIST(DBMS_XS_NSATTR(&#39;ns1&#39;),DBMS_XS_NSATTR(&#39;ns2&#39;));
    SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwuser1&#39;, sessionid);
<span class="bold">    SYS.DBMS_XS_SESSIONS.ATTACH_SESSION(sessionid, NULL, NULL, NULL, NULL, nsList);  </span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG120"></a><a id="DBFSG121"></a><a id="DBFSG122"></a><a id="DBFSG119"></a>
<div class="props_rev_3"><a id="GUID-C93E0B47-6F3E-44E0-8A3F-5EE868050923"></a>
<h4 id="DBFSG-GUID-C93E0B47-6F3E-44E0-8A3F-5EE868050923" class="sect4">ASSIGN_USER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ASSIGN_USER</code> procedure <a id="d84027e1697" class="indexterm-anchor"></a><a id="d84027e1703" class="indexterm-anchor"></a>assigns a named application user to the currently attached anonymous application session.</p>
<p>Roles enabled in the current session are retained after this operation. The optional parameters <code class="codeph">enable_dynamic_roles</code> and <code class="codeph">disable_dynamic_roles</code> specify the additional lists of dynamic roles to be enabled or disabled. If the assigned user is external, you can specify a list of external roles to be enabled.</p>
<p>You can specify a list of triplet values (namespace, attribute, attribute value) during the assign operation. The namespaces and attributes are then created in the session and attribute values set. This is in addition to any namespaces and attributes that were already present in the session.</p>
<p>To execute this procedure, the dispatcher or connection user must have the <code class="codeph">ASSIGN_USER</code> application privilege. If you specify namespaces, then the user is required to be granted application privileges <code class="codeph">MODIFY_NAMESPACE</code> or <code class="codeph">MODIFY_ATTRIBUTE</code> on the namespaces, or <code class="codeph">ADMIN_NAMESPACE</code> system privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DBMS_XS_SESSIONS.ASSIGN_USER (
 username              IN VARCHAR2, 
 is_external           IN BOOLEAN                  DEFAULT FALSE,
 enable_dynamic_roles  IN XS$NAME_LIST             DEFAULT NULL,
 disable_dynamic_roles IN XS$NAME_LIST             DEFAULT NULL,
 external_roles        IN XS$NAME_LIST             DEFAULT NULL,
 authentication_time   IN TIMESTAMP WITH TIME ZONE DEFAULT NULL,
 namespaces            IN DBMS_XS_NSATTRLIST       DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C93E0B47-6F3E-44E0-8A3F-5EE868050923__GUID-737BED6E-D579-4D34-87A3-5B8BF132A3AB">
<table class="cellalignment5205" summary="ASSIGN_USER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5219" id="d84027e1751">Parameter</th>
<th class="cellalignment5220" id="d84027e1754">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1759" headers="d84027e1751">
<p><code class="codeph">username</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1759 d84027e1754">
<p>The name of the real application user.</p>
<p>To find a listing of existing application users, query the <a href="parm_views.htm#GUID-AE38EBE0-F7DA-4F22-A499-0EE6BB0AAA5F">DBA_XS_PRINCIPALS</a> data dictionary view as follows:</p>
<pre dir="ltr">SELECT NAME FROM DBA_XS_PRINCIPALS;
</pre></td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1775" headers="d84027e1751">
<p><code class="codeph">is_external</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1775 d84027e1754">
<p>Specifies whether the named application user is an external user. This is an optional parameter. The default value is <code class="codeph">FALSE</code>, indicating that a regular application user is assigned. A <code class="codeph">NULL</code> value is taken to mean <code class="codeph">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1792" headers="d84027e1751">
<p><code class="codeph">enable_dynamic_roles</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1792 d84027e1754">
<p>A list of dynamic roles to be enabled in an application session. This is an optional parameter.</p>
<p>To find a listing of the application roles for the current session, query the <a href="parm_views.htm#GUID-C94B095F-826A-44DA-9E71-85B42C63D36B">V$XS_SESSION_ROLES</a> data dictionary view. To find a listing of all dynamic application roles, query the <a href="parm_views.htm#GUID-3F8717CD-401D-4264-9739-5612D3D82D32">DBA_XS_DYNAMIC_ROLES</a> data dictionary view as follows:</p>
<pre dir="ltr">SELECT NAME FROM DBA_XS_DYNAMIC_ROLES;
</pre></td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1812" headers="d84027e1751">
<p><code class="codeph">disable_dynamic_roles</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1812 d84027e1754">
<p>A list of dynamic roles to be disabled from the session. This is an optional parameter.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1820" headers="d84027e1751">
<p><code class="codeph">external_roles</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1820 d84027e1754">
<p>A list of external roles if the application user is an external application user. This is an optional parameter.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1828" headers="d84027e1751">
<p><code class="codeph">authentication_time</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1828 d84027e1754">
<p>The updated authentication time for the session. This is an optional parameter. The time must be specified in the following format:</p>
<p><code class="codeph">YYYY-MM-DD HH:MI:SS.FF TZR</code></p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e1839" headers="d84027e1751">
<p><code class="codeph">namespaces</code></p>
</td>
<td class="cellalignment5222" headers="d84027e1839 d84027e1754">
<p>The list of name, attribute, and attribute value triplet. If the namespace is not accessible to the session or no such namespace template exists, an error is thrown.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  nsList DBMS_XS_NSATTRLIST;
  sessionid RAW(16); 
BEGIN 
  nsList := DBMS_XS_NSATTRLIST(DBMS_XS_NSATTR(&#39;ns1&#39;),DB);
  SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwuser1&#39;, sessionid);
  SYS.DBMS_XS_SESSIONS.ATTACH_SESSION(sessionid);  
  <span class="bold">SYS.DBMS_XS_SESSIONS.ASSIGN_USER(username =&gt; &#39;lwuser2&#39;,</span>
<span class="bold">                                   namespaces =&gt; nsList);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG209"></a><a id="DBFSG210"></a><a id="DBFSG211"></a><a id="DBFSG208"></a>
<div class="props_rev_3"><a id="GUID-6F9F4CE9-A434-4F43-9141-48E3F7B0A800"></a>
<h4 id="DBFSG-GUID-6F9F4CE9-A434-4F43-9141-48E3F7B0A800" class="sect4">SWITCH_USER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SWITCH_USER</code> procedure <a id="d84027e1971" class="indexterm-anchor"></a><a id="d84027e1975" class="indexterm-anchor"></a>switches the application user in the currently attached session. The current application user must be a proxy user for the target application user before performing the switch operation by using the <code class="codeph">XS_PRINCIPAL.ADD_PROXY_USER</code> PL/SQL API to acquire the proxy of another application user privilege. The list of filtering application roles of the target user gets enabled in the session.</p>
<p>You can retain current application namespaces of the session or discard them. You can also specify a list of namespaces to be created and attribute values to be set after the switch. If you specify namespaces, then the user is required to be granted application privileges <code class="codeph">MODIFY_NAMESPACE</code> or <code class="codeph">MODIFY_ATTRIBUTE</code> on the namespaces, or <code class="codeph">ADMIN_NAMESPACE</code> system privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SWITCH_USER (
 username          IN VARCHAR2,
 keep_state        IN BOOLEAN              DEFAULT FALSE, 
 namespaces        IN DBMS_XS_NSATTRLIST   DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6F9F4CE9-A434-4F43-9141-48E3F7B0A800__GUID-34453B51-7BF3-45F4-AEE0-0CC5FD224C12">
<table class="cellalignment5205" summary="SWITCH_USER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5223" id="d84027e2011">Parameter</th>
<th class="cellalignment5224" id="d84027e2014">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e2019" headers="d84027e2011">
<p><code class="codeph">username</code></p>
</td>
<td class="cellalignment5226" headers="d84027e2019 d84027e2014">
<p>User name of the user whose security context you want to switch to.</p>
<p>To find a listing of existing application users, query the <a href="parm_views.htm#GUID-97B36DFE-DA8F-41E3-9141-37C8B0E6E2ED">DBA_XS_USERS</a> data dictionary view as follows:</p>
<pre dir="ltr">SELECT NAME FROM DBA_XS_USERS;
</pre></td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e2035" headers="d84027e2011">
<p><code class="codeph">keep_state</code></p>
</td>
<td class="cellalignment5226" headers="d84027e2035 d84027e2014">
<p>Controls whether application namespaces are retained.</p>
<p>Possible values are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">TRUE</code>: Sets all other session states to remain unchanged.</p>
</li>
<li>
<p><code class="codeph">FALSE</code>: Clears the previous state in the session. The default value.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e2056" headers="d84027e2011">
<p><code class="codeph">namespaces</code></p>
</td>
<td class="cellalignment5226" headers="d84027e2056 d84027e2014">
<p>The list of name, attribute, and attribute value triplet. If the namespace is not accessible to the session or no such namespace template exists, an error is thrown.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  nsList := DBMS_XS_NSATTRLIST(DBMS_XS_NSATTR(&#39;ns1&#39;),DBMS_XS_NSATTR(&#39;ns2&#39;));
  sessionid RAW(16);
BEGIN 
  SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwuser1&#39;, sessionid);
  SYS.DBMS_XS_SESSIONS.ATTACH_SESSION(sessionid);
<span class="bold">  SYS.DBMS_XS_SESSIONS.SWITCH_USER(username =&gt; &#39;lwuser2&#39;,</span>
<span class="bold">                                   keep_state =&gt; TRUE,</span>
<span class="bold">                                   namespaces =&gt; nsList);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG140"></a><a id="DBFSG141"></a><a id="DBFSG142"></a><a id="DBFSG139"></a>
<div class="props_rev_3"><a id="GUID-0D41166C-98B5-4043-8A20-E524A2AE8BA6"></a>
<h4 id="DBFSG-GUID-0D41166C-98B5-4043-8A20-E524A2AE8BA6" class="sect4">CREATE_NAMESPACE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_NAMESPACE</code> procedure <a id="d84027e2191" class="indexterm-anchor"></a><a id="d84027e2197" class="indexterm-anchor"></a>creates a new namespace in the currently attached application session. The namespace template corresponding to the namespace must exist in the system, else this operation throws an error. After this operation, the namespace along with its attributes as they are created in the template are available to the session.</p>
<p>The calling user must have the <code class="codeph">MODIFY_NAMESPACE</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">CREATE_NAMESPACE( 
 namespace      IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0D41166C-98B5-4043-8A20-E524A2AE8BA6__GUID-74B7347A-B9CA-4B67-A198-92D0DCF5906C">
<table class="cellalignment5205" summary="CREATE_NAMESPACE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e2226">Parameter</th>
<th class="cellalignment5228" id="d84027e2229">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e2234" headers="d84027e2226">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5230" headers="d84027e2234 d84027e2229">
<p>The name of the namespace to create. There must be an existing namespace template document with this name. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of existing namespaces for the current session, once attached, query the <code class="codeph">V$XS_SESSION_NS_ATTRIBUTES</code> data dictionary view. You can query the <code class="codeph">DBA_XS_SESSION_NS_ATTRIBUTES</code> data dictionary view to find out all the namespaces in all application sessions.</p>
<p>You can query the <code class="codeph">DBA_XS_NS_TEMPLATES</code> and <code class="codeph">DBA_XS_NS_TEMPLATE_ATTRIBUTES</code> data dictionary views for a list of namespace templates and attributes.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.CREATE_NAMESPACE(&#39;J_NS1&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG136"></a><a id="DBFSG137"></a><a id="DBFSG138"></a><a id="DBFSG135"></a>
<div class="props_rev_3"><a id="GUID-60C4E4D8-714F-4732-815F-2261F8B5D022"></a>
<h4 id="DBFSG-GUID-60C4E4D8-714F-4732-815F-2261F8B5D022" class="sect4">CREATE_ATTRIBUTE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_ATTRIBUTE</code> procedure creates a new custom attribute in the specified namespace in the currently attached application session. If the namespace is not already available in the session or no such namespace templates exist, an error is thrown.</p>
<p>The calling user is required to be granted the <code class="codeph">MODIFY_ATTRIBUTE</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">PROCEDURE create_attribute(
namespace IN VARCHAR2,
attribute IN VARCHAR2,
value     IN VARCHAR2    DEFAULT NULL,
eventreg  IN PLS_INTEGER DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-60C4E4D8-714F-4732-815F-2261F8B5D022__GUID-AB03B053-EB5C-4222-8887-F55ED90820E0">
<table class="cellalignment5205" summary="CREATE_ATTRIBUTE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e2399">Parameter</th>
<th class="cellalignment5228" id="d84027e2402">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e2407" headers="d84027e2399">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5230" headers="d84027e2407 d84027e2402">
<p>The namespace in which the attribute gets created. If the namespace does not exist in the session, an error is thrown. The maximum size of the case sensitive character string is 128 characters.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e2415" headers="d84027e2399">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5230" headers="d84027e2415 d84027e2402">
<p>The name of the attribute to be created. The maximum size of the case sensitive character string is 4000 characters.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e2423" headers="d84027e2399">
<p><code class="codeph">value</code></p>
</td>
<td class="cellalignment5230" headers="d84027e2423 d84027e2402">
<p>The default value for the attribute. The maximum size of the case sensitive character string is 4000 characters.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e2431" headers="d84027e2399">
<p><code class="codeph">eventreg</code></p>
</td>
<td class="cellalignment5230" headers="d84027e2431 d84027e2402">
<p>The event for which the handler is executed for the attribute. This is an optional parameter. This parameter can take the following values:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DBMS_XS_SESSIONS.attribute_first_read_event</code></p>
<p>The handler function is called whenever an attribute get request is received and the value for the attribute has not been set. This event can be registered only if the default value is set to <code class="codeph">NULL</code>. This value corresponds with the <code class="codeph">FIRSTREAD_EVENT</code> constant in the <code class="codeph">XS_NAMESPACE</code> package or Admin API.</p>
</li>
<li>
<p><code class="codeph">DBMS_XS_SESSIONS</code><code class="codeph">.modify_attribute_event</code>:</p>
<p>The handler function is called whenever an attribute set request is received. This value corresponds with the <code class="codeph">UPDATE_EVENT</code> constant in the in the <code class="codeph">XS_NAMESPACE</code> package or Admin API.</p>
</li>
</ul>
<p>If the attribute is registered for first read event, then the handler is executed if the attribute is uninitialized, before returning the value. If the update event is registered, the handler gets called whenever the attribute is modified. Events can be registered only if the namespace has an event handler, else an error is thrown.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.CREATE_ATTRIBUTE(&#39;NS1&#39;,&#39;NS1CUSTOM&#39;,&#39;NS1CUSTOMDEFAULT&#39;);
END;

-- Example with firstRead event set
BEGIN
SYS.DBMS_XS_SESSIONS.create_Attribute(&#39;ns1&#39;,&#39;attr4&#39;,NULL,
                                       DBMS_XS_SESSIONS.attribute_first_read_event);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG197"></a><a id="DBFSG198"></a><a id="DBFSG199"></a><a id="DBFSG196"></a>
<div class="props_rev_3"><a id="GUID-D82F1CAA-EE0A-4A75-A1B9-4BFCD301FDC4"></a>
<h4 id="DBFSG-GUID-D82F1CAA-EE0A-4A75-A1B9-4BFCD301FDC4" class="sect4">SET_ATTRIBUTE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_ATTRIBUTE</code> procedure<a id="d84027e2590" class="indexterm-anchor"></a><a id="d84027e2596" class="indexterm-anchor"></a> sets a new value for the specified attribute in the namespace associated with the currently attached session. The handler function is called if the <code class="codeph">update</code> event is set for the attribute. If the namespace does not exist or is deleted, an error is thrown. If there is no template corresponding to the namespace that exists, an error is thrown.</p>
<p>The calling user is required to be granted the <code class="codeph">MODIFY_ATTRIBUTE</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_ATTRIBUTE (
 namespace    IN VARCHAR2,
 attribute    IN VARCHAR2,
 value        IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D82F1CAA-EE0A-4A75-A1B9-4BFCD301FDC4__GUID-B6309710-868E-4291-A289-DCCC0B7C5981">
<table class="cellalignment5205" summary="SET_ATTRIBUTE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5231" id="d84027e2628">Parameter</th>
<th class="cellalignment5232" id="d84027e2631">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5233" id="d84027e2636" headers="d84027e2628">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5234" headers="d84027e2636 d84027e2631">
<p>Name of the namespace associated with the attribute. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of existing namespaces for the current session, once attached, query the <code class="codeph">V$XS_SESSION_NS_ATTRIBUTES</code> data dictionary view. You can query the <code class="codeph">DBA_XS_SESSION_NS_ATTRIBUTES</code> data dictionary view to find out all the namespaces in all application sessions.</p>
<p>You can query the <code class="codeph">DBA_XS_NS_TEMPLATES</code> and <code class="codeph">DBA_XS_NS_TEMPLATE_ATTRIBUTES</code> data dictionary views for a list of namespace templates and attributes.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5233" id="d84027e2660" headers="d84027e2628">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5234" headers="d84027e2660 d84027e2631">
<p>Name of an existing attribute in an existing namespace.</p>
<p>To find a listing of existing namespace attributes, query the <a href="parm_views.htm#GUID-D22D4EF6-5C79-4056-AF9B-64EAA7D94BFE">V$XS_SESSION_NS_ATTRIBUTES</a> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5233" id="d84027e2674" headers="d84027e2628">
<p><code class="codeph">value</code></p>
</td>
<td class="cellalignment5234" headers="d84027e2674 d84027e2631">
<p>New value for the attribute. The maximum size of the case sensitive character string is 4000 characters.</p>
<p>To find an listing of existing values associated with the attribute, query the <a href="parm_views.htm#GUID-D22D4EF6-5C79-4056-AF9B-64EAA7D94BFE">V$XS_SESSION_NS_ATTRIBUTES</a> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.SET_ATTRIBUTE(&#39;J_NS&#39;,&#39;JohnNSAttr1&#39;,&#39;John bio&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG176"></a><a id="DBFSG177"></a><a id="DBFSG178"></a><a id="DBFSG175"></a>
<div class="props_rev_3"><a id="GUID-9A541912-E165-4204-A1A4-4E044628E8AE"></a>
<h4 id="DBFSG-GUID-9A541912-E165-4204-A1A4-4E044628E8AE" class="sect4">GET_ATTRIBUTE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">GET_ATTRIBUTE</code> procedure <a id="d84027e2806" class="indexterm-anchor"></a><a id="d84027e2812" class="indexterm-anchor"></a>gets the value of the specified attribute in the namespace in the currently attached session. If no template corresponding to the namespace exists, an error is thrown. If the specified attribute does not exist, it returns empty string.</p>
<p>If the attribute value is <code class="codeph">NULL</code>, the <code class="codeph">firstRead</code> event is set, and it is the first time that the attribute value is being fetched, then the handler function for the attribute is called.</p>
<p>The calling user is not required to be granted any privileges.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">GET_ATTRIBUTE (
 namespace   IN         VARCHAR2,
 attribute   IN         VARCHAR2,
 value       OUT NOCOPY VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9A541912-E165-4204-A1A4-4E044628E8AE__GUID-0FFA8FC4-9231-4D41-A56D-93AC2B2BBCE3">
<table class="cellalignment5205" summary="GET_ATTRIBUTE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e2846">Parameter</th>
<th class="cellalignment5236" id="d84027e2849">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e2854" headers="d84027e2846">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5238" headers="d84027e2854 d84027e2849">
<p>The namespace of the attribute to retrieve. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of existing namespaces for the current session, once attached, query the <code class="codeph">V$XS_SESSION_NS_ATTRIBUTES</code> data dictionary view. You can query the <code class="codeph">DBA_XS_SESSION_NS_ATTRIBUTES</code> data dictionary view to find out all the namespaces in all application sessions.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e2870" headers="d84027e2846">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5238" headers="d84027e2870 d84027e2849">
<p>The name of the attribute to retrieve. The maximum size of the case sensitive character string is 4000 characters. To find a listing of available attributes, query the <a href="parm_views.htm#GUID-D22D4EF6-5C79-4056-AF9B-64EAA7D94BFE">V$XS_SESSION_NS_ATTRIBUTES</a> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e2882" headers="d84027e2846">
<p><code class="codeph">value</code></p>
</td>
<td class="cellalignment5238" headers="d84027e2882 d84027e2849">
<p>The value of the attribute to retrieve.</p>
<p>To find a listing of available attribute values, query the <a href="parm_views.htm#GUID-D22D4EF6-5C79-4056-AF9B-64EAA7D94BFE">V$XS_SESSION_NS_ATTRIBUTES</a> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE 
attrVal VARCHAR2(4000);
</pre>
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.GET_ATTRIBUTE(&#39;J_NS1&#39;,&#39;JohnNS1Attr1&#39;,attrVal);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG193"></a><a id="DBFSG194"></a><a id="DBFSG195"></a><a id="DBFSG192"></a>
<div class="props_rev_3"><a id="GUID-4EDB9A35-A825-42BB-81B3-2D0A9ABAC9C3"></a>
<h4 id="DBFSG-GUID-4EDB9A35-A825-42BB-81B3-2D0A9ABAC9C3" class="sect4">RESET_ATTRIBUTE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">RESET_ATTRIBUTE</code> procedure resets the value of an attribute to its default value (if present) or to <code class="codeph">NULL</code> in the namespace in the current attached session. If the attribute has a default value specified, then the value is reset to the default value. If the attribute was created without a default value and marked for the <code class="codeph">attribute_first_read_event</code>, then the value is set to <code class="codeph">NULL</code> and the attribute is marked as uninitialized. If the attribute was created without a default value and not marked for the <code class="codeph">attribute_first_read_event</code>, then the value is set to <code class="codeph">NULL</code>.</p>
<p>The calling user is required to be granted the <code class="codeph">MODIFY_ATTRIBUTE</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">PROCEDURE reset_attribute(
namespace   IN VARCHAR2,
attribute   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4EDB9A35-A825-42BB-81B3-2D0A9ABAC9C3__GUID-2600B00F-560B-407A-A2BB-0E44E7264052">
<table class="cellalignment5205" summary="RESET_ATTRIBUTE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5239" id="d84027e3055">Parameter</th>
<th class="cellalignment5240" id="d84027e3058">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e3063" headers="d84027e3055">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5242" headers="d84027e3063 d84027e3058">
<p>The name of the namespace containing the attribute. The maximum size of the case sensitive character string is 128 characters.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e3071" headers="d84027e3055">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5242" headers="d84027e3071 d84027e3058">
<p>The name of the attribute to be reset. The maximum size of the case sensitive character string is 4000 characters.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.RESET_ATTRIBUTE(&#39;ns2&#39;,&#39;attr1&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG148"></a><a id="DBFSG149"></a><a id="DBFSG150"></a><a id="DBFSG147"></a>
<div class="props_rev_3"><a id="GUID-68341420-959E-4FD6-B46D-3F06F8630424"></a>
<h4 id="DBFSG-GUID-68341420-959E-4FD6-B46D-3F06F8630424" class="sect4">DELETE_ATTRIBUTE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_ATTRIBUTE</code> procedure <a id="d84027e3197" class="indexterm-anchor"></a>deletes the specified attribute and its associated value from the specified namespace in the currently attached session. Only custom attributes can be deleted. Template attributes cannot be deleted. If the specified attribute does not exist, an error is thrown.</p>
<p>The calling application is required to be granted the <code class="codeph">MODIFY_ATTRIBUTE</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DELETE_ATTRIBUTE (
 namespace     IN VARCHAR2,
 attribute     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-68341420-959E-4FD6-B46D-3F06F8630424__GUID-ED7365D9-0899-41F8-9A18-1B1987022935">
<table class="cellalignment5205" summary="DELETE_ATTRIBUTE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e3226">Parameter</th>
<th class="cellalignment5236" id="d84027e3229">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e3234" headers="d84027e3226">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5238" headers="d84027e3234 d84027e3229">
<p>The namespace associated with the attribute to delete. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of existing namespaces for the current session, once attached, query the <code class="codeph">V$XS_SESSION_NS_ATTRIBUTES</code> data dictionary view. You can query the <code class="codeph">DBA_XS_SESSION_NS_ATTRIBUTES</code> data dictionary view to find out all the namespaces in all application sessions.</p>
<p>You can query the <code class="codeph">DBA_XS_NS_TEMPLATES</code> and <code class="codeph">DBA_XS_NS_TEMPLATE_ATTRIBUTES</code> data dictionary views for a list of namespace templates and attributes.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e3258" headers="d84027e3226">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5238" headers="d84027e3258 d84027e3229">
<p>The attribute to delete.</p>
<p>To find a listing of existing namespaces for the current session, once attached, query the <code class="codeph">V$XS_SESSION_NS_ATTRIBUTES</code> data dictionary view. You can query the <code class="codeph">DBA_XS_SESSION_NS_ATTRIBUTES</code> data dictionary view to find out all the namespaces in all application sessions.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.DELETE_ATTRIBUTE(&#39;JohnNS1&#39;,&#39;JohnNS1Attr1&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG156"></a><a id="DBFSG157"></a><a id="DBFSG158"></a><a id="DBFSG155"></a>
<div class="props_rev_3"><a id="GUID-E1FEF449-B93D-46A8-9319-63DB225C0BF6"></a>
<h4 id="DBFSG-GUID-E1FEF449-B93D-46A8-9319-63DB225C0BF6" class="sect4">DELETE_NAMESPACE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_NAMESPACE</code> procedure <a id="d84027e3392" class="indexterm-anchor"></a><a id="d84027e3398" class="indexterm-anchor"></a>deletes a namespace and its attributes from the currently attached application session.</p>
<p>The calling user must have the <code class="codeph">MODIFY_NAMESPACE</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DELETE_NAMESPACE (
 namespace   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E1FEF449-B93D-46A8-9319-63DB225C0BF6__GUID-30108F35-9F5E-437F-9CBF-43B87654B57D">
<table class="cellalignment5205" summary="DELETE_NAMESPACE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e3427">Parameter</th>
<th class="cellalignment5236" id="d84027e3430">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e3435" headers="d84027e3427">
<p><code class="codeph">namespace</code></p>
</td>
<td class="cellalignment5238" headers="d84027e3435 d84027e3430">
<p>The name of the namespace to delete. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of existing namespaces for the current session, once attached, query the <code class="codeph">V$XS_SESSION_NS_ATTRIBUTES</code> data dictionary view. You can query the <code class="codeph">DBA_XS_SESSION_NS_ATTRIBUTES</code> data dictionary view to find out all the namespaces in all application sessions.</p>
<p>You can query the <code class="codeph">DBA_XS_NS_TEMPLATES</code> and <code class="codeph">DBA_XS_NS_TEMPLATE_ATTRIBUTES</code> data dictionary views for a list of namespace templates and attributes.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.DELETE_NAMESPACE(&#39;JohnNS1&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG172"></a><a id="DBFSG173"></a><a id="DBFSG174"></a><a id="DBFSG171"></a>
<div class="props_rev_3"><a id="GUID-7EB3339F-E06A-4F0C-8615-D049CA3D9AD2"></a>
<h4 id="DBFSG-GUID-7EB3339F-E06A-4F0C-8615-D049CA3D9AD2" class="sect4">ENABLE_ROLE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ENABLE_ROLE</code> procedure <a id="d84027e3578" class="indexterm-anchor"></a><a id="d84027e3584" class="indexterm-anchor"></a>enables a real application role in the currently attached application session. If the role is already enabled, then <code class="codeph">ENABLE_ROLE</code> procedure performs no action. This procedure can only enable a regular application role directly granted to the current application user. You cannot enable dynamic application roles.</p>
<p>This operation does not require the calling user to have any additional privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ENABLE_ROLE (
 role   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-7EB3339F-E06A-4F0C-8615-D049CA3D9AD2__GUID-AD1C3718-7ACF-45FC-BE98-90BF12FA9F73">
<table class="cellalignment5205" summary="ENABLE_ROLE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e3611">Parameter</th>
<th class="cellalignment5228" id="d84027e3614">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e3619" headers="d84027e3611">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5230" headers="d84027e3619 d84027e3614">
<p>The name of the role to enable. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of the application roles for the current session, query the <a href="parm_views.htm#GUID-C94B095F-826A-44DA-9E71-85B42C63D36B">V$XS_SESSION_ROLES</a> data dictionary view. To find all application roles, query the <a href="parm_views.htm#GUID-3F086A30-CC0C-4A68-B1D0-71206066F8E3">DBA_XS_SESSION_ROLES</a> data dictionary view as follows:</p>
<pre dir="ltr">SELECT ROLE_NAME FROM V$XS_SESSION_ROLES;

SELECT SESSIONID, ROLE FROM DBA_XS_SESSION_ROLES;
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.ENABLE_ROLE(&#39;auth2_role&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG168"></a><a id="DBFSG169"></a><a id="DBFSG170"></a><a id="DBFSG167"></a>
<div class="props_rev_3"><a id="GUID-4EC230A2-6155-420F-B995-0D9C4B5C3B38"></a>
<h4 id="DBFSG-GUID-4EC230A2-6155-420F-B995-0D9C4B5C3B38" class="sect4">DISABLE_ROLE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DISABLE_ROLE</code> procedure <a id="d84027e3757" class="indexterm-anchor"></a><a id="d84027e3763" class="indexterm-anchor"></a>disables a real application role from the specified application session. If the role is already disabled or not enabled in the currently attached application session, then <code class="codeph">DISABLE_ROLE</code> performs no action. You cannot disable dynamic application roles. You can only disable a regular application role, which is directly granted to the application user with which the session is created.</p>
<p>This operation does not require the calling user to have any additional privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DISABLE_ROLE (
 role   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4EC230A2-6155-420F-B995-0D9C4B5C3B38__GUID-103A3F2C-FAA0-4620-B00D-440635316A84">
<table class="cellalignment5205" summary="DISABLE_ROLE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e3790">Parameter</th>
<th class="cellalignment5236" id="d84027e3793">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e3798" headers="d84027e3790">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5238" headers="d84027e3798 d84027e3793">
<p>The name of the role to disable. The maximum size of the case sensitive character string is 128 characters.</p>
<p>To find a listing of the application roles for the current session, query the <a href="parm_views.htm#GUID-C94B095F-826A-44DA-9E71-85B42C63D36B">V$XS_SESSION_ROLES</a> data dictionary view. To find all application roles, query the <a href="parm_views.htm#GUID-3F086A30-CC0C-4A68-B1D0-71206066F8E3">DBA_XS_SESSION_ROLES</a> data dictionary view as follows:</p>
<pre dir="ltr">SELECT ROLE_NAME FROM V$XS_SESSION_ROLES;

SELECT SESSIONID, ROLE FROM DBA_XS_SESSION_ROLES;
</pre></td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
  SYS.DBMS_XS_SESSIONS.DISABLE_ROLE(&#39;auth1_role&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG205"></a><a id="DBFSG206"></a><a id="DBFSG207"></a><a id="DBFSG204"></a>
<div class="props_rev_3"><a id="GUID-AEA590DF-3C7C-4A50-A38E-53DB54266BF2"></a>
<h4 id="DBFSG-GUID-AEA590DF-3C7C-4A50-A38E-53DB54266BF2" class="sect4">SET_SESSION_COOKIE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_SESSION_COOKIE</code> procedure sets a new cookie value with the specified session ID. If the specified session does not exist or the cookie name is not unique among all the user application sessions, then an error is thrown.</p>
<p>To execute this procedure, the user is required to be granted the <code class="codeph">MODIFY_SESSION</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_SESSION_COOKIE (
 cookie      IN VARCHAR2, 
 sessionid   IN RAW DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-AEA590DF-3C7C-4A50-A38E-53DB54266BF2__GUID-C9045EAC-2EE9-43E9-9D0F-AD42E76A12A3">
<table class="cellalignment5205" summary="SET_SESSION_COOKIE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e3958">Parameter</th>
<th class="cellalignment5228" id="d84027e3961">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e3966" headers="d84027e3958">
<p><code class="codeph">cookie</code></p>
</td>
<td class="cellalignment5230" headers="d84027e3966 d84027e3961">
<p>A name for the new cookie. The maximum allowed length for the cookie is 1024 characters. Cookie names must be unique.</p>
<p>To find a listing of existing cookies for the current session, query <code class="codeph">XS_SYS_CONTEXT(XS$SESSION&#39;,&#39;COOKIE&#39;)</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e3979" headers="d84027e3958">
<p><code class="codeph">sessionid</code></p>
</td>
<td class="cellalignment5230" headers="d84027e3979 d84027e3961">
<p>Session ID of the application session. The default value is <code class="codeph">NULL</code>. You can get the session ID by using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT XS_SYS_CONTEXT(&#39;XS$SESSION&#39;, &#39;SESSION_ID&#39;) FROM DUAL;</code></p>
</li>
<li>
<p>Using the <code class="codeph">DBMS_XS_SESSIONS.GET_ATTRIBUTE</code> procedure.</p>
</li>
</ul>
<p>If you do not specify a session ID or enter <code class="codeph">NULL</code>, then <code class="codeph">SET_SESSION_COOKIE</code> uses the session ID of the current application session.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
   sessionid RAW(16);
BEGIN
  SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwuser1&#39;, sessionid);
  SYS.DBMS_XS_SESSIONS.SET_SESSION_COOKIE(&#39;cookie1&#39;, sessionid);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG189"></a><a id="DBFSG190"></a><a id="DBFSG191"></a><a id="DBFSG188"></a>
<div class="props_rev_3"><a id="GUID-87606516-D001-4F52-92DB-F243027FF0DF"></a>
<h4 id="DBFSG-GUID-87606516-D001-4F52-92DB-F243027FF0DF" class="sect4">REAUTH_SESSION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REAUTH_SESSION</code> procedure <a id="d84027e4128" class="indexterm-anchor"></a>updates the last authentication time for the specified session ID as the current time. Applications must call this procedure when it has reauthenticated an application user.</p>
<p>Use the <code class="codeph">REAUTH_SESSION</code> procedure to enable a role that has timed out because of a lack of recent authentication in the application or middle-tier server. You can also call the <code class="codeph">reauthSession</code> Java method.</p>
<p>To execute this function, the user is required to be granted the <code class="codeph">MODIFY_SESSION</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">REAUTH_SESSION (
 sessionid IN RAW DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-87606516-D001-4F52-92DB-F243027FF0DF__GUID-9193945C-E4BD-4106-BFB3-17F016B3B159">
<table class="cellalignment5205" summary="REAUTH_SESSION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e4165">Parameter</th>
<th class="cellalignment5228" id="d84027e4168">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e4173" headers="d84027e4165">
<p><code class="codeph">sessionid</code></p>
</td>
<td class="cellalignment5230" headers="d84027e4173 d84027e4168">
<p>Session ID of the application session. This parameter is optional. The default value is <code class="codeph">NULL</code>. You can get the session ID by using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT XS_SYS_CONTEXT(&#39;XS$SESSION&#39;, &#39;SESSION_ID&#39;) FROM DUAL;</code></p>
</li>
<li>
<p>Using the <code class="codeph">DBMS_XS_SESSIONS.GET_ATTRIBUTE</code> procedure.</p>
</li>
</ul>
<p>If you do not specify a session ID or enter <code class="codeph">NULL</code>, then <code class="codeph">REAUTH_SESSION</code> uses the session ID of the current application session.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  sessionid RAW(16);
BEGIN
 SYS.DBMS_XS_SESSIONS.REAUTH_SESSION(sessionid);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG201"></a><a id="DBFSG202"></a><a id="DBFSG203"></a><a id="DBFSG200"></a>
<div class="props_rev_3"><a id="GUID-A4B9CA18-5778-422C-89B6-E17D321A10BF"></a>
<h4 id="DBFSG-GUID-A4B9CA18-5778-422C-89B6-E17D321A10BF" class="sect4">SET_INACTIVITY_TIMEOUT Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_INACTIVITY_TIMEOUT</code> procedure <a id="d84027e4321" class="indexterm-anchor"></a><a id="d84027e4327" class="indexterm-anchor"></a>sets an inactivity time-out value, in minutes, for the current attached session. The inactivity time-out value represents the maximum period of inactivity allowed before Oracle Database terminates the application session and the resource is reclaimed. Trying to set a negative value for the <code class="codeph">time</code> parameter throws an error. If an invalid session ID is specified or the session does not exist, an error is thrown.</p>
<p>Another way to set the time-out value is to use the <code class="codeph">setInactivityTimeout</code> Java method. You can set a default global time-out value in the <code class="codeph">xmlconfig.xml</code> configuration file. Oracle recommends 240 (4 hours).</p>
<p>An application session cannot time-out due to inactivity while a traditional session is attached. The last access time is updated each time a traditional session attaches to the application session.</p>
<p>To execute this procedure, the calling user is required to be granted the <code class="codeph">MODIFY_SESSION</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_INACTIVITY_TIMEOUT (
 time        IN NUMBER, 
 sessionid   IN RAW DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-A4B9CA18-5778-422C-89B6-E17D321A10BF__GUID-FE5CCEDD-ACF2-4B01-897D-664CC149AFA0">
<table class="cellalignment5205" summary="SET_INACTIVITY_TIMEOUT parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e4369">Parameter</th>
<th class="cellalignment5236" id="d84027e4372">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e4377" headers="d84027e4369">
<p><code class="codeph">time</code></p>
</td>
<td class="cellalignment5238" headers="d84027e4377 d84027e4372">
<p>Inactivity time-out value in minutes. Oracle recommends setting the <code class="codeph">time</code> parameter to <code class="codeph">240</code> (4 hours). A zero (0) value means the value is infinite and that the session never expires due to inactivity.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e4391" headers="d84027e4369">
<p><code class="codeph">sessionid</code></p>
</td>
<td class="cellalignment5238" headers="d84027e4391 d84027e4372">
<p>Session ID of the application session. The default value is <code class="codeph">NULL</code>. You can get the session ID by using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT XS_SYS_CONTEXT(&#39;XS$SESSION&#39;, &#39;SESSION_ID&#39;) FROM DUAL;</code></p>
</li>
<li>
<p>Using the <code class="codeph">DBMS_XS_SESSIONS.GET_ATTRIBUTE</code> procedure.</p>
</li>
</ul>
<p>If you do not specify a session ID or enter <code class="codeph">NULL</code>, then <code class="codeph">SET_INACTIVITY_TIMEOUT</code> uses the session ID of the current application session.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  sessionid RAW(16);
BEGIN
  SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwuser1&#39;, sessionid);
  SYS.DBMS_XS_SESSIONS.SET_INACTIVITY_TIMEOUT (300, sessionid);
END;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG613"></a><a id="DBFSG614"></a><a id="DBFSG615"></a><a id="DBFSG612"></a>
<div class="props_rev_3"><a id="GUID-0F69D39A-CA89-4F88-9268-BABEED216B9D"></a>
<h4 id="DBFSG-GUID-0F69D39A-CA89-4F88-9268-BABEED216B9D" class="sect4">SAVE_SESSION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SAVE_SESSION</code> procedure<a id="d84027e4539" class="indexterm-anchor"></a> saves all changes performed in the currently attached session and remains attached to the session as it was before saving changes.</p>
<p>The calling user requires no privileges to perform this operation.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SAVE_SESSION;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="section">
<p>None.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.SAVE_SESSION;
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG164"></a><a id="DBFSG165"></a><a id="DBFSG166"></a><a id="DBFSG163"></a>
<div class="props_rev_3"><a id="GUID-E991C805-AFFF-432D-877B-262EE8E9FA32"></a>
<h4 id="DBFSG-GUID-E991C805-AFFF-432D-877B-262EE8E9FA32" class="sect4">DETACH_SESSION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DETACH_SESSION</code> procedure <a id="d84027e4678" class="indexterm-anchor"></a>detaches the current traditional database session from the application session to which it is attached. The database sessions goes back to the context it was in prior to attaching to the application session. Any user can execute this procedure as the operation does not require any privileges to execute.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DETACH_SESSION (abort IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E991C805-AFFF-432D-877B-262EE8E9FA32__GUID-067254E7-56BC-4668-B2C2-FFD0F1ABCAC6">
<table class="cellalignment5205" summary="DETACH_SESSION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e4702">Parameter</th>
<th class="cellalignment5228" id="d84027e4705">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e4710" headers="d84027e4702">
<p><code class="codeph">abort</code></p>
</td>
<td class="cellalignment5230" headers="d84027e4710 d84027e4705">
<p>If specified as <code class="codeph">TRUE</code>, it rolls back the changes performed in the current session. If specified as <code class="codeph">FALSE</code>, the default value, all changes performed in the session are persisted. If a <code class="codeph">NULL</code> value is specified for this parameter, it is treated as <code class="codeph">FALSE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.DETACH_SESSION;
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG160"></a><a id="DBFSG161"></a><a id="DBFSG162"></a><a id="DBFSG159"></a>
<div class="props_rev_3"><a id="GUID-65D575BD-FE85-4DA6-9C0D-8A3C9BD31E2A"></a>
<h4 id="DBFSG-GUID-65D575BD-FE85-4DA6-9C0D-8A3C9BD31E2A" class="sect4">DESTROY_SESSION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DESTROY_SESSION</code> procedure <a id="d84027e4848" class="indexterm-anchor"></a>destroys the specified session. This procedure also implicitly detaches all traditional sessions from the application session. After the session is destroyed no further attaches can be made to the session. This operation cannot destroy sessions created through direct logon of the application user.</p>
<p>To execute this procedure, the user must have the <code class="codeph">TERMINATE_SESSION</code> application privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DESTROY_SESSION (
 sessionid IN RAW,
 force     IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-65D575BD-FE85-4DA6-9C0D-8A3C9BD31E2A__GUID-441E8A24-A7C4-4E13-87AF-B4427C5CBC1D">
<table class="cellalignment5205" summary="DESTROY_SESSION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e4875">Parameter</th>
<th class="cellalignment5228" id="d84027e4878">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e4883" headers="d84027e4875">
<p><code class="codeph">sessionid</code></p>
</td>
<td class="cellalignment5230" headers="d84027e4883 d84027e4878">
<p>Session ID of the application session. You can get the session ID by using one of the following methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT XS_SYS_CONTEXT(&#39;XS$SESSION&#39;, &#39;SESSION_ID&#39;) FROM DUAL;</code></p>
</li>
<li>
<p>Using the <code class="codeph">DBMS_XS_SESSIONS.GET_ATTRIBUTE</code> procedure.</p>
</li>
</ul>
<p>If you do not specify a session ID or enter <code class="codeph">NULL</code>, then <code class="codeph">DESTROY_SESSION</code> uses the session ID of the current application session.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e4910" headers="d84027e4875">
<p><code class="codeph">force</code></p>
</td>
<td class="cellalignment5230" headers="d84027e4910 d84027e4878">
<p>If set to <code class="codeph">FALSE</code>, this operation throws an error, in case the specified session is currently attached. If set to <code class="codeph">TRUE</code>, the currently attached application session can be destroyed. This is an optional parameter.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DECLARE
  sessionid RAW(16);
BEGIN
 SYS.DBMS_XS_SESSIONS.CREATE_SESSION(&#39;lwtSession1&#39;, sessionid);
 SYS.DBMS_XS_SESSIONS.DESTROY_SESSION (sessionid);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG112"></a><a id="DBFSG113"></a><a id="DBFSG114"></a><a id="DBFSG111"></a>
<div class="props_rev_3"><a id="GUID-A26E667D-741A-4371-9BE3-CCE27BE99FB6"></a>
<h4 id="DBFSG-GUID-A26E667D-741A-4371-9BE3-CCE27BE99FB6" class="sect4">ADD_GLOBAL_CALLBACK Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e5039" class="indexterm-anchor"></a><code class="codeph">ADD_GLOBAL_CALLBACK</code> procedure<a id="d84027e5046" class="indexterm-anchor"></a> registers <a id="d84027e5051" class="indexterm-anchor"></a>an existing PL/SQL procedure as the event handler with the session operation specified by the <code class="codeph">event_type</code> parameter. You can add more than one event handler for the same session operation for execution when the associated event occurs. Adding the global callback procedure automatically enables the callback procedure for execution. If more than one callback is added for the same session event, they are executed in according to their registration sequence, that is, the callback procedure that was registered first, is executed first. This procedure throws an error if an invalid event type is specified or the callback procedure does not exist.</p>
<p>Successful execution of this procedure requires the <code class="codeph">CALLBACK</code> application privilege. This role can be obtained through <code class="codeph">PROVISIONER</code> database role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ADD_GLOBAL_CALLBACK(
  event_type         IN PLS_INTEGER, 
  callback_schema    IN VARCHAR2, 
  callback_package   IN VARCHAR2,
  callback_procedure IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-A26E667D-741A-4371-9BE3-CCE27BE99FB6__GUID-6B1C5798-F07B-4409-9A80-C30F1963DCB3">
<table class="cellalignment5205" summary="ADD_GLOBAL_CALLBACK parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5243" id="d84027e5084">Parameter</th>
<th class="cellalignment5244" id="d84027e5087">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5092" headers="d84027e5084">
<p><code class="codeph">event_type</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5092 d84027e5087">
<p>Select from the following event types:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CREATE_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ATTACH_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">CREATE_NAMESPACE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">GUEST_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">PROXY_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">REVERT_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ENABLE_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DISABLE_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ENABLE_DYNAMIC_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DISABLE_DYNAMIC_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DETACH_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">TERMINATE_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DIRECT_LOGIN_EVENT</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5167" headers="d84027e5084">
<p><code class="codeph">callback_schema</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5167 d84027e5087">
<p>Enter the name of the schema in which the callback procedure was created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5175" headers="d84027e5084">
<p><code class="codeph">callback_package</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5175 d84027e5087">
<p>Enter the name of the package in which the callback procedure was created. If callback procedure is standalone, <code class="codeph">NULL</code> should be passed as <code class="codeph">callback_package</code> parameter. This parameter is optional only if the callback procedure is in a package.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5189" headers="d84027e5084">
<p><code class="codeph">callback_procedure</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5189 d84027e5087">
<p>Enter the name of the procedure that defines the global callback.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.ADD_GLOBAL_CALLBACK (
  DBMS_XS_SESSIONS.CREATE_SESSION_EVENT, 
  &#39;APPS1_SCHEMA&#39;,&#39;APPS2_PKG&#39;,&#39;CREATE_SESSION_CB&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG609"></a><a id="DBFSG610"></a><a id="DBFSG611"></a><a id="DBFSG608"></a>
<div class="props_rev_3"><a id="GUID-5C06BDE3-60A1-4EAF-8D16-4DB7931C779F"></a>
<h4 id="DBFSG-GUID-5C06BDE3-60A1-4EAF-8D16-4DB7931C779F" class="sect4">ENABLE_GLOBAL_CALLBACK Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e5313" class="indexterm-anchor"></a><code class="codeph">ENABLE_GLOBAL_CALLBACK</code> procedure<a id="d84027e5320" class="indexterm-anchor"></a> enables or disables the global callback procedure for execution. If a callback procedure associated with this event is not specified, all callback procedures associated with this global callback are enabled or disabled. If an invalid event type is specified or invalid callback procedure is specified, an error is thrown.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ENABLE_GLOBAL_CALLBACK(
  event_type         IN PLS_INTEGER,
  enable             IN BOOLEAN  DEFAULT TRUE,
  callback_schema    IN VARCHAR2 DEFAULT NULL,
  callback_package   IN VARCHAR2 DEFAULT NULL,
  callback_procedure IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5C06BDE3-60A1-4EAF-8D16-4DB7931C779F__GUID-B1C97AF7-24CD-4008-B210-7D50EDAA0522">
<table class="cellalignment5205" summary="ENABLE_GLOBAL_CALLBACK parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5243" id="d84027e5342">Parameter</th>
<th class="cellalignment5244" id="d84027e5345">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5350" headers="d84027e5342">
<p><code class="codeph">event_type</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5350 d84027e5345">
<p>Select from the following event types:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CREATE_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ATTACH_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">CREATE_NAMESPACE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">GUEST_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">PROXY_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">REVERT_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ENABLE_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DISABLE_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ENABLE_DYNAMIC_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DISABLE_DYNAMIC_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DETACH_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">TERMINATE_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DIRECT_LOGIN_EVENT</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5425" headers="d84027e5342">
<p><code class="codeph">enable</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5425 d84027e5345">
<p>Specifies whether the global callback is to be enabled or disabled. The default value is <code class="codeph">TRUE</code>, meaning enable.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5436" headers="d84027e5342">
<p><code class="codeph">callback_schema</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5436 d84027e5345">
<p>Enter the name of the schema in which the global callback was created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5444" headers="d84027e5342">
<p><code class="codeph">callback_package</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5444 d84027e5345">
<p>Enter the name of the package in which the global callback was created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5452" headers="d84027e5342">
<p><code class="codeph">callback_procedure</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5452 d84027e5345">
<p>Enter the name of the procedure that defines the global callback.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.ENABLE_GLOBAL_CALLBACK (
  DBMS_XS_SESSIONS.CREATE_SESSION_EVENT, 
  TRUE, &#39;APPS1_SCHEMA&#39;,&#39;APPS2_PKG&#39;,&#39;CREATE_SESSION_CB&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG152"></a><a id="DBFSG153"></a><a id="DBFSG154"></a><a id="DBFSG151"></a>
<div class="props_rev_3"><a id="GUID-EE158701-CDD0-4C6E-8225-EA300F9FC352"></a>
<h4 id="DBFSG-GUID-EE158701-CDD0-4C6E-8225-EA300F9FC352" class="sect4">DELETE_GLOBAL_CALLBACK Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e5575" class="indexterm-anchor"></a><code class="codeph">DELETE_GLOBAL_CALLBACK</code> procedure<a id="d84027e5582" class="indexterm-anchor"></a> removes the global callback from registration. (It does not delete the global callback itself.) If a callback procedure is not specified, all callback procedures associated with this global callback are deleted. If an invalid event type is specified, an error is thrown.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">DELETE_GLOBAL_CALLBACK(
  event_type         IN PLS_INTEGER,
  callback_schema    IN VARCHAR2 DEFAULT NULL, 
  callback_package   IN VARCHAR2 DEFAULT NULL,
  callback_procedure IN VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EE158701-CDD0-4C6E-8225-EA300F9FC352__GUID-444A64DB-C092-4922-A02E-1F42A6FD0CA5">
<table class="cellalignment5205" summary="DELETE_GLOBAL_CALLBACK parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5243" id="d84027e5604">Parameter</th>
<th class="cellalignment5244" id="d84027e5607">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5612" headers="d84027e5604">
<p><code class="codeph">event_type</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5612 d84027e5607">
<p>Select from the following event types:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">CREATE_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ATTACH_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">CREATE_NAMESPACE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">GUEST_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">PROXY_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">REVERT_TO_USER_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ENABLE_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DISABLE_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">ENABLE_DYNAMIC_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DISABLE_DYNAMIC_ROLE_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DETACH_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">TERMINATE_SESSION_EVENT</code></p>
</li>
<li>
<p><code class="codeph">DIRECT_LOGIN_EVENT</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5687" headers="d84027e5604">
<p><code class="codeph">callback_schema</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5687 d84027e5607">
<p>Enter the name of the schema in which the global callback was created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5695" headers="d84027e5604">
<p><code class="codeph">callback_package</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5695 d84027e5607">
<p>Enter the name of the package in which the global callback was created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5245" id="d84027e5703" headers="d84027e5604">
<p><code class="codeph">callback_procedure</code></p>
</td>
<td class="cellalignment5246" headers="d84027e5703 d84027e5607">
<p>Enter the name of the procedure that defines the global callback.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">BEGIN
 SYS.DBMS_XS_SESSIONS.DELETE_GLOBAL_CALLBACK (
  DBMS_XS_SESSIONS.CREATE_SESSION_EVENT, 
  &#39;APPS1_SCHEMA&#39;,&#39;APPS2_PKG&#39;,&#39;CREATE_SESSION_CB&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG99328"></a>
<div class="props_rev_3"><a id="GUID-7EDC932E-82DE-4CC5-A9AC-F5A376D7621F"></a>
<h2 id="DBFSG-GUID-7EDC932E-82DE-4CC5-A9AC-F5A376D7621F" class="sect2">XS_ACL Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">XS_ACL</code> package<a id="d84027e5825" class="indexterm-anchor"></a> creates procedures to create and manage Access Control Lists (ACLs).</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG99329"></a>
<div class="props_rev_3"><a id="GUID-E97A081A-57AE-4EFE-94D8-877006CA2EAB"></a>
<h3 id="DBFSG-GUID-E97A081A-57AE-4EFE-94D8-877006CA2EAB" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_ACL</code> package<a id="d84027e5939" class="indexterm-anchor"></a> is created under the <code class="codeph">SYS</code> schema.</p>
<p>The <code class="codeph">DBA</code> role is granted the <code class="codeph">ADMIN_ANY_SEC_POLICY</code> privilege, which allows it to administer schema objects like ACLs, security classes, and security policies across all schemas.</p>
<p>Users can administer schema objects in their own schema if they have been granted the <code class="codeph">RESOURCE</code> role for the schema. The <code class="codeph">RESOURCE</code> role and the <code class="codeph">XS_RESOURCE</code> application role include the <code class="codeph">ADMIN_SEC_POLICY</code> privilege, required to administer schema objects in the schema.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG691"></a>
<div class="props_rev_3"><a id="GUID-5BF3E862-C4E5-4A19-9F2B-7C8CD91FE9F3"></a>
<h3 id="DBFSG-GUID-5BF3E862-C4E5-4A19-9F2B-7C8CD91FE9F3" class="sect3">Object Types, Constructor Functions, Synonyms, and Grants</h3>
<div>
<div class="section">
<p>The following<a id="d84027e6075" class="indexterm-anchor"></a> object types, constructor functions, synonyms, and <code class="codeph">GRANT</code> statements are defined for this package.</p>
<pre dir="ltr">-- Type definition for ACE
CREATE OR REPLACE TYPE XS$ACE_TYPE AS OBJECT (
 
-- Member Variables
  privilege_list      XS$NAME_LIST,
  is_grant_ace        NUMBER,
  is_invert_principal NUMBER,
  principal_name      VARCHAR2(130),
  principal_type      NUMBER,
  start_date          TIMESTAMP WITH TIME ZONE,
  end_date            TIMESTAMP WITH TIME ZONE,
 
  CONSTRUCTOR FUNCTION XS$ACE_TYPE (
    privilege_list   IN XS$NAME_LIST,
    granted          IN BOOLEAN := TRUE,
    inverted         IN BOOLEAN := FALSE,
    principal_name   IN VARCHAR2,
    principal_type   IN PLS_INTEGER := 1,
    start_date       IN TIMESTAMP WITH TIME ZONE := NULL,
    end_date         IN TIMESTAMP WITH TIME ZONE := NULL)
  RETURN SELF AS RESULT,

  MEMBER PROCEDURE set_privileges(privilege_list IN XS$NAME_LIST),
  MEMBER FUNCTION get_privileges RETURN XS$NAME_LIST,
  MEMBER PROCEDURE set_grant(granted IN BOOLEAN),
  MEMBER FUNCTION is_granted RETURN BOOLEAN,
  MEMBER PROCEDURE set_inverted_principal(inverted IN BOOLEAN),
  MEMBER FUNCTION is_inverted_principal RETURN BOOLEAN,
  MEMBER PROCEDURE set_principal(principal_name IN VARCHAR2),
  MEMBER FUNCTION get_principal RETURN VARCHAR2,
  MEMBER PROCEDURE set_principal_type (principal_type IN PLS_INTEGER),
  MEMBER FUNCTION get_principal_type RETURN PLS_INTEGER,
  MEMBER PROCEDURE set_start_date(start_date IN TIMESTAMP WITH TIME ZONE),
  MEMBER FUNCTION get_start_date RETURN TIMESTAMP WITH TIME ZONE,
  MEMBER PROCEDURE set_end_date(end_date IN TIMESTAMP WITH TIME ZONE),
  MEMBER FUNCTION get_end_date RETURN TIMESTAMP WITH TIME ZONE
);
CREATE OR REPLACE TYPE XS$ACE_LIST AS VARRAY(1000) OF XS$ACE_TYPE;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG616"></a>
<div class="props_rev_3"><a id="GUID-A157FB28-FE23-4D30-AAEB-8224230517E7"></a>
<h3 id="DBFSG-GUID-A157FB28-FE23-4D30-AAEB-8224230517E7" class="sect3">Constants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e6192" class="indexterm-anchor"></a>constants define the parent ACL type:</p>
<pre dir="ltr">EXTENDED              CONSTANT PLS_INTEGER := 1;
CONSTRAINED           CONSTANT PLS_INTEGER := 2;  
</pre>
<p>The following constants define the principal&#39;s type:</p>
<pre dir="ltr">PTYPE_XS              CONSTANT PLS_INTEGER := 1;
PTYPE_DB              CONSTANT PLS_INTEGER := 2;
PTYPE_DN              CONSTANT PLS_INTEGER := 3;
PTYPE_EXTERNAL        CONSTANT PLS_INTEGER := 4;
</pre>
<p>The following constants define the parameter&#39;s value type:</p>
<pre dir="ltr">TYPE_NUMBER           CONSTANT PLS_INTEGER := 1;
TYPE_VARCHAR          CONSTANT PLS_INTEGER := 2;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99331"></a><a id="DBFSG99330"></a>
<div class="props_rev_3"><a id="GUID-3DE4201C-2F2C-4D33-8677-B2441F050773"></a>
<h3 id="DBFSG-GUID-3DE4201C-2F2C-4D33-8677-B2441F050773" class="sect3">Summary of XS_ACL Subprograms</h3>
<div>
<div class="tblformal" id="GUID-3DE4201C-2F2C-4D33-8677-B2441F050773__GUID-7CFE4645-9040-48A1-9977-A37A3A5959C1">
<p class="titleintable">Table 11-3 Summary of XS_ACL Subprograms</p>
<table class="cellalignment5205" title="Summary of XS_ACL Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5247" id="d84027e6322">Subprogram</th>
<th class="cellalignment5248" id="d84027e6325">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6330" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-9390C2EF-6A28-4BA0-A338-8E9A95A04F21">CREATE_ACL Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6330 d84027e6325">
<p>Creates an Access Control List (ACL).</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6339" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-434F97A2-14DB-44D9-9CFC-D6F4E0C22560">APPEND_ACES Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6339 d84027e6325">
<p>Adds one or more Access Control Entries (ACEs) to an existing ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6348" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-8A9095C7-EEDB-4EB1-B799-E63B70D7959E">REMOVE_ACES Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6348 d84027e6325">
<p>Removes all ACEs from an ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6357" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-6BB41007-7881-4809-9396-548151C642E7">SET_SECURITY_CLASS Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6357 d84027e6325">
<p>Sets or modifies the security class for an ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6366" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-0CAF4B16-290F-4EE0-853D-F280595D971E">SET_PARENT_ACL Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6366 d84027e6325">
<p>Sets or modifies the parent ACL for an ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6375" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-82010C2F-F4C5-4866-A2F1-23A6036291F0">ADD_ACL_PARAMETER Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6375 d84027e6325">
<p>Adds an ACL parameter value for a data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6384" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-5CBC5FCA-1A11-41B9-A932-501389053833">REMOVE_ACL_PARAMETERS Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6384 d84027e6325">
<p>Removes ACL parameters and values for an ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6393" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-4320F8B2-EA8A-47D1-821E-7FBE81F54A28">SET_DESCRIPTION Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6393 d84027e6325">
<p>Sets a description string for an ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e6402" headers="d84027e6322">
<p><a href="plsql_pkg.htm#GUID-3AB473A9-8A29-4BF5-9639-E593423588B1">DELETE_ACL Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e6402 d84027e6325">
<p>Deletes the specified ACL.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG99333"></a><a id="DBFSG99334"></a><a id="DBFSG99335"></a><a id="DBFSG99332"></a>
<div class="props_rev_3"><a id="GUID-9390C2EF-6A28-4BA0-A338-8E9A95A04F21"></a>
<h4 id="DBFSG-GUID-9390C2EF-6A28-4BA0-A338-8E9A95A04F21" class="sect4">CREATE_ACL Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_ACL</code> procedure creates a new Access Control List (ACL).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.CREATE_ACL (  name            IN VARCHAR2,
  ace_list        IN XS$ACE_LIST,
  sec_class       IN VARCHAR2 := NULL,
  parent          IN VARCHAR2 := NULL,
  inherit_mode    IN PLS_INTEGER := NULL,
  description     IN VARCHAR2 := NULL); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9390C2EF-6A28-4BA0-A338-8E9A95A04F21__GUID-816D2E20-CA87-4E7D-836D-28A4814CBD77">
<table class="cellalignment5205" summary="CREATE_ACL parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5251" id="d84027e6540">Parameter</th>
<th class="cellalignment5252" id="d84027e6543">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e6548" headers="d84027e6540">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5254" headers="d84027e6548 d84027e6543">
<p>The name of the ACL to be created.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e6570" headers="d84027e6540">
<p><code class="codeph">ace_list</code></p>
</td>
<td class="cellalignment5254" headers="d84027e6570 d84027e6543">
<p>The list of Access Control Entries (ACEs) in the ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e6578" headers="d84027e6540">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5254" headers="d84027e6578 d84027e6543">
<p>The name of the security class that specifies the scope or type of the ACL. If no security class is specified, then the <code class="codeph">DML</code> class is used as the default security class.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e6603" headers="d84027e6540">
<p><code class="codeph">parent</code></p>
</td>
<td class="cellalignment5254" headers="d84027e6603 d84027e6543">
<p>The parent ACL name, if any.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e6625" headers="d84027e6540">
<p><code class="codeph">inherit_mode</code></p>
</td>
<td class="cellalignment5254" headers="d84027e6625 d84027e6543">
<p>The inheritance mode if a parent ACL is specified. The allowed values are: <code class="codeph">EXTENDED</code> or <code class="codeph">CONSTRAINED</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e6639" headers="d84027e6540">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5254" headers="d84027e6639 d84027e6543">
<p>An optional description for the ACL.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates an ACL called <code class="codeph">HRACL</code>. This ACL includes ACEs contained in <code class="codeph">ace_list</code>. The privileges used in <code class="codeph">ace_list</code> are part of the <code class="codeph">HRPRIVS</code> security class.</p>
<pre dir="ltr">DECLARE  
  ace_list XS$ACE_LIST;  
BEGIN 
  ace_list := XS$ACE_LIST(
      XS$ACE_TYPE(privilege_list=&gt;XS$NAME_LIST(&#39;&#34;SELECT&#34;&#39;,&#39;VIEW_SENSITIVE_INFO&#39;), 
                  granted=&gt;true, 
                  principal_name=&gt;&#39;HRREP&#39;),
      XS$ACE_TYPE(privilege_list=&gt;XS$NAME_LIST(&#39;UPDATE_INFO&#39;),
                  granted=&gt;true,
                  principal_name=&gt;&#39;HRMGR&#39;));
<span class="bold">  SYS.XS_ACL.CREATE_ACL(name=&gt;&#39;HRACL&#39;,</span>
<span class="bold">                        ace_list=&gt;ace_list,</span>
<span class="bold">                        sec_class=&gt;&#39;HRPRIVS&#39;,</span>
<span class="bold">                        description=&gt;&#39;HR Representative Access&#39;);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG213"></a><a id="DBFSG214"></a><a id="DBFSG215"></a><a id="DBFSG212"></a>
<div class="props_rev_3"><a id="GUID-434F97A2-14DB-44D9-9CFC-D6F4E0C22560"></a>
<h4 id="DBFSG-GUID-434F97A2-14DB-44D9-9CFC-D6F4E0C22560" class="sect4">APPEND_ACES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">APPEND_ACES</code> procedure adds one or more ACE to an existing ACL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.APPEND_ACES (
  acl      IN VARCHAR2,
  ace      IN XS$ACE_TYPE); 

XS.ACL.APPEND_ACES (
  acl      IN VARCHAR2,
  ace_list IN XS$ACE_LIST); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-434F97A2-14DB-44D9-9CFC-D6F4E0C22560__GUID-392EA266-26F1-43D7-AE14-53E2392BF513">
<table class="cellalignment5205" summary="APPEND_ACES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e6808">Parameter</th>
<th class="cellalignment5228" id="d84027e6811">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e6816" headers="d84027e6808">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5230" headers="d84027e6816 d84027e6811">
<p>The name of the ACL to which the ACE is to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e6838" headers="d84027e6808">
<p><code class="codeph">ace</code></p>
</td>
<td class="cellalignment5230" headers="d84027e6838 d84027e6811">
<p>The ACE to be added to the ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e6846" headers="d84027e6808">
<p><code class="codeph">ace_list</code></p>
</td>
<td class="cellalignment5230" headers="d84027e6846 d84027e6811">
<p>The list of ACEs to be added to the ACL.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds an ACE to the <code class="codeph">HRACL</code> ACL. The ACE grants the <code class="codeph">SELECT</code> privilege to the <code class="codeph">DB_HR</code> database user.</p>
<pre dir="ltr">DECLARE  
  ace_entry XS$ACE_TYPE;  
BEGIN 
  ace_entry := XS$ACE_TYPE(privilege_list=&gt;XS$NAME_LIST(&#39;&#34;SELECT&#34;&#39;), 
                           granted=&gt;true,
                           principal_name=&gt;&#39;DB_HR&#39;,
                           principal_type=&gt;XS_ACL.PTYPE_DB);
  <span class="bold">SYS.XS_ACL.APPEND_ACES(&#39;HRACL&#39;,ace_entry);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG217"></a><a id="DBFSG218"></a><a id="DBFSG219"></a><a id="DBFSG216"></a>
<div class="props_rev_3"><a id="GUID-8A9095C7-EEDB-4EB1-B799-E63B70D7959E"></a>
<h4 id="DBFSG-GUID-8A9095C7-EEDB-4EB1-B799-E63B70D7959E" class="sect4">REMOVE_ACES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_ACES</code> procedure removes all ACEs from an ACL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.REMOVE_ACES (
  acl IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8A9095C7-EEDB-4EB1-B799-E63B70D7959E__GUID-CE7CE620-C23F-4D8B-AE12-BC661839B4C2">
<table class="cellalignment5205" summary="REMOVE_ACES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e7004">Parameter</th>
<th class="cellalignment5228" id="d84027e7007">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7012" headers="d84027e7004">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7012 d84027e7007">
<p>The name of the ACL from which the ACEs are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes all ACEs from the ACL called <code class="codeph">HRACL</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.REMOVE_ACES(&#39;HRACL&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG221"></a><a id="DBFSG222"></a><a id="DBFSG223"></a><a id="DBFSG220"></a>
<div class="props_rev_3"><a id="GUID-6BB41007-7881-4809-9396-548151C642E7"></a>
<h4 id="DBFSG-GUID-6BB41007-7881-4809-9396-548151C642E7" class="sect4">SET_SECURITY_CLASS Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e7154" class="indexterm-anchor"></a><code class="codeph">SET_SECURITY_CLASS</code> procedure sets or modifies the security class for an ACL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.SET_SECURITY_CLASS (
  acl       IN VARCHAR2,
  sec_class IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6BB41007-7881-4809-9396-548151C642E7__GUID-27A9C761-FA1B-47D1-AF9E-3D6889CE8D09">
<table class="cellalignment5205" summary="SET_SECURITY_CLASS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5251" id="d84027e7178">Parameter</th>
<th class="cellalignment5252" id="d84027e7181">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e7186" headers="d84027e7178">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5254" headers="d84027e7186 d84027e7181">
<p>The name of the ACL for which the security class is to be set.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e7208" headers="d84027e7178">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5254" headers="d84027e7208 d84027e7181">
<p>The name of the security class that defines the ACL scope or type.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example associates the <code class="codeph">HRPRIVS</code> security class with the <code class="codeph">HRACL</code> ACL:</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.SET_SECURITY_CLASS(&#39;HRACL&#39;,&#39;HRPRIVS&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG225"></a><a id="DBFSG226"></a><a id="DBFSG227"></a><a id="DBFSG224"></a>
<div class="props_rev_3"><a id="GUID-0CAF4B16-290F-4EE0-853D-F280595D971E"></a>
<h4 id="DBFSG-GUID-0CAF4B16-290F-4EE0-853D-F280595D971E" class="sect4">SET_PARENT_ACL Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_PARENT_ACL</code> sets or modifies the parent ACL for an ACL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.SET_PARENT_ACL(
  acl            IN VARCHAR2,
  parent         IN VARCHAR2,
  inherit_mode   IN PLS_INTEGER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0CAF4B16-290F-4EE0-853D-F280595D971E__GUID-B180281F-2FA5-4D36-9C70-702EEF0A10D1">
<table class="cellalignment5205" summary="SET_PARENT_ACL parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5255" id="d84027e7373">Parameter</th>
<th class="cellalignment5256" id="d84027e7376">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e7381" headers="d84027e7373">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5258" headers="d84027e7381 d84027e7376">
<p>The name of the ACL whose parent needs to be set.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e7403" headers="d84027e7373">
<p><code class="codeph">parent</code></p>
</td>
<td class="cellalignment5258" headers="d84027e7403 d84027e7376">
<p>The name of the parent ACL.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e7425" headers="d84027e7373">
<p><code class="codeph">inherit_mode</code></p>
</td>
<td class="cellalignment5258" headers="d84027e7425 d84027e7376">
<p>The inheritance mode. This can be one of the following values:</p>
<p><code class="codeph">EXTENDED</code> (<code class="codeph">extends from</code>), <code class="codeph">CONSTRAINED</code> (<code class="codeph">constrained with</code>)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the <code class="codeph">AllDepACL</code> ACL as the parent ACL for the <code class="codeph">HRACL</code> ACL. The inheritance type is set to <code class="codeph">EXTENDED</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.SET_PARENT_ACL(&#39;HRACL&#39;,&#39;AllDepACL&#39;,XS_ACL.EXTENDED);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG229"></a><a id="DBFSG230"></a><a id="DBFSG231"></a><a id="DBFSG228"></a>
<div class="props_rev_3"><a id="GUID-82010C2F-F4C5-4866-A2F1-23A6036291F0"></a>
<h4 id="DBFSG-GUID-82010C2F-F4C5-4866-A2F1-23A6036291F0" class="sect4">ADD_ACL_PARAMETER Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e7573" class="indexterm-anchor"></a><code class="codeph">ADD_ACL_PARAMETER</code> adds an ACL parameter value for a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.ADD_ACL_PARAMETER (
  acl         IN VARCHAR2,
  policy      IN VARCHAR2,
  parameter   IN VARCHAR2,
  value       IN NUMBER); 

XS_ACL.ADD_ACL_PARAMETER (
  acl         IN VARCHAR2,
  policy      IN VARCHAR2,
  parameter   IN VARCHAR2,
  value       IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-82010C2F-F4C5-4866-A2F1-23A6036291F0__GUID-DDE9AE88-BC2C-4F88-9617-D32EC6DCF31E">
<table class="cellalignment5205" summary="ADD_ACL_PARAMETER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e7597">Parameter</th>
<th class="cellalignment5228" id="d84027e7600">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7605" headers="d84027e7597">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7605 d84027e7600">
<p>The name of the ACL to which the parameter is to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7627" headers="d84027e7597">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7627 d84027e7600">
<p>The name of the data security policy for which the ACL parameter has been created.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7649" headers="d84027e7597">
<p><code class="codeph">parameter</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7649 d84027e7600">
<p>The name of the ACL parameter as defined by the data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7657" headers="d84027e7597">
<p><code class="codeph">value</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7657 d84027e7600">
<p>The value of the ACL parameter to be used.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds the <code class="codeph">REGION</code> parameter for <code class="codeph">ACL1</code>. The name of the data security policy for which the ACL parameter is created is <code class="codeph">TEST_DS</code>. The value of the <code class="codeph">REGION</code> parameter is <code class="codeph">WEST</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.ADD_ACL_PARAMETER(&#39;ACL1&#39;,&#39;TEST_DS&#39;,&#39;REGION&#39;, &#39;WEST&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG237"></a><a id="DBFSG238"></a><a id="DBFSG239"></a><a id="DBFSG236"></a>
<div class="props_rev_3"><a id="GUID-5CBC5FCA-1A11-41B9-A932-501389053833"></a>
<h4 id="DBFSG-GUID-5CBC5FCA-1A11-41B9-A932-501389053833" class="sect4">REMOVE_ACL_PARAMETERS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_ACL_PARAMETERS</code> removes the specified ACL parameter for an ACL. If no parameter name is specified, then all ACL parameters for the ACL are removed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.REMOVE_ACL_PARAMETERS (
  acl        IN VARCHAR2,
  parameter  IN VARCHAR2); 

XS_ACL.REMOVE_ACL_PARAMETERS (
  acl IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5CBC5FCA-1A11-41B9-A932-501389053833__GUID-F04E77EE-C701-41C5-88F5-69607646CBE5">
<table class="cellalignment5205" summary="REMOVE_ACL_PARAMETERS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5227" id="d84027e7817">Parameter</th>
<th class="cellalignment5228" id="d84027e7820">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7825" headers="d84027e7817">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7825 d84027e7820">
<p>The name of the ACL from which the parameter(s) are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5229" id="d84027e7847" headers="d84027e7817">
<p><code class="codeph">parameter</code></p>
</td>
<td class="cellalignment5230" headers="d84027e7847 d84027e7820">
<p>The name of the parameter that needs to be removed from the ACL.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes the <code class="codeph">REGION</code> parameter from the <code class="codeph">ACL1</code> ACL:</p>
<pre dir="ltr">BEGIN
  XS_ACL.REMOVE_ACL_PARAMETERS(&#39;ACL1&#39;, &#39;REGION&#39;);
END;
</pre>
<p>The following example removes all ACL parameters for <code class="codeph">ACL1</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.REMOVE_ACL_PARAMETERS(&#39;ACL1&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG241"></a><a id="DBFSG242"></a><a id="DBFSG243"></a><a id="DBFSG240"></a>
<div class="props_rev_3"><a id="GUID-4320F8B2-EA8A-47D1-821E-7FBE81F54A28"></a>
<h4 id="DBFSG-GUID-4320F8B2-EA8A-47D1-821E-7FBE81F54A28" class="sect4">SET_DESCRIPTION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_DESCRIPTION</code> procedure sets a description string for an ACL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.SET_DESCRIPTION (
  acl         IN VARCHAR2,
  description IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4320F8B2-EA8A-47D1-821E-7FBE81F54A28__GUID-5C9CE867-5412-4468-8830-279F534592FF">
<table class="cellalignment5205" summary="SET_DESCRIPRION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5259" id="d84027e8005">Parameter</th>
<th class="cellalignment5260" id="d84027e8008">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e8013" headers="d84027e8005">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5262" headers="d84027e8013 d84027e8008">
<p>The name of the ACL for which the description is to be set.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e8035" headers="d84027e8005">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5262" headers="d84027e8035 d84027e8008">
<p>A string description for the ACL.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a description for the <code class="codeph">HRACL</code> ACL:</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.SET_DESCRIPTION(&#39;HRACL&#39;,&#39;Grants privileges to HR representatives and 
                          managers.&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG245"></a><a id="DBFSG246"></a><a id="DBFSG247"></a><a id="DBFSG244"></a>
<div class="props_rev_3"><a id="GUID-3AB473A9-8A29-4BF5-9639-E593423588B1"></a>
<h4 id="DBFSG-GUID-3AB473A9-8A29-4BF5-9639-E593423588B1" class="sect4">DELETE_ACL Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_ACL</code> procedure deletes the specified ACL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ACL.DELETE_ACL (
  acl           IN VARCHAR2,
  delete_option IN PLS_INTEGER := XS_ADMIN_UTIL.DEFAULT_OPTION);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-3AB473A9-8A29-4BF5-9639-E593423588B1__GUID-8169ABF8-AF13-4DC7-A9B2-58C64BB75CD9">
<table class="cellalignment5205" summary="DELETE_ACL parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e8184">Parameter</th>
<th class="cellalignment5216" id="d84027e8187">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e8192" headers="d84027e8184">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5218" headers="d84027e8192 d84027e8187">
<p>The name of the ACL to be deleted.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.ACL1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">ACL1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.ACL1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e8214" headers="d84027e8184">
<p><code class="codeph">delete_option</code></p>
</td>
<td class="cellalignment5218" headers="d84027e8214 d84027e8187">
<p>The delete option to use. To the data security policy, the behavior of the following options is the same:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DEFAULT_OPTION:</code></p>
<p>The default option allows deleting an ACL only if it is not referenced elsewhere. If the ACL is referenced elsewhere, then the ACL cannot be deleted.</p>
<p>For example, the delete operation fails if you try to delete an ACL that is part of a data security policy.</p>
</li>
<li>
<p><code class="codeph">CASCADE_OPTION</code>:</p>
<p>The cascade option deletes the ACL and also removes the ACL reference in a data realm constraint of a data security policy.</p>
</li>
<li>
<p><code class="codeph">ALLOW_INCONSISTENCIES_OPTION:</code></p>
<p>The allow inconsistencies option lets you delete the ACL even if other entities have late binding references to it. In this mode, the ACL will be removed but the references are not removed.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the <code class="codeph">HRACL</code> ACL using the default delete option:</p>
<pre dir="ltr">BEGIN
  SYS.XS_ACL.DELETE_ACL(&#39;HRACL&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG376"></a>
<div class="props_rev_3"><a id="GUID-F39AEA2C-EF16-4E19-BE15-55CFD799E7F8"></a>
<h2 id="DBFSG-GUID-F39AEA2C-EF16-4E19-BE15-55CFD799E7F8" class="sect2">XS_ADMIN_UTIL Package</h2>
<div>
<div class="section">
<p>The XS_ADMIN_UTIL package <a id="d84027e8361" class="indexterm-anchor"></a>contains helper subprograms to be used by other packages.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG377"></a>
<div class="props_rev_3"><a id="GUID-5FAC70E6-B85F-463C-AA0D-7AF6CEDE50C9"></a>
<h3 id="DBFSG-GUID-5FAC70E6-B85F-463C-AA0D-7AF6CEDE50C9" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_ADMIN_UTIL</code> package<a id="d84027e8475" class="indexterm-anchor"></a> is created in the <code class="codeph">SYS</code> schema. The caller has invoker&#39;s rights on this package. The <code class="codeph">SYS</code> privilege is required to grant or revoke a Real Application Security system privilege to or from a user or role.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG692"></a>
<div class="props_rev_3"><a id="GUID-2E0CF8F6-C270-4F4E-B960-A7ECE92D4C44"></a>
<h3 id="DBFSG-GUID-2E0CF8F6-C270-4F4E-B960-A7ECE92D4C44" class="sect3">Object Types, Constructor Functions, Synonyms, and Grants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e8592" class="indexterm-anchor"></a>object types, constructor functions, synonyms, and <code class="codeph">GRANT</code> statements are defined for this package.</p>
<pre dir="ltr">CREATE OR REPLACE TYPE XS$LIST IS VARRAY(1000) OF VARCHAR2(4000);
CREATE OR REPLACE TYPE XS$NAME_LIST IS VARRAY(1000) OF VARCHAR2(261);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG617"></a>
<div class="props_rev_3"><a id="GUID-FE343B84-99AC-412A-9F05-BEDAA794AF5D"></a>
<h3 id="DBFSG-GUID-FE343B84-99AC-412A-9F05-BEDAA794AF5D" class="sect3">Constants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e8709" class="indexterm-anchor"></a>constants define the delete options:</p>
<pre dir="ltr">DEFAULT_OPTION               CONSTANT PLS_INTEGER := 1;
CASCADE_OPTION               CONSTANT PLS_INTEGER := 2;
ALLOW_INCONSISTENCIES_OPTION CONSTANT PLS_INTEGER := 3;
</pre>
<p>The following constants define the principal&#39;s type:</p>
<pre dir="ltr">PTYPE_XS              CONSTANT PLS_INTEGER := 1;
PTYPE_DB              CONSTANT PLS_INTEGER := 2;
PTYPE_DN              CONSTANT PLS_INTEGER := 3;
PTYPE_EXTERNAL        CONSTANT PLS_INTEGER := 4;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG694"></a><a id="DBFSG693"></a>
<div class="props_rev_3"><a id="GUID-2A2D1D46-E43D-45C2-95C9-3A78168C2BB9"></a>
<h3 id="DBFSG-GUID-2A2D1D46-E43D-45C2-95C9-3A78168C2BB9" class="sect3">Summary of XS_ADMIN_UTIL Subprograms</h3>
<div>
<div class="tblformal" id="GUID-2A2D1D46-E43D-45C2-95C9-3A78168C2BB9__GUID-CCBFF181-262F-4A7D-843D-F37B434466B2">
<p class="titleintable">Table 11-4 Summary of XS_ADMIN_UTIL Subprograms</p>
<table class="cellalignment5205" title="Summary of XS_ADMIN_UTIL Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5206" id="d84027e8835">Subprogram</th>
<th class="cellalignment5207" id="d84027e8838">Brief Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e8843" headers="d84027e8835">
<p><a href="plsql_pkg.htm#GUID-7F29B504-8BEA-43C6-B791-A01899B66FB9">GRANT_SYSTEM_PRIVILEGE Procedure</a></p>
</td>
<td class="cellalignment5209" headers="d84027e8843 d84027e8838">
<p>Grant a Real Application Security system privilege to a user or role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e8852" headers="d84027e8835">
<p><a href="plsql_pkg.htm#GUID-B0EFF106-9A56-4864-B537-E7296C819606">REVOKE_SYSTEM_PRIVILEGE Procedure</a></p>
</td>
<td class="cellalignment5209" headers="d84027e8852 d84027e8838">
<p>Revoke a Real Application Security system privilege from a user or role.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG696"></a><a id="DBFSG697"></a><a id="DBFSG698"></a><a id="DBFSG695"></a>
<div class="props_rev_3"><a id="GUID-7F29B504-8BEA-43C6-B791-A01899B66FB9"></a>
<h4 id="DBFSG-GUID-7F29B504-8BEA-43C6-B791-A01899B66FB9" class="sect4">GRANT_SYSTEM_PRIVILEGE Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e8970" class="indexterm-anchor"></a><code class="codeph">GRANT_SYSTEM_PRIVILEGE</code> procedure is used to grant a Real Application Security security class privilege to a user or role. Only the user with <code class="codeph">SYS</code> privilege can perform this operation. <a id="d84027e8980" class="indexterm-anchor"></a></p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ADMIN_UTIL.GRANT_SYSTEM_PRIVILEGE (
  priv_name      IN VARCHAR2,
  user_name      IN VARCHAR2,
  user_type      IN  PLS_INTEGER := XS_ADMIN_UTIL.PTYPE_DB);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-7F29B504-8BEA-43C6-B791-A01899B66FB9__GUID-2490E824-86F6-4A31-AF13-A75B5BFF515A">
<table class="cellalignment5205" summary="GRANT_SYSTEM_PRIVILEGE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e9001">Parameter</th>
<th class="cellalignment5216" id="d84027e9004">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e9009" headers="d84027e9001">
<p><code class="codeph">priv_name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e9009 d84027e9004">
<p>Specifies the name of the Real Application Security security class privilege to be granted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e9017" headers="d84027e9001">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e9017 d84027e9004">
<p>Specifies the name of the user or role to which the Real Application Security security class privilege is to be granted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e9025" headers="d84027e9001">
<p><code class="codeph">user_type</code></p>
</td>
<td class="cellalignment5218" headers="d84027e9025 d84027e9004">
<p>The type of user. By default the database user.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a database user, <code class="codeph">dbuser1</code>, and grants Real Application Security privilege <code class="codeph">ADMINISTER_SESSION</code> to this database user and specifies the <code class="codeph">user_type</code> as <code class="codeph">XS_ADMIN_UTIL.PTYPE_DB</code>, though by default, this is the default value and need not be specified.</p>
<pre dir="ltr">SQL&gt; CREATE USER dbuser1 identified by password;
</pre>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_ADMIN_UTIL.GRANT_SYSTEM_PRIVILEGE(&#39;ADMINISTER_SESSION&#39;, &#39;dbuser1&#39;, XS_ADMIN_UTIL.PTYPE_DB);
</pre></div>
<!-- class="section" -->
<div class="section">
<p>The following example creates an application user, <code class="codeph">user1</code>, and grants Real Application Security privilege <code class="codeph">ADMINISTER_SESSION</code> to this application user, specifies the <code class="codeph">user_type</code> as <code class="codeph">XS_ADMIN_UTIL.PTYPE_XS</code>.</p>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_PRINCIPAL.CREATE_USER(&#39;user1&#39;,&#39;HR1&#39;);
</pre>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_PRINCIPAL.SET_PASSWORD(&#39;user1&#39;, &#39;password&#39;);
</pre>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_ADMIN_UTIL.GRANT_SYSTEM_PRIVILEGE(&#39;ADMINISTER_SESSION&#39;, &#39;user1&#39;, XS_ADMIN_UTIL.PTYPE_XS);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG700"></a><a id="DBFSG701"></a><a id="DBFSG702"></a><a id="DBFSG699"></a>
<div class="props_rev_3"><a id="GUID-B0EFF106-9A56-4864-B537-E7296C819606"></a>
<h4 id="DBFSG-GUID-B0EFF106-9A56-4864-B537-E7296C819606" class="sect4">REVOKE_SYSTEM_PRIVILEGE Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e9185" class="indexterm-anchor"></a><code class="codeph">REVOKE_SYSTEM_PRIVILEGE</code> is used to revoke a Real Application Security security class privilege from a user or role. Only the user with <code class="codeph">SYS</code> privilege can perform this operation.<a id="d84027e9195" class="indexterm-anchor"></a></p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_ADMIN_UTIL.REVOKE_SYSTEM_PRIVILEGE (
  priv_name      IN VARCHAR2,
  user_name      IN VARCHAR2,
  user_type      IN  PLS_INTEGER := XS_ADMIN_UTIL.PTYPE_DB);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-B0EFF106-9A56-4864-B537-E7296C819606__GUID-C5027C4B-D223-486E-BEB9-062CD7FF0E25">
<table class="cellalignment5205" summary="REVOKE_SYSTEM_PRIVILEGE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e9216">Parameter</th>
<th class="cellalignment5216" id="d84027e9219">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e9224" headers="d84027e9216">
<p><code class="codeph">priv_name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e9224 d84027e9219">
<p>Specifies the name of the Real Application Security security class privilege to be revoked.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e9232" headers="d84027e9216">
<p><code class="codeph">user_name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e9232 d84027e9219">
<p>Specifies the name of the user or role from which the Real Application Security security class privilege is to be revoked.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e9240" headers="d84027e9216">
<p><code class="codeph">user_type</code></p>
</td>
<td class="cellalignment5218" headers="d84027e9240 d84027e9219">
<p>The type of user. By default the database user.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a database user, <code class="codeph">dbuser1</code>, and revokes Real Application Security privilege <code class="codeph">ADMINISTER_SESSION</code> from this database user and specifies the <code class="codeph">user_type</code> as <code class="codeph">XS_ADMIN_UTIL.PTYPE_DB</code>, though by default, this is the default value and need not be specified.</p>
<pre dir="ltr">CREATE USER dbuser1 identified by password;
</pre>
<pre dir="ltr">SYS.XS_ADMIN_UTIL.REVOKE_SYSTEM_PRIVILEGE(&#39;ADMINISTER_SESSION&#39;,&#39;dbuser1&#39;, XS_ADMIN_UTIL.PTYPE_DB);
</pre></div>
<!-- class="section" -->
<div class="section">
<p>The following example creates an application user, <code class="codeph">user1</code>, and revokes Real Application Security privilege <code class="codeph">ADMINISTER_SESSION</code> from this application user and specifies the <code class="codeph">user_type</code> as <code class="codeph">XS_ADMIN_UTIL.PTYPE_XS</code>.</p>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_PRINCIPAL.CREATE_USER(&#39;user1&#39;,&#39;HR1&#39;);
</pre>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_PRINCIPAL.SET_PASSWORD(&#39;user1&#39;, &#39;password&#39;);
</pre>
<pre dir="ltr">SQL&gt; EXEC SYS.XS_ADMIN_UTIL.REVOKE_SYSTEM_PRIVILEGE(&#39;ADMINISTER_SESSION&#39;,&#39;user1&#39;, XS_ADMIN_UTIL.PTYPE_XS);
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG99465"></a>
<div class="props_rev_3"><a id="GUID-86D3D88B-27EA-440E-9D62-5771F0BF2593"></a>
<h2 id="DBFSG-GUID-86D3D88B-27EA-440E-9D62-5771F0BF2593" class="sect2">XS_DATA_SECURITY Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">XS_DATA_SECURITY</code> package <a id="d84027e9399" class="indexterm-anchor"></a>includes procedures to create, manage, and delete data security policies, associated data realm constraints, column constraints, and ACL parameters.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG703"></a>
<div class="props_rev_3"><a id="GUID-DF1F8C5D-4AD5-472B-864A-8EC8A5CC5B95"></a>
<h3 id="DBFSG-GUID-DF1F8C5D-4AD5-472B-864A-8EC8A5CC5B95" class="sect3">Object Types, Constructor Functions, Synonyms, and Grants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e9510" class="indexterm-anchor"></a>object types, constructor functions, synonyms, and <code class="codeph">GRANT</code> statements are defined for this package.</p>
<pre dir="ltr">-- Create a type for key
CREATE OR REPLACE TYPE XS$KEY_TYPE AS OBJECT (
primary_key      VARCHAR2(130),
foreign_key      VARCHAR2(4000),
-- Foreign key type; 1 = col name, 2 = col value
foreign_key_type NUMBER,
-- Constructor function
CONSTRUCTOR FUNCTION XS$KEY_TYPE
                     (primary_key      IN VARCHAR2,
                      foreign_key      IN VARCHAR2,
                      foreign_key_type IN NUMBER)
                      RETURN SELF AS RESULT,

MEMBER FUNCTION GET_PRIMARY_KEY RETURN VARCHAR2,
MEMBER FUNCTION GET_FOREIGN_KEY RETURN VARCHAR2,
MEMBER FUNCTION GET_FOREIGN_KEY_TYPE RETURN NUMBER,
);
CREATE OR REPLACE TYPE XS$KEY_LIST AS VARRAY(1000) OF XS$KEY_TYPE;
CREATE OR REPLACE TYPE XS$REALM_CONSTRAINT_TYPE AS OBJECT (
-- Member variables
realm_type    NUMBER,
-- Member evaluation rule 
realm              VARCHAR2(4000),
-- acl list of instance set
acl_list              XS$NAME_LIST,
-- isStatic variable for instance set. Stored as INTEGER. No boolean datatype 
-- for objects. False is stored as 0 and TRUE is stored as 1
is_static          INTEGER,
-- Indicate if the realm is parameterized.
parameterized      INTEGER,
-- parent schema name for inherited from
parent_schema      VARCHAR2(130),
-- parent object name for inherited from
parent_object      VARCHAR2(130),
-- keys for inherited from
key_list           XS$KEY_LIST,
-- when condition for inherited from
when_condition     VARCHAR2(4000),

-- Constructor function - row_level realm
CONSTRUCTOR FUNCTION XS$REALM_CONSTRAINT_TYPE
                     (realm                  IN VARCHAR2,
                      acl_list               IN XS$NAME_LIST,
                      is_static              IN BOOLEAN := FALSE)
                      RETURN SELF AS RESULT,
 
-- Constructor function - parameterized row_level realm
CONSTRUCTOR FUNCTION XS$REALM_CONSTRAINT_TYPE
                     (realm                  IN VARCHAR2,                      
                      is_static              IN BOOLEAN := FALSE)
                      RETURN SELF AS RESULT,
 
-- Constructor function - master realm
CONSTRUCTOR FUNCTION XS$REALM_CONSTRAINT_TYPE
                     (parent_schema  IN VARCHAR2,
                      parent_object  IN VARCHAR2,
                      key_list       IN XS$KEY_LIST,
                      when_condition IN VARCHAR2:= NULL)
                      RETURN SELF AS RESULT,
 
-- Accessor functions
MEMBER FUNCTION GET_TYPE RETURN NUMBER,
MEMBER FUNCTION GET_REALM RETURN VARCHAR2,
MEMBER FUNCTION GET_ACLS RETURN XS$NAME_LIST,
MEMBER FUNCTION IS_DYNAMIC_REALM RETURN BOOLEAN,
MEMBER FUNCTION IS_STATIC_REALM RETURN BOOLEAN,
MEMBER FUNCTION IS_PARAMETERIZED_REALM RETURN BOOLEAN,
MEMBER FUNCTION GET_KEYS RETURN XS$KEY_LIST,
MEMBER FUNCTION GET_PARENT_SCHEMA RETURN VARCHAR2,
MEMBER FUNCTION GET_PARENT_OBJECT RETURN VARCHAR2,
MEMBER FUNCTION GET_WHEN_CONDITION RETURN VARCHAR2,
MEMBER PROCEDURE SET_REALM(realm IN VARCHAR2),
MEMBER PROCEDURE ADD_ACLS(acl      IN VARCHAR2),
MEMBER PROCEDURE ADD_ACLS(acl_list IN XS$NAME_LIST),
MEMBER PROCEDURE SET_ACLS(acl_list IN XS$NAME_LIST),
MEMBER PROCEDURE SET_DYNAMIC,
MEMBER PROCEDURE SET_STATIC,
MEMBER PROCEDURE ADD_KEYS(key IN XS$KEY_TYPE),
MEMBER PROCEDURE ADD_KEYS(key_list IN XS$KEY_LIST),
MEMBER PROCEDURE SET_KEYS(key_list IN XS$KEY_LIST),
MEMBER PROCEDURE SET_PARENT_SCHEMA(parent_schema IN VARCHAR2),
MEMBER PROCEDURE SET_PARENT_OBJECT(parent_object IN VARCHAR2),
MEMBER PROCEDURE SET_WHEN_CONDITION(when_condition IN VARCHAR2)
);
-- Create a list of realm constraint type
CREATE OR REPLACE TYPE XS$REALM_CONSTRAINT_LIST AS VARRAY(1000)
                       OF XS$REALM_CONSTRAINT_TYPE;
-- Create a type for column(attribute) security
CREATE OR REPLACE TYPE XS$COLUMN_CONSTRAINT_TYPE AS OBJECT (
-- column list
column_list        XS$LIST,
-- privilege for column security
privilege          VARCHAR2(261),
-- Constructor function
CONSTRUCTOR FUNCTION XS$COLUMN_CONSTRAINT_TYPE
                     (column_list  IN XS$LIST,
                      privilege    IN VARCHAR2)
                      return SELF AS RESULT,
MEMBER FUNCTION GET_COLUMNS RETURN XS$LIST,
MEMBER FUNCTION GET_PRIVILEGE RETURN VARCHAR2,
MEMBER PROCEDURE ADD_COLUMNS(column IN VARCHAR2),
MEMBER PROCEDURE ADD_COLUMNS(column_list IN XS$LIST),
MEMBER PROCEDURE SET_COLUMNS(column_list IN XS$LIST),
MEMBER PROCEDURE SET_PRIVILEGE(privilege IN VARCHAR2)
);
-- Create a list of column constraint for column security
CREATE OR REPLACE TYPE XS$COLUMN_CONSTRAINT_LIST
                       IS VARRAY(1000) of XS$COLUMN_CONSTRAINT_TYPE;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99466"></a>
<div class="props_rev_3"><a id="GUID-CCD8432E-44D7-433C-8FFB-B0E621C80053"></a>
<h3 id="DBFSG-GUID-CCD8432E-44D7-433C-8FFB-B0E621C80053" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_DATA_SECURITY</code> package<a id="d84027e9629" class="indexterm-anchor"></a> is created under the <code class="codeph">SYS</code> schema. The <code class="codeph">DBA</code> role is granted the <code class="codeph">ADMIN_ANY_SEC_POLICY</code>, which allows it to administer schema objects like ACLs, security classes, and security policies across all schemas. In addition, users granted the <code class="codeph">ADMIN_ANY_SEC_POLICY</code> can call the following procedures: <code class="codeph">ENABLE_OBJECT_POLICY</code>, <code class="codeph">DISABLE_OBJECT_POLICY</code>, <code class="codeph">APPLY_OBJECT_POLICY</code>, and <code class="codeph">REMOVE_OBJECT_POLICY</code>.</p>
<p>Users can administer schema objects in their own schema if they have been granted the <code class="codeph">RESOURCE</code> role for the schema. The <code class="codeph">RESOURCE</code> role and the <code class="codeph">XS_RESOURCE</code> application role include the <code class="codeph">ADMIN_SEC_POLICY</code> privilege, required to administer schema objects in the schema.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99468"></a><a id="DBFSG704"></a><a id="DBFSG99467"></a>
<div class="props_rev_3"><a id="GUID-E9CA2293-1B0F-4575-A1C9-CCE012F979A3"></a>
<h3 id="DBFSG-GUID-E9CA2293-1B0F-4575-A1C9-CCE012F979A3" class="sect3">Summary of XS_DATA_SECURITY Subprograms</h3>
<div>
<div class="tblformalwide" id="GUID-E9CA2293-1B0F-4575-A1C9-CCE012F979A3__GUID-4BCA59E4-BB7D-40A7-807A-8564816A1BB8">
<p class="titleintable">Table 11-5 Summary of XS_DATA_SECURITY Subprograms</p>
<table class="cellalignment5210" title="Summary of XS_DATA_SECURITY Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5247" id="d84027e9790">Subprogram</th>
<th class="cellalignment5248" id="d84027e9793">Brief Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9798" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-BC06195D-9ED9-4095-942E-5651B543B11F">CREATE_POLICY Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9798 d84027e9793">
<p>Creates a new data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9807" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-6BCE446D-5815-46B3-A550-8B132994B5E3">APPEND_REALM_CONSTRAINTS Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9807 d84027e9793">
<p>Adds one or more data realm constraints to an existing data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9816" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-C98B58F8-4BAE-4C92-9BBA-FC433F69DD68">REMOVE_REALM_CONSTRAINTS Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9816 d84027e9793">
<p>Removes all data realm constraints for the specified data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9825" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-9BA4B1E1-2D71-43DB-A510-4C863ECE7DFB">ADD_COLUMN_CONSTRAINTS Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9825 d84027e9793">
<p>Adds one or more column constraint to the specified data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9834" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-74A9B5F9-02C7-40B1-AB6A-76BE25D5CEC3">REMOVE_COLUMN_CONSTRAINTS Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9834 d84027e9793">
<p>Removes all column constraints from a data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9843" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-35E24F90-6787-49DF-901B-2913B1D8EFE5">CREATE_ACL_PARAMETER Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9843 d84027e9793">
<p>Creates an ACL parameter for the specified data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9852" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-EA4A0C93-FAB7-4550-B1F3-1A1A62233F79">DELETE_ACL_PARAMETER Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9852 d84027e9793">
<p>Deletes an ACL parameter from the specified data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9861" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-AD0E9510-AEF4-4BFE-9413-93644F2AED2F">SET_DESCRIPTION Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9861 d84027e9793">
<p>Sets a description string for the specified data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9870" headers="d84027e9790">
<p><a href="plsql_pkg.htm#GUID-55D349F3-DA18-45FB-ADFA-CD7E92C1EF9D">DELETE_POLICY Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9870 d84027e9793">
<p>Deletes a data security policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="tblformalwide" id="GUID-E9CA2293-1B0F-4575-A1C9-CCE012F979A3__GUID-92749685-3062-4D48-B473-568A6AC8797C">
<p class="titleintable">Table 11-6 Summary of XS_DATA_SECURITY Subprograms for Managing Data Security Policies on Tables or Views</p>
<table class="cellalignment5210" title="Summary of XS_DATA_SECURITY Subprograms for Managing Data Security Policies on Tables or Views" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5247" id="d84027e9888">Subprogram</th>
<th class="cellalignment5248" id="d84027e9891">Brief Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9896" headers="d84027e9888">
<p><a href="plsql_pkg.htm#GUID-CCA3CC62-1F6C-474A-92D0-0A090E3CF7CF">ENABLE_OBJECT_POLICY Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9896 d84027e9891">
<p>Enables the data security policy for the specified table or view.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9905" headers="d84027e9888">
<p><a href="plsql_pkg.htm#GUID-176F13AA-D535-4985-9768-0DA72C764696">DISABLE_OBJECT_POLICY Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9905 d84027e9891">
<p>Disables the data security policy for the specified table or view.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9914" headers="d84027e9888">
<p><a href="plsql_pkg.htm#GUID-582E1EA5-06AE-4B63-9608-23E67AEC3029">REMOVE_OBJECT_POLICY Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9914 d84027e9891">
<p>Removes or drops the data security from the specified table or view without deleting it.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5249" id="d84027e9923" headers="d84027e9888">
<p><a href="plsql_pkg.htm#GUID-E0F31931-07F6-460F-9DE0-34AC681327EE">APPLY_OBJECT_POLICY Procedure</a></p>
</td>
<td class="cellalignment5250" headers="d84027e9923 d84027e9891">
<p>Enables or reenables the data security policy for the specified table or view.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG99470"></a><a id="DBFSG99471"></a><a id="DBFSG99472"></a><a id="DBFSG99469"></a>
<div class="props_rev_3"><a id="GUID-BC06195D-9ED9-4095-942E-5651B543B11F"></a>
<h4 id="DBFSG-GUID-BC06195D-9ED9-4095-942E-5651B543B11F" class="sect4">CREATE_POLICY Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_POLICY</code> procedure creates a new data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.CREATE_POLICY ( 
  name                   IN VARCHAR2,
  realm_constraint_list  IN XS$REALM_CONSTRAINT_LIST,
  column_constraint_list IN XS$COLUMN_CONSTRAINT_LIST := NULL,
  description            IN VARCHAR2 :=NULL) ;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BC06195D-9ED9-4095-942E-5651B543B11F__GUID-D3635E7E-3437-4AF7-85DF-6E6DCCF92F27">
<table class="cellalignment5205" summary="CREATE_POLICY parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5263" id="d84027e10061">Parameter</th>
<th class="cellalignment5264" id="d84027e10064">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5265" id="d84027e10069" headers="d84027e10061">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5266" headers="d84027e10069 d84027e10064">
<p>The name for the data security policy to be created.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5265" id="d84027e10091" headers="d84027e10061">
<p><code class="codeph">realm_constraint_list</code></p>
</td>
<td class="cellalignment5266" headers="d84027e10091 d84027e10064">
<p>The list of data realm constraints, which determine the rows to be protected by the data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5265" id="d84027e10099" headers="d84027e10061">
<p><code class="codeph">column_constraint_list</code></p>
</td>
<td class="cellalignment5266" headers="d84027e10099 d84027e10064">
<p>This is optional. The list of attributes and the privileges protecting them.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5265" id="d84027e10107" headers="d84027e10061">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5266" headers="d84027e10107 d84027e10064">
<p>An optional description for the data security policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a data security policy called <code class="codeph">USER1.EMPLOYEES_DS</code>. It uses a data realm constraint to protect data related to department numbers <code class="codeph">60</code> and <code class="codeph">100</code>. In addition, access to the <code class="codeph">SALARY</code> column (attribute) is restricted using an column constraint.</p>
<pre dir="ltr">DECLARE
  realm_cons XS$REALM_CONSTRAINT_LIST;      
  column_cons XS$COLUMN_CONSTRAINT_LIST;
BEGIN  
  realm_cons := 
    XS$REALM_CONSTRAINT_LIST(
      XS$REALM_CONSTRAINT_TYPE(realm=&gt; &#39;DEPARTMENT_ID in (60, 100)&#39;,
                               acl_list=&gt; XS$NAME_LIST(&#39;HRACL&#39;)));
  
  column_cons := 
    XS$COLUMN_CONSTRAINT_LIST(
      XS$COLUMN_CONSTRAINT_TYPE(column_list=&gt; XS$LIST(&#39;SALARY&#39;),
                            privilege=&gt; &#39;VIEW_SENSITIVE_INFO&#39;));
 
<span class="bold">  SYS.XS_DATA_SECURITY.CREATE_POLICY(</span>
<span class="bold">          name=&gt;&#39;USER1.EMPLOYEES_DS&#39;,</span>
<span class="bold">          realm_constraint_list=&gt;realm_cons,</span>
<span class="bold">          column_constraint_list=&gt;column_cons);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG317"></a><a id="DBFSG318"></a><a id="DBFSG319"></a><a id="DBFSG316"></a>
<div class="props_rev_3"><a id="GUID-6BCE446D-5815-46B3-A550-8B132994B5E3"></a>
<h4 id="DBFSG-GUID-6BCE446D-5815-46B3-A550-8B132994B5E3" class="sect4">APPEND_REALM_CONSTRAINTS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">APPEND_REALM_CONSTRAINTS</code> procedure adds one or more data realm constraints to an existing data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.APPEND_REALM_CONSTRAINTS (
  policy           IN VARCHAR2,
  realm_constraint IN XS$REALM_CONSTRAINT_TYPE);

XS_DATA_SECURITY.APPEND_REALM_CONSTRAINTS (
  policy                IN VARCHAR2,
  realm_constraint_list IN XS$REALM_CONSTRAINT_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6BCE446D-5815-46B3-A550-8B132994B5E3__GUID-69CFA86D-0A43-401F-BADE-377442244528">
<table class="cellalignment5205" summary="APPEND_REALM_CONSTRAINTS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5219" id="d84027e10276">Parameter</th>
<th class="cellalignment5220" id="d84027e10279">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e10284" headers="d84027e10276">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5222" headers="d84027e10284 d84027e10279">
<p>The name of the data security policy to which the data realm constraints are to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e10306" headers="d84027e10276">
<p><code class="codeph">realm_constraint</code></p>
</td>
<td class="cellalignment5222" headers="d84027e10306 d84027e10279">
<p>The data realm constraint to be added to the data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5221" id="d84027e10314" headers="d84027e10276">
<p><code class="codeph">realm_constraint_list</code></p>
</td>
<td class="cellalignment5222" headers="d84027e10314 d84027e10279">
<p>The list of data realm constraints to be added to the data security policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example appends a new data realm constraint to the <code class="codeph">EMPLOYEES_DS</code> data security policy.</p>
<pre dir="ltr">DECLARE
  realm_cons XS$REALM_CONSTRAINT_TYPE;      
BEGIN  
  realm_cons := 
      XS$REALM_CONSTRAINT_TYPE(realm=&gt; &#39;DEPARTMENT_ID in (40, 50)&#39;,
                               acl_list=&gt; XS$NAME_LIST(&#39;HRACL&#39;));
 
<span class="bold">  SYS.XS_DATA_SECURITY.APPEND_REALM_CONSTRAINTS(</span>
<span class="bold">          policy=&gt;&#39;EMPLOYEES_DS&#39;,</span>
<span class="bold">          realm_constraint=&gt;realm_cons);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG321"></a><a id="DBFSG322"></a><a id="DBFSG323"></a><a id="DBFSG320"></a>
<div class="props_rev_3"><a id="GUID-C98B58F8-4BAE-4C92-9BBA-FC433F69DD68"></a>
<h4 id="DBFSG-GUID-C98B58F8-4BAE-4C92-9BBA-FC433F69DD68" class="sect4">REMOVE_REALM_CONSTRAINTS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_REALM_CONSTRAINTS</code> procedure removes all data realm constraints from a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.REMOVE_REALM_CONSTRAINTS (
  policy IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-C98B58F8-4BAE-4C92-9BBA-FC433F69DD68__GUID-F53DC7BE-C3EB-4CBA-960C-D746618DC6C8">
<table class="cellalignment5205" summary="REMOVE_REALM_CONSTRAINTS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e10472">Parameter</th>
<th class="cellalignment5236" id="d84027e10475">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e10480" headers="d84027e10472">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5238" headers="d84027e10480 d84027e10475">
<p>The name of the data security policy from which the data realm constraints are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes all data realm constraints from the <code class="codeph">EMPLOYEES_DS</code> data security policy.</p>
<pre dir="ltr">BEGIN 
  SYS.XS_DATA_SECURITY.REMOVE_REALM_CONSTRAINTS(&#39;EMPLOYEES_DS&#39;);
END; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG325"></a><a id="DBFSG326"></a><a id="DBFSG327"></a><a id="DBFSG324"></a>
<div class="props_rev_3"><a id="GUID-9BA4B1E1-2D71-43DB-A510-4C863ECE7DFB"></a>
<h4 id="DBFSG-GUID-9BA4B1E1-2D71-43DB-A510-4C863ECE7DFB" class="sect4">ADD_COLUMN_CONSTRAINTS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ADD_COLUMN_CONSTRAINTS</code> procedure adds one or more column constraint to a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.ADD_COLUMN_CONSTRAINTS (
  policy            IN VARCHAR2,
  column_constraint IN XS$COLUMN_CONSTRAINT_TYPE);

XS_DATA_SECURITY.ADD_COLUMN_CONSTRAINTS (
  policy                 IN VARCHAR2,
  column_constraint_list IN XS$COLUMN_CONSTRAINT_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-9BA4B1E1-2D71-43DB-A510-4C863ECE7DFB__GUID-249BD5F5-3A2B-4909-9CBD-3D32600AA734">
<table class="cellalignment5205" summary="ADD_COLUMN_CONSTRAINTS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5267" id="d84027e10642">Parameter</th>
<th class="cellalignment5268" id="d84027e10645">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e10650" headers="d84027e10642">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5270" headers="d84027e10650 d84027e10645">
<p>The name of the data security policy to which the attribute constraints are to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e10672" headers="d84027e10642">
<p><code class="codeph">column_constraint</code></p>
</td>
<td class="cellalignment5270" headers="d84027e10672 d84027e10645">
<p>The column constraint to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e10680" headers="d84027e10642">
<p><code class="codeph">column_constraint_list</code></p>
</td>
<td class="cellalignment5270" headers="d84027e10680 d84027e10645">
<p>The list of column constraints to be added.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds a column constraint on the <code class="codeph">COMMISSION_PCT</code> column in the <code class="codeph">EMPLOYEES_DS</code> data security policy:</p>
<pre dir="ltr">DECLARE
  column_cons XS$COLUMN_CONSTRAINT_TYPE;
BEGIN  
  column_cons := 
      XS$COLUMN_CONSTRAINT_TYPE(column_list=&gt; XS$LIST(&#39;COMMISSION_PCT&#39;),
                            privilege=&gt; &#39;VIEW_SENSITIVE_INFO&#39;);
 
<span class="bold">  SYS.XS_DATA_SECURITY.ADD_COLUMN_CONSTRAINTS(</span>
<span class="bold">          policy=&gt;&#39;EMPLOYEES_DS&#39;,</span>
<span class="bold">          column_constraint=&gt;column_cons);</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG329"></a><a id="DBFSG330"></a><a id="DBFSG331"></a><a id="DBFSG328"></a>
<div class="props_rev_3"><a id="GUID-74A9B5F9-02C7-40B1-AB6A-76BE25D5CEC3"></a>
<h4 id="DBFSG-GUID-74A9B5F9-02C7-40B1-AB6A-76BE25D5CEC3" class="sect4">REMOVE_COLUMN_CONSTRAINTS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_COLUMN_CONSTRAINTS</code> procedure removes all column constraints from a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.REMOVE_COLUMN_CONSTRAINTS (
  policy IN VARCHAR2,);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-74A9B5F9-02C7-40B1-AB6A-76BE25D5CEC3__GUID-19E4210E-9029-49AF-B946-6263E640362D">
<table class="cellalignment5205" summary="REMOVE_COLUMN_CONSTRAINTS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5235" id="d84027e10840">Parameter</th>
<th class="cellalignment5236" id="d84027e10843">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5237" id="d84027e10848" headers="d84027e10840">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5238" headers="d84027e10848 d84027e10843">
<p>The name of the data security policy for which the column constraints are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes all column constraints from the <code class="codeph">EMPLOYEES_DS</code> data security policy:</p>
<pre dir="ltr">BEGIN 
  SYS.XS_DATA_SECURITY.REMOVE_COLUMN_CONSTRAINTS(&#39;EMPLOYEES_DS&#39;);
END; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG333"></a><a id="DBFSG334"></a><a id="DBFSG335"></a><a id="DBFSG332"></a>
<div class="props_rev_3"><a id="GUID-35E24F90-6787-49DF-901B-2913B1D8EFE5"></a>
<h4 id="DBFSG-GUID-35E24F90-6787-49DF-901B-2913B1D8EFE5" class="sect4">CREATE_ACL_PARAMETER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_ACL_PARAMETER</code> procedure creates an ACL parameter for a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.CREATE_ACL_PARAMETER (
  policy     IN VARCHAR2,
  parameter  IN VARCHAR2,
  param_type IN NUMBER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-35E24F90-6787-49DF-901B-2913B1D8EFE5__GUID-980892C9-D520-46E7-9972-38EE86422E3C">
<table class="cellalignment5205" summary="CREATE_ACL_PARAMETER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5255" id="d84027e11011">Parameter</th>
<th class="cellalignment5256" id="d84027e11014">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e11019" headers="d84027e11011">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5258" headers="d84027e11019 d84027e11014">
<p>The name of the data security policy for which the ACL parameter needs to be created.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e11041" headers="d84027e11011">
<p><code class="codeph">parameter</code></p>
</td>
<td class="cellalignment5258" headers="d84027e11041 d84027e11014">
<p>The name of the ACL parameter to be created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e11049" headers="d84027e11011">
<p><code class="codeph">param_type</code></p>
</td>
<td class="cellalignment5258" headers="d84027e11049 d84027e11014">
<p>The data type of the parameter. This can be <code class="codeph">1</code> (NUMBER) or <code class="codeph">2</code> (VARCHAR).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following examples creates an ACL parameter, called <code class="codeph">DEPT_POLICY</code>, for the <code class="codeph">EMPLOYEES_DS</code> data security policy:</p>
<pre dir="ltr">BEGIN 
  SYS.XS_DATA_SECURITY.CREATE_ACL_PARAMETER(&#39;EMPLOYEES_DS&#39;,&#39;DEPT_POLICY&#39;,1);
END; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG337"></a><a id="DBFSG338"></a><a id="DBFSG339"></a><a id="DBFSG336"></a>
<div class="props_rev_3"><a id="GUID-EA4A0C93-FAB7-4550-B1F3-1A1A62233F79"></a>
<h4 id="DBFSG-GUID-EA4A0C93-FAB7-4550-B1F3-1A1A62233F79" class="sect4">DELETE_ACL_PARAMETER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_ACL_PARAMETER</code> procedure deletes an ACL parameter for a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.DELETE_ACL_PARAMETER (
  policy                IN VARCHAR2,
  parameter             IN VARCHAR2,
  delete_option         IN PLS_INTEGER := XS_ADMIN_UTIL.DEFAULT_OPTION);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EA4A0C93-FAB7-4550-B1F3-1A1A62233F79__GUID-5A282EF2-9502-4703-839E-17956C0D4A2D">
<table class="cellalignment5205" summary="DELETE_ACL_PARAMETER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5259" id="d84027e11206">Parameter</th>
<th class="cellalignment5260" id="d84027e11209">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e11214" headers="d84027e11206">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5262" headers="d84027e11214 d84027e11209">
<p>The name of the data security policy for which the ACL parameter is to be deleted.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e11236" headers="d84027e11206">
<p><code class="codeph">parameter</code></p>
</td>
<td class="cellalignment5262" headers="d84027e11236 d84027e11209">
<p>The name of the ACL parameter to be deleted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e11244" headers="d84027e11206">
<p><code class="codeph">delete_option</code></p>
</td>
<td class="cellalignment5262" headers="d84027e11244 d84027e11209">
<p>The delete option to use. The following options are available:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DEFAULT_OPTION</code> (default):</p>
<p>The default option allows deleting an ACL parameter only if it is not referenced elsewhere. If there are other entities that reference the ACL parameter, then the ACL parameter cannot be deleted.</p>
</li>
<li>
<p><code class="codeph">CASCADE_OPTION</code>:</p>
<p>The cascade option deletes the ACL parameter together with any references to it.The user deleting the security class must have privileges to delete these references as well.</p>
</li>
<li>
<p><code class="codeph">ALLOW_INCONSISTENCIES_OPTION:</code></p>
<p>The allow inconsistencies option lets you delete the entity even if other entities have late binding references to it. If the entity is part of an early dependency, then the delete fails and an error is raised.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the <code class="codeph">DEPT_POLICY</code> ACL parameter from the <code class="codeph">EMPLOYEES_DS</code> data security policy, using the default option.</p>
<pre dir="ltr">BEGIN
  SYS.XS_DATA_SECURITY.DELETE_ACL_PARAMETER(&#39;EMPLOYEES_DS&#39;,&#39;DEPT_POLICY&#39;,
                                            XS_ADMIN_UTIL.DEFAULT_OPTION);
END; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG341"></a><a id="DBFSG342"></a><a id="DBFSG343"></a><a id="DBFSG340"></a>
<div class="props_rev_3"><a id="GUID-AD0E9510-AEF4-4BFE-9413-93644F2AED2F"></a>
<h4 id="DBFSG-GUID-AD0E9510-AEF4-4BFE-9413-93644F2AED2F" class="sect4">SET_DESCRIPTION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_DESCRPTION</code> procedure sets a description string for the specified data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.SET_DESCRIPTION (
  policy         IN VARCHAR2,
  description    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-AD0E9510-AEF4-4BFE-9413-93644F2AED2F__GUID-98DCB9E2-66BB-4BFA-BB25-7961F84492CB">
<table class="cellalignment5205" summary="SET_DESCRIPTION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5259" id="d84027e11416">Parameter</th>
<th class="cellalignment5260" id="d84027e11419">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e11424" headers="d84027e11416">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5262" headers="d84027e11424 d84027e11419">
<p>The name of the data security policy for which the description is to be set.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5261" id="d84027e11446" headers="d84027e11416">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5262" headers="d84027e11446 d84027e11419">
<p>A description string for the specified data security policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a description string for the <code class="codeph">EMPLOYEES_DS</code> data security policy:</p>
<pre dir="ltr">BEGIN 
  SYS.XS_DATA_SECURITY.SET_DESCRIPTION(&#39;EMPLOYEES_DS&#39;,
                                       &#39;Data Security Policy for HR.EMPLOYEES&#39;);
END; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG345"></a><a id="DBFSG346"></a><a id="DBFSG347"></a><a id="DBFSG344"></a>
<div class="props_rev_3"><a id="GUID-55D349F3-DA18-45FB-ADFA-CD7E92C1EF9D"></a>
<h4 id="DBFSG-GUID-55D349F3-DA18-45FB-ADFA-CD7E92C1EF9D" class="sect4">DELETE_POLICY Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_POLICY</code> procedure deletes a data security policy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.DELETE_POLICY( 
  policy        IN VARCHAR2,
  delete_option IN PLS_INTEGER := XS_ADMIN_UTIL.DEFAULT_OPTION); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-55D349F3-DA18-45FB-ADFA-CD7E92C1EF9D__GUID-BE9E470D-4213-491F-927C-FB9A6BF593A5">
<table class="cellalignment5205" summary="DELETE_POLICY parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e11595">Parameter</th>
<th class="cellalignment5216" id="d84027e11598">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e11603" headers="d84027e11595">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5218" headers="d84027e11603 d84027e11598">
<p>The name of the data security policy to be deleted.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e11625" headers="d84027e11595">
<p><code class="codeph">delete_option</code></p>
</td>
<td class="cellalignment5218" headers="d84027e11625 d84027e11598">
<p>The delete option to use. To the security policy, the behavior of the following options is the same:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DEFAULT_OPTION:</code></p>
<p>The default option allows deleting a data security policy only if it is not referenced elsewhere. If there are other entities that reference the data security policy, then the data security policy cannot be deleted.</p>
</li>
<li>
<p><code class="codeph">CASCADE_OPTION</code>:</p>
<p>The cascade option deletes the data security policy together with any references to it.The user deleting the data security policy deletes these references as well.</p>
</li>
<li>
<p><code class="codeph">ALLOW_INCONSISTENCIES_OPTION:</code></p>
<p>The allow inconsistencies option lets you delete the entity even if other entities have late binding references to it. If the entity is part of an early dependency, then the delete fails and an error is raised.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the <code class="codeph">EMPLOYEES_DS</code> data security policy using the default option.</p>
<pre dir="ltr">BEGIN
  SYS.XS_DATA_SECURITY.DELETE_POLICY(&#39;EMPLOYEES_DS&#39;,
                                        XS_ADMIN_UTIL.DEFAULT_OPTION); 
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG620"></a><a id="DBFSG621"></a><a id="DBFSG622"></a><a id="DBFSG619"></a>
<div class="props_rev_3"><a id="GUID-CCA3CC62-1F6C-474A-92D0-0A090E3CF7CF"></a>
<h4 id="DBFSG-GUID-CCA3CC62-1F6C-474A-92D0-0A090E3CF7CF" class="sect4">ENABLE_OBJECT_POLICY Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ENABLE_OBJECT_POLICY</code> procedure enables the data security policy for the specified table or view. <code class="codeph">ENABLE_OBJECT_POLICY</code> enables the ACL-based row level security policy for the table or view.</p>
<p>You may want to enable data security policies after you perform an import or export on the tables that it affects, or for debugging purposes.</p>
<p>To find the status of the data security policies for tables or views available for the current user, query the <a href="parm_views.htm#GUID-B4D08166-FE46-42F3-A2AF-D0B0FAA20D8D">DBA_XS_APPLIED_POLICIES</a> data dictionary view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.ENABLE_OBJECT_POLICY (
 policy  IN VARCHAR2,
 schema  IN VARCHAR2,
 object  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CCA3CC62-1F6C-474A-92D0-0A090E3CF7CF__GUID-5397F11F-6683-49D7-B1A3-5B359123CA12">
<table class="cellalignment5205" summary="ENABLE_OBJECT_POLICY parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e11804">Parameter</th>
<th class="cellalignment5216" id="d84027e11807">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e11812" headers="d84027e11804">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5218" headers="d84027e11812 d84027e11807">
<p>The name of the data security policy to be enabled.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e11834" headers="d84027e11804">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5218" headers="d84027e11834 d84027e11807">
<p>The name of the schema that contains the table or view to enable.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e11842" headers="d84027e11804">
<p><code class="codeph">object</code></p>
</td>
<td class="cellalignment5218" headers="d84027e11842 d84027e11807">
<p>The name of the table or view to enable the data security policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables XDS for the <code class="codeph">products</code> table in the <code class="codeph">sales</code> schema.</p>
<pre dir="ltr">BEGIN
  SYS.XS_DATA_SECURITY.ENABLE_OBJECT_POLICY(policy =&gt;&#39;CUST_DS&#39;, schema=&gt;&#39;sales&#39;, object=&gt;&#39;products&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG624"></a><a id="DBFSG625"></a><a id="DBFSG626"></a><a id="DBFSG623"></a>
<div class="props_rev_3"><a id="GUID-176F13AA-D535-4985-9768-0DA72C764696"></a>
<h4 id="DBFSG-GUID-176F13AA-D535-4985-9768-0DA72C764696" class="sect4">DISABLE_OBJECT_POLICY Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DISABLE_OBJECT_POLICY</code> procedure disables the data security policy for the specified table or view. <code class="codeph">DISABLE_OBJECT_POLICY</code> disables the ACL-based row level security policy for the table or view.</p>
<p>You may want to disable Real Application Security if you are performing an import or export on the tables that it affects, or for debugging purposes.</p>
<p>To find the status of the data security policies for tables or views available for the current user, query the <a href="parm_views.htm#GUID-B4D08166-FE46-42F3-A2AF-D0B0FAA20D8D">DBA_XS_APPLIED_POLICIES</a> data dictionary view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.DISABLE_OBJECT_POLICY (
 policy  IN VARCHAR2,
 schema  IN VARCHAR2,
 object  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-176F13AA-D535-4985-9768-0DA72C764696__GUID-8F4D4D14-EB4C-4B04-A296-684CE67C7B2E">
<table class="cellalignment5205" summary="DISABLE_OBJECT_POLICY parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e12004">Parameter</th>
<th class="cellalignment5216" id="d84027e12007">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e12012" headers="d84027e12004">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5218" headers="d84027e12012 d84027e12007">
<p>The name of the data security policy to be disabled.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e12034" headers="d84027e12004">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5218" headers="d84027e12034 d84027e12007">
<p>The name of the schema that contains the table or view to disable.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e12042" headers="d84027e12004">
<p><code class="codeph">object</code></p>
</td>
<td class="cellalignment5218" headers="d84027e12042 d84027e12007">
<p>The name of the table or view to disable a data security policy.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example disables XDS for the <code class="codeph">products</code> table in the <code class="codeph">sales</code> schema.</p>
<pre dir="ltr">BEGIN
  SYS.XS_DATA_SECURITY.DISABLE_OBJECT_POLICY(policy =&gt;&#39;CUST_DS&#39;, schema=&gt;&#39;sales&#39;, object=&gt;&#39;products&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG628"></a><a id="DBFSG629"></a><a id="DBFSG630"></a><a id="DBFSG627"></a>
<div class="props_rev_3"><a id="GUID-582E1EA5-06AE-4B63-9608-23E67AEC3029"></a>
<h4 id="DBFSG-GUID-582E1EA5-06AE-4B63-9608-23E67AEC3029" class="sect4">REMOVE_OBJECT_POLICY Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_OBJECT_POLICY</code> procedure drops <a id="d84027e12177" class="indexterm-anchor"></a><a id="d84027e12183" class="indexterm-anchor"></a>the data security policy from the specified table or view without deleting it. <code class="codeph">REMOVE_OBJECT_POLICY</code> drops the ACL Materialized View built by <code class="codeph">ENABLE_XDS</code> on a static data realm constraint.</p>
<p>To find the status of the data security policies for tables or views available for the current user, query the <a href="parm_views.htm#GUID-B4D08166-FE46-42F3-A2AF-D0B0FAA20D8D">DBA_XS_APPLIED_POLICIES</a> data dictionary view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.REMOVE_OBJECT_POLICY (
 policy  IN VARCHAR2,
 schema  IN VARCHAR2,
 object  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-582E1EA5-06AE-4B63-9608-23E67AEC3029__GUID-65BA23D1-25E7-49AA-9AB5-E9D6A4DF6FD0">
<table class="cellalignment5205" summary="REMOVE_OBJECT_POLICY parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e12219">Parameter</th>
<th class="cellalignment5216" id="d84027e12222">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e12227" headers="d84027e12219">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5218" headers="d84027e12227 d84027e12222">
<p>The name of the data security policy to be dropped.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e12249" headers="d84027e12219">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5218" headers="d84027e12249 d84027e12222">
<p>The name of the schema that contains the table or view from which to remove the data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e12257" headers="d84027e12219">
<p><code class="codeph">object</code></p>
</td>
<td class="cellalignment5218" headers="d84027e12257 d84027e12222">
<p>The name of the table or view from which to remove the data security. policy</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example drops the <code class="codeph">CUST_DS</code> data security policy from the <code class="codeph">products</code> table in the <code class="codeph">sales</code> schema.</p>
<pre dir="ltr">BEGIN 
  SYS.XS_DATA_SECURITY.REMOVE_OBJECT_POLICY(policy=&gt;&#39;CUST_DS&#39;, schema=&gt;&#39;sales&#39;, object=&gt;&#39;products&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG632"></a><a id="DBFSG633"></a><a id="DBFSG634"></a><a id="DBFSG631"></a>
<div class="props_rev_3"><a id="GUID-E0F31931-07F6-460F-9DE0-34AC681327EE"></a>
<h4 id="DBFSG-GUID-E0F31931-07F6-460F-9DE0-34AC681327EE" class="sect4">APPLY_OBJECT_POLICY Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">APPLY_OBJECT_POLICY</code> procedure <a id="d84027e12394" class="indexterm-anchor"></a><a id="d84027e12400" class="indexterm-anchor"></a>enables or reenables the data security policy for the specified database table or view.</p>
<p>To find the status of the data security policies for tables or views available for the current user, query the <a href="parm_views.htm#GUID-B4D08166-FE46-42F3-A2AF-D0B0FAA20D8D">DBA_XS_APPLIED_POLICIES</a> data dictionary view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY.APPLY_OBJECT_POLICY (
 policy          IN VARCHAR2,
 schema          IN VARCHAR2, 
 object          IN VARCHAR2, 
 row_acl         IN BOOLEAN DEFAULT FALSE,
 owner_bypass    IN BOOLEAN DEFAULT FALSE,
 statement_types IN VARCHAR2 DEFAULT NULL,
 aclmv           IN VARCHAR2 DEFAULT NULL );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E0F31931-07F6-460F-9DE0-34AC681327EE__GUID-4789BE79-A4D4-46BC-9FE7-22FC76043347">
<table class="cellalignment5205" summary="APPLY_OBJECT_POLICY parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5271" id="d84027e12430">Parameter</th>
<th class="cellalignment5272" id="d84027e12433">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12438" headers="d84027e12430">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12438 d84027e12433">
<p>Name of the data security policy to be enabled.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.POLICY1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">POLICY1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.POLICY1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12460" headers="d84027e12430">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12460 d84027e12433">
<p>The name of the schema that contains the relational table or view to enable or re-enable.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12468" headers="d84027e12430">
<p><code class="codeph">object</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12468 d84027e12433">
<p>The name of the relational table or view to enable or re-enable for the data security policy.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12476" headers="d84027e12430">
<p><code class="codeph">row_acl</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12476 d84027e12433">
<p>The default is <code class="codeph">FALSE</code>. When set to <code class="codeph">TRUE</code>, creates the hidden column <code class="codeph">SYS_ACLOD</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12493" headers="d84027e12430">
<p><code class="codeph">owner_bypass</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12493 d84027e12433">
<p>The owner of the object can bypass the data security policy. The default is <code class="codeph">FALSE</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12504" headers="d84027e12430">
<p><code class="codeph">statement_types</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12504 d84027e12433">
<p>The types can be: <code class="codeph">SELECT</code>, <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, <code class="codeph">DELETE</code>, and <code class="codeph">INDEX</code>.</p>
<p>Note that if your application security requires that you must update table rows and also restrict read access to certain columns in the same table, you must use two <code class="codeph">APPLY_OBJECT_POLICY</code> procedures to enforce each data security policy to ensure precise enforcement of each policy. For example, one <code class="codeph">APPLY_OBJECT_POLICY</code> procedure would enforce the DML <code class="codeph">statement_types</code> required for updating table rows (for example, <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, <code class="codeph">DELETE</code>), while the other <code class="codeph">APPLY_OBJECT_POLICY</code> procedure would enforce only the <code class="codeph">statement_types</code> of <code class="codeph">SELECT</code> for the column constraint.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e12557" headers="d84027e12430">
<p><code class="codeph">aclmv</code></p>
</td>
<td class="cellalignment5274" headers="d84027e12557 d84027e12433">
<p>Specifies a user-provided MV name that maintains static ACL information. The MV has two columns: <code class="codeph">TABLEROWID</code> and <code class="codeph">ACLIDLIST</code>. The default value for <code class="codeph">aclmv</code> is <code class="codeph">NULL</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables the <code class="codeph">DEPT_POLICY</code> data security policy for the <code class="codeph">EMP</code> table in the <code class="codeph">HR</code> schema.</p>
<pre dir="ltr">BEGIN
  sys.xs_data_security.apply_object_policy(
           policy =&gt; &#39;HR.EMPLOYEES_DS&#39;,
           schema =&gt; &#39;HR&#39;,
           object =&gt; &#39;EMPLOYEES&#39;,
           statement_types =&gt; &#39;SELECT&#39;,
           owner_bypass =&gt; true);
END;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG562"></a>
<div class="props_rev_3"><a id="GUID-90D4C94D-AE95-4DD5-ACE4-DDD6D3F28D0D"></a>
<h2 id="DBFSG-GUID-90D4C94D-AE95-4DD5-ACE4-DDD6D3F28D0D" class="sect2">XS_DATA_SECURITY_UTIL Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">XS_DATA_SECURITY_UTIL</code> package<a id="d84027e12702" class="indexterm-anchor"></a> is a utility package that schedules automatic refreshment for static ACL to a user table and changes the ACL refreshment mode to on-commit or on-demand refresh.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG563"></a>
<div class="props_rev_3"><a id="GUID-452B8182-8B98-4D5F-B729-955A1A575FD7"></a>
<h3 id="DBFSG-GUID-452B8182-8B98-4D5F-B729-955A1A575FD7" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_DATA_SECURITY_UTIL</code> package <a id="d84027e12816" class="indexterm-anchor"></a>is created in the <code class="codeph">SYS</code> schema. You need <code class="codeph">EXECUTE</code> privileges on the package to be able to run the programs contained in this package.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG635"></a>
<div class="props_rev_3"><a id="GUID-13A79ED2-2996-497D-A3D8-451233A52648"></a>
<h3 id="DBFSG-GUID-13A79ED2-2996-497D-A3D8-451233A52648" class="sect3">Constants</h3>
<div>
<div class="section">
<p>The following are <a id="d84027e12933" class="indexterm-anchor"></a>valid values for ACLMV refresh modes:</p>
<pre dir="ltr">ACLMV_ON_DEMAND  CONSTANT VARCHAR2(9) := &#39;ON DEMAND&#39;;
ACLMV_ON_COMMIT  CONSTANT VARCHAR2(9) := &#39;ON COMMIT&#39;;
</pre>
<p>The following are types of refresh on static ACLMV:</p>
<pre dir="ltr">XS_ON_COMMIT_MV  CONSTANT BINARY_INTEGER := 0;
XS_ON_DEMAND_MV  CONSTANT BINARY_INTEGER := 1;
XS_SCHEDULED_MV  CONSTANT BINARY_INTEGER := 2;
</pre>
<p>The following are types of static ACLMV:</p>
<pre dir="ltr">XS_SYSTEM_GENERATED_MV  CONSTANT BINARY_INTEGER := 0;
XS_USER_SPECIFIED_MV    CONSTANT BINARY_INTEGER := 1;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG565"></a><a id="DBFSG564"></a>
<div class="props_rev_3"><a id="GUID-9EB85DBF-F087-4C32-B14B-AA3723EF98A9"></a>
<h3 id="DBFSG-GUID-9EB85DBF-F087-4C32-B14B-AA3723EF98A9" class="sect3">Summary of XS_DATA_SECURITY_UTIL Subprograms</h3>
<div>
<div class="tblformal" id="GUID-9EB85DBF-F087-4C32-B14B-AA3723EF98A9__GUID-293F10BC-EC05-4B9D-93E5-18D5075C6863">
<p class="titleintable">Table 11-7 Summary of XS_DATA_SECURITY_UTIL Subprograms</p>
<table class="cellalignment5205" title="Summary of XS_DATA_SECURITY_UTIL Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5206" id="d84027e13064">Subprogram</th>
<th class="cellalignment5207" id="d84027e13067">Brief Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e13072" headers="d84027e13064">
<p><a href="plsql_pkg.htm#GUID-A181C70F-4A39-4C2A-BE81-B349F851C30E">SCHEDULE_STATIC_ACL_REFRESH Procedure</a></p>
</td>
<td class="cellalignment5209" headers="d84027e13072 d84027e13067">
<p>Schedules automatic refreshment for static ACL to a user table</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5208" id="d84027e13081" headers="d84027e13064">
<p><a href="plsql_pkg.htm#GUID-8F43E01C-8DA3-4668-98B0-A9855AECE71B">ALTER_STATIC_ACL_REFRESH Procedure</a></p>
</td>
<td class="cellalignment5209" headers="d84027e13081 d84027e13067">
<p>Changes the ACL refreshment mode to on-commit or on-demand refresh.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG579"></a><a id="DBFSG580"></a><a id="DBFSG581"></a><a id="DBFSG578"></a>
<div class="props_rev_3"><a id="GUID-A181C70F-4A39-4C2A-BE81-B349F851C30E"></a>
<h4 id="DBFSG-GUID-A181C70F-4A39-4C2A-BE81-B349F851C30E" class="sect4">SCHEDULE_STATIC_ACL_REFRESH Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e13199" class="indexterm-anchor"></a><code class="codeph">SCHEDULE_STATIC_ACL_REFRESH</code> procedure is used to invoke or schedule automatic refresh for static ACL to a user table. It can start the refresh immediately if <code class="codeph">NULL</code> value is passed into the <code class="codeph">start_date</code> and <code class="codeph">repeat_interval</code> parameters. <a id="d84027e13215" class="indexterm-anchor"></a></p>
<p>To find the status of all latest static ACL refresh jobs done for tables or views available for the current user, query the <a href="parm_views.htm#GUID-C8933F66-D2E3-4933-A38A-1037FC2751E2">ALL_XDS_LATEST_ACL_REFSTAT</a>, <a href="parm_views.htm#GUID-35825609-29DC-46CB-B72C-F836B29832CF">DBA_XDS_LATEST_ACL_REFSTAT</a>, and <a href="parm_views.htm#GUID-12A56085-25F1-4B55-8682-B3CD18C16BFD">USER_XDS_LATEST_ACL_REFSTAT</a> data dictionary views. All static ACL refresh job status history can be found in <a href="parm_views.htm#GUID-C3F79CB9-6BF1-4552-A704-F467B8DC00EE">ALL_XDS_ACL_REFSTAT</a>, <a href="parm_views.htm#GUID-0EC64A53-7C36-44FC-952D-58B1ED679457">DBA_XDS_ACL_REFSTAT</a>, and <a href="parm_views.htm#GUID-4E937CB5-B93C-41F0-BFF0-4D5A4021FF02">USER_XDS_ACL_REFSTAT</a> data dictionary views.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY_UTIL.SCHEDULE_STATIC_ACL_REFRESH (
  schema_name      IN VARCHAR2 DEFAULT NULL,
  table_name       IN VARCHAR2,
  start_date       IN TIMESTAMP WITH TIME ZONE DEFAULT NULL,
  repeat_interval  IN VARCHAR2 DEFAULT NULL,
  comments         IN VARCHAR2 DEFAULT NULL );
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-A181C70F-4A39-4C2A-BE81-B349F851C30E__GUID-9CBE4986-F5B7-4D0D-8826-E956B0732ECB">
<table class="cellalignment5205" summary="SCHEDULE_STATIC_ACL_REFRESH parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5275" id="d84027e13263">Parameter</th>
<th class="cellalignment5276" id="d84027e13266">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e13271" headers="d84027e13263">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment5278" headers="d84027e13271 d84027e13266">
<p>Specifies the name for the schema to which the table belongs.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e13279" headers="d84027e13263">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment5278" headers="d84027e13279 d84027e13266">
<p>The table name which is used with above schema name to uniquely identify a table for the static ACL refreshment.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e13287" headers="d84027e13263">
<p><code class="codeph">start_date</code></p>
</td>
<td class="cellalignment5278" headers="d84027e13287 d84027e13266">
<p>This attribute specifies the first date on which this refresh is scheduled to run. If the function is called repeatedly, then the latest given <code class="codeph">start_date</code> and <code class="codeph">repeat_interval</code> is used to schedule the job. Each execution result of ACL refresh done by immediate call, on-commit, or refresh job is added into <code class="codeph">XDS_ACL_REFSTAT</code>.</p>
<p>If <code class="codeph">start_date</code> and <code class="codeph">repeat_interval</code> are left <code class="codeph">NULL</code>, then the refresh is launched immediately and any existing refresh schedule is erased. For immediate refresh, no row will be added into <code class="codeph">XDS_ACL_REFRESH</code>, as it does not change refresh mode.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e13318" headers="d84027e13263">
<p><code class="codeph">repeat_interval</code></p>
</td>
<td class="cellalignment5278" headers="d84027e13318 d84027e13266">
<p>This attribute specifies how often the refresh should repeat. You can specify the repeat interval by using <code class="codeph">DBMS_SCHEDULER</code> package calendaring syntax or using PL/SQL expressions. See <a class="olink ARPLS72262" target="_blank" href="../ARPLS/d_sched.htm#ARPLS72262"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about using calendering syntax.</p>
<p>The expression specified is evaluated to determine the next time the refresh should run. If <code class="codeph">repeat_interval</code> is not specified, the job runs only once at the specified start date.</p>
<p>The <code class="codeph">start_date</code> and <code class="codeph">repeat_interval</code> are used to create a refresh job by using <code class="codeph">DBMS_SCHEDULER</code> package with <code class="codeph">end_date</code> default as <code class="codeph">NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e13356" headers="d84027e13263">
<p><code class="codeph">Comments</code></p>
</td>
<td class="cellalignment5278" headers="d84027e13356 d84027e13266">
<p>This attribute specifies a comment about the job. By default, this attribute is <code class="codeph">NULL</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SYS.XS_DATA_SECURITY_UTIL.SCHEDULE_STATIC_ACL_REFRESH(&#39;aclmvuser&#39;, &#39;sales&#39;, SYSTIMESTAMP, &#39;freq=hourly; interval=2&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG583"></a><a id="DBFSG584"></a><a id="DBFSG585"></a><a id="DBFSG582"></a>
<div class="props_rev_3"><a id="GUID-8F43E01C-8DA3-4668-98B0-A9855AECE71B"></a>
<h4 id="DBFSG-GUID-8F43E01C-8DA3-4668-98B0-A9855AECE71B" class="sect4">ALTER_STATIC_ACL_REFRESH Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e13481" class="indexterm-anchor"></a><code class="codeph">ALTER_STATIC_ACL_REFRESH</code> procedure is used to change the ACL refresh mode to on-commit or on-demand refresh.<a id="d84027e13488" class="indexterm-anchor"></a></p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_DATA_SECURITY_UTIL.ALTER_STATIC_ACL_REFRESH (
  schema_name      IN VARCHAR2 DEFAULT NULL,
  table_name       IN VARCHAR2,
  refresh_mode     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8F43E01C-8DA3-4668-98B0-A9855AECE71B__GUID-222A73F2-2714-4A08-B3E4-6573D8F04518">
<table class="cellalignment5205" summary="ALTER_STATIC_ACL_REFRESH parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e13509">Parameter</th>
<th class="cellalignment5216" id="d84027e13512">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e13517" headers="d84027e13509">
<p><code class="codeph">schema_name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e13517 d84027e13512">
<p>Specifies the name for the schema that the table belongs to.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e13525" headers="d84027e13509">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e13525 d84027e13512">
<p>The table name, which is used with the schema name to uniquely identify a table for altering the static ACL refreshment mode.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e13533" headers="d84027e13509">
<p><code class="codeph">refresh_mode</code></p>
</td>
<td class="cellalignment5218" headers="d84027e13533 d84027e13512">
<p><code class="codeph">ON COMMIT</code> or <code class="codeph">ON DEMAND</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SYS.XS_DATA_SECURITY_UTIL.ALTER_STATIC_ACL_REFRESH(&#39;aclmvuser&#39;,&#39;sales&#39;, refresh_mode=&gt;&#39;ON COMMIT&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG636"></a>
<div class="props_rev_3"><a id="GUID-A9C89475-4E4F-43D4-981B-C44596FB2B54"></a>
<h2 id="DBFSG-GUID-A9C89475-4E4F-43D4-981B-C44596FB2B54" class="sect2">XS_DIAG Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">XS_DIAG</code> package <a id="d84027e13660" class="indexterm-anchor"></a>includes subprograms to diagnose potential problems in data security for principals, security classes, acls, data security policies, namespaces, and all objects in the work space. All subprograms return <code class="codeph">TRUE</code> if the object is valid; otherwise, each returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies you specify with the <code class="codeph">error_limit</code> parameter is reached. Users can query this validation table to determine the identified inconsistencies for information that includes the message code, the description about the error, the path leading to the invalid object, and any other helpful information that might assist you in identifying the nature of the inconsistency.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG637"></a>
<div class="props_rev_3"><a id="GUID-D3FCEE5B-C7E4-4349-86E8-5F50DC511F15"></a>
<h3 id="DBFSG-GUID-D3FCEE5B-C7E4-4349-86E8-5F50DC511F15" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_DIAG</code> package <a id="d84027e13787" class="indexterm-anchor"></a>is created in the <code class="codeph">SYS</code> schema. The caller has invoker&#39;s rights on this package and needs to have <code class="codeph">ADMIN_ANY_SEC_POLICY</code> system privilege to run the <code class="codeph">XS_DIAG</code> package. <code class="codeph">EXECUTE</code> permission on the <code class="codeph">XS_DIAG</code> package is granted to <code class="codeph">PUBLIC</code>. <code class="codeph">SELECT</code> permission on the <code class="codeph">XS$VALIDATION_TABLE</code> validation table is granted to <code class="codeph">PUBLIC</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG639"></a><a id="DBFSG638"></a>
<div class="props_rev_3"><a id="GUID-10B93FBA-CD34-4D9A-9F8E-2E9F63D8E150"></a>
<h3 id="DBFSG-GUID-10B93FBA-CD34-4D9A-9F8E-2E9F63D8E150" class="sect3">Summary of XS_DIAG Subprograms</h3>
<div>
<div class="tblformal" id="GUID-10B93FBA-CD34-4D9A-9F8E-2E9F63D8E150__GUID-386E0EB6-7DBF-41DD-97CE-9FB445364886">
<p class="titleintable">Table 11-8 Summary of XS_DIAG Subprograms</p>
<table class="cellalignment5205" title="Summary of XS_DIAG Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e13935">Subprogram</th>
<th class="cellalignment5280" id="d84027e13938">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e13943" headers="d84027e13935">
<p><a href="plsql_pkg.htm#GUID-5E0D77E1-EF27-49B6-AF38-C5C2F94C0AB1">VALIDATE_PRINCIPAL Function</a></p>
</td>
<td class="cellalignment5282" headers="d84027e13943 d84027e13938">
<p>Validates the principal.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e13952" headers="d84027e13935">
<p><a href="plsql_pkg.htm#GUID-09C2ECF8-EE7D-4233-AE8E-50DDC37D2BAB">VALIDATE_SECURITY_CLASS Function</a></p>
</td>
<td class="cellalignment5282" headers="d84027e13952 d84027e13938">
<p>Validates the security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e13961" headers="d84027e13935">
<p><a href="plsql_pkg.htm#GUID-5F2D3B07-06BC-4EDA-B7DB-D41277E3D1B9">VALIDATE_ACL Function</a></p>
</td>
<td class="cellalignment5282" headers="d84027e13961 d84027e13938">
<p>Validates the ACL.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e13970" headers="d84027e13935">
<p><a href="plsql_pkg.htm#GUID-39061A4F-C36E-410E-9944-D8A57E302853">VALIDATE_DATA_SECURITY Function</a></p>
</td>
<td class="cellalignment5282" headers="d84027e13970 d84027e13938">
<p>Validates the data security policy or validates the data security policy against a specific table.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e13979" headers="d84027e13935">
<p><a href="plsql_pkg.htm#GUID-306835D0-D57C-4819-894A-315D0579BD08">VALIDATE_NAMESPACE_TEMPLATE Function</a></p>
</td>
<td class="cellalignment5282" headers="d84027e13979 d84027e13938">
<p>Validates the namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e13988" headers="d84027e13935">
<p><a href="plsql_pkg.htm#GUID-03CCCD5A-3A8C-4905-9CC8-5F6451936522">VALIDATE_WORKSPACE Function</a></p>
</td>
<td class="cellalignment5282" headers="d84027e13988 d84027e13938">
<p>Validates an entire workspace.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG641"></a><a id="DBFSG642"></a><a id="DBFSG643"></a><a id="DBFSG640"></a>
<div class="props_rev_3"><a id="GUID-5E0D77E1-EF27-49B6-AF38-C5C2F94C0AB1"></a>
<h4 id="DBFSG-GUID-5E0D77E1-EF27-49B6-AF38-C5C2F94C0AB1" class="sect4">VALIDATE_PRINCIPAL Function</h4>
<div>
<div class="section">
<p>The <code class="codeph">VALIDATE_PRINCIPAL</code> function <a id="d84027e14109" class="indexterm-anchor"></a>validates the principal. This function returns <code class="codeph">TRUE</code> if the object is valid; otherwise, it returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies that can be stored is reached. Users must query this validation table to find out what caused the validation failure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">validate_principal(name         IN VARCHAR2, 
                   error_limit  IN PLS_INTEGER := 1) 
   RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5E0D77E1-EF27-49B6-AF38-C5C2F94C0AB1__GUID-1CD40A91-94AF-47E8-B98E-EDA789963B55">
<table class="cellalignment5205" summary="VALIDATE_PRINCIPAL Parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e14140">Parameter</th>
<th class="cellalignment5280" id="d84027e14143">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14148" headers="d84027e14140">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14148 d84027e14143">
<p>The name of the object to be validated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14156" headers="d84027e14140">
<p><code class="codeph">error_limit</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14156 d84027e14143">
<p>The maximum number of inconsistencies that may be stored in the validation table.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Validate the principal, user <code class="codeph">user1</code>, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_principal(&#39;user1&#39;, 100) then
    dbms_output.put_line(&#39;The user is valid.&#39;);
  else
    dbms_output.put_line(&#39;The user is invalid.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre>
<p>Validate the principal, role <code class="codeph">role1</code>, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_principal(&#39;role1&#39;, 100) then
    dbms_output.put_line(&#39;The role is valid.&#39;);
  else
    dbms_output.put_line(&#39;The role is invalid.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG649"></a><a id="DBFSG650"></a><a id="DBFSG651"></a><a id="DBFSG648"></a>
<div class="props_rev_3"><a id="GUID-09C2ECF8-EE7D-4233-AE8E-50DDC37D2BAB"></a>
<h4 id="DBFSG-GUID-09C2ECF8-EE7D-4233-AE8E-50DDC37D2BAB" class="sect4">VALIDATE_SECURITY_CLASS Function</h4>
<div>
<div class="section">
<p>The <code class="codeph">VALIDATE_SECURITY_CLASS</code> function <a id="d84027e14294" class="indexterm-anchor"></a>validates the security class. This function returns <code class="codeph">TRUE</code> if the object is valid; otherwise, it returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies that can be stored is reached. Users must query this validation table to find out what caused the validation failure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">validate_security_class(name         IN VARCHAR2, 
                        error_limit  IN PLS_INTEGER := 1)
   RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-09C2ECF8-EE7D-4233-AE8E-50DDC37D2BAB__GUID-8BF88C7E-07AB-48AD-9168-DA0E6448120C">
<table class="cellalignment5205" summary="VALIDATE_SECURITY_CLASS Parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e14325">Parameter</th>
<th class="cellalignment5280" id="d84027e14328">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14333" headers="d84027e14325">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14333 d84027e14328">
<p>The name of the object to be validated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14341" headers="d84027e14325">
<p><code class="codeph">error_limit</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14341 d84027e14328">
<p>The maximum number of inconsistencies that may be stored in the validation table.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Validate the security class, <code class="codeph">sec1</code>, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_security_class(&#39;sec1&#39;, 100) then
    dbms_output.put_line(&#39;The security class is valid.&#39;);
  else
    dbms_output.put_line(&#39;The security class is invalid.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG653"></a><a id="DBFSG654"></a><a id="DBFSG655"></a><a id="DBFSG652"></a>
<div class="props_rev_3"><a id="GUID-5F2D3B07-06BC-4EDA-B7DB-D41277E3D1B9"></a>
<h4 id="DBFSG-GUID-5F2D3B07-06BC-4EDA-B7DB-D41277E3D1B9" class="sect4">VALIDATE_ACL Function</h4>
<div>
<div class="section">
<p>The <code class="codeph">VALIDATE_ACL</code> function <a id="d84027e14473" class="indexterm-anchor"></a>validates the ACL. This function returns <code class="codeph">TRUE</code> if the object is valid; otherwise, it returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies that can be stored is reached. Users must query this validation table to find out what caused the validation failure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">validate_acl(name         IN VARCHAR2, 
             error_limit  IN PLS_INTEGER := 1) 
   RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5F2D3B07-06BC-4EDA-B7DB-D41277E3D1B9__GUID-F001C13A-9BAB-47F4-A3A1-0324D5D873E7">
<table class="cellalignment5205" summary="VALIDATE_ACL Parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e14504">Parameter</th>
<th class="cellalignment5280" id="d84027e14507">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14512" headers="d84027e14504">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14512 d84027e14507">
<p>The name of the object to be validated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14520" headers="d84027e14504">
<p><code class="codeph">error_limit</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14520 d84027e14507">
<p>The maximum number of inconsistencies that may be stored in the validation table.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Validate the ACL, <code class="codeph">acl1</code>, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_acl(&#39;acl1&#39;, 100) then
    dbms_output.put_line(&#39;The ACL is valid.&#39;);
  else
    dbms_output.put_line(&#39;The ACL is invalid.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG657"></a><a id="DBFSG658"></a><a id="DBFSG659"></a><a id="DBFSG656"></a>
<div class="props_rev_3"><a id="GUID-39061A4F-C36E-410E-9944-D8A57E302853"></a>
<h4 id="DBFSG-GUID-39061A4F-C36E-410E-9944-D8A57E302853" class="sect4">VALIDATE_DATA_SECURITY Function</h4>
<div>
<div class="section">
<p>The <code class="codeph">VALIDATE_DATA_SECURITY</code> function <a id="d84027e14651" class="indexterm-anchor"></a>validates the data security. This function returns <code class="codeph">TRUE</code> if the object is valid; otherwise, it returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies that can be stored is reached. Users must query this validation table to find out what caused the validation failure.</p>
<p>This function has three styles of policy validation.</p>
<ul style="list-style-type: disc;">
<li>
<p>When <code class="codeph">policy</code> is not NULL and <code class="codeph">table_name</code> is <code class="codeph">NULL</code>, the function validates the policy against all the tables to which the policy is applied. Note that when <code class="codeph">table_name</code> is NULL, <code class="codeph">table_owner</code> is ignored even if it is not NULL.</p>
</li>
<li>
<p>When both <code class="codeph">policy</code> and <code class="codeph">table_name</code> are not NULL, the function validates the policy against the specific table. If <code class="codeph">table_owner</code> is not provided, the current schema is used.</p>
</li>
<li>
<p>When policy is NULL and table_name is not NULL, the function validates all policies applied to the table against the table. If <code class="codeph">table_owner</code> is not provided, the current schema is used.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">validate_data_security(policy       IN VARCHAR2 :=NULL,
                       table_owner  IN VARCHAR2 :=NULL,
                       table_name   IN VARCHAR2 :=NULL,
                       error_limit  IN PLS_INTEGER := 1) 
   RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-39061A4F-C36E-410E-9944-D8A57E302853__GUID-5DE88FE6-7556-4FFD-BBC1-24FDF8D79F08">
<table class="cellalignment5205" summary="VALIDATE_DATA_SECURITY Parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e14721">Parameter</th>
<th class="cellalignment5280" id="d84027e14724">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14729" headers="d84027e14721">
<p><code class="codeph">policy</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14729 d84027e14724">
<p>The name of the object to be validated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14737" headers="d84027e14721">
<p><code class="codeph">table_owner</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14737 d84027e14724">
<p>The name of the schema of the table or view.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14745" headers="d84027e14721">
<p><code class="codeph">table_name</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14745 d84027e14724">
<p>The name of the table or view.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14753" headers="d84027e14721">
<p><code class="codeph">error_limit</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14753 d84027e14724">
<p>The maximum number of inconsistencies that may be stored in the validation table.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Validate a policy, <code class="codeph">policy1</code> on all the applied tables, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_data_security(policy      =&gt; &#39;policy1&#39;,
                                        error_limit =&gt; 100) then
    dbms_output.put_line(&#39;The policy is valid on all the applied tables.&#39;);
  else
    dbms_output.put_line(&#39;The policy is invalid on some of the applied tables.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre>
<p>Validate a policy, <code class="codeph">policy1</code> on a given table, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_data_security(policy      =&gt; &#39;policy1&#39;,
                                        table_owner =&gt; &#39;HR&#39;,
                                        table_name  =&gt; &#39;EMPLOYEES&#39;,
                                        error_limit =&gt; 100) then
    dbms_output.put_line(&#39;The policy is valid on the table.&#39;);
  else
    dbms_output.put_line(&#39;The policy is invalid on the table.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre>
<p>Validate all the policies applied to a given table, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_data_security(table_owner =&gt; &#39;HR&#39;,
                                        table_name  =&gt; &#39;EMPLOYEES&#39;,
                                        error_limit =&gt; 100) then
    dbms_output.put_line(&#39;All the applied policies on the table are valid.&#39;);
  else
    dbms_output.put_line(&#39;Some applied policies on the table are invalid&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG661"></a><a id="DBFSG662"></a><a id="DBFSG663"></a><a id="DBFSG660"></a>
<div class="props_rev_3"><a id="GUID-306835D0-D57C-4819-894A-315D0579BD08"></a>
<h4 id="DBFSG-GUID-306835D0-D57C-4819-894A-315D0579BD08" class="sect4">VALIDATE_NAMESPACE_TEMPLATE Function</h4>
<div>
<div class="section">
<p>The <a id="d84027e14892" class="indexterm-anchor"></a><code class="codeph">VALIDATE_NAMESPACE_TEMPLATE</code> function <a id="d84027e14899" class="indexterm-anchor"></a>validates the namespace. This function returns <code class="codeph">TRUE</code> if the object is valid; otherwise, it returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies that can be stored is reached. Users must query this validation table to find out what caused the validation failure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">validate_namespace_template(name         IN VARCHAR2,
                            error_limit  IN PLS_INTEGER := 1)
   RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-306835D0-D57C-4819-894A-315D0579BD08__GUID-94F9EC37-B837-4337-80D3-9ABB9C66F97A">
<table class="cellalignment5205" summary="VALIDATE_NAMESPACE_TEMPLATE Parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e14930">Parameter</th>
<th class="cellalignment5280" id="d84027e14933">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14938" headers="d84027e14930">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14938 d84027e14933">
<p>The name of the object to be validated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e14946" headers="d84027e14930">
<p><code class="codeph">error_limit</code></p>
</td>
<td class="cellalignment5282" headers="d84027e14946 d84027e14933">
<p>The maximum number of inconsistencies that may be stored in the validation table.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Validate the namespace, <code class="codeph">ns1</code>, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_namespace_template(&#39;ns1&#39;, 100) then
    dbms_output.put_line(&#39;The namespace template is valid.&#39;);
  else
    dbms_output.put_line(&#39;The namespace template is invalid.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG665"></a><a id="DBFSG666"></a><a id="DBFSG667"></a><a id="DBFSG664"></a>
<div class="props_rev_3"><a id="GUID-03CCCD5A-3A8C-4905-9CC8-5F6451936522"></a>
<h4 id="DBFSG-GUID-03CCCD5A-3A8C-4905-9CC8-5F6451936522" class="sect4">VALIDATE_WORKSPACE Function</h4>
<div>
<div class="section">
<p>The <code class="codeph">VALIDATE_WORKSPACE</code> function <a id="d84027e15078" class="indexterm-anchor"></a>validates all the artifacts, in other words, it validates all objects that exist in the work space by using this one function. This function returns <code class="codeph">TRUE</code> if all the objects are valid; otherwise, it returns <code class="codeph">FALSE</code>. For each identified inconsistency, a row is inserted into the <code class="codeph">XS$VALIDATION_TABLE</code> validation table until the maximum number of inconsistencies that can be stored is reached. Users must query this validation table to find out what caused the validation failure.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">validate_workspace(error_limit  IN PLS_INTEGER := 1)
   RETURN BOOLEAN;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-03CCCD5A-3A8C-4905-9CC8-5F6451936522__GUID-250CCA32-0AAB-479F-9A25-2D9B3D57BBA4">
<table class="cellalignment5205" summary="VALIDATE_WORKSPACE Parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e15109">Parameter</th>
<th class="cellalignment5280" id="d84027e15112">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e15117" headers="d84027e15109">
<p><code class="codeph">error_limit</code></p>
</td>
<td class="cellalignment5282" headers="d84027e15117 d84027e15112">
<p>The maximum number of inconsistencies that may be stored in the validation table.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Validate all the objects in the workspace, then query the validation table in case there are inconsistencies.</p>
<pre dir="ltr">begin
  if sys.xs_diag.validate_workspace(100) then
    dbms_output.put_line(&#39;The objects are valid.&#39;);
  else
    dbms_output.put_line(&#39;The objects are invalid.&#39;);
  end if;
end;
/
select * from xs$validation_table;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG99498"></a>
<div class="props_rev_3"><a id="GUID-CDDF9856-4F59-44D6-923B-85957FB1BE7B"></a>
<h2 id="DBFSG-GUID-CDDF9856-4F59-44D6-923B-85957FB1BE7B" class="sect2">XS_NAMESPACE Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">XS_NAMESPACE</code> package <a id="d84027e15241" class="indexterm-anchor"></a>includes subprograms to create, manage, and delete namespace templates and attributes.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG99499"></a>
<div class="props_rev_3"><a id="GUID-B8E92E87-5F9F-48B4-B446-3F1CE6E3789A"></a>
<h3 id="DBFSG-GUID-B8E92E87-5F9F-48B4-B446-3F1CE6E3789A" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_NAMESPACE</code> package <a id="d84027e15355" class="indexterm-anchor"></a>is created under the <code class="codeph">SYS</code> schema. The <code class="codeph">DBA</code> role is granted the <code class="codeph">ADMIN_ANY_SEC_POLICY</code>, which allows it to administer namespace templates and attributes.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG705"></a>
<div class="props_rev_3"><a id="GUID-18618DFF-73FD-462B-B687-FDA10C4B9EFA"></a>
<h3 id="DBFSG-GUID-18618DFF-73FD-462B-B687-FDA10C4B9EFA" class="sect3">Object Types, Constructor Functions, Synonyms, and Grants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e15475" class="indexterm-anchor"></a>object types, constructor functions, synonyms, and <code class="codeph">GRANT</code> statements are defined for this package.</p>
<pre dir="ltr">-- Type definition for namespace template attribute
CREATE OR REPLACE TYPE XS$NS_ATTRIBUTE AS OBJECT (
-- Member Variables
-- Name of the namespace template attribute
-- Must be unique within a namespace template
-- Cannot be null
name              VARCHAR2(4000),
-- Default value assigned to the attribute
default_value     VARCHAR2(4000),
-- Trigger events associated with the attribute
-- Allowed values are :
-- 0 : NO_EVENT
-- 1 : FIRST_READ_EVENT
-- 2 : UPDATE_EVENT
-- 3 : FIRST_READ_PLUS_UPDATE_EVENT
attribute_events  NUMBER,

-- Constructor function
CONSTRUCTOR FUNCTION XS$NS_ATTRIBUTE
                    (name             IN VARCHAR2,
                     default_value    IN VARCHAR2 := NULL,
                     attribute_events IN NUMBER := 0)
                     RETURN SELF AS RESULT,

-- Return the name of the attribute
MEMBER FUNCTION GET_NAME RETURN VARCHAR2,
-- Return the default value of the attribute
MEMBER FUNCTION GET_DEFAULT_VALUE RETURN VARCHAR2,
-- Return the trigger events associated with attribute
MEMBER FUNCTION GET_ATTRIBUTE_EVENTS RETURN NUMBER,
-- Mutator procedures
-- Set the default value for the attribute
MEMBER PROCEDURE SET_DEFAULT_VALUE(default_value IN VARCHAR2),
-- Associate trigger events to the attribute
MEMBER PROCEDURE SET_ATTRIBUTE_EVENTS(attribute_events IN NUMBER)
);
CREATE OR REPLACE TYPE XS$NS_ATTRIBUTE_LIST AS VARRAY(1000) OF XS$NS_ATTRIBUTE;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG668"></a>
<div class="props_rev_3"><a id="GUID-D3AACA39-3DD1-4A76-8A0C-DCAED2AD6B5F"></a>
<h3 id="DBFSG-GUID-D3AACA39-3DD1-4A76-8A0C-DCAED2AD6B5F" class="sect3">Constants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e15592" class="indexterm-anchor"></a>are attribute event constants:</p>
<pre dir="ltr">NO_EVENT                     CONSTANT PLS_INTEGER := 0;
FIRSTREAD_EVENT              CONSTANT PLS_INTEGER := 1;
UPDATE_EVENT                 CONSTANT PLS_INTEGER := 2;
FIRSTREAD_PLUS_UPDATE_EVENT  CONSTANT PLS_INTEGER := 3;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99501"></a><a id="DBFSG99500"></a>
<div class="props_rev_3"><a id="GUID-C03EAA0E-529B-43DF-9B65-6966016A02DB"></a>
<h3 id="DBFSG-GUID-C03EAA0E-529B-43DF-9B65-6966016A02DB" class="sect3">Summary of XS_NAMESPACE Subprograms</h3>
<div>
<div class="tblformal" id="GUID-C03EAA0E-529B-43DF-9B65-6966016A02DB__GUID-488A7EDF-9886-42B0-820F-9A761322D282">
<p class="titleintable">Table 11-9 Summary of XS_NAMESPACE Subprograms</p>
<table class="cellalignment5205" title="Summary of XS_NAMESPACE Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5267" id="d84027e15714">Subprogram</th>
<th class="cellalignment5268" id="d84027e15717">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e15722" headers="d84027e15714">
<p><a href="plsql_pkg.htm#GUID-2ECCB0F0-0B24-4538-8B15-DEA704931B3E">CREATE_TEMPLATE Procedure</a></p>
</td>
<td class="cellalignment5270" headers="d84027e15722 d84027e15717">
<p>Creates a new namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e15731" headers="d84027e15714">
<p><a href="plsql_pkg.htm#GUID-5EEB8F9A-D1A0-4FF7-B295-7EC8A01315E0">ADD_ATTRIBUTES Procedure</a></p>
</td>
<td class="cellalignment5270" headers="d84027e15731 d84027e15717">
<p>Adds one or more attributes to an existing namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e15740" headers="d84027e15714">
<p><a href="plsql_pkg.htm#GUID-6BB437F4-BDDF-4E14-886D-8EF1E4027603">REMOVE_ATTRIBUTES Procedure</a></p>
</td>
<td class="cellalignment5270" headers="d84027e15740 d84027e15717">
<p>Removes one or more attributes from a namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e15749" headers="d84027e15714">
<p><a href="plsql_pkg.htm#GUID-49BBCC26-4D02-4B5A-83F2-2A4AEF1B2ED1">SET_HANDLER Procedure</a></p>
</td>
<td class="cellalignment5270" headers="d84027e15749 d84027e15717">
<p>Assigns a handler function for the specified namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e15758" headers="d84027e15714">
<p><a href="plsql_pkg.htm#GUID-8615F25C-008E-465D-8193-8A787A0BA659">SET_DESCRIPTION Procedure</a></p>
</td>
<td class="cellalignment5270" headers="d84027e15758 d84027e15717">
<p>Sets a description string for the specified namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5269" id="d84027e15767" headers="d84027e15714">
<p><a href="plsql_pkg.htm#GUID-6903FFA0-8FCC-4EE1-9E54-2884C3A455F8">DELETE_TEMPLATE Procedure</a></p>
</td>
<td class="cellalignment5270" headers="d84027e15767 d84027e15717">
<p>Deletes the specified namespace template.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG99503"></a><a id="DBFSG99504"></a><a id="DBFSG99505"></a><a id="DBFSG99502"></a>
<div class="props_rev_3"><a id="GUID-2ECCB0F0-0B24-4538-8B15-DEA704931B3E"></a>
<h4 id="DBFSG-GUID-2ECCB0F0-0B24-4538-8B15-DEA704931B3E" class="sect4">CREATE_TEMPLATE Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e15885" class="indexterm-anchor"></a>CREATE_TEMPLATE procedure creates a new namespace template.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_NAMESPACE.CREATE_TEMPLATE (
  name             IN VARCHAR2,
  attr_list        IN XS$NS_ATTRIBUTE_LIST := NULL,
  schema           IN VARCHAR2 := NULL,
  package          IN VARCHAR2 := NULL,
  function         IN VARCHAR2 := NULL,
  acl              IN VARCHAR2 := &#39;SYS.NS_UNRESTRICTED_ACL&#39;
  description      IN VARCHAR2 := NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-2ECCB0F0-0B24-4538-8B15-DEA704931B3E__GUID-6AC0CF13-CAB6-4400-B3AD-A044CA8EA9BC">
<table class="cellalignment5205" summary="CREATE_TEMPLATE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e15907">Parameter</th>
<th class="cellalignment5216" id="d84027e15910">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15915" headers="d84027e15907">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15915 d84027e15910">
<p>The name of the namespace template to be created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15923" headers="d84027e15907">
<p><code class="codeph">attr_list</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15923 d84027e15910">
<p>The attributes contained in the namespace template together with their default values and associated attribute events, such as <code class="codeph">UPDATE_EVENT</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15934" headers="d84027e15907">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15934 d84027e15910">
<p>The schema that contains the handler function for the namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15942" headers="d84027e15907">
<p><code class="codeph">package</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15942 d84027e15910">
<p>The package that contains the handler function for the namespace template.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15950" headers="d84027e15907">
<p><code class="codeph">function</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15950 d84027e15910">
<p>The handler function for the namespace template. The handler function is called when an attribute event occurs.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15958" headers="d84027e15907">
<p><code class="codeph">acl</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15958 d84027e15910">
<p>The name of the ACL for this namespace template. If no ACL is provided, the default is the predefined ACL <code class="codeph">SYS.NS_UNRESTRICTED_ACL</code>, which allows unrestricted attribute operations by the application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e15969" headers="d84027e15907">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5218" headers="d84027e15969 d84027e15910">
<p>An optional description string for the namespace template.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a namespace template called <code class="codeph">POAttrs</code>. The namespace template contains a list of attributes defined by <code class="codeph">attrlist</code>. The handler function for the namespace template is called <code class="codeph">Populate_Order_Func</code>. This handler function is part of the <code class="codeph">Orders_Pckg</code> package, which is contained in the <code class="codeph">SCOTT</code> schema. The namespace template has <code class="codeph">NS_UNRESTRICTED_ACL</code> set on the template, which allows unrestricted operation on namespaces created from the template.</p>
<pre dir="ltr">DECLARE
  attrlist XS$NS_ATTRIBUTE_LIST;
BEGIN
  attrlist := XS$NS_ATTRIBUTE_LIST();
  attrlist.extend(2);
  attrlist(1) := XS$NS_ATTRIBUTE(&#39;desc&#39;, &#39;general&#39;);
  attrlist(2) := XS$NS_ATTRIBUTE(name=&gt;&#39;item_no&#39;,
                 attribute_events=&gt;XS_NAMESPACE.FIRSTREAD_EVENT);
<span class="bold">  SYS.XS_NAMESPACE.CREATE_TEMPLATE(&#39;POAttrs&#39;, attrlist, &#39;SCOTT&#39;,</span>
<span class="bold">                                   &#39;Orders_Pckg&#39;,&#39;Populate_Order_Func&#39;,</span>
<span class="bold">                                   &#39;SYS.NS_UNRESTRICTED_ACL&#39;,</span>
                                   &#39;Purchase Order Attributes&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG349"></a><a id="DBFSG350"></a><a id="DBFSG351"></a><a id="DBFSG348"></a>
<div class="props_rev_3"><a id="GUID-5EEB8F9A-D1A0-4FF7-B295-7EC8A01315E0"></a>
<h4 id="DBFSG-GUID-5EEB8F9A-D1A0-4FF7-B295-7EC8A01315E0" class="sect4">ADD_ATTRIBUTES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ADD_ATTRIBUTES</code> procedure adds one or more attributes to an existing namespace template.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_NAMESPACE.ADD_ATTRIBUTES ( 
  template         IN VARCHAR2,
  attribute        IN VARCHAR2,
  default_value    IN VARCHAR2 := NULL,
  attribute_events IN PLS_INTEGER := XS_NAMESPACE.NO_EVENT);

XS_NAMESPACE.ADD_ATTRIBUTES ( 
  template  IN VARCHAR2,
  attr_list IN XS$NS_ATTRIBUTE_LIST); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5EEB8F9A-D1A0-4FF7-B295-7EC8A01315E0__GUID-849E52C5-4311-4DA0-9568-9CF9783702FC">
<table class="cellalignment5205" summary="ADD_ATTRIBUTES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e16142">Parameter</th>
<th class="cellalignment5216" id="d84027e16145">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16150" headers="d84027e16142">
<p><code class="codeph">template</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16150 d84027e16145">
<p>The name of the namespace templates to which the attribute(s) is/are to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16158" headers="d84027e16142">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16158 d84027e16145">
<p>The name of the attribute to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16166" headers="d84027e16142">
<p><code class="codeph">attr_list</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16166 d84027e16145">
<p>The list of attributes to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16174" headers="d84027e16142">
<p><code class="codeph">default_value</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16174 d84027e16145">
<p>The default value of the attribute.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16182" headers="d84027e16142">
<p><code class="codeph">attribute_events</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16182 d84027e16145">
<p>The attribute event associated with the attribute, such as update event.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds an attribute called <code class="codeph">item_type</code> to the <code class="codeph">POAttrs</code> namespace. It also specifies a default value and attribute event for the new attribute that is added.</p>
<pre dir="ltr">BEGIN
  SYS.XS_NAMESPACE.ADD_ATTRIBUTES(template=&gt;&#39;POAttrs&#39;,attribute=&gt;&#39;item_type&#39;,
                                  default_value=&gt;&#39;generic&#39;,
                                  attribute_events=&gt;XS_NAMESPACE.update_event);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG357"></a><a id="DBFSG358"></a><a id="DBFSG359"></a><a id="DBFSG356"></a>
<div class="props_rev_3"><a id="GUID-6BB437F4-BDDF-4E14-886D-8EF1E4027603"></a>
<h4 id="DBFSG-GUID-6BB437F4-BDDF-4E14-886D-8EF1E4027603" class="sect4">REMOVE_ATTRIBUTES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_ATTRIBUTES</code> procedure removes one or more attributes from a namespace template. If no attribute names are specified, then all attributes are removed from the namespace template.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_NAMESPACE.REMOVE_ATTRIBUTES ( 
  template  IN VARCHAR2,
  attribute IN VARCHAR2); 

XS_NAMESPACE.REMOVE_ATTRIBUTES ( 
  template  IN VARCHAR2,
  attr_list IN XS$LIST); 

XS_NAMESPACE.REMOVE_ATTRIBUTES ( 
  template   IN VARCHAR2); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6BB437F4-BDDF-4E14-886D-8EF1E4027603__GUID-E88C9B9C-D3C7-49B2-9280-91E6928E0D5B">
<table class="cellalignment5205" summary="REMOVE_ATTRIBUTES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e16334">Parameter</th>
<th class="cellalignment5216" id="d84027e16337">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16342" headers="d84027e16334">
<p><code class="codeph">template</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16342 d84027e16337">
<p>The name of the namespace template from which the attribute(s) is/are to be removed.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16350" headers="d84027e16334">
<p><code class="codeph">attribute</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16350 d84027e16337">
<p>The name of the attribute to be removed.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16358" headers="d84027e16334">
<p><code class="codeph">attr_list</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16358 d84027e16337">
<p>The list of attribute names to be removed.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes the <code class="codeph">item_type</code> attribute from the <code class="codeph">POAttrs</code> namespace.</p>
<pre dir="ltr">BEGIN
  SYS.XS_NAMESPACE.REMOVE_ATTRIBUTES(&#39;POAttrs&#39;,&#39;item_type&#39;);
END;
</pre>
<p>The following example removes all attributes from the <code class="codeph">POAttrs</code> namespace template.</p>
<pre dir="ltr">BEGIN
  SYS.XS_NAMESPACE.REMOVE_ATTRIBUTES(&#39;POAttrs&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG361"></a><a id="DBFSG362"></a><a id="DBFSG363"></a><a id="DBFSG360"></a>
<div class="props_rev_3"><a id="GUID-49BBCC26-4D02-4B5A-83F2-2A4AEF1B2ED1"></a>
<h4 id="DBFSG-GUID-49BBCC26-4D02-4B5A-83F2-2A4AEF1B2ED1" class="sect4">SET_HANDLER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_HANDLER</code> procedure assigns a handler function for the specified namespace template.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_NAMESPACE.SET_HANDLER (
  template         IN VARCHAR2,
  schema           IN VARCHAR2,
  package          IN VARCHAR2,
  function         IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-49BBCC26-4D02-4B5A-83F2-2A4AEF1B2ED1__GUID-CBE1D43B-9A1D-4125-A44E-DB52EAA189C4">
<table class="cellalignment5205" summary="SET_HANDLER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e16516">Parameter</th>
<th class="cellalignment5216" id="d84027e16519">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16524" headers="d84027e16516">
<p><code class="codeph">template</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16524 d84027e16519">
<p>The name of the namespace template for which the handler function is to be set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16532" headers="d84027e16516">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16532 d84027e16519">
<p>The schema containing the handler package and function.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16540" headers="d84027e16516">
<p><code class="codeph">package</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16540 d84027e16519">
<p>The name of the package that contains the handler function.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16548" headers="d84027e16516">
<p><code class="codeph">function</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16548 d84027e16519">
<p>The name of the handler function for the namespace template.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a handler function, called <code class="codeph">Populate_Order_Func</code>, for the <code class="codeph">POAttrs</code> namespace template.</p>
<pre dir="ltr">BEGIN
  SYS.XS_NAMESPACE.SET_HANDLER(&#39;POAttrs&#39;,&#39;SCOTT&#39;,
                               &#39;Orders_Pckg&#39;,&#39;Populate_Order_Func&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG369"></a><a id="DBFSG370"></a><a id="DBFSG371"></a><a id="DBFSG368"></a>
<div class="props_rev_3"><a id="GUID-8615F25C-008E-465D-8193-8A787A0BA659"></a>
<h4 id="DBFSG-GUID-8615F25C-008E-465D-8193-8A787A0BA659" class="sect4">SET_DESCRIPTION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_DESCRIPTION</code> procedure sets a description string for the specified namespace template.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_NAMESPACE.SET_DESCRIPTION (
  template     IN VARCHAR2,
  description  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8615F25C-008E-465D-8193-8A787A0BA659__GUID-E161431C-40EE-4EA7-9041-5F8688EA200F">
<table class="cellalignment5205" summary="SET_DESCRIPTION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e16699">Parameter</th>
<th class="cellalignment5216" id="d84027e16702">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16707" headers="d84027e16699">
<p><code class="codeph">template</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16707 d84027e16702">
<p>The name of the namespace template whose description is to be set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16715" headers="d84027e16699">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16715 d84027e16702">
<p>A description string for the specified namespace template.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a description string for the <code class="codeph">POAttrs</code> namespace template.</p>
<pre dir="ltr">BEGIN
  SYS.XS_NAMESPACE.SET_DESCRIPTION(&#39;POAttrs&#39;,&#39;Purchase Order Attributes&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG373"></a><a id="DBFSG374"></a><a id="DBFSG375"></a><a id="DBFSG372"></a>
<div class="props_rev_3"><a id="GUID-6903FFA0-8FCC-4EE1-9E54-2884C3A455F8"></a>
<h4 id="DBFSG-GUID-6903FFA0-8FCC-4EE1-9E54-2884C3A455F8" class="sect4">DELETE_TEMPLATE Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e16844" class="indexterm-anchor"></a><code class="codeph">DELETE_TEMPLATE</code> procedure deletes the specified namespace template.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_NAMESPACE.DELETE_TEMPLATE( 
  template      IN VARCHAR2,
  delete_option IN PLS_INTEGER := XS_ADMIN_UTIL.DEFAULT_OPTION); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6903FFA0-8FCC-4EE1-9E54-2884C3A455F8__GUID-3FFD1B53-A19C-47E7-831F-CFB2F2B36F78">
<table class="cellalignment5205" summary="DELETE_TEMPLATE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e16868">Parameter</th>
<th class="cellalignment5216" id="d84027e16871">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16876" headers="d84027e16868">
<p><code class="codeph">template</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16876 d84027e16871">
<p>The name of the namespace template to be deleted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e16884" headers="d84027e16868">
<p><code class="codeph">delete_option</code></p>
</td>
<td class="cellalignment5218" headers="d84027e16884 d84027e16871">
<p>The delete option to use. To the namespace template, the behavior of the following options is the same:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DEFAULT_OPTION:</code></p>
<p>The default option allows deleting a namespace template only if it is not referenced elsewhere. If there are other entities that reference the namespace template, then the namespace template cannot be deleted.</p>
</li>
<li>
<p><code class="codeph">CASCADE_OPTION</code>:</p>
<p>The cascade option deletes the namespace template together with any references to it. The user deleting the namespace template deletes these references as well.</p>
</li>
<li>
<p><code class="codeph">ALLOW_INCONSISTENCIES_OPTION:</code></p>
<p>The allow inconsistencies option lets you delete the entity even if other entities have late binding references to it. If the entity is part of an early dependency, then the delete fails and an error is raised.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the POAttrs namespace template using the default delete option.</p>
<pre dir="ltr">BEGIN
  SYS.XS_NAMESPACE.DELETE_TEMPLATE(&#39;POAttrs&#39;,XS_ADMIN_UTIL.DEFAULT_OPTION);
END;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG99296"></a>
<div class="props_rev_3"><a id="GUID-50D04FCD-BB85-42A5-851D-559D5D537325"></a>
<h2 id="DBFSG-GUID-50D04FCD-BB85-42A5-851D-559D5D537325" class="sect2">XS_PRINCIPAL Package</h2>
<div>
<div class="section">
<p>The XS_PRINCIPAL package <a id="d84027e17025" class="indexterm-anchor"></a>contains procedures used to create, manage, and delete application principals. These application principals include application users, regular application roles, and dynamic application roles.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG99297"></a>
<div class="props_rev_3"><a id="GUID-33D2E7A6-5EE5-4045-B5EE-A153A619F929"></a>
<h3 id="DBFSG-GUID-33D2E7A6-5EE5-4045-B5EE-A153A619F929" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_PRINCIPAL</code> package <a id="d84027e17139" class="indexterm-anchor"></a>is created under the <code class="codeph">SYS</code> schema.</p>
<p>The privileges required to create, modify, or drop application users and roles are governed by the same system privileges required to create, modify, or drop database users and roles.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG706"></a>
<div class="props_rev_3"><a id="GUID-3DF3B7FF-2F1F-48D0-B83D-4F7070395714"></a>
<h3 id="DBFSG-GUID-3DF3B7FF-2F1F-48D0-B83D-4F7070395714" class="sect3">Object Types, Constructor Functions, Synonyms, and Grants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e17255" class="indexterm-anchor"></a>object types, constructor functions, synonyms, and <code class="codeph">GRANT</code> statements are defined for this package.</p>
<pre dir="ltr">-- Type definition for roles granted to the principals
CREATE OR REPLACE TYPE XS$ROLE_GRANT_TYPE AS OBJECT (
-- Member Variables
-- Constants defined in other packages cannot be recognized in a type.
-- e.g.  XS_ADMIN_UTIL.XSNAME_MAXLEN
-- name   VARCHAR2(XS_ADMIN_UTIL.XSNAME_MAXLEN),
  name          VARCHAR2(130),
-- Start date of the effective date
  start_date    TIMESTAMP WITH TIME ZONE,
-- End date of the effective date
  end_date      TIMESTAMP WITH TIME ZONE,

  CONSTRUCTOR FUNCTION XS$ROLE_GRANT_TYPE (
    name       IN VARCHAR2,
    start_date IN TIMESTAMP WITH TIME ZONE:= NULL,
    end_date   IN TIMESTAMP WITH TIME ZONE:= NULL)
  RETURN SELF AS RESULT,

  MEMBER FUNCTION get_role_name RETURN VARCHAR2,
  MEMBER PROCEDURE set_start_date(start_date IN TIMESTAMP WITH TIME ZONE),
  MEMBER FUNCTION get_start_date RETURN TIMESTAMP WITH TIME ZONE,
  MEMBER PROCEDURE set_end_date(end_date IN TIMESTAMP WITH TIME ZONE),
  MEMBER FUNCTION get_end_date RETURN TIMESTAMP WITH TIME ZONE
);

CREATE OR REPLACE TYPE XS$ROLE_GRANT_LIST AS VARRAY(1000) OF XS$ROLE_GRANT_TYPE;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG669"></a>
<div class="props_rev_3"><a id="GUID-23B361BA-981C-4FA6-8646-30F369C3EDC8"></a>
<h3 id="DBFSG-GUID-23B361BA-981C-4FA6-8646-30F369C3EDC8" class="sect3">Constants</h3>
<div>
<div class="section">
<p>The following <a id="d84027e17372" class="indexterm-anchor"></a>constants define the user&#39;s status:</p>
<pre dir="ltr">ACTIVE          CONSTANT PLS_INTEGER := 1;
INACTIVE        CONSTANT PLS_INTEGER := 2;
UNLOCKED        CONSTANT PLS_INTEGER := 3;
EXPIRED         CONSTANT PLS_INTEGER := 4;
LOCKED          CONSTANT PLS_INTEGER := 5;
</pre>
<p>The following constants define dynamic role scope:</p>
<pre dir="ltr">SESSION_SCOPE   CONSTANT PLS_INTEGER := 0;
REQUEST_SCOPE   CONSTANT PLS_INTEGER := 1;
</pre>
<p>The following constants define the verifier type:</p>
<pre dir="ltr">XS_SHA512       CONSTANT PLS_INTEGER := 2 ;
XS_SALTED_SHA1  CONSTANT PLS_INTEGER := 1 ;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99299"></a><a id="DBFSG99298"></a>
<div class="props_rev_3"><a id="GUID-D9EA0B89-BC59-49DB-9E12-4A2A19CEFCDA"></a>
<h3 id="DBFSG-GUID-D9EA0B89-BC59-49DB-9E12-4A2A19CEFCDA" class="sect3">Summary of XS_PRINCIPAL Subprograms</h3>
<div>
<div class="tblformal" id="GUID-D9EA0B89-BC59-49DB-9E12-4A2A19CEFCDA__GUID-5D767ACE-A940-42A6-9F4F-106DDEAF503B">
<p class="titleintable">Table 11-10 Summary of XS_PRINCIPAL Subprograms</p>
<table class="cellalignment5205" title="Summary of XS_PRINCIPAL Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5211" id="d84027e17502">Subprogram</th>
<th class="cellalignment5212" id="d84027e17505">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17510" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-03D147A5-36A8-4ACE-BDEA-2D7A5D8F046D">CREATE_USER Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17510 d84027e17505">
<p>Creates an application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17519" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-0A1D0CBF-2A1B-4050-BE1D-4C11F83D2FDC">CREATE_ROLE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17519 d84027e17505">
<p>Creates an application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17528" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-5D3C1B51-E0D8-45F0-B9E2-40EBE4C1F3C5">CREATE_DYNAMIC_ROLE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17528 d84027e17505">
<p>Creates a dynamic application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17537" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-2DF77823-B22F-4B0A-8D57-92066B3235F5">GRANT_ROLES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17537 d84027e17505">
<p>Grants one or more application roles to an application principal.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17546" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-58221815-3052-4727-8716-4CE33AB29565">REVOKE_ROLES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17546 d84027e17505">
<p>Revokes one or more roles from an application principal.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17555" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-3B69AF6F-57AF-425C-B46E-6148AD92B39A">ADD_PROXY_USER Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17555 d84027e17505">
<p>Adds a proxy user for a target application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17564" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-DC100E64-4F75-4261-9055-36365D99ED0A">REMOVE_PROXY_USERS Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17564 d84027e17505">
<p>Removes specified proxy user or all proxy users for a target application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17573" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-52BC2129-A0C2-49C6-9DE7-1712D310EAFA">ADD_PROXY_TO_DBUSER</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17573 d84027e17505">
<p>Add a proxy application user to a database user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17582" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-5CC1A868-11C6-4649-8C72-9C351FD42895">REMOVE_PROXY_FROM_DBUSER</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17582 d84027e17505">
<p>Remove a proxy application user from a database user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17591" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-F7CB8D99-9396-43A8-A4E7-CEC9E52D38DC">SET_EFFECTIVE_DATES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17591 d84027e17505">
<p>Sets or modifies the effective dates for an application user or role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17600" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-6069CD83-3AE1-4167-B83B-97A4E4FC5F8D">SET_DYNAMIC_ROLE_DURATION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17600 d84027e17505">
<p>Sets or modifies the duration, in minutes, for a dynamic application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17610" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-CB7AA70A-6E66-478A-ACF8-3BD93C38E59E">SET_DYNAMIC_ROLE_SCOPE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17610 d84027e17505">
<p>Sets or modifies the scope of a dynamic application role, such as <code class="codeph">REQUEST_SCOPE</code> or <code class="codeph">SESSION_SCOPE</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17625" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-4D50076C-E67B-4FF2-9030-4405DC56D9A5">ENABLE_BY_DEFAULT Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17625 d84027e17505">
<p>Enables or disables an application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17634" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-FD6563D5-AC12-411A-9D4D-29A0C00683D1">ENABLE_ROLES_BY_DEFAULT Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17634 d84027e17505">
<p>Enables or disables all directly granted roles for the specified user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17643" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-8FC52A23-35DA-4A50-8149-6850F56D6467">SET_USER_SCHEMA Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17643 d84027e17505">
<p>Sets the database schema for an application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17652" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-054787C6-120D-4567-8F0E-404DBB408F7B">SET_GUID Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17652 d84027e17505">
<p>Sets the GUID for an external user or role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17661" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-610D3138-94AF-42FD-B738-B0E86EB7D07F">SET_PROFILE Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17661 d84027e17505">
<p>Sets the application user&#39;s profile. This is a set of resource limits and password parameters that restrict database usage and database instance resources for a Real Application Security application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17670" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-D771034A-250B-452C-B475-340143281305">SET_USER_STATUS Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17670 d84027e17505">
<p>Sets or modifies the status of an application user account, such as <code class="codeph">ACTIVE</code>, <code class="codeph">INACTIVE</code>, <code class="codeph">UNLOCK</code>, <code class="codeph">LOCKED</code>, or <code class="codeph">EXPIRED</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17694" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-AB88CD3F-89B0-4C25-A404-D5C8D7FEB1AD">SET_PASSWORD Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17694 d84027e17505">
<p>Sets or modifies the password for an application user account.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17703" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-3AF5137E-08F5-44D3-8045-E8CED5AD892A">SET_VERIFIER Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17703 d84027e17505">
<p>Sets or modifies the verifier for an application user account.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17712" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-BC64D831-75A8-4041-BE9F-8C9378B21FD5">SET_DESCRIPTION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17712 d84027e17505">
<p>Sets the description string for an application user or role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e17721" headers="d84027e17502">
<p><a href="plsql_pkg.htm#GUID-15266CE7-B956-438F-87BB-F5D88EF47DE8">DELETE_PRINCIPAL Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e17721 d84027e17505">
<p>Drops an application user or role.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG99309"></a><a id="DBFSG99310"></a><a id="DBFSG99311"></a><a id="DBFSG99308"></a>
<div class="props_rev_3"><a id="GUID-03D147A5-36A8-4ACE-BDEA-2D7A5D8F046D"></a>
<h4 id="DBFSG-GUID-03D147A5-36A8-4ACE-BDEA-2D7A5D8F046D" class="sect4">CREATE_USER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_USER</code> procedure creates a new application user. You need the <code class="codeph">CREATE USER</code> system privilege to create an application user.</p>
<p>You can use the <a href="parm_views.htm#GUID-97B36DFE-DA8F-41E3-9141-37C8B0E6E2ED">DBA_XS_USERS</a> data dictionary view to get a list of all application users.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">CREATE_USER ( 
  name            IN VARCHAR2,
  schema          IN VARCHAR2    := NULL,
  status          IN PLS_INTEGER := ACTIVE,
  start_date      IN TIMESTAMP WITH TIME ZONE  := NULL,
  end_date        IN TIMESTAMP WITH TIME ZONE  := NULL,
  guid            IN RAW         := NULL,
  external_source IN VARCHAR2    := NULL,
  description     IN VARCHAR2    := NULL); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-03D147A5-36A8-4ACE-BDEA-2D7A5D8F046D__GUID-BBCDF517-E2D6-40E4-B564-711F50BC6EDF">
<table class="cellalignment5205" summary="CREATE_USER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5271" id="d84027e17868">Parameter</th>
<th class="cellalignment5272" id="d84027e17871">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17876" headers="d84027e17868">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17876 d84027e17871">
<p>The name of the application user to be created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17884" headers="d84027e17868">
<p><code class="codeph">status</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17884 d84027e17871">
<p>The status of the user on creation. This can be one of the following values:</p>
<p><code class="codeph">ACTIVE</code>, <code class="codeph">INACTIVE</code>.</p>
<p>The default value is <code class="codeph">ACTIVE</code>.</p>
<p>The values <code class="codeph">PASSWORDEXPIRED</code> and <code class="codeph">LOCKED</code> are deprecated beginning with Oracle Database Release 12.1 (12.1.0.2).</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17912" headers="d84027e17868">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17912 d84027e17871">
<p>The database schema to be associated with the user. This is optional.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17920" headers="d84027e17868">
<p><code class="codeph">start_date</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17920 d84027e17871">
<p>The date from which the user account becomes effective. This is optional.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17928" headers="d84027e17868">
<p><code class="codeph">end_date</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17928 d84027e17871">
<p>The date on which the user account becomes ineffective. This is optional.</p>
<p>If an <code class="codeph">end_date</code> is specified, then the <code class="codeph">start_date</code> must also be specified.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17944" headers="d84027e17868">
<p><code class="codeph">guid</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17944 d84027e17871">
<p>GUID of the user. This is valid for external users only.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17952" headers="d84027e17868">
<p><code class="codeph">external_source</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17952 d84027e17871">
<p>Name of the system that is the source for this user. This is optional.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5273" id="d84027e17960" headers="d84027e17868">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5274" headers="d84027e17960 d84027e17871">
<p>A description for the user account. This is optional.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a user:</p>
<pre dir="ltr">BEGIN
 XS_PRINCIPAL.CREATE_USER(&#39;TEST1&#39;);
END;
</pre>
<p>The following example creates a user, and also specifies a schema and start date for the user:</p>
<pre dir="ltr">DECLARE 
st_date TIMESTAMP WITH TIME ZONE;
BEGIN
  st_date := TO_TIMESTAMP_TZ(&#39;2010-06-18 11:00:00 -5:00&#39;,&#39;YYYY-MM-DD HH:MI:SS
  TZH:TZM&#39;);
  SYS.XS_PRINCIPAL.CREATE_USER(name=&gt;&#39;u2&#39;,
                               schema=&gt;&#39;scott&#39;,
                               start_date=&gt;st_date);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99313"></a><a id="DBFSG99314"></a><a id="DBFSG99315"></a><a id="DBFSG99312"></a>
<div class="props_rev_3"><a id="GUID-0A1D0CBF-2A1B-4050-BE1D-4C11F83D2FDC"></a>
<h4 id="DBFSG-GUID-0A1D0CBF-2A1B-4050-BE1D-4C11F83D2FDC" class="sect4">CREATE_ROLE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_ROLE</code> procedure creates a new application role. You need the <code class="codeph">CREATE ROLE</code> system privilege to create a regular application role.</p>
<p>You can use the <a href="parm_views.htm#GUID-05DD81BD-98F4-4409-B42A-CA76EA4CED76">DBA_XS_ROLES</a> data dictionary view to get the list of application roles together with their attributes, like start date and end date</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">CREATE_ROLE (   name            IN VARCHAR2,
  enabled         IN BOOLEAN  := FALSE,
  start_date      IN TIMESTAMP WITH TIME ZONE := NULL,
  end_date        IN TIMESTAMP WITH TIME ZONE := NULL,
  guid            IN RAW      := NULL,
  external_source IN VARCHAR2 := NULL,
  description     IN VARCHAR2 := NULL); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-0A1D0CBF-2A1B-4050-BE1D-4C11F83D2FDC__GUID-6263C9AD-9610-440B-9A36-CE47D3F195BF">
<table class="cellalignment5205" summary="CREATE_ROLE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5223" id="d84027e18118">Parameter</th>
<th class="cellalignment5224" id="d84027e18121">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18126" headers="d84027e18118">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18126 d84027e18121">
<p>The name of the application role to be created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18134" headers="d84027e18118">
<p><code class="codeph">enabled</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18134 d84027e18121">
<p>Specifies whether the role is enabled on creation. The default value is <code class="codeph">FALSE</code>, which means that the role is disabled on creation.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18145" headers="d84027e18118">
<p><code class="codeph">start_date</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18145 d84027e18121">
<p>The date from which the role becomes effective. This is optional.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18153" headers="d84027e18118">
<p><code class="codeph">end_date</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18153 d84027e18121">
<p>The date on which the role becomes ineffective. This is optional.</p>
<p>If an <code class="codeph">end_date</code> is specified, then the <code class="codeph">start_date</code> must also be specified.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18169" headers="d84027e18118">
<p><code class="codeph">guid</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18169 d84027e18121">
<p>GUID of the role. This is applicable for external roles only.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18177" headers="d84027e18118">
<p><code class="codeph">external_source</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18177 d84027e18121">
<p>The name of the system that is the source for this role. This is optional.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5225" id="d84027e18185" headers="d84027e18118">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5226" headers="d84027e18185 d84027e18121">
<p>An optional description for the role.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates an application role, called <code class="codeph">hrmgr</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.CREATE_ROLE(&#39;hrmgr&#39;);
END;
</pre>
<p>The following example creates an application role called <code class="codeph">hrrep</code>. It also enables the role, and assigns the current date as start date for the role.</p>
<pre dir="ltr">DECLARE 
  st_date TIMESTAMP WITH TIME ZONE;
BEGIN
  st_date := SYSTIMESTAMP;
  SYS.XS_PRINCIPAL.CREATE_ROLE(name=&gt;&#39;hrrep&#39;,
                               enabled=&gt;true,
                               start_date=&gt;st_date);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99317"></a><a id="DBFSG99318"></a><a id="DBFSG99319"></a><a id="DBFSG99316"></a>
<div class="props_rev_3"><a id="GUID-5D3C1B51-E0D8-45F0-B9E2-40EBE4C1F3C5"></a>
<h4 id="DBFSG-GUID-5D3C1B51-E0D8-45F0-B9E2-40EBE4C1F3C5" class="sect4">CREATE_DYNAMIC_ROLE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_DYNAMIC_ROLE</code> procedure creates a new dynamic application role. Dynamic application roles can be dynamically enabled or disabled by an application, based on the criteria defined by the application. You need the <code class="codeph">CREATE ROLE</code> system privilege to create an dynamic application role.</p>
<p>You can use the <a href="parm_views.htm#GUID-3F8717CD-401D-4264-9739-5612D3D82D32">DBA_XS_DYNAMIC_ROLES</a> data dictionary view to get a list of all dynamic application roles together with their attributes, like duration.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">CREATE_DYNAMIC_ROLE (
  name        IN VARCHAR2,
  duration    IN PLS_INTEGER := NULL, 
  scope       IN PLS_INTEGER := XS_PRINCIPAL.SESSION_SCOPE,
  description IN VARCHAR2    := NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5D3C1B51-E0D8-45F0-B9E2-40EBE4C1F3C5__GUID-F0EDC48D-C7C5-4D60-9997-B997A406FE88">
<table class="cellalignment5205" summary="CREATE_DYNAMIC_ROLE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e18350">Parameter</th>
<th class="cellalignment5216" id="d84027e18353">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18358" headers="d84027e18350">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18358 d84027e18353">
<p>The name of the dynamic application role to be created.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18366" headers="d84027e18350">
<p><code class="codeph">duration</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18366 d84027e18353">
<p>The duration (in minutes) of the dynamic application role. This is an optional attribute.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18374" headers="d84027e18350">
<p><code class="codeph">scope</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18374 d84027e18353">
<p>The scope attribute of the dynamic application role. The possible values are <code class="codeph">SESSION_SCOPE</code> and <code class="codeph">REQUEST_SCOPE</code>. The default value is <code class="codeph">XS_PRINCIPAL.SESSION_SCOPE.</code></p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18390" headers="d84027e18350">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18390 d84027e18353">
<p>An optional description for the dynamic application role.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a dynamic application role, called <code class="codeph">sslrole</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.CREATE_DYNAMIC_ROLE(&#39;sslrole&#39;);
END;
</pre>
<p>The following example creates a dynamic application role called <code class="codeph">reprole</code>. It also specifies a duration of 100 minutes for the role, and chooses the request scope for the role.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.CREATE_DYNAMIC_ROLE(name=&gt;&#39;reprole&#39;,
                                       duration=&gt;100,
                                       scope=&gt;XS_PRINCIPAL.REQUEST_SCOPE);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99321"></a><a id="DBFSG99322"></a><a id="DBFSG99323"></a><a id="DBFSG99320"></a>
<div class="props_rev_3"><a id="GUID-2DF77823-B22F-4B0A-8D57-92066B3235F5"></a>
<h4 id="DBFSG-GUID-2DF77823-B22F-4B0A-8D57-92066B3235F5" class="sect4">GRANT_ROLES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">GRANT_ROLES</code> procedure grants one or more application roles to an application principal. You need the <code class="codeph">GRANT ANY ROLE</code> system privilege to grant application roles.</p>
<p>You can use the <a href="parm_views.htm#GUID-FCD4BCA4-1D7A-417F-8D5D-9B1B41E065FD">DBA_XS_ROLE_GRANTS</a> data dictionary view to get the list of all role grants together with their details, like start date and end date.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">GRANT_ROLES (
grantee       IN VARCHAR2,
role          IN VARCHAR2,
start_date    IN TIMESTAMP WITH TIME ZONE:= NULL,
end_date      IN TIMESTAMP WITH TIME ZONE:= NULL,);

GRANT_ROLES (
grantee   IN VARCHAR2,
role_list IN XS$ROLE_GRANT_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-2DF77823-B22F-4B0A-8D57-92066B3235F5__GUID-96572A5B-3C40-4005-B37A-787B90AF5BD9">
<table class="cellalignment5205" summary="GRANT_ROLES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e18554">Parameter</th>
<th class="cellalignment5216" id="d84027e18557">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18562" headers="d84027e18554">
<p><code class="codeph">grantee</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18562 d84027e18557">
<p>The name of the principal to which the role is granted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18570" headers="d84027e18554">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18570 d84027e18557">
<p>The name of the role to be granted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18578" headers="d84027e18554">
<p><code class="codeph">role_list</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18578 d84027e18557">
<p>The list of roles to be granted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18586" headers="d84027e18554">
<p><code class="codeph">start_date</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18586 d84027e18557">
<p>The date on which the grant takes effect. This is an optional parameter.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18594" headers="d84027e18554">
<p><code class="codeph">end_date</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18594 d84027e18557">
<p>The date until which the grant is in effect. This is an optional parameter.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example grants the <code class="codeph">HRREP</code> role to user <code class="codeph">SMAVRIS</code> with a start date and an end date specified:</p>
<pre dir="ltr">DECLARE 
  st_date TIMESTAMP WITH TIME ZONE;
  end_date TIMESTAMP WITH TIME ZONE;
BEGIN
  st_date := TO_TIMESTAMP_TZ(&#39;2010-06-18 11:00:00 -5:00&#39;,&#39;YYYY-MM-DD HH:MI:SS
                              TZH:TZM&#39;);
  end_date := TO_TIMESTAMP_Tz(&#39;2011-06-18 11:00:00 -5:00&#39;,&#39;YYYY-MM-DD HH:MI:SS
                               TZH:TZM&#39;);
  SYS.XS_PRINCIPAL.GRANT_ROLES(&#39;SMAVRIS&#39;, &#39;HRREP&#39;, st_date, end_date);
END;
</pre>
<p>The following example grants the <code class="codeph">HRREP</code> and <code class="codeph">HRMGR</code> roles to user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">DECLARE 
  rg_list XS$ROLE_GRANT_LIST; 
BEGIN
  rg_list := XS$ROLE_GRANT_LIST(XS$ROLE_GRANT_TYPE(&#39;HRREP&#39;),
                                XS$ROLE_GRANT_TYPE(&#39;HRMGR&#39;));
 
  SYS.XS_PRINCIPAL.GRANT_ROLES(&#39;SMAVRIS&#39;, rg_list);
END;
</pre>
<p>The following example shows how to grant the role <code class="codeph">XSCONNECT</code> to user <code class="codeph">XSUSER</code>. This grant will allow user <code class="codeph"><code class="codeph">XSUSER</code></code> using its password to connect to a database.</p>
<pre dir="ltr">EXEC SYS.XS_PRINCIPAL.GRANT_ROLES(&#39;XSUSER&#39;, &#39;XSCONNECT&#39;);
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99944"></a><a id="DBFSG99945"></a><a id="DBFSG99946"></a><a id="DBFSG99943"></a>
<div class="props_rev_3"><a id="GUID-58221815-3052-4727-8716-4CE33AB29565"></a>
<h4 id="DBFSG-GUID-58221815-3052-4727-8716-4CE33AB29565" class="sect4">REVOKE_ROLES Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e18753" class="indexterm-anchor"></a><code class="codeph">REVOKE_ROLES</code> procedure revokes the specified role(s) from the specified grantee. If no roles are specified, then all application roles are revoked from the grantee.You need the <code class="codeph">GRANT ANY ROLE</code> system privilege to grant or revoke roles.</p>
<p>You can use the <a href="parm_views.htm#GUID-FCD4BCA4-1D7A-417F-8D5D-9B1B41E065FD">DBA_XS_ROLE_GRANTS</a> data dictionary view to get the list of all role grants together with their details, like start date and end date.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">REVOKE_ROLES (
  grantee   IN VARCHAR2,
  role      IN VARCHAR2);

REVOKE_ROLES (
  grantee   IN VARCHAR2,
  role_list IN XS$NAME_LIST); 

REVOKE_ROLES (
  grantee IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-58221815-3052-4727-8716-4CE33AB29565__GUID-27842F5F-782E-4EE4-952F-C285AAD6690E">
<table class="cellalignment5205" summary="REVOKE_ROLES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e18786">Parameter</th>
<th class="cellalignment5216" id="d84027e18789">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18794" headers="d84027e18786">
<p><code class="codeph">grantee</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18794 d84027e18789">
<p>The application principal from whom the role(s) are to be revoked.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18802" headers="d84027e18786">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18802 d84027e18789">
<p>The name of the application role that is to be revoked.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18810" headers="d84027e18786">
<p><code class="codeph">role_list</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18810 d84027e18789">
<p>The list of role names that are to be revoked.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example revokes the <code class="codeph">HRREP</code> role from user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">BEGIN
  XS_PRINCIPAL.REVOKE_ROLES(&#39;SMAVRIS&#39;,&#39;HRREP&#39;);
END;
</pre>
<p>The following example revokes the <code class="codeph">HRREP</code> and <code class="codeph">HRMGR</code> roles from user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">DECLARE
  role_list XS$NAME_LIST; 
BEGIN
  role_list := XS$NAME_LIST(&#39;HRREP&#39;,&#39;HRMGR&#39;);
  SYS.XS_PRINCIPAL.REVOKE_ROLES(&#39;SMAVRIS&#39;, role_list);
END;
</pre>
<p>The following example revokes all granted roles from user SMAVRIS:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.REVOKE_ROLES(&#39;SMAVRIS&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99948"></a><a id="DBFSG99949"></a><a id="DBFSG99950"></a><a id="DBFSG99947"></a>
<div class="props_rev_3"><a id="GUID-3B69AF6F-57AF-425C-B46E-6148AD92B39A"></a>
<h4 id="DBFSG-GUID-3B69AF6F-57AF-425C-B46E-6148AD92B39A" class="sect4">ADD_PROXY_USER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ADD_PROXY_USER</code> adds a target user for the specified application user. This allows the application user to proxy as the target user. There are two signatures for this procedure. The first signature allows you to specify a subset of roles of the target user using the <code class="codeph">target_roles</code> parameter that are to be assigned to the proxy user. For the second signature there is no <code class="codeph">target_roles</code> parameter, so all roles of the target user are assigned to the proxy user.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to add or remove a proxy user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ADD_PROXY_USER (
  target_user  IN VARCHAR2,
  proxy_user   IN VARCHAR2,
  target_roles IN XS$NAME_LIST);

ADD_PROXY_USER (
  target_user  IN VARCHAR2,
  proxy_user   IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-3B69AF6F-57AF-425C-B46E-6148AD92B39A__GUID-490881E3-6FED-4483-A352-ED3EBA3487FD">
<table class="cellalignment5205" summary="ADD_PROXY_USER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e18990">Parameter</th>
<th class="cellalignment5216" id="d84027e18993">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e18998" headers="d84027e18990">
<p><code class="codeph">target_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e18998 d84027e18993">
<p>The name of the target application user that can be proxied to.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19006" headers="d84027e18990">
<p><code class="codeph">proxy_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19006 d84027e18993">
<p>The name of the proxy application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19014" headers="d84027e18990">
<p><code class="codeph">target_roles</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19014 d84027e18993">
<p>A list of target user roles that can be proxied by the proxy user. This parameter is mandatory. If you pass an explicit <code class="codeph">NULL</code> value, then this would be a case of configuring the proxy user without any role of the target user; otherwise, the <code class="codeph">proxy_user</code> parameter uses the value you specify for the <code class="codeph">target_roles</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables user <code class="codeph">DJONES</code> to proxy as target user <code class="codeph">SMAVRIS</code>. The target roles granted to <code class="codeph">DJONES</code> are <code class="codeph">HRREP</code> and <code class="codeph">HRMGR</code>.</p>
<pre dir="ltr">DECLARE
  pxy_roles XS$NAME_LIST; 
BEGIN
  pxy_roles := XS$NAME_LIST(&#39;HRREP&#39;,&#39;HRMGR&#39;);
  SYS.XS_PRINCIPAL.ADD_PROXY_USER(&#39;SMAVRIS&#39;,&#39;DJONES&#39;, pxy_roles);
END;
</pre>
<p>The following example passes an explicit <code class="codeph">NULL</code> value for the target role; in other words, it assigns no roles of the target user &#39;SMAVRIS&#39; to the proxy user &#39;DJONES&#39;.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.ADD_PROXY_USER(&#39;SMAVRIS&#39;,&#39;DJONES&#39;, NULL);
END;
</pre>
<p>The following example assigns all roles of target user &#39;SMAVRIS&#39; to proxy user &#39;DJONES&#39;.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.ADD_PROXY_USER(&#39;SMAVRIS&#39;,&#39;DJONES&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99952"></a><a id="DBFSG99953"></a><a id="DBFSG99954"></a><a id="DBFSG99951"></a>
<div class="props_rev_3"><a id="GUID-DC100E64-4F75-4261-9055-36365D99ED0A"></a>
<h4 id="DBFSG-GUID-DC100E64-4F75-4261-9055-36365D99ED0A" class="sect4">REMOVE_PROXY_USERS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_PROXY_USERS</code> procedure disassociates one or all proxy users for a target application user. The associated proxy roles are automatically removed for the proxy users.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to add or remove a proxy user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">REMOVE_PROXY_USERS (
  target_user  IN VARCHAR2); 

REMOVE_PROXY_USERS (
  target_user IN VARCHAR2,
  proxy_user  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-DC100E64-4F75-4261-9055-36365D99ED0A__GUID-3720BFA6-3EF9-4459-8E92-8F794F425A0D">
<table class="cellalignment5205" summary="REMOVE_PROXY_USERS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e19199">Parameter</th>
<th class="cellalignment5216" id="d84027e19202">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19207" headers="d84027e19199">
<p><code class="codeph">target_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19207 d84027e19202">
<p>The target application user whose proxies are to be disassociated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19215" headers="d84027e19199">
<p><code class="codeph">proxy_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19215 d84027e19202">
<p>The proxy application user that needs to be disassociated from the target user.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes all proxy users for target user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.REMOVE_PROXY_USERS(&#39;SMAVRIS&#39;);
END;
</pre>
<p>The following example disassociates the proxy user <code class="codeph">DJONES</code> from the target user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.REMOVE_PROXY_USERS(&#39;SMAVRIS&#39;,&#39;DJONES&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG671"></a><a id="DBFSG672"></a><a id="DBFSG673"></a><a id="DBFSG670"></a>
<div class="props_rev_3"><a id="GUID-52BC2129-A0C2-49C6-9DE7-1712D310EAFA"></a>
<h4 id="DBFSG-GUID-52BC2129-A0C2-49C6-9DE7-1712D310EAFA" class="sect4">ADD_PROXY_TO_DBUSER</h4>
<div>
<div class="section">
<p>The <code class="codeph">ADD_PROXY_TO_DBUSER</code> adds the specified target proxy application user to the specified database user. The application user must be a direct logon user. This allows the application user to proxy as the target database user. By default, all roles assigned to the target user can be used by the proxy user. Similar to Oracle Database, the default roles of the target database users would be enabled after connection. Other roles assigned to the target database user can be set by using the <code class="codeph">SET ROLE</code> statement.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to add a proxy user to a database user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ADD_PROXY_TO_DBUSER (
  database_user  IN VARCHAR2,
  proxy_user     IN VARCHAR2,
  is_external    IN BOOLEAN := FALSE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-52BC2129-A0C2-49C6-9DE7-1712D310EAFA__GUID-02B8FBA0-E278-425C-A91C-378AAA94B534">
<table class="cellalignment5205" summary="ADD_PROXY_TO_DBUSER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e19381">Parameter</th>
<th class="cellalignment5216" id="d84027e19384">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19389" headers="d84027e19381">
<p><code class="codeph">database_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19389 d84027e19384">
<p>The name of the target database user that can be proxied to.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19397" headers="d84027e19381">
<p><code class="codeph">proxy_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19397 d84027e19384">
<p>The name of the proxy application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19405" headers="d84027e19381">
<p><code class="codeph">is_external</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19405 d84027e19384">
<p>The parameter to indicate whether the user is an external user or a regular Real Application Security application user.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables application user <code class="codeph">DJONES</code> to proxy as target database user <code class="codeph">SMAVRIS</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.ADD_PROXY_TO_DBUSER(&#39;SMAVRIS&#39;,&#39;DJONES&#39;, TRUE);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG675"></a><a id="DBFSG676"></a><a id="DBFSG677"></a><a id="DBFSG674"></a>
<div class="props_rev_3"><a id="GUID-5CC1A868-11C6-4649-8C72-9C351FD42895"></a>
<h4 id="DBFSG-GUID-5CC1A868-11C6-4649-8C72-9C351FD42895" class="sect4">REMOVE_PROXY_FROM_DBUSER</h4>
<div>
<div class="section">
<p>The <a id="d84027e19537" class="indexterm-anchor"></a><code class="codeph">REMOVE_PROXY_FROM_DBUSER</code> procedure disassociates a proxy application user from a database user. The associated proxy roles are automatically removed from the application user.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to remove a proxy user from a database user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">REMOVE_PROXY_FROM_DBUSER (
  database_user IN VARCHAR2,
  proxy_user    IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-5CC1A868-11C6-4649-8C72-9C351FD42895__GUID-38779423-3EE8-4D76-92AC-3392CD68034E">
<table class="cellalignment5205" summary="REMOVE_PROXY_FROM_DBUSER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e19566">Parameter</th>
<th class="cellalignment5216" id="d84027e19569">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19574" headers="d84027e19566">
<p><code class="codeph">database_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19574 d84027e19569">
<p>The target database user whose proxies are to be disassociated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19582" headers="d84027e19566">
<p><code class="codeph">proxy_user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19582 d84027e19569">
<p>The proxy application user that needs to be disassociated from the target database user.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example disassociates the proxy user <code class="codeph">DJONES</code> from the target database user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.REMOVE_PROXY_FROM_DBUSER(&#39;SMAVRIS&#39;,&#39;DJONES&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99960"></a><a id="DBFSG99961"></a><a id="DBFSG99962"></a><a id="DBFSG99959"></a>
<div class="props_rev_3"><a id="GUID-F7CB8D99-9396-43A8-A4E7-CEC9E52D38DC"></a>
<h4 id="DBFSG-GUID-F7CB8D99-9396-43A8-A4E7-CEC9E52D38DC" class="sect4">SET_EFFECTIVE_DATES Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e19713" class="indexterm-anchor"></a><code class="codeph">SET_EFFECTIVE_DATES</code> procedure sets or modifies the effective dates for an application user or role. If the <code class="codeph">start_date</code> and <code class="codeph">end_date</code> values are specified as <code class="codeph">NULL</code> by default, then the application user is not currently effective, so the session for the particular application user cannot be created.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to run this procedure for an application user. You need the <code class="codeph">ALTER ANY ROLE</code> system privilege to run this procedure for an application role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_EFFECTIVE_DATES (
  principal         IN VARCHAR2,
  start_date        IN TIMESTAMP WITH TIME ZONE:= NULL,
  end_date          IN TIMESTAMP WITH TIME ZONE:= NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-F7CB8D99-9396-43A8-A4E7-CEC9E52D38DC__GUID-A1B162B9-B675-4429-B157-4C49352FDCE6">
<table class="cellalignment5205" summary="SET_EFFECTIVE_DATES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e19754">Parameter</th>
<th class="cellalignment5216" id="d84027e19757">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19762" headers="d84027e19754">
<p><code class="codeph">principal</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19762 d84027e19757">
<p>The name of the application user or role for which effective dates are to be set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19770" headers="d84027e19754">
<p><code class="codeph">start_date</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19770 d84027e19757">
<p>The start date of the effective dates period.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19778" headers="d84027e19754">
<p><code class="codeph">end_date</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19778 d84027e19757">
<p>The end date of the effective dates period.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the effective dates for user <code class="codeph">DJONES</code>.</p>
<pre dir="ltr">DECLARE 
  st_date TIMESTAMP WITH TIME ZONE;
  end_date TIMESTAMP WITH TIME ZONE;
BEGIN
  st_date := TO_TIMESTAMP_TZ(&#39;2010-06-18 11:00:00 -5:00&#39;,&#39;YYYY-MM-DD HH:MI:SS
                              TZH:TZM&#39;);
  end_date := TO_TIMESTAMP_Tz(&#39;2011-06-18 11:00:00 -5:00&#39;,&#39;YYYY-MM-DD HH:MI:SS
                               TZH:TZM&#39;);
  SYS.XS_PRINCIPAL.SET_EFFECTIVE_DATES(principal=&gt;&#39;DJONES&#39;, 
                                       start_date=&gt;st_date,end_date=&gt;end_date);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99964"></a><a id="DBFSG99965"></a><a id="DBFSG99966"></a><a id="DBFSG99963"></a>
<div class="props_rev_3"><a id="GUID-6069CD83-3AE1-4167-B83B-97A4E4FC5F8D"></a>
<h4 id="DBFSG-GUID-6069CD83-3AE1-4167-B83B-97A4E4FC5F8D" class="sect4">SET_DYNAMIC_ROLE_DURATION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_DYNAMIC_ROLE_DURATION</code> procedure sets or modifies the duration for a dynamic application role. The duration is specified in minutes.</p>
<p>You need the <code class="codeph">ALTER ANY ROLE</code> system privilege to modify a role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_DYNAMIC_ROLE_DURATION (
  role      IN VARCHAR2,
  duration  IN PLS_INTEGER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-6069CD83-3AE1-4167-B83B-97A4E4FC5F8D__GUID-21A2ACD8-3544-480F-A1C1-99A633D62C97">
<table class="cellalignment5205" summary="SET_DYNAMIC_ROLE_DURATION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e19931">Parameter</th>
<th class="cellalignment5216" id="d84027e19934">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19939" headers="d84027e19931">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19939 d84027e19934">
<p>The name of the dynamic application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e19947" headers="d84027e19931">
<p><code class="codeph">duration</code></p>
</td>
<td class="cellalignment5218" headers="d84027e19947 d84027e19934">
<p>The duration of the dynamic application role in minutes. This cannot be a negative value.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the duration of the <code class="codeph">reprole</code> dynamic application role to 60 minutes.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_DYNAMIC_ROLE_DURATION(&#39;reprole&#39;,60);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99968"></a><a id="DBFSG99969"></a><a id="DBFSG99970"></a><a id="DBFSG99967"></a>
<div class="props_rev_3"><a id="GUID-CB7AA70A-6E66-478A-ACF8-3BD93C38E59E"></a>
<h4 id="DBFSG-GUID-CB7AA70A-6E66-478A-ACF8-3BD93C38E59E" class="sect4">SET_DYNAMIC_ROLE_SCOPE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_DYNAMIC_ROLE_SCOPE</code> procedure sets or modifies the scope of a dynamic application role. The session (<code class="codeph">SESSION_SCOPE</code>) or request (<code class="codeph">REQUEST_SCOPE</code>) scopes can be chosen.</p>
<p>You need the <code class="codeph">ALTER ANY ROLE</code> system privilege to modify a role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_DYNAMIC_ROLE_SCOPE (
  role      IN VARCHAR2,
  scope     IN PLS_INTEGER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CB7AA70A-6E66-478A-ACF8-3BD93C38E59E__GUID-54F01E77-2399-49E8-A126-794B55DB9321">
<table class="cellalignment5205" summary="SET_DYNAMIC_ROLE_SCOPE parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e20107">Parameter</th>
<th class="cellalignment5216" id="d84027e20110">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20115" headers="d84027e20107">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20115 d84027e20110">
<p>The name of the dynamic application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20123" headers="d84027e20107">
<p><code class="codeph">scope</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20123 d84027e20110">
<p>The scope of the dynamic application role to be set. The allowed values are <code class="codeph">XS_PRINCIPAL.REQUEST_SCOPE</code> and <code class="codeph">XS_PRINCIPAL.SESSION_SCOPE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the scope of the <code class="codeph">reprole</code> dynamic application role to request scope:</p>
<pre dir="ltr">begin
  SYS.XS_PRINCIPAL.SET_DYNAMIC_ROLE_SCOPE(&#39;reprole&#39;,XS_PRINCIPAL.REQUEST_SCOPE);
end;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99972"></a><a id="DBFSG99973"></a><a id="DBFSG99974"></a><a id="DBFSG99971"></a>
<div class="props_rev_3"><a id="GUID-4D50076C-E67B-4FF2-9030-4405DC56D9A5"></a>
<h4 id="DBFSG-GUID-4D50076C-E67B-4FF2-9030-4405DC56D9A5" class="sect4">ENABLE_BY_DEFAULT Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e20257" class="indexterm-anchor"></a><code class="codeph">ENABLE_BY_DEFAULT</code> procedure enables or disables a regular application role.</p>
<p>If enabled, then the application role is automatically enabled for the principal to which it is granted. If disabled, then the privileges associated with the application role are not enabled even if the application role is granted to a principal.</p>
<p>You need the <code class="codeph">ALTER ANY ROLE</code> system privilege to modify an application role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ENABLE_BY_DEFAULT ( 
  role       IN VARCHAR2,
  enabled    IN BOOLEAN := TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-4D50076C-E67B-4FF2-9030-4405DC56D9A5__GUID-53E56608-DC45-44CB-960A-A6BBACBD0836">
<table class="cellalignment5205" summary="ENABLE_BY_DEFAULT parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e20288">Parameter</th>
<th class="cellalignment5216" id="d84027e20291">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20296" headers="d84027e20288">
<p><code class="codeph">role</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20296 d84027e20291">
<p>The name of the regular application role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20304" headers="d84027e20288">
<p><code class="codeph">enabled</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20304 d84027e20291">
<p>The <code class="codeph">enabled</code> attribute of the application role. Setting this to <code class="codeph">TRUE</code> marks the application role as being enabled by default. The default value is <code class="codeph">TRUE</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the <code class="codeph">enabled</code> attribute for the <code class="codeph">HRREP</code> application role to <code class="codeph">TRUE</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.ENABLE_BY_DEFAULT(&#39;HRREP&#39;,TRUE);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99976"></a><a id="DBFSG99977"></a><a id="DBFSG99978"></a><a id="DBFSG99975"></a>
<div class="props_rev_3"><a id="GUID-FD6563D5-AC12-411A-9D4D-29A0C00683D1"></a>
<h4 id="DBFSG-GUID-FD6563D5-AC12-411A-9D4D-29A0C00683D1" class="sect4">ENABLE_ROLES_BY_DEFAULT Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e20447" class="indexterm-anchor"></a><code class="codeph">ENABLE_ROLES_BY_DEFAULT</code> procedure enables or disables all application roles that have been directly granted to an application user.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to run this procedure for an application user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">ENABLE_ROLES_BY_DEFAULT (
  user       IN VARCHAR2,
  enabled    IN BOOLEAN := TRUE);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-FD6563D5-AC12-411A-9D4D-29A0C00683D1__GUID-31F47C7E-A721-4161-B496-06666C1F59F0">
<table class="cellalignment5205" summary="ENABLE_ROLES_BY_DEFAULT parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e20476">Parameter</th>
<th class="cellalignment5216" id="d84027e20479">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20484" headers="d84027e20476">
<p><code class="codeph">user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20484 d84027e20479">
<p>The name of the application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20492" headers="d84027e20476">
<p><code class="codeph">enabled</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20492 d84027e20479">
<p>The <code class="codeph">enabled</code> attribute for all application roles that have been directly granted to the application user.</p>
<p>Setting the enabled attribute to <code class="codeph">TRUE</code> enables all directly granted application roles for the application user. The default value is <code class="codeph">TRUE</code>.</p>
<p>Setting the enabled attribute to <code class="codeph">FALSE</code> disables all directly granted application roles for the application user.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example enables all directly granted roles for application user <code class="codeph">SMAVRIS</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.ENABLE_ROLES_BY_DEFAULT(&#39;SMAVRIS&#39;,TRUE);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99980"></a><a id="DBFSG99981"></a><a id="DBFSG99982"></a><a id="DBFSG99979"></a>
<div class="props_rev_3"><a id="GUID-8FC52A23-35DA-4A50-8149-6850F56D6467"></a>
<h4 id="DBFSG-GUID-8FC52A23-35DA-4A50-8149-6850F56D6467" class="sect4">SET_USER_SCHEMA Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_USER_SCHEMA</code> procedure sets the database schema for an application user.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to run this procedure for an application user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_USER_SCHEMA (
  user        IN VARCHAR2,
  schema      IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8FC52A23-35DA-4A50-8149-6850F56D6467__GUID-3F83BB9B-7CEA-4259-8A4F-0E0CA0363606">
<table class="cellalignment5205" summary="SET_USER_SCHEMA parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e20662">Parameter</th>
<th class="cellalignment5216" id="d84027e20665">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20670" headers="d84027e20662">
<p><code class="codeph">user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20670 d84027e20665">
<p>The name of the application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20678" headers="d84027e20662">
<p><code class="codeph">schema</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20678 d84027e20665">
<p>The name of the database schema to be associated with the user. Setting this to <code class="codeph">NULL</code> removes any schema association.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example associates the <code class="codeph">HR</code> schema with user <code class="codeph">DJONES</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_USER_SCHEMA(&#39;DJONES&#39;,&#39;HR&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99984"></a><a id="DBFSG99985"></a><a id="DBFSG99986"></a><a id="DBFSG99983"></a>
<div class="props_rev_3"><a id="GUID-054787C6-120D-4567-8F0E-404DBB408F7B"></a>
<h4 id="DBFSG-GUID-054787C6-120D-4567-8F0E-404DBB408F7B" class="sect4">SET_GUID Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_GUID</code> procedure sets the GUID for a principal. The principal must be an external user or role, and the current GUID must be <code class="codeph">NULL</code>.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to run this procedure for an application user. You need the <code class="codeph">ALTER ANY ROLE</code> system privilege to run this procedure for an application role.</p>
<div class="infobox-note" id="GUID-054787C6-120D-4567-8F0E-404DBB408F7B__GUID-B5CBA61B-A341-4BAC-BA10-E1527AD21593">
<p class="notep1">Note:</p>
<p>The <code class="codeph">external_source</code> attribute for the user must have been set for SET_GUID to work.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_GUID (
  principal IN VARCHAR2,
  guid      IN RAW);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-054787C6-120D-4567-8F0E-404DBB408F7B__GUID-04C1867D-6FB7-426A-8CDA-3B283356AA2B">
<table class="cellalignment5205" summary="SET_GUID parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e20849">Parameter</th>
<th class="cellalignment5216" id="d84027e20852">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20857" headers="d84027e20849">
<p><code class="codeph">principal</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20857 d84027e20852">
<p>The name of the external user or role.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e20865" headers="d84027e20849">
<p><code class="codeph">guid</code></p>
</td>
<td class="cellalignment5218" headers="d84027e20865 d84027e20852">
<p>The GUID for the external user or role.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a GUID for user <code class="codeph">Alex</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_GUID(&#39;ALEX&#39;,&#39;7b6cb3a98f8a4e20ac31a37419cc7fa3&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG803"></a><a id="DBFSG804"></a><a id="DBFSG805"></a><a id="DBFSG802"></a>
<div class="props_rev_3"><a id="GUID-610D3138-94AF-42FD-B738-B0E86EB7D07F"></a>
<h4 id="DBFSG-GUID-610D3138-94AF-42FD-B738-B0E86EB7D07F" class="sect4">SET_PROFILE Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_PROFILE</code> procedure sets the application user&#39;s profile. The profile is a set of resource limits and password parameters that restrict database usage and database instance resources for a Real Application Security application user. Both the application user and the profile must be existing entities.</p>
<p>The user executing this procedure must have the <code class="codeph">ALTER_USER</code> privilege.</p>
<p>If a profile that is assigned to an application user is dropped using the cascade option, then the default profile would automatically become activated for that user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_PROFILE (
  user     IN VARCHAR2,
  profile  IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-610D3138-94AF-42FD-B738-B0E86EB7D07F__GUID-AA9A7837-8E14-47E9-A954-B18F4CA7686C">
<table class="cellalignment5205" summary="SET_GUID parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e21020">Parameter</th>
<th class="cellalignment5216" id="d84027e21023">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21028" headers="d84027e21020">
<p><code class="codeph">user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21028 d84027e21023">
<p>The name of the Real Application Security application user. This must be an existing application user.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21036" headers="d84027e21020">
<p><code class="codeph">profile</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21036 d84027e21023">
<p>The name of the profile.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a profile named <code class="codeph">prof</code> and then sets the profile named <code class="codeph">prof</code> to an application user named <code class="codeph">xsuser</code>.</p>
<pre dir="ltr">CREATE PROFILE prof LIMIT PASSWORD_REUSE_TIME 1/1440 PASSWORD_REUSE_MAX 3 PASSWORD_VERIFY_FUNCTION Verify_Pass;

BEGIN
  SYS.XS_PRINCIPAL.SET_PROFILE(&#39;xsuser&#39;,&#39;prof&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99988"></a><a id="DBFSG99989"></a><a id="DBFSG99990"></a><a id="DBFSG99987"></a>
<div class="props_rev_3"><a id="GUID-D771034A-250B-452C-B475-340143281305"></a>
<h4 id="DBFSG-GUID-D771034A-250B-452C-B475-340143281305" class="sect4">SET_USER_STATUS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_USER_STATUS</code> procedure sets or modifies the status of an application user account.</p>
<p>You need the <code class="codeph">ALTER_USER</code> privilege to run this procedure for an application user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_USER_STATUS (
  user        IN VARCHAR2,
  status      IN PLS_INTEGER);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D771034A-250B-452C-B475-340143281305__GUID-B4FC22E2-DC4B-4B2A-BC6B-1BC7FA3F81C1">
<table class="cellalignment5205" summary="SET_USER_STATUS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e21196">Parameter</th>
<th class="cellalignment5216" id="d84027e21199">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21204" headers="d84027e21196">
<p><code class="codeph">user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21204 d84027e21199">
<p>The name of the user account whose status needs to be set or updated.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21212" headers="d84027e21196">
<p><code class="codeph">status</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21212 d84027e21199">
<p>The new status of the Real Application Security user account. The status values can be divided into several classes:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ACTIVE</code> and <code class="codeph">INACTIVE</code> - These two account status values will affect the user account&#39;s ability to create and attach to an application session.</p>
<p>When set to <code class="codeph">ACTIVE</code>, it allows the application user to use a direct login account to log into the database with a valid password. The application user is allowed to create and attach to an application session if the account has the required application privileges.</p>
<p>When set to <code class="codeph">INACTIVE</code>, the application user cannot use a direct login account to log into the database even with a valid password and can not create and attach to an application session.</p>
</li>
<li>
<p><code class="codeph">UNLOCK</code>, <code class="codeph">LOCKED</code>, or <code class="codeph">EXPIRED</code> - These status values will be checked only for the direct login Real Application Security application user.</p>
<p>When set to <code class="codeph">UNLOCK</code>, it opens the application user account when the account is <code class="codeph">LOCKED</code> and allows the application user to use a direct login account to log into the database with a valid password.</p>
<p>When set to <code class="codeph">LOCKED</code>, it locks the account of the application user. This means user connections using a direct login account will not be allowed even with a valid password. Provided that the user account is <code class="codeph">ACTIVE</code>, a direct login will not succeed when the account is locked, but the user can create and attach to an application session.</p>
<p>When set to <code class="codeph">EXPIRED</code>, it expires the account of the application user. This means user connections using a direct login account will be allowed for valid passwords; however, the password must be changed at the time of logon.</p>
</li>
<li>
<p><code class="codeph">PASSWORDEXPIRED</code> (Deprecated) - This status value is deprecated beginning with Release 1 (12.1.0.2).</p>
</li>
</ul>
<p>If you try to pass any other value for the parameter <code class="codeph">status</code>, an <code class="codeph">ORA-46152: XS Security - invalid user status specified</code> error is returned.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets the user status to <code class="codeph">LOCKED</code> for user <code class="codeph">DJONES</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_USER_STATUS(&#39;DJONES&#39;,XS_PRINCIPAL.LOCKED);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99992"></a><a id="DBFSG99993"></a><a id="DBFSG99994"></a><a id="DBFSG99991"></a>
<div class="props_rev_3"><a id="GUID-AB88CD3F-89B0-4C25-A404-D5C8D7FEB1AD"></a>
<h4 id="DBFSG-GUID-AB88CD3F-89B0-4C25-A404-D5C8D7FEB1AD" class="sect4">SET_PASSWORD Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_PASSWORD</code> procedure sets or modifies the password for an application user account. When you use the <code class="codeph">SET_PASSWORD</code> procedure, it creates a verifier for you based on the password and the <code class="codeph">type</code> parameter and then inserts the verifier and the value of the <code class="codeph">type</code> parameter into the dictionary table.</p>
<p>A direct login Real Application Security user can change his or her own password by providing its value using the <code class="codeph">oldpass</code> parameter. If value of the old password is incorrect, then the failed login count is incremented with each attempt, returning an <code class="codeph">ORA-28008: invalid old password</code> error. The new password is not set until the old supplied password is correct.</p>
<p>You need the <code class="codeph">ALTER_USER</code> privilege to run this procedure for an application user or if you are changing the password of other Real Application Security users.</p>
<p>Native Real Application Security users synchronized from external ID stores are not allowed to change their own password. These users must change their password in the originating ID store.</p>
<p>The <code class="codeph">SET_PASSWORD</code> operation and the SQL*Plus <code class="codeph">PASSWORD</code> command are both blocked on the logical standby database.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_PASSWORD (
  user      IN VARCHAR2,
  password  IN VARCHAR2,
  type      IN PLS_INTEGER := XS_SHA512,
  opassword IN VARCHAR2 :=NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-AB88CD3F-89B0-4C25-A404-D5C8D7FEB1AD__GUID-FB4DBFAF-CD9C-4A72-A497-3308B4F465D8">
<table class="cellalignment5205" summary="SET_PASSWORD parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e21459">Parameter</th>
<th class="cellalignment5216" id="d84027e21462">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21467" headers="d84027e21459">
<p><code class="codeph">user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21467 d84027e21462">
<p>The name of the application user account for which the password is to be set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21475" headers="d84027e21459">
<p><code class="codeph">password</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21475 d84027e21462">
<p>The password to be set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21483" headers="d84027e21459">
<p><code class="codeph">type</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21483 d84027e21462">
<p>The verifier type to be used for the password. The default value is <code class="codeph">XS_SHA512</code>. The verifier type must be one of the following types:</p>
<p><code class="codeph">XS_SHA512, XS_SALTED_SHA1</code></p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21497" headers="d84027e21459">
<p><code class="codeph">opassword</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21497 d84027e21462">
<p>The old password. This parameter is required if the Real Application Security user is changing his or her own password. If not provided, then the user must have the required privilege to change his or her own password.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a password for application user <code class="codeph">SMAVRIS</code>. It also specifies the <code class="codeph">XS_SHA512</code> verifier type for the password.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_PASSWORD(&#39;SMAVRIS&#39;,&#39;2Hrd2Guess&#39;,XS_PRINCIPAL.XS_SHA512);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99996"></a><a id="DBFSG99997"></a><a id="DBFSG99998"></a><a id="DBFSG99995"></a>
<div class="props_rev_3"><a id="GUID-3AF5137E-08F5-44D3-8045-E8CED5AD892A"></a>
<h4 id="DBFSG-GUID-3AF5137E-08F5-44D3-8045-E8CED5AD892A" class="sect4">SET_VERIFIER Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_VERIFIER</code> procedure sets or modifies the verifier for an application user account. When you use the <code class="codeph">SET_VERIFIER</code> procedure, the procedure directly inserts the verifier and the value of the <code class="codeph">type</code> parameter into the dictionary table. This enables administrators to migrate users into Real Application Security with knowledge of the verifier and not the password.</p>
<p>You need the <code class="codeph">ALTER_USER</code> privilege to run this procedure for an application user.</p>
<p>The <code class="codeph">SET_VERIFIER</code> operation and the SQL*Plus <code class="codeph">PASSWORD</code> command are both blocked on the logical standby database.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">set_verifier ( 
  user      IN VARCHAR2,
  verifier  IN VARCHAR2,
  type      IN PLS_INTEGER := XS_SHA512);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-3AF5137E-08F5-44D3-8045-E8CED5AD892A__GUID-2EB56870-C346-43CE-8DBC-1520C1B85A7C">
<table class="cellalignment5205" summary="SET_VERIFIER parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e21667">Parameter</th>
<th class="cellalignment5216" id="d84027e21670">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21675" headers="d84027e21667">
<p><code class="codeph">user</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21675 d84027e21670">
<p>The name of the application user for whom the verifier is set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21683" headers="d84027e21667">
<p><code class="codeph">verifier</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21683 d84027e21670">
<p>A character string to be used as the verifier.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21691" headers="d84027e21667">
<p><code class="codeph">type</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21691 d84027e21670">
<p>The verifier type to be used. This can be one of the following:</p>
<p><code class="codeph">XS_SHA512, XS_SALTED_SHA1</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a verifier for the user <code class="codeph">SMAVRIS</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_VERIFIER(&#39;SMAVRIS&#39;,&#39;6DFF060084ECE67F&#39;,XS_PRINCIPAL.XS_SHA512);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG100"></a><a id="DBFSG101"></a><a id="DBFSG102"></a><a id="DBFSG99999"></a>
<div class="props_rev_3"><a id="GUID-BC64D831-75A8-4041-BE9F-8C9378B21FD5"></a>
<h4 id="DBFSG-GUID-BC64D831-75A8-4041-BE9F-8C9378B21FD5" class="sect4">SET_DESCRIPTION Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">SET_DESCRIPTION</code> procedure is used to set the description for an application principal.</p>
<p>You need the <code class="codeph">ALTER USER</code> system privilege to run this procedure for an application user. You need the <code class="codeph">ALTER ANY ROLE</code> system privilege to run this procedure for an application role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SET_DESCRIPTION (  principal   IN VARCHAR2,  description IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BC64D831-75A8-4041-BE9F-8C9378B21FD5__GUID-3C9795C8-64EA-4128-8C6A-30F7422F21C3">
<table class="cellalignment5205" summary="SET_DESCRIPTION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e21851">Parameter</th>
<th class="cellalignment5216" id="d84027e21854">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21859" headers="d84027e21851">
<p><code class="codeph">principal</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21859 d84027e21854">
<p>The name of the principal for which the description is set.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e21867" headers="d84027e21851">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5218" headers="d84027e21867 d84027e21854">
<p>A descriptive string about the principal.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a description for the application role <code class="codeph">HRREP</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.SET_DESCRIPTION(&#39;HRREP&#39;,&#39;HR Representative role&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG104"></a><a id="DBFSG105"></a><a id="DBFSG106"></a><a id="DBFSG103"></a>
<div class="props_rev_3"><a id="GUID-15266CE7-B956-438F-87BB-F5D88EF47DE8"></a>
<h4 id="DBFSG-GUID-15266CE7-B956-438F-87BB-F5D88EF47DE8" class="sect4">DELETE_PRINCIPAL Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_PRINCIPAL</code> procedure drops an application user or application role.</p>
<p>You need the <code class="codeph">DROP USER</code> system privilege to run this procedure for an application user. You need the <code class="codeph">DROP ANY ROLE</code> system privilege to run this procedure for an application role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">delete_principal (
  principal     IN VARCHAR2,
  delete_option IN PLS_INTEGER:=XS_ADMIN_UTIL.DEFAULT_OPTION);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-15266CE7-B956-438F-87BB-F5D88EF47DE8__GUID-EA0A7CCE-7465-4BE6-892B-CC2E45515624">
<table class="cellalignment5205" summary="DELETE_PRINCIPAL parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5215" id="d84027e22023">Parameter</th>
<th class="cellalignment5216" id="d84027e22026">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e22031" headers="d84027e22023">
<p><code class="codeph">principal</code></p>
</td>
<td class="cellalignment5218" headers="d84027e22031 d84027e22026">
<p>The name of the application user or application role that is to be deleted.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5217" id="d84027e22039" headers="d84027e22023">
<p><code class="codeph">delete_option</code></p>
</td>
<td class="cellalignment5218" headers="d84027e22039 d84027e22026">
<p>The delete option to use. The following options are available:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DEFAULT_OPTION:</code></p>
<p>The default option allows deleting a principal only if it is not referenced elsewhere. If there are other entities that reference the principal, then the principal cannot be deleted.</p>
<p>For example, the delete operation fails if you try to delete an application role that is granted to a principal.</p>
</li>
<li>
<p><code class="codeph">CASCADE_OPTION</code>:</p>
<p>The cascade option deletes the application user or application role together with any references to it.The user deleting the application user or application role must have privileges to delete these references as well.</p>
</li>
<li>
<p><code class="codeph">ALLOW_INCONSISTENCIES_OPTION:</code></p>
<p>The allow inconsistencies option lets you delete the entity even if other entities have late binding references to it. If the entity is part of an early dependency, then the delete fails and an error is raised.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the user <code class="codeph">SMAVRIS</code> using the <code class="codeph">DEFAULT_OPTION</code>:</p>
<pre dir="ltr">BEGIN
  SYS.XS_PRINCIPAL.DELETE_PRINCIPAL(&#39;SMAVRIS&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="DBFSG99449"></a>
<div class="props_rev_3"><a id="GUID-0141A8A6-DF49-49F6-95C8-B14231092BB8"></a>
<h2 id="DBFSG-GUID-0141A8A6-DF49-49F6-95C8-B14231092BB8" class="sect2">XS_SECURITY_CLASS Package</h2>
<div>
<div class="section">
<p>The <code class="codeph">XS_SECURITY_CLASS</code> package <a id="d84027e22192" class="indexterm-anchor"></a>includes procedures to create, manage, and delete security classes and their privileges. The package also includes procedures for managing security class inheritance.</p>
</div>
<!-- class="section" --></div>
<a id="DBFSG99450"></a>
<div class="props_rev_3"><a id="GUID-2AEA0996-0491-44EC-B5F5-36DDEEB2E3C0"></a>
<h3 id="DBFSG-GUID-2AEA0996-0491-44EC-B5F5-36DDEEB2E3C0" class="sect3">Security Model</h3>
<div>
<div class="section">
<p>The <code class="codeph">XS_SECURITY_CLASS</code> package <a id="d84027e22306" class="indexterm-anchor"></a>is created under the <code class="codeph">SYS</code> schema. The <code class="codeph">DBA</code> role is granted the <code class="codeph">ADMIN_ANY_SEC_POLICY</code>, which allows it to administer schema objects like ACLs, security classes, and security policies across all schemas.</p>
<p>Users can administer schema objects in their own schema if they have been granted the <code class="codeph">RESOURCE</code> role for the schema. The <code class="codeph">RESOURCE</code> role and the <code class="codeph">XS_RESOURCE</code> application role include the <code class="codeph">ADMIN_SEC_POLICY</code> privilege, required to administer schema objects in the schema.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="DBFSG99452"></a><a id="DBFSG99451"></a>
<div class="props_rev_3"><a id="GUID-12A18DD0-AF02-4F66-9196-3BB1B63BA36B"></a>
<h3 id="DBFSG-GUID-12A18DD0-AF02-4F66-9196-3BB1B63BA36B" class="sect3">Summary of XS_SECURITY_CLASS Subprograms</h3>
<div>
<div class="tblformalwide" id="GUID-12A18DD0-AF02-4F66-9196-3BB1B63BA36B__GUID-0A6B23FA-D6F4-4DCE-9A1B-103948EB1AE9">
<p class="titleintable">Table 11-11 Summary of XS_SECURITY_CLASS Subprograms</p>
<table class="cellalignment5210" title="Summary of XS_SECURITY_CLASS Subprograms" summary="This table has 2 columns. Column 1 is the name of the subprogram and column 2 is its description.">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5211" id="d84027e22449">Subprogram</th>
<th class="cellalignment5212" id="d84027e22452">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22457" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-CFF49C45-E18A-4ABE-87AF-ACFF7E3C6348">CREATE_SECURITY_CLASS Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22457 d84027e22452">
<p>Creates a new security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22466" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-82863E1B-0418-41A3-A591-9D831824C486">ADD_PARENTS Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22466 d84027e22452">
<p>Adds one or more parent security classes for the specified security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22475" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-B5FF96AB-3683-487D-8AE6-9BDAA467E043">REMOVE_PARENTS Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22475 d84027e22452">
<p>Removes one or more parent security classes for the specified security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22484" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-80DD9971-6A35-49A8-981B-4B99A3B21C44">ADD_PRIVILEGES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22484 d84027e22452">
<p>Adds one or more privileges to the specified security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22493" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-02F69792-CF22-4F5E-84F4-C03357DF6CF9">REMOVE_PRIVILEGES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22493 d84027e22452">
<p>Removes one or more privileges for the specified security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22502" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-CC50703B-0CB2-4862-97CA-D81FF889E64B">ADD_IMPLIED_PRIVILEGES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22502 d84027e22452">
<p>Adds one or more implied privileges for the specified aggregate privilege.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22511" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-54D289D9-CD6E-4343-A27A-CF388E5B3551">REMOVE_IMPLIED_PRIVILEGES Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22511 d84027e22452">
<p>Removes one or more implied privileges from an aggregate privilege.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22520" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-57F3C97E-B3D5-47BC-BC71-2C98FE61AD3E">SET_DESCRIPTION Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22520 d84027e22452">
<p>Sets a description string for the specified security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5213" id="d84027e22529" headers="d84027e22449">
<p><a href="plsql_pkg.htm#GUID-197B6476-416F-4E5E-8F78-45D814BE4DDA">DELETE_SECURITY_CLASS Procedure</a></p>
</td>
<td class="cellalignment5214" headers="d84027e22529 d84027e22452">
<p>Deletes the specified security class.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<a id="DBFSG99454"></a><a id="DBFSG99455"></a><a id="DBFSG99456"></a><a id="DBFSG99453"></a>
<div class="props_rev_3"><a id="GUID-CFF49C45-E18A-4ABE-87AF-ACFF7E3C6348"></a>
<h4 id="DBFSG-GUID-CFF49C45-E18A-4ABE-87AF-ACFF7E3C6348" class="sect4">CREATE_SECURITY_CLASS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE_SECURITY_CLASS</code> creates a new security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.CREATE_SECURITY_CLASS ( 
  name         IN VARCHAR2,
  priv_list    IN XS$PRIVILEGE_LIST,
  parent_list  IN XS$NAME_LIST := NULL,
  description  IN VARCHAR2 := NULL);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CFF49C45-E18A-4ABE-87AF-ACFF7E3C6348__GUID-10677D51-80EB-46BE-AC18-18F014B12FBC">
<table class="cellalignment5205" summary="CREATE_SECURITY_CLASS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5239" id="d84027e22667">Parameter</th>
<th class="cellalignment5240" id="d84027e22670">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22675" headers="d84027e22667">
<p><code class="codeph">name</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22675 d84027e22670">
<p>The name of the security class to be created.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22697" headers="d84027e22667">
<p><code class="codeph">priv_list</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22697 d84027e22670">
<p>The list of privileges to include in the security class.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22705" headers="d84027e22667">
<p><code class="codeph">parent_list</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22705 d84027e22670">
<p>The list of parent security classes from which the security class is inherited. This is optional.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22713" headers="d84027e22667">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22713 d84027e22670">
<p>An optional description for the security class.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example creates a security class called HRPRIVS. The security class includes a set of privileges defined in <code class="codeph">priv_list</code>. The security class uses the <code class="codeph">DML</code> class as its parent security class.</p>
<pre dir="ltr">DECLARE
  pr_list  XS$PRIVILEGE_LIST;
BEGIN
  pr_list :=XS$PRIVILEGE_LIST(
     XS$PRIVILEGE(name=&gt;&#39;VIEW_SENSITIVE_INFO&#39;),
     XS$PRIVILEGE(name=&gt;&#39;UPDATE_INFO&#39;,
                  implied_priv_list=&gt;XS$NAME_LIST
                  (&#39;&#34;UPDATE&#34;&#39;, &#39;&#34;DELETE&#34;&#39;, &#39;&#34;INSERT&#34;&#39;)));
 
  <span class="bold">SYS.XS_SECURITY_CLASS.CREATE_SECURITY_CLASS(</span>
    <span class="bold"> name=&gt;&#39;HRPRIVS&#39;,</span> 
     <span class="bold">priv_list=&gt;pr_list,</span>
     <span class="bold">parent_list=&gt;XS$NAME_LIST(&#39;DML&#39;));</span>
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG273"></a><a id="DBFSG274"></a><a id="DBFSG275"></a><a id="DBFSG272"></a>
<div class="props_rev_3"><a id="GUID-82863E1B-0418-41A3-A591-9D831824C486"></a>
<h4 id="DBFSG-GUID-82863E1B-0418-41A3-A591-9D831824C486" class="sect4">ADD_PARENTS Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e22856" class="indexterm-anchor"></a><code class="codeph">ADD_PARENTS</code> procedure adds one or more parent security classes for the specified security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.ADD_PARENTS (
  sec_class   IN VARCHAR2,
  parent      IN VARCHAR2);

XS_SECURITY_CLASS.ADD_PARENTS (
  sec_class   IN VARCHAR2,
  parent_list IN XS$NAME_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-82863E1B-0418-41A3-A591-9D831824C486__GUID-D17297DB-F3F0-4723-A206-E915B544291E">
<table class="cellalignment5205" summary="ADD_PARENTS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5239" id="d84027e22880">Parameter</th>
<th class="cellalignment5240" id="d84027e22883">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22888" headers="d84027e22880">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22888 d84027e22883">
<p>The name of the security class for which parent classes are to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22910" headers="d84027e22880">
<p><code class="codeph">parent</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22910 d84027e22883">
<p>The name of the parent security class to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e22918" headers="d84027e22880">
<p><code class="codeph">parent_list</code></p>
</td>
<td class="cellalignment5242" headers="d84027e22918 d84027e22883">
<p>The list of parent classes to be added.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds the parent security class <code class="codeph">GENPRIVS</code> to the <code class="codeph">HRPRIVS</code> security class.</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.ADD_PARENTS(&#39;HRPRIVS&#39;,&#39;GENPRIVS&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG281"></a><a id="DBFSG282"></a><a id="DBFSG283"></a><a id="DBFSG280"></a>
<div class="props_rev_3"><a id="GUID-B5FF96AB-3683-487D-8AE6-9BDAA467E043"></a>
<h4 id="DBFSG-GUID-B5FF96AB-3683-487D-8AE6-9BDAA467E043" class="sect4">REMOVE_PARENTS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_PARENTS</code> procedure removes one or more parent classes for the specified security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.REMOVE_PARENTS (
  sec_class IN VARCHAR2);

XS_SECURITY_CLASS.REMOVE_PARENTS (
  sec_class IN VARCHAR2,
  parent    IN VARCHAR2);

XS_SECURITY_CLASS.REMOVE_PARENTS (
  sec_class   IN VARCHAR2,
  parent_list IN XS$NAME_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-B5FF96AB-3683-487D-8AE6-9BDAA467E043__GUID-0B38750D-6A7B-43A1-AED6-4560D8E7217B">
<table class="cellalignment5205" summary="REMOVE_PARENTS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5239" id="d84027e23070">Parameter</th>
<th class="cellalignment5240" id="d84027e23073">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e23078" headers="d84027e23070">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5242" headers="d84027e23078 d84027e23073">
<p>The name of the security class whose parent classes are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e23100" headers="d84027e23070">
<p><code class="codeph">parent</code></p>
</td>
<td class="cellalignment5242" headers="d84027e23100 d84027e23073">
<p>The parent security class that is to be removed.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5241" id="d84027e23108" headers="d84027e23070">
<p><code class="codeph">parent_list</code></p>
</td>
<td class="cellalignment5242" headers="d84027e23108 d84027e23073">
<p>The list of parent security classes that are to be removed.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes the parent security class <code class="codeph">GENPRIVS</code> from the <code class="codeph">HRPRIVS</code> security class.</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.REMOVE_PARENTS(&#39;HRPRIVS&#39;,&#39;GENPRIVS&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG285"></a><a id="DBFSG286"></a><a id="DBFSG287"></a><a id="DBFSG284"></a>
<div class="props_rev_3"><a id="GUID-80DD9971-6A35-49A8-981B-4B99A3B21C44"></a>
<h4 id="DBFSG-GUID-80DD9971-6A35-49A8-981B-4B99A3B21C44" class="sect4">ADD_PRIVILEGES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ADD_PRIVILEGES</code> procedure adds one or more privileges to a security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.ADD_PRIVILEGES (
  sec_class         IN VARCHAR2,
  priv              IN VARCHAR2,
  implied_priv_list IN XS$NAME_LIST := NULL,
  description       IN VARCHAR2 := NULL);

XS_SECURITY_CLASS.ADD_PRIVILEGES (
  sec_class  IN VARCHAR2,
  priv_list  IN XS$PRIVILEGE_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-80DD9971-6A35-49A8-981B-4B99A3B21C44__GUID-1BEA5F22-A907-49BC-AC2F-2AE56B597210">
<table class="cellalignment5205" summary="ADD_PRIVILEGES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5275" id="d84027e23259">Parameter</th>
<th class="cellalignment5276" id="d84027e23262">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e23267" headers="d84027e23259">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5278" headers="d84027e23267 d84027e23262">
<p>The name of the security class to which the privileges are to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e23289" headers="d84027e23259">
<p><code class="codeph">priv</code></p>
</td>
<td class="cellalignment5278" headers="d84027e23289 d84027e23262">
<p>The name of the privilege to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e23297" headers="d84027e23259">
<p><code class="codeph">priv_list</code></p>
</td>
<td class="cellalignment5278" headers="d84027e23297 d84027e23262">
<p>The list of privileges to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e23305" headers="d84027e23259">
<p><code class="codeph">implied_priv_list</code></p>
</td>
<td class="cellalignment5278" headers="d84027e23305 d84027e23262">
<p>An optional list of implied privileges to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5277" id="d84027e23313" headers="d84027e23259">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5278" headers="d84027e23313 d84027e23262">
<p>An optional description of the privilege being added.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds an aggregate privilege called <code class="codeph">UPDATE_INFO</code> to the <code class="codeph">HRPRIVS</code> security class. The aggregate privilege contains the implied privileges, <code class="codeph">UPDATE</code>, <code class="codeph">DELETE</code>, and <code class="codeph">INSERT</code>.</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.ADD_PRIVILEGES(sec_class=&gt;&#39;HRPRIVS&#39;,priv=&gt;&#39;UPDATE_INFO&#39;,
                                       implied_priv_list=&gt;XS$NAME_LIST(&#39;&#34;UPDATE&#34;&#39;,
                                                    &#39;&#34;DELETE&#34;&#39;, &#39;&#34;INSERT&#34;&#39;));
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG293"></a><a id="DBFSG294"></a><a id="DBFSG295"></a><a id="DBFSG292"></a>
<div class="props_rev_3"><a id="GUID-02F69792-CF22-4F5E-84F4-C03357DF6CF9"></a>
<h4 id="DBFSG-GUID-02F69792-CF22-4F5E-84F4-C03357DF6CF9" class="sect4">REMOVE_PRIVILEGES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_PRIVILEGES</code> procedure removes one or more privileges from the specified security class. If no privilege name or list is specified, then all privileges are removed from the specified security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.REMOVE_PRIVILEGES (
  sec_class   IN VARCHAR2,
  priv        IN VARCHAR2);

XS_SECURITY_CLASS.REMOVE_PRIVILEGES (
  sec_class    IN VARCHAR2,
  priv_list    IN XS$NAME_LIST);

XS_SECURITY_CLASS.REMOVE_PRIVILEGES (
  sec_class IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-02F69792-CF22-4F5E-84F4-C03357DF6CF9__GUID-28EA25CD-2B2F-471E-84CA-CA4076B6080D">
<table class="cellalignment5205" summary="REMOVE_PRIVILEGES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5251" id="d84027e23473">Parameter</th>
<th class="cellalignment5252" id="d84027e23476">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e23481" headers="d84027e23473">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5254" headers="d84027e23481 d84027e23476">
<p>The name of the security class for which the privileges are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e23503" headers="d84027e23473">
<p><code class="codeph">priv</code></p>
</td>
<td class="cellalignment5254" headers="d84027e23503 d84027e23476">
<p>The name of the privilege to be removed.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e23511" headers="d84027e23473">
<p><code class="codeph">priv_list</code></p>
</td>
<td class="cellalignment5254" headers="d84027e23511 d84027e23476">
<p>The list of privileges to be removed.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes the <code class="codeph">UPDATE_INFO</code> privilege from the <code class="codeph">HRPRIVS</code> security class.</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.REMOVE_PRIVILEGES(&#39;HRPRIVS&#39;,&#39;UPDATE_INFO&#39;);
END;
</pre>
<p>The following example removes all privileges from the <code class="codeph">HRPRIVS</code> security class.</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.REMOVE_PRIVILEGES(&#39;HRPRIVS&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG297"></a><a id="DBFSG298"></a><a id="DBFSG299"></a><a id="DBFSG296"></a>
<div class="props_rev_3"><a id="GUID-CC50703B-0CB2-4862-97CA-D81FF889E64B"></a>
<h4 id="DBFSG-GUID-CC50703B-0CB2-4862-97CA-D81FF889E64B" class="sect4">ADD_IMPLIED_PRIVILEGES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">ADD_IMPLIED_PRIVILEGES</code> procedure adds one or more implied privileges to an aggregate privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.ADD_IMPLIED_PRIVILEGES (
  sec_class    IN VARCHAR2,
  priv         IN VARCHAR2,
  implied_priv IN VARCHAR2);

XS_SECURITY_CLASS.ADD_IMPLIED_PRIVILEGES (
  sec_class         IN VARCHAR2,
  priv              IN VARCHAR2,
  implied_priv_list IN XS$NAME_LIST);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-CC50703B-0CB2-4862-97CA-D81FF889E64B__GUID-2444CCF6-6F5E-4592-AC24-06DCF5A53574">
<table class="cellalignment5205" summary="ADD_IMPLIED_PRIVILEGES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5283" id="d84027e23670">Parameter</th>
<th class="cellalignment5284" id="d84027e23673">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5285" id="d84027e23678" headers="d84027e23670">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5286" headers="d84027e23678 d84027e23673">
<p>The name of the security class to which the privileges are to be added.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5285" id="d84027e23700" headers="d84027e23670">
<p><code class="codeph">priv</code></p>
</td>
<td class="cellalignment5286" headers="d84027e23700 d84027e23673">
<p>Name of the aggregate privilege for which the implied privileges are to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5285" id="d84027e23708" headers="d84027e23670">
<p><code class="codeph">implied_priv</code></p>
</td>
<td class="cellalignment5286" headers="d84027e23708 d84027e23673">
<p>The implied privilege to be added.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5285" id="d84027e23716" headers="d84027e23670">
<p><code class="codeph">implied_priv_list</code></p>
</td>
<td class="cellalignment5286" headers="d84027e23716 d84027e23673">
<p>A list of implied privileges to be added for the aggregate privilege.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example adds a list of implied privileges for the aggregate privilege <code class="codeph">UPDATE_INFO</code> to the <code class="codeph">HRPRIVS</code> security class:</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.ADD_IMPLIED_PRIVILEGES(sec_class=&gt;&#39;HRPRIVS&#39;, priv=&gt;&#39;UPDATE_INFO&#39;, implied_priv_list=&gt;XS$NAME_LIST(&#39;&#34;UPDATE&#34;&#39;, &#39;&#34;DELETE&#34;&#39;, &#39;&#34;INSERT&#34;&#39;));
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG305"></a><a id="DBFSG306"></a><a id="DBFSG307"></a><a id="DBFSG304"></a>
<div class="props_rev_3"><a id="GUID-54D289D9-CD6E-4343-A27A-CF388E5B3551"></a>
<h4 id="DBFSG-GUID-54D289D9-CD6E-4343-A27A-CF388E5B3551" class="sect4">REMOVE_IMPLIED_PRIVILEGES Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">REMOVE_IMPLIED_PRIVILEGES</code> procedure removes the specified implied privileges from an aggregate privilege. If no implied privileges are specified, then all implied privileges are removed from the aggregate privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.REMOVE_IMPLIED_PRIVILEGES (
  sec_class    IN VARCHAR2,
  priv         IN VARCHAR2,
  implied_priv IN VARCHAR2);

XS_SECURITY_CLASS.REMOVE_IMPLIED_PRIVILEGES (
  sec_class         IN VARCHAR2,
  priv              IN VARCHAR2,
  implied_priv_list IN XS$NAME_LIST);

XS_SECURITY_CLASS.REMOVE_IMPLIED_PRIVILEGES (
  sec_class   IN VARCHAR2,
  priv        IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-54D289D9-CD6E-4343-A27A-CF388E5B3551__GUID-E172C452-9C30-43CE-8C3E-5BB7D1174755">
<table class="cellalignment5205" summary="REMOVE_IMPLIED_PRIVILEGES parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5279" id="d84027e23867">Parameter</th>
<th class="cellalignment5280" id="d84027e23870">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e23875" headers="d84027e23867">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5282" headers="d84027e23875 d84027e23870">
<p>The name of the security class for which the privileges are to be removed.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e23897" headers="d84027e23867">
<p><code class="codeph">priv</code></p>
</td>
<td class="cellalignment5282" headers="d84027e23897 d84027e23870">
<p>The name of the aggregate privilege from which the implied privileges are to be removed.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e23905" headers="d84027e23867">
<p><code class="codeph">implied_priv</code></p>
</td>
<td class="cellalignment5282" headers="d84027e23905 d84027e23870">
<p>The implied privilege to be removed from the aggregate privilege.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5281" id="d84027e23913" headers="d84027e23867">
<p><code class="codeph">implied_priv_list</code></p>
</td>
<td class="cellalignment5282" headers="d84027e23913 d84027e23870">
<p>The list of implied privileges to be removed from the aggregate privilege.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example removes the implicit privilege <code class="codeph">DELETE</code> from the aggregate privilege <code class="codeph">UPDATE_INFO</code> from the <code class="codeph">HRPRIVS</code> security class:</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.REMOVE_IMPLIED_PRIVILEGES(&#39;HRPRIVS&#39;,&#39;UPDATE_INFO&#39;,&#39;&#34;DELETE&#34;&#39;);
END;
</pre>
<p>The following example removes all implicit privileges from the aggregate privilege <code class="codeph">UPDATE_INFO</code> from the <code class="codeph">HRPRIVS</code> security class.</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.REMOVE_IMPLIED_PRIVILEGES(&#39;HRPRIVS&#39;,&#39;UPDATE_INFO&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG309"></a><a id="DBFSG310"></a><a id="DBFSG311"></a><a id="DBFSG308"></a>
<div class="props_rev_3"><a id="GUID-57F3C97E-B3D5-47BC-BC71-2C98FE61AD3E"></a>
<h4 id="DBFSG-GUID-57F3C97E-B3D5-47BC-BC71-2C98FE61AD3E" class="sect4">SET_DESCRIPTION Procedure</h4>
<div>
<div class="section">
<p>The <a id="d84027e24057" class="indexterm-anchor"></a><code class="codeph">SET_DESCRIPTION</code> procedure sets a description string for the specified security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.SET_DESCRIPTION (
  sec_class   IN VARCHAR2,
  description IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-57F3C97E-B3D5-47BC-BC71-2C98FE61AD3E__GUID-1953EE1B-5EDA-42CA-A366-DF06AE9842C6">
<table class="cellalignment5205" summary="SET_DESCRIPTION parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5255" id="d84027e24081">Parameter</th>
<th class="cellalignment5256" id="d84027e24084">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e24089" headers="d84027e24081">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5258" headers="d84027e24089 d84027e24084">
<p>The name of the security class for which the description is to be set.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5257" id="d84027e24111" headers="d84027e24081">
<p><code class="codeph">description</code></p>
</td>
<td class="cellalignment5258" headers="d84027e24111 d84027e24084">
<p>A description string for the specified security class.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example sets a description string for the <code class="codeph">HRPRIVS</code> security class:</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.SET_DESCRIPTION(
    &#39;HRPRIVS&#39;,&#39;Contains privileges required to manage HR data&#39;);
END;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="DBFSG313"></a><a id="DBFSG314"></a><a id="DBFSG315"></a><a id="DBFSG312"></a>
<div class="props_rev_3"><a id="GUID-197B6476-416F-4E5E-8F78-45D814BE4DDA"></a>
<h4 id="DBFSG-GUID-197B6476-416F-4E5E-8F78-45D814BE4DDA" class="sect4">DELETE_SECURITY_CLASS Procedure</h4>
<div>
<div class="section">
<p>The <code class="codeph">DELETE_SECURITY_CLASS</code> procedure deletes the specified security class.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">XS_SECURITY_CLASS.DELETE_SECURITY_CLASS ( 
  sec_class     IN VARCHAR2,
  delete_option IN NUMBER:=XS_ADMIN_UTIL.DEFAULT_OPTION); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Parameters</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-197B6476-416F-4E5E-8F78-45D814BE4DDA__GUID-AB4896F7-0290-427F-B85D-C97EDA0A15F7">
<table class="cellalignment5205" summary="DELETE_SECURITY_CLASS parameters">
<thead>
<tr class="cellalignment5199">
<th class="cellalignment5251" id="d84027e24260">Parameter</th>
<th class="cellalignment5252" id="d84027e24263">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e24268" headers="d84027e24260">
<p><code class="codeph">sec_class</code></p>
</td>
<td class="cellalignment5254" headers="d84027e24268 d84027e24263">
<p>The name of the security class to be deleted.</p>
<p>The name is schema qualified, for example, <code class="codeph">SCOTT.SC1</code>. When the schema part of the name is missing, the current session schema is assumed. For example, in this same example, if the name is specified as <code class="codeph">SC1</code>, and the current schema is <code class="codeph">SCOTT</code>, it would resolve to <code class="codeph">SCOTT.SC1</code>.</p>
</td>
</tr>
<tr class="cellalignment5199">
<td class="cellalignment5253" id="d84027e24290" headers="d84027e24260">
<p><code class="codeph">delete_option</code></p>
</td>
<td class="cellalignment5254" headers="d84027e24290 d84027e24263">
<p>The delete option to use. The following options are available:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DEFAULT_OPTION:</code></p>
<p>The default option allows deleting a security class only if it is not referenced elsewhere. If there are other entities that reference the security class, then the security class cannot be deleted.</p>
</li>
<li>
<p><code class="codeph">CASCADE_OPTION</code>:</p>
<p>The cascade option deletes the security class together with any references to it.The user deleting the security class must have privileges to delete these references as well.</p>
</li>
<li>
<p><code class="codeph">ALLOW_INCONSISTENCIES_OPTION:</code></p>
<p>The allow inconsistencies option lets you delete the entity even if other entities have late binding references to it.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p class="subhead3">Examples</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following example deletes the <code class="codeph">HRPRIVS</code> security class using the default option:</p>
<pre dir="ltr">BEGIN
  SYS.XS_SECURITY_CLASS.DELETE_SECURITY_CLASS(&#39;HRPRIVS&#39;,XS_ADMIN_UTIL.DEFAULT_OPTION);
END;
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5198">
<tr>
<td class="cellalignment5287">
<table class="cellalignment5203">
<tr>
<td class="cellalignment5202"><a href="plsql_fun.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5202"><a href="security_hr_demo_tutorial.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2012, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5289">
<table class="cellalignment5201">
<tr>
<td class="cellalignment5202"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5202"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5202"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5202"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5202"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5202"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>