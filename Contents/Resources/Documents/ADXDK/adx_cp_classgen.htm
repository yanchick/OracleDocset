<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-1645"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20the%20XML%20Class%20Generator%20for%20C%2B%2B"></a><title>Using the XML Class Generator for C++</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="Class Generator, XML C++, XML C++ Class Generator, xmlcg usage"/>
<meta name="dcterms.created" content="2016-12-08T13:58:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="XML Developer&#39;s Kit Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E54405-06"/>
<meta name="dcterms.isVersionOf" content="ADXDK"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="adx_cp_xpath.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adx_pt_ref.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E54405-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-F2182A3D-0617-41CC-BBBE-59543AD769C0"></a> <span id="PAGE" style="display:none;">41/50</span> <!-- End Header -->
<a id="ADXDK1053"></a><a id="ADXDK2300"></a>
<h1 id="ADXDK-GUID-F2182A3D-0617-41CC-BBBE-59543AD769C0" class="sect1"><span class="enumeration_chapter">31</span> Using the XML Class Generator for C++</h1>
<div>
<p>This chapter explains how to use the Extensible Markup Language (XML) class generator for C++.</p>
<div class="section">
<p class="subhead1">Topics:</p>
</div>
<!-- class="section" -->
<ul style="list-style-type: disc;">
<li>
<p><a href="adx_cp_classgen.htm#GUID-CEF02EB9-5989-4E05-81B8-10CFDF3DB812">Accessing the XML C++ Class Generator</a></p>
</li>
<li>
<p><a href="adx_cp_classgen.htm#GUID-3F3286DF-407F-4463-B315-21A7D39011C6">Using the XML C++ Class Generator</a></p>
</li>
<li>
<p><a href="adx_cp_classgen.htm#GUID-90DC6DCA-75F0-4127-9AE4-930B973EF5A5">Using the XML C++ Class Generator Command-Line Utility</a></p>
</li>
<li>
<p><a href="adx_cp_classgen.htm#GUID-B75B6257-B358-4896-B1C3-6AD093279B02">Using the XML C++ Class Generator Examples</a></p>
</li>
</ul>
</div>
<a id="ADXDK19939"></a>
<div class="sect2"><a id="GUID-CEF02EB9-5989-4E05-81B8-10CFDF3DB812"></a>
<h2 id="ADXDK-GUID-CEF02EB9-5989-4E05-81B8-10CFDF3DB812" class="sect2"><span class="enumeration_section">31.1</span> Accessing the XML C++ Class Generator</h2>
<div>
<p>The XML C++ class generator is provided with Oracle Database.</p>
</div>
</div>
<a id="ADXDK19940"></a>
<div class="props_rev_3"><a id="GUID-3F3286DF-407F-4463-B315-21A7D39011C6"></a>
<h2 id="ADXDK-GUID-3F3286DF-407F-4463-B315-21A7D39011C6" class="sect2"><span class="enumeration_section">31.2</span> Using the XML C++ Class Generator</h2>
<div>
<p>The XML C++ class generator creates source files from an XML document type definition (DTD) or XML Schema. The class generator takes the DTD or the XML Schema, and generates classes for each defined element. Those classes are then used in a C++ program to construct XML documents conforming to the DTD.</p>
<p>This is useful when an application wants to send an XML message to another application based on an agreed-upon DTD or XML Schema, or as the back end of a Web form to construct an XML document. Using these classes, C++ applications can construct, validate, and print XML documents that comply with the input.</p>
<p>The class generator works with the Oracle XML parser for C++, which parses the input and passes the parsed document to the class generator.</p>
</div>
<a id="ADXDK19941"></a>
<div class="props_rev_3"><a id="GUID-A27C2A5B-6654-42ED-B94B-75C665F47B1D"></a>
<h3 id="ADXDK-GUID-A27C2A5B-6654-42ED-B94B-75C665F47B1D" class="sect3"><span class="enumeration_section">31.2.1</span> External DTD Parsing</h3>
<div>
<p>The XML C++ class generator can also parse an external DTD directly without requiring a complete (dummy) document by using the Oracle XML parser for C++ routine <code>xmlparsedtd()</code>.</p>
<p>The provided command-line program <code>xmlcg</code> has a <code>-d</code> option that is used to parse external DTDs.</p>
</div>
</div>
<a id="ADXDK19942"></a>
<div class="props_rev_3"><a id="GUID-D0C3EAC3-601E-404E-A639-4FA3979F8849"></a>
<h3 id="ADXDK-GUID-D0C3EAC3-601E-404E-A639-4FA3979F8849" class="sect3"><span class="enumeration_section">31.2.2</span> Error Message Files</h3>
<div>
<p>Error message files are provided in the <code>mesg/</code> subdirectory. The messages files also exist in the <code>$ORACLE_HOME/xdk/mesg</code> directory. You may set the environment variable <code>ORA_XML_MESG</code> to point to the absolute path of the <code>mesg</code> subdirectory although this not required.</p>
</div>
</div>
</div>
<a id="ADXDK19944"></a><a id="ADXDK19943"></a>
<div class="props_rev_3"><a id="GUID-90DC6DCA-75F0-4127-9AE4-930B973EF5A5"></a>
<h2 id="ADXDK-GUID-90DC6DCA-75F0-4127-9AE4-930B973EF5A5" class="sect2"><span class="enumeration_section">31.3</span> Using the XML C++ Class Generator Command-Line Utility</h2>
<div>
<div class="section">
<p>The standalone class generator can be called as an executable by invoking <code>bin/xmlcg</code>.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>You can run the C++ class generator from the command line:</span>
<div>
<pre dir="ltr">xmlcg [options] <span class="italic">input_file</span>
</pre>
<p><a href="adx_cp_classgen.htm#GUID-90DC6DCA-75F0-4127-9AE4-930B973EF5A5__g1015836" title="Option and Meaning are the columns.">Table 31-1</a> describes the options for the utility.</p>
<div class="tblformal" id="GUID-90DC6DCA-75F0-4127-9AE4-930B973EF5A5__g1015836">
<p class="titleintable">Table 31-1 C++ Class Generator Options</p>
<table class="cellalignment685" title="C++ Class Generator Options " summary="Option and Meaning are the columns.">
<thead>
<tr class="cellalignment644">
<th class="cellalignment681" id="d117813e562">Option</th>
<th class="cellalignment682" id="d117813e565">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment644">
<td class="cellalignment683" id="d117813e570" headers="d117813e562">
<p><code>-d</code> <span class="italic"><code>name</code></span></p>
</td>
<td class="cellalignment684" headers="d117813e570 d117813e565">
<p>Input is an external DTD or a DTD file. Generates <code>name.cpp</code> and <code>name.h.</code></p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d117813e587" headers="d117813e562">
<p><code>-o</code> <span class="italic"><code>directory</code></span></p>
</td>
<td class="cellalignment684" headers="d117813e587 d117813e565">
<p>Output directory for generated files (the default is the current directory).</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d117813e599" headers="d117813e562">
<p><code>-e</code> <span class="italic"><code>encoding</code></span></p>
</td>
<td class="cellalignment684" headers="d117813e599 d117813e565">
<p>Default input file encoding.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d117813e611" headers="d117813e562">
<p><code>-h</code></p>
</td>
<td class="cellalignment684" headers="d117813e611 d117813e565">
<p>Show this usage help.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d117813e619" headers="d117813e562">
<p>-v</p>
</td>
<td class="cellalignment684" headers="d117813e619 d117813e565">
<p>Show the class generator version validator options.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d117813e626" headers="d117813e562">
<p>-s <span class="italic">name</span></p>
</td>
<td class="cellalignment684" headers="d117813e626 d117813e565">
<p>Input is an XML Schema file with the given name. Generates <span class="italic"><code>name</code></span><code>.cpp</code> and <span class="italic"><code>name</code></span><code>.h</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p><span class="italic"><code>input_file</code></span> is the name of the parsed XML document with <code>&lt;!DOCTYPE&gt;</code> definitions, or parsed DTD, or an XML Schema document. The XML document must have an associated DTD.</p>
<p>The DTD input to the XML C++ class generator is an XML document containing a DTD, or an external DTD. The document body itself is ignored; only the DTD is relevant, though the document must conform to the DTD.</p>
</div>
</li>
<li class="stepexpand"><span>If invalid options, or no input is provided, a usage message with the preceding information is output.</span></li>
<li class="stepexpand"><span>Two source files are output, a <span class="italic">name</span>.h header file and a C++ file, <span class="italic"><code>name</code></span><code>.cpp</code>. These are named after the DTD file.</span></li>
<li class="stepexpand"><span>The output files are typically used to generate XML documents.</span></li>
</ol>
<div class="section">
<p>Constructors are provided for each class (element) that allow an object to be created in these ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>Initially empty, then adding the children or data after the initial creation</p>
</li>
<li>
<p>Created with the initial full set of children or initial data</p>
</li>
</ul>
<p>A method is provided for <code>#PCDATA</code> (and Mixed) elements to set the data and, when appropriate, set an element&#39;s attributes.</p>
</div>
<!-- class="section" --></div>
<a id="ADXDK19945"></a>
<div class="props_rev_3"><a id="GUID-38757BCA-9ABB-4502-8567-3A519BB33C95"></a>
<h3 id="ADXDK-GUID-38757BCA-9ABB-4502-8567-3A519BB33C95" class="sect3"><span class="enumeration_section">31.3.1</span> Input to the XML C++ Class Generator</h3>
<div>
<p>The input is an XML document containing a DTD. The document body itself is ignored; only the DTD is relevant, though the dummy document must conform to the DTD. The underlying XML parser accepts only file names for the document and associated external entities.</p>
</div>
</div>
</div>
<a id="ADXDK19947"></a><a id="ADXDK19946"></a>
<div class="props_rev_3"><a id="GUID-B75B6257-B358-4896-B1C3-6AD093279B02"></a>
<h2 id="ADXDK-GUID-B75B6257-B358-4896-B1C3-6AD093279B02" class="sect2"><span class="enumeration_section">31.4</span> Using the XML C++ Class Generator Examples</h2>
<div>
<div class="section">
<p><a href="adx_cp_classgen.htm#GUID-B75B6257-B358-4896-B1C3-6AD093279B02__g1005605" title="Sample File Name and Description are the columns.">Table 31-2</a> lists the demo XML C++ class generator files:</p>
<div class="tblformal" id="GUID-B75B6257-B358-4896-B1C3-6AD093279B02__g1005605">
<p class="titleintable">Table 31-2 XML C++ Class Generator Files</p>
<table class="cellalignment650" title="XML C++ Class Generator Files " summary="Sample File Name and Description are the columns.">
<thead>
<tr class="cellalignment644">
<th class="cellalignment678" id="d117813e861">File Name</th>
<th class="cellalignment686" id="d117813e864">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment644">
<td class="cellalignment680" id="d117813e869" headers="d117813e861">
<p><code>CG.cpp</code></p>
</td>
<td class="cellalignment687" headers="d117813e869 d117813e864">
<p>Sample program</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment680" id="d117813e877" headers="d117813e861">
<p><code>CG.xml</code></p>
</td>
<td class="cellalignment687" headers="d117813e877 d117813e864">
<p>XML file contains DTD and dummy document</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment680" id="d117813e885" headers="d117813e861">
<p><code>CG.dtd</code></p>
</td>
<td class="cellalignment687" headers="d117813e885 d117813e864">
<p>DTD file referenced by <code>CG.xml</code></p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment680" id="d117813e895" headers="d117813e861">
<p><code>Make.bat</code> on Windows</p>
<p><code>Makefile</code> on UNIX</p>
</td>
<td class="cellalignment687" headers="d117813e895 d117813e864">
<p>Batch file (on Windows) or Make file (on UNIX) to generate classes and build the sample programs.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment680" id="d117813e908" headers="d117813e861">
<p>README</p>
</td>
<td class="cellalignment687" headers="d117813e908 d117813e864">
<p>A readme file with these instructions</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The <code>make.bat</code> batch file (on Windows) or <code>Makefile</code> (on UNIX) do this:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Generate classes based on <code>CG.xml</code> into <code>Sample.h</code> and <code>Sample.cpp</code></p>
</li>
<li>
<p>Compile the program <code>CG.cpp</code> (using <code>Sample.h</code>), and link this with the Sample object into an executable named <code>CG.exe</code> in the...<code>\bin</code> (or ...<code>/bin</code>) directory.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="ADXDK19948"></a>
<div class="props_rev_3"><a id="GUID-31AF7FD2-23C3-40AC-BCA0-70BA49252AEF"></a>
<h3 id="ADXDK-GUID-31AF7FD2-23C3-40AC-BCA0-70BA49252AEF" class="sect3"><span class="enumeration_section">31.4.1</span> XML C++ Class Generator Example 1: XML &mdash; Input File to Class Generator, CG.xml</h3>
<div>
<p>This XML file, <code>CG.xml</code>, inputs XML C++ class generator. It references the DTD file, <code>CG.dtd</code>.</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34;?&gt;
&lt;!DOCTYPE Sample SYSTEM &#34;CG.dtd&#34;&gt;
  &lt;Sample&gt;
    &lt;B&gt;Be!&lt;/B&gt;
    &lt;D attr=&#34;value&#34;&gt;&lt;/D&gt;
    &lt;E&gt;
      &lt;F&gt;Formula1&lt;/F&gt;
      &lt;F&gt;Formula2&lt;/F&gt;
    &lt;/E&gt;
  &lt;/Sample&gt;
</pre></div>
</div>
<a id="ADXDK19949"></a>
<div class="props_rev_3"><a id="GUID-8CB0377D-94A2-4812-8153-27BEDA36E9E0"></a>
<h3 id="ADXDK-GUID-8CB0377D-94A2-4812-8153-27BEDA36E9E0" class="sect3"><span class="enumeration_section">31.4.2</span> XML C++ Class Generator Example 2: DTD &mdash; Input File to Class Generator, CG.dtd</h3>
<div>
<p>This DTD file, <code>CG.dtd</code> is referenced by the XML file <code>CG.xml</code>. <code>CG.xml</code> inputs XML C++ class generator.</p>
<pre dir="ltr">&lt;!ELEMENT Sample (A | (B, (C | (D, E))) | F)&gt;
&lt;!ELEMENT A (#PCDATA)&gt;
&lt;!ELEMENT B (#PCDATA | F)*&gt;
&lt;!ELEMENT C (#PCDATA)&gt;
&lt;!ELEMENT D (#PCDATA)&gt;
&lt;!ATTLIST D attr CDATA #REQUIRED&gt;
&lt;!ELEMENT E (F, F)&gt;
&lt;!ELEMENT F (#PCDATA)&gt;
</pre></div>
</div>
<a id="ADXDK19950"></a>
<div class="props_rev_3"><a id="GUID-2A91F04F-878F-4C2B-993B-792BAAAC7493"></a>
<h3 id="ADXDK-GUID-2A91F04F-878F-4C2B-993B-792BAAAC7493" class="sect3"><span class="enumeration_section">31.4.3</span> XML C++ Class Generator Example 3: CG Sample Program</h3>
<div>
<p>The CG sample program, <code>CG.cpp</code>, does this:</p>
<ol>
<li>
<p>Initializes the XML parser.</p>
</li>
<li>
<p>Loads the DTD (by parsing the DTD-containing file&mdash;the dummy document part is ignored).</p>
</li>
<li>
<p>Creates some objects using the generated classes.</p>
</li>
<li>
<p>Invokes the validation function which verifies that the constructed classes match the DTD.</p>
</li>
<li>
<p>Writes the constructed document to <code>Sample.xml</code>.</p>
</li>
</ol>
<pre dir="ltr">//////////////////////////////////////////////////////////////////////////////
// NAME        CG.cpp
// DESCRIPTION Demonstration program for C++ class generator usage
//////////////////////////////////////////////////////////////////////////////

#ifndef ORAXMLDOM_ORACLE
# include &lt;oraxmldom.h&gt;
#endif

#include &lt;fstream.h&gt;

#include &#34;Sample.h&#34;

#define DTD_DOCUMENT &#34;CG.xml&#34;
#define OUT_DOCUMENT Sample.xml&#34;

int main()
{
    XMLParser parser;
    Document *doc;
    Sample   *samp;
    B        *b;
    D        *d;
    E        *e;
    F        *f1, *f2;
    fstream  *out;
    ub4       flags = XML_FLAG_VALIDATE;
    uword     ecode;

    // Initialize XML parser
    cout &lt;&lt; &#34;Initializing XML parser...\n&#34;;
    if (ecode = parser.xmlinit())
    {
        cout &lt;&lt; &#34;Failed to initialize parser, code &#34; &lt;&lt; ecode &lt;&lt; &#34;\n&#34;;
        return 1;
    }

    // Parse the document containing a DTD; parsing just a DTD is not
    // possible yet, so the file must contain a valid document (which
    // is parsed but we&#39;re ignoring).
    cout &lt;&lt; &#34;Loading DTD from &#34; &lt;&lt; DTD_DOCUMENT &lt;&lt; &#34;...\n&#34;;
    if (ecode = parser.xmlparse((oratext *) DTD_DOCUMENT, (oratext *)0, flags))
    {
        cout &lt;&lt; &#34;Failed to parse DTD document &#34; &lt;&lt; DTD_DOCUMENT &lt;&lt;
        &#34;, code &#34; &lt;&lt; ecode &lt;&lt; &#34;\n&#34;;
        return 2;
    }

    // Fetch dummy document
    cout &lt;&lt; &#34;Fetching dummy document...\n&#34;;
    doc = parser.getDocument();

    // Create the constituent parts of a Sample
    cout &lt;&lt; &#34;Creating components...\n&#34;;
    b = new B(doc, (String) &#34;Be there or be square&#34;);
    d = new D(doc, (String) &#34;Dit dah&#34;);
    d-&gt;setattr((String) &#34;attribute value&#34;);
    f1 = new F(doc, (String) &#34;Formula1&#34;);
    f2 = new F(doc, (String) &#34;Formula2&#34;);
    e = new E(doc, f1, f2);

    // Create the Sample
    cout &lt;&lt; &#34;Creating top-level element...\n&#34;;
    samp = new Sample(doc, b, d, e);

    // Validate the construct
    cout &lt;&lt; &#34;Validating...\n&#34;;
    if (ecode = parser.validate(samp))
    {
     cout &lt;&lt; &#34;Validation failed, code &#34; &lt;&lt; ecode &lt;&lt; &#34;\n&#34;;
     return 3;
    }

    // Write out doc
    cout &lt;&lt; &#34;Writing document to &#34; &lt;&lt; OUT_DOCUMENT &lt;&lt; &#34;\n&#34;;
    if (!(out = new fstream(OUT_DOCUMENT, ios::out)))
    {
      cout &lt;&lt; &#34;Failed to open output stream\n&#34;;
      return 4;
    }
    samp-&gt;print(out, 0);
    out-&gt;close();

    // Everything&#39;s OK
    cout &lt;&lt; &#34;Success.\n&#34;;

    // Shut down
    parser.xmlterm();
    return 0;
}

// end of CG.cpp
</pre></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment643">
<tr>
<td class="cellalignment670">
<table class="cellalignment648">
<tr>
<td class="cellalignment647"><a href="adx_cp_xpath.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment647"><a href="adx_pt_ref.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment672">
<table class="cellalignment646">
<tr>
<td class="cellalignment647"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment647"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment647"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment647"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment647"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment647"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>