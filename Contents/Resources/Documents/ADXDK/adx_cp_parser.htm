<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-1647"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20the%20XML%20Parser%20for%20C%2B%2B"></a><title>Using the XML Parser for C++</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2016-12-08T13:58:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="XML Developer&#39;s Kit Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E54405-06"/>
<meta name="dcterms.isVersionOf" content="ADXDK"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="adx_cp_unified.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adx_cp_xslt.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E54405-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-CB096401-717C-4EF3-B136-82846BE7F453"></a> <span id="PAGE" style="display:none;">37/50</span> <!-- End Header -->
<a id="ADXDK1049"></a><a id="ADXDK1900"></a>
<h1 id="ADXDK-GUID-CB096401-717C-4EF3-B136-82846BE7F453" class="sect1"><span class="enumeration_chapter">27</span> Using the XML Parser for C++</h1>
<div>
<p>This chapter explains how to use the Extensible Markup Language (XML) parser for C++.</p>
<div class="section">
<p class="subhead1">Topics:</p>
</div>
<!-- class="section" -->
<ul style="list-style-type: disc;">
<li>
<p><a href="adx_cp_parser.htm#GUID-FACA5EE5-5773-445A-BD9F-E4CB137BE28A">Introduction to Parser for C++</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-2A6EE952-2F44-44C6-A46B-69FC1524B93E">DOM Namespace</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-86DC22CC-D2C0-47B8-B3B7-66BFFC7CEAA6">DOM Interfaces</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-6302F695-48C0-476C-934B-D899B85181E4">Parser Namespace</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-3E0065D7-B674-4F97-BD6B-4E4711EFE5A1">Thread Safety</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-1C72388D-34C9-4F0E-B221-2AEFD3A208E5">XML Parser for C++ Usage</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-C7D1B9F8-D34F-4080-984A-DCA51B1E2A84">XML Parser for C++ Default Behavior</a></p>
</li>
<li>
<p><a href="adx_cp_parser.htm#GUID-E287D069-7900-478E-9C0F-B14EFD1818B4">C++ Sample Files</a></p>
</li>
</ul>
<div class="infobox-note" id="GUID-CB096401-717C-4EF3-B136-82846BE7F453__GUID-527B9164-857A-4F2B-8724-5146FD455736">
<p class="notep1">Note:</p>
<p>Use the unified C++ application programming interface (API) in <code>xml.hpp</code> for Oracle XML Developer&#39;s Kit (XDK) applications. The older, nonunified C++ API in <code>oraxml.hpp</code> is deprecated and supported only for backward compatibility. It will be removed in a future release.</p>
</div>
</div>
<a id="ADXDK19903"></a>
<div class="props_rev_3"><a id="GUID-FACA5EE5-5773-445A-BD9F-E4CB137BE28A"></a>
<h2 id="ADXDK-GUID-FACA5EE5-5773-445A-BD9F-E4CB137BE28A" class="sect2"><span class="enumeration_section">27.1</span> Introduction to Parser for C++</h2>
<div>
<p>Oracle XML parser for C++ determines whether an XML document is well-formed and optionally validates it against a document type definition (DTD) or Extensible Markup Language (XML) schema. The parser constructs an object tree that can be accessed through one of these two XML APIs:</p>
<ul style="list-style-type: disc;">
<li>
<p>Document Object Model (DOM): Tree-based APIs. A tree-based API compiles an XML document into an internal tree structure, then allows an application to navigate that tree using the DOM, a standard tree-based API for XML and HTML documents.</p>
</li>
<li>
<p>Simple API for XML (SAX): Event-based APIs. An event-based API reports parsing events (such as the start and end of elements) directly to the application through a user defined SAX even handler, and does not usually build an internal tree. The application implements handlers to deal with the different events, much like handling events in a graphical user interface.</p>
</li>
</ul>
<p>Tree-based APIs are useful for a wide range of applications, but they often put a great strain on system resources, especially if the document is large (under very controlled circumstances, it is possible to construct the tree in a lazy fashion to avoid some of this problem). Furthermore, some applications must build their own, different data trees, and it is very inefficient to build a tree of parse nodes only to map it onto a new tree.</p>
</div>
</div>
<a id="ADXDK19904"></a>
<div class="props_rev_3"><a id="GUID-2A6EE952-2F44-44C6-A46B-69FC1524B93E"></a>
<h2 id="ADXDK-GUID-2A6EE952-2F44-44C6-A46B-69FC1524B93E" class="sect2"><span class="enumeration_section">27.2</span> DOM Namespace</h2>
<div>
<p>This is the namespace for DOM-related types and interfaces.</p>
<p>DOM interfaces are represented as generic references to different implementations of the DOM specification. They are parameterized by <code>Node</code> that supports various specializations and instantiations. Of them, the most important is <code>xmlnode</code> which corresponds to the current C implementation</p>
<p>These generic references do not have a <code>NULL</code>-like value. Any implementation must never create a reference with no state (like <code>NULL</code>). If it is necessary to signal that something has no state, the implementation must throw an exception.</p>
<p>Many methods might throw the <code>SYNTAX_ERR</code> exception, if the DOM tree is incorrectly formed, or they might throw <code>UNDEFINED_ERR</code>, when encountering incorrect parameters or unexpected <code>NULL</code> pointers. If these are the only errors that a particular method might throw, it is not reflected in the method signature.</p>
<p>Actual DOM trees do <span class="italic">not</span> depend on the context, <code>TCtx</code>. However, manipulations on DOM trees in the current, <code>xmlctx</code>-based implementation require access to the current context, <code>TCtx</code>. This is accomplished by passing the context pointer to the constructor of <code>DOMImplRef</code>. In multithreaded environment <code>DOMImplRef</code> is always created in the thread context and, so, has the pointer to the right context.</p>
<p><code>DOMImplRef</code> provides a way to create DOM trees. <code>DomImplRef</code> is a reference to the actual <code>DOMImplementation</code> object that is created when a regular, noncopy constructor of <code>DomImplRef</code> is invoked. This works well in a multithreaded environment where DOM trees must be shared, and each thread has a separate <code>TCtx</code> associated with it. This works equally well in a single threaded environment.</p>
<p><code>DOMString</code> is one encoding supported by Oracle implementations. The support of other encodings is an Oracle extension. The <code>oratext*</code> data type is used for all encodings.Interfaces represent DOM level 2 Core interfaces according to <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html" target="_blank"><code>http://www.w3.org/TR/DOM-Level-2-Core/core.html</code></a>. These C++ interfaces support the DOM specification as closely as possible. However, Oracle cannot guarantee that the specification is fully supported by our implementation because the World Wide Web Consortium (W3C) specification does not cover C++ binding.</p>
</div>
<a id="ADXDK19905"></a>
<div class="props_rev_3"><a id="GUID-FF71CC52-CA6F-4A84-BA28-43F823272E0F"></a>
<h3 id="ADXDK-GUID-FF71CC52-CA6F-4A84-BA28-43F823272E0F" class="sect3"><span class="enumeration_section">27.2.1</span> DOM Data Types</h3>
<div>
<p>DATATYPE DomNodeType&mdash;Defines types of DOM nodes.</p>
<p>DATATYPE DomExceptionCode&mdash;Defines exception codes returned by the DOM API.</p>
</div>
</div>
<a id="ADXDK19906"></a>
<div class="props_rev_3"><a id="GUID-86DC22CC-D2C0-47B8-B3B7-66BFFC7CEAA6"></a>
<h3 id="ADXDK-GUID-86DC22CC-D2C0-47B8-B3B7-66BFFC7CEAA6" class="sect3"><span class="enumeration_section">27.2.2</span> DOM Interfaces</h3>
<div>
<p><code>DOMException</code> Interface&mdash;See exception <code>DOMException</code> in the W3C DOM documentation. DOM operations raise exceptions only in &#34;exceptional&#34; circumstances: when an operation is impossible to perform (either for logical reasons, because data is lost, or because the implementation has become unstable). The functionality of XMLException can be used for a wider range of exceptions.</p>
<p><code>NodeRef</code> Interface&mdash;See interface <code>Node</code> in the W3C documentation.</p>
<p><code>DocumentRef</code> Interface&mdash;See interface <code>Document</code> in the W3C documentation.</p>
<p><code>DocumentFragmentRef</code> Interface&mdash;See interface <code>DocumentFragment</code> in the W3C documentation.</p>
<p><code>ElementRef</code> Interface&mdash;See interface <code>Element</code> in the W3C documentation.</p>
<p><code>AttrRef</code> Interface&mdash;See interface <code>Attr</code> in the W3C documentation.</p>
<p><code>CharacterDataRef</code> Interface&mdash;See interface <code>CharacterData</code> in the W3C documentation.</p>
<p><code>TextRef</code> Interface&mdash;See <code>Text</code> nodes in the W3C documentation.</p>
<p><code>CDATASectionRef</code> Interface&mdash;See <code>CDATASection</code> nodes in the W3C documentation.</p>
<p><code>CommentRef</code> Interface&mdash;See <code>Comment</code> nodes in the W3C documentation.</p>
<p><code>ProcessingInstructionRef</code> Interface&mdash;See <code>PI</code> nodes in the W3C documentation.</p>
<p><code>EntityRef</code> Interface&mdash;See <code>Entity</code> nodes in the W3C documentation.</p>
<p><code>EntityReferenceRef</code> Interface&mdash;See <code>EntityReference</code> nodes in the W3C documentation.</p>
<p><code>NotationRef</code> Interface&mdash;See <code>Notation</code> nodes in the W3C documentation.</p>
<p><code>DocumentTypeRef</code> Interface&mdash;See <code>DTD</code> nodes in the W3C documentation.</p>
<p><code>DOMImplRef</code> Interface&mdash;See interface <code>DOMImplementation</code> in the W3C DOM documentation. <code>DOMImplementation</code> is fundamental for manipulating DOM trees. Every DOM tree is attached to a particular DOM implementation object. Several DOM trees can be attached to the same DOM implementation object. Each DOM tree can be deleted and deallocated by deleting the document object. All DOM trees attached to a particular DOM implementation object are deleted when this object is deleted. The <code>DOMImplementation</code> object is not visible to the user directly. It is visible through the class <code>DOMImplRef</code>. This functionality is needed because of requirements for multithreaded environments.</p>
<p><code>NodeListRef</code> Interface&mdash;Abstract implementation of node list. See interface NodeList in the W3C documentation.</p>
<p><code>NamedNodeMapRef</code> Interface&mdash;Abstract implementation of a node map. See interface NamedNodeMap in the W3C documentation.</p>
</div>
</div>
<a id="ADXDK19907"></a>
<div class="props_rev_3"><a id="GUID-ABFE9393-9C68-4D03-94E4-A607E19760DB"></a>
<h3 id="ADXDK-GUID-ABFE9393-9C68-4D03-94E4-A607E19760DB" class="sect3"><span class="enumeration_section">27.2.3</span> DOM Traversal and Range Data Types</h3>
<div>
<p>DATATYPE <code>AcceptNodeCode</code> defines values returned by node filters provided by the user and passed to iterators and tree walkers.</p>
<p>DATATYPE <code>WhatToShowCode</code> specifies codes to filter certain types of nodes.</p>
<p>DATATYPE <code>RangeExceptionCode</code> specifies Exception kinds that can be thrown by the <code>Range</code> interface.</p>
<p>DATATYPE <code>CompareHowCode</code> specifies kinds of comparisons that can be done on two ranges.</p>
</div>
</div>
<a id="ADXDK19908"></a>
<div class="props_rev_3"><a id="GUID-11DCC153-8E20-4625-AE08-83B729E36C53"></a>
<h3 id="ADXDK-GUID-11DCC153-8E20-4625-AE08-83B729E36C53" class="sect3"><span class="enumeration_section">27.2.4</span> DOM Traversal and Range Interfaces</h3>
<div>
<p><code>NodeFilter</code> Interface&mdash;DOM 2 Node Filter.</p>
<p><code>NodeIterator</code> Interface&mdash;DOM 2 Node Iterator.</p>
<p><code>TreeWalker</code> Interface&mdash;DOM 2 TreeWalker.</p>
<p><code>DocumentTraversal</code> Interface&mdash;DOM 2 interface.</p>
<p><code>RangeException</code> Interface&mdash;Exceptions for DOM 2 Range operations.</p>
<p><code>Range</code> Interface&mdash;DOM 2 Range.</p>
<p><code>DocumentRange</code> Interface&mdash;DOM 2 interface.</p>
</div>
</div>
</div>
<a id="ADXDK19909"></a>
<div class="props_rev_3"><a id="GUID-6302F695-48C0-476C-934B-D899B85181E4"></a>
<h2 id="ADXDK-GUID-6302F695-48C0-476C-934B-D899B85181E4" class="sect2"><span class="enumeration_section">27.3</span> Parser Namespace</h2>
<div>
<p><code>DOMParser</code> Interface&mdash;DOM parser root class.</p>
<p><code>GParser</code> Interface&mdash;Root class for XML parsers.</p>
<p><code>ParserException</code> Interface&mdash;Exception class for parser and validator.</p>
<p><code>SAXHandler</code> Interface&mdash;Root class for current SAX handler implementations.</p>
<p><code>SAXHandlerRoot</code> Interface&mdash;Root class for all SAX handlers.</p>
<p><code>SAXParser</code> Interface&mdash;Root class for all SAX parsers.</p>
<p><code>SchemaValidator</code> Interface&mdash;XML schema-aware validator.</p>
</div>
<a id="ADXDK19910"></a>
<div class="props_rev_3"><a id="GUID-6C9A9704-C1F3-4AF3-AE0A-ED7885716DE4"></a>
<h3 id="ADXDK-GUID-6C9A9704-C1F3-4AF3-AE0A-ED7885716DE4" class="sect3"><span class="enumeration_section">27.3.1</span> GParser Interface</h3>
<div>
<p><code>GParser</code> Interface&mdash;Root class for all XML parser interfaces and implementations. It is not an abstract class, that is, it is not an interface. It is a real class that allows users to set and check parser parameters.</p>
</div>
</div>
<a id="ADXDK19911"></a>
<div class="props_rev_3"><a id="GUID-DB125AE0-9DD3-4B34-9C57-D8E836D99F27"></a>
<h3 id="ADXDK-GUID-DB125AE0-9DD3-4B34-9C57-D8E836D99F27" class="sect3"><span class="enumeration_section">27.3.2</span> DOMParser Interface</h3>
<div>
<p><code>DOMParser</code> Interface&mdash;DOM parser root abstract class or interface. In addition to parsing and checking that a document is well formed, <code>DOMParser</code> provides means to validate the document against document type definition (DTD) or XML schema.</p>
</div>
</div>
<a id="ADXDK19912"></a>
<div class="sect3"><a id="GUID-60D4D681-62BC-42BC-9DA2-3497CE960472"></a>
<h3 id="ADXDK-GUID-60D4D681-62BC-42BC-9DA2-3497CE960472" class="sect3"><span class="enumeration_section">27.3.3</span> SAXParser Interface</h3>
<div>
<p><code>SAXParser</code> Interface&mdash;Root abstract class for all SAX parsers.</p>
</div>
<a id="ADXDK19913"></a>
<div class="props_rev_3"><a id="GUID-534185D2-CA00-47E5-989B-4900793A8594"></a>
<h4 id="ADXDK-GUID-534185D2-CA00-47E5-989B-4900793A8594" class="sect4"><span class="enumeration_section">27.3.3.1</span> SAX Event Handlers</h4>
<div>
<p>To use SAX, a SAX event handler class must be provided by the user and passed to the SAXParser in a <code>parse()</code> invocation or set before such invocation.</p>
<p><code>SAXHandlerRoot</code> Interface&mdash;root class for all SAX handlers.</p>
<p><code>SAXHandler</code> Interface&mdash;root class for current SAX handler implementations.</p>
</div>
</div>
</div>
</div>
<a id="ADXDK19914"></a>
<div class="props_rev_3"><a id="GUID-3E0065D7-B674-4F97-BD6B-4E4711EFE5A1"></a>
<h2 id="ADXDK-GUID-3E0065D7-B674-4F97-BD6B-4E4711EFE5A1" class="sect2"><span class="enumeration_section">27.4</span> Thread Safety</h2>
<div>
<p>If threads are forked off somewhere in the midst of the init-parse-term sequence of invocations, unpredictable behavior and results occur.</p>
</div>
</div>
<a id="ADXDK19915"></a>
<div class="props_rev_3"><a id="GUID-1C72388D-34C9-4F0E-B221-2AEFD3A208E5"></a>
<h2 id="ADXDK-GUID-1C72388D-34C9-4F0E-B221-2AEFD3A208E5" class="sect2"><span class="enumeration_section">27.5</span> XML Parser for C++ Usage</h2>
<div>
<ol>
<li>
<p>Invoke <code>Tools::Factory</code> to create a parser initializes the parsing process.</p>
</li>
<li>
<p>The XML input can be any of the <code>InputSource</code> kinds (see <code>IO</code> namespace).</p>
</li>
<li>
<p><code>DOMParser</code> invocation produces the DOM tree.</p>
</li>
<li>
<p><code>SAXParser</code> invocation produces SAX events.</p>
</li>
<li>
<p>Invoking <code>parser</code> destructor terminates the process.</p>
</li>
</ol>
</div>
</div>
<a id="ADXDK19916"></a>
<div class="props_rev_3"><a id="GUID-C7D1B9F8-D34F-4080-984A-DCA51B1E2A84"></a>
<h2 id="ADXDK-GUID-C7D1B9F8-D34F-4080-984A-DCA51B1E2A84" class="sect2"><span class="enumeration_section">27.6</span> XML Parser for C++ Default Behavior</h2>
<div>
<p>The following is the XML parser for C++ default behavior:</p>
<ul style="list-style-type: disc;">
<li>
<p>Character set encoding is 8-bit encoding of Unicode (UTF-8). If all your documents are ASCII, you are encouraged to set the encoding to US-ASCII for better performance.</p>
</li>
<li>
<p>Messages are printed to <code>stderr</code> unless <code>msghdlr</code> is specified.</p>
</li>
<li>
<p>XML parser for C++ determines whether an XML document is well-formed and optionally validates it against a DTD. The parser constructs an object tree that can be accessed through a DOM interface or operates serially through a SAX interface.</p>
</li>
<li>
<p>A parse tree which can be accessed by DOM APIs is built unless <code>saxcb</code> is set to use the SAX callback APIs. You can set any of the SAX callback functions to <code>NULL</code> if not needed.</p>
</li>
<li>
<p>The default behavior for the parser is to check that the input is well-formed but not to check whether it is valid. The flag <code>XML_FLAG_VALIDATE</code> can be set to validate the input. The default behavior for white space processing is to be fully conformant with the XML 1.0 spec, that is, all white space is reported back to the application but it is indicated which white space is ignorable. However, some applications may prefer to set the <code>XML_FLAG_DISCARD_WHITESPACE</code> which discards all white space between an end-element tag and this start-element tag.</p>
<div class="infobox-note" id="GUID-C7D1B9F8-D34F-4080-984A-DCA51B1E2A84__GUID-D804EB74-5807-49A0-945B-EC24157C5266">
<p class="notep1">Note:</p>
<p>Oracle recommends that you set the default encoding explicitly if using only single-byte character sets (such as US-ASCII or any of the ISO-8859 character sets) for performance up to 25% faster than with multibyte character sets, such as UTF-8.</p>
</div>
</li>
<li>
<p>In both of these cases, an event-based API provides a simpler, lower-level access to an XML document: you can parse documents much larger than your available system memory, and you can construct your own data structures using your callback event handlers.</p>
</li>
</ul>
</div>
</div>
<a id="ADXDK19918"></a><a id="ADXDK19917"></a>
<div class="props_rev_3"><a id="GUID-E287D069-7900-478E-9C0F-B14EFD1818B4"></a>
<h2 id="ADXDK-GUID-E287D069-7900-478E-9C0F-B14EFD1818B4" class="sect2"><span class="enumeration_section">27.7</span> C++ Sample Files</h2>
<div>
<div class="section">
<p><code>xdk/demo/cpp/parser/</code> directory contains several XML applications to show how to use the XML parser for C++ with the DOM and SAX interfaces.</p>
<p>Change directories to the sample directory (<code>$ORACLE_HOME/xdk/demo/cpp</code> on Solaris, for example) and read the <code>README</code> file. This document explains how to build the sample programs.</p>
<p><a href="adx_cp_parser.htm#GUID-E287D069-7900-478E-9C0F-B14EFD1818B4__g1026908" title="Sample File Name and Description are the columns.">Table 27-1</a> lists the sample files in the directory. Each file <code>*Main.cpp</code> has a corresponding <code>*Gen.cpp</code> and <code>*Gen.hpp</code>.</p>
<div class="tblformal" id="GUID-E287D069-7900-478E-9C0F-B14EFD1818B4__g1026908">
<p class="titleintable">Table 27-1 XML Parser for C++ Sample Files</p>
<table class="cellalignment650" title="XML Parser for C++ Sample Files " summary="Sample File Name and Description are the columns.">
<thead>
<tr class="cellalignment644">
<th class="cellalignment681" id="d114930e1719">Sample File Name</th>
<th class="cellalignment682" id="d114930e1722">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment644">
<td class="cellalignment683" id="d114930e1727" headers="d114930e1719">
<pre dir="ltr">DOMSampleMain.cpp
</pre></td>
<td class="cellalignment684" headers="d114930e1727 d114930e1722">
<p>Sample usage of C++ interfaces of XML parser and DOM.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d114930e1734" headers="d114930e1719">
<pre dir="ltr">FullDOMSampleMain.cpp
</pre></td>
<td class="cellalignment684" headers="d114930e1734 d114930e1722">
<p>Manually build DOM and then exercise.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d114930e1741" headers="d114930e1719">
<pre dir="ltr">SAXSampleMain.cpp
</pre></td>
<td class="cellalignment684" headers="d114930e1741 d114930e1722">
<p>Source for SAXSample program.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-E287D069-7900-478E-9C0F-B14EFD1818B4__GUID-236FE91A-A45B-4B00-BE6D-44151AFDC190">
<p class="notep1">See Also:</p>
<p><a class="olink CPXML01600" target="_blank" href="../CPXML/parser.htm#CPXML01600"><span class="italic">Oracle Database XML C++ API Reference</span></a> for parser package APIs for C++</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment643">
<tr>
<td class="cellalignment670">
<table class="cellalignment648">
<tr>
<td class="cellalignment647"><a href="adx_cp_unified.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment647"><a href="adx_cp_xslt.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment672">
<table class="cellalignment646">
<tr>
<td class="cellalignment647"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment647"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment647"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment647"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment647"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment647"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>