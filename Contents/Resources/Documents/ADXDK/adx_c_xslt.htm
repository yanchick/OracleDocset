<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-1644"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20the%20XSLT%20and%20XVM%20Processors%20for%20C"></a><title>Using the XSLT and XVM Processors for C</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="XVM (XSLT Virtual Machine) processor, XSLT compiler, XVM, XSLT processor, XML parser for C, sample programs, C components, demos, samples"/>
<meta name="dcterms.created" content="2016-12-08T13:58:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="XML Developer&#39;s Kit Programmer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E54405-06"/>
<meta name="dcterms.isVersionOf" content="ADXDK"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="adx_c_gs.htm" title="Previous" type="text/html"/>
<link rel="Next" href="adx_c_parser.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E54405-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-B3A16C90-32AB-4674-8702-7A7DFF201740"></a> <span id="PAGE" style="display:none;">28/50</span> <!-- End Header -->
<a id="ADXDK1034"></a><a id="ADXDK1500"></a>
<h1 id="ADXDK-GUID-B3A16C90-32AB-4674-8702-7A7DFF201740" class="sect1"><span class="enumeration_chapter">19</span> Using the XSLT and XVM Processors for C</h1>
<div>
<p>This chapter explains how to use the Extensible Stylesheet Language Transformation (XSLT) and XSLT Virtual Machine (XVM) processors for C.</p>
<div class="section">
<p class="subhead1">Topics:</p>
</div>
<!-- class="section" -->
<ul style="list-style-type: disc;">
<li>
<p><a href="adx_c_xslt.htm#GUID-213B080D-4E67-4582-A7B2-8B01444ABC08">XSLT XVM Processor</a></p>
</li>
<li>
<p><a href="adx_c_xslt.htm#GUID-F7FC4D39-50C1-429E-99B0-418BF3DA09AB">XSLT Processor</a></p>
</li>
<li>
<p><a href="adx_c_xslt.htm#GUID-87A0DF47-12BC-480C-95EA-F785601FA26C">Using the Demo Files Included with the Software</a></p>
</li>
</ul>
<div class="infobox-note" id="GUID-B3A16C90-32AB-4674-8702-7A7DFF201740__GUID-67E19F18-86F6-47DF-AD94-F6E9AB1658DF">
<p class="notep1">Note:</p>
<p>Use the unified C application programming interface (API) for Oracle XML Developer&#39;s Kit (XDK) and Oracle XML DB applications. Older, nonunified C functions are deprecated and supported only for backward compatibility. They will be removed in a future release.</p>
<p>The unified C API is described in <a href="adx_c_parser.htm#GUID-6A39885C-865B-4386-B49C-1FBAB09529C6">Using the XML Parser for C</a>.</p>
</div>
</div>
<a id="ADXDK19736"></a>
<div class="props_rev_3"><a id="GUID-213B080D-4E67-4582-A7B2-8B01444ABC08"></a>
<h2 id="ADXDK-GUID-213B080D-4E67-4582-A7B2-8B01444ABC08" class="sect2"><span class="enumeration_section">19.1</span> XSLT XVM Processor</h2>
<div>
<p>The Oracle XVM Package includes the XSLT Compiler and the XVM. This package implements the XSLT language as specified in the World Wide Web Consortium (W3C) Recommendation of 16 November 1999.</p>
<p>Implementing the XSLT compiler and the XVM enables compilation of XSLT (Version 1.0) into bytecode format, which is executed by the virtual machine. XVM is the software implementation of a &#34;CPU&#34; designed to run compiled XSLT code. The virtual machine assumes a compiler compiling XSLT style sheets to a sequence of bytecodes or machine instructions for the &#34;XSLT CPU&#34;. The bytecode program is a platform-independent sequence of 2-byte units. It can be stored, cached, and run on different XVMs. The XVM uses the bytecode programs to transform instance Extensible Markup Language (XML) documents. This approach clearly separates compile-time from runtime computations and specifies a uniform way of exchanging data between instructions.</p>
<p>The benefits of this approach are:</p>
<ul style="list-style-type: disc;">
<li>
<p>An XSLT style sheet can be compiled, saved in a file, and reused often, even on different platforms.</p>
</li>
<li>
<p>The XVM is significantly faster and uses less memory than other XSLT processors.</p>
</li>
<li>
<p>The bytecodes are not language-dependent. There is no difference between code generated from a C or C++ XSLT compiler.</p>
</li>
</ul>
</div>
<a id="ADXDK19737"></a>
<div class="sect3"><a id="GUID-878FBD76-B8AA-487E-A9F6-54BA47229BD4"></a>
<h3 id="ADXDK-GUID-878FBD76-B8AA-487E-A9F6-54BA47229BD4" class="sect3"><span class="enumeration_section">19.1.1</span> XVM Usage Example</h3>
<div>
<p>A typical scenario of using the package APIs has these steps:</p>
<ol>
<li>
<p>Create and use an XML meta-context object.</p>
<pre dir="ltr">xctx = XmlCreate(&amp;err,...);
</pre></li>
<li>
<p>Create and use an XSLT compiler object.</p>
<pre dir="ltr">comp = XmlXvmCreateComp(xctx);
</pre></li>
<li>
<p>Compile an XSLT style sheet or XPath expression and store or cache the resulting bytecode.</p>
<pre dir="ltr">code = XmlXvmCompileFile(comp, xslFile, baseuri, flags, &amp;err);
</pre>
<p>or</p>
<pre dir="ltr">code = XmlXvmCompileDom (comp, xslDomdoc, flags, &amp;err);
</pre>
<p>or</p>
<pre dir="ltr">code = XmlXvmCompileXPath (comp, xpathexp,  namespaces, &amp;err);
</pre></li>
<li>
<p>Create and use an XVM object. The explicit stack size setting is needed when XVM terminates with a &#34;Stack Overflow&#34; message or when smaller memory footprints are required. See <code>XmlXvmCreate()</code>.</p>
<pre dir="ltr">vm = XmlXvmCreate(xctx, &#34;StringStack&#34;, 32, &#34;NodeStack&#34;, 24, NULL);
</pre></li>
<li>
<p>Set the output (optional). Default is a stream.</p>
<pre dir="ltr">err = XmlXvmSetOutputDom (vm, NULL);
</pre>
<p>or</p>
<pre dir="ltr">err = XmlXvmSetOutputStream(vm, &amp;xvm_stream);
</pre>
<p>or</p>
<pre dir="ltr">err = XmlXvmSetOutputSax(vm, &amp;xvm_callback, NULL);
</pre></li>
<li>
<p>Set a style sheet bytecode to the XVM object. Can be repeated with other bytecode.</p>
<pre dir="ltr">len = XmlXvmGetBytecodeLength(code, &amp;err);
err = XmlXvmSetBytecodeBuffer(vm, code, len);
</pre>
<p>or</p>
<pre dir="ltr">err = XmlXvmSetBytecodeFile (vm, xslBytecodeFile);
</pre></li>
<li>
<p>Transform an instance XML document or evaluate a compiled XPath expression. Can be repeated with the same or other XML documents.</p>
<pre dir="ltr">err = XmlXvmTransformFile(vm, xmlFile, baseuri);
</pre>
<p>or</p>
<pre dir="ltr">err = XmlXvmTransformDom (vm, xmlDomdoc);
</pre>
<p>or</p>
<pre dir="ltr">obj  = (xvmobj*)XmlXvmEvaluateXPath (vm, code, 1, 1, node);
</pre></li>
<li>
<p>Get the output tree fragment (if DOM output is set at Step 5).</p>
<pre dir="ltr">node = XmlXvmGetOutputDom (vm);
</pre></li>
<li>
<p>Delete the objects.</p>
<pre dir="ltr">XmlXvmDestroy(vm);
XmlXvmDestroyComp(comp);
XmlDestroy(xctx);
</pre></li>
</ol>
</div>
</div>
<a id="ADXDK19738"></a>
<div class="props_rev_3"><a id="GUID-532E246D-6ACF-4A29-B6C9-068E9B2943D0"></a>
<h3 id="ADXDK-GUID-532E246D-6ACF-4A29-B6C9-068E9B2943D0" class="sect3"><span class="enumeration_section">19.1.2</span> Using the XVM Processor Command-Line Utility</h3>
<div>
<div class="section">
<p>The XVM processor is accessed from the command-line this way:</p>
<pre dir="ltr">xvm
</pre>
<p>Usage:</p>
<pre dir="ltr">xvm <span class="italic">options xslfile xmlfile</span>
</pre>
<pre dir="ltr">xvm <span class="italic">options xpath xmlfile</span>
</pre>
<p>Options:</p>
<pre dir="ltr">-c        Compile <span class="italic">xslfile</span>. The bytecode is in <span class="italic">&#34;xmlfile.xvm&#34;</span>.
-ct       Compile <span class="italic">xslfile</span> and transform <span class="italic">xmlfile</span>.
-t        Transform <span class="italic">xmlfile</span> using bytecode from <span class="italic">xslfile</span>.
-xc       Compile <span class="italic">xpath</span>. The bytecode is in &#34;code.xvm&#34;.
-xct      Compile and evaluate <span class="italic">xpath</span> with <span class="italic">xmlfile</span>.
-xt       Evaluate XPath bytecode from <span class="italic">xpath</span> with <span class="italic">xmlfile</span>.
</pre>
<p>Examples:</p>
<pre dir="ltr">xvm -ct  db.xsl db.xml
xvm -t   db.xvm db.xml
xvm -xct &#34;doc/employee[15]/family&#34; db.xml
</pre></div>
<!-- class="section" --></div>
</div>
<a id="ADXDK19739"></a>
<div class="props_rev_3"><a id="GUID-43FBC32F-6560-4060-90C6-17F4EEC3FB02"></a>
<h3 id="ADXDK-GUID-43FBC32F-6560-4060-90C6-17F4EEC3FB02" class="sect3"><span class="enumeration_section">19.1.3</span> Accessing XVM Processor for C</h3>
<div>
<p>Oracle XVM Processor for C is part of the standard installation of Oracle Database.</p>
<div class="infoboxnotealso" id="GUID-43FBC32F-6560-4060-90C6-17F4EEC3FB02__GUID-106F0ADD-F80E-4774-8407-1486CB35AD60">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink CAXML00900" target="_blank" href="../CAXML/xsltvm.htm#CAXML00900"><span class="italic">Oracle Database XML C API Reference</span></a> &#34;XSLTVM APIs for C&#34;</p>
</li>
<li>
<p><a href="http://www.oracle.com/technetwork/database-features/xdk/overview/index.html" target="_blank"><code>http://www.oracle.com/technetwork/database-features/xdk/overview/index.html</code></a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="ADXDK175"></a>
<div class="props_rev_3"><a id="GUID-F7FC4D39-50C1-429E-99B0-418BF3DA09AB"></a>
<h2 id="ADXDK-GUID-F7FC4D39-50C1-429E-99B0-418BF3DA09AB" class="sect2"><span class="enumeration_section">19.2</span> XSLT Processor</h2>
<div>
<p><span>The Oracle XSL/XPath Package implements the XSLT language as specified in the W3C Recommendation of 16 November 1999. The package includes the XSLT processor and XPath Processor. The Oracle implementation of the XSLT processor follows the more common design approach, which melds &#34;compiler&#34; and &#34;processor&#34; into one object.</span></p>
</div>
<a id="ADXDK176"></a>
<div class="props_rev_3"><a id="GUID-2D19F36B-E087-4FD5-8A61-8DAC37329297"></a>
<h3 id="ADXDK-GUID-2D19F36B-E087-4FD5-8A61-8DAC37329297" class="sect3"><span class="enumeration_section">19.2.1</span> XSLT Processor Usage Example</h3>
<div>
<p>A typical scenario of using the package APIs has these steps:</p>
<ol>
<li>
<p>Create and use an XML meta-context object.</p>
<pre dir="ltr">xctx = XmlCreate(&amp;err,...);
</pre></li>
<li>
<p>Parse the XSLT stylesheet.</p>
<pre dir="ltr">xslDomdoc = XmlLoadDom(xctx, &amp;err, &#34;file&#34;, xslFile, &#34;base_uri&#34;, baseuri, NULL);
</pre></li>
<li>
<p>Create an XSLT processor for the stylesheet</p>
<pre dir="ltr">xslproc = XmlXslCreate (xctx, xslDomdoc, baseuri, &amp;err);
</pre></li>
<li>
<p>Parse the instance XML document.</p>
<pre dir="ltr">xmlDomdoc = XmlLoadDom(xctx, &amp;err, &#34;file&#34;, xmlFile,  &#34;base_uri&#34;, baseuri, NULL);
</pre></li>
<li>
<p>Set the output (optional). Default is Document Object Model (DOM).</p>
<pre dir="ltr">err = XmlXslSetOutputStream(xslproc, &amp;stream);
</pre></li>
<li>
<p>Transform the XML document. This step can be repeated with the same or other XML documents.</p>
<pre dir="ltr">err = XmlXslProcess (xslproc, xmlDomdoc, FALSE);
</pre></li>
<li>
<p>Get the output (if DOM).</p>
<pre dir="ltr">node = XmlXslGetOutput(xslproc);
</pre></li>
<li>
<p>Delete objects.</p>
<pre dir="ltr">XmlXslDestroy(xslproc);
XmlDestroy(xctx);
</pre></li>
</ol>
</div>
</div>
<a id="ADXDK177"></a>
<div class="props_rev_3"><a id="GUID-7EBB5A31-D257-4FC4-BD16-C0301A0151D1"></a>
<h3 id="ADXDK-GUID-7EBB5A31-D257-4FC4-BD16-C0301A0151D1" class="sect3"><span class="enumeration_section">19.2.2</span> XPath Processor Usage Example</h3>
<div>
<p>A typical scenario of using the package APIs has these steps:</p>
<ol>
<li>
<p>Create and use an XML meta-context object.</p>
<pre dir="ltr">xctx = XmlCreate(&amp;err,...);
</pre></li>
<li>
<p>Parse the XML document or get the current node from already existing DOM.</p>
<pre dir="ltr">node = XmlLoadDom(xctx, &amp;err, &#34;file&#34;, xmlFile,  &#34;base_uri&#34;, baseuri, NULL);
</pre></li>
<li>
<p>Create an XPath processor.</p>
<pre dir="ltr">xptproc = XmlXPathCreateCtx(xctx, NULL, node, 0, NULL);
</pre></li>
<li>
<p>Parse the XPath expression.</p>
<pre dir="ltr">exp = XmlXPathParse (xptproc, xpathexpr, &amp;err);
</pre></li>
<li>
<p>Evaluate the XPath expression.</p>
<pre dir="ltr">obj = XmlXPathEval(xptproc, exp, &amp;err);
</pre></li>
<li>
<p>Delete the objects.</p>
<pre dir="ltr">XmlXPathDestroyCtx (xptproc);
XmlDestroy(xctx);
</pre></li>
</ol>
</div>
</div>
<a id="ADXDK179"></a><a id="ADXDK178"></a>
<div class="props_rev_3"><a id="GUID-4110C9EB-1405-45EF-AD43-5ACAFDCACA4F"></a>
<h3 id="ADXDK-GUID-4110C9EB-1405-45EF-AD43-5ACAFDCACA4F" class="sect3"><span class="enumeration_section">19.2.3</span> Using the C XSLT Processor Command-Line Utility</h3>
<div>
<div class="section">
<p>You can call the C Oracle XSLT processor as an executable by invoking <code>bin/xsl:</code></p>
<pre dir="ltr">xsl [switches] <span class="italic">stylesheet</span> <span class="italic">instance</span>
or
xsl -f [switches] [<span class="italic">document filespec</span>]
</pre>
<p>If no style sheet is provided, no output is generated. If there is a style sheet, but no output file, output goes to <code>stdout</code>.</p>
<p><a href="adx_c_xslt.htm#GUID-4110C9EB-1405-45EF-AD43-5ACAFDCACA4F__BABEBJEC" title="Options and descriptions of XSL Processor for C.">Table 19-1</a> lists the command line options.</p>
<div class="tblformal" id="GUID-4110C9EB-1405-45EF-AD43-5ACAFDCACA4F__BABEBJEC">
<p class="titleintable">Table 19-1 XSLT Processor for C: Command Line Options</p>
<table class="cellalignment650" title="XSLT Processor for C: Command Line Options " summary="Options and descriptions of XSL Processor for C.">
<thead>
<tr class="cellalignment644">
<th class="cellalignment681" id="d100454e1020">Option</th>
<th class="cellalignment682" id="d100454e1023">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1028" headers="d100454e1020">
<pre dir="ltr">-B <span class="italic">BaseUri</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1028 d100454e1023">
<p>Set the Base URI for XSLT processor: <code>BaseUri</code> of <code>http://pqr/xsl.txt</code> resolves <code>pqr.txt</code> to <code>http://pqr/pqr.txt</code></p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1048" headers="d100454e1020">
<pre dir="ltr">-e <span class="italic">encoding</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1048 d100454e1023">
<p>Specify default input file encoding (<code>-ee</code> to force).</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1060" headers="d100454e1020">
<pre dir="ltr">-E <span class="italic">encoding</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1060 d100454e1023">
<p>Specify DOM or Simple API for XML (SAX) encoding.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1069" headers="d100454e1020">
<pre dir="ltr">-f
</pre></td>
<td class="cellalignment684" headers="d100454e1069 d100454e1023">
<p>File&mdash;interpret as filespec, not Universal Resource Identifier (URI).</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1076" headers="d100454e1020">
<pre dir="ltr">-G <span class="italic">xptrexprs</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1076 d100454e1023">
<p>Evaluates XPointer schema examples given in a file.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1085" headers="d100454e1020">
<pre dir="ltr">-h
</pre></td>
<td class="cellalignment684" headers="d100454e1085 d100454e1023">
<p>Help&mdash;show this usage. (Use <code>-hh</code> for more options.)</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1095" headers="d100454e1020">
<pre dir="ltr">-hh
</pre></td>
<td class="cellalignment684" headers="d100454e1095 d100454e1023">
<p>Show complete options list.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1102" headers="d100454e1020">
<pre dir="ltr">-i <span class="italic">n</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1102 d100454e1023">
<p>Number of times to iterate the XSLT processing.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1111" headers="d100454e1020">
<pre dir="ltr">-l <span class="italic">language</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1111 d100454e1023">
<p>Language for error reporting.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1120" headers="d100454e1020">
<pre dir="ltr">-o <span class="italic">XSLoutfile</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1120 d100454e1023">
<p>Specifies output file of XSLT processor.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1129" headers="d100454e1020">
<pre dir="ltr">-v
</pre></td>
<td class="cellalignment684" headers="d100454e1129 d100454e1023">
<p>Version&mdash;display parser version then exit.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1137" headers="d100454e1020">
<pre dir="ltr">-V <span class="italic">var value</span>
</pre></td>
<td class="cellalignment684" headers="d100454e1137 d100454e1023">
<p>Test top-level variables in C XSLT.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1146" headers="d100454e1020">
<pre dir="ltr">-w
</pre></td>
<td class="cellalignment684" headers="d100454e1146 d100454e1023">
<p>White Space&mdash;preserve all white space.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1153" headers="d100454e1020">
<pre dir="ltr">-W
</pre></td>
<td class="cellalignment684" headers="d100454e1153 d100454e1023">
<p>Warning&mdash;stop parsing after a warning.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" --></div>
</div>
<a id="ADXDK180"></a>
<div class="props_rev_3"><a id="GUID-75F8606C-0FF2-4D80-8800-61114C5BA3C4"></a>
<h3 id="ADXDK-GUID-75F8606C-0FF2-4D80-8800-61114C5BA3C4" class="sect3"><span class="enumeration_section">19.2.4</span> Accessing Oracle XSLT processor for C</h3>
<div>
<p>Oracle XSLT processor for C is part of the standard installation of Oracle Database.</p>
<div class="infoboxnotealso" id="GUID-75F8606C-0FF2-4D80-8800-61114C5BA3C4__GUID-C267C0C9-713B-42FD-BF8C-2061C6E59FF1">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink CAXML00800" target="_blank" href="../CAXML/xslt.htm#CAXML00800"><span class="italic">Oracle Database XML C API Reference</span></a> &#34;XSLT APIs for C&#34;</p>
</li>
<li>
<p><a class="olink CAXML00700" target="_blank" href="../CAXML/xpath.htm#CAXML00700"><span class="italic">Oracle Database XML C API Reference</span></a> &#34;XPath APIs for C&#34;</p>
</li>
<li>
<p><a href="http://www.oracle.com/technetwork/database-features/xdk/overview/index.html" target="_blank"><code>http://www.oracle.com/technetwork/database-features/xdk/overview/index.html</code></a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="ADXDK19747"></a><a id="ADXDK19746"></a>
<div class="props_rev_3"><a id="GUID-87A0DF47-12BC-480C-95EA-F785601FA26C"></a>
<h2 id="ADXDK-GUID-87A0DF47-12BC-480C-95EA-F785601FA26C" class="sect2"><span class="enumeration_section">19.3</span> Using the Demo Files Included with the Software</h2>
<div>
<div class="section">
<p><code>$ORACLE_HOME/xdk/demo/c/parser/</code> directory contains several XML applications to show how to use the XSLT for C.</p>
<p><a href="adx_c_xslt.htm#GUID-87A0DF47-12BC-480C-95EA-F785601FA26C__CHDDEEHF" title="Sample File Name and description are the columns.">Table 19-2</a> lists the files in that directory:</p>
<div class="tblformal" id="GUID-87A0DF47-12BC-480C-95EA-F785601FA26C__CHDDEEHF">
<p class="titleintable">Table 19-2 XSLT for C Demo Files</p>
<table class="cellalignment650" title="XSLT for C Demo Files " summary="Sample File Name and description are the columns.">
<thead>
<tr class="cellalignment644">
<th class="cellalignment681" id="d100454e1362">Sample File Name</th>
<th class="cellalignment682" id="d100454e1365">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1370" headers="d100454e1362">
<p><code>XSLSample.c</code></p>
</td>
<td class="cellalignment684" headers="d100454e1370 d100454e1365">
<p>Source for XSLSample program</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1378" headers="d100454e1362">
<p><code>XSLSample.std</code></p>
</td>
<td class="cellalignment684" headers="d100454e1378 d100454e1365">
<p>Expected output from XSLSample</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1386" headers="d100454e1362">
<p><code>class.xml</code></p>
</td>
<td class="cellalignment684" headers="d100454e1386 d100454e1365">
<p>XML file that can be used with XSLSample</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1394" headers="d100454e1362">
<p><code>iden.xsl</code></p>
</td>
<td class="cellalignment684" headers="d100454e1394 d100454e1365">
<p>Style sheet that can be used with XSLSample</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1402" headers="d100454e1362">
<p><code>cleo.xml</code></p>
</td>
<td class="cellalignment684" headers="d100454e1402 d100454e1365">
<p>XML version of Shakespeare&#39;s play</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1410" headers="d100454e1362">
<p><code>XVMSample.c</code></p>
</td>
<td class="cellalignment684" headers="d100454e1410 d100454e1365">
<p>Sample usage of XVM and compiler. It takes two file names as input&mdash;XML file and XSLT style sheet file.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1418" headers="d100454e1362">
<p><code>XVMXPathSample.c</code></p>
</td>
<td class="cellalignment684" headers="d100454e1418 d100454e1365">
<p>Sample usage of XVM and compiler. It takes XML file name and <code>XPath</code> expression as input. Generates the result of the evaluated <code>XPath</code> expression.</p>
</td>
</tr>
<tr class="cellalignment644">
<td class="cellalignment683" id="d100454e1432" headers="d100454e1362">
<p><code>XSLXPathSample.c</code></p>
</td>
<td class="cellalignment684" headers="d100454e1432 d100454e1365">
<p>Sample usage of <code>XSL/XPath</code> processor. It takes XML file name and <code>XPath</code> expression as input. Generates the result of the evaluated <code>XPath</code> expression.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" --></div>
<a id="ADXDK19748"></a>
<div class="props_rev_3"><a id="GUID-4B64EA5A-2EB3-4900-9C24-A5AFE3980E56"></a>
<h3 id="ADXDK-GUID-4B64EA5A-2EB3-4900-9C24-A5AFE3980E56" class="sect3"><span class="enumeration_section">19.3.1</span> Building the C Demo Programs for XSLT</h3>
<div>
<div class="section">
<p>Change directories to the demo directory and read the README file. This document explains how to build the sample programs according to your operating system.</p>
<p>Here is the usage of XSLT processor sample <code>XSLSample</code>, which takes two files as input, the XML file and the XSLT style sheet:</p>
<pre dir="ltr">XSLSample <span class="italic">xmlfile</span> <span class="italic">xslss</span>
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment643">
<tr>
<td class="cellalignment670">
<table class="cellalignment648">
<tr>
<td class="cellalignment647"><a href="adx_c_gs.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment647"><a href="adx_c_parser.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2016, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment672">
<table class="cellalignment646">
<tr>
<td class="cellalignment647"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment647"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment647"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment647"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment647"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment647"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>