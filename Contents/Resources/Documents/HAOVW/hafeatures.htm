<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-46479"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Features%20for%20Maximizing%20Availability"></a><title>Features for Maximizing Availability</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-08-08T6:4:55Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database High Availability Overview"/>
<meta name="dcterms.identifier" content="E49097-04"/>
<meta name="dcterms.isVersionOf" content="HAOVW"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2005, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="hadesign.htm" title="Previous" type="text/html"/>
<link rel="Next" href="unplanned.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49097-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/16</span> <!-- End Header -->
<script>
<!-- // <![CDATA[
window.name='hafeatures'
// ]]> -->
</script> <script>
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="HAOVW11953" class="chapter"><a id="CIHFBHGH"></a>
<h1 class="chapter"><span class="secnum">3</span> Features for Maximizing Availability</h1>
<p>This chapter describes the Oracle Database features used in MAA solutions.</p>
<ul>
<li>
<p><a href="#BABECHJC">Oracle Data Guard</a></p>
</li>
<li>
<p><a href="#CIHCEJAD">Oracle GoldenGate</a></p>
</li>
<li>
<p><a href="#CIHHJCGI">Best Practice: Oracle Active Data Guard and Oracle GoldenGate</a></p>
</li>
<li>
<p><a href="#BABIDGGC">Recovery Manager</a></p>
</li>
<li>
<p><a href="#BABCGEAB">Oracle Secure Backup</a></p>
</li>
<li>
<p><a href="#BABJDCJB">Oracle Real Application Clusters and Oracle Clusterware</a></p>
</li>
<li>
<p><a href="#BABICFCD">Oracle RAC One Node</a></p>
</li>
<li>
<p><a href="#BABCAGAJ">Oracle Automatic Storage Management</a></p>
</li>
<li>
<p><a href="#BABEEEFH">Fast Recovery Area</a></p>
</li>
<li>
<p><a href="#BABGHCHF">Corruption Prevention, Detection, and Repair</a></p>
</li>
<li>
<p><a href="#BABFFFFD">Data Recovery Advisor</a></p>
</li>
<li>
<p><a href="#BABHEBBB">Oracle Security Features</a></p>
</li>
<li>
<p><a href="#BABHDBFB">Oracle Flashback Technology</a></p>
</li>
<li>
<p><a href="#CIHFHCJF">Oracle Data Pump and Data Transport</a></p>
</li>
<li>
<p><a href="#BABFIIHH">Oracle Replication Technologies for Non-Database Files</a></p>
</li>
<li>
<p><a href="#BABGDGCE">Client and Application Failover</a></p>
</li>
<li>
<p><a href="#CIHFGJDE">Oracle Multitenant</a></p>
</li>
<li>
<p><a href="#CIHCCJFE">Oracle Restart</a></p>
</li>
<li>
<p><a href="#CIHFJDIE">Oracle Site Guard</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The overview of high availability in <a class="olink CNCPT1490" href="../CNCPT/cmntopc.htm#CNCPT1490"><span class="italic">Oracle Database Concepts</span></a></p>
</li>
<li>
<p>The list of new high availability features in <a class="olink NEWFT" href="../NEWFT/toc.htm"><span class="italic">Oracle Database New Features Guide</span></a></p>
</li>
</ul>
</div>
<a id="BABECHJC"></a>
<div id="HAOVW120" class="sect1">
<h2 class="sect1"><span class="secnum">3.1</span> Oracle Data Guar<a id="sthref75"></a>d</h2>
<p>Oracle Data Guard ensures high availability, data protection, and disaster recovery for enterprise data. Data Guard provides a comprehensive set of services that create, maintain, manage, and monitor one or more standby databases to enable Oracle databases to survive outages of any kind, including natural disasters and data corruptions. A Data Guard standby database is an exact replica of the production database and thus can be transparently utilized in combination with traditional backup, restoration, flashback, and cluster techniques to provide the highest possible level of data protection and data availability. Data Guard is included in Oracle Enterprise Edition.</p>
<p>A Data Guard configuration consists of one primary database and one or more standby databases. A primary database can be either a single-instance Oracle database or an Oracle RAC database. Similar to a primary database, a standby database can be either a single-instance Oracle database or an Oracle RAC database. Using a backup copy of the primary database, you can create up to 30 standby databases that receive redo directly from the primary database. Optionally you can use a cascaded standby to create Data Guard configurations where the primary transmits redo to a single remote destination, and that destination forwards redo to multiple standby databases. This enables a primary database to efficiently synchronize many more than 30 standby databases if desired.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Active Data Guard is an extension of basic Data Guard providing advanced features that off-load various types of processing from a production database, extend zero data loss protection over any distance, and that enhance high availability. Oracle Active Data Guard is licensed separately from Oracle Database Enterprise Edition. Oracle Active Data Guard is discussed more completely in <a href="#BABEGIFA">Section 3.1.1, &#34;Oracle Active Data Guard.&#34;</a></div>
<p>There are several types of standby databases. Data Guard physical standby database is the MAA best practice for data protection and disaster recovery and is the most common type of standby database used. A physical standby database uses Redo Apply (an extension of Oracle media recovery) to maintain an exact, physical replica of the production database. When configured using MAA best practices, Redo Apply uses multiple Oracle-aware validation checks to prevent corruptions that can impact a primary database from impacting the standby. Other types of Data Guard standby databases include: snapshot standby (a standby open read/write for test or other purposes) and logical standby (used to reduce planned downtime).</p>
<p class="subhead2"><a id="HAOVW11826"></a>Benefits of Using Data Guard<a id="sthref76"></a><a id="sthref77"></a></p>
<ul>
<li>
<p>Continuous Oracle-aware validation of all changes using multiple checks for physical and logical consistency of structures within an Oracle data block and redo, before updates are applied to a standby database. This isolates the standby database and prevents it from being impacted by data corruptions that can occur on the primary system.</p>
</li>
<li>
<p>Transparent operation: There are no restrictions on the use of Data Guard physical standby for data protection. Redo Apply supports all data and storage types, all DDL operations, and all applications (custom and packaged applications), and guarantees data consistency across primary and standby databases.</p>
</li>
<li>
<p>Highest performance: Fast redo transport for best recovery point objective, fast apply performance for best recovery time objective.</p>
</li>
<li>
<p>Fast failover to a standby database to maintain availability should the primary database fail for any reason. Failover is either a manual or automatic operation depending on how Data Guard is configured.</p>
</li>
<li>
<p>Integrated client notification framework to enable application clients to connect to a new primary database after a failover occurs.</p>
</li>
<li>
<p>Automatic or automated (depending upon configuration) resynchronization of a failed primary database, quickly converting it to a synchronized standby database after a failover occurs.</p>
</li>
<li>
<p>Choice of flexible data protection levels to support all network configurations, availability and performance SLAs, and business requirements.</p>
</li>
<li>
<p>Management of a primary and all of its standby databases as a single configuration to simplify management and monitoring using either the Data Guard Broker command-line interface or Oracle Enterprise Manager Cloud Control.</p>
</li>
<li>
<p>Data Guard Broker 12<span class="italic">c</span> greatly improves manageability with additional features for comprehensive configuration health checks, resumable switchover operations, streamlined role transitions, support for cascaded standby configurations, and user-configurable thresholds for transport and apply lag to automatically monitor the ability of the configuration to support SLAs for recovery point and recovery time objectives at any instant in time.</p>
</li>
<li>
<p>Efficient transport to multiple remote destinations using a single redo stream originating from the primary production database and forwarded by a cascading standby database.</p>
</li>
<li>
<p>Snapshot Standby enables a physical standby database to be open read/write for testing or any activity that requires a read/write replica of production data. A snapshot standby continues to receive but does not apply updates generated by the primary. When testing is complete, a snapshot standby is converted back into a synchronized physical standby database by first discarding the changes made during the open read/write, and then applying the redo received from the primary database. Primary data is always protected. Snapshot standby is particularly useful when used in conjunction with Oracle Real Application Testing (workload is captured at the production database for replay and subsequent performance analysis at the standby database--an exact replica of production).</p>
</li>
<li>
<p>Reduction of planned downtime by utilizing a standby database to perform maintenance in rolling fashion. The only downtime is the time required to perform a Data Guard switchover; applications remain available while the maintenance is being performed. (See <a href="#CIHJDECJ">Section 3.3.3, &#34;When to Use Oracle Active Data Guard and Oracle GoldenGate Together&#34;</a> and <a href="planned.htm#CJAGHJDH">Table 5-7, &#34;Oracle High Availability Solutions for System and Software Maintenance&#34;</a> for more details).</p>
</li>
<li>
<p>Increased flexibility for Data Guard configurations where the primary and standby systems may have different CPU architectures or operating systems subject to limitations defined in My Oracle Support note 413484.1 at <a href="http://support.oracle.com/"><code>http://support.oracle.com/</code></a>.</p>
</li>
<li>
<p>Efficient disaster recovery for an Oracle Database 12<span class="italic">c</span> container database (CDB). Data Guard failover and switchover completes using a single command at a CDB level regardless of how many databases (pluggable databases or PDBs) are consolidated within the CDB.</p>
</li>
<li>
<p>Data Guard 12<span class="italic">c</span> enables a specific administration privilege, SYSDG, to handle standard administration duties for Data Guard. This new privilege is based on the least privilege principle, in which a user is granted only the necessary privileges required to perform a specific function and no more. The SYSDBA privilege continues to work as in previous releases.</p>
</li>
</ul>
<a id="BABEGIFA"></a>
<div id="HAOVW11828" class="sect2">
<h3 class="sect2"><span class="secnum">3.1.1</span> Oracle Active Data Guard</h3>
<p>Oracle Active Data Guard is Oracle&#39;s strategic solution for real time data protection and disaster recovery for the Oracle database using a physical replication process. Oracle Active Data Guard also provides high return on investment in disaster recovery systems by enabling a standby database to be open read-only while it applies changes received from the primary database. Oracle Active Data Guard is a separately licensed product that provides advanced features that greatly expand Data Guard capabilities included with Oracle Enterprise Edition.</p>
<div class="figure">
<p class="titleinfigure"><a id="sthref78"></a>Figure 3-1 Oracle Active Data Guard Architecture</p>
<img width="572" height="234" src="img/haovw_vm_033.gif" alt="Description of Figure 3-1 follows"/><br/>
<a id="sthref79" href="img_text/haovw_vm_033.htm">Description of &#34;Figure 3-1 Oracle Active Data Guard Architecture&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Oracle Active Data Guard enables administrators to improve performance by offloading processing from the primary database to a physical standby database that is open read-only while it applies updates received from the primary database. Offload capabilities of Oracle Active Data Guard 12<span class="italic">c</span> were enhanced to include read-only reporting and ad-hoc queries (including DML to global temporary tables and unique global or session sequences), data extracts, fast incremental backups, redo transport compression, efficient servicing of multiple remote destinations, and the ability to extend zero data loss protection to a remote standby database without impacting primary database performance. Oracle Active Data Guard also increases high availability by performing automatic block repair and enabling High Availability Upgrades (new automation in Oracle Database 12<span class="italic">c</span> for more easily implementing database rolling upgrades).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Active Data Guard is licensed separately as a database option license for Oracle Database Enterprise Edition. All Oracle Active Data Guard capabilities are also included in an Oracle Golden Gate license for Oracle Enterprise Edition. This provides customers with the choice of a standalone license for Oracle Active Data Guard, or licensing Oracle GoldenGate to acquire access to all advanced Oracle replication capabilities.</div>
<p class="subhead2"><a id="BABBEIJF"></a><a id="HAOVW11829"></a>Benefits of Oracle Active Data Guard<a id="sthref80"></a></p>
<p>Oracle Active Data Guard inherits all of the benefits previously listed for Data Guard, plus the following:</p>
<ul>
<li>
<p>Improves primary database performance: Production-offload to an Oracle Active Data Guard standby database of read-only applications, reporting, and ad hoc queries. Any application compatible with a read-only database can run on an Oracle Active Data Guard standby. Oracle also provides integration that enables the offloading of many Oracle E-Business Suite Reports, PeopleTools reporting, Oracle Business Intelligence Enterprise Edition (OBIEE), and Oracle TopLink applications to an Oracle Active Data Guard standby database.</p>
</li>
<li>
<p>Oracle Active Data Guard 12<span class="italic">c</span> provides new support for DML to global temporary tables and the use of sequences at the standby database. This significantly expands the number of read-only applications that can be off-loaded from production databases to an Oracle Active Data Guard standby database.</p>
</li>
<li>
<p>The unique ability to easily scale read performance using multiple Oracle Active Data Guard standby databases, also referred to as a Reader Farm.</p>
</li>
<li>
<p>Production-offload of data extracts using Oracle Data Pump or other methods that read directly from the source database.</p>
</li>
<li>
<p>Production-offload of the performance impact from network latency in a synchronous, zero data loss configuration where primary and standby databases are separated by hundreds or thousands of miles. Oracle Active Data Guard 12<span class="italic">c</span> far sync utilizes a lightweight instance (control file and archive log files, but no recovery and no data files), deployed on a system independent of the primary database. The far sync instance is ideally located at the maximum distance from the primary system that an application can tolerate the performance impact of synchronous transport to provide optimal protection. Data Guard transmits redo synchronously to the far sync instance and far sync forwards the redo asynchronously to a remote standby database that is the ultimate failover target. If the primary database fails, the same failover command used for any Data Guard configuration, or mouse click using Oracle Enterprise Manager 12<span class="italic">c</span>, or automatic failover using Data Guard Fast-Start Failover executes a zero data loss failover to the remote destination. This transparently extends zero data loss protection to a remote standby database just as if it were receiving redo directly from the primary database, while avoiding the performance impact to the primary database of WAN network latency in a synchronous configuration.</p>
</li>
<li>
<p>Production-offload of the overhead of servicing multiple remote standby destinations using far sync. In a far sync configuration, the primary database ships a single stream of redo to a far sync instance using synchronous or asynchronous transport. The far sync instance is able to forward redo asynchronously to as many as 29 remote destinations with zero incremental overhead on the source database.</p>
</li>
<li>
<p>Data Guard maximum availability supports the use of the NOAFFIRM redo transport attribute. A standby database returns receipt acknowledgment to its primary database as soon as redo is received in memory. The standby database does not wait for the Remote File Server (RFS) to write to a standby redo log file.</p>
<p>This feature provides increased primary database performance in Data Guard configurations using maximum availability and SYNC redo transport. Fast Sync isolates the primary database in a maximum availability configuration from any performance impact due to slow I/O at a standby database. This new FAST SYNC feature can work with a physical standby target or within a far sync configuration.</p>
</li>
<li>
<p>Production-offload of CPU cycles required to perform redo transport compression. Redo transport compression can be performed by the far sync instance if the Data Guard configuration is licensed for Oracle Advanced Compression. This conserves bandwidth with zero incremental overhead on the primary database.</p>
</li>
<li>
<p>Production-offload and increased backup performance by moving fast incremental backups off of the primary database and to the standby database by utilizing Oracle Active Data Guard support for RMAN block change tracking.</p>
</li>
<li>
<p>Increased high availability using Oracle Active Data Guard automatic block repair to repair block corruptions detected at either the primary or standby, transparent to applications and users</p>
</li>
<li>
<p>Increased high availability by reducing planned downtime for upgrading to new Oracle Database patch sets and database releases using the additional automation provided by high availability Upgrade, new with Oracle Active Data Guard 12<span class="italic">c</span> (described in <a href="#CIHBJJJC">Section 3.1.3.3, &#34;Rolling Upgrade Using Oracle Active Data Guard.&#34;</a>)</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref81"></a>
<h3 class="sect2"><span class="secnum">3.1.2</span> Data Guard Advantages Over Traditional Solutions<a id="sthref82"></a></h3>
<p>Data Guard provides a number of advantages over traditional solutions, including the following:</p>
<ul>
<li>
<p>Fast, automatic or automated database failover for data corruptions, lost writes, and database and site failures, with recovery times of potentially seconds with Data Guard as opposed to hours with traditional solutions</p>
</li>
<li>
<p>Zero data loss over wide area network using Oracle Active Data Guard Far Sync</p>
</li>
<li>
<p>Offload processing for redo transport compression and redo transmission to up to 29 remote destinations using Oracle Active Data Guard Far Sync</p>
</li>
<li>
<p><a id="sthref83"></a><a id="sthref84"></a>Automatic corruption repair automatically replaces a physical block corruption on the primary or physical standby by copying a good block from a physical standby or primary database</p>
</li>
<li>
<p>Most comprehensive protection against data corruptions and lost writes on the primary database</p>
</li>
<li>
<p><a id="sthref85"></a>Reduced downtime for storage, Oracle ASM, Oracle RAC, system migrations and some platform migrations, and changes using Data Guard switchover</p>
</li>
<li>
<p>Reduced downtime with Data Guard rolling upgrade capabilities</p>
</li>
<li>
<p><a id="sthref86"></a><a id="sthref87"></a>Ability to off-load primary database activities&mdash;such as backups, queries, or reporting&mdash;without sacrificing the RTO and RPO ability to use the standby database as a read-only resource using the real-time query apply lag capability</p>
</li>
<li>
<p>Ability to integrate non-database files using <a id="sthref88"></a>Oracle Database File System (DBFS) or Oracle Automatic Storage Management Cluster File System (Oracle ACFS) as part of the full site failover operations (see <a href="#BABFIIHH">Section 3.15, &#34;Oracle Replication Technologies for Non-Database Files&#34;</a>)</p>
</li>
<li>
<p>No need for instance restart, storage remastering, or application reconnections after site failures</p>
</li>
<li>
<p>Transparency to applications</p>
</li>
<li>
<p><a id="sthref89"></a><a id="sthref90"></a>Transparent and integrated support (application continuity and transaction guard) for application failover</p>
</li>
<li>
<p>Effective network utilization</p>
</li>
</ul>
<p><a id="sthref91"></a>For data resident in Oracle databases, Data Guard, with its built-in zero-data-loss capability, is more efficient, less expensive, and better optimized for data protection and disaster recovery than traditional remote mirroring solutions. Data Guard provides a compelling set of technical and business reasons that justify its adoption as the disaster recovery and data protection technology of choice, over traditional remote mirroring solutions.</p>
</div>
<!-- class="sect2" -->
<div id="HAOVW11973" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref92"></a>
<h3 class="sect2"><span class="secnum">3.1.3</span> Data Guard and Planned Maintenance</h3>
<p>Data Guard standby databases can be used to reduce planned downtime by performing maintenance in a rolling fashion. Changes are implemented first at the standby database. The configuration is allowed to run with the primary at the old version and standby at the new version until there is confidence that the new version is ready for production. A Data Guard switchover is then performed, transitioning production to the new version. The only database downtime is the time required to perform the switchover.</p>
<p>There are several approaches to performing maintenance in a rolling fashion using a Data Guard standby. Customer requirements and preferences determine which approach is used. The following approaches are discussed in this document:</p>
<ul>
<li>
<p><a href="#CIHBIAAD">Data Guard Redo Apply and Standby-First Patching</a></p>
</li>
<li>
<p><a href="#CIHGFHED">Data Guard Transient Logical Rolling Upgrades</a></p>
</li>
<li>
<p><a href="#CIHBJJJC">Rolling Upgrade Using Oracle Active Data Guard</a></p>
</li>
</ul>
<a id="CIHBIAAD"></a>
<div id="HAOVW11974" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">3.1.3.1</span> Data Guard Redo Apply and Standby-First Patching</h4>
<p>Beginning with Oracle Database 10<span class="italic">g</span>, there has been increased flexibility in cross-platform support using Data Guard Redo Apply. In certain Data Guard configurations, primary and standby databases are able to run on systems having different operating systems (for example, Windows and Linux), word size (32bit/64bit), or hardware architectures. Redo Apply can also be used to migrate to Oracle Automatic Storage Management (ASM), to move from single instance Oracle databases to Oracle RAC, to perform technology refresh, or to move from one data center to the next.</p>
<p>Beginning with Oracle Database 11<span class="italic">g</span> release 2 (11.2), Standby-First Patch Apply (physical standby using Redo Apply) can support different software patch levels between a primary database and its physical standby database for the purpose of applying and validating Oracle patches in a rolling fashion. Patches eligible for Standby-First patching include:</p>
<ul>
<li>
<p>Database Patch Set Update (PSU)</p>
</li>
<li>
<p>Database Critical Patch Update (CPU)</p>
</li>
<li>
<p>Database bundled patch</p>
</li>
<li>
<p>Oracle Exadata Database Machine bundled patch</p>
</li>
<li>
<p>Exadata Storage Server Software patch</p>
</li>
<li>
<p>Any operating system, system firmware, or system changes compatible with the existing Oracle database version</p>
</li>
</ul>
<p>Standby-First Patch Apply is supported for certified software patches for Oracle Database Enterprise Edition 11<span class="italic">g</span> release 2 (11.2) and later.</p>
<p>In each of the types of planned maintenance previously described, the configuration begins with a primary and physical standby database (in the case of migration to a new platform, or to ASM or Oracle RAC, the standby is created on the new platform). After all changes are implemented at the physical standby database, Redo Apply (physical replication) is used to synchronize the standby with the primary. A Data Guard switchover is used to transfer production to the standby (the new environment).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>My Oracle Support Note 413484.1 at <a href="http://support.oracle.com/"><code>http://support.oracle.com/</code></a> for information about mixed platform combinations supported in a Data Guard configuration.</p>
</li>
<li>
<p>My Oracle Support Note 1265700.1 at <a href="http://support.oracle.com/"><code>http://support.oracle.com/</code></a> for more information about Standby First Patch Apply and the README for each patch to determine if a target patch is certified as being a Standby-First Patch.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CIHGFHED"></a>
<div id="HAOVW11975" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">3.1.3.2</span> Data Guard Transient Logical Rolling Upgrades</h4>
<p>There are numerous types of maintenance tasks that are unable to use Redo Apply (physical replication) to synchronize the original version of a database with the changed or upgraded version. These tasks include:</p>
<ul>
<li>
<p>Database patches or upgrades that are not Standby-First Patch Apply-eligible. This includes database patch-sets (11.2.0.2 to 11.2.0.3) and upgrade to new Oracle Database releases (11.2.0.3 to 12.1).</p>
</li>
<li>
<p>Maintenance must be performed that modifies the physical structure of a database that would require downtime (for example, adding partitioning to non-partitioned tables, changing Basicfile LOBs to Securefile LOBs, changing XML-CLOB to Binary XML, or altering a table to be OLTP-compressed).</p>
</li>
</ul>
<p>All of the previous types of maintenance can be performed in a rolling fashion using a Data Guard standby database by using Data Guard SQL Apply (logical replication) to synchronize the old and new versions of the database. Prior to Oracle Database 11<span class="italic">g</span> this required creating a logical standby database, performing the maintenance on the logical standby, resynchronizing the standby with the primary, and then switching over. Additionally if a physical standby was being used for disaster recovery, then a new physical standby database would have to be created from a backup of the production database at the new version. This represented a number of logistical and cost challenges when upgrading a multi-terabyte database.</p>
<p>Beginning with Oracle Database 11<span class="italic">g</span>, database rolling upgrades can use a new procedure called Transient Logical that begins and ends with a physical standby database. SQL Apply is only used during the phase when Data Guard is synchronizing across old and new versions. A new logical standby database does not need to be created if there is already a physical standby in place. A new physical standby database does not need to be created from a backup of the production database at the new version after the maintenance is complete. Similar to the traditional process of upgrading a Data Guard configuration having an in-place physical standby, the original primary is upgraded or changed using redo from the new primary database and Redo Apply (a single catalog upgrade migrates both primary and standby databases to the new Oracle release).</p>
<p>Transient Logical upgrades require that the primary database be at Oracle Database 11<span class="italic">g</span> release 1 (11.1) or later and that the database meet the pre-requisites of SQL Apply.</p>
<p>Oracle provides a Bourne shell script that automates a number of the manual steps required by the Transient Logical rolling upgrade process. See the MAA Best Practice Paper &#34;Database Rolling Upgrades Made Easy&#34; at <code><a href="http://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-upgrades-made-easy-131972.pdf">http://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-upgrades-made-easy-131972.pdf</a></code> for more information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
MAA Best Practice Paper &#34;<a href="http://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-upgrades-made-easy-131972.pdf">Database Rolling Upgrades Made Easy</a>&#34; at <code><a href="http://www.oracle.com/goto/maa/">http://www.oracle.com/goto/maa</a></code></div>
</div>
<!-- class="sect3" -->
<a id="CIHBJJJC"></a>
<div id="HAOVW11976" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">3.1.3.3</span> Rolling Upgrade Using Oracle Active Data Guard</h4>
<p>Oracle Database 12<span class="italic">c</span> introduces rolling upgrade using Oracle Active Data Guard to provide a simpler, automated, and easily repeatable method for reducing planned downtime than represented by the manual Transient Logical rolling upgrade procedure previously described. Rolling upgrade using Oracle Active Data Guard transforms the 42 or more steps required by the manual procedure into several easy-to-use DBMS_ROLLING PL/SQL packages.</p>
<p>A rolling upgrade using Oracle Active Data Guard uses the following steps:</p>
<ul>
<li>
<p>Call DBMS_ROLLING.INIT_PLAN</p>
<ul>
<li>
<p>Generates an upgrade plan with a configuration-specific set of instructions to guide the administrator through the upgrade process</p>
</li>
</ul>
</li>
<li>
<p>Call DBMS_ROLLING.SET_PARAMETER</p>
<ul>
<li>
<p>Modifies parameters of the rolling upgrade</p>
</li>
</ul>
</li>
<li>
<p>Install new software at all databases participating in the upgrade</p>
</li>
<li>
<p>Call DBMS_ROLLING.START_PLAN</p>
<ul>
<li>
<p>Configures primary and standby databases participating in the upgrade</p>
</li>
</ul>
</li>
<li>
<p>Upgrade or make changes to the standby database</p>
</li>
<li>
<p>Call DBMS_ROLLING.SWITCHOVER</p>
<ul>
<li>
<p>Switchover moves the production to the new version</p>
</li>
<li>
<p>Switchover is the only downtime required</p>
</li>
</ul>
</li>
<li>
<p>Restart former primary using new binaries if appropriate</p>
</li>
<li>
<p>Call DBMS_ROLLING.FINISH_PLAN</p>
<ul>
<li>
<p>Completes the upgrade of the old primary and any additional standby databases in the Data Guard configuration and resynchronizes with the new primary</p>
</li>
</ul>
</li>
</ul>
<p>Rolling upgrade using Oracle Active Data Guard has the following benefits:</p>
<ul>
<li>
<p>Provides a simple specify-compile-execute protocol</p>
<ul>
<li>
<p>Catches configuration errors at the compilation step</p>
</li>
<li>
<p>Runtime errors are detected during execution</p>
</li>
</ul>
</li>
<li>
<p>The state is kept in the database</p>
<ul>
<li>
<p>Enables a reliable, repeatable process</p>
</li>
</ul>
</li>
<li>
<p>Runtime steps are constant regardless of how many databases are involved</p>
</li>
<li>
<p>Handles failure at the original primary database</p>
</li>
<li>
<p>Enables data protection for the upgraded primary at all times</p>
</li>
</ul>
<p>Rolling upgrade using Oracle Active Data Guard requires an Oracle Active Data Guard license and that the primary database be at Oracle Database 12<span class="italic">c</span> release 1 (12.1) or later and that the database satisfy prerequisites of SQL Apply. If the primary database is on an earlier Oracle Database release, see the MAA white paper &#34;Database Rolling Upgrades Made Easy&#34; at <a href="http://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-upgrades-made-easy-131972.pdf"><code>http://www.oracle.com/goto/maa</code></a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SBYDB5214" href="../SBYDB/dbms_rolling_upgrades.htm#SBYDB5214"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> &#34;Using DBMS_ROLLING to Perform a Rolling Upgrade.&#34;</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHCEJAD"></a>
<div id="HAOVW11977" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.2</span> Oracle GoldenGate<a id="sthref93"></a><a id="sthref94"></a><a id="sthref95"></a><a id="sthref96"></a></h2>
<p>Oracle GoldenGate is Oracle&#39;s strategic logical replication solution for data distribution and data integration. Unlike replication solutions from other vendors, Oracle GoldenGate is more closely integrated with Oracle Database while also providing an open, modular architecture ideal for replication across heterogeneous database management systems. This combination of attributes eliminates compromise, making Oracle GoldenGate the preferred replication solution for addressing requirements that span Oracle Database and non-Oracle Database environments.</p>
<p>Oracle GoldenGate offers a real-time, log-based change data capture and replication software platform. The software provides capture, routing, transformation, and delivery of transactional data across heterogeneous databases in real time.</p>
<p>A typical environment includes a capture, pump, and delivery process. Each of these processes can run on most of the popular operating systems and databases, including Oracle Database and non-Oracle databases. All or a portion of the data may be replicated, and the data within any of these processes can be manipulated for not only heterogeneous environments but also different database schemas. Oracle GoldenGate supports multimaster replication, hub-and-spoke deployment, and data transformation.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref97"></a>
<h3 class="sect2"><span class="secnum">3.2.1</span> Oracle GoldenGate 12<span class="italic">c</span></h3>
<p>Oracle GoldenGate 12<span class="italic">c</span> offers significant new features that greatly enhance its replication capabilities and integration with Oracle Database. The new features include:</p>
<ul>
<li>
<p>Optimizations for Oracle Database12<span class="italic">c</span>, including support for capturing and delivering data for multitenant architectures and cloud environments. Support for cloud environments has been available since release 11.2.1.</p>
</li>
<li>
<p>Integrated Delivery for Oracle Database that leverages a lightweight streaming API built for Oracle GoldenGate to improve performance and scalability. Within a single Replicat configuration, multiple inbound server child processes, known as apply servers, apply transactions in parallel while preserving the original transaction atomicity. You can increase this parallelism as much as the target system will support when you configure the Replicat process, or it can be adjusted dynamically as needed. This functionality is available for Oracle 11.2.0.4 and 12<span class="italic">c</span> only.</p>
</li>
<li>
<p>Coordinated Delivery reduces the complexity of managing multiple Replicat processes. Coordinated Delivery manages the application of coordinated events (such as DDL, SQLEXEC statements, EVENTACTIONS, and so on) to be applied in SCN order. This allows customers who require scalability and increased performance to replicate DDL operations or perform certain queries or checks on data.</p>
</li>
<li>
<p>Integrated Capture enhancements for improved usability by including a table in the database that helps determine if a table can be replicated or not, and enhancements to the DDL resolution feature so that DDL is read directly from the redo logs without the need of a database level trigger. This functionality is only available with Integrated Extract and Oracle Database 11<span class="italic">g</span> releases 11.2.0.4 and later and Oracle Database 12<span class="italic">c</span> releases 12.1.0.2 and later.</p>
</li>
<li>
<p>Changes to numerous parameters to improve usability and simplify implementation. <code>DISCARDFILE</code> now has default values so that it is not necessary to specify this parameter in the Replicat. Enhanced debugging and error logging and the ability to wildcard schemas, or even the entire database for full system replication.</p>
</li>
<li>
<p>The Oracle Wallet and Credential Store features were added to increase security of user names and passwords.</p>
</li>
<li>
<p>Support for Informix releases 11.5, 11.7, and 12.1 for both capture and delivery.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="HAOVW11978" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref98"></a>
<h3 class="sect2"><span class="secnum">3.2.2</span> Oracle GoldenGate 11<span class="italic">g</span> Release 2</h3>
<p>Oracle GoldenGate 11<span class="italic">g</span> Release 2 offers significant new features that greatly enhance its replication capabilities and integration with Oracle Database. The new features include:</p>
<ul>
<li>
<p>Improved performance of integrated capture - Integrated capture, introduced in Oracle GoldenGate 11<span class="italic">g</span> Release 2, has been improved to deliver faster performance. This enhancement is transparent to users and requires no configuration changes.</p>
</li>
<li>
<p>Integrated Replicat - Replicat for Oracle can now operate in integrated mode for improved scalability within Oracle target environments. In integrated mode, the Replicat process leverages the apply processing functionality that is available within the Oracle database. Integrated Replicat handles referential integrity and data description language (DDL) operations to ensure that these operations are done in the correct order, so that the administrator does not need to worry about things like parent-child relationships or DDL that would involve multiple tables or structure changes within a single table.</p>
</li>
<li>
<p>Capture and apply to multitenant container database - Oracle GoldenGate now supports the capture from, and delivery to, Oracle multitenant container databases (CDB).</p>
</li>
<li>
<p>Native DDL capture - This release of Oracle GoldenGate introduces &#34;native&#34; DDL capture for Extract in integrated mode. Native DDL capture removes the need to use the DDL trigger (and its supporting objects) for the capture of DDL for the supported Oracle versions. With native DDL capture, the capture of DDL is integrated into the database logmining server.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="http://www.oracle.com/technetwork/middleware/goldengate/documentation/index.html">Oracle GoldenGate Documentation</a> at <code><a href="http://www.oracle.com/technetwork/middleware/goldengate/documentation/index.html">http://www.oracle.com/technetwork/middleware/goldengate/documentation/index.html</a></code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11979" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref99"></a>
<h3 class="sect2"><span class="secnum">3.2.3</span> Oracle GoldenGate and Maximum Availability Architecture</h3>
<p>Oracle GoldenGate logical replication enables all databases in an Oracle GoldenGate configuration, both source and target databases, to be open read/write. This fact combined with Oracle GoldenGate advanced replication features make it a key component of MAA for addressing a broad range of high availability challenges for zero downtime maintenance, cross platform migration, and continuous data availability, specifically:</p>
<ul>
<li>
<p>Zero or near zero downtime maintenance. In this regard Oracle GoldenGate provides greater flexibility than basic capabilities provided by Data Guard. Oracle GoldenGate source and target databases can have a different physical and logical structure, can reside on different hardware and operating system architectures, can span wide differences in Oracle Database releases (for example, 9<span class="italic">i</span> to 12<span class="italic">c</span>), or be a mix of Oracle and non-Oracle systems. Maintenance is first performed on a target database while production runs on the source. After the maintenance is complete, production can be moved to the source all at once, similar to a Data Guard switchover. Optionally, bidirectional replication can be used to gradually move users over to the new system to create the perception of zero downtime. In either case, Oracle GoldenGate replication can be enabled in the reverse direction to keep the original source database synchronized during a transition period, making it simple to effect a planned fall-back to the previous version if needed with minimal downtime and no data loss.</p>
</li>
<li>
<p>Zero or near-zero downtime application upgrades. Application upgrades that modify back-end database objects typically result in significant planned downtime while maintenance is being performed. Oracle GoldenGate replication enables data transformations that map database objects used by a previous version of an application to objects modified by the new version of an application. This enables database maintenance to be performed on a separate copy of the production database without impacting the availability of the application. After the maintenance is complete and Oracle GoldenGate has finished synchronizing old and new versions, users can be switched to the new version of the application.</p>
</li>
<li>
<p>Oracle GoldenGate enables read/write access to a replica database while it is being synchronized with its source database. This is most often used to offload reporting to a copy of a production database when the reporting application requires a read/write connection to database in order to function. This is also relevant, however, to certain disaster recovery environments where the nature of the technology used for the application tier requires an active read/write connection to the DR database at all times in order to meet recovery time objectives. Oracle GoldenGate would be used in this later case in place of Oracle Active Data Guard where the additional data protection, simplicity, and transparency offered by an Oracle Active Data Guard standby is traded in return for a failover target that is always open read/write.</p>
</li>
<li>
<p>Multimaster and bidirectional replication architectures where there are multiple databases that all contain the same data and synchronized by Oracle GoldenGate. An update at any database is immediately replicated to all other databases. Update conflicts are either handled by the application, or by conflict handlers configured using Oracle GoldenGate, or are manually resolved. This is an architecture that emphasizes workload balancing and data availability versus simplicity of operation. Each Oracle GoldenGate source can also be protected by a Data Guard standby database for optimal disaster protection. Optionally, due to cost considerations, each Oracle GoldenGate replica can be used to provide both data availability and DR protection to avoid the additional cost of a Data Guard physical standby database.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="http://docs.oracle.com/goldengate/1212/gg-winux/index.html">Oracle GoldenGate Documentation</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHHJCGI"></a>
<div id="HAOVW11980" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.3</span> Best Practice: Oracle Active Data Guard and Oracle GoldenGate</h2>
<p>While Oracle Active Data Guard and Oracle GoldenGate are each capable of maintaining a synchronized copy of an Oracle database, each has unique characteristics that result in high availability architectures that can use one technology or the other, or both at the same time, depending upon requirements. Examples of MAA Best Practice guidelines for use cases relevant to Oracle Database 12<span class="italic">c</span> are as follows:</p>
<div id="HAOVW11981" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref100"></a>
<h3 class="sect2"><span class="secnum">3.3.1</span> When to Use Oracle Active Data Guard</h3>
<p>Use Oracle Active Data Guard when the emphasis is on simplicity, data protection, and availability:</p>
<ul>
<li>
<p>Simplest, fastest, one-way replication of a complete Oracle database.</p>
</li>
<li>
<p>No restrictions: Data Guard Redo Apply supports all data and storage types and Oracle features; transparent replication of DDL</p>
</li>
<li>
<p>Features optimized for data protection: Detects silent corruptions that can occur on source or target; automatically repairs corrupt blocks</p>
</li>
<li>
<p>Synchronized standby open read-only provides simple read-only offloading for maximum ROI</p>
</li>
<li>
<p>Transparency of backups: A Data Guard primary and standby are physically exact copies of each other; RMAN backups are completely interchangeable</p>
</li>
<li>
<p>Zero data loss protection at any distance, without impacting database performance</p>
</li>
<li>
<p>Minimizing planned downtime and risk using standby first patching, database rolling upgrades, and select platform migrations</p>
</li>
<li>
<p>Reduce risk of introducing change by dual purposing a DR system for testing using Data Guard Snapshot Standby</p>
</li>
<li>
<p>Integrated automatic database and client failover</p>
</li>
<li>
<p>Integrated management of a complete configuration: Data Guard Broker command line interface or Oracle Enterprise Manager Cloud Control</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="HAOVW11982" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref101"></a>
<h3 class="sect2"><span class="secnum">3.3.2</span> When to Use Oracle GoldenGate</h3>
<p>Use Oracle GoldenGate when the emphasis is on advanced replication requirements not addressed by Oracle Active Data Guard:</p>
<ul>
<li>
<p>Any requirement where the replica database must be open read/write while synchronizing with the primary database</p>
</li>
<li>
<p>Any data replication requirements such as multimaster and bidirectional replication, subset replication, many-to-one replication, and data transformations.</p>
</li>
<li>
<p>When data replication is required between endian format platforms or across-database major versions.</p>
</li>
<li>
<p>Maintenance and migrations where zero downtime or near zero downtime is required. Oracle GoldenGate can be used to migrate between application versions, for example, from Application 1.0 to Application 2.0 without downtime.</p>
</li>
<li>
<p>Database rolling upgrades where it is desired to replicate from new version down to the old version for the purpose of fast fall-back if something is wrong with the upgrade.</p>
</li>
<li>
<p>Zero downtime planned maintenance where bidirectional replication is used to gradually migrate users to the new version, creating the perception of zero downtime. Note that bidirectional replication requires avoiding or resolving update conflicts that can occur on disparate databases.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHJDECJ"></a>
<div id="HAOVW11983" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.3.3</span> When to Use Oracle Active Data Guard and Oracle GoldenGate Together</h3>
<p>Oracle Active Data Guard and Oracle GoldenGate are not mutually exclusive. The following are use cases of high availability architectures that include the simultaneous use of Oracle Active Data Guard and Oracle GoldenGate:</p>
<ul>
<li>
<p>An Oracle Active Data Guard standby is utilized for disaster protection and database rolling upgrades for a mission critical OLTP database. At the same time, Oracle GoldenGate is used to replicate data from the Data Guard primary database (or from the standby database using Oracle GoldenGate ALO mode) for ETL update of an enterprise data warehouse.</p>
</li>
<li>
<p>Oracle GoldenGate subset replication is used to create an operational data store (ODS) that extracts, transforms, and aggregates data from numerous data sources. The ODS supports mission critical application systems that generate significant revenue for the company. An Oracle Active Data Guard standby database is used to protect the ODS, providing optimal data protection and availability.</p>
</li>
<li>
<p>Oracle GoldenGate bidirectional replication is utilized to synchronize two databases separated by thousands of miles. User workload is distributed across each database based upon geography, workload, and service level using Oracle 12<span class="italic">c</span> Global Data Services (GDS). Each Oracle GoldenGate copy has its own local synchronous Data Guard standby database that enables zero data loss failover if an outage occurs. Oracle GoldenGate capture and apply processes are easily restarted on the new primary database following a failover because the primary and standby are an exact, up-to-date replica of each other.</p>
</li>
<li>
<p>An Oracle Active Data Guard standby database used for disaster protection is temporarily converted into an Oracle GoldenGate target for the purpose of performing planned maintenance not supported by Data Guard. For example, a Siebel application upgrade requiring modification of back-end database objects which require comprehensive testing before switching users over to the new system.</p>
</li>
<li>
<p>Oracle Active Data Guard is used to protect a production environment when a major database version upgrade is required offering zero or near-zero downtime (for example, Oracle 11.2.0.3 to 12<span class="italic">c</span>.) A second primary/standby environment is created using the new database version, and Oracle GoldenGate is used to replicate data from the production environment to the copy with one-way or bidirectional replication. When Oracle GoldenGate has completed synchronizing the old and new environments, production is switched to the new environment and the old environment is decommissioned. This provides zero or minimal downtime depending upon configuration, eliminates risk by providing complete isolation between the old and new environment, and avoids any impact to data protection and availability SLAs if problems are encountered during the upgrade process.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIDGGC"></a>
<div id="HAOVW132" class="sect1">
<h2 class="sect1"><span class="secnum">3.4</span> Recovery Manager</h2>
<p>Recovery Manager (<a id="sthref102"></a>RMAN) provides a comprehensive foundation for efficiently backing up and recovering the database. RMAN eliminates operational complexity while providing superior performance and availability of the database.</p>
<p>RMAN determines the most efficient method of executing the requested backup, restoration, or recovery operation and then submits these operations to the Oracle Database server for processing. RMAN and the server automatically identify modifications to the structure of the database and dynamically adjust the required operation to adapt to the changes.</p>
<p>RMAN provides the following <a id="sthref103"></a>benefits:</p>
<ul>
<li>
<p>Support for cross-platform backup and restore (new in Oracle Database 12<span class="italic">c</span>)</p>
</li>
<li>
<p>Network-enabled restoration allows the <code>RESTORE</code> operations to copy data files directly from one database to another over the network (new in Oracle Database 12<span class="italic">c</span>)</p>
</li>
<li>
<p>Simplified table restoration with the <code>RECOVER TABLE</code> command (new in Oracle Database 12<span class="italic">c</span>)</p>
</li>
<li>
<p>Support for Oracle Multitenant, including backup and recovery of individual pluggable databases (new in Oracle Database 12<span class="italic">c</span>)</p>
</li>
<li>
<p>Automatic channel failover on backup and restore operations</p>
</li>
<li>
<p>Automatic failover to a previous backup when the restore operation discovers a missing or corrupt backup</p>
</li>
<li>
<p>Automatic creation of new database files and temporary files during recovery</p>
</li>
<li>
<p>Automatic recovery through a previous point-in-time recovery&mdash;recovery through reset logs</p>
</li>
<li>
<p>Block media recovery, which enables the data file to remain online while fixing the block corruption</p>
</li>
<li>
<p>Fast incremental backups using block change tracking</p>
</li>
<li>
<p>Fast backup and restore operations with intrafile and interfile parallelism</p>
</li>
<li>
<p>Enhanced <a id="sthref104"></a>security with a virtual private recovery catalog</p>
</li>
<li>
<p>Merger of incremental backups into image copies, providing up-to-date recoverability</p>
</li>
<li>
<p>Optimized backup and restoration of required files only</p>
</li>
<li>
<p>Retention policy to ensure that relevant backups are retained</p>
</li>
<li>
<p>Ability to resume backup and restore operations in case of failure</p>
</li>
<li>
<p>Automatic backup of the control file and the server parameter file, ensuring that backup metadata is available in times of database structural changes and media failure and disasters</p>
</li>
<li>
<p>Easily reinstantiate a new database from an existing backup or directly from the production database (thus eliminating staging areas) using the <code>DUPLICATE</code> command.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV8001" href="../BRADV/rcmintro.htm#BRADV8001"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></div>
</div>
<!-- class="sect1" -->
<a id="BABCGEAB"></a>
<div id="HAOVW133" class="sect1">
<h2 class="sect1"><span class="secnum">3.5</span> Oracle Secure Backup<a id="sthref105"></a><a id="sthref106"></a><a id="sthref107"></a></h2>
<p><span class="bold">Oracle Secure Backup</span> is a centralized tape backup management solution, providing heterogeneous data protection in distributed UNIX, Linux, Windows, and Network Attached Storage (NAS) environments. By protecting file system and Oracle Database data, Oracle Secure Backup provides a complete tape backup solution for your IT environment.</p>
<p>Oracle Secure Backup is tightly integrated with RMAN to provide the media management layer for RMAN. With optimized integration points, Oracle Secure Backup and RMAN provide the fastest and most efficient tape backup capability for Oracle Database.</p>
<p>You can back up distributed servers to local and remote tape devices from a central Oracle Secure Backup administrative server using backup policies, calendar-based scheduling for <span class="italic">lights out</span> operations, or on-demand backup for immediate requirements. With its highly scalable client/server architecture, Oracle Secure Backup provides local and remote data protection, using Secure Sockets layer (SSL) for secure intradomain communication and two-way server authentication.</p>
<p><a id="sthref108"></a>Oracle Secure Backup provides the following benefits:</p>
<ul>
<li>
<p>Optimized performance achieving 25-40% faster Oracle Database backups than comparable media management products with up to 10% less CPU utilization</p>
<ul>
<li>
<p>Unused block and undo block compression</p>
</li>
<li>
<p>Shared tape buffers with RMAN</p>
</li>
</ul>
</li>
<li>
<p>Policy-based management that allows backup administrators to exercise precise control over the backup domain</p>
</li>
<li>
<p>Dynamic drive sharing for increased tape resource use</p>
</li>
<li>
<p>Heterogeneous Storage Area Network (SAN) support, enabling NAS, UNIX, Windows, and Linux to share tape drives and media</p>
</li>
<li>
<p>File system backup at the file, directory, file system, or raw partition level with full, incremental, and offsite backup scheduling</p>
</li>
<li>
<p>Integration with Oracle Enterprise Manager, providing an intuitive, familiar interface</p>
</li>
<li>
<p>Backup encryption to tape with policy-based encryption key management leveraging either Oracle Secure Backup host-based encryption or hardware encryption (tape drive)</p>
</li>
<li>
<p>Broad tape-device support for new and legacy tape devices in SAN and SCSI environments</p>
</li>
<li>
<p>Network Data Management Protocol (NDMP) support for highly efficient backup of NAS files</p>
</li>
<li>
<p>Scalable, low-cost licensing model that reduces IT costs and operational considerations</p>
</li>
<li>
<p>Enhanced data throughput Reliable Datagram Socket over Remote Direct Memory Access (RDS/RDMA) over InfiniBand networks for maximum backup and restore performance in Exadata Database Machine environments</p>
</li>
<li>
<p>Oracle-aware backup and restoration on Non-Uniform Memory Access (NUMA) machines, ensuring OSB and Oracle Database background processes communicate in the same NUMA region for optimal performance</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink OBADM101" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OBADM101"><span class="italic">Oracle Secure Backup Administrator&#39;s Guide</span></a></div>
</div>
<!-- class="sect1" -->
<a id="BABJDCJB"></a>
<div id="HAOVW119" class="sect1">
<h2 class="sect1"><span class="secnum">3.6</span> Oracle Real Application Clusters and Oracle Clusterware</h2>
<p>Oracle RAC and Oracle Clusterware enable Oracle Database to run any packaged or custom application across a set of clustered servers. This capability provides the highest levels of availability and the most flexible scalability. If a clustered server fails, then Oracle Database continues running on the surviving servers. When more processing power is needed, you can add another server without interrupting access to data.</p>
<p><span class="bold">Oracle RAC</span> enables multiple instances that are linked by an interconnect to share access to an Oracle database. In an Oracle RAC environment, Oracle Database runs on two or more systems in a cluster while concurrently accessing a single shared database. The result is a single database system that spans multiple hardware systems, enabling Oracle RAC to provide high availability and redundancy during failures in the cluster. Oracle RAC accommodates all system types, from read-only data warehouse systems to update-intensive online transaction processing (OLTP) systems.</p>
<p><span class="bold">Oracle Clusterware</span> is software that, when installed on servers running the same operating system, enables the servers to be bound together to operate as if they are one server, and manages the availability of user applications and Oracle databases. Oracle Clusterware also provides all of the features required for cluster management, including node membership, group services, global resource management, and high availability functions:</p>
<ul>
<li>
<p>For high availability, you can place Oracle databases (single-instance or Oracle RAC databases), and user applications (Oracle and non-Oracle) under the management and protection of Oracle Clusterware so that the databases and applications restart when a process fails or so that a failover to another node occurs after a node failure.</p>
</li>
<li>
<p>For cluster management, Oracle Clusterware presents multiple independent servers as if they are a single-system image or one virtual server. This single virtual server is preserved across the cluster for all management operations, enabling administrators to perform installations, configurations, backups, upgrades, and monitoring functions. Then, Oracle Clusterware automatically distributes the execution of these management functions to the appropriate nodes in the cluster.</p>
</li>
</ul>
<p>Oracle Clusterware is a requirement for using Oracle RAC. Oracle Clusterware is the only clusterware that you need for most platforms on which Oracle RAC operates. Although Oracle Database continues to support third-party clusterware products on specified platforms, using Oracle Clusterware provides these main benefits:</p>
<ul>
<li>
<p>Dispenses with proprietary vendor clusterware</p>
</li>
<li>
<p>Uses an integrated software stack from Oracle that provides disk management with local or remote Oracle Automatic Storage Management (Oracle Flex ASM) to data management with Oracle Database and Oracle RAC</p>
</li>
<li>
<p>Can be configured in large clusters, called an Oracle Flex Cluster.</p>
</li>
</ul>
<p>In addition, Oracle Database features, such as Oracle Service, use the underlying Oracle Clusterware mechanisms to provide their capabilities.</p>
<p>Oracle Clusterware requires two clusterware components: a voting disk to record node membership information and the Oracle Cluster Registry (OCR) to record cluster configuration information. The voting disk and the OCR must reside on shared storage. Oracle Clusterware requires that each node be connected to a private network over a private interconnect.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RACAD" href="../RACAD/toc.htm"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a></div>
<a id="BABFAJJD"></a>
<div id="HAOVW1113" class="sect2">
<h3 class="sect2"><span class="secnum">3.6.1</span> Benefits of Using Oracle Clusterware</h3>
<p>Oracle Clusterware provides the following benefits:</p>
<ul>
<li>
<p>Tolerates and quickly recovers from computer and instance failures.</p>
</li>
<li>
<p>Simplifies management and support by means of using Oracle Clusterware together with Oracle Database. By using fewer vendors and an all Oracle stack you gain better integration compared to using third-party clusterware.</p>
</li>
<li>
<p>Performs rolling upgrades for system and hardware changes. For example, you can apply Oracle Clusterware upgrades, patch sets, and interim patches in a rolling fashion.</p>
<p>When you upgrade to Oracle Database 12c, Oracle Clusterware and Oracle ASM binaries are installed as a single binary called the Oracle Grid Infrastructure. You can upgrade Oracle Clusterware in a rolling manner from Oracle Clusterware 10<span class="italic">g</span> and Oracle Clusterware 11<span class="italic">g</span>; however, you can only upgrade Oracle ASM in a rolling manner from Oracle Database 11<span class="italic">g</span> release 1 (11.1).</p>
</li>
<li>
<p>Automatically restarts failed Oracle processes.</p>
</li>
<li>
<p>Automatically manages the <a id="sthref109"></a>virtual IP (VIP) address. When a node fails, the node&#39;s VIP address fails over to another node on which the VIP address can accept connections.</p>
</li>
<li>
<p>Automatically restarts resources from failed nodes on surviving nodes.</p>
</li>
<li>
<p>Controls Oracle processes as follows:</p>
<ul>
<li>
<p>For Oracle RAC databases, Oracle Clusterware controls all Oracle processes by default.</p>
</li>
<li>
<p>For Oracle single-instance databases, Oracle Clusterware enables you to configure the Oracle processes into a resource group that is under the control of Oracle Clusterware.</p>
</li>
</ul>
</li>
<li>
<p>Provides an application programming interface (API) for Oracle and non-Oracle applications that enables you to control other Oracle processes with Oracle Clusterware, such as restart or react to failures and certain rules.</p>
</li>
<li>
<p>Manages node membership and prevents split-brain syndrome in which two or more instances attempt to control the database.</p>
</li>
<li>
<p>Provides the ability to perform rolling release upgrades of Oracle Clusterware, with no downtime for applications.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CWADD" href="../CWADD/toc.htm"><span class="italic">Oracle Clusterware Administration and Deployment Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW1112" class="sect2"><a id="sthref110"></a>
<h3 class="sect2"><span class="secnum">3.6.2</span> Benefits of Using Oracle Real Application Clusters and Oracle Clusterware</h3>
<p>Together, Oracle <a id="sthref111"></a>RAC and Oracle Clusterware provide all of the Oracle Clusterware benefits listed in <a href="#BABFAJJD">Section 3.6.1</a> plus the following benefits:</p>
<ul>
<li>
<p>Provides better integration and support of Oracle Database by using an all Oracle software stack compared to using third-party clusterware.</p>
</li>
<li>
<p>Relocate Oracle Service automatically. Plus, when you perform additional fast application notification (FAN) and client configuration, distribute FAN events so that applications can react immediately to achieve fast, automatic, and intelligent connection and failover.</p>
</li>
<li>
<p>Detect connection failures fast and automatically, and remove terminated connections for any Java application using Oracle Universal Connection Pool (Oracle UCP) Fast Connection Failover and FAN events.</p>
</li>
<li>
<p>Balance work requests using <a id="sthref112"></a>Oracle UCP runtime connection load balancing.</p>
</li>
<li>
<p>Use <a id="sthref113"></a>runtime connection load balancing with Oracle UCP, <a id="sthref114"></a>Oracle Call Interface (OCI), and <a id="sthref115"></a>Oracle Data Provider for .NET (ODP.NET).</p>
</li>
<li>
<p>Distribute work across all available instances using <a id="sthref116"></a>load balancing advisory.</p>
</li>
<li>
<p>Allow the flexibility to increase processing capacity using commodity hardware without downtime or changes to the application.</p>
</li>
<li>
<p>Provide comprehensive manageability integrating database and cluster features.</p>
</li>
<li>
<p>Provide scalability across database instances.</p>
</li>
<li>
<p>Implement <a id="sthref117"></a>Fast Connection Failover for nonpooled connections.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref118"></a>
<h3 class="sect2"><span class="secnum">3.6.3</span> Oracle RAC Advantages Over Traditional Cold Cluster Solutions</h3>
<ul>
<li>
<p><a id="sthref119"></a>Scalability across database instances</p>
</li>
<li>
<p>Flexibility to increase processing capacity using commodity hardware without downtime or changes to the application</p>
</li>
<li>
<p><a id="sthref120"></a>Ability to tolerate and quickly recover from computer and instance failures (measured in seconds)</p>
</li>
<li>
<p>Application brownout can be zero or seconds compared to minutes and hours with cold cluster solutions</p>
</li>
<li>
<p><a id="sthref121"></a>Optimized communication in the cluster over redundant network interfaces, without using bonding or other technologies</p>
<p>Oracle Grid Infrastructure and Oracle RAC make use of Redundant Interconnect Usage that distributes network traffic and ensures optimal communication in the cluster. This functionality is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2). In previous releases, technologies like bonding or trunking were used to make use of redundant networks for the interconnect.</p>
</li>
<li>
<p><a id="sthref122"></a><a id="sthref123"></a>Rolling upgrades for system and hardware changes</p>
</li>
<li>
<p><a id="sthref124"></a><a id="sthref125"></a>Rolling patch upgrades for some interim patches, security patches, CPUs, and cluster software</p>
</li>
<li>
<p><a id="sthref126"></a><a id="sthref127"></a>Fast, automatic, and intelligent connection and service relocation and failover</p>
</li>
<li>
<p><a id="sthref128"></a><a id="sthref129"></a>Comprehensive manageability integrating database and cluster features with Grid Plug and Play and policy-based cluster and capacity management</p>
</li>
<li>
<p><a id="sthref130"></a><a id="sthref131"></a><a id="sthref132"></a>Load balancing advisory and run-time connection load balancing help redirect and balance work across the appropriate resources</p>
</li>
<li>
<p><a id="sthref133"></a><a id="sthref134"></a>Oracle Quality of Service (QoS) Management for policy-based run-time management of resource allocation to database workloads to ensure service levels are met in order of business need under dynamic conditions. This is accomplished by assigning a service to a server pool where the database is running. Resources from the pool are used to make sure the required capacity is available.</p>
</li>
<li>
<p><a id="sthref135"></a>Oracle Enterprise Management support for Oracle ASM and Oracle ACFS, Grid Plug and Play, Cluster Resource Management, Oracle Clusterware and Oracle RAC Provisioning and patching.</p>
</li>
<li>
<p><a id="sthref136"></a>SCAN (Single Client Access Name) support as a single name to the clients connecting to Oracle RAC that does not change throughout the life of the cluster, even if you add or remove nodes from the cluster.</p>
</li>
</ul>
<p><a href="#CIHJBIID">Figure 3-2</a> shows Oracle Database with Oracle RAC architecture. This figure shows Oracle Database with Oracle RAC architecture for a partitioned three-node database. An Oracle RAC database is connected to three instances on different nodes. Each instance is associated with a service: HR, Sales, and Call Center. The instances monitor each other by checking &#34;heartbeats.&#34; Oracle Net Services provide client access to the Application/web server tier at the top of the figure</p>
<div class="figure">
<p class="titleinfigure"><a id="CIHJBIID"></a>Figure 3-2 Oracle Database with Oracle RAC Architecture</p>
<img width="441" height="497" src="img/haovw002.gif" alt="Description of Figure 3-2 follows"/><br/>
<a id="sthref137" href="img_text/haovw002.htm">Description of &#34;Figure 3-2 Oracle Database with Oracle RAC Architecture&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref138"></a><a id="sthref139"></a>Since Oracle version 11.2 Oracle RAC One Node or Oracle RAC is the preferred solution over Oracle Clusterware (Cold Cluster Failover) because it is a more complete and feature-rich solution.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABICFCD"></a>
<div id="HAOVW11825" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.7</span> Oracle RAC One Node</h2>
<p>Oracle Real Application Clusters One Node (Oracle RAC One Node) is a single instance of an Oracle RAC database that runs on one node in a cluster. This feature enables you to consolidate many databases into one cluster with minimal overhead, protecting them from both planned and unplanned downtime. The consolidated databases reap the high availability benefits of failover protection, online rolling patch application, and rolling upgrades for the operating system and Oracle Clusterware.</p>
<p>Oracle RAC One Node enables better availability than cold failover for single-instance databases because of the Oracle technology called <span class="italic">online database relocation</span>, which intelligently migrates database instances and connections to other cluster nodes for high availability and load balancing. Online database relocation is performed using the Server Control Utility (SRVCTL).</p>
<p>Oracle RAC One Node provides the following:</p>
<ul>
<li>
<p>Always available single-instance database services</p>
</li>
<li>
<p>Built-in cluster failover for high availability</p>
</li>
<li>
<p>Live migration of instances across servers</p>
</li>
<li>
<p>Online rolling patches and rolling upgrades for single-instance databases</p>
</li>
<li>
<p>Online upgrade from single-instance to multiple-instance Oracle RAC</p>
</li>
<li>
<p>Better consolidation for database servers</p>
</li>
<li>
<p>Enhanced server virtualization</p>
</li>
<li>
<p>Lower cost development and test platform for full Oracle RAC</p>
</li>
<li>
<p>Relocation of Oracle RAC primary and standby databases configured with Data Guard. This functionality is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</p>
</li>
</ul>
<p>Oracle RAC One Node also facilitates the consolidation of database storage, standardizes your database environment, and, when necessary, enables you to transition to a full, multiple-instance Oracle RAC database without downtime or disruption.</p>
</div>
<!-- class="sect1" -->
<a id="BABCAGAJ"></a>
<div id="HAOVW131" class="sect1">
<h2 class="sect1"><span class="secnum">3.8</span> Oracle Automatic Storage Management</h2>
<p><a id="sthref140"></a><a id="sthref141"></a>Oracle ASM provides a vertically integrated file system and volume manager directly in the Oracle Database kernel, resulting in:</p>
<ul>
<li>
<p>Significantly less work to provision database storage</p>
</li>
<li>
<p>Higher level of availability</p>
</li>
<li>
<p>Elimination of the expense, installation, and maintenance of specialized storage products</p>
</li>
<li>
<p>Unique capabilities for database applications</p>
</li>
</ul>
<p>For optimal performance, Oracle ASM spreads files across all available storage. To protect against data loss, Oracle ASM extends the concept of SAME (stripe and mirror everything) and adds more flexibility because it can mirror at the database file level rather than at the entire disk level.</p>
<p>More important, Oracle ASM simplifies the processes of setting up mirroring, adding disks, and removing disks. Instead of managing hundreds or possibly thousands of files (as in a large data warehouse), database administrators using Oracle ASM create and administer a larger-grained object called a <span class="bold"><a id="sthref142"></a>disk group</span>. The disk group identifies the set of disks that are managed as a logical unit. Automation of file naming and placement of the underlying database files save administrators time and ensure adherence to standard best practices.</p>
<p>The <a id="sthref143"></a><a id="sthref144"></a><a id="sthref145"></a>Oracle ASM native mirroring mechanism (two-way or three-way) protects against storage failures. With Oracle ASM mirroring, you can provide an additional level of data protection with the use of failure groups. A <span class="bold"><a id="sthref146"></a>failure group</span> is a set of disks sharing a common resource (disk controller or an entire disk array) whose failure can be tolerated. After it is defined, an <a id="sthref147"></a><a id="sthref148"></a>Oracle ASM failure group intelligently places redundant copies of the data in separate failure groups. This ensures that the data is available and transparently protected against the failure of any component in the storage subsystem.</p>
<p>By using Oracle ASM, you can<a id="sthref149"></a>:</p>
<ul>
<li>
<p>Mirror and stripe across drives and storage arrays.</p>
</li>
<li>
<p>Automatically remirror from a failed drive to remaining drives.</p>
</li>
<li>
<p>Automatically rebalance stored data when disks are added or removed while the database remains online.</p>
</li>
<li>
<p>Support Oracle database files and non-database files using <a id="sthref150"></a>Oracle Automatic Storage Management Cluster File System (Oracle ACFS).</p>
</li>
<li>
<p>Allow for operational simplicity in managing database storage.</p>
</li>
<li>
<p>Manage the Oracle Cluster Registry (OCR) and voting disks.</p>
</li>
<li>
<p>Provide preferred read capability on disks that are local to the instance, which gives better performance for an extended cluster.</p>
</li>
<li>
<p>Support very large databases.</p>
</li>
<li>
<p>Support Oracle ASM rolling upgrades.</p>
</li>
<li>
<p>Improve availability and reliability using the Oracle ASM disk scrubbing process to find and repair logical data corruptions using mirror disks.</p>
</li>
<li>
<p>Support finer granularity in tuning and <a id="sthref151"></a>security.</p>
</li>
<li>
<p>Provide fast repair after a temporary disk failure through Oracle ASM<a id="sthref152"></a><a id="sthref153"></a> Fast Mirror Resync and automatic repair of block corruptions if a good copy exists in one of the mirrors.</p>
</li>
<li>
<p>Provide disaster recovery capability for the file system by enabling replication of Oracle ACFS across the network to a remote site.</p>
</li>
<li>
<p>Patch the Oracle ASM instance without impacting the clients that are being serviced using Oracle Flex ASM. A database instance can be directed to access Oracle ASM metadata from another location while the current Oracle ASM instance it is connected to is taken offline for planned maintenance.</p>
</li>
<li>
<p>Monitor and manage the speed and status of Oracle ASM Disk Resync and Rebalance operations.</p>
</li>
<li>
<p>Bring online multiple disks simultaneously and manage performance better by controlling resync parallelism using the Oracle ASM Resync Power Limit. Recover faster after a cell or disk failure, and the instance doing the resync is failing; this is made possible by using a Disk Resync Checkpoint which enables a resync to resume from where it was interrupted or stopped instead of starting from the beginning.</p>
</li>
<li>
<p>Automatically connect database instances to another Oracle ASM instance using Oracle Flex ASM. The local database instance can still access the required metadata and data if an Oracle ASM instance fails due to an unplanned outage.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink OSTMG30000" href="../OSTMG/GUID-7783FE8B-3BAD-4C4F-83C5-DF1426340290.htm#OSTMG30000"><span class="italic">Oracle Automatic Storage Management Administrator&#39;s Guide</span></a> for more information about ACFS</div>
</div>
<!-- class="sect1" -->
<a id="BABEEEFH"></a>
<div id="HAOVW135" class="sect1">
<h2 class="sect1"><span class="secnum">3.9</span> Fast Recovery Area</h2>
<p>The <a id="sthref154"></a><span class="bold">fast recovery area</span> is a unified storage location for all recovery-related files and activities in Oracle Database. After this feature is enabled, all RMAN backups, archived redo log files, control file autobackups, flashback logs, and data file copies are automatically written to a specified file system or Oracle ASM disk group, and the management of this disk space is handled by RMAN and the database server.</p>
<p>Performing a backup to disk is faster because using the fast recovery area eliminates the bottleneck of writing to tape. More important, if database media recovery is required, then data file backups are readily available. Restoration and recovery time is reduced because you do not need to find a tape and a free tape device to restore the needed data files and archived redo log files.</p>
<p>The fast recovery area provides the following benefits<a id="sthref155"></a>:</p>
<ul>
<li>
<p>Unified storage location of related recovery files</p>
</li>
<li>
<p>Management of the disk space allocated for recovery files, which simplifies database administration tasks</p>
</li>
<li>
<p>Fast, reliable, disk-based backup and restoration</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV89418" href="../BRADV/rcmconfb.htm#BRADV89418"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></div>
</div>
<!-- class="sect1" -->
<a id="BABGHCHF"></a>
<div id="HAOVW141" class="sect1">
<h2 class="sect1"><span class="secnum">3.10</span> Corruption Prevention, Detection, and <a id="sthref156"></a><a id="sthref157"></a>Repair<a id="sthref158"></a></h2>
<p>Data block corruptions can be very disruptive and challenging to repair (see <a href="overview.htm#i1006404">Section 1.4, &#34;Causes of Downtime&#34;</a>). Corruptions can cause serious application and database downtime when encountered and worse yet it can go undetected for hours, days and even weeks leading to even longer application downtime once detected. Unfortunately, there is not one way to comprehensively prevent, detect, and repair data corruptions within the database because the source and cause of corruptions can be anywhere in memory, hardware, firmware, storage, operating system, software, or user error. Worse yet, third-party solutions that do not understand Oracle data block semantics and how Oracle changes data blocks do not prevent and detect data block corruptions well. Third party remote mirroring technologies can propagate data corruptions to the database replica (standby) leading to a double failure, data loss, and much longer downtime.</p>
<p>Oracle MAA has a comprehensive plan to prevent, detect, and repair all forms of data block corruptions including physical block corruptions, logical block corruptions, stray writes, and lost writes. These additional safeguards provide the most comprehensive Oracle data block corruption prevention, detection, and repair solution. Details of this plan are described in the My Oracle Support note &#34;Best Practices for Corruption Detection, Prevention, and Automatic Repair - in a Data Guard Configuration.&#34;</p>
<p><a href="#CIHDCCJH">Table 3-1</a> outlines block corruption checks for various manual operational checks and runtime and background corruption checks. Database administrators and the operations team can incorporate manual checks such as running RMAN backups, RMAN &#34;check logical&#34; validations or running the <code>ANALYZE VALIDATE STRUCTURE</code> command on important objects. Manual checks are especially important to validate data that are rarely updated or queried.</p>
<p>Runtime checks are far superior in that they catch corruptions almost immediately or during runtime for actively queried and updated data. Runtime checks can prevent corruptions or automatically fix corruptions resulting in better data protection and higher application availability. A new background check has been introduced in Exadata to automatically scan and scrub disks intelligently with no application overhead and to automatically fix physically corrupted blocks.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref159"></a><a id="CIHDCCJH"></a>Table 3-1 Summary of Block Corruption Checks</p>
<table class="cellalignment4495" title="Summary of Block Corruption Checks" summary="block corruption checks for various manual operational checks and runtime and background corruption checks">
<thead>
<tr class="cellalignment4486">
<th class="cellalignment4496" id="r1c1-t17">Checks</th>
<th class="cellalignment4496" id="r1c2-t17">Capabilities</th>
<th class="cellalignment4496" id="r1c3-t17">Physical Block Corruption</th>
<th class="cellalignment4496" id="r1c4-t17">Logical Block Corruption</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r2c1-t17" headers="r1c1-t17">
<p>Manual checks</p>
</td>
<td class="cellalignment4492" headers="r2c1-t17 r1c2-t17">
<p>Dbverify, Analyze</p>
</td>
<td class="cellalignment4492" headers="r2c1-t17 r1c3-t17">
<p>Physical block checks</p>
</td>
<td class="cellalignment4492" headers="r2c1-t17 r1c4-t17">
<p>Logical intra-block and inter-object consistency checks</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r3c1-t17" headers="r1c1-t17">
<p>Manual checks</p>
</td>
<td class="cellalignment4492" headers="r3c1-t17 r1c2-t17">
<p>RMAN</p>
</td>
<td class="cellalignment4492" headers="r3c1-t17 r1c3-t17">
<p>Physical block checks during backup and restore operations</p>
</td>
<td class="cellalignment4492" headers="r3c1-t17 r1c4-t17">
<p>Intra-block logical checks</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r4c1-t17" headers="r1c1-t17">
<p>Manual checks</p>
</td>
<td class="cellalignment4492" headers="r4c1-t17 r1c2-t17">
<p>ASM Scrub</p>
</td>
<td class="cellalignment4492" headers="r4c1-t17 r1c3-t17">
<p>Physical block checks</p>
</td>
<td class="cellalignment4492" headers="r4c1-t17 r1c4-t17">
<p>Some logical intra-block checks</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r5c1-t17" headers="r1c1-t17">
<p>Runtime checks</p>
</td>
<td class="cellalignment4492" headers="r5c1-t17 r1c2-t17">
<p>Oracle Active Data Guard</p>
</td>
<td class="cellalignment4492" headers="r5c1-t17 r1c3-t17">
<p>1. Continuous physical block checking at standby during transport and apply</p>
<p>2. Strong database isolation eliminates single point database failure</p>
<p>3. Automatic repair of block corruptions</p>
<p>4. Automatic database failover</p>
</td>
<td class="cellalignment4492" headers="r5c1-t17 r1c4-t17">
<p>1. With DB_LOST_WRITE_PROTECT enabled, detection of lost writes (11.2 and higher). With 11.2.0.4 and Data Guard broker, ability to shutdown the primary when lost writes are detected on the primary database.</p>
<p>2. With DB_BLOCK_CHECKING enabled on the standby, additional intra-block logical checks</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r6c1-t17" headers="r1c1-t17">
<p>Runtime checks</p>
</td>
<td class="cellalignment4492" headers="r6c1-t17 r1c2-t17">
<p>Database</p>
</td>
<td class="cellalignment4492" headers="r6c1-t17 r1c3-t17">
<p>With DB_BLOCK_CHECKSUM, in-memory data block and redo checksum validation</p>
</td>
<td class="cellalignment4492" headers="r6c1-t17 r1c4-t17">
<p>With DB_BLOCK_CHECKING, in-memory intra-block check validation</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r7c1-t17" headers="r1c1-t17">
<p>Runtime checks</p>
</td>
<td class="cellalignment4492" headers="r7c1-t17 r1c2-t17">
<p>ASM</p>
</td>
<td class="cellalignment4492" headers="r7c1-t17 r1c3-t17">
<p>Implicit data corruption detection for reads and writes and automatic repair if good ASM extent block pair is available during writes</p>
</td>
<td class="cellalignment4492" headers="r7c1-t17 r1c4-t17">&nbsp;</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r8c1-t17" headers="r1c1-t17">
<p>Runtime checks</p>
</td>
<td class="cellalignment4492" headers="r8c1-t17 r1c2-t17">
<p>DIX + T10 DIF</p>
</td>
<td class="cellalignment4492" headers="r8c1-t17 r1c3-t17">
<p>Checksum validation from operating system to HBA controller to disk (firmware). Validation for reads and writes for certified Linux, HBA and disks.</p>
</td>
<td class="cellalignment4492" headers="r8c1-t17 r1c4-t17">&nbsp;</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r9c1-t17" headers="r1c1-t17">
<p>Runtime checks</p>
</td>
<td class="cellalignment4492" headers="r9c1-t17 r1c2-t17">
<p>Hardware and Storage</p>
</td>
<td class="cellalignment4492" headers="r9c1-t17 r1c3-t17">
<p>Limited checks due to lack of Oracle integration. Checksum is most common.</p>
</td>
<td class="cellalignment4492" headers="r9c1-t17 r1c4-t17">
<p>Limited checks due to lack of Oracle integration. Checksum is most common</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r10c1-t17" headers="r1c1-t17">
<p>Runtime checks</p>
</td>
<td class="cellalignment4492" headers="r10c1-t17 r1c2-t17">
<p>Exadata</p>
</td>
<td class="cellalignment4492" headers="r10c1-t17 r1c3-t17">
<p>Comprehensive HARD checks on writes</p>
</td>
<td class="cellalignment4492" headers="r10c1-t17 r1c4-t17">
<p>HARD checks on writes</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r11c1-t17" headers="r1c1-t17">
<p>Background checks</p>
</td>
<td class="cellalignment4492" headers="r11c1-t17 r1c2-t17">
<p>Exadata</p>
</td>
<td class="cellalignment4492" headers="r11c1-t17 r1c3-t17">
<p>Automatic HARD disk scrub and repair. Detects and fixes bad sectors.</p>
</td>
<td class="cellalignment4492" headers="r11c1-t17 r1c4-t17">&nbsp;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN" href="../REFRN/toc.htm"><span class="italic">Oracle Database Reference</span></a> for more information about the views and initialization parameters</p>
</li>
<li>
<p>My Oracle Support Note 1302539.1 at <code><a href="http://support.oracle.com/">http://support.oracle.com/</a></code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="BABFFFFD"></a>
<div id="HAOVW134" class="sect1">
<h2 class="sect1"><span class="secnum">3.11</span> Data Recovery Advisor<a id="sthref160"></a></h2>
<p><span class="bold">Data Recovery Advisor</span> automatically diagnoses persistent (on-disk) data failures, presents appropriate repair options, and runs repair operations at your request.</p>
<p>You can use Data Recovery Advisor to troubleshoot primary databases, logical standby databases, physical standby databases, and snapshot standby databases.</p>
<p>Data Recovery Advisor includes the following functionality:</p>
<ul>
<li>
<p>Failure diagnosis</p>
<p>The first symptoms of database failure are usually error messages, alarms, trace files and dumps, and failed health checks. Assessing these symptoms can be complicated, error-prone, and time-consuming. Data Recovery Advisor automatically diagnoses data failures and informs you about them.</p>
</li>
<li>
<p>Failure impact assessment</p>
<p>After a failure is diagnosed, you must understand its extent and assess its impact on applications before devising a repair strategy. Data Recovery Advisor automatically assesses the impact of a failure and displays it in an easily understood format.</p>
</li>
<li>
<p>Repair generation</p>
<p>Even if a failure was diagnosed correctly, selecting the correct repair strategy can be error-prone and stressful. Moreover, there is often a high penalty for making poor decisions in terms of increased downtime and loss of data. Data Recovery Advisor automatically determines the best repair for a set of failures and presents it to you.</p>
</li>
<li>
<p>Repair feasibility checks</p>
<p>Before presenting repair options, Data Recovery Advisor validates them with respect to the specific environment and availability of media components required to complete the proposed repair, including restoring files directly from the primary or standby database to complete the proposed repair.</p>
</li>
<li>
<p>Repair automation</p>
<p>If you accept the suggested repair option, Data Recovery Advisor automatically performs the repair, verifies that the repair was successful, and closes the appropriate failures.</p>
</li>
<li>
<p>Validation of data consistency and database recoverability</p>
<p>Data Recovery Advisor can validate the consistency of your data, and backups and redo stream, whenever you choose.</p>
</li>
<li>
<p>Early detection of corruption</p>
<p>Through Health Monitor, you can schedule periodic runs of Data Recovery Advisor diagnostic checks to detect data failures before a database process executing a transaction discovers the corruption and signals an error. Early warnings can limit the damage caused by corruption.</p>
</li>
<li>
<p>Integration of data validation and repair</p>
<p>Data Recovery Advisor is a single tool for data validation and repair.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Data Recovery Advisor only supports single-instance databases. Oracle RAC databases are not supported. See <a class="olink BRADV89724" href="../BRADV/rcmrepai.htm#BRADV89724"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for more information about Data Recovery Advisor supported database configurations.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV246" href="../BRADV/rcmrepai.htm#BRADV246"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></div>
</div>
<!-- class="sect1" -->
<a id="BABHEBBB"></a>
<div id="HAOVW136" class="sect1">
<h2 class="sect1"><span class="secnum">3.12</span> Oracle Security Features<a id="sthref161"></a><a id="sthref162"></a></h2>
<p>The best protection against human errors is to prevent their occurrence. The best way to prevent human errors is to restrict user access to only those data and services required to perform business functions. Oracle Database provides a wide range of security tools to control access to application data by authenticating database users and then enabling administrators to grant them only those privileges required to perform their duties.</p>
<p>In addition, the Oracle Database security model provides the ability to restrict data access at a row level using Oracle <a id="sthref163"></a><a id="sthref164"></a>Virtual Private Database, thereby further isolating database users from data that they do not need to access.</p>
<p>Oracle Database provides the following security benefits<a id="sthref165"></a>:</p>
<ul>
<li>
<p><a id="sthref166"></a>Authentication control to validate the identities of entities using networks, databases, and applications. Network sessions between databases, such as redo transport sessions, are also authenticated.</p>
</li>
<li>
<p>Authorization control to provide limits to access and actions linked by database user identities and roles.</p>
</li>
<li>
<p><a id="sthref167"></a>Access control to objects, providing protection regardless of the entity seeking to access or alter them.</p>
</li>
<li>
<p><a id="sthref168"></a>Auditing control to monitor and gather data about specific database activities, investigate suspicious activity, deter users (or others) from inappropriate activities, and detect problems with authorization or access control implementation.</p>
</li>
<li>
<p><a id="sthref169"></a>Security policy management using profiles.</p>
</li>
<li>
<p><a id="sthref170"></a><a id="sthref171"></a><a id="sthref172"></a>Encryption of data residing in the database and backups, or transferred to and from databases.</p>
</li>
<li>
<p>Administration of Data Guard configurations can be delegated to a class of users who would not be granted SYSDBA privileges.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DBSEG" href="../DBSEG/toc.htm"><span class="italic">Oracle Database Security Guide</span></a></p>
</li>
<li>
<p><a class="olink SBYDB" href="../SBYDB/toc.htm"><span class="italic">Oracle Data Guard Concepts and Administration</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="BABHDBFB"></a>
<div id="HAOVW130" class="sect1">
<h2 class="sect1"><span class="secnum">3.13</span> Oracle Flashback Technology<a id="ABC39676410"></a></h2>
<p>Oracle Flashback technology is a group of Oracle Database features that let you view past states of database, database objects, transactions or rows or to rewind the database, database objects, transactions or rows to a previous state without using point-in-time media recovery.</p>
<p>With flashback features, you can:</p>
<ul>
<li>
<p>Perform queries to show data as it looked at a previous point in time</p>
</li>
<li>
<p>Perform queries that return metadata that shows a detailed history of changes to the database</p>
</li>
<li>
<p>Recover tables or rows to a previous point in time</p>
</li>
<li>
<p>Automatically track and archive transactional data changes</p>
</li>
<li>
<p>Roll back a transaction and its dependent transactions while the database remains online</p>
</li>
<li>
<p>Undrop a table</p>
</li>
<li>
<p>Recover a database to a point-in-time without a restore operation</p>
</li>
</ul>
<p>Other than the flashback database feature, most Oracle Flashback features use the Automatic Undo Management (AUM) system to obtain metadata and historical data for transactions. They rely on undo data, which are records of the effects of individual transactions. For example, if a user runs an UPDATE statement to change a salary from 1000 to 1100, then Oracle Database stores the value 1000 in the undo data.</p>
<p>Undo data is persistent and survives a database shutdown. By using flashback features, you can use undo data to query past data or recover from logical damage. Besides using it in flashback features, Oracle Database uses undo data to perform these actions:</p>
<ul>
<li>
<p>Roll back active transactions</p>
</li>
<li>
<p>Recover terminated transactions by using database or process recovery</p>
</li>
<li>
<p>Provide read consistency for SQL queries</p>
</li>
</ul>
<p>Oracle Flashback can address and rewind data that is compromised due to various human or operator errors that inadvertently or maliciously change data, cause bad installations and upgrades, and result in logical errors in applications. These problems are addressed in the following phases, and use features such as flashback transaction, flashback drop, flashback table, and flashback database.</p>
<p>Phase 1: Detection of logical failure, which is usually done by the application.</p>
<p>Phase 2: Error investigation using features such as flashback query, flashback version query, and flashback transaction query and the <code>DBMS_FLASHBACK</code> package.</p>
<p>Phase 3: Error recovery.</p>
<div id="HAOVW11848" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref173"></a>
<h3 class="sect2"><span class="secnum">3.13.1</span> Oracle Flashback Query<a id="sthref174"></a></h3>
<p>Oracle Flashback Query (Flashback Query) provides the ability to view data as it existed in the past by using the Automatic Undo Management system to obtain metadata and historical data for transactions. Undo data is persistent and survives a database malfunction or shutdown. The unique features of Flashback Query not only provide the ability to query previous versions of tables, they also provide a powerful mechanism to recover from erroneous operations.</p>
<p>Uses of Flashback Query include:</p>
<ul>
<li>
<p>Recovering lost data or undoing incorrect, committed changes. For example, rows that were deleted or updated can be immediately repaired even after they were committed.</p>
</li>
<li>
<p>Comparing current data with the corresponding data at some time in the past. For example, by using a daily report that shows the changes in data from yesterday, it is possible to compare individual rows of table data, or find intersections or unions of sets of rows.</p>
</li>
<li>
<p>Checking the state of transactional data at a particular time, such as verifying the account balance on a certain day.</p>
</li>
<li>
<p>Simplifying application design by removing the need to store certain types of temporal data. By using Flashback Query, it is possible to retrieve past data directly from the database.</p>
</li>
<li>
<p>Applying packaged applications, such as report generation tools, to past data.</p>
</li>
<li>
<p>Providing self-service error correction for an application, enabling users to undo and correct their errors.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS01003" href="../ADFNS/adfns_flashback.htm#ADFNS01003"><span class="italic">Oracle Database Development Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11849" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref175"></a>
<h3 class="sect2"><span class="secnum">3.13.2</span> Oracle Flashback Version Query</h3>
<p>Oracle Flashback Version Query<a id="sthref176"></a> is an extension to SQL that you can use to retrieve the versions of rows in a given table that existed at a specific time interval. Oracle Flashback Version Query returns a row for each version of the row that existed in the specified time interval. For any given table, a new row version is created each time the <code>COMMIT</code> statement is executed.</p>
<p>Oracle Flashback Version Query is a powerful tool that database administrators (database administrators) can use to run analysis to determine the source of problems. Additionally, application developers can use Oracle Flashback Version Query to build customized applications for auditing purposes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS01004" href="../ADFNS/adfns_flashback.htm#ADFNS01004"><span class="italic">Oracle Database Development Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11850" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref177"></a>
<h3 class="sect2"><span class="secnum">3.13.3</span> Oracle Flashback Transaction</h3>
<p>Oracle Flashback Transaction<a id="sthref178"></a><a id="sthref179"></a><a id="sthref180"></a><a id="sthref181"></a> backs out a transaction and its dependent transactions. The <a id="sthref182"></a><code>DBMS_FLASHBACK.TRANSACTION_BACKOUT()</code> procedure rolls back a transaction and its dependent transactions while the database remains online. This recovery operation uses undo data to create and execute the compensating transactions that return the affected data to its original state. You can query the <a id="sthref183"></a><code>DBA_FLASHBACK_TRANSACTION_STATE</code> view to see whether the transaction was backed out using dependency rules or forced out by either:</p>
<ul>
<li>
<p>Backing out nonconflicting rows</p>
</li>
<li>
<p>Applying undo SQL</p>
</li>
</ul>
<p>Oracle Flashback Transaction increases availability during logical recovery by quickly backing out a specific transaction or set of transactions and their dependent transactions. You use one command to back out transactions while the database remains online.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADFNS1010" href="../ADFNS/adfns_flashback.htm#ADFNS1010"><span class="italic">Oracle Database Development Guide</span></a></p>
</li>
<li>
<p><a class="olink ARPLS66407" href="../ARPLS/d_flashb.htm#ARPLS66407"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11851" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref184"></a>
<h3 class="sect2"><span class="secnum">3.13.4</span> Oracle Flashback Transaction Query</h3>
<p>Oracle Flashback Transaction Query<a id="sthref185"></a> provides a mechanism to view all of the changes made to the database at the transaction level. When used in conjunction with Oracle Flashback Version Query, it offers a fast and efficient means to recover from a human or application error. Oracle Flashback Transaction Query increases the ability to perform online diagnosis of problems in the database by returning the database user that changed the row, and performs analysis and audits on transactions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS01005" href="../ADFNS/adfns_flashback.htm#ADFNS01005"><span class="italic">Oracle Database Development Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11852" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref186"></a>
<h3 class="sect2"><span class="secnum">3.13.5</span> Oracle Flashback Table</h3>
<p>Oracle Flashback Table<a id="sthref187"></a> recovers a table to a previous point in time. It provides a fast, online solution for recovering a table or set of tables that were changed by a human or application error. In most cases, Oracle Flashback Table alleviates the need for administrators to perform more complicated point-in-time recovery operations. The data in the original table is not lost when you use Oracle Flashback Table because you can return the table to its original state.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV81517" href="../BRADV/rcmflash.htm#BRADV81517"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11853" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref188"></a>
<h3 class="sect2"><span class="secnum">3.13.6</span> Oracle Flashback Drop</h3>
<p>Dropping objects by accident is a problem for database users and database administrators. Although there is no easy way to recover dropped tables, indexes, constraints, or triggers, Oracle Flashback Drop<a id="sthref189"></a> provides a safety net when you are dropping objects. When you drop a table, it is automatically placed into the Recycle Bin. The Recycle Bin is a virtual container where all dropped objects reside. You can continue to query data in a dropped table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV81511" href="../BRADV/rcmflash.htm#BRADV81511"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11854" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref190"></a>
<h3 class="sect2"><span class="secnum">3.13.7</span> Restore Points</h3>
<p>When an Oracle Flashback recovery operation is performed on the database, the DBA must determine the point in time&mdash;identified by the system change number (SCN) or time stamp&mdash;to which you can later flash back the data. Oracle Flashback restore points<a id="sthref191"></a> are labels that you can define to substitute for the SCN or transaction time used in Flashback Database, Flashback Table, and Oracle Recovery Manager (RMAN) operations. Furthermore, a database can be flashed back through a previous database recovery and opened with an <code>OPEN RESETLOGS</code> command by using guaranteed restore points. Guaranteed restore points allow major database changes&mdash;such as database batch jobs, upgrades, or patches&mdash;to be quickly undone by ensuring that the undo required to rewind the database is retained.</p>
<p>Using the restore points feature provides the following benefits:</p>
<ul>
<li>
<p>The ability to quickly restore to a consistent state, to a time before a planned operation that has gone awry (for example, a failed batch job, an Oracle software upgrade, or an application upgrade)</p>
</li>
<li>
<p>The ability to resynchronize a snapshot standby database with the primary database</p>
</li>
<li>
<p>A quick mechanism to restore a test or cloned database to its original state</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV71000" href="../BRADV/flashdb.htm#BRADV71000"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11855" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref192"></a>
<h3 class="sect2"><span class="secnum">3.13.8</span> Oracle Flashback Database<a id="sthref193"></a></h3>
<p>Oracle Flashback Database is the equivalent of a fast rewind button, quickly returning a database to a previous point in time without requiring a time consuming restore and roll forward using a backup and archived logs. The larger the size of the database, the greater the advantage of using Oracle Flashback Database for fast point in time recovery.</p>
<p>Enabling Oracle Flashback Database provides the following benefits:</p>
<ul>
<li>
<p>Fast point in time recovery to repair logical corruptions, such as those caused by administrative error.</p>
</li>
<li>
<p>Useful for iterative testing when used with Oracle restore points. A restore point can be set, database changes implemented, and test workload run to assess impact. Oracle Flashback Database can then be used to discard the changes and return the database to the original starting point, different modifications can be made, and the same test workload run a second time to have a true basis for comparing the impact of the different configuration changes.</p>
</li>
<li>
<p>Data Guard uses Oracle Flashback Database to quickly reinstantiate a failed primary database as a new standby (after a failover has occurred), without requiring the failed primary to be restored from a backup.</p>
</li>
<li>
<p>In a multi-tenant environment, Flashback database operates at the container database level. All of the PDBs will be flashed back together.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a class="olink BRADV80055" href="../BRADV/rcmflash.htm#BRADV80055"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11856" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref194"></a>
<h3 class="sect2"><span class="secnum">3.13.9</span> Block Media Recovery Using Flashback Lo<a id="sthref195"></a>gs<a id="sthref196"></a><a id="sthref197"></a> or Physical Standby Database</h3>
<p>After attempting to automatically repair corrupted blocks, block media recovery can optionally retrieve a more recent copy of a data block from the flashback logs to reduce recovery time. <a id="sthref198"></a>Automatic block repair allows corrupt blocks on the primary database to be automatically repaired as soon as they are detected, by using good blocks from a physical standby database.</p>
<p>Furthermore, a corrupted block encountered during instance recovery does not result in instance recovery failure. The block is automatically marked as corrupt and added to the RMAN corruption list in the <code>V$DATABASE_BLOCK_CORRUPTION</code> table. You can subsequently issue the RMAN <code>RECOVER BLOCK</code> command to fix the associated block. In addition, the RMAN <code>RECOVER BLOCK</code> command restores blocks from a physical standby database, if it is available.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink BRADV89781" href="../BRADV/rcmblock.htm#BRADV89781"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for block media repair</p>
</li>
<li>
<p><a class="olink RCMRF140" href="../RCMRF/rcmsynta2001.htm#RCMRF140"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for the RMAN <code>RECOVER BLOCK</code> command</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="HAOVW11857" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref199"></a>
<h3 class="sect2"><span class="secnum">3.13.10</span> Flashback Data Archive<a id="sthref200"></a></h3>
<p>The Flashback Data Archive is stored in a tablespace and contains transactional changes to every record in a table for the duration of the record&#39;s lifetime. The archived data can be retained for a much longer duration than the retention period offered by an undo tablespace, and used to retrieve very old data for analysis and repair.<a id="sthref201"></a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS01011" href="../ADFNS/adfns_flashback.htm#ADFNS01011"><span class="italic">Oracle Database Development Guide</span></a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHFHCJF"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.14</span> Oracle Data Pump and Data Transport</h2>
<p>Oracle Data Pump technology enables very high-speed movement of data and metadata from one database to another. Data Pump is used to perform the following planned maintenance activities:</p>
<ul>
<li>
<p>Database migration to a different platform</p>
</li>
<li>
<p>Database migration to pluggable databases</p>
</li>
<li>
<p>Database upgrade</p>
</li>
</ul>
<p>See <a href="planned.htm#CIHICEEA">Section 5.4, &#34;Oracle High Availability Solutions for System and Software Maintenance&#34;</a> for more information about using this technology for planned maintenance.</p>
<p>The Data Pump features that enable the planned maintenance activities listed above are the following:</p>
<ul>
<li>
<p>Full transportable export/import to move an entire database to a different database instance</p>
</li>
<li>
<p>Transportable tablespaces to move a set of tablespaces between databases</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABFIIHH"></a>
<div id="HAOVW11954" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.15</span> Oracle Replication Technologies for Non-Database Files</h2>
<p><a href="#CIHFCGAA">Table 3-2</a> describes the Oracle replication technologies for non-database files.</p>
<div id="HAOVW11955" class="tblruleformal">
<p class="titleintable"><a id="sthref202"></a><a id="CIHFCGAA"></a>Table 3-2 Oracle Replication Technologies for Non-Database Files</p>
<table class="cellalignment4497" title="Oracle Replication Technologies for Non-Database Files" summary="Oracle Replication Technologies for Non-Database Files" dir="ltr">
<thead>
<tr class="cellalignment4486">
<th class="cellalignment4496" id="r1c1-t32">Technology</th>
<th class="cellalignment4496" id="r1c2-t32">Recommended Usage</th>
<th class="cellalignment4496" id="r1c3-t32">Comments</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r2c1-t32" headers="r1c1-t32">
<p><a href="#BABFJDDI">Oracle Database File System</a></p>
</td>
<td class="cellalignment4492" headers="r2c1-t32 r1c2-t32">
<p>Recommended for Exadata Database Machine systems or when you need full synchronization between database and non-database systems</p>
</td>
<td class="cellalignment4492" headers="r2c1-t32 r1c3-t32">
<ul>
<li>
<p>Can be integrated with the database to maintain complete consistency between the database changes and the file system changes</p>
</li>
<li>
<p>All data stored in the database and can be used with Oracle Active Data Guard to provide both disaster recovery and read-only access</p>
</li>
<li>
<p>Can take advantage all of the Oracle database features</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r3c1-t32" headers="r1c1-t32">
<p><a href="#CIHHIDDA">Oracle ASM Cluster File System</a></p>
</td>
<td class="cellalignment4492" headers="r3c1-t32 r1c2-t32">
<p>Recommended to provide a single-node and cluster-wide file system solution integrated with Oracle ASM, Oracle Clusterware, and Oracle Enterprise Manager technologies</p>
</td>
<td class="cellalignment4492" headers="r3c1-t32 r1c3-t32">
<ul>
<li>
<p>Oracle ACFS establishes and maintains communication with the Oracle ASM instance to participate in Oracle ASM state transitions including Oracle ASM instance and disk group status updates and disk group rebalancing.</p>
</li>
<li>
<p>Supports many database and application files, including executables, database trace files, database alert logs, application reports, BFILEs, and configuration files. Other supported files are video, audio, text, images, engineering drawings, and other general-purpose application file data.</p>
</li>
<li>
<p>Can provide near-time consistency between database changes and file system changes when point-in-time recovery happens</p>
</li>
<li>
<p>Can be exported and accessed by remote clients using standard NAS File Access Protocols such as NFS and CIFS.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r4c1-t32" headers="r1c1-t32">
<p><a href="#CIHHGCEB">Oracle Solaris ZFS Storage Appliance Replication</a></p>
</td>
<td class="cellalignment4492" headers="r4c1-t32 r1c2-t32">
<p>Recommended for disaster recovery protection for non-database files, and specifically for Oracle Fusion Middleware critical files stored outside of the database.</p>
</td>
<td class="cellalignment4492" headers="r4c1-t32 r1c3-t32">
<ul>
<li>
<p>Replicates all non-database objects, including Oracle Fusion Middleware binaries configuration</p>
</li>
<li>
<p>Can provide near time consistency between database changes and file system changes when point-in-time recovery happens</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<a id="BABFJDDI"></a>
<div id="HAOVW11859" class="sect2">
<h3 class="sect2"><span class="secnum">3.15.1</span> Oracle Database File System<a id="sthref203"></a></h3>
<p>Oracle Database File System (DBFS) takes advantage of the features of the database to store files, and the strengths of the database in efficiently managing relational data, to implement a standard file system interface for files stored in the database. With this interface, storing files in the database is no longer limited to programs specifically written to use BLOB and CLOB programmatic interfaces. Files in the database can now be transparently accessed using any operating system (OS) program that acts on files. For example, extract, transform, and load (ETL) tools can transparently store staging files in the database.</p>
<p>Oracle DBFS provides the following benefits:</p>
<ul>
<li>
<p>Full stack integration recovery and failover: By storing file system files in a database structure, it is possible to easily perform point-in-time recovery of both database objects and file system data.</p>
</li>
<li>
<p>Disaster Recovery System Return on Investment (ROI): All changes to files contained in DBFS are also logged through the Oracle database redo log stream and thus can be passed to a Data Guard physical standby database. Using Oracle Active Data Guard technology, the DBFS file system can be mounted read-only using the physical standby database as the source. Changes made on the primary are propagated to the standby database and are visible once applied to the standby.</p>
</li>
<li>
<p>File system backups: Because DBFS is stored in the database as database objects, standard RMAN backup and recovery functionality can be applied to file system data. Any backup, restore, or recovery operation that can be performed on a database or object within a database can also be performed against the DBFS file system.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHHIDDA"></a>
<div id="HAOVW11984" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.15.2</span> Oracle ASM Cluster File System<a id="sthref204"></a></h3>
<p>Oracle ASM Cluster File System (ACFS) is a multiplatform, scalable file system, and storage management technology that extends Oracle Automatic Storage Management (Oracle ASM) functionality to support customer files maintained outside of Oracle Database. Oracle ACFS supports many database and application files, including executables, database trace files, database alert logs, application reports, BFILEs, and configuration files. Other supported files are video, audio, text, images, engineering drawings, and other general-purpose application file data.</p>
<p>Oracle ACFS takes advantage of the following Oracle ASM functionality:</p>
<ul>
<li>
<p>Oracle ACFS dynamic file system resizing</p>
</li>
<li>
<p>Maximized performance through direct access to Oracle ASM disk group storage</p>
</li>
<li>
<p>Balanced distribution of Oracle ACFS across Oracle ASM disk group storage for increased I/O parallelism</p>
</li>
<li>
<p>Data reliability through Oracle ASM mirroring protection mechanisms</p>
</li>
</ul>
<p>An additional feature of Oracle ACFS is Oracle ACFS Replication which, similar to Data Guard for the database, enables replication of Oracle ACFS file systems across the network to a remote site, providing disaster recovery capability for the file system. Oracle ACFS replication captures file system changes written to disk for a primary file system and records the changes in files called replication logs. These logs are transported to the site hosting the associated standby file system where background processes read the logs and apply the changes recorded in the logs to the standby file system. After the changes recorded in a replication log are successfully applied to the standby file system, the replication log is deleted from the sites hosting the primary and standby file systems.</p>
</div>
<!-- class="sect2" -->
<a id="CIHHGCEB"></a>
<div id="HAOVW11985" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.15.3</span> Oracle Solaris ZFS Storage Appliance Replication<a id="sthref205"></a></h3>
<p>The Oracle Solaris ZFS Storage Appliance series supports snapshot-based replication of projects and shares from a source appliance to any number of target appliances manually, on a schedule, or continuously for the following use cases:</p>
<ul>
<li>
<p>Disaster recovery: Replication can be used to mirror an appliance for disaster recovery. In the event of a disaster that impacts the service of the primary appliance (or even an entire data center), administrators activate the service at the disaster recovery site, which takes over using the most recently replicated data. When the primary site is restored, data changed while the disaster recovery site was in service can be migrated back to the primary site, and normal service is restored. Such scenarios are fully testable before a disaster occurs.</p>
</li>
<li>
<p>Data distribution: Replication can be used to distribute data (such as virtual machine images or media) to remote systems across the world in situations where clients of the target appliance would not ordinarily be able to reach the source appliance directly, or such a setup would have prohibitively high latency. One example uses this scheme for local caching to improve latency of read-only data (such as documents).</p>
</li>
<li>
<p>Disk-to-disk backup: Replication can be used as a backup solution for environments in which tape backups are not feasible. Tape backup might not be feasible, for example, because the available bandwidth is insufficient or because the latency for recovery is too high.</p>
</li>
<li>
<p>Data migration: Replication can be used to migrate data and configuration between Oracle Solaris ZFS Storage appliances when upgrading hardware or rebalancing storage. Shadow migration can also be used for this purpose.</p>
</li>
</ul>
<p>The architecture of Oracle Solaris ZFS Storage Appliance also makes it an ideal platform to complement Data Guard for disaster recovery of Oracle Fusion Middleware. Oracle Fusion Middleware has a number of critical files that are stored outside of the database. These binaries, configuration data, metadata, logs and so on also require data protection to ensure availability of the Oracle Fusion Middleware. For these, the built-in replication feature of the ZFS Storage Appliance is used to move this data to a remote disaster recovery site.</p>
<p>Benefits of the Oracle Solaris ZFS Storage Appliance when used with Oracle Fusion Middleware include:</p>
<ul>
<li>
<p>Leverages remote replication for Oracle Fusion Middleware</p>
</li>
<li>
<p>Provides ability to quickly create clones and snapshots of databases to increase ROI of DR sites</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABGDGCE"></a>
<div id="HAOVW11956" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.16</span> Client and Application Failover</h2>
<p>A highly available architecture requires the application tier to transparently fail over to a surviving instance or database advertising the required service. This ensures that applications are generally available or minimally impacted in the event of node failure, instance failure, data corruption, or database failures. Transparent client failover enables applications to fail over to another available Oracle RAC instance or to another database (such as in the case of a Data Guard role transition or Oracle GoldenGate).</p>
<p>Client failover encompasses failure notification, connection cleanup, and automatic reconnection and retries of database service residing in another Oracle RAC instance or database and possibly query retry.</p>
<p>At a high level, the following components are used to provide for seamless client failover:</p>
<ul>
<li>
<p><span class="bold">Services</span></p>
<p>Oracle Database provides a powerful automatic workload management facility, called services, to enable the enterprise grid vision. Services are entities that you can define in Oracle databases that enable you to group database workloads, route work to the optimal instances that are assigned to offer the service, and achieve high availability for planned and unplanned actions.</p>
</li>
<li>
<p><span class="bold">High Availability Framework</span></p>
<p>An Oracle RAC component that enables Oracle Database to maintain components in a running state.</p>
</li>
<li>
<p><span class="bold">Fast Application Notification (FAN)</span></p>
<p>FAN is a high availability notification mechanism that Oracle RAC uses to notify other processes about configuration-level and service-level information that includes service status changes, such as UP or DOWN events. FAN also provides load advisory notifications. The Oracle client drivers and Oracle connection pools respond to FAN events and take immediate action. FAN UP and DOWN events can apply to instances, services, and nodes.</p>
</li>
<li>
<p><span class="bold">Transaction Guard</span></p>
<p>Transaction Guard is a tool that provides a protocol and an API for at-most-once execution of transactions in case of unplanned outages and duplicate submissions.</p>
</li>
<li>
<p><span class="bold">Application Continuity</span></p>
<p>Application Continuity provides a general purpose infrastructure that replays the in-flight request when a recoverable error is received, masking many system, communication, and storage outages and hardware failures. Unlike existing recovery technologies, this feature attempts to recover the transactional and non-transactional session states beneath the application, so that the outage appears to the application as a delayed execution.</p>
</li>
<li>
<p><span class="bold">Connection Load Balancing</span></p>
<p>Connection Load Balancing is a feature of Oracle Net Services that balances incoming connections across all of the instances that provide the requested database service.</p>
<p>With run-time connection load balancing, applications can use load balancing advisory events to provide better service to users. Oracle JDBC, Oracle Universal Connection Pool for Java, OCI session pool, ODP.NET, and Oracle WebLogic Server Active GridLink for Oracle RAC clients are automatically integrated to take advantage of load balancing advisory events. The load balancing advisory informs the client about the current service level that an instance is providing for a service</p>
</li>
<li>
<p><span class="bold">Fast Connection Failover</span></p>
<p>Fast Connection Failover is the ability of Oracle Clients to provide rapid failover of connections by subscribing to FAN events.</p>
</li>
<li>
<p><span class="bold">Transparent Application Failover (TAF)</span></p>
<p>Transparent Application Failover is a run-time failover for high availability environments that refers to the failover and re-establishment of application-to-service connections. It enables client applications to automatically reconnect to the database if the connection fails, and, optionally, resume a SELECT statement that was in progress. This reconnection happens automatically from within the Oracle Call Interface (OCI) library.</p>
</li>
<li>
<p><span class="bold">Single Client Access Name (SCAN)</span></p>
<p>SCAN provides a single name to the clients connecting to Oracle RAC that does not change throughout the life of the cluster, even if you add or remove nodes from the cluster. Clients connecting with SCAN can use a simple connection string, such as a thin JDBC URL or EZConnect, and still achieve the load balancing and client connection failover.</p>
</li>
<li>
<p><span class="bold">Global Data Services</span></p>
<p>Global Data Services (GDS) is a new capability of Oracle Database that extends the concept of services to a globally replicated configuration involving a combination of single-instance, Oracle RAC, Oracle Active Data Guard, and Oracle GoldenGate. This enables services to be deployed anywhere within this globally replicated configuration, supporting load balancing, high availability, database affinity, and so on.</p>
</li>
<li>
<p><span class="bold">Connection Time Failover</span></p>
<p>Oracle Net supports connect descriptors with multiple lists of addresses, each with its own characteristics. Connection time failover allows for a new connection attempt to fail over to a different address if the connection to the first address fails.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT016" href="../CNCPT/transact.htm#CNCPT016"><span class="italic">Oracle Database Concepts</span></a> for information about how the database processes transactions</p>
</li>
<li>
<p><a class="olink RACAD076" href="../RACAD/GUID-8DC4D5E0-CA9D-47BC-BAD0-8769405AFEC5.htm#RACAD076"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about Dynamic Database Services</p>
</li>
<li>
<p><a class="olink TDPRC289" href="../TDPRC/configwlm.htm#TDPRC289"><span class="italic">Oracle Database 2 Day + Real Application Clusters Guide</span></a> for information about Dynamic Database Services</p>
</li>
<li>
<p><a class="olink GSMUG107" href="../GSMUG/intro.htm#GSMUG107"><span class="italic">Oracle Database Global Data Services Concepts and Administration Guide</span></a></p>
</li>
</ul>
</div>
<div id="HAOVW11957" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref206"></a>
<h3 class="sect2"><span class="secnum">3.16.1</span> Client Failover Processing for Connections</h3>
<p>At a high level, automating client failover in an <span class="glossaryterm">MAA environment</span> includes relocating database services to available resources, notifying clients that a failure has occurred, potentially breaking them out of TCP timeout, and redirecting application connections to available resources where the database service is active. See My Oracle Support note 1617163.1, &#34;Client and Application Failover Validation Matrix,&#34; for configuration and best practices with a particular client or application.</p>
<p>The components described in the introduction to this chapter that are used to process the failover of application connections depend on the configuration of your MAA environment.</p>
<div id="HAOVW11958" class="tblruleformal">
<p class="titleintable"><a id="sthref207"></a><a id="sthref208"></a>Table 3-3 Client Failover Processing for Connections</p>
<table class="cellalignment4497" title="Client Failover Processing for Connections" summary="Client Failover Processing for Connections" dir="ltr">
<thead>
<tr class="cellalignment4486">
<th class="cellalignment4496" id="r1c1-t34">MAA Configuration</th>
<th class="cellalignment4496" id="r1c2-t34">Service Relocation</th>
<th class="cellalignment4496" id="r1c3-t34">Application Notification</th>
<th class="cellalignment4496" id="r1c4-t34">Session Failover and Recovery<a id="sthref209" href="#sthref209" onclick="footdisplay(1,&#34;Application continuity is also an option for all of these configurations except Replicated Databases, as long as the client is JDBC, UCP, or AGL.&#34;)"><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r2c1-t34" headers="r1c1-t34">
<p>Single Instance with Data Guard</p>
</td>
<td class="cellalignment4492" headers="r2c1-t34 r1c2-t34">
<ul>
<li>
<p>Start service after Data Guard failover using a trigger written on the <code>DB_ROLE_CHANGE</code> system event</p>
</li>
<li>
<p>Use Global Data Services</p>
</li>
</ul>
</td>
<td class="cellalignment4492" headers="r2c1-t34 r1c3-t34">
<p>Configure your operating system for efficient TCP timeouts on the hosts that run the application layer</p>
</td>
<td class="cellalignment4492" headers="r2c1-t34 r1c4-t34">
<p>Configure Transparent Oracle Failover (TAF) for OCI clients. If not using TAF, you can include Transaction Guard in your application for OCI, JDBC Thin, or ODP.</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r3c1-t34" headers="r1c1-t34">
<p>Oracle RAC Database or Oracle RAC One Node</p>
</td>
<td class="cellalignment4492" headers="r3c1-t34 r1c2-t34">
<ul>
<li>
<p>Use services managed by Oracle Clusterware</p>
</li>
</ul>
</td>
<td class="cellalignment4492" headers="r3c1-t34 r1c3-t34">
<p>Configure for Fast Application Notification</p>
</td>
<td class="cellalignment4492" headers="r3c1-t34 r1c4-t34">
<p>Configure Transparent Oracle Failover (TAF) for OCI clients. Configure Application Continuity for Thin JDBC Clients.,</p>
<p>If not using these, you may include Transaction Guard in your application for OCI, JDBC Thin, or ODP. (TAF and AC include Transaction Guard)</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r4c1-t34" headers="r1c1-t34">
<p>Oracle RAC Database with Data Guard</p>
</td>
<td class="cellalignment4492" headers="r4c1-t34 r1c2-t34">
<ul>
<li>
<p>Use services managed by Oracle Clusterware for service failover within each cluster</p>
</li>
<li>
<p>Use role based services by Oracle Clusterware for service failover between sites</p>
</li>
</ul>
</td>
<td class="cellalignment4492" headers="r4c1-t34 r1c3-t34">
<p>Configure for Fast Application Notification</p>
</td>
<td class="cellalignment4492" headers="r4c1-t34 r1c4-t34">
<p>Configure Transparent Oracle Failover (TAF) for OCI clients. Configure Application Continuity for JDBC thin clients.</p>
<p>If not using these you can include Transaction Guard in your application for OCI, JDBC Thin, or ODP. (TAF and AC include Transaction Guard)</p>
</td>
</tr>
<tr class="cellalignment4486">
<td class="cellalignment4492" id="r5c1-t34" headers="r1c1-t34">
<p>Replicated Databases</p>
</td>
<td class="cellalignment4492" headers="r5c1-t34 r1c2-t34">
<ul>
<li>
<p>Use Global Data Services</p>
</li>
</ul>
</td>
<td class="cellalignment4492" headers="r5c1-t34 r1c3-t34">
<p>Configure your operating system for efficient TCP timeouts on the hosts that run the application layer</p>
</td>
<td class="cellalignment4492" headers="r5c1-t34 r1c4-t34">
<p>Configure Transparent Oracle Failover (TAF) for OCI clients using BASIC only.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>Application continuity is also an option for all of these configurations except Replicated Databases, as long as the client is JDBC, UCP, or AGL.</p>
<p>The following sections provide more information about service relocation and application notification.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>My Oracle Support note 1617163.1 at <a href="http://support.oracle.com/"><code>http://support.oracle.com/</code></a> for configuration and best practices with a particular client or application</p>
</li>
</ul>
</div>
<div id="HAOVW11959" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref210"></a>
<h4 class="sect3"><span class="secnum">3.16.1.1</span> Services</h4>
<p>A service name is a logical representation of a service used for client connections. When a client connects to a listener, it requests a connection to a service. When a database instance starts, it registers itself with a listener as providing one or more services by name. A single service, as known by a listener, can identify one or more database instances in an Oracle RAC or Data Guard environment. A single database instance can register one or more services with a listener.</p>
<div id="HAOVW11960" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref211"></a>
<h5 class="sect4"><span class="secnum">3.16.1.1.1</span> Service Usage in a Single-Instance Database and Data Guard Environment</h5>
<p>The application should connect to the database using a primary specific service name, that is a user-created service that is only active on the primary database. In the event of a Data Guard failover, this service migrates to any database that currently holds the primary role. This can be accomplished in single-instance environments that do not have Oracle Clusterware installed by creating a trigger that executes based on the <code>ON_STARTUP</code> system event. This trigger should check the <code>DATABASE_ROLE</code> value of the <code>V$DATABASE</code> view, and if the value is <code>PRIMARY</code>, then start the user created service.</p>
</div>
<!-- class="sect4" -->
<div id="HAOVW11961" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref212"></a>
<h5 class="sect4"><span class="secnum">3.16.1.1.2</span> Service Usage in an Oracle RAC Database Environment</h5>
<p>Resource profiles are automatically created when you define a service. A resource profile describes how Oracle Clusterware should manage the service and which instance the service should failover to if the preferred instance stops. Resource profiles also define service dependencies for the instance and the database. Due to these dependencies, if you stop a database, then the instances and services are automatically stopped in the correct order.</p>
<p>When you define a service for an administrator-managed database, you define which instances usually support that service using <code>SRVCTL</code> with the <code>-preferred</code> parameter. These are known as the preferred instances. You can also define other instances to support a service if the service&#39;s preferred instance fails using <code>SRVCTL</code> with the <code>-available</code> parameter. These are known as available instances.</p>
<p>When you specify preferred instances, you are specifying the number of instances on which a service usually runs. This is the maximum cardinality of the service. Oracle Clusterware attempts to ensure that the service runs on the number of instances for which you have configured the service. Afterward, due to either instance failure or planned service relocations, a service may be running on an available instance.</p>
<p>If an instance fails, then you cannot control to which available instance Oracle Clusterware relocates the services if there are multiple instances in the list. During a planned operation, however, you can manually direct the service to any instance in either the preferred or the available list not currently offering the service.</p>
</div>
<!-- class="sect4" -->
<div id="HAOVW11962" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref213"></a>
<h5 class="sect4"><span class="secnum">3.16.1.1.3</span> Service Usage in an Oracle RAC Database and Data Guard Environment</h5>
<p>If you configured Data Guard in your Oracle RAC environment, then you can define a role for each service using <code>SRVCTL</code> with the <code>-l</code> parameter. When you specify a role for a service, Oracle Clusterware automatically starts the service only when the database role matches the role you specified for the service. Valid roles are PRIMARY, PHYSICAL_STANDBY, LOGICAL_STANDBY, and SNAPSHOT_STANDBY and you can specify more than one role for a service.</p>
<p>If multiple databases in the cluster offer the same service name, then Oracle RAC balances connections to that service across all such databases. This is useful for standby and active Data Guard databases, but if you want client connections to a service to be directed to a particular database, then the service name must be unique within the cluster (not offered by any other database).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SBYDB4701" href="../SBYDB/concepts.htm#SBYDB4701"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for more information about database roles</div>
</div>
<!-- class="sect4" -->
<div id="HAOVW11963" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref214"></a>
<h5 class="sect4"><span class="secnum">3.16.1.1.4</span> Service Usage in a Replicated Environment or Oracle Active Data Guard Environment</h5>
<p>The Global Data Services framework is the software infrastructure for global services. This framework automates and centralizes configuration, maintenance, and monitoring of a database cloud, and enables load balancing and failover for global services. The framework manages these virtualized resources with minimal administrative overhead, enabling the cloud to handle additional client requests.</p>
<p>The Global Data Services framework is built around the following preexisting Oracle Database technologies:</p>
<ul>
<li>
<p>Oracle Active Data Guard</p>
<p>Enables high-performance farms of read-only databases.</p>
</li>
<li>
<p>Data Guard Broker</p>
<p>Enables creation, management, and monitoring of Data Guard configurations that include a primary database and up to 30 standby databases.</p>
</li>
<li>
<p>Oracle GoldenGate</p>
<p>Enables replication updates among multiple databases.</p>
</li>
</ul>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="HAOVW11964" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref215"></a>
<h4 class="sect3"><span class="secnum">3.16.1.2</span> Fast Application Notification</h4>
<p>With FAN, the continuous, dynamic database services built into Oracle RAC, Data Guard, and Global Data Services are extended to applications and mid-tier servers. When the state of a database service changes (for example, up, down, or not restarting), the new status is posted to interested subscribers through FAN events. Oracle drivers and applications use these events to achieve very fast detection of failures, balancing of connection pools following failures, and balancing of connection pools again when the failed components are repaired. For example, when the service at an instance starts, the FAN event is used immediately to route work to that resource. When the service at an instance or node fails, the FAN event is used immediately to interrupt applications to recover.</p>
<p>To solve the high availability problems with database connections, Oracle Clusterware and Data Guard Broker post a FAN event, and also executes server-side callouts, immediately when a service changes state. The event payload contains the relevant information that describes the status of the service on Oracle RAC. On receipt of the FAN event, applications can terminate sessions in communication with the failed instance or node, notify sessions waiting to resume operation, and reorganize in coming work when additional resources are available. To know which sessions to process, every session using Oracle Database has a unique connection signature. The session signatures match the FAN payload.</p>
<p>For planned outages, use any connection pool with FAN configured: OCI, UCP, ICC, WebLogic Server Active Grid Link, or ODP.Net. The FAN planned event drains the work at request boundaries. Immediately, the FAN event is received for a planned down, the idle connections are removed from the pool for that service or instance, and the active (borrowed) connections are marked for release when they are returned to the pool. This effectively drains the work for planned outages with no interruption to the users. See My Oracle Support note 1593712.1 for the steps required to gracefully perform planned maintenance operations without application interruption.</p>
<p>FAN is also used for posting advisories for runtime connection load balancing, Web Affinity, and Data Dependent Routing.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink RACAD076" href="../RACAD/GUID-8DC4D5E0-CA9D-47BC-BAD0-8769405AFEC5.htm#RACAD076"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about Dynamic Database Services</p>
</li>
<li>
<p>My Oracle Support note 1593712.1 at <a href="http://support.oracle.com/"><code>http://support.oracle.com/</code></a> for information about planned maintenance without application interruption</p>
</li>
</ul>
</div>
<div id="HAOVW11965" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref216"></a>
<h5 class="sect4"><span class="secnum">3.16.1.2.1</span> Enabling FAN for Oracle Clients</h5>
<p>Oracle integrated FAN with many of the common client application environments that are used to connect to Oracle RAC databases. Therefore, the easiest way to use FAN is to use an integrated Oracle client.</p>
<p>Due to the integration with FAN, Oracle integrated clients are more aware of the current status of an Oracle RAC cluster. This prevents client connections from waiting or trying to connect to instances or services that are no longer available. When instances start, Oracle RAC uses FAN to notify the connection pool so that the connection pool can create connections to the recently started instance and take advantage of the additional resources that this instance provides.</p>
<p>Oracle client drivers that are integrated with FAN can:</p>
<ul>
<li>
<p>Remove terminated connections immediately when a service is declared as DOWN at an instance, and immediately when nodes are declared as DOWN</p>
</li>
<li>
<p>Report errors to clients immediately when Oracle Database detects the NOT RESTARTING state, instead of making the client wait while the service repeatedly attempts to restart</p>
</li>
</ul>
<p>Oracle connection pools that are integrated with FAN can:</p>
<ul>
<li>
<p>Balance connections across all of the Oracle RAC instances when a service starts; this is preferable to directing the sessions that are defined for the connection pool to the first Oracle RAC instance that supports the service</p>
</li>
<li>
<p>Balance work requests at run time using load balancing advisory events</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RACAD8282" href="../RACAD/GUID-8CA1B780-FC7E-4050-8A11-468D27CBD308.htm#RACAD8282"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for complete information about how to enable FAN for all Oracle clients</div>
</div>
<!-- class="sect4" -->
<div id="HAOVW11966" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref217"></a>
<h5 class="sect4"><span class="secnum">3.16.1.2.2</span> Considerations for Applications That Cannot Use FAN</h5>
<p>Configure your operating system for efficient TCP timeouts on the hosts that run the application layer. The OS TCP timeouts should be set to the amount of time it takes for the database layer to failover and the database services to be started. Consult your operating system manuals for how to properly configure TCP timeout.</p>
<p>Configure reconnection logic within the application to respond appropriately in the event of an exception. For example, when a session from the connection pool receives an exception that results in a disconnection (such as an ORA-3113 error), the application should automatically attempt to reconnect that session. The reconnection attempts should be configured such that they will continue for the length of time that it takes to failover the database layer and bring the application services online.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="HAOVW11967" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref218"></a>
<h3 class="sect2"><span class="secnum">3.16.2</span> Transaction Failover and Protection</h3>
<p>Transaction failover and protection technologies include Transaction Guard and Application Continuity.</p>
<a id="BEIHHFBC"></a>
<div id="HAOVW11942" class="sect3">
<h4 class="sect3"><span class="secnum">3.16.2.1</span> Transaction Guard</h4>
<p>Transaction Guard is a generic tool for applications to provide a reliable, known outcome for transactions following planned and unplanned outages. Applications use a new concept called the logical transaction ID to determine the outcome of the last transaction open in a database session following an outage. Without using Transaction Guard, applications that attempt to retry operations following outages can cause logical corruption by committing duplicate transactions.</p>
<p>Failing to recognize that the last submission has committed, will commit sometime soon, or has not run to completion can lead applications that attempt to replay to cause duplicate transaction submissions and other forms of logical corruption because the software might try to re-issue already persisted changes.</p>
<p>Without Transaction Guard, if a transaction was started and a commit was issued, the commit message that is sent back to the client is not durable. The client is left not knowing whether the transaction committed or not. The transaction cannot be validly resubmitted if the non-transactional state is incorrect or if it is already committed. In the absence of guaranteed commit and completion information, resubmission can lead to transactions applied more than once and in the incorrect state.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TDPRC625" href="../TDPRC/configwlm.htm#TDPRC625"><span class="italic">Oracle Database 2 Day + Real Application Clusters Guide</span></a> for information about Transaction Guard with Oracle RAC and Dynamic Database Services</p>
</li>
<li>
<p><span class="italic">Oracle Database Development Guide</span> <a class="olink ADFNS007" href="../ADFNS/adfns_sqlproc.htm#ADFNS007">&#34;SQL Processing for Application Developers&#34;</a> and <a class="olink ADFNS8000" href="../ADFNS/adfns_trans_idemp_guard.htm#ADFNS8000">&#34;Using Transaction Guard&#34;</a></p>
</li>
<li>
<p><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span> DBMS_APP_CONT package</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABHABDC"></a>
<div id="HAOVW11927" class="sect3">
<h4 class="sect3"><span class="secnum">3.16.2.2</span> Application Continuity</h4>
<p>A highly available architecture requires the ability of the application tier to transparently fail over to a surviving instance or database advertising the required service. This ensures that applications are generally available or minimally impacted in the event of node failure, instance failure, data corruption, or database failures. Application Continuity for Java attempts to mask recoverable outages by replaying the request at another available Oracle RAC instance or to another database (such as in the case of a Data Guard role transition).</p>
<p>Application Continuity encompasses:</p>
<ul>
<li>
<p>FAN: failure notification</p>
</li>
<li>
<p>Connection cleanup</p>
</li>
<li>
<p>Automatic reconnection and retries of database service residing in another Oracle RAC instance or database</p>
</li>
<li>
<p>Replay of the in-flight request</p>
</li>
</ul>
<p>Masking outages of the database session is a complex task for application development and, as a result, errors and timeouts are often exposed to the users. Application Continuity attempts to mask outages from users and applications by recovering the database session following recoverable outages, unplanned and planned. Application Continuity performs this recovery beneath the application so that the outage appears to the application as a delayed execution. For the recovery to succeed, the data and messages restored to the client by Application Continuity must be the same as those that the application has seen and potentially made decisions on.</p>
<p>Application Continuity is started for outages that are recoverable, typically related to underlying software, foreground, hardware, communications, network, or storage layers. Application Continuity is used to improve the user experience when handling both unplanned outages and planned outages.</p>
<p>With Oracle Database 12<span class="italic">c</span> release 1, Application Continuity for Java is available for general use with:</p>
<ul>
<li>
<p>JDBC-Thin Oracle driver</p>
</li>
<li>
<p>JDBC Universal Connection Pool</p>
</li>
<li>
<p>WebLogic Server Active Grid Link</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT016" href="../CNCPT/transact.htm#CNCPT016"><span class="italic">Oracle Database Concepts</span></a> for information about transactions</p>
</li>
<li>
<p><a class="olink ADFNS8000" href="../ADFNS/adfns_trans_idemp_guard.htm#ADFNS8000"><span class="italic">Oracle Database Development Guide</span></a> for information about transactions</p>
</li>
<li>
<p><a class="olink RACAD076" href="../RACAD/GUID-8DC4D5E0-CA9D-47BC-BAD0-8769405AFEC5.htm#RACAD076"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about Dynamic Database Services</p>
</li>
<li>
<p><a class="olink TDPRC289" href="../TDPRC/configwlm.htm#TDPRC289"><span class="italic">Oracle Database 2 Day + Real Application Clusters Guide</span></a> for information about Dynamic Database Services</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHFFHCI"></a>
<div id="HAOVW12010" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.16.3</span> Oracle Database with Global Data Services</h3>
<p>Global Data Services enables administrators to automatically and transparently manage client workloads across replicated databases that offer common services. A database service is a named representation of one or more database instances. Services enable you to group database workloads and route a particular work request to an appropriate instance. A global service is a service provided by multiple databases synchronized through data replication.</p>
<p>Global Data Services provides dynamic load balancing, failover, and centralized service management for a set of replicated databases that offer common services. The set of databases can include Oracle RAC and noncluster Oracle databases interrelated through Oracle Data Guard, databases consolidated under Oracle Multitenant, Oracle GoldenGate, or any other replication technology.</p>
<p>The benefits of Global Data Services include the following:</p>
<ul>
<li>
<p>Enables you to centrally manage global resources, including globally distributed multiple database configurations</p>
</li>
<li>
<p>Provides global scalability, availability, and runtime load balancing</p>
</li>
<li>
<p>Supports seamless failover</p>
</li>
<li>
<p>Enables you to dynamically add databases to the GDS configuration and dynamically migrate global services</p>
</li>
<li>
<p>Enables optimal resource utilization</p>
</li>
</ul>
<p>The global services management framework is the software infrastructure for global services. This framework automates and centralizes configuration, maintenance, and monitoring of a GDS configuration, and enables load balancing and failover for services. The framework manages these virtualized resources with minimal administrative overhead, enabling the configuration to handle additional client requests.</p>
<p>The global services management framework is built around the following preexisting Oracle Database technologies:</p>
<ul>
<li>
<p>Oracle Real Application Clusters (Oracle RAC)</p>
<p>Enables dynamic load balancing and workload management in a cluster</p>
</li>
<li>
<p>Oracle Active Data Guard</p>
<p>Enables high-performance farms of read-only databases</p>
</li>
<li>
<p>Data Guard Broker</p>
<p>Enables creation, management, and monitoring of Data Guard configurations that include a primary database and up to 30 standby databases</p>
</li>
<li>
<p>Oracle GoldenGate</p>
<p>Enables replication updates among multiple databases</p>
</li>
</ul>
<div class="figure">
<p class="titleinfigure"><a id="sthref219"></a>Figure 3-3 Global Data Services Architecture</p>
<img width="659" height="734" src="img/haovw_vm_031.gif" alt="Description of Figure 3-3 follows"/><br/>
<a id="sthref220" href="img_text/haovw_vm_031.htm">Description of &#34;Figure 3-3 Global Data Services Architecture&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink GSMUG667" href="../GSMUG/preface.htm#GSMUG667"><span class="italic">Oracle Database Global Data Services Concepts and Administration Guide</span></a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHFGJDE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.17</span> Oracle Multitenant</h2>
<p>Oracle Multitenant is the optimal database consolidation method from Oracle Database 12c onward. The multitenant architecture combines the best attributes of each of the previous consolidation methods without their accompanying tradeoffs.</p>
<p>Oracle Multitenant is a new option of Oracle Database 12c that helps reduce IT costs by simplifying consolidation, provisioning, upgrades and more. This new architecture allows a container database to hold many pluggable databases. To applications, these pluggable databases appear as a standalone database, and no changes are required to the application in order to access the pluggable database. By consolidating multiple databases as pluggable databases into a single container database, you are provided with the ability to manage &#34;many as one&#34;. The flexibility remains to operate on pluggable databases in isolation should your business require it.</p>
<p>Oracle Multitenant is fully compliant with other High Availability features like Oracle Real Application Clusters, Oracle Data Guard and Oracle Golden Gate.</p>
<p class="subhead2"><a id="sthref221"></a>Benefits of Using Oracle Multitenant</p>
<ul>
<li>
<p>High consolidation density - Many pluggable databases can be stored in a single container databases. These pluggable databases share background processes and memory structures letting you run more pluggable databases than single databases as the overhead for each single database is removed/reduced.</p>
</li>
<li>
<p>Rapid provisioning and cloning - A pluggable database can be unplugged from one container database and plugged into another. A pluggable database can also be cloned either into the same container or into a different container. Cloning can be used to create a &#34;gold image&#34; or seed database for DBaaS or SaaS environments. This pluggable database can then be rapidly cloned to easily set up database environments for new customers.</p>
</li>
<li>
<p>New patching and upgrade options -When you upgrade or patch a container database, all the pluggable databases in that container are also upgraded or patched. If you need isolation, you can unplug a pluggable database and plug it into a container database at a later version.</p>
</li>
<li>
<p>Database backup and recovery - By consolidating multiple databases as pluggable databases, operations such as backup and disaster recovery are performed at the container level. Oracle Multitenant also provides the flexibility to backup and restore individual pluggable databases with no impact to other running pluggable databases in the same container database.</p>
</li>
<li>
<p>Operation with Oracle Data Guard - Data Guard configurations are maintained at the container database level. When a Data Guard role transition (either failover or switchover) is performed, all pluggable databases are transitioned to the new primary database. There is no need to create or manage multiple Data Guard configurations for each pluggable database as would be required for single databases. Existing tools such as Data Guard Standby First Patching and Data Guard Transient Logical Rolling Upgrade can still be used to reduce downtime and are performed at the container level, so all pluggable databases will be maintained in a single operation.</p>
</li>
<li>
<p>Operation with Oracle Golden Gate - All of functionality provided by Oracle Golden Gate also exists for Oracle Multitenant. Golden Gate also provides the flexibility to operate at the pluggable database level, allowing replication to occur for a subset of the pluggable databases in a container database. Golden Gate can be used for minimal to zero downtime upgrades either at the container database level or at an individual pluggable database level.</p>
</li>
<li>
<p>Resource management - Just as Oracle Resource Manager can control resource utilization between single databases, it can also control resource utilization of individual pluggable databases in a container. This can ensure that a single pluggable database does not access more than its assigned share of system resources.</p>
</li>
<li>
<p>Operation Oracle Flashback Database - If fast point-in-time recovery is required, the initial release of Oracle Multitenant enables using Flashback Database at the CDB level. A future release of Oracle Multitenant is planned to enable Flashback Database to be used on an individual PDB without impacting the availability of other PDBs.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHCCJFE"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">3.18</span> Oracle Restart<a id="sthref222"></a><a id="sthref223"></a><a id="sthref224"></a></h2>
<p>Oracle Restart is a new feature in Oracle 11<span class="italic">g</span> Release 2 (11.2) that enhances the availability of a single-instance (nonclustered) Oracle database and its components. Oracle Restart is used in single-instance environments only. For Oracle Real Application Clusters (Oracle RAC) environments, the functionality to automatically restart components is provided by Oracle Clusterware.</p>
<p>If you install Oracle Restart, it automatically restarts the database, the listener, and other Oracle components after a hardware or software failure or whenever the database&#39;s host computer restarts. It also ensures that the Oracle components are restarted in the proper order, in accordance with component dependencies.</p>
<p>Oracle Restart periodically monitors the health of <a id="sthref225"></a>components&mdash;such as SQL*Plus, the Listener Control utility (LSNRCTL), ASMCMD, and Oracle Data Guard&mdash;that are integrated with Oracle Restart. If the health check fails for a component, Oracle Restart shuts down and restarts the component.</p>
<p>Oracle Restart runs out of the Oracle Grid Infrastructure home, which you install separately from Oracle Database homes.</p>
<p>Integrated client failover applications depend on role based services and Fast Application Notification events, managed by Oracle clusterware, to alert the application to failures. Single instance databases must have Oracle Restart to achieve integrated client failover.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADMIN12708" href="../ADMIN/restart.htm#ADMIN12708"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for information about installing and configuring the Oracle Restart feature</p>
</li>
<li>
<p><span class="italic">Oracle Grid Infrastructure Installation Guide</span> for your platform</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CIHFJDIE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.19</span> Oracle Site Guard</h2>
<p>Oracle Site Guard is a disaster-recovery solution that enables administrators to automate complete site switchover or failover.</p>
<p>Oracle Site Guard orchestrates and automates the coordinated failover of Oracle Fusion Middleware, Oracle Fusion Applications, and Oracle Databases. It is also extensible to include other data center software components.</p>
<p>Oracle Site Guard integrates with underlying replication mechanisms that synchronize primary and standby environments and protect mission critical data. It comes with a built-in support for Oracle Data Guard for Oracle database, and Oracle Sun ZFS. Oracle Site Guard can also support other storage replication technologies.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink GUARD107" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=GUARD107"><span class="italic">Oracle Enterprise Manager Oracle&reg; Site Guard Administrator&#39;s Guide</span></a></div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4485">
<tr>
<td class="cellalignment4492">
<table class="cellalignment4490">
<tr>
<td class="cellalignment4489"><a href="hadesign.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4489"><a href="unplanned.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2005, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4494">
<table class="cellalignment4488">
<tr>
<td class="cellalignment4489"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4489"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4489"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4489"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4489"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4489"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>