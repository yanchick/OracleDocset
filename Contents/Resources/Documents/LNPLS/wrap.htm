<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-78362"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/PL%2FSQL%20Source%20Text%20Wrapping"></a><title>PL/SQL Source Text Wrapping</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="wrapping PL/SQL source text, obfuscating PL/SQL source text, wrapping PL/SQL source text, hiding PL/SQL source text, stored PL/SQL unit, wrapping, stored subprogram, package, security mechanism, PL/SQL source text wrapping, benefit of, limitations of, trigger, hiding implementation details of, guideline for, PL/SQL Wrapper utility, wrap utility, comment, PL/SQL Wrapper utility and, DBMS_DDL package, WRAP function, CREATE_WRAPPED procedure, MALFORMED_WRAP_INPUT exception"/>
<meta name="dcterms.created" content="2017-05-09T17:03:42Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database PL/SQL Language Reference"/>
<meta name="dcterms.identifier" content="E50727-06"/>
<meta name="dcterms.isVersionOf" content="LNPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="drop_type_body.htm" title="Previous" type="text/html"/>
<link rel="Next" href="nameresolution.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E50727-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-AB6FFBAD-DE20-4197-A885-AF81F3766FA2"></a> <span id="PAGE" style="display:none;">95/100</span> <!-- End Header -->
<a id="LNPLS2148"></a><a id="LNPLS016"></a>
<h1 id="LNPLS-GUID-AB6FFBAD-DE20-4197-A885-AF81F3766FA2" class="sect1"><span class="enumeration_appendix">A</span> PL/SQL Source Text Wrapping</h1>
<div>
<p>You can wrap the PL/SQL source text for any of these stored PL/SQL units, thereby preventing anyone from displaying that text with the static data dictionary views <code class="codeph">*_SOURCE</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p>Package specification</p>
</li>
<li>
<p>Package body</p>
</li>
<li>
<p>Type specification</p>
</li>
<li>
<p>Type body</p>
</li>
<li>
<p>Function</p>
</li>
<li>
<p>Procedure</p>
</li>
</ul>
<div class="infobox-note" id="GUID-AB6FFBAD-DE20-4197-A885-AF81F3766FA2__GUID-5CEE4A3A-3009-460C-9E0E-70D88AD779DD">
<p class="notep1">Note:</p>
<p>Wrapping text is low-assurance security. For high-assurance security, use Oracle Database Vault, described in <a class="olink DVADM" target="_blank" href="../DVADM/toc.htm"><span class="italic">Oracle Database Vault Administrator&#39;s Guide</span></a>.</p>
</div>
<p>A file containing wrapped PL/SQL source text is called a <span class="bold">wrapped file</span>. A wrapped file can be moved, backed up, or processed by SQL*Plus or the Import and Export utilities.</p>
<p>To produce a wrapped file, use either the PL/SQL Wrapper utility or a <code class="codeph">DBMS_DDL</code> subprogram. The PL/SQL Wrapper utility wraps the source text of every wrappable PL/SQL unit created by a specified SQL file. The <code class="codeph">DBMS_DDL</code> subprograms wrap the source text of single dynamically generated wrappable PL/SQL units.</p>
<p>Both the PL/SQL Wrapper utility and <code class="codeph">DBMS_DDL</code> subprograms detect tokenization errors (for example, runaway strings), but not syntax or semantic errors (for example, nonexistent tables or views).</p>
<p>By default, the 12.1 PL/SQL compiler can use use wrapped packages that were compiled with the 9.2 PL/SQL compiler. To prevent the 12.1 PL/SQL compiler from using wrapped packages that were compiled with the 9.2 PL/SQL compiler, set the PL/SQL compilation parameter <code class="codeph">PERMIT_92_WRAP_FORMAT</code> to <code class="codeph">FALSE</code>. For more information about <code class="codeph">PERMIT_92_WRAP_FORMAT</code>, see <a class="olink REFRN10317" target="_blank" href="../REFRN/GUID-BCE9E606-836E-4535-913B-3B3C834B7E23.htm#REFRN10317"><span class="italic">Oracle Database Reference</span></a>. For more information about PL/SQL compilation parameters, see <span class="q">&#34;<a href="overview.htm#GUID-DF63BC59-22C2-4BA8-9240-F74D505D5102" title="PL/SQL units are affected by PL/SQL compilation parameters (a category of database initialization parameters). Different PL/SQL units&mdash;for example, a package specification and its body&mdash;can have different compilation parameter settings.">PL/SQL Units and Compilation Parameters</a>&#34;</span>.</p>
<div class="section">
<p class="subhead1">Topics</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><a href="wrap.htm#GUID-C37788E2-0F5D-430B-8D9C-6CD708223C93">PL/SQL Source Text Wrapping Limitations</a></p>
</li>
<li>
<p><a href="wrap.htm#GUID-95FE6D1A-8D8E-4F26-949C-D5583F8D4E2A">PL/SQL Source Text Wrapping Guidelines</a></p>
</li>
<li>
<p><a href="wrap.htm#GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2">Wrapping PL/SQL Source Text with PL/SQL Wrapper Utility</a></p>
</li>
<li>
<p><a href="wrap.htm#GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE">Wrapping PL/SQL Source Text with DBMS_DDL Subprograms</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="LNPLS1744"></a>
<div class="props_rev_3"><a id="GUID-C37788E2-0F5D-430B-8D9C-6CD708223C93"></a>
<h2 id="LNPLS-GUID-C37788E2-0F5D-430B-8D9C-6CD708223C93" class="sect2">PL/SQL Source Text Wrapping Limitations</h2>
<div>
<ul style="list-style-type: disc;">
<li>
<p>Wrapped files are not downward-compatible between Oracle Database releases.</p>
<p>For example, you cannot load files produced by the version <span class="italic">n</span>.1 PL/SQL Wrapper utility into a version (<span class="italic">n</span>-1).2 Oracle Database. Nor can you load files produced by the version <span class="italic">n</span>.2 PL/SQL Wrapper utility into a version <span class="italic">n</span>.1 Oracle Database. Wrapped files are both upward- and downward-compatible across patch sets.</p>
</li>
<li>
<p>Wrapping PL/SQL source text is not a secure way to hide passwords or table names.</p>
<p>For high-assurance security, use Oracle Database Vault, described in <a class="olink DVADM" target="_blank" href="../DVADM/toc.htm"><span class="italic">Oracle Database Vault Administrator&#39;s Guide</span></a>.</p>
</li>
<li>
<p>You cannot wrap the PL/SQL source text of triggers.</p>
<p>To hide the implementation details of a trigger, put them in a stored subprogram, wrap the subprogram, and write a one-line trigger that invokes the subprogram.</p>
</li>
</ul>
</div>
</div>
<a id="LNPLS1743"></a>
<div class="props_rev_3"><a id="GUID-95FE6D1A-8D8E-4F26-949C-D5583F8D4E2A"></a>
<h2 id="LNPLS-GUID-95FE6D1A-8D8E-4F26-949C-D5583F8D4E2A" class="sect2">PL/SQL Source Text Wrapping Guidelines</h2>
<div>
<ul style="list-style-type: disc;">
<li>
<p>Wrap only the body of a package or type, not the specification.</p>
<p>Leaving the specification unwrapped allows other developers to see the information needed to use the package or type (see <a href="wrap.htm#GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__CEGICAJG">Example A-5</a>). Wrapping the body prevents them from seeing the package or type implementation.</p>
</li>
<li>
<p>Wrap files only after you have finished editing them.</p>
<p>You cannot edit wrapped files. If a wrapped file needs changes, you must edit the original unwrapped file and then wrap it.</p>
</li>
<li>
<p>Before distributing a wrapped file, view it in a text editor and ensure that all important parts are wrapped.</p>
</li>
</ul>
</div>
</div>
<a id="LNPLS2149"></a><a id="LNPLS2150"></a><a id="LNPLS2151"></a><a id="LNPLS01602"></a>
<div class="props_rev_3"><a id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2"></a>
<h2 id="LNPLS-GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2" class="sect2">Wrapping PL/SQL Source Text with PL/SQL Wrapper Utility</h2>
<div>
<div class="section">
<div class="infobox-note" id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__GUID-BBBE49D6-CDFC-4075-AB97-EDDD17F42832">
<p class="notep1">Note:</p>
<p>Oracle recommends using PL/SQL Wrapper Utility version 10 or later.</p>
</div>
<p>The PL/SQL Wrapper utility takes a single SQL file (such as a SQL*Plus script) and produces an equivalent text file in which the PL/SQL source text of each wrappable PL/SQL unit is wrapped. (For the list of wrappable PL/SQL units, see the introduction to <span class="q">&#34;<a href="wrap.htm#GUID-AB6FFBAD-DE20-4197-A885-AF81F3766FA2">PL/SQL Source Text Wrapping</a>&#34;</span>.)</p>
<p>The PL/SQL Wrapper utility cannot connect to Oracle Database. To run the PL/SQL Wrapper utility, enter this command at the operating system prompt (with no spaces around the equal signs):</p>
<pre dir="ltr">wrap iname=<span class="italic">input_file</span> [ oname=<span class="italic">output_file</span> ]
</pre>
<p><span class="italic"><code class="codeph">input_file</code></span> is the name of an existing file that contains any combination of SQL statements. <span class="italic"><code class="codeph">output_file</code></span> is the name of the file that the PL/SQL Wrapper utility creates&mdash;the wrapped file.</p>
<div class="infobox-note" id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__GUID-88AA92F0-FB95-41E5-9210-0A3EC2655E46">
<p class="notep1">Note:</p>
<p><span class="italic"><code class="codeph">input_file</code></span> cannot include substitution variables specified with the SQL*Plus <code class="codeph">DEFINE</code> notation, because <span class="italic"><code class="codeph">output_file</code></span> is parsed by the PL/SQL compiler, not by SQL*Plus.</p>
</div>
<p>The PL/SQL Wrapper utility deletes from the wrapped file all comments except:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Comments in <code class="codeph">CREATE</code> statement headers (that is, between <code class="codeph">CREATE</code> and <span class="italic"><code class="codeph">plsql_source</code></span> in the syntax diagram in <span class="italic">Oracle Database SQL Language Reference</span>)</p>
</li>
<li>
<p>Comments delimited by <code class="codeph">/*</code> and <code class="codeph">*/</code></p>
</li>
</ul>
<div class="infobox-note" id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__GUID-6D155B76-8039-49A3-9ECC-E946F02D2063">
<p class="notep1">Note:</p>
<p>If <span class="italic"><code class="codeph">input_file</code></span> is a wrapped file, then <span class="italic"><code class="codeph">input_file</code></span> and <span class="italic"><code class="codeph">output_file</code></span> have identical contents.</p>
</div>
<p>The default file extension for <span class="italic"><code class="codeph">input_file</code></span> is <code class="codeph">sql</code>. The default name of <span class="italic"><code class="codeph">output_file</code></span> is <span class="italic"><code class="codeph">input_file</code></span><code class="codeph">.plb</code>. Therefore, these commands are equivalent:</p>
<pre dir="ltr">wrap iname=/mydir/myfile
wrap iname=/mydir/myfile.sql oname=/mydir/myfile.plb
</pre>
<p>This example specifies a different file extension for <span class="italic"><code class="codeph">input_file</code></span> and a different name for <span class="italic"><code class="codeph">output_file</code></span>:</p>
<pre dir="ltr">wrap iname=/mydir/myfile<span class="bold">.src</span> oname=<span class="bold">/yourdir/yourfile.out</span>
</pre>
<p>You can run <span class="italic"><code class="codeph">output_file</code></span> as a script in SQL*Plus. For example:</p>
<pre dir="ltr">SQL&gt; @myfile.plb;
</pre>
<p><a href="wrap.htm#GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__CEGCHAJJ">Example A-1</a> shows the text of a SQL file, <code class="codeph">wraptest2.sql</code>, that contains two wrappable PL/SQL units&mdash;the procedure <code class="codeph">wraptest</code> and the function <code class="codeph">fibonacci</code>. The file also contains two comments and a SQL <code class="codeph">SELECT</code> statement.</p>
<p><a href="wrap.htm#GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__CEGGEEFH">Example A-2</a> uses the PL/SQL Wrapper utility to wrap <code class="codeph">wraptest2.sql</code> and shows the wrapped file, <code class="codeph">wraptest2.plb</code>. The wrapped file shows that the utility deleted the comment that begins with <code class="codeph">--</code> and wrapped (made unreadable) the PL/SQL source text of the procedure <code class="codeph">wraptest</code> and the function <code class="codeph">fibonacci</code>, but did not change the <code class="codeph">SELECT</code> statement or the comment delimited by <code class="codeph">/*</code> and <code class="codeph">*/</code>.</p>
<p>In SQL*Plus, <a href="wrap.htm#GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__CEGGHABG">Example A-3</a> runs the wrapped file <code class="codeph">wraptest.plb</code>, creating the procedure <code class="codeph">wraptest</code> and the function <code class="codeph">fibonacci</code>; selects the text of the subprograms (which is wrapped and therefore unreadable), and then invokes the subprograms.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__CEGCHAJJ">
<p class="titleinexample">Example A-1 SQL File with Two Wrappable PL/SQL Units</p>
<pre dir="ltr"><span class="bold">-- The following statement will not change. This comment will be deleted.</span>
 
SELECT COUNT(*) FROM EMPLOYEES
/
 
<span class="bold">/* The PL/SQL source text of the following two CREATE statements</span>
<span class="bold">will be wrapped. This commment will not be deleted. */</span>
 
CREATE PROCEDURE wraptest AUTHID CURRENT_USER IS
  TYPE emp_tab IS TABLE OF employees%ROWTYPE INDEX BY PLS_INTEGER;
  all_emps  emp_tab;
BEGIN
  SELECT * BULK COLLECT INTO all_emps FROM employees;
  FOR i IN 1..10 LOOP
    DBMS_OUTPUT.PUT_LINE(&#39;Emp Id: &#39; || all_emps(i).employee_id);
  END LOOP;
END;
/
 
CREATE OR REPLACE FUNCTION fibonacci (
  n PLS_INTEGER
) RETURN PLS_INTEGER
AUTHID CURRENT_USER
IS
  fib_1 PLS_INTEGER := 0;
  fib_2 PLS_INTEGER := 1;
BEGIN
  IF n = 1 THEN                              -- terminating condition
    RETURN fib_1;
  ELSIF n = 2 THEN
    RETURN fib_2;                           -- terminating condition
  ELSE
    RETURN fibonacci(n-2) + fibonacci(n-1);  -- recursive invocations
  END IF;
END;
/
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__CEGGEEFH">
<p class="titleinexample">Example A-2 Wrapping File with PL/SQL Wrapper Utility</p>
<p>Assume that the operating system prompt is <code class="codeph">&gt;</code>. Wrap the file <code class="codeph">wraptest.sql</code>:</p>
<pre dir="ltr">&gt; wrap iname=wraptest2.sql
</pre>
<p>Result:</p>
<pre dir="ltr">PL/SQL Wrapper: Release 12.1.0.1.0- 64bit Production on Fri Oct 5 09:04:47 2012
 
Copyright (c) 1993, 2009, Oracle.  All rights reserved.
 
Processing wraptest2.sql to wraptest2.plb
</pre>
<p>Contents of <code class="codeph">wraptest.plb</code>:</p>
<pre dir="ltr">SELECT COUNT(*) FROM EMPLOYEES
/
/* The PL/SQL source text of the following two CREATE statements
will be wrapped. This commment will not be deleted. */
CREATE PROCEDURE wraptest wrapped 
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
7
12e 13c
Ati2yLD3B+kU7XM0TVryX73L8xowg+lKLgwdNXRAAJn5B/5mc1dWMyeu2toxe3WQdE43ud4v
iswWo6UlLCCfDjMv8TRCThSol2dhohW7/sYpz+StjJY6lZN0bGCbvqei89EAaB1Cyzbs5tft
zL3sdcqGUS1Hoil/l7rHrSAppMlgj8OQcvUOUw8EAMdcEhWUGuVr1k7ZfPPryC0CPuQYNVMN
RdHE7X+X9dq0dYx9Bydq4h6frnD3S4WpKl7lCcAWvutNino76tIyrPjP1J6c2SS/zd9VjaOQ
VSF8QgURgxG+nfgdNIjcpg==
 
/
CREATE OR REPLACE FUNCTION fibonacci wrapped 
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
15b ff
zJS4sutKjJStYT2YsGf4Mfh8YOowgxDc7Z7WfC+5Vs7LeMVjaYLf9VAw/DdubCQDVGuPJby1
PNujEYJ17ueaqoZUk6sEHNlzgW6LQjdWLqYESO2I9GJhTesUW/A8KedikM1NOUOgYGGMgvsU
tuSyXAsICkDZlP+bDPR1xXpcOAx2jnfOP9A3zcg4/mzufgU8/w3hEgMB4yrv8AHmuReSpl8u
HZzyzNRJ92oIKBbAOlJSzcT4RPnvKCA3uvKS
 
/
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-4C024F24-F054-4E11-BCAD-ACA9D6B745D2__CEGGHABG">
<p class="titleinexample">Example A-3 Running Wrapped File and Viewing Wrapped PL/SQL Units</p>
<pre dir="ltr">SQL&gt; <span class="bold">-- Run wrapped file:</span>
SQL&gt; 
SQL&gt; <span class="bold">@wraptest2.plb</span>
SQL&gt; SELECT COUNT(*) FROM EMPLOYEES
  2  /
 
  COUNT(*)
----------
       107
 
1 row selected.
 
SQL&gt; /* The PL/SQL source text of the following two CREATE statements
SQL&gt; will be wrapped. This commment will not be deleted. */
SQL&gt; CREATE PROCEDURE wraptest wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  12e 13c
 21  Ati2yLD3B+kU7XM0TVryX73L8xowg+lKLgwdNXRAAJn5B/5mc1dWMyeu2toxe3WQdE43ud4v
 22  iswWo6UlLCCfDjMv8TRCThSol2dhohW7/sYpz+StjJY6lZN0bGCbvqei89EAaB1Cyzbs5tft
 23  zL3sdcqGUS1Hoil/l7rHrSAppMlgj8OQcvUOUw8EAMdcEhWUGuVr1k7ZfPPryC0CPuQYNVMN
 24  RdHE7X+X9dq0dYx9Bydq4h6frnD3S4WpKl7lCcAWvutNino76tIyrPjP1J6c2SS/zd9VjaOQ
 25  VSF8QgURgxG+nfgdNIjcpg==
 26  
 27  /
 
<span class="bold">Procedure created.</span>
 
SQL&gt; CREATE OR REPLACE FUNCTION fibonacci wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  15b ff
 21  zJS4sutKjJStYT2YsGf4Mfh8YOowgxDc7Z7WfC+5Vs7LeMVjaYLf9VAw/DdubCQDVGuPJby1
 22  PNujEYJ17ueaqoZUk6sEHNlzgW6LQjdWLqYESO2I9GJhTesUW/A8KedikM1NOUOgYGGMgvsU
 23  tuSyXAsICkDZlP+bDPR1xXpcOAx2jnfOP9A3zcg4/mzufgU8/w3hEgMB4yrv8AHmuReSpl8u
 24  HZzyzNRJ92oIKBbAOlJSzcT4RPnvKCA3uvKS
 25  
 26  /
 
<span class="bold">Function created.</span>
 
SQL&gt; 
SQL&gt; <span class="bold">-- Try to display procedure source text:</span>
SQL&gt; 
SQL&gt; <span class="bold">SELECT text FROM USER_SOURCE WHERE name=&#39;WRAPTEST&#39;;</span>
 
TEXT
--------------------------------------------------------------------------------
PROCEDURE wraptest <span class="bold">wrapped</span>
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
7
12e 13c
Ati2yLD3B+kU7XM0TVryX73L8xowg+lKLgwdNXRAAJn5B/5mc1dWMyeu2toxe3WQdE43ud4v
iswWo6UlLCCfDjMv8TRCThSol2dhohW7/sYpz+StjJY6lZN0bGCbvqei89EAaB1Cyzbs5tft
zL3sdcqGUS1Hoil/l7rHrSAppMlgj8OQcvUOUw8EAMdcEhWUGuVr1k7ZfPPryC0CPuQYNVMN
RdHE7X+X9dq0dYx9Bydq4h6frnD3S4WpKl7lCcAWvutNino76tIyrPjP1J6c2SS/zd9VjaOQ
VSF8QgURgxG+nfgdNIjcpg==
 
 
1 row selected.
 
SQL&gt; 
SQL&gt; <span class="bold">-- Try to display function source text:</span>
SQL&gt; 
SQL&gt; <span class="bold">SELECT text FROM USER_SOURCE WHERE name=&#39;FIBONACCI&#39;;</span>
 
TEXT
--------------------------------------------------------------------------------
FUNCTION fibonacci <span class="bold">wrapped</span>
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
15b ff
zJS4sutKjJStYT2YsGf4Mfh8YOowgxDc7Z7WfC+5Vs7LeMVjaYLf9VAw/DdubCQDVGuPJby1
PNujEYJ17ueaqoZUk6sEHNlzgW6LQjdWLqYESO2I9GJhTesUW/A8KedikM1NOUOgYGGMgvsU
tuSyXAsICkDZlP+bDPR1xXpcOAx2jnfOP9A3zcg4/mzufgU8/w3hEgMB4yrv8AHmuReSpl8u
HZzyzNRJ92oIKBbAOlJSzcT4RPnvKCA3uvKS
 
 
1 row selected.
 
SQL&gt; 
SQL&gt; BEGIN
  2    <span class="bold">wraptest;  -- invoke procedure</span>
  3    <span class="bold">DBMS_OUTPUT.PUT_LINE(&#39;fibonacci(5) = &#39; || fibonacci(5));</span>
  4  END;
  5  /
Emp Id: 100
Emp Id: 101
Emp Id: 102
Emp Id: 103
Emp Id: 104
Emp Id: 105
Emp Id: 106
Emp Id: 107
Emp Id: 108
Emp Id: 109
fibonacci(5) = 3
 
PL/SQL procedure successfully completed.
 
SQL&gt; 
</pre></div>
<!-- class="example" --></div>
</div>
<a id="LNPLS1748"></a><a id="LNPLS2152"></a><a id="LNPLS01603"></a>
<div class="props_rev_3"><a id="GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE"></a>
<h2 id="LNPLS-GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE" class="sect2">Wrapping PL/SQL Source Text with DBMS_DDL Subprograms</h2>
<div>
<div class="section">
<p>The <code class="codeph">DBMS_DDL</code> package provides <code class="codeph">WRAP</code> functions and <code class="codeph">CREATE_WRAPPED</code> procedures, each of which wraps the PL/SQL source text of a single dynamically generated wrappable PL/SQL unit. The <code class="codeph">DBMS_DDL</code> package also provides the exception <code class="codeph">MALFORMED_WRAP_INPUT</code> (ORA-24230), which is raised if the input to <code class="codeph">WRAP</code> or <code class="codeph">CREATE_WRAPPED</code> is not a valid wrappable PL/SQL unit. (For the list of wrappable PL/SQL units, see the introduction to <span class="q">&#34;<a href="wrap.htm#GUID-AB6FFBAD-DE20-4197-A885-AF81F3766FA2">PL/SQL Source Text Wrapping</a>&#34;</span>.)</p>
<p>Each <code class="codeph">WRAP</code> function takes as input a single <code class="codeph">CREATE</code> statement that creates a wrappable PL/SQL unit and returns an equivalent <code class="codeph">CREATE</code> statement in which the PL/SQL source text is wrapped. For more information about the <code class="codeph">WRAP</code> functions, see <a class="olink ARPLS66090" target="_blank" href="../ARPLS/d_ddl.htm#ARPLS66090"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<div class="infobox-note" id="GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__GUID-2903C4F7-7665-405B-8915-9F4D5816A3D0">
<p class="notep1">Caution:</p>
<p>If you pass the statement that <code class="codeph">DBMS_DDL</code>.<code class="codeph">WRAP</code> returns to the <code class="codeph">DBMS_SQL</code>.<code class="codeph">PARSE</code> procedure whose formal parameter <code class="codeph">statement</code> has data type <code class="codeph">VARCHAR2A</code>, then you must set the <code class="codeph">lfflg</code> parameter of <code class="codeph">DBMS_SQL</code>.<code class="codeph">PARSE</code> to <code class="codeph">FALSE</code>. Otherwise, <code class="codeph">DBMS_SQL</code>.<code class="codeph">PARSE</code> adds lines to the wrapped PL/SQL unit, corrupting it. (For the syntax of <code class="codeph">DBMS_SQL</code>.<code class="codeph">PARSE</code>, see <a class="olink ARPLS68277" target="_blank" href="../ARPLS/d_sql.htm#ARPLS68277"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.)</p>
</div>
<p>Each <code class="codeph">CREATE_WRAPPED</code> procedure does what its corresponding <code class="codeph">WRAP</code> function does and then runs the returned <code class="codeph">CREATE</code> statement, creating the specified PL/SQL unit. For more information about the <code class="codeph">CREATE_WRAPPED</code> procedures, see <a class="olink ARPLS66086" target="_blank" href="../ARPLS/d_ddl.htm#ARPLS66086"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<div class="infoboxnotealso" id="GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__GUID-C62A8BC6-3B44-44FE-A0AA-4DDBCFC1A098">
<p class="notep1">Tip:</p>
<p>When invoking a <code class="codeph">DBMS_DDL</code> subprogram, use the fully qualified package name, <code class="codeph">SYS.DBMS_DDL</code>, to avoid name conflict if someone creates a local package named <code class="codeph">DBMS_DDL</code> or defines the public synonym <code class="codeph">DBMS_DDL</code>.</p>
</div>
<div class="infobox-note" id="GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__GUID-22E126E5-1C5C-4F5E-A6E5-CE886F6F3A34">
<p class="notep1">Note:</p>
<p>The <code class="codeph">CREATE</code> statement that is input to a <code class="codeph">WRAP</code> function or <code class="codeph">CREATE_WRAPPED</code> procedure runs with the privileges of the user who invoked the subprogram.</p>
</div>
<p><a href="wrap.htm#GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__CEGJGBGE">Example A-4</a> dynamically creates a package specification (using the <code class="codeph">EXECUTE</code> <code class="codeph">IMMEDIATE</code> statement) and a wrapped package body, using a <code class="codeph">CREATE_WRAPPED</code> procedure.</p>
<p><a href="wrap.htm#GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__CEGICAJG">Example A-5</a> selects the text of the package that <a href="wrap.htm#GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__CEGJGBGE">Example A-4</a> created, <code class="codeph">emp_actions</code>, and then invokes the procedure <code class="codeph">emp_actions.raise_salary</code>. If the package specification were wrapped, then the information needed to invoke the procedure would be unreadable, like the PL/SQL source text of the package body.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__CEGJGBGE">
<p class="titleinexample">Example A-4 Creating Wrapped Package Body with CREATE_WRAPPED Procedure</p>
<pre dir="ltr">DECLARE
  package_text  VARCHAR2(32767); -- text for creating package spec and body
 
  FUNCTION generate_spec (pkgname VARCHAR2) RETURN VARCHAR2 AS
  BEGIN
    RETURN &#39;CREATE PACKAGE &#39; || pkgname || &#39; AUTHID CURRENT_USER AS
      PROCEDURE raise_salary (emp_id NUMBER, amount NUMBER);
      PROCEDURE fire_employee (emp_id NUMBER);
      END &#39; || pkgname || &#39;;&#39;;
  END generate_spec;
 
  FUNCTION generate_body (pkgname VARCHAR2) RETURN VARCHAR2 AS
  BEGIN
    RETURN &#39;CREATE PACKAGE BODY &#39; || pkgname || &#39; AS
      PROCEDURE raise_salary (emp_id NUMBER, amount NUMBER) IS
      BEGIN
        UPDATE employees
          SET salary = salary + amount WHERE employee_id = emp_id;
      END raise_salary;
      PROCEDURE fire_employee (emp_id NUMBER) IS
      BEGIN
        DELETE FROM employees WHERE employee_id = emp_id;
      END fire_employee;
    END &#39; || pkgname || &#39;;&#39;;
  END generate_body;
 
BEGIN
  package_text := generate_spec(&#39;emp_actions&#39;);  -- Generate package spec
  EXECUTE IMMEDIATE package_text;                -- Create package spec
  package_text := generate_body(&#39;emp_actions&#39;);  -- Generate package body
  <span class="bold">SYS.DBMS_DDL.CREATE_WRAPPED(package_text);     -- Create wrapped package body</span>
END;
/
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-16C5FD7F-622B-42F6-A75B-C328C0CE3ACE__CEGICAJG">
<p class="titleinexample">Example A-5 Viewing Package with Wrapped Body and Invoking Package Procedure</p>
<p>Select text of package:</p>
<pre dir="ltr">SELECT text FROM USER_SOURCE WHERE name = &#39;EMP_ACTIONS&#39;;
</pre>
<p>Result:</p>
<pre dir="ltr">TEXT
------------------------------------------------------------------------
 
PACKAGE emp_actions AUTHID CURRENT_USER AS
      PROCEDURE raise_salary (emp_id NUMBER, amount NUMBER);
      PROCEDURE fire_employee (emp_id NUMBER);
      END emp_actions;
PACKAGE BODY emp_actions wrapped
a000000
1f
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
b
180 113
1fOVodewm7j9dBOmBsiEQz0BKCgwg/BKoZ4VZy/pTBIYo8Uj1sjpbEz08Ck3HMjYq/Mf0XZn
u9D0Kd+i89g9ZO61I6vZYjw2AuBidnLESyR63LHZpFD/7lyDTfF1eDY5vmNwLTXrFaxGy243
0lHKAzmOlwwfBWylkZZNi2UnpmSIe6z/BU2nhbwfpqd224p69FwYVXmFX2H5IMsdZ2/vWsK9
cDMCD1KEqOnPpbU2yXdpW3GIbGD8JFIbKAfpJLkoLfVxoRPXQfj0h1k=
</pre>
<p>Invoke <code class="codeph">raised_salary</code> and show its effect:</p>
<pre dir="ltr">DECLARE
  s employees.salary%TYPE;
BEGIN
  SELECT salary INTO s FROM employees WHERE employee_id=130;
  DBMS_OUTPUT.PUT_LINE(&#39;Old salary: &#39; || s);
  <span class="bold">emp_actions.raise_salary(130, 100);</span>
  SELECT salary INTO s FROM employees WHERE employee_id=130;
  DBMS_OUTPUT.PUT_LINE(&#39;New salary: &#39; || s);
END;
/
</pre>
<p>Result:</p>
<pre dir="ltr">Old salary: 3557.4
New salary: 3657.4
 
PL/SQL procedure successfully completed.
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment869">
<tr>
<td class="cellalignment912">
<table class="cellalignment874">
<tr>
<td class="cellalignment873"><a href="drop_type_body.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment873"><a href="nameresolution.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment914">
<table class="cellalignment872">
<tr>
<td class="cellalignment873"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment873"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment873"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment873"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment873"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment873"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>