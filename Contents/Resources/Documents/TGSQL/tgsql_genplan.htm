<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-106779"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Generating%20and%20Displaying%20Execution%20Plans"></a><title>Generating and Displaying Execution Plans</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="execution plans, about"/>
<meta name="dcterms.created" content="2017-07-24T09:35:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Tuning Guide"/>
<meta name="dcterms.identifier" content="E49106-14"/>
<meta name="dcterms.isVersionOf" content="TGSQL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="tgsql_pt_plan.htm" title="Previous" type="text/html"/>
<link rel="Next" href="tgsql_interp.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49106-14.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-60E30B1C-342B-4D71-B154-C26623D6A3B1"></a> <span id="PAGE" style="display:none;">13/40</span> <!-- End Header -->
<a id="TGSQL271"></a>
<h1 id="TGSQL-GUID-60E30B1C-342B-4D71-B154-C26623D6A3B1" class="sect1"><span class="enumeration_chapter">6</span> Generating and Displaying Execution Plans</h1>
<div>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_genplan.htm#GUID-EB015E00-82E3-4BEA-A8A4-4F7225F548D6">Introduction to Execution Plans</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-FFAEEE3D-8D66-46F5-A405-5ABBCF3CF03D" title="A statement execution plan is the sequence of operations that the database performs to run the statement.Execution plans can and do change as the underlying optimizer inputs change. Schemas can differ for various reasons.Even if the schemas are the same, the optimizer can choose different execution plans when the costs are different.">About Plan Generation and Display</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-BE9E3808-81AF-4868-B8B2-656E3940B892">Generating Execution Plans</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-5E88AD7F-D5FF-4003-B721-9126352CE414">Displaying PLAN_TABLE Output</a></p>
</li>
</ul>
</div>
<a id="TGSQL272"></a>
<div class="props_rev_3"><a id="GUID-EB015E00-82E3-4BEA-A8A4-4F7225F548D6"></a>
<h2 id="TGSQL-GUID-EB015E00-82E3-4BEA-A8A4-4F7225F548D6" class="sect2">Introduction to Execution Plans</h2>
<div>
<p><a id="d24765e180" class="indexterm-anchor"></a><a id="d24765e184" class="indexterm-anchor"></a>The combination of the steps that Oracle Database uses to execute a statement is an <span class="bold"><a href="glossary.htm#GUID-800F2BE7-A383-4FF3-A9A6-FCE786AABA3B"><span class="xrefglossterm">execution plan</span></a></span>. Each step either retrieves rows of data physically from the database or prepares them for the user issuing the statement. An execution plan includes an <a id="d24765e194" class="indexterm-anchor"></a><span class="bold"><a href="glossary.htm#GUID-22DF198C-4310-4307-BF29-DCE765725BD4"><span class="xrefglossterm">access path</span></a></span> for each table that the statement accesses and an ordering of the tables (the <span class="bold"><a href="glossary.htm#GUID-4AF1D36D-F72C-4049-925A-BA2C169A0500"><span class="xrefglossterm">join order</span></a></span>) with the appropriate <span class="bold"><a href="glossary.htm#GUID-C4F1E78D-0262-4517-9DE6-8D835DCEC709"><span class="xrefglossterm">join method</span></a></span>.</p>
<div class="infoboxnotealso" id="GUID-EB015E00-82E3-4BEA-A8A4-4F7225F548D6__GUID-21529807-AAAE-46B6-BF21-4AB0827A147D">
<p class="notep1">See Also:</p>
<p><a href="tgsql_join.htm#GUID-BD96F1B4-76D4-43DF-98B6-D07F46838C4A" title="Oracle Database provides several optimizations for joining row sets.">Joins</a></p>
</div>
</div>
</div>
<a id="TGSQL274"></a>
<div class="props_rev_3"><a id="GUID-FFAEEE3D-8D66-46F5-A405-5ABBCF3CF03D"></a>
<h2 id="TGSQL-GUID-FFAEEE3D-8D66-46F5-A405-5ABBCF3CF03D" class="sect2">About Plan Generation and Display</h2>
<div>
<p>The <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> statement displays execution plans that the optimizer chooses for <code class="codeph">SELECT</code>, <code class="codeph">UPDATE</code>, <code class="codeph">INSERT</code>, and <code class="codeph">DELETE</code> statements. This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_genplan.htm#GUID-23BE135E-3C29-4A55-93E8-17163F6C4801" title="A statement execution plan is the sequence of operations that the database performs to run the statement.">About the Plan Explanation</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-30C0114A-084A-45C8-B6A7-C4D91B6A35AE" title="Execution plans can and do change as the underlying optimizer inputs change.">Why Execution Plans Change</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-ABEBB449-C1BD-4008-8ECB-8613B5278F80">Guideline for Minimizing Throw-Away</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-E348705A-6FA5-4869-BD13-2806DACBF4ED">Guidelines for Evaluating Execution Plans</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-E2463C7B-F71A-4F06-85D3-1AF3D4D71CE8">EXPLAIN PLAN Restrictions</a></p>
</li>
<li>
<p><a href="tgsql_genplan.htm#GUID-948FF9B7-F728-46C3-98B4-AC3EFD362E65">Guidelines for Creating PLAN_TABLE</a></p>
</li>
</ul>
</div>
<a id="TGSQL95114"></a>
<div class="props_rev_3"><a id="GUID-23BE135E-3C29-4A55-93E8-17163F6C4801"></a>
<h3 id="TGSQL-GUID-23BE135E-3C29-4A55-93E8-17163F6C4801" class="sect3">About the Plan Explanation</h3>
<div>
<p>A statement <span class="bold">execution plan</span> is the sequence of operations that the database performs to run the statement.</p>
<p>The <a href="glossary.htm#GUID-8C474809-DFD4-4EA6-90FE-A17882D07E58"><span class="xrefglossterm">row source tree</span></a> is the core of the execution plan. The tree shows the following information:</p>
<ul style="list-style-type: disc;">
<li>
<p>An ordering of the tables referenced by the statement</p>
</li>
<li>
<p>An access method for each table mentioned in the statement</p>
</li>
<li>
<p>A join method for tables affected by join operations in the statement</p>
</li>
<li>
<p>Data operations like filter, sort, or aggregation</p>
</li>
</ul>
<p>In addition to the row source tree, the plan table contains information about the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Optimization, such as the cost and cardinality of each operation</p>
</li>
<li>
<p>Partitioning, such as the set of accessed partitions</p>
</li>
<li>
<p>Parallel execution, such as the distribution method of join inputs</p>
</li>
</ul>
<p>You can use the <code class="codeph">EXPLAIN PLAN</code> results to determine whether the optimizer chose a particular execution plan, such as a nested loops join. The results also help you to understand the optimizer decisions, such as why the optimizer chose a nested loops join instead of a hash join.</p>
<div class="infoboxnotealso" id="GUID-23BE135E-3C29-4A55-93E8-17163F6C4801__GUID-4C0770EA-67D2-40EA-8725-5346A73BCF7A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="tgsql_sqlproc.htm#GUID-E052E274-586D-4D76-960F-B831140F7B94" title="The row source generator is software that receives the optimal execution plan from the optimizer and produces an iterative execution plan that is usable by the rest of the database.">SQL Row Source Generation</a>&#34;</span></p>
</li>
<li>
<p><a class="olink SQLRF01601" target="_blank" href="../SQLRF/statements_9010.htm#SQLRF01601"><span><cite>Oracle Database SQL Language Reference</cite></span></a> to learn about the <code class="codeph">EXPLAIN PLAN</code> statement</p>
</li>
</ul>
</div>
</div>
</div>
<a id="TGSQL94693"></a>
<div class="props_rev_3"><a id="GUID-30C0114A-084A-45C8-B6A7-C4D91B6A35AE"></a>
<h3 id="TGSQL-GUID-30C0114A-084A-45C8-B6A7-C4D91B6A35AE" class="sect3">Why Execution Plans Change</h3>
<div>
<p>Execution plans can and do change as the underlying optimizer inputs change.</p>
<p><code class="codeph">EXPLAIN PLAN</code> output shows how the database would run the SQL statement when the statement was explained. This plan can differ from the actual execution plan a SQL statement uses because of differences in the execution environment and explain plan environment.</p>
<div class="infobox-note" id="GUID-30C0114A-084A-45C8-B6A7-C4D91B6A35AE__GUID-6040AF75-3CD3-4B80-8F25-8A9BBE385F10">
<p class="notep1">Note:</p>
<p>To avoid possible SQL performance regression that may result from execution plan changes, consider using SQL plan management.</p>
</div>
<div class="infoboxnotealso" id="GUID-30C0114A-084A-45C8-B6A7-C4D91B6A35AE__GUID-877FCF73-4E3C-4FF0-A09D-CF1522BDF86B">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="tgsql_spm.htm#GUID-7024369A-F98D-48E4-921C-C899485C954F" title="You can manage SQL plan baselines using the DBMS_SPM package.">Managing SQL Plan Baselines</a>&#34;</span></p>
</div>
</div>
<a id="TGSQL94694"></a>
<div class="props_rev_3"><a id="GUID-94D7E339-9310-4482-A1BC-26F74D2BED89"></a>
<h4 id="TGSQL-GUID-94D7E339-9310-4482-A1BC-26F74D2BED89" class="sect4">Different Schemas</h4>
<div>
<p>Schemas can differ for various reasons.</p>
<p>Principal reasons include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The execution and explain plan occur on different databases.</p>
</li>
<li>
<p>The user explaining the statement is different from the user running the statement. Two users might be pointing to different objects in the same database, resulting in different execution plans.</p>
</li>
<li>
<p>Schema changes (often changes in indexes) between the two operations.</p>
</li>
</ul>
</div>
</div>
<a id="TGSQL94695"></a>
<div class="props_rev_3"><a id="GUID-4A42068F-93FA-4E04-9574-1E96423C8EBC"></a>
<h4 id="TGSQL-GUID-4A42068F-93FA-4E04-9574-1E96423C8EBC" class="sect4">Different Costs</h4>
<div>
<p>Even if the schemas are the same, the optimizer can choose different execution plans when the costs are different.</p>
<p>Some factors that affect the costs include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Data volume and statistics</p>
</li>
<li>
<p>Bind variable types and values</p>
</li>
<li>
<p>Initialization parameters set globally or at session level</p>
</li>
</ul>
</div>
</div>
</div>
<a id="TGSQL94697"></a><a id="TGSQL94696"></a>
<div class="props_rev_3"><a id="GUID-ABEBB449-C1BD-4008-8ECB-8613B5278F80"></a>
<h3 id="TGSQL-GUID-ABEBB449-C1BD-4008-8ECB-8613B5278F80" class="sect3">Guideline for Minimizing Throw-Away</h3>
<div>
<div class="section">
<p>Examining an explain plan enables you to look for throw-away in cases such as the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Full scans</p>
</li>
<li>
<p>Unselective range scans</p>
</li>
<li>
<p>Late predicate filters</p>
</li>
<li>
<p>Wrong join order</p>
</li>
<li>
<p>Late filter operations</p>
</li>
</ul>
<p>In the plan shown in <a href="tgsql_genplan.htm#GUID-ABEBB449-C1BD-4008-8ECB-8613B5278F80__CACBFFCA">Example 6-1</a>, the last step is a very <span class="bold"><a href="glossary.htm#GUID-EFB55786-83D3-4DFF-A534-052B0BF3BA62"><span class="xrefglossterm">unselective</span></a></span> range scan that is executed 76563 times, accesses 11432983 rows, throws away 99% of them, and retains 76563 rows. Why access 11432983 rows to realize that only 76563 rows are needed?</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-ABEBB449-C1BD-4008-8ECB-8613B5278F80__CACBFFCA">
<p class="titleinexample">Example 6-1 Looking for Throw-Away in an Explain Plan</p>
<pre dir="ltr">Rows      Execution Plan
--------  ----------------------------------------------------
      12  SORT AGGREGATE
       2   SORT GROUP BY
   76563    NESTED LOOPS
   76575     NESTED LOOPS
      19      TABLE ACCESS FULL CN_PAYRUNS_ALL
   76570      TABLE ACCESS BY INDEX ROWID CN_POSTING_DETAILS_ALL
   76570       INDEX RANGE SCAN (object id 178321)
   76563     TABLE ACCESS BY INDEX ROWID CN_PAYMENT_WORKSHEETS_ALL
11432983      INDEX RANGE SCAN (object id 186024)
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TGSQL94698"></a>
<div class="props_rev_3"><a id="GUID-E348705A-6FA5-4869-BD13-2806DACBF4ED"></a>
<h3 id="TGSQL-GUID-E348705A-6FA5-4869-BD13-2806DACBF4ED" class="sect3">Guidelines for Evaluating Execution Plans</h3>
<div>
<div class="section">
<p>The execution plan operation alone cannot differentiate between well-tuned statements and those that perform poorly. For example, an <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> output that shows that a statement uses an index does not necessarily mean that the statement runs efficiently. Sometimes indexes are extremely inefficient. In this case, a good practice is to examine the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The columns of the index being used</p>
</li>
<li>
<p>Their selectivity (fraction of table being accessed)</p>
</li>
</ul>
<p>It is best to use <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> to determine an access plan, and then later prove that it is the optimal plan through testing. When evaluating a plan, examine the statement&#39;s actual resource consumption.</p>
</div>
<!-- class="section" --></div>
<a id="TGSQL94699"></a>
<div class="props_rev_3"><a id="GUID-D890C710-BD3C-422B-A130-7092A35008EB"></a>
<h4 id="TGSQL-GUID-D890C710-BD3C-422B-A130-7092A35008EB" class="sect4">Guidelines for Evaluating Plans Using the V$SQL_PLAN Views</h4>
<div>
<div class="section">
<p><a id="d24765e1071" class="indexterm-anchor"></a>As an alternative to running the <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> command and displaying the plan, you can display the plan by querying the <code class="codeph">V$SQL_PLAN</code> view. <code class="codeph">V$SQL_PLAN</code> contains the execution plan for every statement stored in the shared SQL area. Its definition is similar to <code class="codeph">PLAN_TABLE</code>. See <span class="q">&#34;<a href="tgsql_interp.htm#GUID-D7331098-AEF5-49A2-98A1-3039E2A5900C" title="The PLAN_TABLE used by the EXPLAIN PLAN statement contains the columns listed in this topic.">PLAN_TABLE Columns</a>&#34;</span>.</p>
<p>The advantage of <code class="codeph">V$SQL_PLAN</code> over <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> is that you do not need to know the compilation environment that was used to execute a particular statement. For <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code>, you would need to set up an identical environment to get the same plan when executing the statement.</p>
<p><a id="d24765e1124" class="indexterm-anchor"></a>The <code class="codeph">V$SQL_PLAN_STATISTICS</code> view provides the actual execution statistics for every operation in the plan, such as the number of output rows and elapsed time. All statistics, except the number of output rows, are cumulative. For example, the statistics for a join operation also includes the statistics for its two inputs. The statistics in <code class="codeph">V$SQL_PLAN_STATISTICS</code> are available for cursors that have been compiled with the <code class="codeph">STATISTICS_LEVEL</code> initialization parameter set to <code class="codeph">ALL</code>.</p>
<p>The <a id="d24765e1143" class="indexterm-anchor"></a><code class="codeph">V$SQL_PLAN_STATISTICS_ALL</code> view enables side by side comparisons of the estimates that the optimizer provides for the number of rows and elapsed time. This view combines both <code class="codeph">V$SQL_PLAN</code> and <code class="codeph">V$SQL_PLAN_STATISTICS</code> information for every cursor.</p>
<div class="infoboxnotealso" id="GUID-D890C710-BD3C-422B-A130-7092A35008EB__GUID-F1B6BB66-6FBD-45E8-915A-0D914E1C923D">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_monit.htm#GUID-C941CE9D-97E1-42F8-91ED-4949B2B710BF" title="A database operation is a set of database tasks defined by end users or application code, for example, a batch job or Extraction, Transformation, and Loading (ETL) processing. You can define, monitor, and report on database operations.">Monitoring Database Operations</a> for information about the <code class="codeph">V$SQL_PLAN_MONITOR</code> view</p>
</li>
<li>
<p><a class="olink REFRN30250" target="_blank" href="../REFRN/GUID-87561B21-721C-42EB-8E3D-28251C9BC50C.htm#REFRN30250"><span class="italic">Oracle Database Reference</span></a> for more information about <code class="codeph">V$SQL_PLAN</code> views</p>
</li>
<li>
<p><a class="olink REFRN10214" target="_blank" href="../REFRN/GUID-16B23F95-8644-407A-A6C8-E85CADFA61FF.htm#REFRN10214"><span class="italic">Oracle Database Reference</span></a> for information about the <code class="codeph">STATISTICS_LEVEL</code> initialization parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL94700"></a>
<div class="props_rev_3"><a id="GUID-E2463C7B-F71A-4F06-85D3-1AF3D4D71CE8"></a>
<h3 id="TGSQL-GUID-E2463C7B-F71A-4F06-85D3-1AF3D4D71CE8" class="sect3">EXPLAIN PLAN Restrictions</h3>
<div>
<div class="section">
<p><a id="d24765e1273" class="indexterm-anchor"></a>Oracle Database does not support <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> for statements performing implicit type conversion of date bind variables. With bind variables in general, the <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> output might not represent the real execution plan.</p>
<p>From the text of a SQL statement, <code class="codeph">TKPROF</code> cannot determine the types of the bind variables. It assumes that the type is <code class="codeph">CHARACTER</code>, and gives an error message otherwise. You can avoid this limitation by putting appropriate type conversions in the SQL statement.</p>
<div class="infoboxnotealso" id="GUID-E2463C7B-F71A-4F06-85D3-1AF3D4D71CE8__GUID-4B4164F5-E704-4BB2-84A2-A846D3A9FE43">
<p class="notep1">See Also:</p>
<p><a href="tgsql_trace.htm#GUID-440D3AD4-B302-408E-8627-FE8032DD09F9" title="This chapter explains what end-to-end application tracing is, and how to generate and read trace files.">Performing Application Tracing</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94701"></a>
<div class="props_rev_3"><a id="GUID-948FF9B7-F728-46C3-98B4-AC3EFD362E65"></a>
<h3 id="TGSQL-GUID-948FF9B7-F728-46C3-98B4-AC3EFD362E65" class="sect3">Guidelines for Creating PLAN_TABLE</h3>
<div>
<div class="section">
<p><a id="d24765e1385" class="indexterm-anchor"></a><a id="d24765e1389" class="indexterm-anchor"></a>The <code class="codeph">PLAN_TABLE</code> is automatically created as a public synonym to a global temporary table. This temporary table holds the output of <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> statements for all users. <code class="codeph">PLAN_TABLE</code> is the default sample output table into which the <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> statement inserts rows describing execution plans. See <span class="q">&#34;<a href="tgsql_interp.htm#GUID-D7331098-AEF5-49A2-98A1-3039E2A5900C" title="The PLAN_TABLE used by the EXPLAIN PLAN statement contains the columns listed in this topic.">PLAN_TABLE Columns</a>&#34;</span> for a description of the columns in the table.</p>
<p>While a <code class="codeph">PLAN_TABLE</code> table is automatically set up for each user, you can use the SQL script <code class="codeph">catplan.sql</code> to manually create the global temporary table and the <code class="codeph">PLAN_TABLE</code> synonym. The name and location of this script depends on your operating system. On UNIX and Linux, the script is located in the <code class="codeph">$ORACLE_HOME/rdbms/admin</code> directory.</p>
<p><a id="d24765e1442" class="indexterm-anchor"></a>For example, start a SQL*Plus session, connect with <code class="codeph">SYSDBA</code> privileges, and run the script as follows:</p>
<pre dir="ltr">@$ORACLE_HOME/rdbms/admin/catplan.sql
</pre>
<p>Oracle recommends that you drop and rebuild your local <code class="codeph">PLAN_TABLE</code> table after upgrading the version of the database because the columns might change. This can cause scripts to fail or cause <code class="codeph">TKPROF</code> to fail, if you are specifying the table.</p>
<p>If you do not want to use the name <code class="codeph">PLAN_TABLE</code>, create a new synonym after running the <code class="codeph">catplan.sql</code> script. For example:</p>
<pre dir="ltr">CREATE OR REPLACE PUBLIC SYNONYM my_plan_table for plan_table$
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL273"></a>
<div class="props_rev_3"><a id="GUID-BE9E3808-81AF-4868-B8B2-656E3940B892"></a>
<h2 id="TGSQL-GUID-BE9E3808-81AF-4868-B8B2-656E3940B892" class="sect2">Generating Execution Plans</h2>
<div>
<p>The <code class="codeph">EXPLAIN PLAN</code> statement enables you to<a id="d24765e1552" class="indexterm-anchor"></a><a id="d24765e1556" class="indexterm-anchor"></a><a id="d24765e1560" class="indexterm-anchor"></a> examine the execution plan that the optimizer chose for a SQL statement. When the statement is issued, the optimizer chooses an execution plan and then inserts data describing the plan into a database table. Issue the <code class="codeph">EXPLAIN PLAN</code> statement and then query the output table.</p>
</div>
<div class="props_rev_3"><a id="GUID-E4ED3145-8ABD-4F40-B044-9AEFBD89409C"></a>
<h3 id="TGSQL-GUID-E4ED3145-8ABD-4F40-B044-9AEFBD89409C" class="sect3">Executing EXPLAIN PLAN for a Single Statement</h3>
<div>
<div class="section">
<p><a id="d24765e1645" class="indexterm-anchor"></a>The basics of using the <code class="codeph">EXPLAIN PLAN</code> statement are as follows:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the SQL script <code class="codeph">CATPLAN</code>.<code class="codeph">SQL</code> to create a sample output table called <code class="codeph">PLAN_TABLE</code> in your schema. See <span class="q">&#34;<a href="tgsql_genplan.htm#GUID-948FF9B7-F728-46C3-98B4-AC3EFD362E65">Guidelines for Creating PLAN_TABLE</a>&#34;</span>.</p>
</li>
<li>
<p>Include the <code class="codeph">EXPLAIN PLAN</code> <code class="codeph">FOR</code> clause before the SQL statement.</p>
</li>
<li>
<p>After issuing the <code class="codeph">EXPLAIN PLAN</code> statement, use a script or package provided by Oracle Database to display the most recent plan table output. See <span class="q">&#34;<a href="tgsql_genplan.htm#GUID-5E88AD7F-D5FF-4003-B721-9126352CE414">Displaying PLAN_TABLE Output</a>&#34;</span>.</p>
</li>
<li>
<p>The execution order in <code class="codeph">EXPLAIN PLAN</code> output begins with the line that is the furthest indented to the right. The next step is the parent of that line. If two lines are indented equally, then the top line is normally executed first.</p>
<div class="infobox-note" id="GUID-E4ED3145-8ABD-4F40-B044-9AEFBD89409C__GUID-66B035BC-615D-4E4A-802F-5CB013E2503A">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> output tables in this chapter were displayed with the <code class="codeph">utlxpls.sql</code> script.</p>
</li>
<li>
<p>The steps in the <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> output in this chapter may be different on your system. The optimizer may choose different execution plans, depending on database configurations.</p>
</li>
</ul>
</div>
</li>
</ul>
<p>To explain a SQL statement, use the <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code> <code class="codeph">FOR</code> clause immediately before the statement. For example:</p>
<pre dir="ltr">EXPLAIN PLAN FOR
  SELECT last_name FROM employees;
</pre>
<p>This explains the plan into the <code class="codeph">PLAN_TABLE</code> table. You can then select the execution plan from <code class="codeph">PLAN_TABLE</code>. See <span class="q">&#34;<a href="tgsql_genplan.htm#GUID-5E88AD7F-D5FF-4003-B721-9126352CE414">Displaying PLAN_TABLE Output</a>&#34;</span>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94703"></a><a id="TGSQL94702"></a>
<div class="props_rev_3"><a id="GUID-102A6D99-3193-4628-BC35-74501F46D13A"></a>
<h3 id="TGSQL-GUID-102A6D99-3193-4628-BC35-74501F46D13A" class="sect3">Executing EXPLAIN PLAN Using a Statement ID</h3>
<div>
<div class="section">
<p>With multiple statements, you can specify a statement identifier and use that to identify your specific execution plan. Before using <code class="codeph">SET</code> <code class="codeph">STATEMENT</code> <code class="codeph">ID</code>, remove any existing rows for that statement ID.</p>
<p>In <a href="tgsql_genplan.htm#GUID-102A6D99-3193-4628-BC35-74501F46D13A__CACCJJCJ">Example 6-2</a>, <code class="codeph">st1</code> is specified as the statement identifier:</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-102A6D99-3193-4628-BC35-74501F46D13A__CACCJJCJ">
<p class="titleinexample">Example 6-2 Using EXPLAIN PLAN with the STATEMENT ID Clause</p>
<pre dir="ltr">EXPLAIN PLAN
  SET STATEMENT_ID = &#39;st1&#39; FOR
  SELECT last_name FROM employees;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TGSQL94705"></a><a id="TGSQL94704"></a>
<div class="props_rev_3"><a id="GUID-A377E279-4983-4750-917D-17C48ED3D1DB"></a>
<h3 id="TGSQL-GUID-A377E279-4983-4750-917D-17C48ED3D1DB" class="sect3">Directing EXPLAIN PLAN Output to a Nondefault Table</h3>
<div>
<div class="section">
<p>You can specify the <code class="codeph">INTO</code> clause to specify a different table, as in the following statement:</p>
<pre dir="ltr">EXPLAIN PLAN
  INTO my_plan_table FOR
  SELECT last_name FROM employees;
</pre>
<p>You can specify a statement ID when using the <code class="codeph">INTO</code> clause, as in the following statement:</p>
<pre dir="ltr">EXPLAIN PLAN
   SET STATEMENT_ID = &#39;st1&#39;
   INTO my_plan_table FOR
   SELECT last_name FROM employees;
</pre>
<div class="infoboxnotealso" id="GUID-A377E279-4983-4750-917D-17C48ED3D1DB__GUID-EE83465E-9679-4EC0-A1E0-AB640F548B09">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF01601" target="_blank" href="../SQLRF/statements_9010.htm#SQLRF01601"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for a complete description of <code class="codeph">EXPLAIN PLAN</code> syntax.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL94706"></a>
<div class="props_rev_3"><a id="GUID-5E88AD7F-D5FF-4003-B721-9126352CE414"></a>
<h2 id="TGSQL-GUID-5E88AD7F-D5FF-4003-B721-9126352CE414" class="sect2">Displaying PLAN_TABLE Output</h2>
<div>
<div class="section">
<p><a id="d24765e2033" class="indexterm-anchor"></a>After you have explained the plan, use the following SQL scripts or PL/SQL package provided by Oracle Database to display the most recent plan table output:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">UTLXPLS</code>.<code class="codeph">SQL</code></p>
<p>This script displays the plan table output for serial processing. <a href="tgsql_genplan.htm#GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093__CACIDEEA">Example 6-4</a> is an example of the plan table output when using the <code class="codeph">UTLXPLS</code>.<code class="codeph">SQL</code> script.</p>
</li>
<li>
<p><code class="codeph">UTLXPLP</code>.<code class="codeph">SQL</code></p>
<p>This script displays the plan table output including parallel execution columns.</p>
</li>
<li>
<p><code class="codeph">DBMS_XPLAN.DISPLAY</code> table function</p>
<p>This function accepts options for displaying the plan table output. You can specify:</p>
<ul style="list-style-type: disc;">
<li>
<p>A plan table name if you are using a table different than <code class="codeph">PLAN_TABLE</code></p>
</li>
<li>
<p>A statement ID if you have set a statement ID with the <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code></p>
</li>
<li>
<p>A format option that determines the level of detail: <code class="codeph">BASIC</code>, <code class="codeph">SERIAL</code>, <code class="codeph">TYPICAL</code>, and <code class="codeph">ALL</code></p>
</li>
</ul>
<p>Examples of using <code class="codeph">DBMS_XPLAN</code> to display <code class="codeph">PLAN_TABLE</code> output are:</p>
<pre dir="ltr">SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY());

SELECT PLAN_TABLE_OUTPUT 
  FROM TABLE(DBMS_XPLAN.DISPLAY(&#39;MY_PLAN_TABLE&#39;, &#39;st1&#39;,&#39;TYPICAL&#39;));
</pre>
<div class="infoboxnotealso" id="GUID-5E88AD7F-D5FF-4003-B721-9126352CE414__GUID-2FD03CE5-2A08-49CF-A2A1-F0726D52A496">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS378" target="_blank" href="../ARPLS/d_xplan.htm#ARPLS378"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code class="codeph">DBMS_XPLAN</code> package</p>
</div>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="TGSQL94707"></a><a id="TGSQL94708"></a><a id="TGSQL275"></a>
<div class="props_rev_3"><a id="GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093"></a>
<h3 id="TGSQL-GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093" class="sect3">Displaying an Execution Plan: Example</h3>
<div>
<div class="section">
<p><a href="tgsql_genplan.htm#GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093__CACIGEFB">Example 6-3</a> uses <code class="codeph">EXPLAIN PLAN</code> to examine a SQL statement that selects the <code class="codeph">employee_id</code>, <code class="codeph">job_title</code>, <code class="codeph">salary</code>, and <code class="codeph">department_name</code> for the employees whose IDs are less than 103.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093__CACIGEFB">
<p class="titleinexample">Example 6-3 Using EXPLAIN PLAN</p>
<pre dir="ltr">EXPLAIN PLAN FOR
  SELECT e.employee_id, j.job_title, e.salary, d.department_name
  FROM   employees e, jobs j, departments d
  WHERE  e.employee_id &lt; 103
  AND    e.job_id = j.job_id 
  AND    e.department_id = d.department_id;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093__CACIDEEA">
<p class="titleinexample">Example 6-4 EXPLAIN PLAN Output</p>
<p>The following output table shows the execution plan that the optimizer chose to execute the SQL statement in <a href="tgsql_genplan.htm#GUID-D89C4CB8-6081-4DFF-98AC-25F3DC905093__CACIGEFB">Example 6-3</a>:</p>
<pre dir="ltr">-----------------------------------------------------------------------------------
| Id  | Operation                     |  Name        | Rows  | Bytes | Cost (%CPU)|
-----------------------------------------------------------------------------------
|   0 | SELECT STATEMENT              |              |     3 |   189 |    10  (10)|
|   1 |  NESTED LOOPS                 |              |     3 |   189 |    10  (10)|
|   2 |   NESTED LOOPS                |              |     3 |   141 |     7  (15)|
|*  3 |    TABLE ACCESS FULL          | EMPLOYEES    |     3 |    60 |     4  (25)|
|   4 |    TABLE ACCESS BY INDEX ROWID| JOBS         |    19 |   513 |     2  (50)|
|*  5 |     INDEX UNIQUE SCAN         | JOB_ID_PK    |     1 |       |            |
|   6 |   TABLE ACCESS BY INDEX ROWID | DEPARTMENTS  |    27 |   432 |     2  (50)|
|*  7 |    INDEX UNIQUE SCAN          | DEPT_ID_PK   |     1 |       |            |
-----------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------
   3 - filter(&#34;E&#34;.&#34;EMPLOYEE_ID&#34;&lt;103)
   5 - access(&#34;E&#34;.&#34;JOB_ID&#34;=&#34;J&#34;.&#34;JOB_ID&#34;)
   7 - access(&#34;E&#34;.&#34;DEPARTMENT_ID&#34;=&#34;D&#34;.&#34;DEPARTMENT_ID&#34;

------------------------------------------------------------------------------------------------
| Id | Operation                       | Name          | Rows  | Bytes | Cost (%CPU)| Time     |
------------------------------------------------------------------------------------------------
|  0 | SELECT STATEMENT                |               |     3 |   189 |     8  (13)| 00:00:01 |
|  1 |  NESTED LOOPS                   |               |       |       |            |          |
|  2 |   NESTED LOOPS                  |               |     3 |   189 |     8  (13)| 00:00:01 |
|  3 |    MERGE JOIN                   |               |     3 |   141 |     5  (20)| 00:00:01 |
|  4 |     TABLE ACCESS BY INDEX ROWID | JOBS          |    19 |   513 |     2   (0)| 00:00:01 |
|  5 |      INDEX FULL SCAN            | JOB_ID_PK     |    19 |       |     1   (0)| 00:00:01 |
|* 6 |     SORT JOIN                   |               |     3 |    60 |     3  (34)| 00:00:01 |
|  7 |      TABLE ACCESS BY INDEX ROWID| EMPLOYEES     |     3 |    60 |     2   (0)| 00:00:01 |
|* 8 |       INDEX RANGE SCAN          | EMP_EMP_ID_PK |     3 |       |     1   (0)| 00:00:01 |
|* 9 |    INDEX UNIQUE SCAN            | DEPT_ID_PK    |     1 |       |     0   (0)| 00:00:01 |
| 10 |   TABLE ACCESS BY INDEX ROWID   | DEPARTMENTS   |     1 |    16 |     1   (0)| 00:00:01 |
------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   6 - access(&#34;E&#34;.&#34;JOB_ID&#34;=&#34;J&#34;.&#34;JOB_ID&#34;)
       filter(&#34;E&#34;.&#34;JOB_ID&#34;=&#34;J&#34;.&#34;JOB_ID&#34;)
   8 - access(&#34;E&#34;.&#34;EMPLOYEE_ID&#34;&lt;103)
   9 - access(&#34;E&#34;.&#34;DEPARTMENT_ID&#34;=&#34;D&#34;.&#34;DEPARTMENT_ID&#34;)
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TGSQL94709"></a>
<div class="props_rev_3"><a id="GUID-51E46694-0C6B-4FDA-8C2F-0D7D7536D5F8"></a>
<h3 id="TGSQL-GUID-51E46694-0C6B-4FDA-8C2F-0D7D7536D5F8" class="sect3">Customizing PLAN_TABLE Output</h3>
<div>
<div class="section">
<p>If you have specified a statement identifier, then you can write your own script to query the <code class="codeph">PLAN_TABLE</code>. For example:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Start with ID = 0 and given <code class="codeph">STATEMENT_ID</code>.</p>
</li>
<li>
<p>Use the <code class="codeph">CONNECT</code> <code class="codeph">BY</code> clause to walk the tree from parent to child, the join keys being <code class="codeph">STATEMENT_ID</code> = <code class="codeph">PRIOR</code> <code class="codeph">STATEMENT_ID</code> and <code class="codeph">PARENT_ID</code> = <code class="codeph">PRIOR</code> <code class="codeph">ID</code>.</p>
</li>
<li>
<p>Use the pseudo-column <code class="codeph">LEVEL</code> (associated with <code class="codeph">CONNECT</code> <code class="codeph">BY</code>) to indent the children.</p>
<pre dir="ltr">SELECT cardinality &#34;Rows&#34;,
   lpad(&#39; &#39;,level-1)||operation||&#39; &#39;||options||&#39; &#39;||object_name &#34;Plan&#34;
  FROM PLAN_TABLE
CONNECT BY prior id = parent_id
        AND prior statement_id = statement_id
  START WITH id = 0
        AND statement_id = &#39;st1&#39;
  ORDER BY id;

   Rows Plan
------- ----------------------------------------
        SELECT STATEMENT
         TABLE ACCESS FULL EMPLOYEES
</pre>
<p>The <code class="codeph">NULL</code> in the <code class="codeph">Rows</code> column indicates that the optimizer does not have any statistics on the table. Analyzing the table shows the following:</p>
<pre dir="ltr">   Rows Plan
------- ----------------------------------------
  16957 SELECT STATEMENT
  16957  TABLE ACCESS FULL EMPLOYEES
</pre>
<p>You can also select the <code class="codeph">COST</code>. This is useful for comparing execution plans or for understanding why the optimizer chooses one execution plan over another.</p>
<div class="infobox-note" id="GUID-51E46694-0C6B-4FDA-8C2F-0D7D7536D5F8__GUID-42DE2A10-328A-49B3-9B35-B8DA225B6B7C">
<p class="notep1">Note:</p>
<p>These simplified examples are not valid for recursive&nbsp;SQL.</p>
</div>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4801">
<tr>
<td class="cellalignment4834">
<table class="cellalignment4806">
<tr>
<td class="cellalignment4805"><a href="tgsql_pt_plan.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4805"><a href="tgsql_interp.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4836">
<table class="cellalignment4804">
<tr>
<td class="cellalignment4805"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4805"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4805"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4805"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4805"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4805"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>