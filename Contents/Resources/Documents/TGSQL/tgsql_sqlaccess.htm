<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-106802"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Optimizing%20Access%20Paths%20with%20SQL%20Access%20Advisor"></a><title>Optimizing Access Paths with SQL Access Advisor</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="pluggable databases, SQL Tuning Advisor, pluggable databases and, SQL Access Advisor, constants"/>
<meta name="dcterms.created" content="2017-07-24T09:35:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Tuning Guide"/>
<meta name="dcterms.identifier" content="E49106-14"/>
<meta name="dcterms.isVersionOf" content="TGSQL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="tgsql_sqltune.htm" title="Previous" type="text/html"/>
<link rel="Next" href="tgsql_pt_spm.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49106-14.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-561EC9B4-0930-4915-B5E1-17F2C5ACD261"></a> <span id="PAGE" style="display:none;">33/40</span> <!-- End Header -->
<a id="TGSQL591"></a>
<h1 id="TGSQL-GUID-561EC9B4-0930-4915-B5E1-17F2C5ACD261" class="sect1"><span class="enumeration_chapter">21</span> Optimizing Access Paths with SQL Access Advisor</h1>
<div>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-10DCBE78-9330-4713-AD79-5C7E73EACD33" title="SQL Access Advisor accepts input from several sources, including SQL tuning sets, and then issues recommendations.">About SQL Access Advisor</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-816A7103-440D-4AB8-8ED5-BD4DBDEBB283" title="Basic tasks include creating an STS, loading it, creating a SQL Access Advisor task, and then executing the task.">Using SQL Access Advisor: Basic Tasks</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-5FD677D7-1A29-4034-A63E-A78383C61456">Performing a SQL Access Advisor Quick Tune</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-65BBE16E-42BD-4CDD-B8E8-A2E1C72190CE">Using SQL Access Advisor: Advanced Tasks</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-0A74A15A-E1D1-40EA-A7F8-2EF775C8D426">SQL Access Advisor Examples</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-1C7083BD-2AFC-43EA-B940-13D2F77935DF">SQL Access Advisor Reference</a></p>
</li>
</ul>
</div>
<a id="TGSQL592"></a>
<div class="props_rev_3"><a id="GUID-10DCBE78-9330-4713-AD79-5C7E73EACD33"></a>
<h2 id="TGSQL-GUID-10DCBE78-9330-4713-AD79-5C7E73EACD33" class="sect2">About SQL Access Advisor</h2>
<div>
<p>SQL Access Advisor accepts input from several sources, including SQL tuning sets, and then issues recommendations.</p>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-A2BEC590-63CC-4F3D-ADA8-DB22CEC85141">Purpose of SQL Access Advisor</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-8D841251-23FF-487F-A50A-EB42103A0063" title="Automatic Tuning Optimizer is the central tool used by SQL Access Advisor.">SQL Access Advisor Architecture</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-5DC21B66-A3DF-4C10-ADC2-F3DC824A58B6" title="The SQL Access Advisor: Initial Options page in Cloud Control is the starting page for a wizard that guides you through the process of obtaining recommendations.On the command line, you can use the DBMS_ADVISOR package to manage SQL Tuning Advisor.">User Interfaces for SQL Access Advisor</a></p>
</li>
</ul>
<div class="infobox-note" id="GUID-10DCBE78-9330-4713-AD79-5C7E73EACD33__GUID-6A6D202F-F202-4C76-9BE3-FC79A961E95E">
<p class="notep1">Note:</p>
<p>Data visibility and privilege requirements may differ when using SQL Access Advisor with pluggable databases.</p>
</div>
<div class="infoboxnotealso" id="GUID-10DCBE78-9330-4713-AD79-5C7E73EACD33__GUID-FF8B4CD4-E26E-4DD3-861B-5A0E3B913032">
<p class="notep1">See Also:</p>
<p><a class="olink ADMIN13885" target="_blank" href="../ADMIN/cdb_admin.htm#ADMIN13885"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> for a table that summarizes how manageability features work in a container database (CDB)</p>
</div>
</div>
<a id="TGSQL94751"></a>
<div class="props_rev_3"><a id="GUID-A2BEC590-63CC-4F3D-ADA8-DB22CEC85141"></a>
<h3 id="TGSQL-GUID-A2BEC590-63CC-4F3D-ADA8-DB22CEC85141" class="sect3">Purpose of SQL Access Advisor</h3>
<div>
<p>SQL Access Advisor helps you achieve your performance goals by recommending the proper set of materialized views, materialized view logs, partitions, and indexes for a given workload. <a id="d113098e315" class="indexterm-anchor"></a>Materialized views, partitions, and indexes are essential when tuning a database to achieve optimum performance for complex, data-intensive queries. <a id="d113098e318" class="indexterm-anchor"></a><a id="d113098e320" class="indexterm-anchor"></a><a id="d113098e322" class="indexterm-anchor"></a></p>
<p>SQL Access Advisor takes an actual workload as input, or derives a hypothetical workload from a schema. The advisor then recommends access structures for faster execution path. The advisor provides the following advantages:</p>
<ul style="list-style-type: disc;">
<li>
<p>Does not require you to have expert knowledge</p>
</li>
<li>
<p>Makes decisions based on rules that reside in the optimizer</p>
</li>
<li>
<p>Covers all aspects of SQL access in a single advisor</p>
</li>
<li>
<p>Provides simple, user-friendly GUI wizards in Cloud Control</p>
</li>
<li>
<p>Generates scripts for implementation of recommendations</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-A2BEC590-63CC-4F3D-ADA8-DB22CEC85141__GUID-4C7A1EF6-575F-4C1F-B58C-A7141D2CCE36">
<p class="notep1">See Also:</p>
<p><a class="olink TDPPT170" target="_blank" href="../TDPPT/tdppt_sqlopt.htm#TDPPT170"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> to learn how to use SQL Access Advisor with Cloud Control</p>
</div>
</div>
</div>
<a id="TGSQL94753"></a><a id="TGSQL94752"></a>
<div class="props_rev_3"><a id="GUID-8D841251-23FF-487F-A50A-EB42103A0063"></a>
<h3 id="TGSQL-GUID-8D841251-23FF-487F-A50A-EB42103A0063" class="sect3">SQL Access Advisor Architecture</h3>
<div>
<p>Automatic Tuning Optimizer is the central tool used by SQL Access Advisor.</p>
<p>The advisor can receive SQL statements as input from the sources shown in <a href="tgsql_sqlaccess.htm#GUID-8D841251-23FF-487F-A50A-EB42103A0063__CHDIBFIJ">Figure 21-1</a>, analyze these statements using the optimizer, and then make recommendations.</p>
<p><a href="tgsql_sqlaccess.htm#GUID-8D841251-23FF-487F-A50A-EB42103A0063__CHDIBFIJ">Figure 21-1</a> shows the basic architecture of SQL Access Advisor.</p>
<div class="figure" id="GUID-8D841251-23FF-487F-A50A-EB42103A0063__CHDIBFIJ">
<p class="titleinfigure">Figure 21-1 SQL Access Advisor Architecture</p>
<img width="660" height="428" src="img/GUID-BCF9DC90-8335-4C68-89BB-2C31BC70E10E-default.png" alt="Description of Figure 21-1 follows" title="Description of Figure 21-1 follows"/><br/>
<a href="img_text/GUID-BCF9DC90-8335-4C68-89BB-2C31BC70E10E-print.htm">Description of &#34;Figure 21-1 SQL Access Advisor Architecture&#34;</a></div>
<!-- class="figure" -->
<div class="infoboxnotealso" id="GUID-8D841251-23FF-487F-A50A-EB42103A0063__GUID-BB040DC8-0EB4-45CF-97C8-B0A81296A5AB">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="tgsql_optcncpt.htm#GUID-7D015E05-A08D-478B-81AC-AB04ECEED8FA" title="The optimizer performs different operations depending on how it is invoked.">About Automatic Tuning Optimizer</a>&#34;</span></p>
</div>
</div>
<a id="TGSQL94754"></a>
<div class="props_rev_3"><a id="GUID-F92D0170-5FB2-432D-B2F3-B2AFCAAC0408"></a>
<h4 id="TGSQL-GUID-F92D0170-5FB2-432D-B2F3-B2AFCAAC0408" class="sect4">Input to SQL Access Advisor</h4>
<div>
<p>SQL Access Advisor requires a workload, which consists of one or more SQL statements, plus statistics and attributes that fully describe each statement. A full workload contains all SQL statements from a target business application. A partial workload contains a subset of SQL statements.</p>
<p>As shown in <a href="tgsql_sqlaccess.htm#GUID-8D841251-23FF-487F-A50A-EB42103A0063__CHDIBFIJ">Figure 21-1</a>, <a id="d113098e534" class="indexterm-anchor"></a>SQL Access Advisor input can come from the following sources:</p>
<ul style="list-style-type: disc;">
<li>
<p>Shared SQL area</p>
<p>The database uses the <a href="glossary.htm#GUID-577D0DD3-FB98-4B1B-BCFB-95313BB35C01"><span class="xrefglossterm">shared SQL area</span></a> to analyze recent SQL statements that are currently in <code class="codeph">V$SQL</code>.</p>
</li>
<li>
<p>SQL tuning set</p>
<p>A <a href="glossary.htm#GUID-52FB0AE5-7346-44E5-BE92-3C09385B1DDC"><span class="xrefglossterm">SQL tuning set (STS)</span></a> is a database object that stores SQL statements along with their execution context. When a set of SQL statements serve as input, the database must first construct and use an STS.</p>
<div class="infobox-note" id="GUID-F92D0170-5FB2-432D-B2F3-B2AFCAAC0408__GUID-C0FDC85F-4AB6-4A97-A7FF-25B3F103FE2D">
<p class="notep1">Note:</p>
<p>For best results, provide a workload as a SQL tuning set. The <code class="codeph">DBMS_SQLTUNE</code> package provides helper functions that can create SQL tuning sets from common workload sources, such as the SQL cache, a user-defined workload stored in a table, and a hypothetical workload.</p>
</div>
</li>
<li>
<p>Hypothetical workload</p>
<p>You can create a hypothetical workload from a schema by analyzing dimensions and constraints. This option is useful when you are initially designing your application.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-F92D0170-5FB2-432D-B2F3-B2AFCAAC0408__GUID-E12DABE0-BA0F-4BE1-9BE8-FA8C940BE422">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink CNCPT1228" target="_blank" href="../CNCPT/memory.htm#CNCPT1228"><span class="italic">Oracle Database Concepts</span></a> to learn about the shared SQL area</p>
</li>
<li>
<p><span class="q">&#34;<a href="tgsql_sts.htm#GUID-DD136837-9921-4C73-ABB8-9F1DC22542C5" title="A SQL tuning set (STS) is a database object that you can use as input to tuning tools.">About SQL Tuning Sets</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
</div>
<a id="TGSQL94755"></a>
<div class="props_rev_3"><a id="GUID-028D1096-3280-4065-BD00-D695B75B4D51"></a>
<h4 id="TGSQL-GUID-028D1096-3280-4065-BD00-D695B75B4D51" class="sect4">Filter Options for SQL Access Advisor</h4>
<div>
<p>As shown in <a href="tgsql_sqlaccess.htm#GUID-8D841251-23FF-487F-A50A-EB42103A0063__CHDIBFIJ">Figure 21-1</a>, you can apply a filter to a workload to restrict what is analyzed. For example, specify that the advisor look at only the 30 most resource-intensive statements in the workload, based on optimizer cost. This restriction can generate different sets of recommendations based on different workload scenarios.</p>
<p>SQL Access Advisor parameters control the recommendation process and customization of the workload. These parameters control various aspects of the process, such as the type of recommendation required and the naming conventions for what it recommends.</p>
<p>To set these parameters, use the <code class="codeph">DBMS_ADVISOR.SET_TASK_PARAMETER</code> procedure. Parameters are persistent in that they remain set for the life span of the task. When a parameter value is set using <code class="codeph">DBMS_ADVISOR.SET_TASK_PARAMETER</code>, the value does not change until you make another call to this procedure.</p>
<div class="infoboxnotealso" id="GUID-028D1096-3280-4065-BD00-D695B75B4D51__GUID-D4AFF7AA-F6AA-48CE-AAF0-44E5A42466C3">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS65151" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65151"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn about the <code class="codeph">DBMS_ADVISOR.SET_TASK_PARAMETER</code> procedure</p>
</div>
</div>
</div>
<a id="TGSQL94756"></a>
<div class="props_rev_3"><a id="GUID-BBEB9848-36CF-4416-9330-2AFD5879B565"></a>
<h4 id="TGSQL-GUID-BBEB9848-36CF-4416-9330-2AFD5879B565" class="sect4">SQL Access Advisor Recommendations</h4>
<div>
<p>A task recommendation can range from a simple to a complex solution. The advisor can recommend that you create database objects such as the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Indexes</p>
<p>SQL Access Advisor index recommendations include bitmap, function-based, and B-tree indexes. A bitmap index offers a reduced response time for many types of ad hoc queries and reduced storage requirements compared to other indexing techniques. B-tree indexes are most commonly used in a data warehouse to index unique or near-unique keys. SQL Access Advisor materialized view recommendations include fast refreshable and full refreshable MVs, for either general rewrite or exact text match rewrite.</p>
</li>
<li>
<p>Materialized views</p>
<p>SQL Access Advisor, using the <code class="codeph">TUNE_MVIEW</code> procedure, also recommends how to optimize materialized views so that they can be fast refreshable and take advantage of general query rewrite.</p>
</li>
<li>
<p>Materialized view logs</p>
<p>A materialized view log is a table at the materialized view&#39;s master site or master materialized view site that records all DML changes to the master table or master materialized view. A fast refresh of a materialized view is possible only if the materialized view&#39;s master has a materialized view log.</p>
</li>
<li>
<p>Partitions</p>
<p>SQL Access Advisor can recommend partitioning on an existing unpartitioned base table to improve performance. Furthermore, it may recommend new indexes and materialized views that are themselves partitioned.</p>
<p>While creating new partitioned indexes and materialized view is no different from the unpartitioned case, partition existing base tables with care. This is especially true when indexes, views, constraints, or triggers are defined on the table.</p>
</li>
</ul>
<p>To make recommendations, SQL Access Advisor relies on structural statistics about table and index cardinalities of dimension level columns, <code class="codeph">JOIN</code> <code class="codeph">KEY</code> columns, and fact table key columns. You can gather exact or estimated statistics with the&nbsp;<code class="codeph">DBMS_STATS</code> package (see <span class="q">&#34;<a href="tgsql_stats.htm#GUID-83F1A4F5-A316-4EAD-9AE6-CB95C1885001" title="Use the DBMS_STATS package to manipulate optimizer statistics. You can gather statistics on objects and columns at various levels of granularity: object, schema, and database. You can also gather statistics for the physical system.">About Manual Statistics Collection with DBMS_STATS</a>&#34;</span>).</p>
<p>Because gathering statistics is time-consuming and full statistical accuracy is not required, it is usually preferable to estimate statistics. Without gathering statistics on a specified table, queries referencing this table are marked as invalid in the workload, resulting in no recommendations for these queries. It is also recommended that all existing indexes and materialized views have been analyzed.</p>
<div class="infoboxnotealso" id="GUID-BBEB9848-36CF-4416-9330-2AFD5879B565__GUID-69280AB8-1DED-4860-97A9-27A0EC06B792">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink DWHSG0081" target="_blank" href="../DWHSG/basicmv.htm#DWHSG0081"><span class="italic">Oracle Database Data Warehousing Guide</span></a> to learn more about materialized views</p>
</li>
<li>
<p><a class="olink VLDBG00101" target="_blank" href="../VLDBG/GUID-D01AB935-0567-42C5-B21E-FB36BA9C7BAD.htm#VLDBG00101"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> to learn more about partitions</p>
</li>
</ul>
</div>
</div>
</div>
<a id="TGSQL94757"></a>
<div class="props_rev_3"><a id="GUID-6A6A6BA3-1655-4CAB-AE16-A4C4D0E5D492"></a>
<h4 id="TGSQL-GUID-6A6A6BA3-1655-4CAB-AE16-A4C4D0E5D492" class="sect4">SQL Access Advisor Actions</h4>
<div>
<p>In general, each recommendation provides a benefit for one query or a set of queries. All individual actions in a recommendation must be implemented together to achieve the full benefit. Recommendations can share actions.</p>
<p>For example, a <code class="codeph">CREATE</code> <code class="codeph">INDEX</code> statement could provide a benefit for several queries, but some queries might benefit from an additional <code class="codeph">CREATE</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code> statement. In that case, the advisor would generate two recommendations: one for the set of queries that require only the index, and another one for the set of queries that require both the index and the materialized view.</p>
</div>
<a id="TGSQL94758"></a>
<div class="props_rev_3"><a id="GUID-A7EC47DE-3830-43CA-AD60-180FA3E71900"></a>
<h5 id="TGSQL-GUID-A7EC47DE-3830-43CA-AD60-180FA3E71900" class="sect5">Types of Actions</h5>
<div>
<p>SQL Access Advisor recommendations include the following types of actions:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">PARTITION</code> <code class="codeph">BASE</code> <code class="codeph">TABLE</code></p>
<p>This action partitions an existing unpartitioned base table.</p>
</li>
<li>
<p><code class="codeph">CREATE|DROP|RETAIN {MATERIALIZED VIEW|MATERIALIZED VIEW LOG|INDEX}</code></p>
<p>The <code class="codeph">CREATE</code> actions corresponds to new access structures. <code class="codeph">RETAIN</code> recommends keeping existing access structures. SQL Access Advisor only recommends <code class="codeph">DROP</code> when the <code class="codeph">WORKLOAD_SCOPE</code> parameter is set to <code class="codeph">FULL</code>.</p>
</li>
<li>
<p><code class="codeph">GATHER STATS</code></p>
<p>This action generates a call to a <code class="codeph">DBMS_STATS</code> procedure to gather statistics on a newly generated access structure (see <span class="q">&#34;<a href="tgsql_stats.htm#GUID-83F1A4F5-A316-4EAD-9AE6-CB95C1885001" title="Use the DBMS_STATS package to manipulate optimizer statistics. You can gather statistics on objects and columns at various levels of granularity: object, schema, and database. You can also gather statistics for the physical system.">About Manual Statistics Collection with DBMS_STATS</a>&#34;</span>).</p>
</li>
</ul>
<p>Multiple recommendations may refer to the same action. However, when generating a script for the recommendation, you only see each action once.</p>
<div class="infoboxnotealso" id="GUID-A7EC47DE-3830-43CA-AD60-180FA3E71900__GUID-25B4243F-EB6C-442B-BE3A-6E41BCFBF91C">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851" title="You can view each recommendation generated by SQL Access Advisor using several data dictionary views.">Viewing SQL Access Advisor Task Results</a>&#34;</span> to learn how to view actions and recommendations</p>
</div>
</div>
</div>
<a id="TGSQL94759"></a>
<div class="props_rev_3"><a id="GUID-6BEDF86C-DC63-4DF1-A9E7-A6719B931103"></a>
<h5 id="TGSQL-GUID-6BEDF86C-DC63-4DF1-A9E7-A6719B931103" class="sect5">Guidelines for Interpreting Partitioning Recommendations</h5>
<div>
<p>When SQL Access Advisor determines that partitioning a base table would improve performance, the advisor adds a partition action to every recommendation containing a query referencing the table. This technique ensures that index and materialized view recommendations are implemented on the correctly partitioned tables.</p>
<div class="section">
<p>SQL Access Advisor may recommend partitioning an existing nonpartitioned base table to improve query performance. When the advisor implementation script contains partition recommendations, note the following issues:</p>
<ul style="list-style-type: disc;">
<li>
<p>Partitioning an existing table is a complex and extensive operation, which may take considerably longer than implementing a new index or materialized view. Sufficient time should be reserved for implementing this recommendation.</p>
</li>
<li>
<p>While index and materialized view recommendations are easy to reverse by deleting the index or view, a table, after being partitioned, cannot easily be restored to its original state. Therefore, ensure that you back up the database before executing a script containing partition recommendations.</p>
</li>
<li>
<p>While repartitioning a base table, SQL Access Advisor scripts make a temporary copy of the original table, which occupies the same amount of space as the original table. Therefore, the repartitioning process requires sufficient free disk space for another copy of the largest table to be repartitioned. Ensure that such space is available before running the implementation script.</p>
<p>The partition implementation script attempts to migrate dependent objects such as indexes, materialized views, and constraints. However, some object cannot be automatically migrated. For example, PL/SQL stored procedures defined against a repartitioned base table typically become invalid and must be recompiled.</p>
</li>
<li>
<p>If you decide not to implement a partition recommendation, then all other recommendations on the same table in the same script (such as <code class="codeph">CREATE INDEX</code> and <code class="codeph">CREATE MATERIALIZED VIEW</code> recommendations) depend on the partitioning recommendation. To obtain accurate recommendations, do not simply remove the partition recommendation from the script. Rather, rerun the advisor with partitioning disabled, for example, by setting parameter <code class="codeph">ANALYSIS_SCOPE</code> to a value that does not include the keyword <code class="codeph">TABLE</code>.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-6BEDF86C-DC63-4DF1-A9E7-A6719B931103__GUID-8ABBA0F8-853C-45D4-8777-A58E817D1D56">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink SQLRF01207" target="_blank" href="../SQLRF/statements_5008.htm#SQLRF01207"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for <code class="codeph">CREATE DIRECTORY</code> syntax</p>
</li>
<li>
<p><a class="olink ARPLS65121" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65121"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about the <code class="codeph">DBMS_ADVISOR.GET_TASK_SCRIPT</code> function</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL94760"></a>
<div class="props_rev_3"><a id="GUID-0AED96BA-26F7-41CF-A8D7-36CA34213193"></a>
<h4 id="TGSQL-GUID-0AED96BA-26F7-41CF-A8D7-36CA34213193" class="sect4">SQL Access Advisor Repository</h4>
<div>
<p>All information required and generated by SQL Access Advisor resides in the Advisor repository, which is in the data dictionary. The repository has the following benefits:</p>
<ul style="list-style-type: disc;">
<li>
<p>Collects a complete workload for SQL Access Advisor</p>
</li>
<li>
<p>Supports historical data</p>
</li>
<li>
<p>Is managed by the database</p>
</li>
</ul>
</div>
</div>
</div>
<a id="TGSQL94761"></a>
<div class="props_rev_3"><a id="GUID-5DC21B66-A3DF-4C10-ADC2-F3DC824A58B6"></a>
<h3 id="TGSQL-GUID-5DC21B66-A3DF-4C10-ADC2-F3DC824A58B6" class="sect3">User Interfaces for SQL Access Advisor</h3>
<div>
<p>Oracle recommends that you use SQL Access Advisor through its GUI wizard, which is available in Cloud Control. <a class="olink TDPPT170" target="_blank" href="../TDPPT/tdppt_sqlopt.htm#TDPPT170"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> explains how to use the SQL Access Advisor wizard.</p>
<p>You can also invoke SQL Access Advisor through the <code class="codeph">DBMS_ADVISOR</code> package. This chapter explains how to use the API. See <a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for complete semantics and syntax.</p>
</div>
<a id="TGSQL94763"></a><a id="TGSQL94762"></a>
<div class="props_rev_3"><a id="GUID-42C2D851-99BA-4AC9-AD3E-537C167467D3"></a>
<h4 id="TGSQL-GUID-42C2D851-99BA-4AC9-AD3E-537C167467D3" class="sect4">Accessing the SQL Access Advisor: Initial Options Page Using Cloud Control</h4>
<div>
<p>The SQL Access Advisor: Initial Options page in Cloud Control is the starting page for a wizard that guides you through the process of obtaining recommendations.</p>
<div class="section">
<p class="subhead3">To access the SQL Access Advisor: Initial Options page:</p>
<ol>
<li>
<p>Access the Database Home page, as described in <span class="q">&#34;<a href="tgsql_stats.htm#GUID-15511441-3164-4233-A0F8-54A8DF44AC6D">Accessing the Database Home Page in Cloud Control</a>.&#34;</span></p>
</li>
<li>
<p>From the <span class="bold">Performance</span> menu, select <span class="bold">SQL</span>, then <span class="bold">SQL Access Advisor</span>.</p>
<p>The SQL Access Advisor: Initial Options page appears., shown in <a href="tgsql_sqlaccess.htm#GUID-42C2D851-99BA-4AC9-AD3E-537C167467D3__CHDHJIJC">Figure 21-2</a>.</p>
<div class="figure" id="GUID-42C2D851-99BA-4AC9-AD3E-537C167467D3__CHDHJIJC">
<p class="titleinfigure">Figure 21-2 SQL Access Advisor: Initial Options</p>
<img width="558" height="184" src="img/GUID-62D097D9-1A5F-4E73-B180-9E1B216936BC-default.gif" alt="Description of Figure 21-2 follows" title="Description of Figure 21-2 follows"/><br/>
<a href="img_text/GUID-62D097D9-1A5F-4E73-B180-9E1B216936BC-default.htm">Description of &#34;Figure 21-2 SQL Access Advisor: Initial Options&#34;</a></div>
<!-- class="figure" -->
<p>You can perform most SQL plan management tasks in this page or in pages accessed through this page.</p>
</li>
</ol>
<div class="infoboxnotealso" id="GUID-42C2D851-99BA-4AC9-AD3E-537C167467D3__GUID-66FB5845-5346-4ED6-82D0-5A7F6D417FCC">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p>Cloud Control context-sensitive online help to learn about the options on the SQL Access Advisor: Initial Options page</p>
</li>
<li>
<p><a class="olink GUID-4DF1C69C-0363-44AE-A760-7C6B66EA2746" target="_blank" href="../TDPPT/tdppt_sqlopt.htm#GUID-4DF1C69C-0363-44AE-A760-7C6B66EA2746"><span><cite>Oracle Database 2 Day + Performance Tuning Guide</cite></span></a> to learn how to configure and run SQL Tuning Advisor using Cloud Control</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94764"></a>
<div class="props_rev_3"><a id="GUID-2C729920-5490-46CA-8C41-8C9828653D3A"></a>
<h4 id="TGSQL-GUID-2C729920-5490-46CA-8C41-8C9828653D3A" class="sect4">Command-Line Interface to SQL Tuning Sets</h4>
<div>
<p>On the command line, you can use the <code class="codeph">DBMS_ADVISOR</code> package to manage SQL Tuning Advisor.</p>
<div class="section">
<p>The <code class="codeph">DBMS_ADVISOR</code> package consists of a collection of analysis and advisory functions and procedures callable from any PL/SQL program. You must have the <code class="codeph">ADVISOR</code> privilege to use <code class="codeph">DBMS_ADVISOR</code>.</p>
<div class="infoboxnotealso" id="GUID-2C729920-5490-46CA-8C41-8C9828653D3A__GUID-843083A2-0951-4CA0-B857-5197E06E2E45">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> to learn about <code class="codeph">DBMS_ADVISOR</code></p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="TGSQL94765"></a><a id="TGSQL593"></a>
<div class="props_rev_3"><a id="GUID-816A7103-440D-4AB8-8ED5-BD4DBDEBB283"></a>
<h2 id="TGSQL-GUID-816A7103-440D-4AB8-8ED5-BD4DBDEBB283" class="sect2">Using SQL Access Advisor: Basic Tasks</h2>
<div>
<p>Basic tasks include creating an STS, loading it, creating a SQL Access Advisor task, and then executing the task.</p>
<p>The following graphic shows the basic workflow for SQL Access Advisor.</p>
<div class="figure" id="GUID-816A7103-440D-4AB8-8ED5-BD4DBDEBB283__CHDBEBJA">
<p class="titleinfigure">Figure 21-3 Using SQL Access Advisor</p>
<img width="660" height="446" src="img/GUID-72E16BDF-FBFD-48DE-9656-ADF901467DDC-default.gif" alt="Description of Figure 21-3 follows" title="Description of Figure 21-3 follows"/><br/>
<a href="img_text/GUID-72E16BDF-FBFD-48DE-9656-ADF901467DDC-default.htm">Description of &#34;Figure 21-3 Using SQL Access Advisor&#34;</a></div>
<!-- class="figure" -->
<p>Typically, you use SQL Access Advisor by performing the following steps:</p>
<ol>
<li>
<p>Create a SQL tuning set</p>
<p>The input workload source for SQL Access Advisor is a SQL tuning set (STS). Use <code class="codeph">DBMS_SQLTUNE.CREATE_SQLSET</code> to create a SQL tuning set.</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-E842A0DC-088A-4223-98BF-D5B786A2C0EF">Creating a SQL Tuning Set as Input for SQL Access Advisor</a>&#34;</span> describes this task.</p>
</li>
<li>
<p>Load the SQL tuning set</p>
<p>SQL Access Advisor performs best when a workload based on actual usage is available. Use <code class="codeph">DBMS_SQLTUNE.LOAD_SQLSET</code> to populate the SQL tuning set with your workload.</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-9D138637-2D83-473D-980D-A859D6909742">Populating a SQL Tuning Set with a User-Defined Workload</a>&#34;</span> describes this task.</p>
</li>
<li>
<p>Create and configure a task</p>
<p>In the task, you define what SQL Access Advisor must analyze and the location of the analysis results. Create a task using the <code class="codeph">DBMS_ADVISOR.CREATE_TASK</code> procedure. You can then define parameters for the task using the <code class="codeph">SET_TASK_PARAMETER</code> procedure, and then link the task to an STS by using the <code class="codeph">DBMS_ADVISOR.ADD_STS_REF</code> procedure.</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-AEB3BCA7-9458-45FF-ADFF-B9BC12BCFEF6" title="Use the DBMS_ADVISOR.CREATE_TASK procedure to create a SQL Access Advisor task.">Creating and Configuring a SQL Access Advisor Task</a>&#34;</span> describes this task.</p>
</li>
<li>
<p>Execute the task</p>
<p>Run the <code class="codeph">DBMS_ADVISOR.EXECUTE_TASK</code> procedure to generate recommendations. Each recommendation specifies one or more actions. For example, a recommendation could be to create several materialized view logs, create a materialized view, and then analyze it to gather statistics.</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-BF56762E-3949-4BF6-A492-2E0F42009DE9">Executing a SQL Access Advisor Task</a>&#34;</span> describes this task.</p>
</li>
<li>
<p>View the recommendations</p>
<p>You can view the recommendations by querying data dictionary views.</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851" title="You can view each recommendation generated by SQL Access Advisor using several data dictionary views.">Viewing SQL Access Advisor Task Results</a>&#34;</span> describes this task.</p>
</li>
<li>
<p>Optionally, generate and execute a SQL script that implements the recommendations.</p>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-E92AFB9E-8977-4A7E-916E-0886C347B134" title="You can use the procedure DBMS_ADVISOR.GET_TASK_SCRIPT to create a script of the SQL statements for the SQL Access Advisor recommendations. The script is an executable SQL file that can contain DROP, CREATE, and ALTER statements.">Generating and Executing a Task Script</a>&#34;</span> that describes this task.</p>
</li>
</ol>
</div>
<a id="TGSQL94767"></a><a id="TGSQL94768"></a><a id="TGSQL94766"></a>
<div class="props_rev_3"><a id="GUID-E842A0DC-088A-4223-98BF-D5B786A2C0EF"></a>
<h3 id="TGSQL-GUID-E842A0DC-088A-4223-98BF-D5B786A2C0EF" class="sect3">Creating a SQL Tuning Set as Input for SQL Access Advisor</h3>
<div>
<div class="section">
<p>The input workload source for SQL Access Advisor is an STS. Because an STS is stored as a separate entity, multiple advisor tasks can share it. Create an STS with the <code class="codeph">DBMS_SQLTUNE.CREATE_SQLSET</code> statement.</p>
<p>After an advisor task has referenced an STS, you cannot delete or modify the STS until all advisor tasks have removed their dependency on it. A workload reference is removed when a parent advisor task is deleted, or when you manually remove the workload reference from the advisor task.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Prerequisites</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The user creating the STS must have been granted the <code class="codeph">ADMINISTER SQL TUNING SET</code> privilege. To run SQL Access Advisor on SQL tuning sets owned by other users, the user must have the <code class="codeph">ADMINISTER ANY SQL TUNING SET</code> privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You want to create an STS named <code class="codeph">MY_STS_WORKLOAD</code>.</p>
</li>
<li>
<p>You want to use this STS as input for a workload derived from the <code class="codeph">sh</code> schema.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To create an STS :</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then set SQL*Plus variables.</p>
<p>For example, enter the following commands:</p>
<pre dir="ltr">CONNECT SH
Password: <span class="bold">********</span>
SET SERVEROUTPUT ON;
VARIABLE task_id NUMBER;
VARIABLE task_name VARCHAR2(255);
VARIABLE workload_name VARCHAR2(255);
</pre></li>
<li>
<p>Create the SQL tuning set.</p>
<p>For example, assign a value to the <code class="codeph">workload_name</code> variable and create the STS as follows:</p>
<pre dir="ltr">EXECUTE :workload_name := &#39;MY_STS_WORKLOAD&#39;;
EXECUTE DBMS_SQLTUNE.CREATE_SQLSET(:workload_name, &#39;test purpose&#39;);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-E842A0DC-088A-4223-98BF-D5B786A2C0EF__GUID-71BEE432-53BF-417B-8C9E-E1A8F14122C8">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="tgsql_sts.htm#GUID-DD136837-9921-4C73-ABB8-9F1DC22542C5" title="A SQL tuning set (STS) is a database object that you can use as input to tuning tools.">About SQL Tuning Sets</a>&#34;</span></p>
</li>
<li>
<p><a class="olink ARPLS68408" target="_blank" href="../ARPLS/d_sqltun.htm#ARPLS68408"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn about <code class="codeph">CREATE_SQLSET</code></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94770"></a><a id="TGSQL94771"></a><a id="TGSQL94769"></a>
<div class="props_rev_3"><a id="GUID-9D138637-2D83-473D-980D-A859D6909742"></a>
<h3 id="TGSQL-GUID-9D138637-2D83-473D-980D-A859D6909742" class="sect3">Populating a SQL Tuning Set with a User-Defined Workload</h3>
<div>
<div class="section">
<p>A workload consists of one or more SQL statements, plus statistics and attributes that fully describe each statement. A full workload contains all SQL statements from a target business application. A partial workload contains a subset of SQL statements. The difference is that for full workloads SQL Access Advisor may recommend dropping unused materialized views and indexes.</p>
<p>You cannot use SQL Access Advisor without a workload. SQL Access Advisor ranks the entries according to a specific statistic, business importance, or combination of the two, which enables the advisor to process the most important SQL statements first.</p>
<p>SQL Access Advisor performs best with a workload based on actual usage. You can store multiple workloads in the form of SQL tuning sets, so that you can view the different uses of a real-world data warehousing or OLTP environment over a long period and across the life cycle of database instance startup and shutdown.</p>
<p><a href="tgsql_sqlaccess.htm#GUID-9D138637-2D83-473D-980D-A859D6909742__CHDBBGDE" title="Procedures for loading an STS">Table 21-1</a> describes procedures that you can use to populate an STS with a user-defined workload.</p>
<div class="tblformal" id="GUID-9D138637-2D83-473D-980D-A859D6909742__CHDBBGDE">
<p class="titleintable">Table 21-1 Procedures for Loading an STS</p>
<table class="cellalignment4808" title="Procedures for Loading an STS" summary="Procedures for loading an STS">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4839" id="d113098e2081">Procedure</th>
<th class="cellalignment4839" id="d113098e2084">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2089" headers="d113098e2081">
<p><code class="codeph">DBMS_SQLTUNE.LOAD_SQLSET</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2089 d113098e2084">
<p>Populates the SQL tuning set with a set of selected SQL. You can call the procedure multiple times to add new SQL statements or replace attributes of existing statements. See <a class="olink ARPLS68430" target="_blank" href="../ARPLS/d_sqltun.htm#ARPLS68430"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2102" headers="d113098e2081">
<p><code class="codeph">DBMS_ADVISOR.COPY_SQLWKLD_TO_STS</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2102 d113098e2084">
<p>Copies SQL workload data to a user-designated SQL tuning set. The user must have the required SQL tuning set privileges and the required <code class="codeph">ADVISOR</code> privilege. See <a class="olink ARPLS65095" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65095"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes that you want to do the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Create a table named <code class="codeph">sh.user_workload</code> to store information about SQL statements</p>
</li>
<li>
<p>Load the <code class="codeph">sh.user_workload</code> table with information about three queries of tables in the <code class="codeph">sh</code> schema</p>
</li>
<li>
<p>Populate the STS created in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-E842A0DC-088A-4223-98BF-D5B786A2C0EF">Creating a SQL Tuning Set as Input for SQL Access Advisor</a>&#34;</span> with the workload contained in <code class="codeph">sh.user_workload</code></p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To populate an STS with a user-defined workload:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then create the <code class="codeph">user_workload</code> table.</p>
<p>For example, enter the following commands:</p>
<pre dir="ltr">DROP TABLE user_workload;
CREATE TABLE user_workload
(
  username             varchar2(128),   /* User who executes statement */
  module               varchar2(64),        /* Application module name */
  action               varchar2(64),        /* Application action name */
  elapsed_time         number,               /* Elapsed time for query */
  cpu_time             number,                   /* CPU time for query */
  buffer_gets          number,        /* Buffer gets consumed by query */
  disk_reads           number,         /* Disk reads consumed by query */
  rows_processed       number,         /* # of rows processed by query */
  executions           number,            /* # of times query executed */
  optimizer_cost       number,             /* Optimizer cost for query */
  priority             number,             /* User-priority (1,2 or 3) */
  last_execution_date  date,               /* Last time query executed */
  stat_period          number,          /* Window exec time in seconds */
  sql_text             clob                           /* Full SQL Text */
);
</pre></li>
<li>
<p>Load the <code class="codeph">user_workload</code> table with information about queries.</p>
<p>For example, execute the following statements:</p>
<pre dir="ltr">-- aggregation with selection
INSERT INTO user_workload (username, module, action, priority, sql_text)
VALUES (&#39;SH&#39;, &#39;Example1&#39;, &#39;Action&#39;, 2,
&#39;SELECT   t.week_ending_day, p.prod_subcategory, 
          SUM(s.amount_sold) AS dollars, s.channel_id, s.promo_id
 FROM     sales s, times t, products p 
 WHERE    s.time_id = t.time_id
 AND      s.prod_id = p.prod_id 
 AND      s.prod_id &gt; 10 
 AND      s.prod_id &lt; 50
 GROUP BY t.week_ending_day, p.prod_subcategory, s.channel_id, s.promo_id&#39;)
/
 
-- aggregation with selection
INSERT INTO user_workload (username, module, action, priority, sql_text)
VALUES (&#39;SH&#39;, &#39;Example1&#39;, &#39;Action&#39;, 2,
 &#39;SELECT   t.calendar_month_desc, SUM(s.amount_sold) AS dollars
  FROM     sales s , times t
  WHERE    s.time_id = t.time_id
  AND      s.time_id BETWEEN TO_DATE(&#39;&#39;01-JAN-2000&#39;&#39;, &#39;&#39;DD-MON-YYYY&#39;&#39;)
  AND      TO_DATE(&#39;&#39;01-JUL-2000&#39;&#39;, &#39;&#39;DD-MON-YYYY&#39;&#39;)
  GROUP BY t.calendar_month_desc&#39;)
/
 
-- order by
INSERT INTO user_workload (username, module, action, priority, sql_text)
VALUES (&#39;SH&#39;, &#39;Example1&#39;, &#39;Action&#39;, 2,
 &#39;SELECT   c.country_id, c.cust_city, c.cust_last_name
  FROM     customers c
  WHERE    c.country_id IN (52790, 52789)
  ORDER BY c.country_id, c.cust_city, c.cust_last_name&#39;)
/
COMMIT;
</pre></li>
<li>
<p>Execute a PL/SQL program that fills a cursor with rows from the <code class="codeph">user_workload</code> table, and then loads the contents of this cursor into the STS named <code class="codeph">MY_STS_WORKLOAD</code>.</p>
<p>For example, execute the following PL/SQL program:</p>
<pre dir="ltr">DECLARE
  sqlset_cur DBMS_SQLTUNE.SQLSET_CURSOR;
BEGIN
  OPEN sqlset_cur FOR
    SELECT SQLSET_ROW(null,null, SQL_TEXT, null, null, &#39;SH&#39;, module,
                     &#39;Action&#39;, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, null, 2, 3,
                     sysdate, 0, 0, null, 0, null, null)
    FROM USER_WORKLOAD;
  DBMS_SQLTUNE.LOAD_SQLSET(&#39;MY_STS_WORKLOAD&#39;, sqlset_cur);
END;
/
</pre></li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94773"></a><a id="TGSQL94774"></a><a id="TGSQL94772"></a>
<div class="props_rev_3"><a id="GUID-AEB3BCA7-9458-45FF-ADFF-B9BC12BCFEF6"></a>
<h3 id="TGSQL-GUID-AEB3BCA7-9458-45FF-ADFF-B9BC12BCFEF6" class="sect3">Creating and Configuring a SQL Access Advisor Task</h3>
<div>
<p>Use the <code class="codeph">DBMS_ADVISOR.CREATE_TASK</code> procedure to create a SQL Access Advisor task.</p>
<div class="section">
<p>In the SQL Access Advisor task, you define what the advisor must analyze and the location of the results. You can create multiple tasks, each with its own specialization. All are based on the same Advisor task model and share the same repository.</p>
<p>Configuring the task involves the following steps:</p>
<ul style="list-style-type: disc;">
<li>
<p>Defining task parameters</p>
<p>At the time the recommendations are generated, you can apply a filter to the workload to restrict what is analyzed. This restriction provides the ability to generate different sets of recommendations based on different workload scenarios.</p>
<p>SQL Access Advisor parameters control the recommendation process and customization of the workload. These parameters control various aspects of the process, such as the type of recommendation required and the naming conventions for what it recommends.</p>
<p>If parameters are not defined, then the database uses the defaults. You can set task parameters by using the <code class="codeph">DBMS_ADVISOR.SET_TASK_PARAMETER</code> procedure. Parameters are persistent in that they remain set for the life span of the task. When a parameter value is set using <code class="codeph">SET_TASK_PARAMETER</code>, it does not change until you make another call to this procedure.</p>
</li>
<li>
<p>Linking the task to the workload</p>
<p>Because the workload is independent, you must link it to a task using the <code class="codeph">DBMS_ADVISOR.ADD_STS_REF</code> procedure. After this link has been established, you cannot delete or modify the workload until all advisor tasks have removed their dependency on the workload. A workload reference is removed when a user deletes a parent advisor task or manually removes the workload reference from the task by using the <code class="codeph">DBMS_ADVISOR.DELETE_STS_REF</code> procedure.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Prerequisites</p>
<p>The user creating the task must have been granted the <code class="codeph">ADVISOR</code> privilege.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You want to create a task named <code class="codeph">MYTASK</code>.</p>
</li>
<li>
<p>You want to use this task to analyze the workload that you defined in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-9D138637-2D83-473D-980D-A859D6909742">Populating a SQL Tuning Set with a User-Defined Workload</a>&#34;</span>.</p>
</li>
<li>
<p>You want to terminate the task if it takes longer than 30 minutes to execute.</p>
</li>
<li>
<p>You want to SQL Access Advisor to only consider indexes.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To create and configure a SQL Access Advisor task:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then create the task.</p>
<p>For example, enter the following commands:</p>
<pre dir="ltr">EXECUTE :task_name := &#39;MYTASK&#39;;
EXECUTE DBMS_ADVISOR.CREATE_TASK(&#39;SQL Access Advisor&#39;, :task_id, :task_name);
</pre></li>
<li>
<p>Set task parameters.</p>
<p>For example, execute the following statements:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.SET_TASK_PARAMETER(:task_name, &#39;TIME_LIMIT&#39;, 30);
EXECUTE DBMS_ADVISOR.SET_TASK_PARAMETER(:task_name, &#39;ANALYSIS_SCOPE&#39;, &#39;ALL&#39;);
</pre></li>
<li>
<p>Link the task to the workload.</p>
<p>For example, execute the following statement:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.ADD_STS_REF(:task_name, &#39;SH&#39;, :workload_name);
</pre></li>
</ol>
<div class="infoboxnotealso" id="GUID-AEB3BCA7-9458-45FF-ADFF-B9BC12BCFEF6__GUID-6ABFA2AB-25C6-4D69-A633-71239226E5FD">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-B83F372B-CC15-4A0B-B1F1-E80CF54B8499">Categories for SQL Access Advisor Task Parameters</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-D76A49FA-73F1-4D54-80A1-A88B3C5E4A39">Deleting SQL Access Advisor Tasks</a>&#34;</span></p>
</li>
<li>
<p><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span> to learn about the <a class="olink ARPLS65103" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65103"><code class="codeph">DBMS_ADVISOR.CREATE_TASK</code></a>, <a class="olink ARPLS65151" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65151"><code class="codeph">DBMS_ADVISOR.SET_TASK_PARAMETER</code></a>, and <a class="olink ARPLS65091" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65091"><code class="codeph">DBMS_ADVISOR.ADD_STS_REF</code></a> procedures</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94776"></a><a id="TGSQL94777"></a><a id="TGSQL94775"></a>
<div class="props_rev_3"><a id="GUID-BF56762E-3949-4BF6-A492-2E0F42009DE9"></a>
<h3 id="TGSQL-GUID-BF56762E-3949-4BF6-A492-2E0F42009DE9" class="sect3">Executing a SQL Access Advisor Task</h3>
<div>
<div class="section">
<p>The <code class="codeph">DBMS_ADVISOR.EXECUTE_TASK</code> procedu<a id="d113098e2482" class="indexterm-anchor"></a><a id="d113098e2484" class="indexterm-anchor"></a>re performs SQL Access Advisor analysis or evaluation for the specified task. Task execution is a synchronous operation, so the database does not return control to the user until the operation has completed, or the database detects a user interrupt. After the return or execution of the task, you can check the <code class="codeph">DBA_ADVISOR_LOG</code> table for the execution status.</p>
<p>Running <code class="codeph">EXECUTE_TASK</code> generates recommendations. A recommendation includes one or more actions, such as creating a materialized view log or a materialized view.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Prerequisites and Restrictions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>When processing a workload, SQL Access Advisor attempts to validate each statement to identify table and column references. The database achieves validation by processing each statement as if it were being executed by the statement&#39;s original user.</p>
<p>If the user does not have <code class="codeph">SELECT</code> privileges to a particular table, then SQL Access Advisor bypasses the statement referencing the table. This behavior can cause many statements to be excluded from analysis. If SQL Access Advisor excludes all statements in a workload, then the workload is invalid. SQL Access Advisor returns the following message:</p>
<pre dir="ltr">QSM-00774, there are no SQL statements to process for task TASK_NAME
</pre>
<p>To avoid missing critical workload queries, the current database user must have <code class="codeph">SELECT</code> privileges on the tables targeted for materialized view analysis. For these tables, these <code class="codeph">SELECT</code> privileges cannot be obtained through a role.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes that you want to execute the task you configured in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-AEB3BCA7-9458-45FF-ADFF-B9BC12BCFEF6" title="Use the DBMS_ADVISOR.CREATE_TASK procedure to create a SQL Access Advisor task.">Creating and Configuring a SQL Access Advisor Task</a>&#34;</span>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To create and configure a SQL Access Advisor task:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then execute the task.</p>
<p>For example, execute the following statement:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.EXECUTE_TASK(:task_name);
</pre></li>
<li>
<p>Optionally, query <code class="codeph">USER_ADVISOR_LOG</code> to check the status of the task.</p>
<p>For example, execute the following statements (sample output included):</p>
<pre dir="ltr">COL TASK_ID FORMAT 999
COL TASK_NAME FORMAT a25
COL STATUS_MESSAGE FORMAT a25

SELECT TASK_ID, TASK_NAME, STATUS, STATUS_MESSAGE 
FROM   USER_ADVISOR_LOG;

TASK_ID TASK_NAME                 STATUS      STATUS_MESSAGE
------- ------------------------- ----------- -------------------------
    103 MYTASK                    COMPLETED   Access advisor execution
                                              completed
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-BF56762E-3949-4BF6-A492-2E0F42009DE9__GUID-5BF5B342-CBDC-4A6C-AF45-B695802F6027">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn more about the <code class="codeph">EXECUTE_TASK</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94779"></a><a id="TGSQL94780"></a><a id="TGSQL94778"></a>
<div class="props_rev_3"><a id="GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851"></a>
<h3 id="TGSQL-GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851" class="sect3">Viewing SQL Access Advisor Task Results</h3>
<div>
<p>You can view each recommendation generated by SQL Access Advisor using several data dictionary views.</p>
<div class="section">
<p>The views are summarized in <a href="tgsql_sqlaccess.htm#GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851__CHDIJCHB" title="Views that show task results">Table 21-2</a>. However, it is easier to use the <code class="codeph">DBMS_ADVISOR.GET_TASK_SCRIPT</code> procedure or Cloud Control, which graphically displays the recommendations and provides hyperlinks to quickly see which SQL statements benefit from a recommendation.</p>
<p>Each recommendation produced by SQL Access Advisor is linked to the SQL statement it benefits. Each recommendation corresponds to one or more actions. Each action has one or more attributes.</p>
<p>Each action has attributes pertaining to the access structure properties. The name and tablespace for each applicable access structure are in the <code class="codeph">ATTR1</code> and <code class="codeph">ATTR2</code> columns of <code class="codeph">USER_ADVISOR_ATTRIBUTES</code> (see <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-F528E127-B00C-4787-AE2E-257B139DC3E5">Action Attributes in the DBA_ADVISOR_ACTIONS View</a>&#34;</span>). The space occupied by each new access structure is in the <code class="codeph">NUM_ATTR1</code> column. Other attributes are different for each action.</p>
<div class="tblformal" id="GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851__CHDIJCHB">
<p class="titleintable">Table 21-2 Views Showing Task Results</p>
<table class="cellalignment4808" title="Views Showing Task Results" summary="Views that show task results">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4839" id="d113098e2692">Data Dictionary View (DBA, USER)</th>
<th class="cellalignment4839" id="d113098e2695">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2700" headers="d113098e2692">
<p><code class="codeph">DBA_ADVISOR_TASKS</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2700 d113098e2695">
<p>Displays information about advisor tasks. To see SQL Access Advisor tasks, select where <code class="codeph">ADVISOR_NAME = &#39;SQL Access Advisor&#39;.</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2710" headers="d113098e2692">
<p><code class="codeph">DBA_ADVISOR_RECOMMENDATIONS</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2710 d113098e2695">
<p>Displays the results of an analysis of all recommendations in the database. A recommendation can have multiple actions associated with it. The <code class="codeph">DBA_ADVISOR_ACTIONS</code> view describe the actions. A recommendation also points to a set of rationales that present a justification/reasoning for that recommendation. The <code class="codeph">DBA_ADVISOR_RATIONALE</code> view describes the rationales.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2724" headers="d113098e2692">
<p><code class="codeph">DBA_ADVISOR_ACTIONS</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2724 d113098e2695">
<p>Displays information about the actions associated with all recommendations in the database. Each action is specified by the <code class="codeph">COMMAND</code> and <code class="codeph">ATTR1</code> through <code class="codeph">ATTR6</code> columns. Each command defines how to use the attribute columns.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2741" headers="d113098e2692">
<p><code class="codeph">DBA_ADVISOR_RATIONALE</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2741 d113098e2695">
<p>Displays information about the rationales for all recommendations in the database.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e2749" headers="d113098e2692">
<p><code class="codeph">DBA_ADVISOR_SQLA_WK_STMTS</code></p>
</td>
<td class="cellalignment4802" headers="d113098e2749 d113098e2695">
<p>Displays information about all workload objects in the database after a SQL Access Advisor analysis. The precost and postcost numbers are in terms of the estimated optimizer cost (shown in <code class="codeph">EXPLAIN PLAN</code>) without and with the recommended access structure.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
<p>This tutorial assumes that you want to view results of the task you executed in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-BF56762E-3949-4BF6-A492-2E0F42009DE9">Executing a SQL Access Advisor Task</a>&#34;</span>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To view the results of a SQL Access Advisor task:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database with the appropriate privileges, and then query the advisor recommendations.</p>
<p>For example, execute the following statements (sample output included):</p>
<pre dir="ltr">VARIABLE workload_name VARCHAR2(255); 
VARIABLE task_name VARCHAR2(255);
EXECUTE :task_name := &#39;MYTASK&#39;;
EXECUTE :workload_name := &#39;MY_STS_WORKLOAD&#39;; 

SELECT REC_ID, RANK, BENEFIT
FROM   USER_ADVISOR_RECOMMENDATIONS 
WHERE  TASK_NAME = :task_name
ORDER BY RANK;

    REC_ID       RANK    BENEFIT
---------- ---------- ----------
         1          1        236
         2          2        356
</pre>
<p>The preceding output shows the recommendations (<code class="codeph">rec_id</code>) produced by an SQL Access Advisor run, with their rank and total benefit. The rank is a measure of the importance of the queries that the recommendation helps. The benefit is the total improvement in execution cost (in terms of optimizer cost) of all queries using the recommendation.</p>
</li>
<li>
<p>Identify which query benefits from which recommendation.</p>
<p>For example, execute the following query of <code class="codeph">USER_ADVISOR_SQLA_WK_STMTS</code> (sample output included):</p>
<pre dir="ltr">SELECT SQL_ID, REC_ID, PRECOST, POSTCOST,
       (PRECOST-POSTCOST)*100/PRECOST AS PERCENT_BENEFIT
FROM   USER_ADVISOR_SQLA_WK_STMTS
WHERE  TASK_NAME = :task_name
AND    WORKLOAD_NAME = :workload_name
ORDER BY percent_benefit DESC;

SQL_ID            REC_ID    PRECOST   POSTCOST PERCENT_BENEFIT
------------- ---------- ---------- ---------- ---------------
fn4bsxdm98w3u          2        578        222      61.5916955
29bbju72rv3t2          1       5750       5514      4.10434783
133ym38r6gbar          0        772        772               0
</pre>
<p>The precost and postcost numbers are in terms of the estimated optimizer cost (shown in <code class="codeph">EXPLAIN</code> <code class="codeph">PLAN</code>) both without and with the recommended access structure changes.</p>
</li>
<li>
<p>Display the number of distinct actions for this set of recommendations.</p>
<p>For example, use the following query (sample output included):</p>
<pre dir="ltr">SELECT &#39;Action Count&#39;, COUNT(DISTINCT action_id) cnt
FROM   USER_ADVISOR_ACTIONS 
WHERE  TASK_NAME = :task_name;

&#39;ACTIONCOUNT        CNT
------------ ----------
Action Count          4
</pre></li>
<li>
<p>Display the actions for this set of recommendations.</p>
<p>For example, use the following query (sample output included):</p>
<pre dir="ltr">SELECT REC_ID, ACTION_ID, SUBSTR(COMMAND,1,30) AS command
FROM   USER_ADVISOR_ACTIONS 
WHERE  TASK_NAME = :task_name
ORDER BY rec_id, action_id;

    REC_ID  ACTION_ID COMMAND
---------- ---------- ------------------------------
         1          1 PARTITION TABLE
         1          2 RETAIN INDEX
         2          1 PARTITION TABLE
         2          3 RETAIN INDEX
         2          4 RETAIN INDEX
</pre></li>
<li>
<p>Display attributes of the recommendations.</p>
<p>For example, create the following PL/SQL procedure <code class="codeph">show_recm</code>, and then execute it to see attributes of the actions:</p>
<pre dir="ltr">CREATE OR REPLACE PROCEDURE show_recm (in_task_name IN VARCHAR2) IS 
CURSOR curs IS
  SELECT DISTINCT action_id, command, attr1, attr2, attr3, attr4
  FROM user_advisor_actions
  WHERE task_name = in_task_name
  ORDER BY action_id;
  v_action        number;
  v_command     VARCHAR2(32);
  v_attr1       VARCHAR2(4000);
  v_attr2       VARCHAR2(4000);
  v_attr3       VARCHAR2(4000);
  v_attr4       VARCHAR2(4000);
  v_attr5       VARCHAR2(4000);
BEGIN
  OPEN curs;
  DBMS_OUTPUT.PUT_LINE(&#39;=========================================&#39;);
  DBMS_OUTPUT.PUT_LINE(&#39;Task_name = &#39; || in_task_name);
  LOOP
     FETCH curs INTO  
       v_action, v_command, v_attr1, v_attr2, v_attr3, v_attr4 ;
   EXIT when curs%NOTFOUND;
   DBMS_OUTPUT.PUT_LINE(&#39;Action ID: &#39; || v_action);
   DBMS_OUTPUT.PUT_LINE(&#39;Command : &#39; || v_command);
   DBMS_OUTPUT.PUT_LINE(&#39;Attr1 (name)      : &#39; || SUBSTR(v_attr1,1,30));
   DBMS_OUTPUT.PUT_LINE(&#39;Attr2 (tablespace): &#39; || SUBSTR(v_attr2,1,30));
   DBMS_OUTPUT.PUT_LINE(&#39;Attr3             : &#39; || SUBSTR(v_attr3,1,30));
   DBMS_OUTPUT.PUT_LINE(&#39;Attr4             : &#39; || v_attr4);
   DBMS_OUTPUT.PUT_LINE(&#39;Attr5             : &#39; || v_attr5);
   DBMS_OUTPUT.PUT_LINE(&#39;----------------------------------------&#39;);  
   END LOOP;   
   CLOSE curs;      
   DBMS_OUTPUT.PUT_LINE(&#39;=========END RECOMMENDATIONS============&#39;);
END show_recm;
/

SET SERVEROUTPUT ON SIZE 99999
EXECUTE show_recm(:task_name);
</pre>
<p>The following output shows attributes of actions in the recommendations:</p>
<pre dir="ltr">=========================================
Task_name = MYTASK
Action ID: 1
Command : PARTITION TABLE
Attr1 (name)      : &#34;SH&#34;.&#34;SALES&#34;
Attr2 (tablespace):
Attr3             : (&#34;TIME_ID&#34;)
Attr4             : INTERVAL
Attr5             :
----------------------------------------
Action ID: 2
Command : RETAIN INDEX
Attr1 (name)      : &#34;SH&#34;.&#34;PRODUCTS_PK&#34;
Attr2 (tablespace):
Attr3             : &#34;SH&#34;.&#34;PRODUCTS&#34;
Attr4             : BTREE
Attr5             :
----------------------------------------
Action ID: 3
Command : RETAIN INDEX
Attr1 (name)      : &#34;SH&#34;.&#34;TIMES_PK&#34;
Attr2 (tablespace):
Attr3             : &#34;SH&#34;.&#34;TIMES&#34;
Attr4             : BTREE
Attr5             :
----------------------------------------
Action ID: 4
Command : RETAIN INDEX
Attr1 (name)      : &#34;SH&#34;.&#34;SALES_TIME_BIX&#34;
Attr2 (tablespace):
Attr3             : &#34;SH&#34;.&#34;SALES&#34;
Attr4             : BITMAP
Attr5             :
----------------------------------------
=========END RECOMMENDATIONS============
</pre></li>
</ol>
<div class="infoboxnotealso" id="GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851__GUID-243614F8-470B-4E9B-B5D9-B11B546F3EA1">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS020" target="_blank" href="../ARPLS/d_lob.htm#ARPLS020"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> for details regarding <code class="codeph">Attr5</code> and <code class="codeph">Attr6</code></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94782"></a><a id="TGSQL94781"></a>
<div class="props_rev_3"><a id="GUID-E92AFB9E-8977-4A7E-916E-0886C347B134"></a>
<h3 id="TGSQL-GUID-E92AFB9E-8977-4A7E-916E-0886C347B134" class="sect3">Generating and Executing a Task Script</h3>
<div>
<p>You can use the procedure <code class="codeph">DBMS_ADVISOR.GET_TASK_SCRIPT</code> to create a script of the SQL statements for the SQL Access Advisor recommendations. The script is an executable SQL file that can contain <code class="codeph">DROP</code>, <code class="codeph">CREATE</code>, and <code class="codeph">ALTER</code> statements.</p>
<div class="section">
<p>For new objects, the names of the materialized views, materialized view logs, and indexes are automatically generated by using the user-specified name template. Review the generated SQL script before attempting to execute it.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes that you want to save and execute a script that contains the recommendations generated in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-BF56762E-3949-4BF6-A492-2E0F42009DE9">Executing a SQL Access Advisor Task</a>&#34;</span>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To save and execute a SQL script:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as an administrator.</p>
</li>
<li>
<p>Create a directory object and grant permissions to read and write to it.</p>
<p>For example, use the following statements:</p>
<pre dir="ltr">CREATE DIRECTORY ADVISOR_RESULTS AS &#39;/tmp&#39;;
GRANT READ ON DIRECTORY ADVISOR_RESULTS TO PUBLIC;
GRANT WRITE ON DIRECTORY ADVISOR_RESULTS TO PUBLIC;
</pre></li>
<li>
<p>Connect to the database as <code class="codeph">sh</code>, and then save the script to a file.</p>
<p>For example, use the following statement:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.CREATE_FILE(DBMS_ADVISOR.GET_TASK_SCRIPT(&#39;MYTASK&#39;),
&#39;ADVISOR_RESULTS&#39;, &#39;advscript.sql&#39;);
</pre></li>
<li>
<p>Use a text editor to view the contents of the script.</p>
<p>The following is a fragment of a script generated by this procedure:</p>
<pre dir="ltr">Rem  Username:        SH
Rem  Task:            MYTASK
Rem  Execution date:
Rem
 
Rem
Rem  Repartitioning table &#34;SH&#34;.&#34;SALES&#34;
Rem
 
SET SERVEROUTPUT ON
SET ECHO ON
 
Rem
Rem Creating new partitioned table
Rem
  CREATE TABLE &#34;SH&#34;.&#34;SALES1&#34;
   (    &#34;PROD_ID&#34; NUMBER,
        &#34;CUST_ID&#34; NUMBER,
        &#34;TIME_ID&#34; DATE,
        &#34;CHANNEL_ID&#34; NUMBER,
        &#34;PROMO_ID&#34; NUMBER,
        &#34;QUANTITY_SOLD&#34; NUMBER(10,2),
        &#34;AMOUNT_SOLD&#34; NUMBER(10,2)
   ) PCTFREE 5 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS  NOLOGGING
  TABLESPACE &#34;EXAMPLE&#34;
PARTITION BY RANGE (&#34;TIME_ID&#34;) INTERVAL( NUMTOYMINTERVAL( 1, &#39;MONTH&#39;)) 
( PARTITION VALUES LESS THAN (TO_DATE(&#39; 1998-02-01 00:00:00&#39;, 
&#39;SYYYY-MM-DD HH24:MI:SS&#39;, &#39;NLS_CALENDAR=GREGORIAN&#39;)) );
.
.
.
</pre></li>
<li>
<p>Optionally, in SQL*Plus, run the SQL script.</p>
<p>For example, enter the following command:</p>
<pre dir="ltr">@/tmp/advscript.sql
</pre></li>
</ol>
<div class="infoboxnotealso" id="GUID-E92AFB9E-8977-4A7E-916E-0886C347B134__GUID-035A79AC-107A-4C4C-950E-9D0E79061B3C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink SQLRF01207" target="_blank" href="../SQLRF/statements_5008.htm#SQLRF01207"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for <code class="codeph">CREATE DIRECTORY</code> syntax</p>
</li>
<li>
<p><a class="olink ARPLS65121" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65121"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> to learn more about the <code class="codeph">GET_TASK_SCRIPT</code> function</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL94784"></a><a id="TGSQL94783"></a>
<div class="props_rev_3"><a id="GUID-5FD677D7-1A29-4034-A63E-A78383C61456"></a>
<h2 id="TGSQL-GUID-5FD677D7-1A29-4034-A63E-A78383C61456" class="sect2">Performing a SQL Access Advisor Quick Tune</h2>
<div>
<div class="section">
<p>To tune a single SQL statement, the <code class="codeph">DBMS_ADVISOR.QUICK_TUNE</code> procedure accepts as its input a <code class="codeph">task_name</code> and a single SQL statement. The procedure creates a task and workload and executes this task. <code class="codeph">EXECUTE_TASK</code> and <code class="codeph">QUICK_TUNE</code> produce the same results. However, <code class="codeph">QUICK_TUNE</code> is easier when tuning a single SQL statement.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You want to tune a single SQL statement.</p>
</li>
<li>
<p>You want to name the task <code class="codeph">MY_QUICKTUNE_TASK</code>.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">To create a template and base a task on this template:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then initialize SQL*Plus variables for the SQL statement and task name.</p>
<p>For example, enter the following commands:</p>
<pre dir="ltr">VARIABLE t_name VARCHAR2(255);
VARIABLE sq VARCHAR2(4000);
EXEC :sq := &#39;SELECT COUNT(*) FROM customers WHERE cust_state_province =&#39;&#39;CA&#39;&#39;&#39;;
EXECUTE :t_name := &#39;MY_QUICKTUNE_TASK&#39;;
</pre></li>
<li>
<p>Perform the quick tune.</p>
<p>For example, the following statement executes <code class="codeph">MY_QUICKTUNE_TASK</code>:</p>
<pre dir="ltr">EXEC DBMS_ADVISOR.QUICK_TUNE(DBMS_ADVISOR.SQLACCESS_ADVISOR,:t_name,:sq);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-5FD677D7-1A29-4034-A63E-A78383C61456__GUID-B4AEB7E6-94E6-479F-83C3-EF9DC9025EE1">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn more about the <code class="codeph">QUICK_TUNE</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94785"></a>
<div class="props_rev_3"><a id="GUID-65BBE16E-42BD-4CDD-B8E8-A2E1C72190CE"></a>
<h2 id="TGSQL-GUID-65BBE16E-42BD-4CDD-B8E8-A2E1C72190CE" class="sect2">Using SQL Access Advisor: Advanced Tasks</h2>
<div>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-811D7F8E-8A44-4DB6-93E9-2B0EB6E3A1C4">Evaluating Existing Access Structures</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-3B12A160-EA4B-4099-A3A1-7728D0DEE6EC">Updating SQL Access Advisor Task Attributes</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D">Creating and Using SQL Access Advisor Task Templates</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-D3604ECF-AF4E-42A2-8551-252B26672ACA">Terminating SQL Access Advisor Task Execution</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-D76A49FA-73F1-4D54-80A1-A88B3C5E4A39">Deleting SQL Access Advisor Tasks</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-D5D23218-BD51-4999-86D8-6B5B9563A34B">Marking SQL Access Advisor Recommendations</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-6824A691-AD3C-4C40-9ECE-E18F327E3B0A">Modifying SQL Access Advisor Recommendations</a></p>
</li>
</ul>
</div>
<a id="TGSQL94786"></a>
<div class="props_rev_3"><a id="GUID-811D7F8E-8A44-4DB6-93E9-2B0EB6E3A1C4"></a>
<h3 id="TGSQL-GUID-811D7F8E-8A44-4DB6-93E9-2B0EB6E3A1C4" class="sect3">Evaluating Existing Access Structures</h3>
<div>
<div class="section">
<p>SQL Access Advisor operates in two modes: problem-solving and evaluation. By default, SQL Access Advisor attempts to solve access method problems by looking for enhancements to index structures, partitions, materialized views, and materialized view logs. For example, a problem-solving run may recommend creating a new index, adding a new column to a materialized view log, and so on.</p>
<p>When you set the <code class="codeph">ANALYSIS_SCOPE</code> parameter to <code class="codeph">EVALUATION</code>, SQL Access Advisor comments only on which access structures the supplied workload uses. An evaluation-only run may only produce recommendations such as retaining an index, retaining a materialized view, and so on. The evaluation mode can be useful to see exactly which indexes and materialized views a workload is using. SQL Access Advisor does not evaluate the performance impact of existing base table partitioning.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To create a task and set it to evaluation mode:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database with the appropriate privileges, and then create a task.</p>
<p>For example, enter the following statement, where <code class="codeph">t_name</code> is a SQL*Plus variable set to the name of the task:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.EXECUTE_TASK(:t_name);
</pre></li>
<li>
<p>Perform the quick tune.</p>
<p>For example, the following statement sets the previous task to evaluation mode:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.SET_TASK_PARAMETER(:t_name,&#39;ANALYSIS_SCOPE&#39;,&#39;EVALUATION&#39;);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-811D7F8E-8A44-4DB6-93E9-2B0EB6E3A1C4__GUID-8670E443-0D88-4900-81F6-2891004A3CB2">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn about the <code class="codeph">SET_TASK_PARAMETER</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94788"></a><a id="TGSQL94787"></a>
<div class="props_rev_3"><a id="GUID-3B12A160-EA4B-4099-A3A1-7728D0DEE6EC"></a>
<h3 id="TGSQL-GUID-3B12A160-EA4B-4099-A3A1-7728D0DEE6EC" class="sect3">Updating SQL Access Advisor Task Attributes</h3>
<div>
<div class="section">
<p>You can use the <code class="codeph">DBMS_ADVISOR.UPDATE_TASK_ATTRIBUTES</code> procedure to do the following:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Change the name of a task.</p>
</li>
<li>
<p>Give a task a description.</p>
</li>
<li>
<p>Set the task to be read-only so it cannot be changed.</p>
</li>
<li>
<p>Make the task a template upon which you can define other tasks (see <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D">Creating and Using SQL Access Advisor Task Templates</a>&#34;</span>).</p>
</li>
<li>
<p>Changes various attributes of a task or a task template.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You want to change the name of existing task <code class="codeph">MYTASK</code> to <code class="codeph">TUNING1</code>.</p>
</li>
<li>
<p>You want to make the task <code class="codeph">TUNING1</code> read-only.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To update task attributes:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then change the name of the task.</p>
<p>For example, use the following statement:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.UPDATE_TASK_ATTRIBUTES(&#39;MYTASK&#39;, &#39;TUNING1&#39;);
</pre></li>
<li>
<p>Set the task to read-only.</p>
<p>For example, use the following statement:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.UPDATE_TASK_ATTRIBUTES(&#39;TUNING1&#39;, 
  read_only =&gt; &#39;true&#39;);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-3B12A160-EA4B-4099-A3A1-7728D0DEE6EC__GUID-EA64C54B-A753-4BA8-B927-A8BFC33E819B">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information regarding the <code class="codeph">UPDATE_TASK_ATTRIBUTES</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94790"></a><a id="TGSQL94791"></a><a id="TGSQL94789"></a>
<div class="props_rev_3"><a id="GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D"></a>
<h3 id="TGSQL-GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D" class="sect3">Creating and Using SQL Access Advisor Task Templates</h3>
<div>
<div class="section">
<p>A <span class="bold">task template</span> is a saved configuration on which to base future tasks and workloads. A template enables you to set up any number of tasks or workloads that can serve as starting points or templates for future task creation. By setting up a template, you can save time when performing tuning analysis. This approach also enables you to custom fit a tuning analysis to the business operation.</p>
<p>Physically, there is no difference between a task and a template. However, a template cannot be executed. To create a task from a template, you specify the template to be used when a new task is created. At that time, SQL Access Advisor copies the data and parameter settings from the template into the newly created task. You can also set an existing task to be a template by setting the template attribute when creating the task or later using the <code class="codeph">UPDATE_TASK_ATTRIBUTE</code> procedure.</p>
<p><a href="tgsql_sqlaccess.htm#GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D__CHDDDGBF" title="Procedures for task templates">Table 21-3</a> describes procedures that you can use to manage task templates.</p>
<div class="tblformal" id="GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D__CHDDDGBF">
<p class="titleintable">Table 21-3 DBMS_ADVISOR Procedures for Task Templates</p>
<table class="cellalignment4808" title="DBMS_ADVISOR Procedures for Task Templates" summary="Procedures for task templates">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4839" id="d113098e3654">Procedure</th>
<th class="cellalignment4839" id="d113098e3657">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e3662" headers="d113098e3654">
<p><code class="codeph">CREATE_TASK</code></p>
</td>
<td class="cellalignment4802" headers="d113098e3662 d113098e3657">
<p>The <code class="codeph">template</code> parameter is an optional task name of an existing task or task template. To specify built-in SQL Access Advisor templates, use the template name as described in <a href="tgsql_sqlaccess.htm#GUID-9CB98A66-9651-49BE-A3D1-C01D43D79FA9__CHDDAHBJ" title="SQLAccess Advisor Constants">Table 21-6</a>. <code class="codeph">is_template</code> is an optional parameter that enables you to set the newly created task as a template. Valid values are <code class="codeph">true</code> and <code class="codeph">false</code>.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e3687" headers="d113098e3654">
<p><code class="codeph">SET_TASK_PARAMETER</code></p>
</td>
<td class="cellalignment4802" headers="d113098e3687 d113098e3657">
<p>The <code class="codeph">INDEX_NAME_TEMPLATE</code> parameter specifies the method by which new index names are formed. The <code class="codeph">MVIEW_NAME_TEMPLATE</code> parameter specifies the method by which new materialized view names are formed. The <code class="codeph">PARTITION_NAME_TEMPLATE</code> parameter specifies the method by which new partition names are formed. See <a class="olink ARPLS65153" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65153"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to for task parameter descriptions.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4802" id="d113098e3709" headers="d113098e3654">
<p><code class="codeph">UPDATE_TASK_ATTRIBUTES</code></p>
</td>
<td class="cellalignment4802" headers="d113098e3709 d113098e3657">
<p><code class="codeph">is_template</code> marks the task as a template. Physically, there is no difference between a task and a template; however, a template cannot be executed. Possible values are: <code class="codeph">true</code> and <code class="codeph">false</code>. If the value is <code class="codeph">NULL</code> or contains the value <code class="codeph">ADVISOR_UNUSED</code>, then the setting is not changed.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You want to create a template named <code class="codeph">MY_TEMPLATE</code>.</p>
</li>
<li>
<p>You want to set naming conventions for indexes and materialized views that are recommended by tasks based on <code class="codeph">MY_TEMPLATE</code>.</p>
</li>
<li>
<p>You want to create task <code class="codeph">NEWTASK</code> based on <code class="codeph">MY_TEMPLATE</code>.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To create a template and base a task on this template:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then create a task as a template.</p>
<p>For example, create a template named <code class="codeph">MY_TEMPLATE</code> as follows:</p>
<pre dir="ltr">VARIABLE template_id NUMBER;
VARIABLE template_name VARCHAR2(255);
EXECUTE :template_name := &#39;MY_TEMPLATE&#39;;
BEGIN 
  DBMS_ADVISOR.CREATE_TASK (
    &#39;SQL Access Advisor&#39;
,   :template_id
,   :template_name
,   is_template =&gt; &#39;true&#39;
);
END;
</pre></li>
<li>
<p>Set template parameters.</p>
<p>For example, the following statements set the naming conventions for recommended indexes and materialized views:</p>
<pre dir="ltr">-- set naming conventions for recommended indexes/mvs
BEGIN 
  DBMS_ADVISOR.SET_TASK_PARAMETER ( 
    :template_name
,   &#39;INDEX_NAME_TEMPLATE&#39;
,   &#39;SH_IDX$$_&lt;SEQ&gt;&#39;
);
END;

BEGIN 
  DBMS_ADVISOR.SET_TASK_PARAMETER (
    :template_name
,   &#39;MVIEW_NAME_TEMPLATE&#39;
,   &#39;SH_MV$$_&lt;SEQ&gt;&#39;
);
END;
</pre></li>
<li>
<p>Create a task based on a pre-existing template.</p>
<p>For example, enter the following commands to create <code class="codeph">NEWTASK</code> based on <code class="codeph">MY_TEMPLATE</code>:</p>
<pre dir="ltr">VARIABLE task_id NUMBER;
VARIABLE task_name VARCHAR2(255);
EXECUTE :task_name := &#39;NEWTASK&#39;;
BEGIN 
  DBMS_ADVISOR.CREATE_TASK (
    &#39;SQL Access Advisor&#39;
,   :task_id
,   :task_name
,   template=&gt;&#39;MY_TEMPLATE&#39;
);
END;
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-E755363F-CC44-4D30-8F64-CF9B973EFB4D__GUID-57DE0317-3D91-435D-AB6A-EFC2A0B80C5B">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn about the <code class="codeph">CREATE_TASK</code> procedure and its parameters</p>
</li>
<li>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn about the <code class="codeph">SET_TASK_PARAMETER</code> procedure and its parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94792"></a>
<div class="props_rev_3"><a id="GUID-D3604ECF-AF4E-42A2-8551-252B26672ACA"></a>
<h3 id="TGSQL-GUID-D3604ECF-AF4E-42A2-8551-252B26672ACA" class="sect3">Terminating SQL Access Advisor Task Execution</h3>
<div>
<p>SQL Access Advisor enables you to interrupt the recommendation process or allow it to complete. An interruption signals SQL Access Advisor to stop processing and marks the task as <code class="codeph">INTERRUPTED</code>. At that point, you may update recommendation attributes and generate scripts.</p>
<p>Intermediate results represent recommendations for the workload contents up to that point in time. If recommendations must be sensitive to the entire workload, then Oracle recommends that you let the task complete. Additionally, recommendations made by the advisor early in the recommendation process do not contain base table partitioning recommendations. The partitioning analysis requires a large part of the workload to be processed before it can determine whether partitioning would be beneficial. Therefore, if SQL Access Advisor detects a benefit, then only later intermediate results contain base table partitioning recommendations.</p>
<p>This section describes two ways to terminate SQL Access Advisor task execution:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-476D465A-1BCC-408E-9FB4-A04D6B7BD82D">Interrupting SQL Access Advisor Tasks</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-38CF8060-4574-4A9A-9351-C6ADE91193A6">Canceling SQL Access Advisor Tasks</a></p>
</li>
</ul>
</div>
<a id="TGSQL94794"></a><a id="TGSQL94793"></a>
<div class="props_rev_3"><a id="GUID-476D465A-1BCC-408E-9FB4-A04D6B7BD82D"></a>
<h4 id="TGSQL-GUID-476D465A-1BCC-408E-9FB4-A04D6B7BD82D" class="sect4">Interrupting SQL Access Advisor Tasks</h4>
<div>
<div class="section">
<p>The <code class="codeph">DBMS_ADVISOR.INTERRUPT_TASK</code> procedure causes a SQL Access Advisor task execution to terminate as if it had reached its normal end. Thus, you can see any recommendations that have been formed up to the point of the interruption. An interrupted task cannot be restarted. The syntax is as follows:</p>
<pre dir="ltr">DBMS_ADVISOR.INTERRUPT_TASK (task_name IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Long-running task <code class="codeph">MYTASK</code> is currently executing.</p>
</li>
<li>
<p>You want to interrupt this task, and then view the recommendations.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To interrupt a currently executing task:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as <code class="codeph">sh</code>, and then interrupt the task.</p>
<p>For example, create a template named <code class="codeph">MY_TEMPLATE</code> as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.INTERRUPT_TASK (&#39;MYTASK&#39;);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-476D465A-1BCC-408E-9FB4-A04D6B7BD82D__GUID-BF8CEBFB-E7E1-44A2-8EA7-8587317A4D84">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS65135" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65135"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn about the <code class="codeph">INTERRUPT_TASK</code> procedure</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94796"></a><a id="TGSQL94795"></a>
<div class="props_rev_3"><a id="GUID-38CF8060-4574-4A9A-9351-C6ADE91193A6"></a>
<h4 id="TGSQL-GUID-38CF8060-4574-4A9A-9351-C6ADE91193A6" class="sect4">Canceling SQL Access Advisor Tasks</h4>
<div>
<div class="section">
<p>You can stop task execution by calling the <code class="codeph">DBMS_ADVISOR.CANCEL_TASK</code> procedure and passing in the task name for this recommendation process. SQL Access Advisor may take a few seconds to respond to this request. Because all advisor task procedures are synchronous, to cancel an operation, you must use a separate database session. If you use <code class="codeph">CANCEL_TASK</code>, then SQL Access Advisor makes no recommendations.</p>
<p>A cancel command effective restores the task to its condition before the start of the canceled operation. Therefore, a canceled task or data object cannot be restarted. However, you can reset the task using <code class="codeph">DBMS_ADVISOR.RESET_TASK</code>, and then execute it again. The <code class="codeph">CANCEL_TASK</code> syntax is as follows:</p>
<pre dir="ltr">DBMS_ADVISOR.CANCEL_TASK (task_name   IN  VARCHAR2);
</pre>
<p>The <code class="codeph">RESET_TASK</code> procedure resets a task to its initial starting point, which has the effect of removing all recommendations and intermediate data from the task. The task status is set to <code class="codeph">INITIAL</code>. The syntax is as follows:</p>
<pre dir="ltr">DBMS_ADVISOR.RESET_TASK (task_name     IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Long-running task <code class="codeph">MYTASK</code> is currently executing. This task is set to make partitioning recommendations.</p>
</li>
<li>
<p>You want to cancel this task, and then reset it so that the task makes only index recommendations.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To cancel a currently executing task:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then cancel the task.</p>
<p>For example, create a template named <code class="codeph">MY_TEMPLATE</code> as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.CANCEL_TASK (&#39;MYTASK&#39;);
</pre></li>
<li>
<p>Reset the task.</p>
<p>For example, execute the <code class="codeph">RESET_TASK</code> procedure as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.RESET_TASK(&#39;MYTASK&#39;);
</pre></li>
<li>
<p>Set task parameters.</p>
<p>For example, change the analysis scope to <code class="codeph">INDEX</code> as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.SET_TASK_PARAMETER(:task_name, &#39;ANALYSIS_SCOPE&#39;, &#39;INDEX&#39;);
</pre></li>
<li>
<p>Execute the task.</p>
<p>For example, execute <code class="codeph">MYTASK</code> as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.EXECUTE_TASK (&#39;MYTASK&#39;);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-38CF8060-4574-4A9A-9351-C6ADE91193A6__GUID-D41B388F-C46B-4DA0-9F2F-BE7112546183">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ARPLS65143" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65143"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn more about the <code class="codeph">RESET_TASK</code> procedure and its parameters</p>
</li>
<li>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn more about the <code class="codeph">CANCEL_TASK</code> procedure and its parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL94798"></a><a id="TGSQL94797"></a>
<div class="props_rev_3"><a id="GUID-D76A49FA-73F1-4D54-80A1-A88B3C5E4A39"></a>
<h3 id="TGSQL-GUID-D76A49FA-73F1-4D54-80A1-A88B3C5E4A39" class="sect3">Deleting SQL Access Advisor Tasks</h3>
<div>
<div class="section">
<p>The <code class="codeph">DBMS_ADVISOR.DELETE_TASK</code> procedure deletes existing SQL Access Advisor tasks from the repository. The syntax is as follows:</p>
<pre dir="ltr">DBMS_ADVISOR.DELETE_TASK (task_name  IN VARCHAR2);
</pre>
<p>If a task is linked to an STS workload, and if you want to delete the task or workload, then you must remove the link between the task and the workload using the <code class="codeph">DELETE_STS_REF</code> procedure. The following example deletes the link between task <code class="codeph">MYTASK</code> and the current user&#39;s SQL tuning set <code class="codeph">MY_STS_WORKLOAD</code>:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.DELETE_STS_REF(&#39;MYTASK&#39;, null, &#39;MY_STS_WORKLOAD&#39;);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>User <code class="codeph">sh</code> currently owns multiple SQL Access Advisor tasks.</p>
</li>
<li>
<p>You want to delete <code class="codeph">MYTASK</code>.</p>
</li>
<li>
<p>The task <code class="codeph">MYTASK</code> is currently linked to workload <code class="codeph">MY_STS_WORKLOAD</code>.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To delete a SQL Access Advisor task:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then query existing SQL Access Advisor tasks.</p>
<p>For example, query the data dictionary as follows (sample output included):</p>
<pre dir="ltr">SELECT TASK_NAME 
FROM   USER_ADVISOR_TASKS 
WHERE  ADVISOR_NAME = &#39;SQL Access Advisor&#39;;
 
TASK_NAME
-------------------------
MYTASK
NEWTASK
</pre></li>
<li>
<p>Delete the link between <code class="codeph">MYTASK</code> and <code class="codeph">MY_STS_WORKLOAD</code>.</p>
<p>For example, delete the reference as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.DELETE_STS_REF(&#39;MYTASK&#39;, null, &#39;MY_STS_WORKLOAD&#39;);
</pre></li>
<li>
<p>Delete the desired task.</p>
<p>For example, delete <code class="codeph">MYTASK</code> as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.DELETE_TASK(&#39;MYTASK&#39;);
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-D76A49FA-73F1-4D54-80A1-A88B3C5E4A39__GUID-F60952DC-FAB3-44E7-B909-9963A264925C">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS65113" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65113"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> to learn more about the <code class="codeph">DELETE_TASK</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94800"></a><a id="TGSQL94799"></a>
<div class="props_rev_3"><a id="GUID-D5D23218-BD51-4999-86D8-6B5B9563A34B"></a>
<h3 id="TGSQL-GUID-D5D23218-BD51-4999-86D8-6B5B9563A34B" class="sect3">Marking SQL Access Advisor Recommendations</h3>
<div>
<div class="section">
<p>By default, all SQL Access Advisor recommendations are ready to be implemented. However, you can choose to skip or exclude selected recommendations by using the <code class="codeph">DBMS_ADVISOR.MARK_RECOMMENDATION</code> procedure. <code class="codeph">MARK_RECOMMENDATION</code> enables you to annotate a recommendation with a <code class="codeph">REJECT</code> or <code class="codeph">IGNORE</code> setting, which causes the <code class="codeph">GET_TASK_SCRIPT</code> to skip it when producing the implementation procedure.</p>
<p>If SQL Access Advisor makes a recommendation to partition one or multiple previously unpartitioned base tables, then consider carefully before skipping this recommendation. Changing a table&#39;s partitioning scheme affects the cost of all queries, indexes, and materialized views defined on the table. Therefore, if you skip the partitioning recommendation, then the advisor&#39;s remaining recommendations on this table are no longer optimal. To see recommendations on your workload that do not contain partitioning, reset the advisor task and rerun it with the <code class="codeph">ANALYSIS_SCOPE</code> parameter changed to exclude partitioning recommendations.</p>
<p>The syntax is as follows:</p>
<pre dir="ltr">DBMS_ADVISOR.MARK_RECOMMENDATION (
   task_name          IN VARCHAR2
   id                 IN NUMBER,
   action             IN VARCHAR2);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You are reviewing the recommendations as described in tutorial <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851" title="You can view each recommendation generated by SQL Access Advisor using several data dictionary views.">Viewing SQL Access Advisor Task Results</a>&#34;</span>.</p>
</li>
<li>
<p>You want to reject the first recommendation, which partitions a table.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To mark a recommendation:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then mark the recommendation.</p>
<p>For example, reject recommendation <code class="codeph">1</code> as follows:</p>
<pre dir="ltr">EXECUTE DBMS_ADVISOR.MARK_RECOMMENDATION(&#39;MYTASK&#39;, 1, &#39;REJECT&#39;);
</pre>
<p>This recommendation and any dependent recommendations do not appear in the script.</p>
</li>
<li>
<p>Generate the script as explained in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-E92AFB9E-8977-4A7E-916E-0886C347B134" title="You can use the procedure DBMS_ADVISOR.GET_TASK_SCRIPT to create a script of the SQL statements for the SQL Access Advisor recommendations. The script is an executable SQL file that can contain DROP, CREATE, and ALTER statements.">Generating and Executing a Task Script</a>&#34;</span>.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-D5D23218-BD51-4999-86D8-6B5B9563A34B__GUID-F98761B9-314C-443D-9175-415AFFA9E360">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS350" target="_blank" href="../ARPLS/d_advis.htm#ARPLS350"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn more about the <code class="codeph">MARK_RECOMMENDATIONS</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL94802"></a><a id="TGSQL94801"></a>
<div class="props_rev_3"><a id="GUID-6824A691-AD3C-4C40-9ECE-E18F327E3B0A"></a>
<h3 id="TGSQL-GUID-6824A691-AD3C-4C40-9ECE-E18F327E3B0A" class="sect3">Modifying SQL Access Advisor Recommendations</h3>
<div>
<div class="section">
<p>Using the <code class="codeph">UPDATE_REC_ATTRIBUTES</code> procedure, SQL Access Advisor names and assigns ownership to new objects such as indexes and materialized views during analysis. However, it does not necessarily choose appropriate names, so you may manually set the owner, name, and tablespace values for new objects. For recommendations referencing existing database objects, owner and name values cannot be changed. The syntax is as follows:</p>
<pre dir="ltr">DBMS_ADVISOR.UPDATE_REC_ATTRIBUTES (
   task_name            IN VARCHAR2
   rec_id               IN NUMBER,
   action_id            IN NUMBER,
   attribute_name       IN VARCHAR2,
   value                IN VARCHAR2);
</pre>
<p>The <code class="codeph">attribute_name</code> parameter can take the following values:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OWNER</code></p>
<p>Specifies the owner name of the recommended object.</p>
</li>
<li>
<p><code class="codeph">NAME</code></p>
<p>Specifies the name of the recommended object.</p>
</li>
<li>
<p><code class="codeph">TABLESPACE</code></p>
<p>Specifies the tablespace of the recommended object.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You are reviewing the recommendations as described in tutorial <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-34B6474B-7C8A-4EF6-BC75-ACAB07B1A851" title="You can view each recommendation generated by SQL Access Advisor using several data dictionary views.">Viewing SQL Access Advisor Task Results</a>&#34;</span>.</p>
</li>
<li>
<p>You want to change the tablespace for recommendation 1, action 1 to <code class="codeph">SH_MVIEWS</code>.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To mark a recommendation:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as user <code class="codeph">sh</code>, and then update the recommendation attribute.</p>
<p>For example, change the tablespace name to <code class="codeph">SH_MVIEWS</code> as follows:</p>
<pre dir="ltr">BEGIN 
  DBMS_ADVISOR.UPDATE_REC_ATTRIBUTES (
    &#39;MYTASK&#39;
,   1
,   1
,   &#39;TABLESPACE&#39;
,   &#39;SH_MVIEWS&#39;
);
END;
</pre></li>
<li>
<p>Generate the script as explained in <span class="q">&#34;<a href="tgsql_sqlaccess.htm#GUID-E92AFB9E-8977-4A7E-916E-0886C347B134" title="You can use the procedure DBMS_ADVISOR.GET_TASK_SCRIPT to create a script of the SQL statements for the SQL Access Advisor recommendations. The script is an executable SQL file that can contain DROP, CREATE, and ALTER statements.">Generating and Executing a Task Script</a>&#34;</span>.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-6824A691-AD3C-4C40-9ECE-E18F327E3B0A__GUID-4431A596-1A4B-4F01-85F1-AF0A3D05E358">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS65163" target="_blank" href="../ARPLS/d_advis.htm#ARPLS65163"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> to learn more about the <code class="codeph">UPDATE_REC_ATTRIBUTES</code> procedure and its parameters</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL94803"></a>
<div class="props_rev_3"><a id="GUID-0A74A15A-E1D1-40EA-A7F8-2EF775C8D426"></a>
<h2 id="TGSQL-GUID-0A74A15A-E1D1-40EA-A7F8-2EF775C8D426" class="sect2">SQL Access Advisor Examples</h2>
<div>
<p>Oracle Database provides a script that contains several SQL Access Advisor examples that you can run on a test database. The script is named <span class="italic"><code class="codeph">ORACLE_HOME</code></span><code class="codeph">/rdbms/demo/aadvdemo.sql</code>.</p>
</div>
</div>
<a id="TGSQL594"></a>
<div class="props_rev_3"><a id="GUID-1C7083BD-2AFC-43EA-B940-13D2F77935DF"></a>
<h2 id="TGSQL-GUID-1C7083BD-2AFC-43EA-B940-13D2F77935DF" class="sect2">SQL Access Advisor Reference</h2>
<div>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-F528E127-B00C-4787-AE2E-257B139DC3E5">Action Attributes in the DBA_ADVISOR_ACTIONS View</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-B83F372B-CC15-4A0B-B1F1-E80CF54B8499">Categories for SQL Access Advisor Task Parameters</a></p>
</li>
<li>
<p><a href="tgsql_sqlaccess.htm#GUID-9CB98A66-9651-49BE-A3D1-C01D43D79FA9">SQL Access Advisor Constants</a></p>
</li>
</ul>
</div>
<a id="TGSQL94805"></a><a id="TGSQL94804"></a>
<div class="props_rev_3"><a id="GUID-F528E127-B00C-4787-AE2E-257B139DC3E5"></a>
<h3 id="TGSQL-GUID-F528E127-B00C-4787-AE2E-257B139DC3E5" class="sect3">Action Attributes in the DBA_ADVISOR_ACTIONS View</h3>
<div>
<div class="section">
<p><a href="tgsql_sqlaccess.htm#GUID-F528E127-B00C-4787-AE2E-257B139DC3E5__CHDHEGEI" title="SQLAccess Advisor Action Attributes">Table 21-4</a> maps SQL Access Advisor actions to attribute columns in the <code class="codeph">DBA_ADVISOR_ACTIONS</code> view. In the table, <code class="codeph">MV</code> refers to a materialized view.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-F528E127-B00C-4787-AE2E-257B139DC3E5__CHDHEGEI">
<p class="titleintable">Table 21-4 SQL Access Advisor Action Attributes</p>
<table class="cellalignment4813" title="SQL Access Advisor Action Attributes" summary="SQLAccess Advisor Action Attributes">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4917" id="d113098e5062">Action</th>
<th class="cellalignment4917" id="d113098e5065">ATTR1 Column</th>
<th class="cellalignment4875" id="d113098e5068">ATTR2 Column</th>
<th class="cellalignment4917" id="d113098e5071">ATTR3 Column</th>
<th class="cellalignment4875" id="d113098e5074">ATTR4 Column</th>
<th class="cellalignment4875" id="d113098e5077">ATTR5 Column</th>
<th class="cellalignment4875" id="d113098e5080">ATTR6 Column</th>
<th class="cellalignment4918" id="d113098e5083">NUM_ATTR1 Column</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5088" headers="d113098e5062">
<p><code class="codeph">CREATE</code> <code class="codeph">INDEX</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5088 d113098e5065">
<p>Index name</p>
</td>
<td class="cellalignment4879" headers="d113098e5088 d113098e5068">
<p>Index tablespace</p>
</td>
<td class="cellalignment4919" headers="d113098e5088 d113098e5071">
<p>Target table</p>
</td>
<td class="cellalignment4879" headers="d113098e5088 d113098e5074">
<p><code class="codeph">BITMAP</code> or<code class="codeph">BTREE</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5088 d113098e5077">
<p>Index column list / expression</p>
</td>
<td class="cellalignment4879" headers="d113098e5088 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5088 d113098e5083">
<p>Storage size in bytes for the index</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5121" headers="d113098e5062">
<p><code class="codeph">CREATE</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5121 d113098e5065">
<p>MV name</p>
</td>
<td class="cellalignment4879" headers="d113098e5121 d113098e5068">
<p>MV tablespace</p>
</td>
<td class="cellalignment4919" headers="d113098e5121 d113098e5071">
<p><code class="codeph">REFRESH</code> <code class="codeph">COMPLETE,</code> <code class="codeph">REFRESH FAST</code>,<code class="codeph">REFRESH FORCE</code>, <code class="codeph">NEVER</code> <code class="codeph">REFRESH</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5121 d113098e5074">
<p><code class="codeph">ENABLE</code> <code class="codeph">QUERY</code> <code class="codeph">REWRITE</code>, <code class="codeph">DISABLE QUERY</code> <code class="codeph">REWRITE</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5121 d113098e5077">
<p>SQL <code class="codeph">SELECT</code> statement</p>
</td>
<td class="cellalignment4879" headers="d113098e5121 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5121 d113098e5083">
<p>Storage size in bytes for the MV</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5185" headers="d113098e5062">
<p><code class="codeph">CREATE</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code> <code class="codeph">LOG</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5185 d113098e5065">
<p>Target table name</p>
</td>
<td class="cellalignment4879" headers="d113098e5185 d113098e5068">
<p>MV log tablespace</p>
</td>
<td class="cellalignment4919" headers="d113098e5185 d113098e5071">
<p><code class="codeph">ROWID</code> <code class="codeph">PRIMARY</code> <code class="codeph">KEY</code>,<code class="codeph">SEQUENCE</code> <code class="codeph">OBJECT</code> <code class="codeph">ID</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5185 d113098e5074">
<p><code class="codeph">INCLUDING</code> <code class="codeph">NEW</code> <code class="codeph">VALUES</code>, <code class="codeph">EXCLUDING</code> <code class="codeph">NEW</code> <code class="codeph">VALUES</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5185 d113098e5077">
<p>Table column list</p>
</td>
<td class="cellalignment4879" headers="d113098e5185 d113098e5080">
<p>Partitioning subclauses</p>
</td>
<td class="cellalignment4920" headers="d113098e5185 d113098e5083">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5252" headers="d113098e5062">
<p><code class="codeph">CREATE</code> <code class="codeph">REWRITE</code> <code class="codeph">EQUIVALENCE</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5252 d113098e5065">
<p>Name of equivalence</p>
</td>
<td class="cellalignment4879" headers="d113098e5252 d113098e5068">
<p>Checksum value</p>
</td>
<td class="cellalignment4919" headers="d113098e5252 d113098e5071">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5252 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5252 d113098e5077">
<p>Source SQL statement</p>
</td>
<td class="cellalignment4879" headers="d113098e5252 d113098e5080">
<p>Equivalent SQL statement</p>
</td>
<td class="cellalignment4920" headers="d113098e5252 d113098e5083">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5284" headers="d113098e5062">
<p><code class="codeph">DROP</code> <code class="codeph">INDEX</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5284 d113098e5065">
<p>Index name</p>
</td>
<td class="cellalignment4879" headers="d113098e5284 d113098e5068">
<p>Unused</p>
</td>
<td class="cellalignment4919" headers="d113098e5284 d113098e5071">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5284 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5284 d113098e5077">
<p>Index columns</p>
</td>
<td class="cellalignment4879" headers="d113098e5284 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5284 d113098e5083">
<p>Storage size in bytes for the index</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5313" headers="d113098e5062">
<p><code class="codeph">DROP</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5313 d113098e5065">
<p>MV name</p>
</td>
<td class="cellalignment4879" headers="d113098e5313 d113098e5068">
<p>Unused</p>
</td>
<td class="cellalignment4919" headers="d113098e5313 d113098e5071">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5313 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5313 d113098e5077">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5313 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5313 d113098e5083">
<p>Storage size in bytes for the MV</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5345" headers="d113098e5062">
<p><code class="codeph">DROP</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code> <code class="codeph">LOG</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5345 d113098e5065">
<p>Target table name</p>
</td>
<td class="cellalignment4879" headers="d113098e5345 d113098e5068">
<p>Unused</p>
</td>
<td class="cellalignment4919" headers="d113098e5345 d113098e5071">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5345 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5345 d113098e5077">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5345 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5345 d113098e5083">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5380" headers="d113098e5062">
<p><code class="codeph">PARTITION</code> <code class="codeph">TABLE</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5380 d113098e5065">
<p>Table name</p>
</td>
<td class="cellalignment4879" headers="d113098e5380 d113098e5068">
<p><code class="codeph">RANGE</code>, <code class="codeph">INTERVAL</code>, <code class="codeph">LIST</code>, <code class="codeph">HASH</code>, <code class="codeph">RANGE-HASH</code>, <code class="codeph">RANGE-LIST</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5380 d113098e5071">
<p>Partition key for partitioning (column name or list of column names)</p>
</td>
<td class="cellalignment4879" headers="d113098e5380 d113098e5074">
<p>Partition key for subpartitioning (column name or list of column names)</p>
</td>
<td class="cellalignment4879" headers="d113098e5380 d113098e5077">
<p>SQL <code class="codeph">PARTITION</code> clause</p>
</td>
<td class="cellalignment4879" headers="d113098e5380 d113098e5080">
<p>SQL <code class="codeph">SUBPARTITION</code> clause</p>
</td>
<td class="cellalignment4920" headers="d113098e5380 d113098e5083">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5431" headers="d113098e5062">
<p><code class="codeph">PARTITION</code> <code class="codeph">INDEX</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5431 d113098e5065">
<p>Index name</p>
</td>
<td class="cellalignment4879" headers="d113098e5431 d113098e5068">
<p><code class="codeph">LOCAL</code>, <code class="codeph">RANGE</code>, <code class="codeph">HASH</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5431 d113098e5071">
<p>Partition key for partitioning (list of column names)</p>
</td>
<td class="cellalignment4879" headers="d113098e5431 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5431 d113098e5077">
<p>SQL <code class="codeph">PARTITION</code> clause</p>
</td>
<td class="cellalignment4879" headers="d113098e5431 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5431 d113098e5083">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5470" headers="d113098e5062">
<p><code class="codeph">PARTITION</code> <code class="codeph">ON</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5470 d113098e5065">
<p>MV name</p>
</td>
<td class="cellalignment4879" headers="d113098e5470 d113098e5068">
<p><code class="codeph">RANGE</code>, <code class="codeph">INTERVAL</code>, <code class="codeph">LIST</code>, <code class="codeph">HASH</code>, <code class="codeph">RANGE-HASH</code>, <code class="codeph">RANGE-LIST</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5470 d113098e5071">
<p>Partition key for partitioning (column name or list of column names)</p>
</td>
<td class="cellalignment4879" headers="d113098e5470 d113098e5074">
<p>Partition key for subpartitioning (column name or list of column names)</p>
</td>
<td class="cellalignment4879" headers="d113098e5470 d113098e5077">
<p>SQL <code class="codeph">SUBPARTITION</code> clause</p>
</td>
<td class="cellalignment4879" headers="d113098e5470 d113098e5080">
<p>SQL <code class="codeph">SUBPARTITION</code> clause</p>
</td>
<td class="cellalignment4920" headers="d113098e5470 d113098e5083">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5527" headers="d113098e5062">
<p><code class="codeph">RETAIN</code> <code class="codeph">INDEX</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5527 d113098e5065">
<p>Index name</p>
</td>
<td class="cellalignment4879" headers="d113098e5527 d113098e5068">
<p>Unused</p>
</td>
<td class="cellalignment4919" headers="d113098e5527 d113098e5071">
<p>Target table</p>
</td>
<td class="cellalignment4879" headers="d113098e5527 d113098e5074">
<p><code class="codeph">BITMAP</code> or <code class="codeph">BTREE</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5527 d113098e5077">
<p>Index columns</p>
</td>
<td class="cellalignment4879" headers="d113098e5527 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5527 d113098e5083">
<p>Storage size in bytes for the index</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5561" headers="d113098e5062">
<p><code class="codeph">RETAIN</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5561 d113098e5065">
<p>MV name</p>
</td>
<td class="cellalignment4879" headers="d113098e5561 d113098e5068">
<p>Unused</p>
</td>
<td class="cellalignment4919" headers="d113098e5561 d113098e5071">
<p><code class="codeph">REFRESH</code> <code class="codeph">COMPLETE</code> or <code class="codeph">REFRESH</code> <code class="codeph">FAST</code></p>
</td>
<td class="cellalignment4879" headers="d113098e5561 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5561 d113098e5077">
<p>SQL <code class="codeph">SELECT</code> statement</p>
</td>
<td class="cellalignment4879" headers="d113098e5561 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5561 d113098e5083">
<p>Storage size in bytes for the MV</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4919" id="d113098e5606" headers="d113098e5062">
<p><code class="codeph">RETAIN</code> <code class="codeph">MATERIALIZED</code> <code class="codeph">VIEW</code> <code class="codeph">LOG</code></p>
</td>
<td class="cellalignment4919" headers="d113098e5606 d113098e5065">
<p>Target table name</p>
</td>
<td class="cellalignment4879" headers="d113098e5606 d113098e5068">
<p>Unused</p>
</td>
<td class="cellalignment4919" headers="d113098e5606 d113098e5071">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5606 d113098e5074">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5606 d113098e5077">
<p>Unused</p>
</td>
<td class="cellalignment4879" headers="d113098e5606 d113098e5080">
<p>Unused</p>
</td>
<td class="cellalignment4920" headers="d113098e5606 d113098e5083">
<p>Unused</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TGSQL94807"></a><a id="TGSQL94806"></a>
<div class="props_rev_3"><a id="GUID-B83F372B-CC15-4A0B-B1F1-E80CF54B8499"></a>
<h3 id="TGSQL-GUID-B83F372B-CC15-4A0B-B1F1-E80CF54B8499" class="sect3">Categories for SQL Access Advisor Task Parameters</h3>
<div>
<div class="section">
<p><a href="tgsql_sqlaccess.htm#GUID-B83F372B-CC15-4A0B-B1F1-E80CF54B8499__CHDJIJDD" title="Types of Advisor Task Parameters And Their Uses">Table 21-5</a> groups the most relevant SQL Access Advisor task parameters into categories. All task parameters for workload filtering are deprecated.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-B83F372B-CC15-4A0B-B1F1-E80CF54B8499__CHDJIJDD">
<p class="titleintable">Table 21-5 <span class="italic"><span class="bold">Types of Advisor Task Parameters And Their Uses</span></span></p>
<table class="cellalignment4813" title="Types of Advisor Task Parameters And Their Uses" summary="Types of Advisor Task Parameters And Their Uses">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4825" id="d113098e5738">Workload Filtering</th>
<th class="cellalignment4921" id="d113098e5741">Task Configuration</th>
<th class="cellalignment4873" id="d113098e5744">Schema Attributes</th>
<th class="cellalignment4873" id="d113098e5747">Recommendation Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5752" headers="d113098e5738">
<p><code class="codeph">END_TIME</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5752 d113098e5741">
<p><code class="codeph">DAYS_TO_EXPIRE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5752 d113098e5744">
<p><code class="codeph">DEF_INDEX_OWNER</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5752 d113098e5747">
<p><code class="codeph">ANALYSIS_SCOPE</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5769" headers="d113098e5738">
<p><code class="codeph">INVALID_ACTION_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5769 d113098e5741">
<p><code class="codeph">JOURNALING</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5769 d113098e5744">
<p><code class="codeph">DEF_INDEX_TABLESPACE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5769 d113098e5747">
<p><code class="codeph">COMPATIBILITY</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5786" headers="d113098e5738">
<p><code class="codeph">INVALID_MODULE_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5786 d113098e5741">
<p><code class="codeph">REPORT_DATE_FORMAT</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5786 d113098e5744">
<p><code class="codeph">DEF_MVIEW_OWNER</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5786 d113098e5747">
<p><code class="codeph">CREATION_COST</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5803" headers="d113098e5738">
<p><code class="codeph">INVALID_SQLSTRING_LIMIT</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5803 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5803 d113098e5744">
<p><code class="codeph">DEF_MVIEW_TABLESPACE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5803 d113098e5747">
<p><code class="codeph">DML_VOLATILITY</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5817" headers="d113098e5738">
<p><code class="codeph">INVALID_TABLE_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5817 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5817 d113098e5744">
<p><code class="codeph">DEF_MVLOG_TABLESPACE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5817 d113098e5747">
<p><code class="codeph">LIMIT_PARTITION_SCHEMES</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5831" headers="d113098e5738">
<p><code class="codeph">INVALID_USERNAME_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5831 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5831 d113098e5744">
<p><code class="codeph">DEF_PARTITION_TABLESPACE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5831 d113098e5747">
<p><code class="codeph">MODE</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5845" headers="d113098e5738">
<p><code class="codeph">RANKING_MEASURE</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5845 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5845 d113098e5744">
<p><code class="codeph">INDEX_NAME_TEMPLATE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5845 d113098e5747">
<p><code class="codeph">PARTITIONING_TYPES</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5859" headers="d113098e5738">
<p><code class="codeph">SQL_LIMIT</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5859 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5859 d113098e5744">
<p><code class="codeph">MVIEW_NAME_TEMPLATE</code></p>
</td>
<td class="cellalignment4877" headers="d113098e5859 d113098e5747">
<p><code class="codeph">REFRESH_MODE</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5873" headers="d113098e5738">
<p><code class="codeph">START_TIME</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5873 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5873 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5873 d113098e5747">
<p><code class="codeph">STORAGE_CHANGE</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5884" headers="d113098e5738">
<p><code class="codeph">TIME_LIMIT</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5884 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5884 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5884 d113098e5747">
<p><code class="codeph">USE_SEPARATE_TABLESPACES</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5895" headers="d113098e5738">
<p><code class="codeph">VALID_ACTION_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5895 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5895 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5895 d113098e5747">
<p><code class="codeph">WORKLOAD_SCOPE</code></p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5907" headers="d113098e5738">
<p><code class="codeph">VALID_MODULE_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5907 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5907 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5907 d113098e5747">&nbsp;</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5915" headers="d113098e5738">
<p><code class="codeph">VALID_SQLSTRING_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5915 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5915 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5915 d113098e5747">&nbsp;</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5923" headers="d113098e5738">
<p><code class="codeph">VALID_TABLE_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5923 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5923 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5923 d113098e5747">&nbsp;</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4828" id="d113098e5931" headers="d113098e5738">
<p><code class="codeph">VALID_USERNAME_LIST</code></p>
</td>
<td class="cellalignment4922" headers="d113098e5931 d113098e5741">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5931 d113098e5744">&nbsp;</td>
<td class="cellalignment4877" headers="d113098e5931 d113098e5747">&nbsp;</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TGSQL94809"></a><a id="TGSQL94808"></a>
<div class="props_rev_3"><a id="GUID-9CB98A66-9651-49BE-A3D1-C01D43D79FA9"></a>
<h3 id="TGSQL-GUID-9CB98A66-9651-49BE-A3D1-C01D43D79FA9" class="sect3">SQL Access Advisor Constants</h3>
<div>
<div class="section">
<p>You can use the constants shown in <a href="tgsql_sqlaccess.htm#GUID-9CB98A66-9651-49BE-A3D1-C01D43D79FA9__CHDDAHBJ" title="SQLAccess Advisor Constants">Table 21-6</a> with SQL Access Advisor.</p>
<div class="tblformal" id="GUID-9CB98A66-9651-49BE-A3D1-C01D43D79FA9__CHDDAHBJ">
<p class="titleintable">Table 21-6 SQL Access Advisor Constants</p>
<table class="cellalignment4808" title="SQL Access Advisor Constants" summary="SQLAccess Advisor Constants">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4809" id="d113098e6040">Constant</th>
<th class="cellalignment4880" id="d113098e6043">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6048" headers="d113098e6040"><code class="codeph">ADVISOR_ALL</code></td>
<td class="cellalignment4881" headers="d113098e6048 d113098e6043">A value that indicates all possible values. For string parameters, this value is equivalent to the wildcard <code class="codeph">%</code> character.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6057" headers="d113098e6040"><code class="codeph">ADVISOR_CURRENT</code></td>
<td class="cellalignment4881" headers="d113098e6057 d113098e6043">Indicates the current time or active set of elements. Typically, this is used in time parameters.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6063" headers="d113098e6040"><code class="codeph">ADVISOR_DEFAULT</code></td>
<td class="cellalignment4881" headers="d113098e6063 d113098e6043">Indicates the default value. Typically used when setting task or workload parameters.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6069" headers="d113098e6040"><code class="codeph">ADVISOR_UNLIMITED</code></td>
<td class="cellalignment4881" headers="d113098e6069 d113098e6043">A value that represents an unlimited numeric value.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6075" headers="d113098e6040"><code class="codeph">ADVISOR_UNUSED</code></td>
<td class="cellalignment4881" headers="d113098e6075 d113098e6043">A value that represents an unused entity. When a parameter is set to <code class="codeph">ADVISOR_UNUSED</code>, it has no effect on the current operation. A typical use for this constant is to set a parameter as unused for its dependent operations.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6084" headers="d113098e6040"><code class="codeph">SQLACCESS_GENERAL</code></td>
<td class="cellalignment4881" headers="d113098e6084 d113098e6043">Specifies the name of a default SQL Access general-purpose task template. This template sets the <code class="codeph">DML_VOLATILITY</code> task parameter to <code class="codeph">true</code> and <code class="codeph">ANALYSIS_SCOPE</code> to <code class="codeph">INDEX</code>, <code class="codeph">MVIEW</code>.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6105" headers="d113098e6040"><code class="codeph">SQLACCESS_OLTP</code></td>
<td class="cellalignment4881" headers="d113098e6105 d113098e6043">Specifies the name of a default SQL Access OLTP task template. This template sets the <code class="codeph">DML_VOLATILITY</code> task parameter to <code class="codeph">true</code> and <code class="codeph">ANALYSIS_SCOPE</code> to <code class="codeph">INDEX</code>.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6123" headers="d113098e6040"><code class="codeph">SQLACCESS_WAREHOUSE</code></td>
<td class="cellalignment4881" headers="d113098e6123 d113098e6043">Specifies the name of a default SQL Access warehouse task template. This template sets the <code class="codeph">DML_VOLATILITY</code> task parameter to <code class="codeph">false</code> and <code class="codeph">EXECUTION_TYPE</code> to <code class="codeph">INDEX</code>, <code class="codeph">MVIEW</code>.</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4811" id="d113098e6144" headers="d113098e6040"><code class="codeph">SQLACCESS_ADVISOR</code></td>
<td class="cellalignment4881" headers="d113098e6144 d113098e6043">Contains the formal name of SQL Access Advisor. You can specify this name when procedures require the Advisor name as an argument.</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4801">
<tr>
<td class="cellalignment4834">
<table class="cellalignment4806">
<tr>
<td class="cellalignment4805"><a href="tgsql_sqltune.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4805"><a href="tgsql_pt_spm.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4836">
<table class="cellalignment4804">
<tr>
<td class="cellalignment4805"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4805"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4805"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4805"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4805"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4805"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>