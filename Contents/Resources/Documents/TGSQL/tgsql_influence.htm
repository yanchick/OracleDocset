<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-106782"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Influencing%20the%20Optimizer"></a><title>Influencing the Optimizer</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="Optimizer defaults are adequate for most operations, but not all."/>
<meta name="keywords" content="adaptive plans, reporting mode, adaptive query optimization, optimizer hints, OPTIMIZER_FEATURES_ENABLE, hints, optimizer, OPTIMIZER_FEATURES_ENABLE initialization parameter, throughput, optimizer goal, optimizer, goals, controlling, statistics, statistics, optimizer"/>
<meta name="dcterms.created" content="2017-07-24T09:35:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Tuning Guide"/>
<meta name="dcterms.identifier" content="E49106-14"/>
<meta name="dcterms.isVersionOf" content="TGSQL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="tgsql_pt_infl.htm" title="Previous" type="text/html"/>
<link rel="Next" href="tgsql_cursor.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49106-14.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-8758EF88-1CC6-41BD-8581-246702414D1D"></a> <span id="PAGE" style="display:none;">24/40</span> <!-- End Header -->
<a id="TGSQL246"></a>
<h1 id="TGSQL-GUID-8758EF88-1CC6-41BD-8581-246702414D1D" class="sect1"><span class="enumeration_chapter">14</span> Influencing the Optimizer</h1>
<div>
<p>Optimizer defaults are adequate for most operations, but not all.</p>
<p>In some cases you may have information unknown to the optimizer, or need to tune the optimizer for a specific type of statement or workload. In such cases, influencing the optimizer may provide better performance.</p>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_influence.htm#GUID-FD82C6F7-C338-41E3-8AE1-F8ADFB882ECF" title="You can influence the optimizer using several techniques, including SQL profiles, SQL Plan Management, initialization parameters, and hints.">Techniques for Influencing the Optimizer</a></p>
</li>
<li>
<p><a href="tgsql_influence.htm#GUID-125341C0-DBA3-4FAB-B4DB-8857CC36015C" title="This chapter explains which initialization parameters affect optimization, and how to set them.">Influencing the Optimizer with Initialization Parameters</a></p>
</li>
<li>
<p><a href="tgsql_influence.htm#GUID-C558F7CF-446E-4078-B045-0B3BB026CB3C">Influencing the Optimizer with Hints</a></p>
</li>
</ul>
</div>
<a id="TGSQL248"></a><a id="TGSQL247"></a>
<div class="props_rev_3"><a id="GUID-FD82C6F7-C338-41E3-8AE1-F8ADFB882ECF"></a>
<h2 id="TGSQL-GUID-FD82C6F7-C338-41E3-8AE1-F8ADFB882ECF" class="sect2">Techniques for Influencing the Optimizer</h2>
<div>
<p>You can influence the optimizer using several techniques, including SQL profiles, SQL Plan Management, initialization parameters, and hints.</p>
<p>The following figure shows the principal techniques for influencing the optimizer.</p>
<div class="figure" id="GUID-FD82C6F7-C338-41E3-8AE1-F8ADFB882ECF__BBAGGHDF">
<p class="titleinfigure">Figure 14-1 Techniques for Influencing the Optimizer</p>
<img width="449" height="374" src="img/GUID-801E93A2-2653-4294-AC92-B1929487B368-default.png" alt="Description of Figure 14-1 follows" title="Description of Figure 14-1 follows"/><br/>
<a href="img_text/GUID-801E93A2-2653-4294-AC92-B1929487B368-print.htm">Description of &#34;Figure 14-1 Techniques for Influencing the Optimizer&#34;</a></div>
<!-- class="figure" -->
<p>The overlapping squares in the preceding diagram show that SQL plan management uses both initialization parameters and hints. SQL profiles also technically include hints.</p>
<p>You can use the following techniques to influence the optimizer:</p>
<ul style="list-style-type: disc;">
<li>
<p>Initialization parameters</p>
<p>Parameters influence many types of optimizer behavior at the database instance and session level. The most important parameters are covered in <span class="q">&#34;<a href="tgsql_influence.htm#GUID-125341C0-DBA3-4FAB-B4DB-8857CC36015C" title="This chapter explains which initialization parameters affect optimization, and how to set them.">Influencing the Optimizer with Initialization Parameters</a>&#34;</span>.</p>
</li>
<li>
<p>Hints</p>
<p>A <a href="glossary.htm#GUID-7EB56A29-EA19-4D81-B487-6940960A3CDC"><span class="xrefglossterm">hint</span></a> is a commented instruction in a SQL statement. Hints control a wide range of behavior. See <span class="q">&#34;<a href="tgsql_influence.htm#GUID-C558F7CF-446E-4078-B045-0B3BB026CB3C">Influencing the Optimizer with Hints</a>&#34;</span>.</p>
</li>
<li>
<p><code class="codeph">DBMS_STATS</code></p>
<p>This package updates and manages optimizer statistics. The more accurate the statistics, the better the optimizer estimates.</p>
<p>This chapter does not cover <code class="codeph">DBMS_STATS</code>. See <span class="q">&#34;<a href="tgsql_stats.htm#GUID-245F23B2-24AF-44D8-9F12-99FD1215E878" title="This chapter explains basic tasks relating to optimizer statistics management.">Managing Optimizer Statistics: Basic Topics</a>&#34;</span>.</p>
</li>
<li>
<p>SQL profiles</p>
<p>A <a href="glossary.htm#GUID-79F91289-6DD0-49BC-AEA2-3427F5D52F41"><span class="xrefglossterm">SQL profile</span></a> is a database object that contains auxiliary statistics specific to a SQL statement. Conceptually, a SQL profile is to a SQL statement what a set of object-level statistics is to a table or index. A SQL profile can correct suboptimal optimizer estimates discovered during SQL tuning.</p>
<p>This chapter does not cover SQL profiles. See <span class="q">&#34;<a href="tgsql_profiles.htm#GUID-C7FE0936-63B8-46EF-A03E-7E59F704606E" title="A SQL profile is a database object that contains auxiliary statistics specific to a SQL statement. When profiling a SQL statement, SQL Tuning Advisor uses a specific set of bind values as input.A SQL profile is a collection of auxiliary statistics on a query, including all tables and columns referenced in the query. The profile is stored in the data dictionary. The optimizer uses this information during optimization to determine the most optimal plan.Basic tasks include accepting (implementing) a SQL profile, altering it, listing it, and dropping it.As a rule of thumb, implement a SQL profile recommended by SQL Tuning Advisor. You can export a SQL profile from the SYS schema in one database to a staging table, and then import it from the staging table into another database. You can transport a SQL profile to any Oracle database created in the same release or later.">Managing SQL Profiles</a>&#34;</span>.</p>
</li>
<li>
<p>SQL plan management and stored outlines</p>
<p><a href="glossary.htm#GUID-7504D0DE-9297-476C-808B-EDCDB1EF43E0"><span class="xrefglossterm">SQL plan management</span></a> is a preventative mechanism that enables the optimizer to automatically manage execution plans, ensuring that the database uses only known or verified plans.</p>
<p>This chapter does not cover SQL plan management. See <span class="q">&#34;<a href="tgsql_spm.htm#GUID-7024369A-F98D-48E4-921C-C899485C954F" title="You can manage SQL plan baselines using the DBMS_SPM package.">Managing SQL Plan Baselines</a>&#34;</span>.</p>
<div class="infobox-note" id="GUID-FD82C6F7-C338-41E3-8AE1-F8ADFB882ECF__GUID-769C1EA0-1114-4B11-A699-A5267BB78DDE">
<p class="notep1">Note:</p>
<p>A <a href="glossary.htm#GUID-A1BD6A75-73B9-4F68-8FD6-A89057E95ADF"><span class="xrefglossterm">stored outline</span></a> is a legacy technique that serve a similar purpose to SQL plan baselines. See <span class="q">&#34;<a href="tgsql_mig.htm#GUID-E1CBB4DA-2F83-4F4D-845B-CAAA8333DF1A" title="Stored outline migration is the user-initiated process of converting stored outlines to SQL plan baselines. A SQL plan baseline is a set of plans proven to provide optimal performance.">Migrating Stored Outlines to SQL Plan Baselines</a>&#34;</span> to learn how to migrate stored outlines to SQL plan baselines.</p>
</div>
</li>
</ul>
<p>In some cases, multiple techniques optimize the same behavior. For example, you can set optimizer goals using both initialization parameters and hints.</p>
</div>
</div>
<a id="TGSQL250"></a>
<div class="props_rev_3"><a id="GUID-125341C0-DBA3-4FAB-B4DB-8857CC36015C"></a>
<h2 id="TGSQL-GUID-125341C0-DBA3-4FAB-B4DB-8857CC36015C" class="sect2">Influencing the Optimizer with Initialization Parameters</h2>
<div>
<p>This chapter explains which initialization parameters affect optimization, and how to set them.</p>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_influence.htm#GUID-C1C85DEA-3583-40FE-B5BB-6AC8F76FFE34" title="Oracle Database includes several initialization parameters that can influence optimizer behavior.">About Optimizer Initialization Parameters</a></p>
</li>
<li>
<p><a href="tgsql_influence.htm#GUID-325A3D6A-47B8-4AAF-8BB0-4037553D02FE" title="The OPTIMIZER_FEATURES_ENABLE initialization parameter (or hint) controls a set of optimizer-related features, depending on the database release.">Enabling Optimizer Features</a></p>
</li>
<li>
<p><a href="tgsql_influence.htm#GUID-2D3EEFD3-C4C6-4D2F-B24A-8DC0C1E1CBA1" title="The optimizer goal is the prioritization of resource usage by the optimizer.">Choosing an Optimizer Goal</a></p>
</li>
<li>
<p><a href="tgsql_influence.htm#GUID-DAFB7D07-E8B3-4219-A09D-214BD943AFF9" title="In Oracle Database, adaptive query optimization is the process by which the optimizer adapts an execution plan based on statistics collected at run time.">Controlling Adaptive Optimization</a></p>
</li>
</ul>
</div>
<a id="TGSQL252"></a><a id="TGSQL94575"></a><a id="TGSQL10108"></a><a id="TGSQL251"></a>
<div class="props_rev_3"><a id="GUID-C1C85DEA-3583-40FE-B5BB-6AC8F76FFE34"></a>
<h3 id="TGSQL-GUID-C1C85DEA-3583-40FE-B5BB-6AC8F76FFE34" class="sect3">About Optimizer Initialization Parameters</h3>
<div>
<p>Oracle Database includes several initialization parameters that can influence optimizer behavior.</p>
<div class="section">
<p>The following table lists some of the most important initialization parameters.</p>
<div class="tblformal" id="GUID-C1C85DEA-3583-40FE-B5BB-6AC8F76FFE34__BBAIEADC">
<p class="titleintable">Table 14-1 Initialization Parameters That Control Optimizer Behavior</p>
<table class="cellalignment4808" title="Initialization Parameters That Control Optimizer Behavior" summary="This table describes parameters that control optimizer behavior.">
<thead>
<tr class="cellalignment4802">
<th class="cellalignment4866" id="d90543e521">Initialization Parameter</th>
<th class="cellalignment4866" id="d90543e524">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e529" headers="d90543e521">
<p><code class="codeph">CURSOR_SHARING</code></p>
</td>
<td class="cellalignment4867" headers="d90543e529 d90543e524">
<p>Converts literal values in SQL statements to bind variables. Converting the values improves cursor sharing and can affect the execution plans of SQL statements. The optimizer generates the execution plan based on the presence of the bind variables and not the actual literal values.</p>
<p>Set to <code class="codeph">FORCE</code> to enable the creation of a new cursor when sharing an existing cursor, or when the cursor plan is not optimal. Set to <code class="codeph">EXACT</code> to allow only statements with identical text to share the same cursor.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e545" headers="d90543e521">
<p><code class="codeph">DB_FILE_MULTIBLOCK_READ_COUNT</code></p>
</td>
<td class="cellalignment4867" headers="d90543e545 d90543e524">
<p>Specifies the number of blocks that are read in a single I/O during a full table scan or index fast full scan. The optimizer uses the value of this parameter to calculate the cost of full table scans and index fast full scans. Larger values result in a lower cost for full table scans, which may result in the optimizer choosing a full table scan over an index scan.</p>
<p>The default value of this parameter corresponds to the maximum I/O size that the database can perform efficiently. This value is platform-dependent and is 1 MB for most platforms. Because the parameter is expressed in blocks, it is set to a value equal to the maximum I/O size that can be performed efficiently divided by the standard block size. If the number of sessions is extremely large, then the multiblock read count value decreases to avoid the buffer cache getting flooded with too many table scan buffers.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e555" headers="d90543e521">
<p><code class="codeph">OPTIMIZER_ADAPTIVE_REPORTING_ONLY</code></p>
</td>
<td class="cellalignment4867" headers="d90543e555 d90543e524">
<p>Controls the reporting mode for automatic reoptimization and adaptive plans (see <span class="q">&#34;<a href="tgsql_optcncpt.htm#GUID-5A1EB094-1A9E-4B69-9BE5-39BDA2B3253C" title="An adaptive plan enables the optimizer to defer the final plan decision for a statement until execution time.">Adaptive Query Plans</a>&#34;</span>). By default, reporting mode is off (<code class="codeph">false</code>), which means that adaptive optimizations are enabled.</p>
<p>If set to <code class="codeph">true</code>, then adaptive optimizations run in reporting-only mode. In this case, the database gathers information required for an adaptive optimization, but takes no action to change the plan. For example, an adaptive plan always choose the default plan, but the database collects information about which plan the database would use if the parameter were set to <code class="codeph">false</code>. You can view the report by using <code class="codeph">DBMS_XPLAN.DISPLAY_CURSOR</code>.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e587" headers="d90543e521">
<p><code class="codeph">OPTIMIZER_MODE</code></p>
</td>
<td class="cellalignment4867" headers="d90543e587 d90543e524">
<p>Sets the optimizer mode at database instance startup. Possible values are <code class="codeph">ALL_ROWS</code>, <code class="codeph">FIRST_ROWS_</code><span class="italic"><code class="codeph">n</code></span>, and <code class="codeph">FIRST_ROWS</code>.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e607" headers="d90543e521">
<p><code class="codeph">OPTIMIZER_INDEX_CACHING</code></p>
</td>
<td class="cellalignment4867" headers="d90543e607 d90543e524">
<p>Controls the cost analysis of an index probe with a nested loop. The range of values <code class="codeph">0</code> to <code class="codeph">100</code> indicates percentage of index blocks in the buffer cache, which modifies optimizer assumptions about index caching for nested loops and IN-list iterators. A value of <code class="codeph">100</code> infers that 100% of the index blocks are likely to be found in the buffer cache, so the optimizer adjusts the cost of an index probe or nested loop accordingly. Use caution when setting this parameter because execution plans can change in favor of index caching.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e624" headers="d90543e521">
<p><code class="codeph">OPTIMIZER_INDEX_COST_ADJ</code></p>
</td>
<td class="cellalignment4867" headers="d90543e624 d90543e524">
<p>Adjusts the cost of index probes. The range of values is <code class="codeph">1</code> to <code class="codeph">10000</code>. The default value is <code class="codeph">100</code>, which means that the optimizer evaluates indexes as an access path based on the normal cost model. A value of <code class="codeph">10</code> means that the cost of an index access path is one-tenth the normal cost of an index access path.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e644" headers="d90543e521">
<p><code class="codeph">OPTIMIZER_INMEMORY_AWARE</code></p>
</td>
<td class="cellalignment4867" headers="d90543e644 d90543e524">
<p>This parameter enables (<code class="codeph">TRUE</code>) or disables (<code class="codeph">FALSE</code>) all of the in-memory optimizer features, including the cost model for in-memory, table expansion, bloom filters, and so on. Setting the parameter to <code class="codeph">FALSE</code> causes the optimizer to ignore the in-memory property of tables during the optimization of SQL statements.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e661" headers="d90543e521">
<p><code class="codeph">OPTIMIZER_USE_INVISIBLE_INDEXES</code></p>
</td>
<td class="cellalignment4867" headers="d90543e661 d90543e524">
<p>Enables or disables the use of invisible indexes.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e669" headers="d90543e521">
<p><code class="codeph">RESULT_CACHE_MODE</code></p>
</td>
<td class="cellalignment4867" headers="d90543e669 d90543e524">
<p>Controls whether the database uses the SQL query result cache for all queries, or only for the queries that are annotated with the result cache hint. When set to <code class="codeph">MANUAL</code> (the default), you must use the <code class="codeph">RESULT_CACHE</code> hint to specify that a specific result is to be stored in the cache. When set to <code class="codeph">FORCE</code>, the database stores all results in the cache.</p>
<p>When setting this parameter, consider how the result cache handles PL/SQL functions. The database invalidates query results in the result cache using the same mechanism that tracks data dependencies for PL/SQL functions, but otherwise permits caching of queries that contain PL/SQL functions. Because PL/SQL function result cache invalidation does not track all kinds of dependencies (such as on sequences, <code class="codeph">SYSDATE</code>, <code class="codeph">SYS_CONTEXT</code>, and package variables), indiscriminate use of the query result cache on queries calling such functions can result in changes to results, that is, incorrect results. Thus, consider correctness and performance when choosing to enable the result cache, especially when setting <code class="codeph">RESULT_CACHE_MODE</code> to <code class="codeph">FORCE</code>.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e700" headers="d90543e521">
<p><code class="codeph">RESULT_CACHE_MAX_SIZE</code></p>
</td>
<td class="cellalignment4867" headers="d90543e700 d90543e524">
<p>Changes the memory allocated to the result cache. If you set this parameter to <code class="codeph">0</code>, then the result cache is disabled. The value of this parameter is rounded to the largest multiple of 32 KB that is not greater than the specified value. If the rounded value is <code class="codeph">0</code>, then the feature is disabled.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e714" headers="d90543e521">
<p><code class="codeph">RESULT_CACHE_MAX_RESULT</code></p>
</td>
<td class="cellalignment4867" headers="d90543e714 d90543e524">
<p>Specifies the maximum amount of cache memory that any single result can use. The default value is 5%, but you can specify any percentage value between <code class="codeph">1</code> and <code class="codeph">100</code>.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e729" headers="d90543e521">
<p><code class="codeph">RESULT_CACHE_REMOTE_EXPIRATION</code></p>
</td>
<td class="cellalignment4867" headers="d90543e729 d90543e524">
<p>Specifies the number of minutes for which a result that depends on remote database objects remains valid. The default is <code class="codeph">0</code>, which implies that the database should not cache results using remote objects. Setting this parameter to a nonzero value can produce stale answers, such as if a remote database modifies a table that is referenced in a result.</p>
</td>
</tr>
<tr class="cellalignment4802">
<td class="cellalignment4867" id="d90543e740" headers="d90543e521">
<p><code class="codeph">STAR_TRANSFORMATION_ENABLED</code></p>
</td>
<td class="cellalignment4867" headers="d90543e740 d90543e524">
<p>Enables the optimizer to cost a star transformation for star queries (if <code class="codeph">true</code>). The star transformation combines the bitmap indexes on the various fact table columns. See <a class="olink DWHSG9070" target="_blank" href="../DWHSG/schemas.htm#DWHSG9070"><span><cite>Oracle Database Data Warehousing Guide</cite></span></a>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infoboxnotealso" id="GUID-C1C85DEA-3583-40FE-B5BB-6AC8F76FFE34__GUID-BFFC3C67-0C50-4725-BA1C-23BE1A00E944">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink REFRN001" target="_blank" href="../REFRN/GUID-6F1C3203-0AA0-4AF1-921C-A027DD7CB6A9.htm#REFRN001"><span><cite>Oracle Database Reference</cite></span></a> for complete information about the preceding initialization parameters</p>
</li>
<li>
<p><a class="olink TGDBA616" target="_blank" href="../TGDBA/tune_result_cache.htm#TGDBA616"><span><cite>Oracle Database Performance Tuning Guide</cite></span></a> to learn how to tune the query result cache</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL254"></a><a id="TGSQL253"></a>
<div class="props_rev_3"><a id="GUID-325A3D6A-47B8-4AAF-8BB0-4037553D02FE"></a>
<h3 id="TGSQL-GUID-325A3D6A-47B8-4AAF-8BB0-4037553D02FE" class="sect3">Enabling Optimizer Features</h3>
<div>
<p>The <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> initialization parameter (or hint) controls a set of optimizer-related features, depending on the database release.</p>
<div class="section">
<p>The parameter accepts one of a list of valid string values corresponding to the release numbers, such as <code class="codeph">11.2.0.4</code> or <code class="codeph">12.1.0.2</code>. You can use this parameter to preserve the old behavior of the optimizer after a database upgrade. For example, if you upgrade Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.4) to Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2), then the default value of the <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> parameter changes from <code class="codeph">11.2.0.4</code> to <code class="codeph">12.1.0.2</code>.</p>
<p>For backward compatibility, you may not want the execution plans to change because of new optimizer features in a new release. In such cases, you can set <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> to an earlier version. If you upgrade to a new release, and if you <span class="italic">want</span> to enable the features in the new release, then you do <span class="italic">not</span> need to explicitly set the <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> initialization parameter.</p>
<div class="infobox-note" id="GUID-325A3D6A-47B8-4AAF-8BB0-4037553D02FE__GUID-5D64CCA8-8994-4E55-B850-D675F102F70A">
<p class="notep1">Caution:</p>
<p>Oracle does not recommend explicitly setting the <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> initialization parameter to an earlier release. To avoid SQL performance regression that may result from execution plan changes, consider using SQL plan management instead. See <span class="q">&#34;<a href="tgsql_spm.htm#GUID-7024369A-F98D-48E4-921C-C899485C954F" title="You can manage SQL plan baselines using the DBMS_SPM package.">Managing SQL Plan Baselines</a>&#34;</span>.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>You recently upgraded the database from Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.4) to Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</p>
</li>
<li>
<p>You want to preserve the optimizer behavior from the earlier release.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To enable query optimizer features for a specific release:</p>
<ol>
<li>
<p>Start SQL*Plus, and log in to the database with the appropriate privileges.</p>
</li>
<li>
<p>Query the current optimizer features settings.</p>
<p>For example, run the following SQL*Plus command:</p>
<pre dir="ltr">SQL&gt; SHOW PARAMETER optimizer_features_enable
 
NAME                                 TYPE        VALUE
------------------------------------ ----------- --------
optimizer_features_enable            string      11.2.0.4
</pre></li>
<li>
<p>Set the optimizer features setting at the instance or session level.</p>
<p>For example, run the following SQL statement to set the optimizer version to <code class="codeph">12.1.0.2</code>:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET OPTIMIZER_FEATURES_ENABLE=&#39;12.1.0.2&#39;;
</pre>
<p>The preceding statement restores the optimizer functionality that existed in Oracle Database 12<span class="italic">c</span> Release 1 (12.1.0.2).</p>
</li>
</ol>
<div class="infoboxnotealso" id="GUID-325A3D6A-47B8-4AAF-8BB0-4037553D02FE__GUID-1C8FF1FB-9B9E-4791-8E78-09AF2D7BF7E3">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN10141" target="_blank" href="../REFRN/GUID-E193EC9E-B642-4C01-99EC-24E04AEA1A2C.htm#REFRN10141"><span><cite>Oracle Database Reference</cite></span></a> to learn about optimizer features enabled when you set <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> to different release values</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL256"></a><a id="TGSQL255"></a>
<div class="props_rev_3"><a id="GUID-2D3EEFD3-C4C6-4D2F-B24A-8DC0C1E1CBA1"></a>
<h3 id="TGSQL-GUID-2D3EEFD3-C4C6-4D2F-B24A-8DC0C1E1CBA1" class="sect3">Choosing an Optimizer Goal</h3>
<div>
<p>The <span class="bold">optimizer goal</span> is the prioritization of resource usage by the optimizer.</p>
<div class="section">
<p>Using the <code class="codeph">OPTIMIZER_MODE</code> initialization parameter, you can set the following optimizer goals:</p>
<ul style="list-style-type: disc;">
<li>
<p>Best <a href="glossary.htm#GUID-BFB3B290-B7BF-4E9C-B2EB-F318EAC34DAF"><span class="xrefglossterm">throughput</span></a> (default)</p>
<p>When you set the <code class="codeph">OPTIMIZER_MODE</code> value to <code class="codeph">ALL_ROWS</code>, the database uses the least amount of resources necessary to process all rows that the statement accessed.</p>
<p>For batch applications such as Oracle Reports, optimize for best throughput. Usually, throughput is more important in batch applications because the user is only concerned with the time necessary for the application to complete. Response time is less important because the user does not examine the results of individual statements while the application is running.</p>
</li>
<li>
<p>Best <a href="glossary.htm#GUID-371FCA7E-6CDB-4D4C-9BD6-90944AD21E3A"><span class="xrefglossterm">response time</span></a></p>
<p>When you set the <code class="codeph">OPTIMIZER_MODE</code> value to <code class="codeph">FIRST_ROWS_</code><span class="italic"><code class="codeph">n</code></span>, the database optimizes with a goal of best response time to return the first <span class="italic">n</span> rows, where <span class="italic">n</span> equals <code class="codeph">1</code>, <code class="codeph">10</code>, <code class="codeph">100</code>, or <code class="codeph">1000</code>.</p>
<p>For interactive applications in Oracle Forms or SQL*Plus, optimize for response time. Usually, response time is important because the interactive user is waiting to see the first row or rows that the statement accessed.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The primary application is interactive, so you want to set the optimizer goal for the database instance to minimize response time.</p>
</li>
<li>
<p>For the current session only, you want to run a report and optimize for throughput.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To enable query optimizer features for a specific release:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database with the appropriate privileges, and then query the current optimizer mode.</p>
<p>For example, run the following SQL*Plus command:</p>
<pre dir="ltr">dba1@PROD&gt; SHOW PARAMETER OPTIMIZER_MODE

NAME                                 TYPE        VALUE
------------------------------------ ----------- --------
optimizer_mode                       string      ALL_ROWS
</pre></li>
<li>
<p>At the instance level, optimize for response time.</p>
<p>For example, run the following SQL statement to configure the system to retrieve the first 10 rows as quickly as possible:</p>
<pre dir="ltr">SQL&gt; ALTER SYSTEM SET OPTIMIZER_MODE=&#39;FIRST_ROWS_10&#39;;
</pre></li>
<li>
<p>At the session level only, optimize for throughput before running a report.</p>
<p>For example, run the following SQL statement to configure only this session to optimize for throughput:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET OPTIMIZER_MODE=&#39;ALL_ROWS&#39;;
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-2D3EEFD3-C4C6-4D2F-B24A-8DC0C1E1CBA1__GUID-EDCA5927-0CF2-4345-97E5-CD2BF40AD41C">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN10141" target="_blank" href="../REFRN/GUID-E193EC9E-B642-4C01-99EC-24E04AEA1A2C.htm#REFRN10141"><span><cite>Oracle Database Reference</cite></span></a> to learn about the <code class="codeph">OPTIMIZER_MODE</code> initialization parameter</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="TGSQL258"></a><a id="TGSQL257"></a>
<div class="props_rev_3"><a id="GUID-DAFB7D07-E8B3-4219-A09D-214BD943AFF9"></a>
<h3 id="TGSQL-GUID-DAFB7D07-E8B3-4219-A09D-214BD943AFF9" class="sect3">Controlling Adaptive Optimization</h3>
<div>
<p>In Oracle Database, <span class="bold">adaptive query optimization</span> is the process by which the optimizer adapts an execution plan based on statistics collected at run time.</p>
<div class="section">
<p>Adaptive optimization is enabled under the following conditions:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> initialization parameter is set to <code class="codeph">12.1.0.1</code> or later.</p>
</li>
<li>
<p>The <code class="codeph">OPTIMIZER_ADAPTIVE_REPORTING_ONLY</code> initialization parameter is set to <code class="codeph">false</code> (default).</p>
</li>
</ul>
<p>If <code class="codeph">OPTIMIZER_ADAPTIVE_REPORTING_ONLY</code> is set to <code class="codeph">true</code>, then adaptive optimization runs in reporting-only mode. In this case, the database gathers information required for adaptive optimization, but does not change the plans. An adaptive plan always chooses the default plan, but the database collects information about the execution <span class="italic">as if</span> the parameter were set to <code class="codeph">false</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Assumptions</p>
</div>
<!-- class="section" -->
<div class="section">
<p>This tutorial assumes the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">OPTIMIZER_FEATURES_ENABLE</code> initialization parameter is set to <code class="codeph">12.1.0.1</code> or later.</p>
</li>
<li>
<p>The <code class="codeph">OPTIMIZER_ADAPTIVE_REPORTING_ONLY</code> initialization parameter is set to <code class="codeph">false</code> (default).</p>
</li>
<li>
<p>You want to disable adaptive optimization for testing purposes so that the database generates only reports.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">To disable adaptive optimization and view reports:</p>
<ol>
<li>
<p>Connect SQL*Plus to the database as <code class="codeph">SYSTEM</code>, and then query the current settings.</p>
<p>For example, run the following SQL*Plus command:</p>
<pre dir="ltr">SHOW PARAMETER OPTIMIZER_ADAPTIVE_REPORTING_ONLY

NAME                                 TYPE        VALUE
------------------------------------ ----------- -----
optimizer_adaptive_reporting_only    boolean     FALSE
</pre></li>
<li>
<p>At the session level, set the <code class="codeph">OPTIMIZER_ADAPTIVE_REPORTING_ONLY</code> initialization parameter to <code class="codeph">true</code>.</p>
<p>For example, in SQL*Plus run the following SQL statement:</p>
<pre dir="ltr">ALTER SESSION SET OPTIMIZER_ADAPTIVE_REPORTING_ONLY=true;
</pre></li>
<li>
<p>Run a query.</p>
</li>
<li>
<p>Run <code class="codeph">DBMS_XPLAN.DISPLAY_CURSOR</code> to view the report.</p>
<div class="infobox-note" id="GUID-DAFB7D07-E8B3-4219-A09D-214BD943AFF9__GUID-E1FB1C4E-295C-4A1D-BDD8-A9DBBA993573">
<p class="notep1">Note:</p>
<p>The format argument that you pass to <code class="codeph">DBMS_XPLAN.DISPLAY_CURSOR</code> must include the <code class="codeph">+REPORT</code> parameter. When this parameter is set, the report shows the plan the optimizer would have picked if automatic reoptimization had been enabled.</p>
</div>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-DAFB7D07-E8B3-4219-A09D-214BD943AFF9__GUID-FFCA53E0-3BDF-43F7-A4C3-2F26E27CF5A1">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="tgsql_optcncpt.htm#GUID-F368C89A-5CAE-432C-845C-CC38C7F93A03" title="In Oracle Database, adaptive query optimization enables the optimizer to make run-time adjustments to execution plans and discover additional information that can lead to better statistics.">About Adaptive Query Optimization</a>&#34;</span></p>
</li>
<li>
<p><a class="olink REFRN10327" target="_blank" href="../REFRN/GUID-8DD128F9-4891-4061-9B2D-9D45315D44FB.htm#REFRN10327"><span><cite>Oracle Database Reference</cite></span></a> to learn about the <code class="codeph">OPTIMIZER_ADAPTIVE_REPORTING_ONLY</code> initialization parameter</p>
</li>
<li>
<p><a class="olink ARPLS70136" target="_blank" href="../ARPLS/d_xplan.htm#ARPLS70136"><span><cite>Oracle Database PL/SQL Packages and Types Reference</cite></span></a> to learn about the <code class="codeph">+REPORT</code> parameter of the <code class="codeph">DBMS_XPLAN.DISPLAY_CURSOR</code> function</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL259"></a>
<div class="props_rev_3"><a id="GUID-C558F7CF-446E-4078-B045-0B3BB026CB3C"></a>
<h2 id="TGSQL-GUID-C558F7CF-446E-4078-B045-0B3BB026CB3C" class="sect2">Influencing the Optimizer with Hints</h2>
<div>
<p>Optimizer hints are special comments in a SQL statement that pass instructions to the optimizer. The optimizer uses hints to choose an execution plan for the statement unless prevented by some condition.</p>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="tgsql_influence.htm#GUID-B198573A-C64B-4071-9CD8-738355A20DD7" title="Use hints to influence the optimizer mode, query transformation, access path, join order, and join methods.">About Optimizer Hints</a></p>
</li>
<li>
<p><a href="tgsql_influence.htm#GUID-5976D09A-257A-49F3-94E0-247B1247270A">Guidelines for Join Order Hints</a></p>
</li>
</ul>
<div class="infobox-note" id="GUID-C558F7CF-446E-4078-B045-0B3BB026CB3C__GUID-C301E0C5-DC7D-439B-8DBB-FF69F4F5775D">
<p class="notep1">Note:</p>
<p><a class="olink SQLRF00219" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF00219"><span><cite>Oracle Database SQL Language Reference</cite></span></a> contains a complete reference for all SQL hints</p>
</div>
</div>
<a id="TGSQL261"></a><a id="TGSQL260"></a>
<div class="props_rev_3"><a id="GUID-B198573A-C64B-4071-9CD8-738355A20DD7"></a>
<h3 id="TGSQL-GUID-B198573A-C64B-4071-9CD8-738355A20DD7" class="sect3">About Optimizer Hints</h3>
<div>
<p>Use hints to influence the optimizer mode, query transformation, access path, join order, and join methods.</p>
<p>For example, The following figure shows how you can use a hint to tell the optimizer to use a specific index for a specific statement.</p>
<div class="figure" id="GUID-B198573A-C64B-4071-9CD8-738355A20DD7__BBAFCGBD">
<p class="titleinfigure">Figure 14-2 Optimizer Hint</p>
<img width="399" height="281" src="img/GUID-27B0D75F-82B3-48E5-8560-5934AADCACB7-default.png" alt="Description of Figure 14-2 follows" title="Description of Figure 14-2 follows"/><br/>
<a href="img_text/GUID-27B0D75F-82B3-48E5-8560-5934AADCACB7-print.htm">Description of &#34;Figure 14-2 Optimizer Hint&#34;</a></div>
<!-- class="figure" -->
<p>The advantage of hints is that they enable you to make decisions normally made by the optimizer. In a test environment, hints are useful for testing the performance of a specific access path. For example, you may know that an index is more selective for certain queries, as in <a href="tgsql_influence.htm#GUID-B198573A-C64B-4071-9CD8-738355A20DD7__BBAFCGBD">Figure 14-2</a>. In this case, the hint may cause the optimizer to generate a better plan.</p>
<p>The disadvantage of hints is the extra code that you must manage, check, and control. Hints were introduced in Oracle7, when users had little recourse if the optimizer generated suboptimal plans. Because changes in the database and host environment can make hints obsolete or have negative consequences, a good practice is to test using hints, but use other techniques to manage execution plans.</p>
<p>Oracle provides several tools, including SQL Tuning Advisor, SQL plan management, and SQL Performance Analyzer, to address performance problems not solved by the optimizer. Oracle strongly recommends that you use these tools instead of hints because they provide fresh solutions as the data and database environment change.</p>
<div class="infoboxnotealso" id="GUID-B198573A-C64B-4071-9CD8-738355A20DD7__GUID-4C540F3F-92A9-4992-9606-C4F8A70A7ECA">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF51107" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF51107"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for the most common hints by functional category.</p>
</div>
</div>
<a id="TGSQL262"></a>
<div class="props_rev_3"><a id="GUID-2C09E9BF-A05B-4F02-8BB6-B858F599CAEA"></a>
<h4 id="TGSQL-GUID-2C09E9BF-A05B-4F02-8BB6-B858F599CAEA" class="sect4">Types of Hints</h4>
<div>
<p>You can use hints for tables, query blocks, and statements.</p>
<p>Hints fall into the following types:</p>
<ul style="list-style-type: disc;">
<li>
<p>Single-table</p>
<p>Single-table hints are specified on one table or view. <a class="olink SQLRF50405" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50405"><code class="codeph">INDEX</code></a> and <a class="olink SQLRF50701" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50701"><code class="codeph">USE_NL</code></a> are examples of single-table hints. The following statement uses a single-table hint:</p>
<pre dir="ltr">SELECT <span class="bold">/*+ INDEX (employees emp_department_ix)*/</span> employee_id, department_id
FROM   employees 
WHERE  department_id &gt; 50;
</pre></li>
<li>
<p>Multi-table</p>
<p>Multi-table hints are like single-table hints except that the hint can specify multiple tables or views. <a class="olink SQLRF50705" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50705"><code class="codeph">LEADING</code></a> is an example of a multi-table hint. The following statement uses a multi-table hint:</p>
<pre dir="ltr">SELECT <span class="bold">/*+ LEADING(e j) */</span> *
FROM   employees e, departments d, job_history j
WHERE  e.department_id = d.department_id
AND    e.hire_date = j.start_date;
</pre>
<div class="infobox-note" id="GUID-2C09E9BF-A05B-4F02-8BB6-B858F599CAEA__GUID-AAF8FA92-886B-4484-984E-244B2DBAFA3F">
<p class="notep1">Note:</p>
<p><a class="olink SQLRF50701" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50701"><code class="codeph">USE_NL(table1 table2)</code></a> is not considered a multi-table hint because it is a shortcut for <code class="codeph">USE_NL(table1)</code> and <code class="codeph">USE_NL(table2)</code>.</p>
</div>
</li>
<li>
<p>Query block</p>
<p>Query block hints operate on single query blocks. <a class="olink SQLRF50508" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50508"><code class="codeph">STAR_TRANSFORMATION</code></a> and <a class="olink SQLRF50905" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50905"><code class="codeph">UNNEST</code></a> are examples of query block hints. The following statement uses a query block hint:</p>
<pre dir="ltr">SELECT <span class="bold">/*+ STAR_TRANSFORMATION */</span> s.time_id, s.prod_id, s.channel_id
FROM   sales s, times t, products p, channels c
WHERE s.time_id = t.time_id AND s.prod_id = p.prod_id
AND s.channel_id = c.channel_id AND c.channel_desc = &#39;Tele Sales&#39;;
</pre></li>
<li>
<p>Statement</p>
<p>Statement hints apply to the entire SQL statement. <a class="olink SQLRF50301" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF50301"><code class="codeph">ALL_ROWS</code></a> is an example of a statement hint. The following statement uses a statement hint:</p>
<pre dir="ltr">SELECT <span class="bold">/*+ ALL_ROWS */</span> * FROM sales;
</pre></li>
</ul>
</div>
</div>
<a id="TGSQL264"></a><a id="TGSQL263"></a>
<div class="props_rev_3"><a id="GUID-688C8907-696A-4051-819C-18AA9B48219C"></a>
<h4 id="TGSQL-GUID-688C8907-696A-4051-819C-18AA9B48219C" class="sect4">Scope of Hints</h4>
<div>
<p>When you specify a hint, it optimizes only the statement block in which it appears, overriding any instance-level or session-level parameters.</p>
<p>A <span class="bold">statement block</span> is one of the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>A simple <code class="codeph">MERGE</code>, <code class="codeph">SELECT</code>, <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code>, or <code class="codeph">DELETE</code> statement</p>
</li>
<li>
<p>A parent statement or a subquery of a complex statement</p>
</li>
<li>
<p>A part of a query using set operators (<code class="codeph">UNION</code>, <code class="codeph">MINUS</code>, <code class="codeph">INTERSECT</code>)</p>
</li>
</ul>
<div class="example" id="GUID-688C8907-696A-4051-819C-18AA9B48219C__BBAHABHI">
<p class="titleinexample">Example 14-1 Query Using a Set Operator</p>
<p>The following query consists of two component queries and the <code class="codeph">UNION</code> operator:</p>
<pre dir="ltr">SELECT /*+ FIRST_ROWS(10) */ prod_id, time_id FROM 2010_sales
UNION ALL
SELECT /*+ ALL_ROWS */ prod_id, time_id FROM current_year_sales;
</pre>
<p>The preceding statement has two blocks, one for each component query. Hints in the first component query apply only to its optimization, not to the optimization of the second component query. For example, in the first week of 2015 you query current year and last year sales. You apply <code class="codeph">FIRST_ROWS(10)</code> to the query of last year&#39;s (2014) sales and the <code class="codeph">ALL_ROWS</code> hint to the query of this year&#39;s (2015) sales.</p>
<div class="infoboxnotealso" id="GUID-688C8907-696A-4051-819C-18AA9B48219C__GUID-C13CCCC8-35F7-408E-8A4D-34CC646B9F75">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF00219" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF00219"><span><cite>Oracle Database SQL Language Reference</cite></span></a> for an overview of hints</p>
</div>
</div>
<!-- class="example" --></div>
</div>
<a id="TGSQL266"></a><a id="TGSQL265"></a>
<div class="props_rev_3"><a id="GUID-C18EA0A0-7792-4220-A1C1-3EC856A19BA7"></a>
<h4 id="TGSQL-GUID-C18EA0A0-7792-4220-A1C1-3EC856A19BA7" class="sect4">Considerations for Hints</h4>
<div>
<div class="section">
<p>You must enclose hints within a SQL comment. The hint comment must immediately follow the first keyword of a SQL statement block. You can use either style of comment: a slash-star (<code class="codeph">/*</code>) or pair of dashes (<code class="codeph">--</code>). The plus-sign (+) hint delimiter must come immediately after the comment delimiter, as in the following fragment:</p>
<pre dir="ltr">SELECT /*+ <span class="italic">hint_text</span> */ ...
</pre>
<p>The database ignores incorrectly specified hints. The database also ignores combinations of conflicting hints, even if these hints are correctly specified. If one hint is incorrectly specified, but a hint in the same comment is correctly specified, then the database considers the correct hint.</p>
<div class="infobox-note" id="GUID-C18EA0A0-7792-4220-A1C1-3EC856A19BA7__GUID-420B9864-FC7A-4083-968E-597B9C96DFC5">
<p class="notep1">Caution:</p>
<p>The database does not issue error messages for hints that it ignores.</p>
</div>
<p>A statement block can have only one comment containing hints, but it can contain many space-separated hints. For example, a complex query may include multiple table joins. If you specify only the <code class="codeph">INDEX</code> hint for a specified table, then the optimizer must determine the remaining access paths and corresponding join methods. The optimizer may not use the <code class="codeph">INDEX</code> hint because the join methods and access paths prevent it. <a href="tgsql_influence.htm#GUID-C18EA0A0-7792-4220-A1C1-3EC856A19BA7__BBAJCBJF">Example 14-2</a> uses multiple hints to specify the exact join order.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-C18EA0A0-7792-4220-A1C1-3EC856A19BA7__BBAJCBJF">
<p class="titleinexample">Example 14-2 Multiple Hints</p>
<pre dir="ltr">SELECT   /*+ LEADING(e2 e1) USE_NL(e1) INDEX(e1 emp_emp_id_pk) 
           USE_MERGE(j) FULL(j) */
         e1.first_name, e1.last_name, j.job_id, sum(e2.salary) total_sal
FROM     employees e1, employees e2, job_history j
WHERE    e1.employee_id = e2.manager_id
AND      e1.employee_id = j.employee_id
AND      e1.hire_date = j.start_date
GROUP BY e1.first_name, e1.last_name, j.job_id
ORDER BY total_sal;
</pre></div>
<!-- class="example" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-C18EA0A0-7792-4220-A1C1-3EC856A19BA7__GUID-86E57995-8B27-477C-9F6F-A304E48BE013">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF51098" target="_blank" href="../SQLRF/sql_elements006.htm#SQLRF51098"><span class="italic">Oracle Database SQL Language Reference</span></a> to learn about the syntax rules for comments and hints</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TGSQL267"></a>
<div class="props_rev_3"><a id="GUID-5976D09A-257A-49F3-94E0-247B1247270A"></a>
<h3 id="TGSQL-GUID-5976D09A-257A-49F3-94E0-247B1247270A" class="sect3">Guidelines for Join Order Hints</h3>
<div>
<div class="section">
<p>The <a href="glossary.htm#GUID-4AF1D36D-F72C-4049-925A-BA2C169A0500"><span class="xrefglossterm">join order</span></a> can have a significant effect on the performance of a SQL statement. In some cases, you can specify join order hints in a SQL statement so that it does not access rows that have no effect on the result.</p>
<p>The <a href="glossary.htm#GUID-8D98E7F2-8BAD-4AE2-8C72-DCD0733CB9CE"><span class="xrefglossterm">driving table</span></a> in a join is the table to which other tables are joined. In general, the driving table contains the <span class="bold"><a href="glossary.htm#GUID-73A2A2BA-68CB-4036-BB5C-3CBB5D799286"><span class="xrefglossterm">filter condition</span></a></span> that eliminates the highest percentage of rows in the table.</p>
<p>Consider the following guidelines:</p>
<ul style="list-style-type: disc;">
<li>
<p>Avoid a full table scan when an index retrieves the requested rows more efficiently.</p>
</li>
<li>
<p>Avoid using an index that fetches many rows from the driving table when you can use a different index that fetches a small number of rows.</p>
</li>
<li>
<p>Choose the join order so that you join fewer rows to tables later in the join order.</p>
</li>
</ul>
<p>The following example shows how to tune join order effectively:</p>
<pre dir="ltr">SELECT *
FROM   taba a, tabb b, tabc c
WHERE  a.acol BETWEEN   100 AND   200
</pre>
<pre dir="ltr">AND    b.bcol BETWEEN 10000 AND 20000
AND    c.ccol BETWEEN 10000 AND 20000
AND    a.key1 = b.key1
AND    a.key2 = c.key2;
</pre>
<pre dir="ltr"></pre>
<ol>
<li>
<p>Choose the driving table and the driving index (if any).</p>
<p>Each of the first three conditions in the previous example is a filter condition that applies to a single table. The last two conditions are join conditions.</p>
<p>Filter conditions dominate the choice of driving table and index. In general, the driving table contains the filter condition that eliminates the highest percentage of rows. Thus, because the range of 100 to 200 is narrow compared with the range of <code class="codeph">acol</code>, but the ranges of 10000 and 20000 are relatively large, <code class="codeph">taba</code> is the driving table, all else being equal.</p>
<p>With nested loops joins, the joins occur through the join indexes, which are the indexes on the primary or foreign keys used to connect that table to an earlier table in the join tree. Rarely do you use the indexes on the non-join conditions, except for the driving table. Thus, after <code class="codeph">taba</code> is chosen as the driving table, use the indexes on <code class="codeph">b</code>.<code class="codeph">key1</code> and <code class="codeph">c</code>.<code class="codeph">key2</code> to drive into <code class="codeph">tabb</code> and <code class="codeph">tabc</code>, respectively.</p>
</li>
<li>
<p>Choose the best <a id="d90543e2229" class="indexterm-anchor"></a>join order, driving to the best unused filters earliest.</p>
<p>You can reduce the work of the following join by first joining to the table with the best still-unused filter. Thus, if <code class="codeph">bcol</code> <code class="codeph">BETWEEN</code> ... is more restrictive (rejects a higher percentage of the rows) than <code class="codeph">ccol</code> <code class="codeph">BETWEEN</code> ..., then the last join becomes easier (with fewer rows) if <code class="codeph">tabb</code> is joined before <code class="codeph">tabc</code>.</p>
</li>
<li>
<p>You can use the <code class="codeph">ORDERED</code> or <code class="codeph">STAR</code> hint to force the join order.</p>
</li>
</ol>
<div class="infoboxnotealso" id="GUID-5976D09A-257A-49F3-94E0-247B1247270A__GUID-0436C9CA-8AE2-42D9-B4BD-B9781A1AD566">
<p class="notep1">See Also:</p>
<p><a class="olink REFRN10141" target="_blank" href="../REFRN/GUID-E193EC9E-B642-4C01-99EC-24E04AEA1A2C.htm#REFRN10141"><span class="italic">Oracle Database Reference</span></a> to learn about <code class="codeph">OPTIMIZER_MODE</code></p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4801">
<tr>
<td class="cellalignment4834">
<table class="cellalignment4806">
<tr>
<td class="cellalignment4805"><a href="tgsql_pt_infl.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4805"><a href="tgsql_cursor.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4836">
<table class="cellalignment4804">
<tr>
<td class="cellalignment4805"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4805"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4805"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4805"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4805"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4805"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>