<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1083"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Introduction%20to%20Workspace%20Manager"></a><title>Introduction to Workspace Manager</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="Provides usage and reference information about Oracle Workspace Manager, which enables applications to create workspaces and group different versions of table row values in different workspaces."/>
<meta name="dcterms.created" content="2014-06-30T13:47:16Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Workspace Manager Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49170-01"/>
<meta name="dcterms.isVersionOf" content="ADWSM"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="long_prtusage.htm" title="Previous" type="text/html"/>
<link rel="Next" href="long_events.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49170-01.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/21</span> <!-- End Header -->
<script>
<!-- // <![CDATA[
window.name='long_intro'
// ]]> -->
</script> <script>
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="ADWSM010" class="chapter"><a id="g1032767"></a> <a id="i1016953"></a>
<h1 class="chapter"><span class="secnum">1</span> Introduction to Workspace Manager</h1>
<p>Oracle Workspace Manager, often referred to as Workspace Manager, provides an infrastructure that enables applications to create workspaces and group different versions of table row values in different workspaces. Users are permitted to create new versions of data to update, while maintaining a copy of the old data. The ongoing results of the activity are stored persistently, assuring concurrency and consistency.</p>
<p>Applications that can benefit from Workspace Manager typically do one or more of the following operations:</p>
<ul>
<li>
<p>Manage a collection of updates and insertions as a unit before incorporating them into production data</p>
<p>You can review changes and roll back undesirable ones before making the changes public. Until you make the changes public, they are invisible to other users of the database, who will access only the regular production data. You can organize the changes in a simple set of workspaces or in a complex workspace hierarchy. A typical example might be a life sciences application in which Workspace Manager supports the discovery and quality assurance (QA) processes by managing a collection of updates before they are merged with the production data.</p>
</li>
<li>
<p>Support a collaborative development effort</p>
<p>A team can share access to a collection of updates and insertions for a collaborative project. Workspace privileges control access to a workspace and its operations, and you can restrict workspace access to single-writer, read-only, or no access. Workspace locks prevent update conflicts between projects in separate workspaces. A typical example might be an application to design an engineering project, in which multiple subprojects are concurrently developed in separate workspaces.</p>
</li>
<li>
<p>Use a common data set to create multiple scenarios for <span class="italic">what-if</span> analyses or multiple editions of data for publication</p>
<p>You can organize changes in workspaces to view them in the context of the whole database, but without requiring that you actually copy data between tables. Different users can make simultaneous changes to the same row, and you can detect and resolve conflicts. A typical example might be a telecommunications application in which you create multiple cell phone coverage scenarios to find the optimal design.</p>
</li>
<li>
<p>Keep a history of changes to data</p>
<p>You can navigate workspaces and row versions to view the database as of a particular milestone or point in time. You can roll back changes to a row or table in a workspace to a milestone. A typical example might be a land information management application where Workspace Manager supports regulatory requirements by maintaining a history of all changes to land parcels.</p>
</li>
</ul>
<p><a id="sthref9"></a>Workspace Manager is also useful in managing <span class="italic">long-transaction</span> scenarios, where complex, long-duration database transactions can take days to complete, and multiple users must access the same database.</p>
<p>This chapter explains concepts and operations that you must understand to use Workspace Manager. It contains the following major sections:</p>
<ul>
<li>
<p><a href="#i1012912">Section 1.1, &#34;Workspace Manager Overview&#34;</a></p>
</li>
<li>
<p><a href="#i1013953">Section 1.2, &#34;Session Context Information for Workspace Manager&#34;</a></p>
</li>
<li>
<p><a href="#i1006224">Section 1.3, &#34;Lock Management with Workspace Manager&#34;</a></p>
</li>
<li>
<p><a href="#i1017165">Section 1.4, &#34;Privilege Management with Workspace Manager&#34;</a></p>
</li>
<li>
<p><a href="#i1017681">Section 1.5, &#34;System Parameters for Workspace Manager&#34;</a></p>
</li>
<li>
<p><a href="#i1018057">Section 1.6, &#34;Import and Export Considerations&#34;</a></p>
</li>
<li>
<p><a href="#i1019718">Section 1.7, &#34;Bulk Loading into Version-Enabled Tables&#34;</a></p>
</li>
<li>
<p><a href="#i1009427">Section 1.8, &#34;DDL Operations Related to Version-Enabled Tables&#34;</a></p>
</li>
<li>
<p><a href="#BABFDIGJ">Section 1.9, &#34;Constraint Support with Workspace Manager&#34;</a></p>
</li>
<li>
<p><a href="#i1006223">Section 1.10, &#34;Triggers on Version-Enabled Tables&#34;</a></p>
</li>
<li>
<p><a href="#i1019482">Section 1.11, &#34;Virtual Private Database Considerations&#34;</a></p>
</li>
<li>
<p><a href="#i1019347">Section 1.12, &#34;Support for Table Synonyms&#34;</a></p>
</li>
<li>
<p><a href="#i1021230">Section 1.13, &#34;Materialized View Support&#34;</a></p>
</li>
<li>
<p><a href="#i1020573">Section 1.14, &#34;Spatial and Graph Topology Support&#34;</a></p>
</li>
<li>
<p><a href="#BABFEJCG">Section 1.15, &#34;Workspace Manager Reserved Words and Characters&#34;</a></p>
</li>
<li>
<p><a href="#i1009170">Section 1.16, &#34;DBMS_WM Subprogram Categories&#34;</a></p>
</li>
<li>
<p><a href="#i1019103">Section 1.17, &#34;Simplified Examples Using Workspace Manager&#34;</a></p>
</li>
</ul>
<p>For complete examples of Workspace Manager, see <a href="#i1019103">Section 1.17</a>. However, you may want to read the rest of this chapter first, to understand the concepts that the examples illustrate.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Workspace Manager is installed by default in the Oracle seed database and any database created using the Database Configuration Assistant (DBCA). To use Workspace Manager in any other Oracle database, you must first perform the installation procedure described in <a href="long_inst.htm#g640808">Appendix A, &#34;Installing Workspace Manager with Custom Databases&#34;</a>.</div>
<a id="i1012912"></a>
<div id="ADWSM99112" class="sect1">
<h2 class="sect1"><span class="secnum">1.1</span> Workspace Manager Overview</h2>
<p><a id="sthref10"></a>Workspace Manager enables you to <span class="bold">version-enable</span> one or more user tables in the database. When a table is version-enabled, all rows in the table can support multiple versions of the data. The versioning infrastructure is not visible to the users of the database, and application SQL statements for selecting, inserting, modifying, and deleting data continue to work in the usual way with version-enabled tables, although you cannot update a primary key column value in a version-enabled table. (Workspace Manager implements these capabilities by maintaining system views and creating <code>INSTEAD OF</code> triggers, as explained in <a href="#i1012495">Section 1.1.11</a>; however, application developers and users do not need to see or interact with the views and triggers.)</p>
<p>After a table is version-enabled, users in a workspace automatically see the correct version of the record in which they are interested. If you no longer need a table to be version-enabled, you can disable versioning for the table.</p>
<p>A <span class="bold"><a id="sthref11"></a>workspace</span> is a virtual environment that one or more users can share to make changes to the data in the database. A workspace logically groups collections of new row versions from one or more version-enabled tables, and isolates these versions until they are explicitly merged with production data or discarded, thus providing maximum concurrency. Users can perform a variety of operations involving workspaces: go to, create, refresh, merge, roll back, remove, compress, alter, and other operations.</p>
<p>Users in a workspace always see a transactionally consistent view of the entire database; that is, they see changes made in their current workspace plus the rest of the data in the database as it existed either when the workspace was created or when the workspace was most recently refreshed with changes from the parent workspace. (Workspace hierarchy and parent and child workspaces are explained in <a href="#i1004554">Section 1.1.1</a>.)</p>
<p>Workspace Manager automatically detects <span class="bold">conflicts</span>, which are differences in data values resulting from changes to the same row in a workspace and its parent workspace. You must resolve conflicts before merging changes from a workspace into its parent workspace. You can use workspace locks to avoid conflicts.</p>
<p><span class="bold"><a id="sthref12"></a>Savepoints</span> are points in the workspace to which row changes in version-enabled tables can be rolled back, and to which users can go to see the database as it existed at that point. Savepoints are usually created in response to a business-related milestone, such as the completion of a design phase or the end of a billing period. (For more information about savepoints, see <a href="#i1012409">Section 1.1.2</a>.)</p>
<p>The <span class="bold">history option</span> enables you to timestamp changes made to all rows in a version-enabled table and to save a copy of either all changes or only the most recent changes to each row. If you keep all changes (specifying the &#34;without overwrite&#34; history option) when version-enabling a table, you keep a persistent history of all changes made to all row versions, and enable users to go to any point in time to view the database as it existed from the perspective of that workspace.</p>
<p>Workspace Manager provides a comprehensive PL/SQL API that you can add to new and existing applications to manage workspaces, savepoints, history information, privileges, access modes, and Workspace Manager locks, and to detect and resolve conflicts. You can also perform many of these operations using the Oracle Enterprise Manager graphical user interface.</p>
<p>Another database object created by Workspace Manager is a database-wide system table that maps row versions to workspaces. This table is not visible to users.</p>
<a id="i1004554"></a>
<div id="ADWSM99113" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.1</span> <a id="sthref13"></a><a id="sthref14"></a>Workspace Hierarchy</h3>
<p>There can be a hierarchy of workspaces in the database. For example, a workspace can be a <a id="sthref15"></a>parent to one or more workspaces (<a id="sthref16"></a>child workspaces). By default, when a workspace is created, it is created from the topmost, or <code><a id="sthref17"></a>LIVE</code>, database workspace. (Workspace names are case-sensitive, and the workspace name of the live database is spelled <code>LIVE</code>. The length of a workspace name must not exceed 30 characters, and the depth of the workspace hierarchy must not exceed 30 levels.) Users are included in a workspace by a <a href="long_ref.htm#i78730">GotoWorkspace</a> operation.</p>
<p><a href="#i1013821">Figure 1-1</a> shows a hierarchy of workspaces. <code>Workspace1</code> and <code>Workspace4</code> were formed off the <code>LIVE</code> database workspace; <code>Workspace2</code> and <code>Workspace3</code> were formed off <code>Workspace1</code>, and <code>Workspace5</code> was formed off <code>Workspace4</code>. After <code>Workspace1</code> was created, a user executed a <a href="long_ref.htm#i78730">GotoWorkspace</a> operation specifying <code>Workspace1</code>, and then executed <a href="long_ref.htm#i78729">CreateWorkspace</a> operations to create <code>Workspace2</code> and <code>Workspace3</code>. A comparable sequence was followed with <code>Workspace4</code> and <code>Workspace5</code>.</p>
<div id="ADWSM99114" class="figure">
<p class="titleinfigure"><a id="i1013821"></a>Figure 1-1 Workspace Tree</p>
<img width="332" height="201" src="img/vm_state_tree.gif" alt="Description of Figure 1-1 follows"/><br/>
<a id="sthref18" href="img_text/vm_state_tree.htm">Description of &#34;Figure 1-1 Workspace Tree&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>See also <a href="#i1012467">Section 1.1.2.1</a> for a discussion of design issues in deciding whether to create a child workspace or a savepoint for certain needs</p>
</div>
<!-- class="sect2" -->
<a id="i1012409"></a>
<div id="ADWSM99115" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.2</span> Using Savepoints</h3>
<p>A savepoint is a point in the workspace to which data changes can be rolled back. Workspace Manager accomplishes the rollback by deleting the row versions that contain the unwanted changes.</p>
<p>An <a id="sthref19"></a><a id="sthref20"></a><span class="bold">explicit savepoint</span> is a savepoint that you create and name. You can later roll back changes in version-enabled tables to the savepoint, or you can go to the savepoint to view the state of the entire database (including versioned rows) at the time the savepoint was created. In <a href="#i1004384">Figure 1-2</a>, <code>SP1</code>, <code>SP2</code>, <code>SP3</code>, and <code>SP4</code> are explicit savepoints that were created in the workspaces indicated. (Savepoints are indicated by dashed lines in <a href="#i1004384">Figure 1-2</a>.)</p>
<div id="ADWSM99116" class="figure">
<p class="titleinfigure"><a id="i1004384"></a>Figure 1-2 Savepoints</p>
<img width="337" height="201" src="img/vm_savept.gif" alt="Description of Figure 1-2 follows"/><br/>
<a id="sthref21" href="img_text/vm_savept.htm">Description of &#34;Figure 1-2 Savepoints&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>In addition, <a id="sthref22"></a><a id="sthref23"></a><span class="bold">implicit savepoints</span> are created automatically whenever a new workspace is created. An implicit savepoint is needed so that the users in the child workspace get a view of the database that is frozen at the time of the workspace creation. Thus, in <a href="#i1004384">Figure 1-2</a> two implicit savepoints (<code>SPa</code> and <code>SPd</code>) are created in the <code>LIVE</code> workspace corresponding to <code>Workspace1</code> and <code>Workspace4</code> creation; two implicit savepoints (<code>SPb</code> and <code>SPc</code>) are created in <code>Workspace1</code> corresponding to <code>Workspace2</code> and <code>Workspace3</code> creation; and one implicit savepoint (<code>SPe</code>) is created in <code>Workspace4</code> corresponding to <code>Workspace5</code> creation.</p>
<p><a id="sthref24"></a>Workspace Manager uses the name <code>LATEST</code> to designate a logical savepoint that refers to the latest version in the workspace. <code>LATEST</code> is often the default when a savepoint is an optional parameter for a <code>DBMS_WM</code> subprogram (procedure or function).</p>
<p><a id="sthref25"></a><a id="sthref26"></a>A <span class="bold">removable savepoint</span> is a savepoint that can be deleted by the <a href="long_ref.htm#i86067">CompressWorkspace</a>, <a href="long_ref.htm#i86068">CompressWorkspaceTree</a>, and <a href="long_ref.htm#i86069">DeleteSavepoint</a> procedures. A savepoint is removable if either of the following applies:</p>
<ul>
<li>
<p>It is an explicit savepoint.</p>
</li>
<li>
<p>It is an implicit savepoint that does not have any child dependencies.</p>
</li>
</ul>
<a id="i1012467"></a>
<div id="ADWSM99117" class="sect3">
<h4 class="sect3"><span class="secnum">1.1.2.1</span> <a id="sthref27"></a><a id="sthref28"></a><a id="sthref29"></a>Design Issue: Savepoint or Child Workspace?</h4>
<p>A Workspace Manager design issue that you may face is whether to create a savepoint or a child workspace to &#34;save&#34; a project at a given point. Both a savepoint and a child workspace allow you to group a set of changes, compare changes in different row versions, and roll back a set of changes. However, creating a savepoint enables you to continue to make changes in the same workspace, and it allows other users in the workspace immediate access to the changes. (Changes in another workspace are not visible to users until the current workspace is refreshed or merged.) Creating a savepoint also makes it convenient to archive a set of changes, to which you can later roll back.</p>
<p>On the other hand, creating a child workspace is convenient for providing an isolated environment in which a complex set of changes can be made, completely removed from the parent workspace (for example, the production data). If you want to set up an independent environment for a scenario, and if regular users in the parent workspace do not need access to this scenario&#39;s data, you probably want to create a child workspace instead of simply creating a savepoint in the parent workspace.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="ADWSM99118" class="sect2"><a id="sthref30"></a>
<h3 class="sect2"><span class="secnum">1.1.3</span> Merging and Rolling Back Workspace Changes</h3>
<p>Workspaces can be merged or rolled back.</p>
<p><a id="sthref31"></a><a id="sthref32"></a>Merging a workspace involves applying changes made in a child workspace to its parent workspace, after which the child workspace is removed. To merge a workspace, use the <a href="long_ref.htm#i89452">MergeWorkspace</a> procedure.</p>
<p><a id="sthref33"></a><a id="sthref34"></a>Rolling back a workspace involves deleting either all data changes (row versions) made in the workspace or all changes made after an explicit savepoint.</p>
<ul>
<li>
<p>To roll back all changes made in the workspace, use the <a href="long_ref.htm#i89943">RollbackWorkspace</a> procedure.</p>
</li>
<li>
<p>To roll back changes made in the workspace after a savepoint, use the <a href="long_ref.htm#i78733">RollbackToSP</a> procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot roll back to a savepoint if any implicit savepoints were created since the specified savepoint, unless you first merge or remove the descendent workspaces that caused the implicit savepoints to be created. For example, referring to <a href="#i1004384">Figure 1-2</a> in <a href="#i1012409">Section 1.1.2</a>, the user in <code>Workspace1</code> cannot roll back to savepoint <code>SP1</code> until <code>Workspace3</code> (which caused implicit savepoint <code>SPc</code> to be created) is merged or removed.</div>
</li>
</ul>
<p>A workspace cannot be rolled back when it has open database transactions. Rollback of a workspace leaves behind the workspace structure for future use; only the data in the workspace is deleted. (To completely remove a workspace, use the <a href="long_ref.htm#i108854">RemoveWorkspace</a> procedure, as described in <a href="#i1004579">Section 1.1.6</a>.)</p>
</div>
<!-- class="sect2" -->
<a id="i1004610"></a>
<div id="ADWSM99119" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.4</span> Resolving Conflicts Before a Merge or Refresh Operation</h3>
<p>When a child workspace is merged, the row changes in the child workspace are incorporated in its parent workspace; and when a child workspace is refreshed, row changes in the parent workspace are incorporated in the child workspace. When a row is changed in both the child and parent workspace, a data conflict is created. Conflicts are automatically detected when a merge or refresh operation is requested, and they are presented to the user in conflict (<span class="italic">xxx</span>_CONF) views. There is one conflict view for each table, as described in <a href="long_views.htm#i87420">Section 5.51</a>. This view lists the column values of the rows in the two workspaces involved in the conflict.</p>
<p>You must resolve conflicts manually by setting the workspace conflict context for the session and then using the <a href="long_ref.htm#i83186">ResolveConflicts</a> procedure. For each conflict you can choose to keep the row from the child workspace, the row from the parent workspace, or the common base row (that is, no change: keep the original data values for the row). You must resolve the conflicts before you can perform a merge (<a href="long_ref.htm#i89452">MergeWorkspace</a>) or refresh (<a href="long_ref.htm#i83811">RefreshWorkspace</a>) operation.</p>
<p><a id="sthref35"></a><a id="sthref36"></a><a id="sthref37"></a>The <span class="bold">base row</span> is the currently visible row at the time of the first update or delete operation in the child workspace. In the case of an insert operation, the base row does not exist, except if the inserted row was previously deleted in an ancestor version of a parent workspace, the base row is that deleted row. The <span class="bold">parent row</span> is the currently visible row in the parent workspace at the time of the conflict resolution, and the <span class="bold">child row</span> is the currently visible row in the child workspace at the time of the conflict resolution.</p>
<p>Absence of data is not a conflict. In these cases, you can use the <span class="italic">xxx</span>_DIFF view (described in <a href="long_views.htm#i87490">Section 5.52</a>) to detect a change in one workspace when there is no row or no change to the row in the other workspace.</p>
<p>The general process for resolving conflicts is as follows:</p>
<ol>
<li>
<p>Use the <a href="long_ref.htm#i78730">GotoWorkspace</a> or <a href="long_ref.htm#i113360">SetConflictWorkspace</a> procedure to set the workspace conflict context for the session.</p>
</li>
<li>
<p>Examine the <span class="italic">xxx</span>_CONF views (described in <a href="long_views.htm#i87420">Section 5.51</a>) to see what conflicts exist.</p>
</li>
<li>
<p>Execute the <a href="long_ref.htm#i87363">BeginResolve</a> procedure.</p>
</li>
<li>
<p>Execute the <a href="long_ref.htm#i83186">ResolveConflicts</a> procedure as often as needed: once for each affected combination of table and workspace.</p>
</li>
<li>
<p>After resolving all conflicts, execute one of the following procedures:</p>
<ul>
<li>
<p><a href="long_ref.htm#i90948">CommitResolve</a> if you want to make permanent all changes from the preceding step. (However, the changes are not made permanent in the database until you perform a standard database commit operation and execute the <a href="long_ref.htm#i89452">MergeWorkspace</a> or <a href="long_ref.htm#i83811">RefreshWorkspace</a> procedure, as described in the next step.)</p>
</li>
<li>
<p><a href="long_ref.htm#i87840">RollbackResolve</a> to discard all changes from the preceding step. (If you discard all changes, do not perform the next step.)</p>
</li>
</ul>
</li>
<li>
<p>Perform a standard database commit operation and execute the <a href="long_ref.htm#i89452">MergeWorkspace</a> or <a href="long_ref.htm#i83811">RefreshWorkspace</a> procedure.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1006773"></a>
<div id="ADWSM99120" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.5</span> Freezing and Unfreezing Workspaces</h3>
<p><a id="sthref38"></a><a id="sthref39"></a><a id="sthref40"></a><a id="sthref41"></a>You can control read and write access to a workspace by freezing and unfreezing the workspace. If a workspace is frozen, the ability of users to access the workspace and to make changes to rows in version-enabled tables is restricted. You can freeze a workspace in any of the following modes: no access, read-only, and one writer only (<code>1WRITER</code>).</p>
<p>To make a workspace frozen, use the <a href="long_ref.htm#i79088">FreezeWorkspace</a> procedure. To make a frozen workspace not frozen, use the <a href="long_ref.htm#i85162">UnfreezeWorkspace</a> procedure.</p>
<p>In addition, some procedures automatically freeze one or more workspaces. <a href="#g1022017">Table 1-1</a> lists these procedures, the workspaces affected, and the mode in which the workspaces are frozen. (For explanations of the mode values, see the <a href="long_ref.htm#i79088">FreezeWorkspace</a> procedure description in <a href="long_ref.htm#g1035446">Chapter 4</a>.)</p>
<div id="ADWSM99121" class="tblformal">
<p class="titleintable"><a id="sthref42"></a><a id="g1022017"></a>Table 1-1 Freeze Results of Procedures</p>
<table class="cellalignment5786" title="Freeze Results of Procedures" summary="Freeze results of procedures">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t4">Procedure</th>
<th class="cellalignment5787" id="r1c2-t4">Workspace and Mode</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i87363">BeginResolve</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t4 r1c2-t4">
<p>Specified workspace: <code>1WRITER</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i89452">MergeWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t4 r1c2-t4">
<p>Specified workspace: <code>NO_ACCESS</code></p>
<p>Parent workspace: <code>READ_ONLY</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i86067">CompressWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t4 r1c2-t4">
<p>Specified workspace: <code>NO_ACCESS</code> (Also, checks to ensure that there are no sessions on savepoints other than <code>LATEST</code>.)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i86068">CompressWorkspaceTree</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t4 r1c2-t4">
<p>Specified workspace: <code>NO_ACCESS</code> (Also, checks to ensure that there are no sessions on savepoints other than <code>LATEST</code>.)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i79490">CreateSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t4 r1c2-t4">
<p>Specified workspace: <code>READ_ONLY</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i86069">DeleteSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t4 r1c2-t4">
<p>Specified workspace: <code>NO_ACCESS</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i78729">CreateWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r8c1-t4 r1c2-t4">
<p>Specified workspace: <code>READ_ONLY</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i108854">RemoveWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r9c1-t4 r1c2-t4">
<p>Specified workspace: <code>NO_ACCESS</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i83811">RefreshWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r10c1-t4 r1c2-t4">
<p>Specified workspace: <code>READ_ONLY</code></p>
<p>Parent workspace: <code>READ_ONLY</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i87840">RollbackResolve</a></p>
</td>
<td class="cellalignment5788" headers="r11c1-t4 r1c2-t4">
<p>Specified workspace: <code>1WRITER</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r12c1-t4" headers="r1c1-t4">
<p><a href="long_ref.htm#i89943">RollbackWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r12c1-t4 r1c2-t4">
<p>Specified workspace: <code>NO_ACCESS</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="i1004579"></a>
<div id="ADWSM99122" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.6</span> Removing Workspaces</h3>
<p>A workspace can be <a id="sthref43"></a><a id="sthref44"></a>removed with the <a href="long_ref.htm#i108854">RemoveWorkspace</a> procedure. <a href="long_ref.htm#i108854">RemoveWorkspace</a> rolls back the data in a workspace and then deletes the workspace structure. An entire tree of workspaces can be removed with the <a href="long_ref.htm#i89286">RemoveWorkspaceTree</a> procedure. This will remove the workspace and all its descendant workspaces. A workspace cannot be removed when it has users in it.</p>
</div>
<!-- class="sect2" -->
<div id="ADWSM99123" class="sect2"><a id="sthref45"></a>
<h3 class="sect2"><span class="secnum">1.1.7</span> Using Workspace Manager Events</h3>
<p>Several types of Workspace Manager operations can be captured as events, and can be communicated to applications through the Oracle Advanced Queuing (AQ) framework. Messaging features provided by AQ, such as asynchronous notification, persistence, propagation, access control, history, and rule-based subscription, can be used for Workspace Manager events.</p>
<p>Support for Workspace Manager events includes the <code>ALLOW_CAPTURE_EVENTS</code> Workspace Manager system parameter, the <a href="long_ref.htm#i113021">SetCaptureEvent</a> procedure, and the <a href="long_views.htm#i94402">WM_EVENTS_INFO</a> metadata view.</p>
<p><a href="long_events.htm#g1023698">Chapter 2</a> describes Workspace Manager events and explains how to use them in applications.</p>
</div>
<!-- class="sect2" -->
<a id="i1014370"></a>
<div id="ADWSM99124" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.8</span> <a id="sthref46"></a><a id="sthref47"></a>Autocommitting of Workspace Manager Operations</h3>
<p>Many Workspace Manager operations are by default executed as autonomous database transactions that will be committed when they finish. That is, each such transaction is an independent transaction that is called from within the current database transaction, leaves the context of the calling transaction, performs the Workspace Manager operation and then automatically commits it, and then returns to the calling transaction&#39;s context and continues with that transaction. Workspace Manager (<code>DBMS_WM</code>) subprograms that operate in this way have an optional <code>auto_commit</code> parameter, which has a default value of <code>TRUE</code>.</p>
<p>For example, the <a href="long_ref.htm#i86067">CompressWorkspace</a> procedure by default starts an autonomous transaction, compresses the workspace, commits the compression operation, and returns to the calling transaction&#39;s context, where the current database transaction continues.</p>
<p>However, if you want such subprograms not to start an autonomous transaction, but instead to execute in the context of the calling transaction, you can specify the <code>auto_commit</code> parameter with a value of <code>FALSE</code>. In this case, the Workspace Manager operation is executed as part of the current database transaction; and if there is no current open transaction, the Workspace Manager operation starts a new transaction. In either case, the Workspace Manager operation does not take effect until that transaction ends with a commit operation. For example, if you call the <a href="long_ref.htm#i86067">CompressWorkspace</a> procedure with the <code>auto_commit</code> parameter specified as <code>FALSE</code>, the workspace is not compressed until the transaction is committed; and if the transaction is rolled back, the workspace is not compressed.</p>
<p>Note that if you specify <code>FALSE</code> for the <code>auto_commit</code> parameter, you must remember to commit or roll back the transaction explicitly.</p>
<p>If the <code>auto_commit</code> parameter value is <code>TRUE</code> and any open transactions exist, the following considerations apply:</p>
<ul>
<li>
<p>For the <a href="long_ref.htm#i86067">CompressWorkspace</a> and <a href="long_ref.htm#i86068">CompressWorkspaceTree</a> procedures, an exception is raised if there is any open transaction.</p>
</li>
<li>
<p>For all other Workspace Manager procedures, an exception is raised if there is an open transaction in a parent or child workspace of any table that needs to be modified.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1018583"></a>
<div id="ADWSM99125" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.9</span> <a id="sthref48"></a><a id="sthref49"></a>Continually Refreshed Workspaces</h3>
<p>A <span class="bold">continually refreshed workspace</span> is a workspace that is automatically refreshed from its parent workspace whenever data changes are committed in the parent workspace or are merged into the parent workspace from another child workspace. You do not need to call the <a href="long_ref.htm#i83811">RefreshWorkspace</a> procedure for a continually refreshed workspace.</p>
<p>Any workspace in a branch of the workspace tree can be continually refreshed. A child workspace can be a continually refreshed workspace, regardless of whether its parent workspace is continually refreshed. However, if a parent workspace is a continually refreshed workspace, its child workspaces must also be continually refreshed.</p>
<p>To create a continually refreshed workspace, specify <code>TRUE</code> for the <code>isrefreshed</code> parameter in the call to the <a href="long_ref.htm#i78729">CreateWorkspace</a> procedure. See the Usage Notes for the <a href="long_ref.htm#i78729">CreateWorkspace</a> procedure for rules that apply to the creation of a continually refreshed workspace.</p>
<p>To change a workspace that is not continually refreshed to be continually refreshed, use the <a href="long_ref.htm#i109527">ChangeWorkspaceType</a> procedure.</p>
<p>If a workspace is not continually refreshed, you must call the <a href="long_ref.htm#i83811">RefreshWorkspace</a> procedure whenever you want to ensure that data changes in its parent workspace are visible in the workspace.</p>
</div>
<!-- class="sect2" -->
<a id="i1018503"></a>
<div id="ADWSM99126" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.10</span> <a id="sthref50"></a><a id="sthref51"></a>Multiparent Workspaces</h3>
<p>A <span class="bold">multiparent workspace</span> is a child workspace that has two or more parent workspaces. A workspace is initially created with a single parent workspace. However, if the need arises, you can add other workspaces as parent workspaces to an existing workspace, thus making it a multiparent workspace. The multiparent workspace can see data from all of its parent workspaces and their ancestor workspaces, and it can be merged with and refreshed from its parent workspaces.</p>
<p><a href="#i1018386">Figure 1-3</a> shows the same hierarchy of workspaces in <a href="#i1013821">Figure 1-1</a>, except that <code>Workspace3</code> is now a multiparent workspace with two parent workspaces: <code>Workspace1</code> and <code>Workspace4</code>.</p>
<div id="ADWSM99127" class="figure">
<p class="titleinfigure"><a id="i1018386"></a>Figure 1-3 Multiparent Workspace in a Workspace Hierarchy</p>
<img width="332" height="201" src="img/multiparent_ws.gif" alt="Description of Figure 1-3 follows"/><br/>
<a id="sthref52" href="img_text/multiparent_ws.htm">Description of &#34;Figure 1-3 Multiparent Workspace in a Workspace Hierarchy&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>A multiparent workspace is also called a <span class="bold">multiparent leaf workspace</span>. Thus, in <a href="#i1018386">Figure 1-3</a>, <code>Workspace3</code> is a multiparent leaf workspace. The nearest common ancestor of all parent workspaces of a multiparent lead workspace is called the <span class="bold">multiparent root workspace</span>. In <a href="#i1018386">Figure 1-3</a>, the <code>LIVE</code> workspace is the multiparent root workspace of <code>Workspace3</code>. All of the workspaces in the directed acyclic graph (DAG) formed as a result of adding parent workspaces as parents of a leaf workspace are called <span class="bold">multiparent graph workspaces</span>. In <a href="#i1018386">Figure 1-3</a>, <code>Workspace1</code>, <code>Workspace4</code>, and <code>Workspace3</code> are the multiparent graph workspaces.</p>
<p>Multiparent workspaces are allowed only if the <code>ALLOW_MULTI_PARENT_WORKSPACE</code> Workspace Manager system parameter is set to <code>ON.</code> In addition, for a continually refreshed workspace to be a multiparent workspace, the <code>CR_WORKSPACE_MODE</code> Workspace Manager system parameter must be set to <code>PESSIMISTIC_LOCKING</code>; and for a workspace that is not continually refreshed to be a multiparent workspace, the <code>NONCR_WORKSPACE_MODE</code> Workspace Manager system parameter must be set to <code>PESSIMISTIC_LOCKING</code>. For information about Workspace Manager system parameters, see <a href="#i1017681">Section 1.5</a>.</p>
<p>To create a multiparent workspace, use the <a href="long_ref.htm#g1030204">AddAsParentWorkspace</a> procedure. To remove a workspace as a parent of a multiparent workspace, use the <a href="long_ref.htm#i109279">RemoveAsParentWorkspace</a> procedure. To grant and revoke privileges on multiparent graph workspaces, use the <a href="long_ref.htm#CACHFHEJ">GrantGraphPriv</a> and <a href="long_ref.htm#CACFCFGI">RevokeGraphPriv</a> procedures, respectively. These procedures are described in <a href="long_ref.htm#g1035446">Chapter 4</a>.</p>
<p>Workspace Manager provides the following static data dictionary views (described in <a href="long_views.htm#g1008700">Chapter 5</a>) to store information about multiparent workspaces:</p>
<ul>
<li>
<p><a href="long_views.htm#i94144">USER_MP_GRAPH_WORKSPACES</a> and <a href="long_views.htm#i93974">ALL_MP_GRAPH_WORKSPACES</a> contain information about multiparent graph workspaces.</p>
</li>
<li>
<p><a href="long_views.htm#i94220">USER_MP_PARENT_WORKSPACES</a> and <a href="long_views.htm#i94217">ALL_MP_PARENT_WORKSPACES</a> contain information about parent workspaces of multiparent leaf workspaces.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1012495"></a>
<div id="ADWSM99128" class="sect2">
<h3 class="sect2"><span class="secnum">1.1.11</span> Infrastructure <a id="sthref53"></a><a id="sthref54"></a>for Version-Enabling of Tables</h3>
<p>When you version-enable a table using the <a href="long_ref.htm#i80309">EnableVersioning</a> procedure, Workspace Manager automatically performs operations and creates data structures that are invisible to non-DBA users, but that permit Workspace Manager to function. Some of the information maintained by Workspace Manager is stored in the static data dictionary views described in <a href="long_views.htm#g1008700">Chapter 5</a>, and some is stored in system data structures not accessible by users.</p>
<p><a id="sthref55"></a><a id="sthref56"></a><a id="sthref57"></a><a id="sthref58"></a>When a table is version-enabled, Workspace Manager renames the table to <span class="italic">&lt;table-name&gt;</span>_LT, and it adds several columns to this table to store versioning metadata. The added columns have names starting with <span class="italic">WM_</span>: WM_VERSION, WM_CREATETIME, WM_RETIRETIME, WM_NEXTVER, WM_DELSTATUS, and WM_LTLOCK.</p>
<p>Note that users and applications should not specify the <span class="italic">&lt;table-name&gt;</span>_LT table in SQL statements; they should continue to specify the original table name (<span class="italic">&lt;table-name&gt;</span>). (If you ever need to find the name of the <span class="italic">&lt;table_name&gt;</span>_LT table associated with a version-enabled table, or if you want to find out if a table is version-enabled by checking for the existence of a <span class="italic">&lt;table_name&gt;</span>_LT table, use the <a href="long_ref.htm#i115115">GetPhysicalTableName</a> function.)</p>
<p>Workspace Manager also creates a view on the original table (<span class="italic">&lt;table-name&gt;</span>), as well as <code>INSTEAD OF</code> triggers on the view for insert, update, and delete operations. When an application executes a statement to insert, update, or delete data in a version-enabled table, the appropriate <code>INSTEAD OF</code> trigger performs the actual operation. When the view is accessed, it uses the workspace metadata to show only the row versions relevant to the current workspace of the user.</p>
<p><a id="sthref59"></a><a id="sthref60"></a>Because <a id="sthref61"></a><a id="sthref62"></a><a id="sthref63"></a>Workspace Manager uses the original object name when it creates infrastructure objects, the effective maximum length of the name for some kinds of objects is shorter than the maximum permitted by Oracle Database. <a href="#BABJEIFC">Table 1-2</a> provides guidelines for the maximum name length for version-enabled tables and related objects. (See also the information in <a href="#BABFEJCG">Section 1.15</a> about reserved words and characters for certain names.)</p>
<div id="ADWSM99129" class="tblformal">
<p class="titleintable"><a id="sthref64"></a><a id="BABJEIFC"></a>Table 1-2 Name Length Guidelines for Workspace Manager</p>
<table class="cellalignment5786" title="Name Length Guidelines for Workspace Manager" summary="Name Length Guidelines for Workspace Manager" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t5">Type of Object</th>
<th class="cellalignment5787" id="r1c2-t5">Maximum Name Length in Characters</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t5" headers="r1c1-t5">
<p>Table</p>
</td>
<td class="cellalignment5788" headers="r2c1-t5 r1c2-t5">
<p>25</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t5" headers="r1c1-t5">
<p>Column</p>
</td>
<td class="cellalignment5788" headers="r3c1-t5 r1c2-t5">
<p>28</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t5" headers="r1c1-t5">
<p>Index</p>
</td>
<td class="cellalignment5788" headers="r4c1-t5 r1c2-t5">
<p>30 (26 if the index is created or altered between calls to the <a href="long_ref.htm#i113441">BeginDDL</a> and <a href="long_ref.htm#i98106">CommitDDL</a> procedures)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t5" headers="r1c1-t5">
<p>Trigger</p>
</td>
<td class="cellalignment5788" headers="r5c1-t5 r1c2-t5">
<p>30 (24 in Release 11.2.0.1; fixed to 30 in 10.2.0.4.5 and in 11.2.0.2 and later)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t5" headers="r1c1-t5">
<p>Constraint</p>
</td>
<td class="cellalignment5788" headers="r6c1-t5 r1c2-t5">
<p>30 (26 if the constraint is created or altered between calls to the <a href="long_ref.htm#i113441">BeginDDL</a> and <a href="long_ref.htm#i98106">CommitDDL</a> procedures)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p><a id="sthref65"></a>Workspace Manager does not support SQL MERGE statement (any use), or the RETURNING clause with INSERT or UPDATE statements, on version-enabled tables. The RETURNING clause restriction is caused by the fact that Workspace Manager creates views with <code>INSTEAD OF</code> triggers on version-enabled tables, and Oracle Database does not support the RETURNING clause on views that have <code>INSTEAD OF</code> triggers defined on them.</p>
</div>
<!-- class="sect2" -->
<a id="BABGJIEH"></a>
<div id="ADWSM99130" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.1.12</span> <a id="sthref66"></a><a id="sthref67"></a>Creation of Row Versions and Historical Copies</h3>
<p>This section describes the process by which Workspace Manager creates new row versions and maintains historical copies of old versions.</p>
<p>A new row version is created in a version-enabled table when you do either of the following:</p>
<ul>
<li>
<p>Create an explicit savepoint in the current workspace, and update the row.</p>
</li>
<li>
<p>Create a child workspace (using the <a href="long_ref.htm#i78729">CreateWorkspace</a> procedure) under the current workspace, thus creating an implicit savepoint in the current workspace; execute the <a href="long_ref.htm#i78730">GotoWorkspace</a> procedure to go to the child workspace; and update the row.</p>
</li>
</ul>
<p>Any subsequent update of the current row overwrites the current row version, unless history is enabled on the table or another savepoint is created.</p>
<ul>
<li>
<p>If history is enabled <span class="italic">without</span> overwrite (<code>VIEW_WO_OVERWRITE</code>), each update of the current row version creates a full copy of the current row version with the changes and with a timestamp based on the transaction time. This copy becomes the new current row version.</p>
</li>
<li>
<p>If history is enabled <span class="italic">with</span> overwrite (<code>VIEW_W_OVERWRITE</code>), each update of the current row version overwrites the current row version and updates the transaction timestamp.</p>
</li>
<li>
<p>If a savepoint is created in the workspace, the next change to the row creates a new version, and the history cycle begins again.</p>
</li>
</ul>
<p>Row versions created in a workspace are not visible from the parent workspace until you execute the <a href="long_ref.htm#i89452">MergeWorkspace</a> or <a href="long_ref.htm#i90863">MergeTable</a> procedure.</p>
<p>When you execute the <a href="long_ref.htm#i89452">MergeWorkspace</a> procedure for a child workspace, only the current row version in the child workspace is merged into the parent workspace. If you specify the <code>remove_workspace</code> parameter as <code>TRUE</code>, any intermediate row versions in the child workspace are deleted when the child workspace is removed. To retain all intermediate versions created in the child workspace, the <code>remove_workspace</code> parameter value must be <code>FALSE</code> (the default).</p>
<p>When you execute the <a href="long_ref.htm#i86067">CompressWorkspace</a> procedure on a child workspace to eliminate intermediate savepoints, you can also remove the associated historical copies of that row version. If you do not remove these copies, they are associated with the next version.</p>
<p>Intermediate row versions can only be selected for read-only access. To select an intermediate row version for read-only access, go to the workspace (<a href="long_ref.htm#i78730">GotoWorkspace</a> procedure) if you are not already in it, and execute either the <a href="long_ref.htm#i90546">GotoDate</a> procedure to set the session context to a historical time or the <a href="long_ref.htm#i91086">GotoSavepoint</a> procedure to set the session context to a specific savepoint. Subsequent SELECT statements will select, for read-only access, the latest row version as of the specified date or savepoint.</p>
<p><a href="#BABDCBIJ">Example 1-1</a> shows when row versions are created for a version-enabled table after the creation of an implicit savepoint and an explicit savepoint. For the example, assume that the EMP table contains columns named EMPNO, SALARY, and COMMISSION.</p>
<div id="ADWSM99523" class="example">
<p class="titleinexample"><a id="BABDCBIJ"></a>Example 1-1 Row Versions Created After Implicit and Explicit Savepoints</p>
<pre>execute dbms_wm.GotoWorkspace(&#39;LIVE&#39;) ;
insert into EMP(empno, salary, commission) values (100, 0, 0) ;
update EMP set salary = 10000 ;
update EMP set commission = 1000 ;
commit ;
 
&ndash;- CreateWorkspace creates an implicit savepoint in &#39;LIVE&#39;; DML operations
&ndash;- create new row versions for both workspaces.
execute dbms_wm.CreateWorkspace(&#39;WorkSpace 1&#39;) ;
execute dbms_wm.GotoWorkspace(&#39;WorkSpace 1&#39;) ;
update EMP set salary = 20000 ;
update EMP set commission = 2000 ; 
commit ;
 
execute dbms_wm.GotoWorkspace(&#39;LIVE&#39;) ;
update EMP set salary = 30000, commission = 3000 ;
commit ;
 
-&ndash; CreateSavepoint creates an explicit savepoint in &#39;LIVE&#39;; DML operations
-&ndash; create new row versions for only the LIVE workspace.
execute dbms_wm.CreateSavepoint(&#39;LIVE&#39;, &#39;SP1&#39;) ;
update EMP set salary = 40000 ;
update EMP set commission = 4000 ; 
delete EMP where empno = 100 ;
commit ;
</pre></div>
<!-- class="example" -->
<p>If <a href="#BABDCBIJ">Example 1-1</a> is executed for a table that has the <code>VIEW_WO_OVERWRITE</code> history option, then the <span class="italic">xxx</span>_HIST views (see <a href="long_views.htm#i87609">Section 5.53</a>) will contain a single row for each DML operation. For example:</p>
<pre>select salary, commission, wm_workspace, wm_optype from EMP_HIST where empno = 100;
</pre>
<div class="inftblinformal">
<table class="cellalignment5791" summary="Results of the preceding query" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t6">SALARY</th>
<th class="cellalignment5787" id="r1c2-t6">COMMISSION</th>
<th class="cellalignment5787" id="r1c3-t6">WM_WORKSPACE</th>
<th class="cellalignment5787" id="r1c4-t6">WM_OPTYPE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t6" headers="r1c1-t6">0</td>
<td class="cellalignment5788" headers="r2c1-t6 r1c2-t6">0</td>
<td class="cellalignment5788" headers="r2c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r2c1-t6 r1c4-t6">I</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t6" headers="r1c1-t6">10000</td>
<td class="cellalignment5788" headers="r3c1-t6 r1c2-t6">0</td>
<td class="cellalignment5788" headers="r3c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r3c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t6" headers="r1c1-t6">10000</td>
<td class="cellalignment5788" headers="r4c1-t6 r1c2-t6">1000</td>
<td class="cellalignment5788" headers="r4c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r4c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t6" headers="r1c1-t6">20000</td>
<td class="cellalignment5788" headers="r5c1-t6 r1c2-t6">1000</td>
<td class="cellalignment5788" headers="r5c1-t6 r1c3-t6">Workspace 1</td>
<td class="cellalignment5788" headers="r5c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t6" headers="r1c1-t6">20000</td>
<td class="cellalignment5788" headers="r6c1-t6 r1c2-t6">2000</td>
<td class="cellalignment5788" headers="r6c1-t6 r1c3-t6">Workspace 1</td>
<td class="cellalignment5788" headers="r6c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t6" headers="r1c1-t6">30000</td>
<td class="cellalignment5788" headers="r7c1-t6 r1c2-t6">3000</td>
<td class="cellalignment5788" headers="r7c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r7c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t6" headers="r1c1-t6">40000</td>
<td class="cellalignment5788" headers="r8c1-t6 r1c2-t6">3000</td>
<td class="cellalignment5788" headers="r8c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r8c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t6" headers="r1c1-t6">40000</td>
<td class="cellalignment5788" headers="r9c1-t6 r1c2-t6">4000</td>
<td class="cellalignment5788" headers="r9c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r9c1-t6 r1c4-t6">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t6" headers="r1c1-t6">40000</td>
<td class="cellalignment5788" headers="r10c1-t6 r1c2-t6">4000</td>
<td class="cellalignment5788" headers="r10c1-t6 r1c3-t6">LIVE</td>
<td class="cellalignment5788" headers="r10c1-t6 r1c4-t6">D</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>However, if <a href="#BABDCBIJ">Example 1-1</a> is executed for a table that has the <code>VIEW_W_OVERWRITE</code> or <code>NONE</code> history option, then the <span class="italic">xxx</span>_HIST views (see <a href="long_views.htm#i87609">Section 5.53</a>) will contain only a single row for each savepoint, because the row version is overridden by subsequent DML operations within the same savepoint. For example:</p>
<pre>select salary, commission, wm_workspace, wm_optype from EMP_HIST where empno = 100;
</pre>
<div class="inftblinformal">
<table class="cellalignment5791" summary="Results of the preceding query" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t7">SALARY</th>
<th class="cellalignment5787" id="r1c2-t7">COMMISSION</th>
<th class="cellalignment5787" id="r1c3-t7">WM_WORKSPACE</th>
<th class="cellalignment5787" id="r1c4-t7">WM_OPTYPE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t7" headers="r1c1-t7">10000</td>
<td class="cellalignment5788" headers="r2c1-t7 r1c2-t7">1000</td>
<td class="cellalignment5788" headers="r2c1-t7 r1c3-t7">LIVE</td>
<td class="cellalignment5788" headers="r2c1-t7 r1c4-t7">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t7" headers="r1c1-t7">20000</td>
<td class="cellalignment5788" headers="r3c1-t7 r1c2-t7">2000</td>
<td class="cellalignment5788" headers="r3c1-t7 r1c3-t7">Workspace 1</td>
<td class="cellalignment5788" headers="r3c1-t7 r1c4-t7">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t7" headers="r1c1-t7">30000</td>
<td class="cellalignment5788" headers="r4c1-t7 r1c2-t7">3000</td>
<td class="cellalignment5788" headers="r4c1-t7 r1c3-t7">LIVE</td>
<td class="cellalignment5788" headers="r4c1-t7 r1c4-t7">U</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t7" headers="r1c1-t7">40000</td>
<td class="cellalignment5788" headers="r5c1-t7 r1c2-t7">4000</td>
<td class="cellalignment5788" headers="r5c1-t7 r1c3-t7">LIVE</td>
<td class="cellalignment5788" headers="r5c1-t7 r1c4-t7">D</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99131" class="sect2"><a id="sthref68"></a>
<h3 class="sect2"><span class="secnum">1.1.13</span> <a id="sthref69"></a><a id="sthref70"></a><a id="sthref71"></a>Workspace Manager Schema, Metadata, and Package</h3>
<p>Workspace Manager creates a user named <code>WMSYS</code>. The <code>WMSYS</code> schema is used to store all the metadata information for Workspace Manager. A PL/SQL package with the public synonym <code>DBMS_WM</code> contains the Workspace Manager subprograms (procedures and functions).</p>
<p>The following privileges are granted to the <code>PUBLIC</code> user group:</p>
<ul>
<li>
<p><code>SELECT</code> privilege on Workspace Manager static data dictionary views (described in <a href="long_views.htm#g1008700">Chapter 5</a>)</p>
</li>
<li>
<p><code>EXECUTE</code> privilege on the <code>DBMS_WM</code> package (described in <a href="long_ref.htm#g1035446">Chapter 4</a>)</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013953"></a>
<div id="ADWSM99132" class="sect1">
<h2 class="sect1"><span class="secnum">1.2</span> Session <a id="sthref72"></a><a id="sthref73"></a>Context Information for Workspace Manager</h2>
<p>Users perform Workspace Manager operations within a standard Oracle session. (A session is a specific connection of a user to an Oracle instance through a user process; a session lasts from the time the user connects until the time the user disconnects or exits the database application.) When you perform Workspace Manager operations, information relating to the session context is automatically recorded.</p>
<p>The session context information includes the workspace name and a context value, and it determines what data the session can see in the workspace and what workspaces the session can enter. The context value is one of the following:</p>
<ul>
<li>
<p><code>LATEST</code>: The session is currently set to the <code>LATEST</code> savepoint (explained in <a href="#i1012409">Section 1.1.2</a>), and it can see changes as they are made in the workspace. The context is automatically set to <code>LATEST</code> when the session enters the workspace (using the <a href="long_ref.htm#i78730">GotoWorkspace</a> procedure).</p>
</li>
<li>
<p>A savepoint name: The session is currently set to a savepoint in the workspace. The session cannot see changes as they are made in the latest version of the workspace, but instead sees a static view of the data as of the savepoint creation time. The session context is set to the savepoint name after a call to the <a href="long_ref.htm#i90546">GotoDate</a> procedure.</p>
</li>
<li>
<p>An instant (a point in time): The session is currently set to a specific point in time. The session cannot see changes as they are made in the latest version of the workspace, but instead sees a static view of the data as of the specific time. The session context is set to an instant after a call to the <a href="long_ref.htm#i90546">GotoDate</a> procedure. (The exact time point depends on the history option for tracking modifications, as set by the <a href="long_ref.htm#i80309">EnableVersioning</a> procedure or modified by the <a href="long_ref.htm#i89852">SetWoOverwriteOFF</a> or <a href="long_ref.htm#i89736">SetWoOverwriteON</a> procedure.)</p>
</li>
</ul>
<p>You can retrieve information about the session context by using the <a href="long_ref.htm#i98221">GetSessionInfo</a> procedure. Retrieving this information can be useful if you need to know where a session is (workspace and context) -- for example, after you performed a combination of <a href="long_ref.htm#i78730">GotoWorkspace</a>, <a href="long_ref.htm#i91086">GotoSavepoint</a>, and <a href="long_ref.htm#i90546">GotoDate</a> operations.</p>
</div>
<!-- class="sect1" -->
<a id="i1006224"></a>
<div id="ADWSM99133" class="sect1">
<h2 class="sect1"><span class="secnum">1.3</span> <a id="sthref74"></a>Lock Management with Workspace Manager</h2>
<p>In addition to locks provided by regular Oracle database transactions, Workspace Manager provides two types of version locks. These locks are primarily intended to eliminate row conflicts between a parent workspace and a child workspace. You can enable locking for the workspace, the session, or specified rows, or some combination:</p>
<ul>
<li>
<p>Lock at the workspace level (<a href="long_ref.htm#i91682">SetWorkspaceLockModeON</a> procedure) if the data changes are in one or a few workspaces, or if you want all data changes in the workspace to be locked.</p>
</li>
<li>
<p>Lock at the session level (<a href="long_ref.htm#i79459">SetLockingON</a> procedure) if the data changes are being made in many workspaces. When locking is enabled for a session, Workspace Manager locks rows in all workspaces in which the session participates.</p>
</li>
<li>
<p>Lock specific rows (<a href="long_ref.htm#i90778">LockRows</a> procedure) either to lock the rows before they are updated or to automatically lock rows after they are inserted (or updated if they satisfy the <code>WHERE</code> clause after the update).</p>
</li>
</ul>
<p>Workspace or session locks persist for the duration of the workspace or session, respectively, or until the workspace is merged or rolled back.</p>
<p>Like database locks, Workspace Manager locks can be exclusive or shared:</p>
<ul>
<li>
<p><a id="sthref75"></a><a id="sthref76"></a>Exclusive locks - The locks are very similar to database transaction locks in that once an exclusive lock is placed on a record, no other user in the database can change the record except for the session (user) that locked it. When exclusive locking is enabled for a user, any row that the user changes is locked exclusively. In addition, the parent row to that row is also locked exclusively. Thus, exclusive locking can be used to eliminate data conflicts between a child and its parent workspace. (However, see <a href="#BABGGJAA">Section 1.3.1</a> for information about row versions with exclusive locking, and how the timing of an exclusive lock with respect to an update operation can affect whether other users can update a row.)</p>
</li>
<li>
<p><a id="sthref77"></a><a id="sthref78"></a>Shared locks - Once a shared lock is placed on a row, only users in the workspace in which it is locked are allowed to modify it. Shared locks are also placed on the parent version of the row, thus protecting the row from conflicts. The benefit of shared locks over exclusive locks is that all users in the workspace where the row is locked can access the row for changes. An ideal use for this kind of lock is on a row that needs to have no conflicts with its parent, but that needs to be changed by a collection of users participating in a group project. Note that shared locking must be individually enabled for each session in the workspace.</p>
</li>
</ul>
<p><a id="sthref79"></a><a id="sthref80"></a><a id="sthref81"></a><a id="sthref82"></a>Workspace-exclusive locks and version-exclusive locks are forms of exclusive locking that control which users can and cannot change data values, but (unlike exclusive locking) they do not prevent conflicts from occurring. <span class="bold">Workspace-exclusive locks</span> lock rows such that only the user that set the lock can change the values in the current workspace; however, other users in other workspaces can change the values. <span class="bold">Version-exclusive locks</span> lock rows such that only the user that set the lock can change the values (and that user can be in any workspace); no other users (in any workspace) can change the values.</p>
<p><a href="#g1022127">Table 1-3</a> indicates, for a row locked by a specific user in a specific workspace, which users in which workspaces can and cannot modify the row. For example, the first two entries in <a href="#g1022127">Table 1-3</a> mean that when a shared (S) lock is placed on a row, any user in the workspace in which the row was locked can modify the row, but any user in a workspace different from the workspace in which the row was locked cannot modify the row.</p>
<div id="ADWSM99134" class="tblformal">
<p class="titleintable"><a id="sthref83"></a><a id="g1022127"></a>Table 1-3 Workspace Manager Lock Modes and Data Modification Ability</p>
<table class="cellalignment5786" title="Workspace Manager Lock Modes and Data Modification Ability" summary="Workspace Manager Lock Modes and Data Modification Ability" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t8">Lock Mode</th>
<th class="cellalignment5787" id="r1c2-t8">User</th>
<th class="cellalignment5787" id="r1c3-t8">Workspace of User</th>
<th class="cellalignment5787" id="r1c4-t8">Can Modify?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t8" headers="r1c1-t8">
<p>Shared (S)</p>
</td>
<td class="cellalignment5788" headers="r2c1-t8 r1c2-t8">
<p>Any user</p>
</td>
<td class="cellalignment5788" headers="r2c1-t8 r1c3-t8">
<p>Workspace in which row was locked</p>
</td>
<td class="cellalignment5788" headers="r2c1-t8 r1c4-t8">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t8" headers="r1c1-t8">
<p>Shared (S)</p>
</td>
<td class="cellalignment5788" headers="r3c1-t8 r1c2-t8">
<p>Any user</p>
</td>
<td class="cellalignment5788" headers="r3c1-t8 r1c3-t8">
<p>Different from workspace in which row was locked</p>
</td>
<td class="cellalignment5788" headers="r3c1-t8 r1c4-t8">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t8" headers="r1c1-t8">
<p>Exclusive (E)</p>
</td>
<td class="cellalignment5788" headers="r4c1-t8 r1c2-t8">
<p>User that locked the row</p>
</td>
<td class="cellalignment5788" headers="r4c1-t8 r1c3-t8">
<p>Workspace in which row was locked</p>
</td>
<td class="cellalignment5788" headers="r4c1-t8 r1c4-t8">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t8" headers="r1c1-t8">
<p>Exclusive (E)</p>
</td>
<td class="cellalignment5788" headers="r5c1-t8 r1c2-t8">
<p>User that locked the row</p>
</td>
<td class="cellalignment5788" headers="r5c1-t8 r1c3-t8">
<p>Different from workspace in which row was locked</p>
</td>
<td class="cellalignment5788" headers="r5c1-t8 r1c4-t8">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t8" headers="r1c1-t8">
<p>Exclusive (E)</p>
</td>
<td class="cellalignment5788" headers="r6c1-t8 r1c2-t8">
<p>Different user from the one that locked the row</p>
</td>
<td class="cellalignment5788" headers="r6c1-t8 r1c3-t8">
<p>Any workspace</p>
</td>
<td class="cellalignment5788" headers="r6c1-t8 r1c4-t8">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t8" headers="r1c1-t8">
<p>Workspace Exclusive (WE)</p>
</td>
<td class="cellalignment5788" headers="r7c1-t8 r1c2-t8">
<p>User that locked the row</p>
</td>
<td class="cellalignment5788" headers="r7c1-t8 r1c3-t8">
<p>Any workspace</p>
</td>
<td class="cellalignment5788" headers="r7c1-t8 r1c4-t8">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t8" headers="r1c1-t8">
<p>Workspace Exclusive (WE)</p>
</td>
<td class="cellalignment5788" headers="r8c1-t8 r1c2-t8">
<p>Different user from the one that locked the row</p>
</td>
<td class="cellalignment5788" headers="r8c1-t8 r1c3-t8">
<p>Different from workspace in which row was locked</p>
</td>
<td class="cellalignment5788" headers="r8c1-t8 r1c4-t8">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t8" headers="r1c1-t8">
<p>Workspace Exclusive (WE)</p>
</td>
<td class="cellalignment5788" headers="r9c1-t8 r1c2-t8">
<p>Different user from the one that locked the row</p>
</td>
<td class="cellalignment5788" headers="r9c1-t8 r1c3-t8">
<p>Workspace in which row was locked</p>
</td>
<td class="cellalignment5788" headers="r9c1-t8 r1c4-t8">
<p>No</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t8" headers="r1c1-t8">
<p>Version Exclusive (VE)</p>
</td>
<td class="cellalignment5788" headers="r10c1-t8 r1c2-t8">
<p>User that locked the row</p>
</td>
<td class="cellalignment5788" headers="r10c1-t8 r1c3-t8">
<p>Any workspace</p>
</td>
<td class="cellalignment5788" headers="r10c1-t8 r1c4-t8">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t8" headers="r1c1-t8">
<p>Version Exclusive (VE)</p>
</td>
<td class="cellalignment5788" headers="r11c1-t8 r1c2-t8">
<p>Different user from the one that locked the row</p>
</td>
<td class="cellalignment5788" headers="r11c1-t8 r1c3-t8">
<p>Any workspace</p>
</td>
<td class="cellalignment5788" headers="r11c1-t8 r1c4-t8">
<p>No</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>Locking a row does not affect workspace merge, refresh, and rollback operations, but it affects what can be done with the row after these operations. You can control these workspace operations by using workspace privileges, calling the <a href="long_ref.htm#i79088">FreezeWorkspace</a> procedure, and checking the workspace <span class="italic">xxx</span>_LOCK view or views (described in <a href="long_views.htm#i87554">Section 5.54</a>) before performing the operations.</p>
<p>The <span class="italic">xxx</span>_LOCK static data dictionary views (described in <a href="long_views.htm#i87554">Section 5.54</a>) contain information about locks in each version-enabled table.</p>
<p>For information about Workspace Manager locking with DML operations on tables with referential integrity constraints, see <a href="#BABGIIBG">Section 1.9.1.1</a>.</p>
<a id="BABGGJAA"></a>
<div id="ADWSM99135" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">1.3.1</span> Exclusive Locking and Row Versions</h3>
<p>The timing of an exclusive lock with respect to an update operation in a child workspace can affect which version, if any, of the row can be updated in a parent workspace. For example, when a table is version-enabled in the <code>LIVE</code> workspace, each original row is assigned version 0. Assume that a workspace named <code>W1</code> is created as a child of the <code>LIVE</code> workspace. When workspace <code>W1</code> is created, the following things happen:</p>
<ul>
<li>
<p>Version 1 is assigned to the <code>LIVE</code> workspace (but no additional row is created).</p>
</li>
<li>
<p>Version 2 is assigned to workspace <code>W1</code> (but no additional row is created). Queries in workspace <code>W1</code> still return version 0 of the row that is in the <code>LIVE</code> workspace.</p>
</li>
</ul>
<p>Using this example, if a user in workspace <code>W1</code> places an exclusive lock on a row before it updates the row, only that user in workspace <code>W1</code> can update the row. Specifically:</p>
<ul>
<li>
<p>Version 0 of the row is locked, preventing any update of the row from any workspace until the row is unlocked.</p>
</li>
<li>
<p>The lock can be placed from workspace <code>W1</code> (or a descendent workspace of <code>W1</code>) because version 0 is the current physical row for the workspace.</p>
</li>
<li>
<p>When a user in workspace <code>W1</code> updates the row, a new row (version 2) is created that is visible only from workspace <code>W1</code> and any of its child workspaces.</p>
</li>
</ul>
<p>However, if the row is not locked in the <code>LIVE</code> workspace and if a user in workspace W1 updates the row and then places an exclusive lock on the row, a user in the <code>LIVE</code> workspace can update the row. Specifically:</p>
<ul>
<li>
<p>A new row (version 2) is created that is visible only from workspace <code>W1</code> and any of its child workspaces.</p>
</li>
<li>
<p>Version 2 of the row is locked. No user in workspace <code>W1</code> other than the user that placed the lock, or no user in any child workspace of <code>W1</code>, can update the row or create a new version of the row.</p>
</li>
<li>
<p>Version 0 of the row in the <code>LIVE</code> workspace is not locked. If a user in the <code>LIVE</code> workspace or a sibling workspace of <code>W1</code> updates the row, a new version (version 1) of the row is created. (Version 0 is not locked because it is no longer the current version of the row for users in workspace <code>W1</code>; rather, version 2 is the current version of the row in that workspace.)</p>
</li>
</ul>
<p>In other words, an exclusive lock after an update does not lock previous versions of the row in workspaces above the locking workspace in the workspace tree or in other branches of the workspace tree.</p>
</div>
<!-- class="sect2" -->
<div id="ADWSM99516" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref84"></a>
<h3 class="sect2"><span class="secnum">1.3.2</span> Locks Taken for Workspace Manager Operations</h3>
<p>Workspace Manager automatically takes locks when performing certain operations related to DBMS_WM subprograms. Workspace Manager checks:</p>
<ul>
<li>
<p>If the required lock can be successfully requested</p>
</li>
<li>
<p>If the workspace is frozen in a mode that is incompatible with the requested operation</p>
</li>
</ul>
<p>If the required lock cannot be requested or if the workspace is frozen in an incompatible mode, an error is generated.</p>
<p><a href="#BABGDJHJ">Table 1-4</a> lists Workspace Manager operations and the incompatible freeze modes for certain types of workspaces (parent workspace, current workspace, intermediate multiparent workspace) to be locked for the operation. In <a href="#BABGDJHJ">Table 1-4</a>:</p>
<ul>
<li>
<p>N/A means not applicable; that is, no freeze modes are incompatible.</p>
</li>
<li>
<p>Exclusive + means that in addition to an exclusive lock, no sessions can be in the workspace.</p>
</li>
<li>
<p>Sub eXclusive means the SX_MODE constant as used in the <a class="olink ARPLS66765" href="../ARPLS/d_lock.htm#ARPLS66765"><code>DBMS_LOCK</code></a> procedure, described in <span class="italic">Oracle Database PL/SQL Packages and Types Reference</span>. SX_MODE can be used on an aggregate object to indicate that exclusive locks are being acquired on sub-parts of the object.</p>
</li>
<li>
<p>Shared Sub eXclusive means the SX_MODE constant as used in the <a class="olink ARPLS66765" href="../ARPLS/d_lock.htm#ARPLS66765"><code>DBMS_LOCK</code></a> procedure, described in <span class="italic">Oracle Database PL/SQL Packages and Types Reference</span>. SSX_MODE can be used to indicate that the entire aggregate object has a shared lock, but some of the sub-parts may also have exclusive locks.</p>
</li>
<li>
<p>Shared(1) means shared, except exclusive when ROW_LEVEL_LOCKING=OFF.</p>
</li>
<li>
<p>Shared(2) means shared, except Shared Sub eXclusive when ROW_LEVEL_LOCKING=OFF.</p>
</li>
<li>
<p>Shared(3) means shared, except Exclusive when COMPRESS_PARENT_AFTER_REMOVE=ON.</p>
</li>
</ul>
<div id="ADWSM99517" class="tblformal">
<p class="titleintable"><a id="sthref85"></a><a id="BABGDJHJ"></a>Table 1-4 Operations and Incompatible Freeze Modes for Workspace Types</p>
<table class="cellalignment5786" title="Operations and Incompatible Freeze Modes for Workspace Types" summary="Operations and Incompatible Freeze Modes for Workspace Types" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t9">Operation</th>
<th class="cellalignment5787" id="r1c2-t9">Parent Workspace</th>
<th class="cellalignment5787" id="r1c3-t9">Incompatible Freeze Modes</th>
<th class="cellalignment5787" id="r1c4-t9">Current Workspace</th>
<th class="cellalignment5787" id="r1c5-t9">Incompatible Freeze Modes</th>
<th class="cellalignment5787" id="r1c6-t9">Intermediate Multiparent Workspace</th>
<th class="cellalignment5787" id="r1c7-t9">Incompatible Freeze Modes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t9" headers="r1c1-t9">
<p>Any DML</p>
</td>
<td class="cellalignment5788" headers="r2c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r2c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r2c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r2c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION,</p>
<p>WM_ONLY</p>
</td>
<td class="cellalignment5788" headers="r2c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r2c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i87363">BeginResolve</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r3c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r3c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r3c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r3c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r3c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i109527">ChangeWorkspaceType</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r4c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r4c1-t9 r1c4-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r4c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r4c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r4c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i90948">CommitResolve</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r5c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r5c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r5c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r5c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r5c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i86067">CompressWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r6c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r6c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r6c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r6c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r6c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i79490">CreateSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r7c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r7c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r7c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r7c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r7c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i78729">CreateWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r8c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r8c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r8c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r8c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r8c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r8c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i86069">DeleteSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r9c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r9c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r9c1-t9 r1c4-t9">
<p>Exclusive +</p>
</td>
<td class="cellalignment5788" headers="r9c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r9c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r9c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i114714">Export</a></p>
</td>
<td class="cellalignment5788" headers="r10c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r10c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r10c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r10c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r10c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r10c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i79088">FreezeWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r11c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r11c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r11c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r11c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r11c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r11c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r12c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i78730">GotoWorkspace</a> (non-LIVE)</p>
</td>
<td class="cellalignment5788" headers="r12c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r12c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r12c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r12c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r12c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r12c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r13c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i78730">GotoWorkspace</a> (LIVE)</p>
</td>
<td class="cellalignment5788" headers="r13c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r13c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r13c1-t9 r1c4-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r13c1-t9 r1c5-t9">
<p>NO_ACCESS<a id="sthref86" href="#sthref86" onclick="footdisplay(1,&#34;The LIVE workspace cannot be frozen in NO_ACCESS mode.&#34;)"><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
<td class="cellalignment5788" headers="r13c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r13c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r14c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i110329">Import</a></p>
</td>
<td class="cellalignment5788" headers="r14c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r14c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r14c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r14c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r14c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r14c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r15c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i90778">LockRows</a></p>
</td>
<td class="cellalignment5788" headers="r15c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r15c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r15c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r15c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r15c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r15c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r16c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i90863">MergeTable</a> (remove_data=&gt;false)</p>
</td>
<td class="cellalignment5788" headers="r16c1-t9 r1c2-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r16c1-t9 r1c3-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r16c1-t9 r1c4-t9">
<p>Sub eXclusive</p>
</td>
<td class="cellalignment5788" headers="r16c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r16c1-t9 r1c6-t9">
<p>Sub eXclusive</p>
</td>
<td class="cellalignment5788" headers="r16c1-t9 r1c7-t9">
<p>NO_ACCESS</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r17c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i90863">MergeTable</a> (remove_data=&gt;true)</p>
</td>
<td class="cellalignment5788" headers="r17c1-t9 r1c2-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r17c1-t9 r1c3-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r17c1-t9 r1c4-t9">
<p>Sub eXclusive</p>
</td>
<td class="cellalignment5788" headers="r17c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r17c1-t9 r1c6-t9">
<p>Sub eXclusive</p>
</td>
<td class="cellalignment5788" headers="r17c1-t9 r1c7-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r18c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i89452">MergeWorkspace</a> (remove_workspace=&gt;false)</p>
</td>
<td class="cellalignment5788" headers="r18c1-t9 r1c2-t9">
<p>Shared(2)</p>
</td>
<td class="cellalignment5788" headers="r18c1-t9 r1c3-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r18c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r18c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r18c1-t9 r1c6-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r18c1-t9 r1c7-t9">
<p>NO_ACCESS</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r19c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i89452">MergeWorkspace</a> (remove_workspace=&gt;true)</p>
</td>
<td class="cellalignment5788" headers="r19c1-t9 r1c2-t9">
<p>Shared(1)</p>
</td>
<td class="cellalignment5788" headers="r19c1-t9 r1c3-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r19c1-t9 r1c4-t9">
<p>Exclusive +</p>
</td>
<td class="cellalignment5788" headers="r19c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r19c1-t9 r1c6-t9">
<p>Exclusive +</p>
</td>
<td class="cellalignment5788" headers="r19c1-t9 r1c7-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r20c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#CACDIIDG">PurgeTable</a></p>
</td>
<td class="cellalignment5788" headers="r20c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r20c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r20c1-t9 r1c4-t9">
<p>None; table locked in Exclusive mode</p>
</td>
<td class="cellalignment5788" headers="r20c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r20c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r20c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r21c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i91234">RefreshTable</a></p>
</td>
<td class="cellalignment5788" headers="r21c1-t9 r1c2-t9">
<p>Shared(2)</p>
</td>
<td class="cellalignment5788" headers="r21c1-t9 r1c3-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r21c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r21c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r21c1-t9 r1c6-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r21c1-t9 r1c7-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r22c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i83811">RefreshWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r22c1-t9 r1c2-t9">
<p>Shared(2)</p>
</td>
<td class="cellalignment5788" headers="r22c1-t9 r1c3-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r22c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r22c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r22c1-t9 r1c6-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r22c1-t9 r1c7-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r23c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i108854">RemoveWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r23c1-t9 r1c2-t9">
<p>Shared(3)</p>
</td>
<td class="cellalignment5788" headers="r23c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r23c1-t9 r1c4-t9">
<p>Exclusive +</p>
</td>
<td class="cellalignment5788" headers="r23c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r23c1-t9 r1c6-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r23c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r24c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#CACCGBIA">RenameSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r24c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r24c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r24c1-t9 r1c4-t9">
<p>Exclusive +</p>
</td>
<td class="cellalignment5788" headers="r24c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r24c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r24c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r25c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#CACBFECF">RenameWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r25c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r25c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r25c1-t9 r1c4-t9">
<p>Exclusive +</p>
</td>
<td class="cellalignment5788" headers="r25c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r25c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r25c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r26c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i87840">RollbackResolve</a></p>
</td>
<td class="cellalignment5788" headers="r26c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r26c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r26c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r26c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r26c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r26c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r27c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i87881">RollbackTable</a></p>
</td>
<td class="cellalignment5788" headers="r27c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r27c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r27c1-t9 r1c4-t9">
<p>Shared Sub eXclusive</p>
</td>
<td class="cellalignment5788" headers="r27c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r27c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r27c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r28c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i89943">RollbackWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r28c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r28c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r28c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r28c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r28c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r28c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r29c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i113360">SetConflictWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r29c1-t9 r1c2-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r29c1-t9 r1c3-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r29c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r29c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r29c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r29c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r30c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i85583">SetDiffVersions</a></p>
</td>
<td class="cellalignment5788" headers="r30c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r30c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r30c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r30c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r30c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r30c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r31c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i91423">SetMultiWorkspaces</a></p>
</td>
<td class="cellalignment5788" headers="r31c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r31c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r31c1-t9 r1c4-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r31c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r31c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r31c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r32c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i107704">SetWorkspaceLockModeOFF</a></p>
</td>
<td class="cellalignment5788" headers="r32c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r32c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r32c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r32c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r32c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r32c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r33c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i91682">SetWorkspaceLockModeON</a></p>
</td>
<td class="cellalignment5788" headers="r33c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r33c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r33c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r33c1-t9 r1c5-t9">
<p>NO_ACCESS</p>
</td>
<td class="cellalignment5788" headers="r33c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r33c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r34c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i85162">UnfreezeWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r34c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r34c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r34c1-t9 r1c4-t9">
<p>Exclusive</p>
</td>
<td class="cellalignment5788" headers="r34c1-t9 r1c5-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r34c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r34c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r35c1-t9" headers="r1c1-t9">
<p><a href="long_ref.htm#i85344">UnlockRows</a></p>
</td>
<td class="cellalignment5788" headers="r35c1-t9 r1c2-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r35c1-t9 r1c3-t9">
<p>N/A</p>
</td>
<td class="cellalignment5788" headers="r35c1-t9 r1c4-t9">
<p>Shared</p>
</td>
<td class="cellalignment5788" headers="r35c1-t9 r1c5-t9">
<p>NO_ACCESS,</p>
<p>READ_ONLY,</p>
<p>ONEWRITER,</p>
<p>ONEWRITER_SESSION</p>
</td>
<td class="cellalignment5788" headers="r35c1-t9 r1c6-t9">
<p>None</p>
</td>
<td class="cellalignment5788" headers="r35c1-t9 r1c7-t9">
<p>N/A</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>The LIVE workspace cannot be frozen in NO_ACCESS mode.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1017165"></a>
<div id="ADWSM99136" class="sect1">
<h2 class="sect1"><span class="secnum">1.4</span> <a id="sthref87"></a><a id="sthref88"></a>Privilege Management with Workspace Manager</h2>
<p>Workspace Manager provides a set of privileges that are separate from standard Oracle database privileges. Workspace Manager <span class="bold">workspace-level privileges</span> (with names in the form <span class="italic">xxx_WORKSPACE)</span> allow the user to affect a specified workspace, and <span class="bold">system-level privileges</span> (with names in the form <span class="italic">xxx_ANY_WORKSPACE)</span> allow the user to affect any workspace.</p>
<p><a href="#g1021970">Table 1-5</a> lists the Workspace Manager privileges.</p>
<div id="ADWSM99137" class="tblformal">
<p class="titleintable"><a id="sthref89"></a><a id="g1021970"></a>Table 1-5 Workspace Manager Privileges</p>
<table class="cellalignment5786" title="Workspace Manager Privileges" summary="Workspace Manager Privileges" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t10">Privilege</th>
<th class="cellalignment5787" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t10" headers="r1c1-t10">
<p><code><a id="sthref90"></a><a id="sthref91"></a>ACCESS_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r2c1-t10 r1c2-t10">
<p>Allows the user to go to a specified workspace. <code>ACCESS_WORKSPACE</code> or <code>ACCESS_ANY_WORKSPACE</code> privilege is needed for all other privileges.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t10" headers="r1c1-t10">
<p><code><a id="sthref92"></a><a id="sthref93"></a>ACCESS_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r3c1-t10 r1c2-t10">
<p>Allows the user to go to any workspace. <code>ACCESS_WORKSPACE</code> or <code>ACCESS_ANY_WORKSPACE</code> privilege is needed for all other privileges.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t10" headers="r1c1-t10">
<p><code><a id="sthref94"></a><a id="sthref95"></a>CREATE_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r4c1-t10 r1c2-t10">
<p>Allows the user to create a child workspace in a specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t10" headers="r1c1-t10">
<p><code><a id="sthref96"></a><a id="sthref97"></a>CREATE_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r5c1-t10 r1c2-t10">
<p>Allows the user to create a child workspace in any workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t10" headers="r1c1-t10">
<p><code><a id="sthref98"></a><a id="sthref99"></a>FREEZE_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r6c1-t10 r1c2-t10">
<p>Allows the user to freeze and unfreeze a specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t10" headers="r1c1-t10">
<p><code><a id="sthref100"></a><a id="sthref101"></a>FREEZE_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r7c1-t10 r1c2-t10">
<p>Allows the user to freeze and unfreeze any workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t10" headers="r1c1-t10">
<p><code><a id="sthref102"></a><a id="sthref103"></a>GRANTPRIV_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r8c1-t10 r1c2-t10">
<p>Allows the user to grant privileges on the workspace to other users.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t10" headers="r1c1-t10">
<p><code><a id="sthref104"></a><a id="sthref105"></a>GRANTPRIV_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r9c1-t10 r1c2-t10">
<p>Allows the user to grant privileges on any workspace to other users.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t10" headers="r1c1-t10">
<p><code><a id="sthref106"></a><a id="sthref107"></a>MERGE_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r10c1-t10 r1c2-t10">
<p>Allows the user to merge the changes in a specified workspace to its parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t10" headers="r1c1-t10">
<p><code><a id="sthref108"></a><a id="sthref109"></a>MERGE_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r11c1-t10 r1c2-t10">
<p>Allows the user to merge the changes in any workspace to its parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r12c1-t10" headers="r1c1-t10">
<p><code><a id="sthref110"></a><a id="sthref111"></a>REMOVE_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r12c1-t10 r1c2-t10">
<p>Allows the user to remove a specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r13c1-t10" headers="r1c1-t10">
<p><code><a id="sthref112"></a><a id="sthref113"></a>REMOVE_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r13c1-t10 r1c2-t10">
<p>Allows the user to remove any workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r14c1-t10" headers="r1c1-t10">
<p><code><a id="sthref114"></a><a id="sthref115"></a>ROLLBACK_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r14c1-t10 r1c2-t10">
<p>Allows the user to roll back the changes in a specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r15c1-t10" headers="r1c1-t10">
<p><code><a id="sthref116"></a><a id="sthref117"></a>ROLLBACK_ANY_WORKSPACE</code></p>
</td>
<td class="cellalignment5788" headers="r15c1-t10 r1c2-t10">
<p>Allows the user to roll back the changes in any workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r16c1-t10" headers="r1c1-t10">
<p><code><a id="sthref118"></a><a id="sthref119"></a>WM_ADMIN</code></p>
</td>
<td class="cellalignment5788" headers="r16c1-t10 r1c2-t10">
<p>Provides the user with all Workspace Manager-related privileges with the grant option.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>Each privilege can be granted with or without the grant option. <a id="sthref120"></a><a id="sthref121"></a>The <span class="bold">grant option</span> allows the user to which the privilege is granted to grant the privilege to other users.</p>
<p><a id="sthref122"></a>The <code>WM_ADMIN</code> system privilege has all Workspace Manager privileges with the grant option. By default, the <code>WM_ADMIN</code> system privilege is granted to <code>WM_ADMIN_ROLE</code>. This role is in turn granted to the database administrator (<code>DBA</code> role). Thus, after you decide which users should be granted which privileges, either have the DBA grant the privileges, or have the DBA grant the <code>WM_ADMIN_ROLE</code> role to one or more selected users and have these users grant the privileges.</p>
<p>The <a href="long_ref.htm#i97023">GrantWorkspacePriv</a> and <a href="long_ref.htm#i80865">GrantSystemPriv</a> procedures are used to grant workspace-level privileges and system-level privileges, respectively.</p>
<p><a id="sthref123"></a><a id="sthref124"></a>The <a href="long_ref.htm#i79283">RevokeWorkspacePriv</a> and <a href="long_ref.htm#i97252">RevokeSystemPriv</a> procedures are used to revoke workspace-level privileges and system-level privileges, respectively. These procedures require that the user have sufficient privilege to revoke the specified privilege from the specified user. The user that granted a privilege can revoke it.</p>
</div>
<!-- class="sect1" -->
<a id="i1017681"></a>
<div id="ADWSM99138" class="sect1">
<h2 class="sect1"><span class="secnum">1.5</span> <a id="sthref125"></a>System Parameters for Workspace Manager</h2>
<p>Workspace Manager provides a set of system parameters that allow a user with the <code>WM_ADMIN</code> system privilege (described in <a href="#i1017165">Section 1.4</a>) to enforce global Workspace Manager-specific settings for the database. (These Workspace Manager system parameters are not Oracle initialization parameters. The only way to set Workspace Manager system parameters is to use the <a href="long_ref.htm#i108545">SetSystemParameter</a> procedure, described in <a href="long_ref.htm#g1035446">Chapter 4</a>).</p>
<p>To set a system parameter, use the <a href="long_ref.htm#i108545">SetSystemParameter</a> procedure. To get the current setting for a system parameter, use the <a href="long_ref.htm#i108546">GetSystemParameter</a> procedure. Both procedures are described in <a href="long_ref.htm#g1035446">Chapter 4</a>.</p>
<p><a href="#g1022080">Table 1-6</a> lists the Workspace Manager system parameters.</p>
<div id="ADWSM99139" class="tblformal">
<p class="titleintable"><a id="sthref126"></a><a id="g1022080"></a>Table 1-6 Workspace Manager System Parameters</p>
<table class="cellalignment5786" title="Workspace Manager System Parameters" summary="Workspace Manager System Parameters" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t11">Parameter Name</th>
<th class="cellalignment5787" id="r1c2-t11">Values</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t11" headers="r1c1-t11">
<p><code><a id="sthref127"></a><a id="sthref128"></a>ADD_UNIQUE_COLUMN_TO_HISTORY_VIEW</code></p>
</td>
<td class="cellalignment5788" headers="r2c1-t11 r1c2-t11">
<p><code>ON</code> adds columns to the xxx_HIST views (described in <a href="long_views.htm#i87609">Section 5.53</a>) of version-enabled tables. When a table is version-enabled with valid time support (described in <a href="long_vt.htm#g1014747">Chapter 3</a>), <code>WM_ROWID</code> (rowid) and <code>WM_FLAG</code> (integer) are added. When a table is version-enabled without valid time support, only the <code>WM_ROWID</code> column is added. These columns can be used to uniquely identify each row in the xxx_HIST views. For a table with valid time support, you must use the <code>WM_ROWID</code> column and the <code>WM_FLAG</code> column in any <code>WHERE</code> clauses.</p>
<p><code>OFF</code> (the default) does not add any columns to the xxx_HIST views.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t11" headers="r1c1-t11">
<p><code><a id="sthref129"></a><a id="sthref130"></a><a id="sthref131"></a>ALLOW_CAPTURE_EVENTS</code></p>
</td>
<td class="cellalignment5788" headers="r3c1-t11 r1c2-t11">
<p><code>ON</code> allows Workspace Manager events (described in <a href="long_events.htm#g1023698">Chapter 2</a>) to be captured. Setting this parameter to <code>ON</code> causes some additional internal Workspace Manager processing operations; therefore, for performance reasons you should not set the value to <code>ON</code> unless you plan to capture events.</p>
<p><code>OFF</code> (the default) does not allow Workspace Manager events to be captured.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t11" headers="r1c1-t11">
<p><code><a id="sthref132"></a><a id="sthref133"></a><a id="sthref134"></a><a id="sthref135"></a>ALLOW_MULTI_PARENT_WORKSPACES</code></p>
</td>
<td class="cellalignment5788" headers="r4c1-t11 r1c2-t11">
<p><code>ON</code> allows multiparent workspaces (described in <a href="#i1018503">Section 1.1.10</a>) to be created. Setting this parameter to <code>ON</code> causes some additional internal Workspace Manager processing operations; therefore, for performance reasons you should not set the value to <code>ON</code> unless you plan to use multiparent workspaces.</p>
<p><code>OFF</code> (the default) does not allow multiparent workspaces to be created.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t11" headers="r1c1-t11">
<p><code><a id="sthref136"></a><a id="sthref137"></a><a id="sthref138"></a>ALLOW_NESTED_TABLE_COLUMNS</code></p>
</td>
<td class="cellalignment5788" headers="r5c1-t11 r1c2-t11">
<p><code>ON</code> allows tables containing a nested table column to be version-enabled. Setting this parameter to <code>ON</code> causes some additional internal Workspace Manager processing operations; therefore, for performance reasons you should not set the value to <code>ON</code> unless you plan to version-enable any tables with nested table columns.</p>
<p><code>OFF</code> (the default) does not allow tables containing a nested table column to be version-enabled.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t11" headers="r1c1-t11">
<p><code><a id="sthref139"></a><a id="sthref140"></a>COMPRESS_PARENT_AFTER_REMOVE</code></p>
</td>
<td class="cellalignment5788" headers="r6c1-t11 r1c2-t11">
<p><code>ON</code> (the default) implicitly calls the <a href="long_ref.htm#i86067">CompressWorkspace</a> procedure to compress the parent workspace after a <a href="long_ref.htm#i108854">RemoveWorkspace</a> operation, or after a <a href="long_ref.htm#i89452">MergeWorkspace</a> operation in which the <code>remove_workspace</code> parameter was set to <code>true</code>.</p>
<p><code>OFF</code> does not compress the parent workspace in these cases.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t11" headers="r1c1-t11">
<p><code><a id="sthref141"></a><a id="sthref142"></a><a id="sthref143"></a><a id="sthref144"></a>CR_WORKSPACE_MODE</code></p>
</td>
<td class="cellalignment5788" headers="r7c1-t11 r1c2-t11">
<p><code><a id="sthref145"></a><a id="sthref146"></a>OPTIMISTIC_LOCKING</code> allows a record to be edited in two or more continually refreshed workspaces. If differences occur between parent and child workspaces, the record is considered to be in conflict, and the conflict must be resolved before the child workspace can be merged or refreshed.</p>
<p><code><a id="sthref147"></a><a id="sthref148"></a>PESSIMISTIC_LOCKING</code> does not allow a record to be edited in two or more continually refreshed workspaces. This setting ensures that there are no conflicts between parent and child workspaces.</p>
<p><code>OPTIMISTIC_LOCKING</code> is the default for new installations, but <code>PESSIMISTIC_LOCKING</code> is the default for upgrades from a version before release 9.2.0.2.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t11" headers="r1c1-t11">
<p><code><a id="sthref149"></a><a id="sthref150"></a>FIRE_TRIGGERS_FOR_NONDML_EVENTS</code></p>
</td>
<td class="cellalignment5788" headers="r8c1-t11 r1c2-t11">
<p><code>ON</code> (the default) causes user-defined triggers on version-enabled tables to be fired when a workspace non-DML operation (such as <a href="long_ref.htm#i89452">MergeWorkspace</a> or <a href="long_ref.htm#i90863">MergeTable</a>) is executed, unless later overridden for specific triggers by the <a href="long_ref.htm#i112201">SetTriggerEvents</a> procedure.</p>
<p><code>OFF</code> causes user-defined triggers on version-enabled tables not to be fired when a workspace non-DML operation (such as <a href="long_ref.htm#i89452">MergeWorkspace</a> or <a href="long_ref.htm#i90863">MergeTable</a>) is executed, unless later overridden for specific triggers by the <a href="long_ref.htm#i112201">SetTriggerEvents</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t11" headers="r1c1-t11">
<p><code><a id="sthref151"></a><a id="sthref152"></a>KEEP_REMOVED_WORKSPACES_INFO</code></p>
</td>
<td class="cellalignment5788" headers="r9c1-t11 r1c2-t11">
<p><code>ON</code> keeps information about any workspaces that are removed. This information will be available in the DBA_REMOVED_WORKSPACES, ALL_REMOVED_WORKSPACES, and USER_REMOVED_WORKSPACES views. <code>ON</code> also adds two new columns to xxx_HIST views (described in <a href="long_views.htm#i87609">Section 5.53</a>): WM_CREATEWORKSPACEID and WM_RETIREWORKSPACEID can be used to determine the workspace from which a row was merged and the workspace that merged a row that caused the row to be retired.</p>
<p><code>OFF</code> (the default) does not keep this information about any workspaces that are removed.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t11" headers="r1c1-t11">
<p><code><a id="sthref153"></a><a id="sthref154"></a>NONCR_WORKSPACE_MODE</code></p>
</td>
<td class="cellalignment5788" headers="r10c1-t11 r1c2-t11">
<p><code><a id="sthref155"></a><a id="sthref156"></a>OPTIMISTIC_LOCKING</code> (the default for both new installations and upgrades) allows a record to be edited in two or more workspaces that are not continually refreshed. If differences occur between parent and child workspaces, the record is considered to be in conflict, and the conflict must be resolved before the child workspace can be merged or refreshed.</p>
<p><code><a id="sthref157"></a><a id="sthref158"></a>PESSIMISTIC_LOCKING</code> does not allow a record to be edited in two or more workspaces that are not continually refreshed. This setting ensures that there are no conflicts between parent and child workspaces.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t11" headers="r1c1-t11">
<p><code><a id="sthref159"></a><a id="sthref160"></a><a id="sthref161"></a>NUMBER_OF_COMPRESS_BATCHES</code></p>
</td>
<td class="cellalignment5788" headers="r11c1-t11 r1c2-t11">
<p>A number from 1 to 1000, identifying the number of batches to be used when the <code>batch_size</code> parameter value is <code>PRIMARY_KEY_RANGE</code> and general statistics, but not histogram statistics, are available for a primary key column of type NUMBER, INTEGER, DATE, or TIMESTAMP. (See the reference information for any DBMS_WM subprogram that has a <code>batch_size</code> parameter.)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r12c1-t11" headers="r1c1-t11">
<p><code><a id="sthref162"></a><a id="sthref163"></a>ROW_LEVEL_LOCKING</code></p>
</td>
<td class="cellalignment5788" headers="r12c1-t11 r1c2-t11">
<p><code>ON</code> takes row-level locks on any rows that need to be merged or refreshed during <a href="long_ref.htm#i90863">MergeTable</a>, <a href="long_ref.htm#i89452">MergeWorkspace</a>, or <a href="long_ref.htm#i83811">RefreshWorkspace</a> operations. This allows these procedures to run in parallel for workspaces that share the same parent. It allows multiple workspaces or session threads to issue merge or refresh requests concurrently against the same table; it does not parallelize a single merge or refresh operation that includes a list of tables. (However, parallel merge and refresh operations are supported only for tables without valid time support, and only for workspaces that are not continually refreshed.) The <code>ON</code> setting does not take effect for continually refreshed workspaces or if any of the tables that need to be merged or refreshed have valid time support enabled.</p>
<p><code>OFF</code> (the default) takes workspace-level locks for all workspace operations. This setting prevents <a href="long_ref.htm#i90863">MergeTable</a>, <a href="long_ref.htm#i89452">MergeWorkspace</a>, and <a href="long_ref.htm#i83811">RefreshWorkspace</a> operations from running in parallel while operating on the same parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r13c1-t11" headers="r1c1-t11">
<p><code><a id="sthref164"></a><a id="sthref165"></a><a id="sthref166"></a>TARGET_PGA_MEMORY</code></p>
</td>
<td class="cellalignment5788" headers="r13c1-t11 r1c2-t11">
<p>A number representing the maximum amount of memory, specified in bytes, that should be used for selecting rows into memory during any <a href="long_ref.htm#i90863">MergeTable</a>, <a href="long_ref.htm#i89452">MergeWorkspace</a>, or <a href="long_ref.htm#i83811">RefreshWorkspace</a> operation. The default is 8388608 (8 megabytes). Workspace Manager uses this value to determine the optimal number of rows to fetch at any one time. This value does not affect the amount of memory used by other database processes, but only internal workspace operations.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r14c1-t11" headers="r1c1-t11">
<p><code><a id="sthref167"></a><a id="sthref168"></a>UNDO_SPACE</code></p>
</td>
<td class="cellalignment5788" headers="r14c1-t11 r1c2-t11">
<p>A string containing <code>UNLIMITED</code> (for no specified limit) or a number representing the maximum number of bytes for undo space available for Workspace Manager operations. Example: <code>&#39;1048576&#39;</code> for 1 megabyte. Workspace manager tries to minimize the amount of undo space used in a single transaction so as not to exceed the <code>UNDO_SPACE</code> value.</p>
<p>You can override the value of the <code>UNDO_SPACE</code> system parameter by specifying the <code>undo_space</code> parameter in the call to the <a href="long_ref.htm#i80309">EnableVersioning</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r15c1-t11" headers="r1c1-t11">
<p><code><a id="sthref169"></a><a id="sthref170"></a>USE_SCALAR_TYPES_FOR_VALIDTIME</code></p>
</td>
<td class="cellalignment5788" headers="r15c1-t11 r1c2-t11">
<p><code>ON</code> causes Workspace Manager to use two columns, named WM_VALIDFROM and WM_VALIDTILL, of type <code>TIMESTAMP WITH TIME ZONE</code>, instead of a single column named WM_VALID (of type <code>WM_PERIOD</code>) to indicate the valid time range in views created on a version-enabled table that has valid time support. (The WM_PERIOD type is described in <a href="long_vt.htm#i1010219">Section 3.2</a>.)</p>
<p><code>OFF</code> (the default) causes Workspace Manager to a single column named WM_VALID (of type <code>WM_PERIOD</code>) to indicate the valid time range in views created on a version-enabled table that has valid time support.</p>
<p>This parameter affects only tables that are subsequently version-enabled; it does not affect the views on existing version-enabled tables. To change the views on an existing version-enabled table, use the <a href="long_ref.htm#i118711">AlterVersionedTable</a> procedure and specify the <code>alter_option</code> parameter value <code>USE_SCALAR_TYPES_FOR_VALIDTIME</code> or <code>USE_WM_PERIOD_FOR_VALIDTIME</code>.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r16c1-t11" headers="r1c1-t11">
<p><code><a id="sthref171"></a><a id="sthref172"></a>USE_TIMESTAMP_TYPE_FOR_HISTORY</code></p>
</td>
<td class="cellalignment5788" headers="r16c1-t11 r1c2-t11">
<p><code>ON</code> (the default) causes Workspace Manager, if the Oracle database release is 9.0.1 or later, to use the <code>TIMESTAMP WITH TIME ZONE</code> type for WM_CREATETIME and WM_RETIRETIME columns. (See <a href="long_migrate.htm#i636100">Section B.3</a> for information about using this type.)</p>
<p><code>OFF</code> causes Workspace Manager to use the <code>DATE</code> type for WM_CREATETIME and WM_RETIRETIME columns.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i1018057"></a>
<div id="ADWSM99140" class="sect1">
<h2 class="sect1"><span class="secnum">1.6</span> Import and Export Considerations</h2>
<p><a id="sthref173"></a><a id="sthref174"></a>Workspace Manager supports the import and export of version-enabled tables in any of the following ways: a full database import and export, an import and export that only includes the schemas required by Workspace Manager, or a workspace-level import and export through Workspace Manager procedures. No other export modes, such as single schema, table, or partition level, are currently supported.</p>
<p>Full database import and export operations can be performed on version-enabled databases using the Oracle utilities; however, the following considerations and restrictions apply:</p>
<ul>
<li>
<p>A database with version-enabled tables can be exported to another Oracle database only if the other database has Workspace Manager installed and does not currently have any version-enabled tables or workspaces (that is, other than the <code>LIVE</code> workspace).</p>
</li>
<li>
<p>For an import operation using the Oracle Data Pump Import utility, if the dump file includes the WMSYS schema, you must specify <code>table_exists_action=truncate</code>. If the dump file does not include the WMSYS schema, you can specify <code>table_exists_action=append</code> if the version-enabled tables being imported do not yet exist or are empty. (In general, dump files generated by Oracle Database release 10.2 or later will not include the WMSYS schema, while dump files generated by earlier releases will include the WMSYS schema.)</p>
<p>The dump files must be from compatible versions of Workspace Manager. In general, any dump file created with <code>VERSION=12</code> is capable of being supported.</p>
</li>
<li>
<p>If you are using Data Pump Import, the dump file must have been created using Data Pump Export.</p>
</li>
<li>
<p>The <code>REMAP_SCHEMA</code> capability in Data Pump Import utility is not supported with version-enabled databases.</p>
</li>
<li>
<p>Workspace Manager no longer supports using the original Import and Export utilities for this mode.</p>
</li>
</ul>
<p>You can perform a limited (as opposed to full) export and import that includes all schemas related to version-enabled tables and workspaces, as well as any Workspace Manager metadata, but excludes all other schemas, as follows:</p>
<ol>
<li>
<p>Call the <a href="long_ref.htm#CACCAGBB">Export_Schemas</a> procedure to generate a dump file with the necessary objects and data.</p>
</li>
<li>
<p>Call the <a href="long_ref.htm#CACFJIAJ">Import_Schemas</a> procedure. (As with a full database import, Workspace Manager must already be installed and there must be no existing version-enabled tables or workspaces other than the <code>LIVE</code> workspace.)</p>
</li>
</ol>
<p>For workspace-level export operations, each version-enabled table can be exported at the workspace level. Follow these steps to export a version-enabled table from one database into another database:</p>
<ol>
<li>
<p>Call the <a href="long_ref.htm#i114714">Export</a> procedure to store all of the data that needs to be exported into a staging table (for example, <code>t1</code>). The data that is exported can either be all of the data as seen from a particular workspace, savepoint, or instant, or only the data that was modified in the particular workspace. See the information about the <a href="long_ref.htm#i114714">Export</a> procedure in <a href="long_ref.htm#g1035446">Chapter 4</a> for more details.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Tables with valid time support (that is, with a column named WM_VALID of type WM_PERIOD) are not supported with the <a href="long_ref.htm#i114714">Export</a> procedure. (Valid time support is explained in <a href="long_vt.htm#g1014747">Chapter 3</a>.)</div>
<p>To export multiple workspaces for a version-enabled table, call the <a href="long_ref.htm#i114714">Export</a> procedure again, specifying the new workspace that needs to be exported as well as the original staging table. If you intend to import the data into a non-versioned table, specify the <code>versioned_db</code> parameter as <code>FALSE</code>.</p>
</li>
<li>
<p>Export the staging table (for example, <code>t1</code>), using the Oracle Data Pump Export utility or the original Export utility.</p>
</li>
<li>
<p>Import the staging table (for example, <code>t1</code>), using the Oracle Data Pump Import utility or the original Import utility, into the destination database.</p>
</li>
<li>
<p>If you are importing into a version-enabled table, call the <a href="long_ref.htm#i110329">Import</a> procedure to move the data from the staging table to the version-enabled table, specifying the workspace where the data resided on the source database and the workspace into which the data should be stored.</p>
<p>The structure of the staging table must match that of the version-enabled table. By default, all enabled constraints must be validated before the import procedure successfully completes.</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="i1019718"></a>
<div id="ADWSM99141" class="sect1">
<h2 class="sect1"><span class="secnum">1.7</span> <a id="sthref175"></a>Bulk Loading into Version-Enabled Tables</h2>
<p>You can use SQL*Loader to perform bulk loading into version-enabled tables, but you must also call some special Workspace Manager procedures, and some restrictions apply. You can perform both direct-path and conventional-path bulk loading of data into either the latest version of any workspace or into the root version (version number 0, which is in the <code>LIVE</code> workspace). The root version is the ancestor of all other versions, so data in the root version is visible from all other workspaces (unless non-<code>LIVE</code> workspaces have updated the data).</p>
<p>Follow these general steps for bulk loading into a version-enabled table:</p>
<ol>
<li>
<p>Call the <a href="long_ref.htm#i117894">BeginBulkLoading</a> procedure to prepare the table for bulk loading. When data is being bulk loaded into a version-enabled table, DML and workspace operations on the table are not allowed, although workspace operations that do not involve this table are allowed. The <a href="long_ref.htm#i117894">BeginBulkLoading</a> procedure prevents invalid operations from being performed on this table.</p>
</li>
<li>
<p>Use SQL*Loader to perform the bulk loading. Only one line needs to be changed in the control file, to specify the <span class="italic">&lt;table_name&gt;</span><code>_LT</code> name. For example, assume that the existing control file has the following line:</p>
<pre>Load data into table departments (name, loc)
</pre>
<p>The line in the control file for bulk loading into the version-enabled table should be changed to:</p>
<pre>Load data into table departments_LT (name, loc)
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
In versions of Workspace Manager before 12.1, it was necessary to include the <code>wm_version</code> column. This column is now automatically populated by Workspace Manager, and an error will be generated if you populate it explicitly. This ensures that all the bulk-loaded rows will be tagged with the appropriate version, and that the other Workspace Manager-specific columns for these rows will have null values.</div>
<p>If the table was version-enabled with the history option, create and retire times can be bulk loaded into the <code>wm_createtime</code> and <code>wm_retiretime</code> columns of <span class="italic">&lt;table_name&gt;</span><code>_LT</code>.</p>
</li>
<li>
<p>Complete the bulk loading process by calling either the <a href="long_ref.htm#i114725">CommitBulkLoading</a> procedure to commit the bulk loading changes or the <a href="long_ref.htm#i114047">RollbackBulkLoading</a> procedure to roll back the bulk loading changes.</p>
</li>
</ol>
<p>If you commit the bulk loading changes, Workspace Manager ensures that the data is updated in the required workspace and version. By default, the bulk-loaded data is checked for each unique or referential constraint defined on the table, and any bulk-loaded rows that are in violation of any constraints are moved to a discards table specified as a parameter to the <a href="long_ref.htm#i114725">CommitBulkLoading</a> procedure. If you specified to check for duplicates (that is, records in the data to be bulk loaded that have the same values in the primary key columns), for any duplicate records only the record with the lowest ROWID value is loaded into the table, and the rest are moved to the discards table.</p>
<p>The following restrictions apply to bulk loading with version-enabled tables in the current release:</p>
<ul>
<li>
<p>Bulk loading into a table with a self-referential integrity constraint is not allowed.</p>
</li>
<li>
<p>Bulk loading into a workspace, other than <code>LIVE</code>, that has continually refreshed child workspaces is not allowed.</p>
</li>
<li>
<p>Only the owner of a table or a user with the <code>WM_ADMIN</code> system privilege can bulk load into a version-enabled table.</p>
</li>
<li>
<p>The user that is bulk loading the version-enabled table must have the <code>INSERT</code> privilege for <span class="italic">&lt;table_name&gt;</span><code>_LT</code>.</p>
</li>
<li>
<p>User-defined triggers on version-enabled tables are not executed during bulk loading.</p>
</li>
<li>
<p>Session locking mode is not enforced for the bulk-loaded rows. Use the <a href="long_ref.htm#i90778">LockRows</a> procedure to lock these rows.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1009427"></a>
<div id="ADWSM99142" class="sect1">
<h2 class="sect1"><span class="secnum">1.8</span> DDL <a id="sthref176"></a>Operations Related to Version-Enabled Tables</h2>
<p>To perform DDL (data definition language) operations on a version-enabled table, you must use special Workspace Manager procedures before and after the DDL operations, and you must specify the name of a special table created by Workspace Manager. You cannot perform DDL operations in the usual manner on the table or any index or trigger that refers to the table. For example, to add a column to a table named <code>EMPLOYEES</code> that has been version-enabled, you cannot simply enter a statement in the form <code>ALTER TABLE EMPLOYEES ADD (</code><span class="italic">column-name data-type</span><code>)</code>.</p>
<p>The reason for these requirements is to ensure that Workspace Manager versioning metadata is updated to reflect the DDL changes. Therefore, DDL operations affecting a version-enabled table must be preceded by a call to the <a href="long_ref.htm#i113441">BeginDDL</a> procedure, and must be concluded by a call to either the <a href="long_ref.htm#i98106">CommitDDL</a> or <a href="long_ref.htm#i98109">RollbackDDL</a> procedure. The <a href="long_ref.htm#i113441">BeginDDL</a> procedure creates an empty temporary table with a name in the form <span class="italic">&lt;table-name&gt;_LTS</span> (the <span class="italic">S</span> standing for <a id="sthref177"></a><span class="italic">skeleton</span>). The actual DDL statement must specify the name of the temporary <span class="italic">&lt;table-name&gt;_LTS</span> table, and must not specify the <span class="italic">&lt;table-name&gt;</span> or <span class="italic">&lt;table-name&gt;_LT</span> name. The <a href="long_ref.htm#i98106">CommitDDL</a> and <a href="long_ref.htm#i98109">RollbackDDL</a> procedures delete the temporary <span class="italic">&lt;table-name&gt;_LTS</span> table.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
An exception to this procedure is adding valid time support to an existing version-enabled table. To add valid time support, use the <a href="long_ref.htm#i118711">AlterVersionedTable</a> procedure, as explained in <a href="long_vt.htm#i1009670">Section 3.10</a>.</div>
<p>The following DDL operations related to version-enabled tables are supported:</p>
<ul>
<li>
<p>Table-related: Modifying the following table properties: <code>logging</code>, <code>pctfree</code>, <code>pctused</code>, <code>initrans</code>, <code>next</code>, <code>minextents</code>, <code>maxextents</code>, <code>pctincrease</code>, <code>freelists</code>, and <code>buffer_pool</code>; adding and removing supplemental logging on the table; modifying the compression options on the table</p>
</li>
<li>
<p>Column-related: <code>ADD</code>, <code>DROP</code>, <code>MODIFY</code> (but for <code>MODIFY</code> only the following operations: changing the default value of a column; changing the data type of a column that contains only null values or for which there are no existing data rows; changing the length of a column of type <code>VARCHAR2</code>, <code>VARCHAR</code>, <code>CHAR</code>, <code>NCHAR</code>, <code>NVCHAR</code>, or <code>NVCHAR2</code>; changing the scale or precision of a column of type <code>NUMBER</code>); renaming a column</p>
<p>Note that any new length, scale, or precision for a column should be adequate for any existing data in the column.</p>
</li>
<li>
<p>Index-related: <code>CREATE INDEX</code>, <code>DROP INDEX</code>, <code>ALTER INDEX</code> (but for <code>ALTER INDEX</code> only the following options: <code>logging</code>, <code>pctfree</code>, <code>initrans</code>, <code>initialextent</code>, <code>minextents</code>, <code>nextextent</code>, <code>maxextents</code>, <code>pctincrease</code>, <code>freelists</code>, <code>freelist groups</code>, and <code>buffer_pool</code>)</p>
<p>If the name of the index on a version-enabled table is longer than 26 characters, you must use the <a href="long_ref.htm#i118711">AlterVersionedTable</a> procedure if you want to rename the index; you cannot use the ALTER INDEX statement with the RENAME clause. If the name of the index on a version-enabled table is 26 or fewer characters long, you can do either of the following to rename the index: use the <a href="long_ref.htm#i118711">AlterVersionedTable</a> procedure, or use the ALTER INDEX statement with the RENAME clause between calls to the <a href="long_ref.htm#i113441">BeginDDL</a> and <a href="long_ref.htm#i98106">CommitDDL</a> procedures. See the Usage Notes for <a href="long_ref.htm#i118711">AlterVersionedTable</a> for more information.</p>
</li>
<li>
<p>Trigger-related: <code>CREATE TRIGGER</code>, <code>DROP TRIGGER</code>, <code>ALTER TRIGGER ENABLE/DISABLE</code></p>
</li>
<li>
<p>Referential integrity constraint-related: add, drop, enable, or disable a referential integrity constraint. For information about Workspace Manager referential integrity support, see <a href="#i1005885">Section 1.9.1</a>.</p>
</li>
<li>
<p>Unique constraint-related: add, drop, enable, or disable a unique constraint. For information about Workspace Manager unique constraint support, see <a href="#i1017147">Section 1.9.2</a>.</p>
</li>
<li>
<p>Privilege-related: grant table-level privileges to users and revoke these privileges from users.</p>
</li>
</ul>
<p>You can create the following types of indexes on version-enabled tables: normal, bitmap, function-based normal, function-based bitmap, and domain. <a id="sthref178"></a><a id="sthref179"></a><a id="sthref180"></a>You cannot create or drop a partitioned, reverse, or join index on a version-enabled table. (You can, however, version-enable a table that has a partitioned, reverse, or join index.)</p>
<p>If you try to perform an unsupported DDL operation, the change will not be made, and an exception might be raised by the <a href="long_ref.htm#i98106">CommitDDL</a> procedure.</p>
<p>If the DDL operation involving a version-enabled table is on a domain index (for example, creating an R-tree index on the table), you must have the <code>CREATE TABLE</code> privilege.</p>
<p>If you need to perform DDL operations on a version-enabled table in an Oracle replication environment, see <a href="long_repl.htm#i634767">Section C.3</a> for additional guidelines.</p>
<p><a id="sthref181"></a><a id="sthref182"></a>If you need to perform DDL operations on a version-enabled table in an Oracle Label Security (OLS) environment, you can use the <code>apply_table_policy</code>, <code>remove_table_policy</code>, <code>enable_table_policy</code>, and <code>disable_table_policy</code> procedures of the SA_POLICY_ADMIN package on the skeleton (<span class="italic">_LTS</span>) table, and the changes will be transferred to the version-enabled table.</p>
<p><a href="#i1009464">Example 1-2</a> shows the statements needed to add a column named <code>COMMENTS</code> to the <code>COLA_MARKETING_BUDGET</code> table by using the special table named <code>COLA_MARKETING_BUDGET_LTS</code>. It also includes a <code>DESCRIBE</code> statement to show the addition of the column.</p>
<div id="ADWSM99143" class="example">
<p class="titleinexample"><a id="i1009464"></a>Example 1-2 DDL Operation on a Version-Enabled Table</p>
<pre>EXECUTE DBMS_WM.BeginDDL(&#39;COLA_MARKETING_BUDGET&#39;);
ALTER TABLE cola_marketing_budget_lts ADD (comments VARCHAR2(100));
DESCRIBE cola_marketing_budget_lts;

 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 PRODUCT_ID                                NOT NULL NUMBER
 PRODUCT_NAME                                       VARCHAR2(32)
 MANAGER                                            VARCHAR2(32)
 BUDGET                                             NUMBER
 COMMENTS                                           VARCHAR2(100)

EXECUTE DBMS_WM.CommitDDL(&#39;COLA_MARKETING_BUDGET&#39;);
</pre>
<p>In <a href="#i1009464">Example 1-2</a>, the <code>ALTER TABLE</code> statement specifies the <code>COLA_MARKETING_BUDGET_LTS</code> table, which is created by the <a href="long_ref.htm#i113441">BeginDDL</a> procedure. The <a href="long_ref.htm#i98106">CommitDDL</a> procedure applies the change to the <code>COLA_MARKETING_BUDGET</code> table and deletes the <code>COLA_MARKETING_BUDGET_LTS</code> table.</p>
</div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="BABFDIGJ"></a>
<div id="ADWSM99144" class="sect1">
<h2 class="sect1"><span class="secnum">1.9</span> <a id="sthref183"></a>Constraint Support with Workspace Manager</h2>
<p>This section describes Workspace Manager considerations relating to the use of database constraints.</p>
<a id="i1005885"></a>
<div id="ADWSM99145" class="sect2">
<h3 class="sect2"><span class="secnum">1.9.1</span> Referential Integrity Support</h3>
<p><a id="sthref184"></a><a id="sthref185"></a>Version-enabled tables can have referential integrity constraints, including constraints with the <code>CASCADE</code> and <code>RESTRICT</code> options; however, the following considerations and restrictions apply:</p>
<ul>
<li>
<p>If the parent table in a referential integrity relationship is version-enabled, the child table must be version-enabled also. (The child table is the one on which the constraint is defined.) For example, consider the following <code>EMPLOYEE</code> and <code>DEPARTMENT</code> table definitions, with a foreign key constraint added after the creation (that is, the <code>dept_id</code> value in each <code>EMPLOYEE</code> row must match an existing <code>dept_id</code> value in a <code>DEPARTMENT</code> row).</p>
<pre>CREATE TABLE employee (
  employee_id NUMBER,
  last_name VARCHAR2(32),
  first_name VARCHAR2(32),
  dept_id NUMBER);
CREATE TABLE department (
  dept_id NUMBER,
  name VARCHAR2(32);
ALTER TABLE employee ADD CONSTRAINT emp_forkey_deptid
  FOREIGN KEY (dept_id) REFERENCES department (dept_id)
  ON DELETE CASCADE;
</pre>
<p>In this example, <code>DEPARTMENT</code> is considered the parent and <code>EMPLOYEE</code> is considered the child in the referential integrity relationship; and if <code>DEPARTMENT</code> is version-enabled, <code>EMPLOYEE</code> must be version-enabled also. In this relationship definition, when a <code>DEPARTMENT</code> row is deleted, all its child rows in the <code>EMPLOYEE</code> table are deleted (cascading delete operation).</p>
</li>
<li>
<p>A child table in a referential integrity relationship is allowed to be version-enabled without the parent table being version-enabled.</p>
</li>
<li>
<p>The foreign key in a child table must refer to the primary key in the parent table.</p>
</li>
<li>
<p>Primary key values in the parent table cannot be updated. For example, if <code>DEPARTMENT</code> is the parent table and <code>EMPLOYEE</code> is the child table, you cannot change the department ID of a department.</p>
</li>
<li>
<p><a id="sthref186"></a><a id="sthref187"></a>Multilevel referential integrity constraints are permitted on version-enabled tables. For example, the table <code>EMPLOYEE(emp_id, dept_id)</code> could have the constraint that the department ID must exist in the table <code>DEPARTMENT(dept_id, dept_name, loc_id)</code>; and the table <code>DEPARTMENT(dept_id, dept_name, loc_id)</code> could have the constraint that the location ID must exist in the table <code>LOCATION(loc_id, loc_name)</code>. However, all tables that are involved in multilevel referential integrity constraints must be version-enabled and version-disabled together, unless all the referential integrity constraints involved have the <code>Restrict</code> rule. If all the constraints involved have the <code>Restrict</code> rule, you can version-enable the tables either all together or one at a time with child tables preceding their parent tables. The table names must be passed as a comma-delimited list to the <a href="long_ref.htm#i80309">EnableVersioning</a> and <a href="long_ref.htm#i78994">DisableVersioning</a> procedures.</p>
</li>
</ul>
<p>Workspace Manager uses the static data dictionary views <a href="long_views.htm#i87045">ALL_WM_RIC_INFO</a> and <a href="long_views.htm#i88054">USER_WM_RIC_INFO</a> (described in <a href="long_views.htm#g1008700">Chapter 5</a>) to hold information pertinent to referential integrity support.</p>
<p>If you need to add, drop, enable, or disable a referential integrity constraint that involves two tables, it is more convenient if you perform the operation before version-enabling the tables. However, you can add, drop, enable, or disable a referential integrity constraint that involves two version-enabled tables if you follow these steps:</p>
<ol>
<li>
<p>Begin a DDL session specifying the parent table.</p>
</li>
<li>
<p>Begin a DDL session specifying the child table.</p>
</li>
<li>
<p>Alter the <span class="italic">&lt;table-name&gt;_LTS</span> table for the child table to add the foreign key constraint. (See <a href="#i1009427">Section 1.8</a> for information about <span class="italic">&lt;table-name&gt;_LTS</span> tables and performing DDL operations on version-enabled tables.)</p>
</li>
<li>
<p>Commit the DDL changes specifying the child table.</p>
</li>
<li>
<p>Commit the DDL changes specifying the parent table.</p>
</li>
</ol>
<p><a href="#i1009678">Example 1-3</a> adds a foreign key constraint. Assume that the <code>EMPLOYEE</code> and <code>DEPARTMENT</code> tables are version-enabled and are defined as follows:</p>
<pre>EMPLOYEE(emp_id number  primary key, dept_id number)
DEPARTMENT(dept_id number  primary key, dept_name varchar2(30))
</pre>
<div id="ADWSM99146" class="example">
<p class="titleinexample"><a id="i1009678"></a>Example 1-3 Adding a Referential Integrity Constraint</p>
<pre>-- Begin a DDL session on the parent table.
DBMS_WM.BeginDDL(&#39;DEPARTMENT&#39;); 

-- Begin a DDL session on the child table.
DBMS_WM.BeginDDL(&#39;EMPLOYEE&#39;); 

-- Add the constraint between EMPLOYEE_LTS and DAPATMENT_LTS.
ALTER TABLE employee_lts ADD CONSTRAINT employee_fk FOREIGN KEY (dept_id)
   REFERENCES department_lts(dept_id);

-- Commit DDL on the child table (transfers the constraint on employee_lts
-- to employee and drops employee_lts). 
EXECUTE DBMS_WM.CommitDDL(&#39;EMPLOYEE&#39;); 

-- Commit DDL on the parent table (drops the department_lts table). 
EXECUTE DBMS_WM.CommitDDL(&#39;DEPARTMENT&#39;); 
</pre>
<p>If you are in a DDL session (that is, if you have called the <a href="long_ref.htm#i113441">BeginDDL</a> procedure), you cannot add, drop, enable, or disable a referential integrity constraint that involves two tables if one table is version-enabled and the other is not version-enabled. Both tables must be version-enabled.</p>
</div>
<!-- class="example" -->
<a id="BABGIIBG"></a>
<div id="ADWSM99147" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">1.9.1.1</span> <a id="sthref188"></a><a id="sthref189"></a>Locking with DML Operations on Tables with Referential Integrity Constraints</h4>
<p>When data manipulation language (DML) operations are performed on version-enabled tables that have referential integrity constraints, Workspace Manager acquired shared locks so that the following conditions are enforced:</p>
<ul>
<li>
<p>During an insert operation or an update operation affecting the foreign key column on the child table, delete operations cannot be performed on the parent table. For example, if <code>DEPARTMENT</code> is the parent table and <code>EMPLOYEE</code> is the child table, during the time that a new employee is being added or an existing employee is being assigned to a different department, no departments can be deleted.</p>
</li>
<li>
<p>During a delete operation on the parent table, insert operations or updates operation affecting the foreign key column cannot be performed on the child table. For example, during the time that a department is being deleted, new employees cannot be added and existing employees cannot be assigned to different departments.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">See also:</p>
For general information about locking performed by Workspace Manager, including explanations of shared and exclusive locks, see <a href="#i1006224">Section 1.3</a>.</div>
<p>Multiple sessions can simultaneously perform either of the following, but not both of the following, DML operations simultaneously:</p>
<ul>
<li>
<p>Insert operations or update operations affecting the foreign key column on the child table</p>
</li>
<li>
<p>Delete operations on the parent table</p>
</li>
</ul>
<p>Multiple sessions can simultaneously perform any of the following Workspace Manager operations simultaneously:</p>
<ul>
<li>
<p>Use the <a href="long_ref.htm#i90863">MergeTable</a> procedure to apply changes to a child table or parent table in different workspaces.</p>
</li>
<li>
<p>Use the <a href="long_ref.htm#i90863">MergeTable</a> procedure to apply changes to a child table in one workspace, and insert or update the child table in another workspace.</p>
</li>
<li>
<p>Use the <a href="long_ref.htm#i90863">MergeTable</a> procedure to apply changes to a parent table in one workspace, and delete from the parent table in another workspace.</p>
</li>
</ul>
<p>One session will be blocked until the other session finishes in the following situations:</p>
<ul>
<li>
<p>A session tries to merge changes to a child table in one workspace, and another session tries to merge changes to the parent table in another workspace.</p>
</li>
<li>
<p>A session tries to merge changes to a child table in one workspace, and another session tries to delete from the parent table.</p>
</li>
<li>
<p>A session tries to merge changes to a parent table in one workspace, and another session tries to insert into a child table or change a value in the foreign key of a child table.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1017147"></a>
<div id="ADWSM99148" class="sect2">
<h3 class="sect2"><span class="secnum">1.9.2</span> <a id="sthref190"></a>Unique Constraints</h3>
<p>Tables with unique constraints defined on them can be version-enabled. The following are supported:</p>
<ul>
<li>
<p><code>UNIQUE</code> constraint on a single column or multiple columns</p>
</li>
<li>
<p>Unique index on a single column or multiple columns</p>
</li>
<li>
<p>Functional unique index on the table</p>
</li>
</ul>
<p>The treatment of null values is the same for version-enabled tables as for tables that are not version-enabled.</p>
<p>Workspace Manager uses the following static data dictionary views (described in <a href="long_views.htm#g1008700">Chapter 5</a>) to hold information pertinent to support for unique constraints:</p>
<ul>
<li>
<p><a href="long_views.htm#i93126">ALL_WM_CONSTRAINTS</a> and <a href="long_views.htm#i93256">USER_WM_CONSTRAINTS</a> contain information about columns in unique constraints on version-enabled tables.</p>
</li>
<li>
<p><a href="long_views.htm#i93715">ALL_WM_CONS_COLUMNS</a> and <a href="long_views.htm#i94222">USER_WM_CONS_COLUMNS</a> contain information about constraints on version-enabled tables.</p>
</li>
<li>
<p><a href="long_views.htm#i93362">ALL_WM_IND_COLUMNS</a> and <a href="long_views.htm#i93371">USER_WM_IND_COLUMNS</a> contain information about indexes used for enforcing unique constraints on version-enabled tables.</p>
</li>
<li>
<p><a href="long_views.htm#i93522">ALL_WM_IND_EXPRESSIONS</a> and <a href="long_views.htm#i93723">USER_WM_IND_EXPRESSIONS</a> contain information about functional expressions on functional unique indexes on version-enabled tables.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="ADWSM99149" class="sect2"><a id="sthref191"></a>
<h3 class="sect2"><span class="secnum">1.9.3</span> <a id="sthref192"></a>SET NULL Constraints</h3>
<p><code>SET NULL</code> constraints are not supported by Workspace Manager. If a table has any <code>SET NULL</code> constraints, they are converted to the <code>RESTRICT</code> option when the table is version-enabled.</p>
<p>For example, the constraint <code>ON DELETE SET NULL</code> is converted to <code>ON DELETE RESTRICT</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006223"></a>
<div id="ADWSM99150" class="sect1">
<h2 class="sect1"><span class="secnum">1.10</span> Triggers on Version-Enabled Tables</h2>
<p><a id="sthref193"></a>Version-enabled tables can have triggers defined; however, the following considerations and restrictions apply:</p>
<ul>
<li>
<p>Only per-row triggers are supported. Per-statement triggers are not supported.</p>
</li>
<li>
<p>The only call-out supported is to PL/SQL procedures. That is, the <code>action_type</code> must be PL/SQL.</p>
</li>
</ul>
<p>Any triggers that are not supported for version-enabled tables are deactivated when versioning is enabled, and are activated when versioning is disabled.</p>
<p>You can selectively enable specific user-defined triggers for certain kinds of events by using the <a href="long_ref.htm#i112201">SetTriggerEvents</a> procedure.</p>
</div>
<!-- class="sect1" -->
<a id="i1019482"></a>
<div id="ADWSM99151" class="sect1">
<h2 class="sect1"><span class="secnum">1.11</span> <a id="sthref194"></a><a id="sthref195"></a><a id="sthref196"></a>Virtual Private Database Considerations</h2>
<p>You can use Workspace Manager in conjunction with the Oracle Virtual Private Database (VPD) technology. (Virtual private databases are described in <a class="olink DBSEG" href="../DBSEG/toc.htm"><span class="italic">Oracle Database Security Guide</span></a>.) However, the following considerations apply Workspace Manager in a VPD:</p>
<ul>
<li>
<p>Row-level security policies are not enforced during workspace operations, such as <a href="long_ref.htm#i89452">MergeWorkspace</a>. A call to <a href="long_ref.htm#i89452">MergeWorkspace</a> will merge all the changes made in a workspace, not just the changes that the current user can see. You can use Workspace Manager privileges (such as <code>MERGE_WORKSPACE</code>) to control workspace operations.</p>
</li>
<li>
<p>Row-level security policies cannot be defined on a version-enabled table by defining them only on the specified table (&lt;table_name&gt;). Instead, you must define row-level security policies on all of the following that exist: <span class="italic">&lt;table_name&gt;</span>, <span class="italic">&lt;table_name&gt;</span>_LOCK, <span class="italic">&lt;table_name&gt;</span>_CONF, <span class="italic">&lt;table_name&gt;</span>_DIFF, and <span class="italic">&lt;table_name&gt;</span>_HIST. Do not use the Workspace Manager DDL framework described in <a href="#i1009427">Section 1.8</a> (that is, do not use the <a href="long_ref.htm#i113441">BeginDDL</a> and <a href="long_ref.htm#i98106">CommitDDL</a> procedures) when defining row-level security policies.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1019347"></a>
<div id="ADWSM99152" class="sect1">
<h2 class="sect1"><span class="secnum">1.12</span> Support <a id="sthref197"></a><a id="sthref198"></a>for Table Synonyms</h2>
<p>For any Workspace Manager procedure or function input parameter that calls for a table name, you can instead specify a synonym. When Workspace Manager looks for a table, it searches in the following sequence and uses the first match for the specified name:</p>
<ol>
<li>
<p>A table in the specified schema (or local schema if no schema is specified)</p>
</li>
<li>
<p>A private synonym in the specified schema (or local schema if no schema is specified)</p>
</li>
<li>
<p>A public synonym</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="i1021230"></a>
<div id="ADWSM99153" class="sect1">
<h2 class="sect1"><span class="secnum">1.13</span> <a id="sthref199"></a>Materialized View Support</h2>
<p>This section describes considerations for using Workspace Manager with materialized views.</p>
<p>You can create a materialized view on a version-enabled table only if you specify the complete refresh method (<code>REFRESH COMPLETE</code>) when you create the materialized view. You cannot specify any of the following clauses in the <code>CREATE MATERIALIZED VIEW</code> statement:</p>
<ul>
<li>
<p><code>FAST</code> (incremental refresh)</p>
</li>
<li>
<p><code>ON COMMIT</code></p>
</li>
<li>
<p><code>FOR UPDATE</code></p>
</li>
</ul>
<p>You cannot version-enable a materialized view or the base table of a materialized view.</p>
<p>When the materialized view is created, its content is based on the workspace in which the session is at that time. When the materialized view is refreshed, its content is based on the workspace in which the session is when the DBMS_MVIEW.REFRESH operation is performed. When the materialized view is created or refreshed, it shows the same data in all workspaces.</p>
</div>
<!-- class="sect1" -->
<a id="i1020573"></a>
<div id="ADWSM99154" class="sect1">
<h2 class="sect1"><span class="secnum">1.14</span> <a id="sthref200"></a><a id="sthref201"></a>Spatial and Graph Topology Support</h2>
<p>This section describes special considerations and techniques for using Workspace Manager with tables in Oracle Spatial and Graph topologies, which are documented in <a class="olink TOPOL" href="../TOPOL/toc.htm"><span class="italic">Oracle Spatial and Graph Topology Data Model and Network Data Model Graph Developer&#39;s Guide</span></a>.</p>
<p>A topology consists of feature tables, as well as tables with names in the form <code><span class="codeinlineitalic">&lt;topology-name&gt;</span></code><code>_NODE$</code>, <code><span class="codeinlineitalic">&lt;topology-name&gt;</span></code><code>_EDGE$</code>, <code><span class="codeinlineitalic">&lt;topology-name&gt;</span></code><code>_FACE$</code>, <code><span class="codeinlineitalic">&lt;topology-name&gt;</span></code><code>_RELATION$</code>, and <code><span class="codeinlineitalic">&lt;topology-name&gt;</span></code><code>_HISTORY$</code>. If you want to version-enable any topology tables, you must version-enable all tables associated with the topology. To do so, you must specify the topology name as the <code>table_name</code> parameter to the <a href="long_ref.htm#i80309">EnableVersioning</a> procedure, and you must specify the <code>isTopology</code> parameter as <code>TRUE</code>. For example:</p>
<pre>EXECUTE DBMS_WM.EnableVersioning(table_name =&gt; &#39;xyz_topo&#39;, isTopology =&gt; TRUE);
</pre>
<p>The preceding example version-enables the <code>xyz_topo</code> topology; that is, it version-enables all feature tables associated with the <code>xyz_topo</code> topology, as well as the <code>XYZ_TOPO_NODE$</code>, <code>XYZ_TOPO_FACE$</code>, <code>XYZ_TOPO_EDGE$</code>, <code>XYZ_TOPO_RELATION$</code>, and <code>XYZ_TOPO_HISTORY$</code> tables.</p>
<p>A version-enabled topology must have at least one feature table.</p>
<p>To disable versioning on any topology tables, you must disable versioning on all tables associated with the topology by specifying the topology name as the <code>table_name</code> parameter to the <a href="long_ref.htm#i78994">DisableVersioning</a> procedure and the <code>isTopology</code> parameter as <code>TRUE</code>.</p>
<p>However, exceptions apply to the preceding guidelines about version-enabling and version-disabling topology tables in the following cases:</p>
<ul>
<li>
<p>If a feature table of a topology is the child table of a referential integrity constraint with <code>CASCADE</code> option with a table that is not in the topology</p>
</li>
<li>
<p>If a feature table of a topology is the parent table of a referential integrity constraint with a table that is not in the topology</p>
</li>
</ul>
<p>In these cases, you must version-enable or version-disable the feature table separately. That is, first call the <a href="long_ref.htm#i80309">EnableVersioning</a> or <a href="long_ref.htm#i78994">DisableVersioning</a> procedure on the feature table (along with any tables required by the referential integrity constraint), and then invoke the <a href="long_ref.htm#i80309">EnableVersioning</a> or <a href="long_ref.htm#i78994">DisableVersioning</a> procedure specifying the topology name.</p>
<a id="i1020591"></a>
<div id="ADWSM99155" class="sect2">
<h3 class="sect2"><span class="secnum">1.14.1</span> Locking Considerations with Topologies</h3>
<p>To lock or unlock rows in tables associated with a topology, you must specify the topology name as the <code>table_name</code> parameter to the <a href="long_ref.htm#i90778">LockRows</a> or <a href="long_ref.htm#i85344">UnlockRows</a> procedure, and you must identify the window containing the rows by using the <code>Xmin</code>, <code>Ymin</code>, <code>Xmax</code>, and <code>Ymax</code> parameters. You must also not specify the <code>where_clause</code> parameter. For example:</p>
<pre>EXECUTE DBMS_WM.LockRows (workspace =&gt; &#39;ws1&#39;, table_name =&gt; &#39;xyz_topo&#39;, Xmin =&gt; 0.1, Ymin =&gt; 0.1,  Xmax =&gt; 0.5, Ymax =&gt; 0.5 );
</pre>
<p>The preceding example puts version locks on all the rows of the specified topology contained in the specified window. To edit the elements of a topology in a workspace (including the <code>LIVE</code> workspace), follow these steps:</p>
<ol>
<li>
<p>Invoke the <a href="long_ref.htm#i90778">LockRows</a> procedure to put version locks on all the elements of the topology contained in a window of interest.</p>
</li>
<li>
<p>Invoke the Oracle Spatial and Graph Topology Java client <code>loadWindow</code> method for the same window of interest.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div id="ADWSM99156" class="sect2"><a id="sthref202"></a>
<h3 class="sect2"><span class="secnum">1.14.2</span> Additional Considerations with Topologies</h3>
<p>The following additional considerations apply to using Workspace Manager with Spatial and Graph topologies:</p>
<ul>
<li>
<p>You must invoke the SDO_TOPO.INITIALIZE_METADATA procedure at least once on a topology before you version-enable the tables associated with the topology. (You can also invoke the SDO_TOPO.INITIALIZE_METADATA procedure as needed after version-enabling a topology.)</p>
</li>
<li>
<p>Do not use the <a href="long_ref.htm#i90863">MergeTable</a>, <a href="long_ref.htm#i91234">RefreshTable</a>, or <a href="long_ref.htm#i87881">RollbackTable</a> procedure on a version-enabled table associated with a topology. Instead, use the <a href="long_ref.htm#i89452">MergeWorkspace</a>, <a href="long_ref.htm#i83811">RefreshWorkspace</a>, or <a href="long_ref.htm#i89943">RollbackWorkspace</a> procedure to merge, refresh, or roll back tables associated with a topology.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFEJCG"></a>
<div id="ADWSM99157" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">1.15</span> <a id="sthref203"></a>Workspace Manager Reserved Words and Characters</h2>
<p>Because Workspace Manager creates internal objects using its own naming conventions, you must avoid some words and characters in the names for certain kinds objects. <a href="#BABHCGEC">Table 1-7</a> lists kinds of objects and restrictions that apply to their names. (See also the name length guidelines in <a href="#BABJEIFC">Table 1-2</a> in <a href="#i1012495">Section 1.1.11</a>.)</p>
<div id="ADWSM99158" class="tblformal">
<p class="titleintable"><a id="sthref204"></a><a id="BABHCGEC"></a>Table 1-7 Workspace Manager Reserved Words and Characters</p>
<table class="cellalignment5786" title="Workspace Manager Reserved Words and Characters" summary="Workspace Manager Reserved Words and Characters" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t16">Object</th>
<th class="cellalignment5787" id="r1c2-t16">Name Cannot Be Any of the Following</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t16" headers="r1c1-t16">
<p>Workspace</p>
</td>
<td class="cellalignment5788" headers="r2c1-t16 r1c2-t16">
<p><code>BASE</code>, <code>LIVE</code>, or a string containing any of the following characters: <code>/</code> (slash), <code>*</code> (asterisk), <code>,</code> (comma), <code>$</code> (dollar sign), <code>#</code> (pound sign)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t16" headers="r1c1-t16">
<p>Column in a version-enabled table</p>
</td>
<td class="cellalignment5788" headers="r3c1-t16 r1c2-t16">
<p>A string starting with <code>WM$</code> or <code>WM_</code></p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t16" headers="r1c1-t16">
<p>Index on a version-enabled table</p>
</td>
<td class="cellalignment5788" headers="r4c1-t16 r1c2-t16">
<p>A string of the form <code><span class="codeinlineitalic">&lt;table_name&gt;</span></code><code>_PKI$</code> or <code><span class="codeinlineitalic">&lt;table_name&gt;</span></code><code>_TI$</code> based on the name of the table on which the index exists</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i1009170"></a>
<div id="ADWSM99159" class="sect1">
<h2 class="sect1"><span class="secnum">1.16</span> DBMS_WM Subprogram Categories</h2>
<p>The Workspace Manager application programming interface (API) consists of PL/SQL subprograms (procedures and functions) in a single PL/SQL package named <code>DBMS_WM</code>. The subprograms can be logically grouped into the categories described in this section.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Most Workspace Manager subprograms are procedures, but a few are functions. (A function returns a value; a procedure does not return a value.)
<p>Most functions have names starting with <span class="italic">Get</span> (such as <a href="long_ref.htm#i112529">GetConflictWorkspace</a> and <a href="long_ref.htm#i79490">CreateSavepoint</a>).</p>
</div>
<p>Reference information for all subprograms is in <a href="long_ref.htm#g1035446">Chapter 4</a>.</p>
<div id="ADWSM99160" class="sect2"><a id="sthref205"></a>
<h3 class="sect2"><span class="secnum">1.16.1</span> <a id="sthref206"></a>Table Management Subprograms</h3>
<p>Table management subprograms enable and disable workspace management on a table, and perform other table-related operations.</p>
<p><a href="#g1021738">Table 1-8</a> shows the subprograms available for table management.</p>
<div id="ADWSM99161" class="tblformal">
<p class="titleintable"><a id="sthref207"></a><a id="g1021738"></a>Table 1-8 Table Management Subprograms</p>
<table class="cellalignment5786" title="Table Management Subprograms" summary="Table Management Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t18">Procedure</th>
<th class="cellalignment5787" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i80309">EnableVersioning</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t18 r1c2-t18">
<p>Version-enables a table, creating the necessary structures to enable the table to support multiple versions of rows.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i78994">DisableVersioning</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t18 r1c2-t18">
<p>Deletes all support structures that were created to enable the table to support versioned rows.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i89852">SetWoOverwriteOFF</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t18 r1c2-t18">
<p>Disables the <code>VIEW_WO_OVERWRITE</code> history option that was enabled by the <a href="long_ref.htm#i80309">EnableVersioning</a> or <a href="long_ref.htm#i89736">SetWoOverwriteON</a> procedure, changing the option to <code>VIEW_W_OVERWRITE</code> (with overwrite).</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i89736">SetWoOverwriteON</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t18 r1c2-t18">
<p>Enables the <code>VIEW_WO_OVERWRITE</code> history option that was disabled by the <a href="long_ref.htm#i89852">SetWoOverwriteOFF</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i113441">BeginDDL</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t18 r1c2-t18">
<p>Starts a DDL (data definition language) session for a specified table.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i98106">CommitDDL</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t18 r1c2-t18">
<p>Commits DDL changes made during a DDL session for a specified table, and ends the DDL session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i98109">RollbackDDL</a></p>
</td>
<td class="cellalignment5788" headers="r8c1-t18 r1c2-t18">
<p>Rolls back (cancels) DDL changes made during a DDL session for a specified table, and ends the DDL session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i100181">RecoverAllMigratingTables</a></p>
</td>
<td class="cellalignment5788" headers="r9c1-t18 r1c2-t18">
<p>Attempts to complete the migration process on a table that was left in an inconsistent state after the Workspace Manager migration procedure failed.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i100181">RecoverAllMigratingTables</a></p>
</td>
<td class="cellalignment5788" headers="r10c1-t18 r1c2-t18">
<p>Attempts to complete the migration process on all tables that were left in an inconsistent state after the Workspace Manager migration procedure failed.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i107816">CopyForUpdate</a></p>
</td>
<td class="cellalignment5788" headers="r11c1-t18 r1c2-t18">
<p>Allows LOB columns (BLOB, CLOB, or NCLOB) in version-enabled tables to be modified.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r12c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i114714">Export</a></p>
</td>
<td class="cellalignment5788" headers="r12c1-t18 r1c2-t18">
<p>Exports data from a version-enabled table (all rows, or as limited by any combination of several parameters) to a staging table.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r13c1-t18" headers="r1c1-t18">
<p><a href="long_ref.htm#i110329">Import</a></p>
</td>
<td class="cellalignment5788" headers="r13c1-t18 r1c2-t18">
<p>Imports data from a staging table (all rows, or as limited by any combination of several parameters) into a version-enabled table in a specified workspace.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99162" class="sect2"><a id="sthref208"></a>
<h3 class="sect2"><span class="secnum">1.16.2</span> <a id="sthref209"></a>Workspace Management Subprograms</h3>
<p>Workspace management subprograms perform operations on workspaces.</p>
<p><a href="#g1021781">Table 1-9</a> shows the subprograms available for workspace management.</p>
<div id="ADWSM99163" class="tblformal">
<p class="titleintable"><a id="sthref210"></a><a id="g1021781"></a>Table 1-9 Workspace Management Subprograms</p>
<table class="cellalignment5786" title="Workspace Management Subprograms" summary="Workspace Management Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t19">Procedure</th>
<th class="cellalignment5787" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i78729">CreateWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t19 r1c2-t19">
<p>Creates a new workspace in the database.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i78730">GotoWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t19 r1c2-t19">
<p>Moves the current session to the specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i85583">SetDiffVersions</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t19 r1c2-t19">
<p>Finds differences in values in version-enabled tables for two savepoints and their common ancestor (base). It creates rows in the differences views describing these differences.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i87360">GetDiffVersions</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t19 r1c2-t19">
<p>Returns the names of the (workspace, savepoint) pairs on which the session has performed the <a href="long_ref.htm#i85583">SetDiffVersions</a> operation.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i90863">MergeTable</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t19 r1c2-t19">
<p>Applies changes to a table (all rows or as specified in the <code>WHERE</code> clause) in a workspace to its parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i89452">MergeWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t19 r1c2-t19">
<p>Applies all changes in a workspace to its parent workspace, and optionally removes the workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i89943">RollbackWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r8c1-t19 r1c2-t19">
<p>Discards all data changes made in the workspace to version-enabled tables.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r9c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i87881">RollbackTable</a></p>
</td>
<td class="cellalignment5788" headers="r9c1-t19 r1c2-t19">
<p>Discards all changes made in the workspace to a specified table (all rows or as specified in the <code>WHERE</code> clause).</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r10c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i78733">RollbackToSP</a></p>
</td>
<td class="cellalignment5788" headers="r10c1-t19 r1c2-t19">
<p>Discards all data changes made in the workspace to version-enabled tables since the specified savepoint.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r11c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i91234">RefreshTable</a></p>
</td>
<td class="cellalignment5788" headers="r11c1-t19 r1c2-t19">
<p>Applies to a workspace all changes made to a table (all rows or as specified in the <code>WHERE</code> clause) in its parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r12c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i83811">RefreshWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r12c1-t19 r1c2-t19">
<p>Applies to a workspace all changes made in its parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r13c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i86036">AlterWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r13c1-t19 r1c2-t19">
<p>Modifies the description of a workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r14c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i109527">ChangeWorkspaceType</a></p>
</td>
<td class="cellalignment5788" headers="r14c1-t19 r1c2-t19">
<p>Changes a workspace that is not continually refreshed to be continually refreshed.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r15c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i108854">RemoveWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r15c1-t19 r1c2-t19">
<p>Discards all row versions associated with a workspace and deletes the workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r16c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i89286">RemoveWorkspaceTree</a></p>
</td>
<td class="cellalignment5788" headers="r16c1-t19 r1c2-t19">
<p>Discards all row versions associated with a workspace and its descendant workspaces, and deletes the affected workspaces.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r17c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i79088">FreezeWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r17c1-t19 r1c2-t19">
<p>Restricts access to a workspace and the ability of users to make changes in the workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r18c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i85162">UnfreezeWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r18c1-t19 r1c2-t19">
<p>Enables access and changes to a workspace, reversing the effect of the <a href="long_ref.htm#i79088">FreezeWorkspace</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r19c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i86067">CompressWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r19c1-t19 r1c2-t19">
<p>Deletes removable savepoints in a workspace, and minimizes the Workspace Manager metadata structures for the workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r20c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i86068">CompressWorkspaceTree</a></p>
</td>
<td class="cellalignment5788" headers="r20c1-t19 r1c2-t19">
<p>Deletes removable savepoints in a workspace and all its descendant workspaces. It also minimizes the Workspace Manager metadata structures for the affected workspaces, and eliminates any redundant data that might arise from the deletion of the savepoints.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r21c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i110193">IsWorkspaceOccupied</a></p>
</td>
<td class="cellalignment5788" headers="r21c1-t19 r1c2-t19">
<p>Checks whether or not a workspace has any active sessions.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r22c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i79490">CreateSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r22c1-t19 r1c2-t19">
<p>Returns the current workspace for the session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r23c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i91423">SetMultiWorkspaces</a></p>
</td>
<td class="cellalignment5788" headers="r23c1-t19 r1c2-t19">
<p>Makes the specified workspace or workspaces visible in the multiworkspace views for version-enabled tables.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r24c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i96123">GetMultiWorkspaces</a></p>
</td>
<td class="cellalignment5788" headers="r24c1-t19 r1c2-t19">
<p>Returns the names of workspaces visible in the multiworkspace views for version-enabled tables.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r25c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i107561">GetOpContext</a></p>
</td>
<td class="cellalignment5788" headers="r25c1-t19 r1c2-t19">
<p>Returns the context of the current operation for the current session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r26c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#g1030204">AddAsParentWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r26c1-t19 r1c2-t19">
<p>Adds a workspace as a parent workspace to a child workspace in a multiparent workspace environment.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r27c1-t19" headers="r1c1-t19">
<p><a href="long_ref.htm#i109279">RemoveAsParentWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r27c1-t19 r1c2-t19">
<p>Removes a workspace as a parent workspace in a multiparent workspace environment.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="i1006917"></a>
<div id="ADWSM99164" class="sect2">
<h3 class="sect2"><span class="secnum">1.16.3</span> <a id="sthref211"></a>Savepoint Management Subprograms</h3>
<p>Savepoint management subprograms perform operations related to savepoints.</p>
<p><a href="#g1021866">Table 1-10</a> shows the subprograms available for savepoint management.</p>
<div id="ADWSM99165" class="tblformal">
<p class="titleintable"><a id="sthref212"></a><a id="g1021866"></a>Table 1-10 Savepoint Management Subprograms</p>
<table class="cellalignment5786" title="Savepoint Management Subprograms" summary="Savepoint Management Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t20">Procedure</th>
<th class="cellalignment5787" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t20" headers="r1c1-t20">
<p><a href="long_ref.htm#i79490">CreateSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t20 r1c2-t20">
<p>Creates a savepoint for the current version.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t20" headers="r1c1-t20">
<p><a href="long_ref.htm#i91086">GotoSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t20 r1c2-t20">
<p>Goes to the specified savepoint in the current workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t20" headers="r1c1-t20">
<p><a href="long_ref.htm#i90546">GotoDate</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t20 r1c2-t20">
<p>Goes to a point at or near the specified date and time in the current workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t20" headers="r1c1-t20">
<p><a href="long_ref.htm#i98221">GetSessionInfo</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t20 r1c2-t20">
<p>Retrieves information about the current workspace and session context; useful for finding the session&#39;s current savepoint or instant in time.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t20" headers="r1c1-t20">
<p><a href="long_ref.htm#i86037">AlterSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t20 r1c2-t20">
<p>Modifies the description of a savepoint.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t20" headers="r1c1-t20">
<p><a href="long_ref.htm#i86069">DeleteSavepoint</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t20 r1c2-t20">
<p>Deletes a savepoint and associated rows in version-enabled tables.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99166" class="sect2"><a id="sthref213"></a>
<h3 class="sect2"><span class="secnum">1.16.4</span> <a id="sthref214"></a>Privilege Management Subprograms</h3>
<p>Privilege management subprograms grant and revoke Workspace Manager privileges.</p>
<p><a href="#g1021891">Table 1-11</a> shows the subprograms available for privilege management.</p>
<div id="ADWSM99167" class="tblformal">
<p class="titleintable"><a id="sthref215"></a><a id="g1021891"></a>Table 1-11 Privilege Management Subprograms</p>
<table class="cellalignment5786" title="Privilege Management Subprograms" summary="Privilege Management Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t21">Procedure</th>
<th class="cellalignment5787" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t21" headers="r1c1-t21">
<p><a href="long_ref.htm#i97023">GrantWorkspacePriv</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t21 r1c2-t21">
<p>Grants workspace-level privileges to users, roles, or <code>PUBLIC</code>.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t21" headers="r1c1-t21">
<p><a href="long_ref.htm#i79283">RevokeWorkspacePriv</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t21 r1c2-t21">
<p>Revokes workspace-level privileges from users and roles.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t21" headers="r1c1-t21">
<p><a href="long_ref.htm#i80865">GrantSystemPriv</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t21 r1c2-t21">
<p>Grants privileges on all workspaces to users, roles, or <code>PUBLIC</code>.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t21" headers="r1c1-t21">
<p><a href="long_ref.htm#i97252">RevokeSystemPriv</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t21 r1c2-t21">
<p>Revokes system-level privileges from users and roles.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t21" headers="r1c1-t21">
<p><a href="long_ref.htm#i87361">GetPrivs</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t21 r1c2-t21">
<p>Returns a comma-delimited list of all privileges that the current user has for the specified workspace.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99168" class="sect2"><a id="sthref216"></a>
<h3 class="sect2"><span class="secnum">1.16.5</span> <a id="sthref217"></a>Lock Management Subprograms</h3>
<p>Lock management subprograms control Workspace Manager locking.</p>
<p><a href="#g1021913">Table 1-12</a> shows the subprograms available for lock management.</p>
<div id="ADWSM99169" class="tblformal">
<p class="titleintable"><a id="sthref218"></a><a id="g1021913"></a>Table 1-12 Lock Management Subprograms</p>
<table class="cellalignment5786" title="Lock Management Subprograms" summary="Lock Management Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t22">Procedure</th>
<th class="cellalignment5787" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i79459">SetLockingON</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t22 r1c2-t22">
<p>Enables Workspace Manager locking for the current session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i79467">SetLockingOFF</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t22 r1c2-t22">
<p>Disables Workspace Manager locking for the current session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i91682">SetWorkspaceLockModeON</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t22 r1c2-t22">
<p>Enables Workspace Manager locking for the specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i107704">SetWorkspaceLockModeOFF</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t22 r1c2-t22">
<p>Disables Workspace Manager locking for the specified workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i90040">GetLockMode</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t22 r1c2-t22">
<p>Returns the locking mode for the current session, which determines whether or not access is enabled to versioned rows and corresponding rows in the previous version.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i90778">LockRows</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t22 r1c2-t22">
<p>Controls access to versioned rows in a specified table and to corresponding rows in the parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r8c1-t22" headers="r1c1-t22">
<p><a href="long_ref.htm#i85344">UnlockRows</a></p>
</td>
<td class="cellalignment5788" headers="r8c1-t22 r1c2-t22">
<p>Enables access to versioned rows in a specified table and to corresponding rows in the parent workspace.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99170" class="sect2"><a id="sthref219"></a>
<h3 class="sect2"><span class="secnum">1.16.6</span> <a id="sthref220"></a>Conflict Management Subprograms</h3>
<p>Conflict management subprograms detect and resolve conflicts between workspaces.</p>
<p><a href="#g1021941">Table 1-13</a> shows the subprograms available for conflict management.</p>
<div id="ADWSM99171" class="tblformal">
<p class="titleintable"><a id="sthref221"></a><a id="g1021941"></a>Table 1-13 Conflict Management Subprograms</p>
<table class="cellalignment5786" title="Conflict Management Subprograms" summary="Conflict Management Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t23">Procedure</th>
<th class="cellalignment5787" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t23" headers="r1c1-t23">
<p><a href="long_ref.htm#i113360">SetConflictWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t23 r1c2-t23">
<p>Determines whether or not conflicts exist between a workspace and its parent workspace.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t23" headers="r1c1-t23">
<p><a href="long_ref.htm#i112529">GetConflictWorkspace</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t23 r1c2-t23">
<p>Returns the name of the workspace on which the session has performed the <a href="long_ref.htm#i113360">SetConflictWorkspace</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t23" headers="r1c1-t23">
<p><a href="long_ref.htm#i87363">BeginResolve</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t23 r1c2-t23">
<p>Starts a conflict resolution session.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t23" headers="r1c1-t23">
<p><a href="long_ref.htm#i83186">ResolveConflicts</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t23 r1c2-t23">
<p>Resolves conflicts between workspaces.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r6c1-t23" headers="r1c1-t23">
<p><a href="long_ref.htm#i90948">CommitResolve</a></p>
</td>
<td class="cellalignment5788" headers="r6c1-t23 r1c2-t23">
<p>Ends a conflict resolution session and saves (makes permanent) any changes in the workspace since the <a href="long_ref.htm#i87363">BeginResolve</a> procedure was executed.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r7c1-t23" headers="r1c1-t23">
<p><a href="long_ref.htm#i87840">RollbackResolve</a></p>
</td>
<td class="cellalignment5788" headers="r7c1-t23 r1c2-t23">
<p>Quits a conflict resolution session and discards all changes in the workspace since the <a href="long_ref.htm#i87363">BeginResolve</a> procedure was executed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99172" class="sect2"><a id="sthref222"></a>
<h3 class="sect2"><span class="secnum">1.16.7</span> Replication Support Subprograms</h3>
<p>Replication support subprograms provide support for Oracle replication in a Workspace Manager environment. For information about using replication, see <a href="long_repl.htm#g635775">Appendix C</a>.</p>
<p><a href="#g1022061">Table 1-14</a> shows the subprograms available for replication support.</p>
<div id="ADWSM99173" class="tblformal">
<p class="titleintable"><a id="sthref223"></a><a id="g1022061"></a>Table 1-14 Replication Support Subprograms</p>
<table class="cellalignment5786" title="Replication Support Subprograms" summary="Replication Support Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t24">Procedure</th>
<th class="cellalignment5787" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t24" headers="r1c1-t24">
<p><a href="long_ref.htm#i99479">GenerateReplicationSupport</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t24 r1c2-t24">
<p>Creates necessary structures for multimaster replication of Workspace Manager objects, and starts the master activity for the newly created master group.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t24" headers="r1c1-t24">
<p><a href="long_ref.htm#i99531">DropReplicationSupport</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t24 r1c2-t24">
<p>Deletes replication support objects that were created by the <a href="long_ref.htm#i99479">GenerateReplicationSupport</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t24" headers="r1c1-t24">
<p><a href="long_ref.htm#i99822">RelocateWriterSite</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t24 r1c2-t24">
<p>Makes one of the nonwriter sites the new writer site in a Workspace Manager replication environment. (The old writer site becomes one of the nonwriter sites.)</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t24" headers="r1c1-t24">
<p><a href="long_ref.htm#i99848">SynchronizeSite</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t24 r1c2-t24">
<p>Brings the local site (the old writer site) up to date in the Workspace Manager replication environment after the writer site was moved using the <a href="long_ref.htm#i99822">RelocateWriterSite</a> procedure.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADWSM99174" class="sect2"><a id="sthref224"></a>
<h3 class="sect2"><span class="secnum">1.16.8</span> Bulk Load Support Subprograms</h3>
<p>Bulk load support subprograms enable SQL*Loader to be used for bulk loading data into version-enabled tables, as explained in <a href="#i1019718">Section 1.7</a>.</p>
<p><a href="#g1022108">Table 1-15</a> shows the subprograms available for bulk loading support.</p>
<div id="ADWSM99175" class="tblformal">
<p class="titleintable"><a id="sthref225"></a><a id="g1022108"></a>Table 1-15 Bulk Loading Support Subprograms</p>
<table class="cellalignment5786" title="Bulk Loading Support Subprograms" summary="Bulk Loading Support Subprograms" dir="ltr">
<thead>
<tr class="cellalignment5780">
<th class="cellalignment5787" id="r1c1-t25">Procedure</th>
<th class="cellalignment5787" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r2c1-t25" headers="r1c1-t25">
<p><a href="long_ref.htm#i114056">GetBulkLoadVersion</a></p>
</td>
<td class="cellalignment5788" headers="r2c1-t25 r1c2-t25">
<p>Returns a version number to be specified when you call the <a href="long_ref.htm#i117894">BeginBulkLoading</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r3c1-t25" headers="r1c1-t25">
<p><a href="long_ref.htm#i117894">BeginBulkLoading</a></p>
</td>
<td class="cellalignment5788" headers="r3c1-t25 r1c2-t25">
<p>Starts the bulk loading process for a version-enabled table.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r4c1-t25" headers="r1c1-t25">
<p><a href="long_ref.htm#i114725">CommitBulkLoading</a></p>
</td>
<td class="cellalignment5788" headers="r4c1-t25 r1c2-t25">
<p>Ends the bulk loading process for a version-enabled table by committing the bulk load changes.</p>
</td>
</tr>
<tr class="cellalignment5780">
<td class="cellalignment5788" id="r5c1-t25" headers="r1c1-t25">
<p><a href="long_ref.htm#i114047">RollbackBulkLoading</a></p>
</td>
<td class="cellalignment5788" headers="r5c1-t25 r1c2-t25">
<p>Rolls back changes made to a version-enabled table during a bulk load operation.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1019103"></a>
<div id="ADWSM99176" class="sect1">
<h2 class="sect1"><span class="secnum">1.17</span> Simplified Examples Using Workspace Manager</h2>
<p>This section presents two simplified examples of using Workspace Manager to try out some scenarios and select one of them. Each example uses workspaces and one or more savepoints. One example (in <a href="#i1016958">Section 1.17.2</a>) uses the <code>OE.WAREHOUSES</code> table in the Oracle sample schemas.</p>
<p>The examples refer to concepts that were explained in this chapter, and they use procedures documented in <a href="long_ref.htm#g1035446">Chapter 4</a>.</p>
<div id="ADWSM99177" class="sect2"><a id="sthref226"></a>
<h3 class="sect2"><span class="secnum">1.17.1</span> Example: Marketing Budget Options</h3>
<p>In <a href="#i1014953">Example 1-4</a>, a soft drink (cola) manufacturer has four products, each with a marketing manager and a marketing budget. Because of an exceptional opportunity for growth in the market for one product (<code>cola_b</code>), the company wants to do <span class="italic">what-if</span> analyses involving different managers and budget amounts.</p>
<div id="ADWSM99178" class="example">
<p class="titleinexample"><a id="i1014953"></a>Example 1-4 Marketing Budget Options</p>
<pre>-------------------------------------------------------------------
-- INITIAL SET-UP
-------------------------------------------------------------------
-- Create the user for schema objects.
CREATE USER wm_developer IDENTIFIED BY <span class="italic">password</span>;

-- Grant regular privileges.
GRANT create session, 
  unlimited tablespace, 
  create table
TO wm_developer;

-- Grant WM-specific privileges (with grant_option = YES).
EXECUTE DBMS_WM.GrantSystemPriv (&#39;ACCESS_ANY_WORKSPACE, MERGE_ANY_WORKSPACE,
 CREATE_ANY_WORKSPACE, REMOVE_ANY_WORKSPACE, ROLLBACK_ANY_WORKSPACE&#39;,
 &#39;wm_developer&#39;, &#39;YES&#39;);

---------------------------------------------------------------------------
-- CREATE AND POPULATE DATA TABLE --
---------------------------------------------------------------------------
CONNECT wm_developer
-- Enter password when prompted.

-- Cleanup: remove B_focus_2 workspace if it exists from previous run.
EXECUTE DBMS_WM.RemoveWorkspace (&#39;B_focus_2&#39;);

-- Create a table for the annual marketing budget for
-- several cola (soft drink) products.
-- Each row will contain budget data for a specific
-- product. Note: This table does not reflect recommended
-- database design. (For example, a manager ID should
-- be used, not a name.) It is deliberately oversimplified
-- for purposes of illustration.

CREATE TABLE cola_marketing_budget (
  product_id NUMBER PRIMARY KEY,
  product_name VARCHAR2(32),
  manager VARCHAR2(32),  -- Here a name, just for simplicity
  budget NUMBER  -- Budget in millions of dollars. Example: 3 = $3,000,000.
);

-- Version-enable the table. Specify hist option of VIEW_WO_OVERWRITE so that
-- the COLA_MARKETING_BUDGET_HIST view contains complete history information
-- about data changes.
EXECUTE DBMS_WM.EnableVersioning (&#39;cola_marketing_budget&#39;, &#39;VIEW_WO_OVERWRITE&#39;);

INSERT INTO cola_marketing_budget VALUES(
  1,
  &#39;cola_a&#39;,
  &#39;Alvarez&#39;,
  2.0
);
INSERT INTO cola_marketing_budget VALUES(
  2,
  &#39;cola_b&#39;,
  &#39;Baker&#39;,
  1.5
);
INSERT INTO cola_marketing_budget VALUES(
  3,
  &#39;cola_c&#39;,
  &#39;Chen&#39;,
  1.5
);
INSERT INTO cola_marketing_budget VALUES(
  4,
  &#39;cola_d&#39;,
  &#39;Davis&#39;,
  3.5
);
COMMIT;

-- Relevant data values now in LIVE workspace:
-- 1, cola_a, Alvarez, 2.0
-- 2, cola_b, Baker, 1.5
-- 3, cola_c, Chen, 1.5
-- 4, cola_d, Davis, 3.5

---------------------------------------------------------------------------
-- CREATE WORKSPACES --
---------------------------------------------------------------------------
-- Create workspaces for the following scenario: a major marketing focus
-- for the cola_b product. Managers and budget amounts for each
-- product can change, but the total marketing budget cannot grow.
--
-- One scenario (B_focus_1) features a manager with more expensive 
-- plans (which means more money taken from other products&#39; budgets).
-- The other scenario (B_focus_2) features a manager with less expensive 
-- plans (which means less money taken from other products&#39; budgets).
--
-- Two workspaces (B_focus_1 and B_focus_2) are created as child workspaces 
-- of the LIVE database workspace.

EXECUTE DBMS_WM.CreateWorkspace (&#39;B_focus_1&#39;);
EXECUTE DBMS_WM.CreateWorkspace (&#39;B_focus_2&#39;);

---------------------------------------------------------------------------
-- WORK IN FIRST WORKSPACE --
---------------------------------------------------------------------------
-- Enter the B_focus_1 workspace and change the cola_b manager to Beasley and 
-- raise the cola_b budget amount by 1.5 to bring it to 3.0. Reduce all other 
-- products&#39; budget amounts by 0.5 to stay within the overall budget.

EXECUTE DBMS_WM.GotoWorkspace (&#39;B_focus_1&#39;);
UPDATE cola_marketing_budget
  SET manager = &#39;Beasley&#39; WHERE product_name = &#39;cola_b&#39;;
UPDATE cola_marketing_budget
  SET budget = 3 WHERE product_name = &#39;cola_b&#39;;
UPDATE cola_marketing_budget
  SET budget = 1.5 WHERE product_name = &#39;cola_a&#39;;
UPDATE cola_marketing_budget
  SET budget = 1 WHERE product_name = &#39;cola_c&#39;;
UPDATE cola_marketing_budget
  SET budget = 3 WHERE product_name = &#39;cola_d&#39;;
COMMIT;

-- Relevant data values now in B_focus_1 workspace::
-- 1, cola_a, Alvarez, 1.5
-- 2, cola_b, Beasley, 3.0
-- 3, cola_c, Chen, 1.0
-- 4, cola_d, Davis, 3.0

-- Freeze this workspace to prevent any changes until workspace is unfrozen.
-- However, first go to the LIVE workspace, because a workspace cannot be frozen
-- if any users (including you) are in it.
EXECUTE DBMS_WM.GotoWorkspace (&#39;LIVE&#39;);
EXECUTE DBMS_WM.FreezeWorkspace (&#39;B_focus_1&#39;);

---------------------------------------------------------------------------
-- CREATE ANOTHER SCENARIO IN SECOND WORKSPACE --
---------------------------------------------------------------------------
-- Enter the B_focus_2 workspace and change the cola_b manager to Burton and 
-- raise the cola_b budget amount by 0.5 to bring it to 2.0. Reduce only the 
-- cola_d amount by 0.5 to stay within the overall budget.

EXECUTE DBMS_WM.GotoWorkspace (&#39;B_focus_2&#39;);
UPDATE cola_marketing_budget
  SET manager = &#39;Burton&#39; WHERE product_name = &#39;cola_b&#39;;
UPDATE cola_marketing_budget
  SET budget = 2 WHERE product_name = &#39;cola_b&#39;;
UPDATE cola_marketing_budget
  SET budget = 3 WHERE product_name = &#39;cola_d&#39;;
COMMIT;

-- Relevant data values now in B_focus_2 workspace::
-- 1, cola_a, Alvarez, 2.0 (no change from LIVE)
-- 2, cola_b, Burton, 2.0
-- 3, cola_c, Chen, 1.5 (no change from LIVE)
-- 4, cola_d, Davis, 3.0 (same manager, new budget)

-- Create a savepoint (B_focus_2_SP1), then change scenario to 
-- raise cola_b budget and reduce cola_d budget by 0.5 each.

EXECUTE DBMS_WM.CreateSavepoint (&#39;B_focus_2&#39;, &#39;B_focus_2_SP1&#39;);
UPDATE cola_marketing_budget
  SET budget = 2.5 WHERE product_name = &#39;cola_b&#39;;
UPDATE cola_marketing_budget
  SET budget = 2.5 WHERE product_name = &#39;cola_d&#39;;
COMMIT;

-- Relevant data values now in B_focus_2 workspace:
-- 1, cola_a, Alvarez, 2.0 (no change from LIVE)
-- 2, cola_b, Burton, 2.5 
-- 3, cola_c, Chen, 1.5 (no change from LIVE)
-- 4, cola_d, Davis, 2.5 (same manager, new budget)

-- Discard this scenario; roll back to row values at the time savepoint 
-- B_focus_2_SP1 was created. First, though, get out of the workspace
-- so it can be rolled back (no users in it).

EXECUTE DBMS_WM.GotoWorkspace (&#39;LIVE&#39;);
EXECUTE DBMS_WM.RollbackToSP (&#39;B_focus_2&#39;, &#39;B_focus_2_SP1&#39;);

-- Go back to the B_focus_2 workspace and display current values 
-- (should include budget of 2 for cola_b and 3 for cola_d).
EXECUTE DBMS_WM.GotoWorkspace (&#39;B_focus_2&#39;);
SELECT * FROM cola_marketing_budget;

---------------------------------------------------------------------------
-- SELECT SCENARIO AND UPDATE DATABASE --
---------------------------------------------------------------------------
-- Assume that you have decided to adopt the scenario of the second 
-- workspace (B_focus_2) using that workspace&#39;s current values.

-- First go to the LIVE workspace, because a workspace cannot be removed
-- or merged if any users (including you) are in it.
EXECUTE DBMS_WM.GotoWorkspace (&#39;LIVE&#39;);

-- Unfreeze the first workspace and remove it to discard any changes there.
EXECUTE DBMS_WM.UnfreezeWorkspace (&#39;B_focus_1&#39;);
EXECUTE DBMS_WM.RemoveWorkspace (&#39;B_focus_1&#39;);

-- Apply changes in the second workspace to the LIVE database workspace.
-- Note that the workspace is not removed by default after MergeWorkspace.
EXECUTE DBMS_WM.MergeWorkspace (&#39;B_focus_2&#39;);

-- Display the current data values as seen by the LIVE workspace.
SELECT * FROM cola_marketing_budget;

---------------------------------------------------------------------------
-- DISABLE VERSIONING --
---------------------------------------------------------------------------
-- Disable versioning on the table because you are finished testing scenarios.
-- Set force parameter to TRUE if you want to force the disabling even
-- if changes were made in a non-LIVE workspace.

EXECUTE DBMS_WM.DisableVersioning (&#39;cola_marketing_budget&#39;, TRUE);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="i1016958"></a>
<div id="ADWSM99179" class="sect2">
<h3 class="sect2"><span class="secnum">1.17.2</span> <a id="sthref227"></a><a id="sthref228"></a><a id="sthref229"></a><a id="sthref230"></a>Example: Warehouse Expansion Options</h3>
<p>In <a href="#i1016960">Example 1-5</a>, a company that uses the Oracle sample schemas decided that it needs additional warehouse space. It wants to consider two scenarios: a single large warehouse in Town A, and two smaller warehouses in Town B and Town C that together offer more total storage capacity. There are potential advantages and disadvantages to each scenario, and financial and legal issues to be resolved with each. Later, the company decides that it might need even more warehouse space under each scenario, so it wants to consider the same additional warehouse in each scenario.</p>
<p><a href="#i1016960">Example 1-5</a> creates a workspace for each scenario; and within each workspace it creates a savepoint before adding an extra new warehouse to the table, because the company might decide not to use the extra warehouse. The warehouse rows are stored on the <code>OE.WAREHOUSES</code> table, which is part of the Oracle sample schemas.</p>
<div id="ADWSM99180" class="example">
<p class="titleinexample"><a id="i1016960"></a>Example 1-5 Warehouse Expansion Options</p>
<pre>-------------------------------------------------------------------
-- INITIAL SET-UP
-------------------------------------------------------------------
-- Clean up from any previous running of this procedure.
DROP USER wm_developer CASCADE;

-- Create the user for schema objects.
CREATE USER wm_developer IDENTIFIED BY <span class="italic">password</span>;

-- Grant regular privileges.
GRANT create session, 
  unlimited tablespace,
  create table
TO wm_developer;

-- Grant privileges on tables to be modified.
GRANT select, insert, delete, update ON oe.warehouses TO wm_developer; 
GRANT select, insert, delete, update ON hr.locations TO wm_developer; 

-- Grant WM-specific privileges (with grant_option = YES).
EXECUTE DBMS_WM.GrantSystemPriv (&#39;ACCESS_ANY_WORKSPACE, MERGE_ANY_WORKSPACE,
 CREATE_ANY_WORKSPACE, REMOVE_ANY_WORKSPACE, ROLLBACK_ANY_WORKSPACE&#39;,  
 &#39;wm_developer&#39;, &#39;YES&#39;);

-- WM_ADMIN_ROLE grants the ability to version-enable a table in another schema.
GRANT wm_admin_role TO wm_developer;

-- Create rows for new locations, since a valid location ID is needed for each
-- proposed new warehouse.
INSERT INTO hr.locations VALUES 
   (4000, &#39;123 Any Street&#39;, &#39;01234&#39;, &#39;Town A&#39;, &#39;MA&#39;, &#39;US&#39;);
INSERT INTO hr.locations VALUES 
   (4100, &#39;456 Some Street&#39;, &#39;01235&#39;, &#39;Town B&#39;, &#39;MA&#39;, &#39;US&#39;);
INSERT INTO hr.locations VALUES 
   (4200, &#39;789 Other Street&#39;, &#39;01236&#39;, &#39;Town C&#39;, &#39;MA&#39;, &#39;US&#39;);
INSERT INTO hr.locations VALUES 
   (4300, &#39;1 Yetanother Street&#39;, &#39;01237&#39;, &#39;Town D&#39;, &#39;MA&#39;, &#39;US&#39;);

---------------------------------------------------------------------------
-- CREATE AND VERSION-ENABLE THE DATA TABLE --
---------------------------------------------------------------------------
CONNECT wm_developer
-- Enter password when prompted.
set echo on
set serveroutput on

-- Version-enable the OE.WAREHOUSES table. Specify hist option of 
-- VIEW_WO_OVERWRITE so that the WAREHOUSES_HIST view contains 
-- complete history information about data changes. However, because 
-- OE.WAREHOUSES is the parent table in a referential integrity constraint
-- with OE.INVENTORIES, you must also version-enable that table.

EXECUTE DBMS_WM.EnableVersioning (&#39;OE.WAREHOUSES, OE.INVENTORIES&#39;, hist =&gt; &#39;VIEW_WO_OVERWRITE&#39;);

------------------------------------------------------------------------
-- CREATE AND USE WORKSPACES --
------------------------------------------------------------------------
-- The company has decided that it needs additional warehouse space. 
-- It wants to consider two scenarios: a single large warehouse in Town A,
-- and two smaller warehouses in Town B and Town C that together offer more
-- total storage capacity. There are potential advantages and disadvantages 
-- to each scenario, and financial and legal issues to be resolved with each.
--
-- Later, the company decides that it might need even more warehouse
-- space under each scenario, so it wants to consider the same additional 
-- warehouse in each scenario.

-- Create a workspace for each scenario, with both created as child 
-- workspaces of the LIVE database workspace.
-- In workspace large_warehouse, add one row for the single large warehouse.
-- In workspace smaller_warehouses, add two rows, one for each warehouse.
--
-- Also, within each workspace create a savepoint before adding the
-- extra warehouse, because the company might decide it does not
-- need the warehouse.

EXECUTE DBMS_WM.CreateWorkspace (workspace =&gt; &#39;large_warehouse&#39;);
EXECUTE DBMS_WM.CreateWorkspace (workspace =&gt; &#39;smaller_warehouses&#39;);

-- Set up the first scenario: Go to the large_warehouse workspace and first add
-- one row for a warehouse.

EXECUTE DBMS_WM.GotoWorkspace (workspace =&gt; &#39;large_warehouse&#39;);

INSERT INTO oe.warehouses VALUES (10, NULL, &#39;Town A&#39;, 4000,
  SDO_GEOMETRY(2001, 8307, 
  SDO_POINT_TYPE(-71.00703, 42.27099, NULL), NULL, NULL)); 

UPDATE oe.warehouses SET warehouse_spec = sys.xmltype.createxml( 
&#39;&lt;?xml version=&#34;1.0&#34;?&gt; 
&lt;Warehouse&gt; 
&lt;Building&gt;Owned&lt;/Building&gt; 
&lt;Area&gt;100000&lt;/Area&gt; 
&lt;Docks&gt;2&lt;/Docks&gt; 
&lt;DockType&gt;Side load&lt;/DockType&gt; 
&lt;WaterAccess&gt;Y&lt;/WaterAccess&gt; 
&lt;RailAccess&gt;Y&lt;/RailAccess&gt; 
&lt;Parking&gt;Lot&lt;/Parking&gt; 
&lt;VClearance&gt;15 ft&lt;/VClearance&gt; 
&lt;/Warehouse&gt;&#39; 
) WHERE warehouse_id = 10; 

COMMIT;

-- Create a savepoint so that you can, if necessary, roll back to the point
-- before the extra warehouse was added.
EXECUTE DBMS_WM.CreateSavepoint (&#39;large_warehouse&#39;, &#39;large_warehouse_add_wh&#39;);

-- Add another warehouse for this scenario.
INSERT INTO oe.warehouses VALUES (11, NULL, &#39;Town D&#39;, 4300,
  SDO_GEOMETRY(2001, 8307, 
  SDO_POINT_TYPE(-71.00707, 42.35226, NULL), NULL, NULL)); 

UPDATE oe.warehouses SET warehouse_spec = sys.xmltype.createxml( 
&#39;&lt;?xml version=&#34;1.0&#34;?&gt; 
&lt;Warehouse&gt; 
&lt;Building&gt;Leased&lt;/Building&gt; 
&lt;Area&gt;55000&lt;/Area&gt; 
&lt;Docks&gt;1&lt;/Docks&gt; 
&lt;DockType&gt;Rear load&lt;/DockType&gt; 
&lt;WaterAccess&gt;N&lt;/WaterAccess&gt; 
&lt;RailAccess&gt;N&lt;/RailAccess&gt; 
&lt;Parking&gt;Street&lt;/Parking&gt; 
&lt;VClearance&gt;10 ft&lt;/VClearance&gt; 
&lt;/Warehouse&gt;&#39; 
) WHERE warehouse_id = 11; 

COMMIT;

-- Freeze this workspace to prevent any changes until the workspace is unfrozen.
-- However, first go to the LIVE workspace, because a workspace cannot be frozen
-- if any users (including you) are in it.
EXECUTE DBMS_WM.GotoWorkspace (&#39;LIVE&#39;);
EXECUTE DBMS_WM.FreezeWorkspace (&#39;large_warehouse&#39;);

-- Set up the second scenario: Go to the smaller_warehouses workspace and first 
-- add two rows for the smaller warehouses.

EXECUTE DBMS_WM.GotoWorkspace (&#39;smaller_warehouses&#39;);

INSERT INTO oe.warehouses VALUES (10, NULL, &#39;Town B&#39;, 4100,
  SDO_GEOMETRY(2001, 8307, 
  SDO_POINT_TYPE(-71.02439, 42.28628, NULL), NULL, NULL)); 

INSERT INTO oe.warehouses VALUES (11, NULL, &#39;Town C&#39;, 4200,
  SDO_GEOMETRY(2001, 8307, 
  SDO_POINT_TYPE(-70.97980, 42.37961, NULL), NULL, NULL)); 

UPDATE oe.warehouses SET warehouse_spec = sys.xmltype.createxml( 
&#39;&lt;?xml version=&#34;1.0&#34;?&gt; 
&lt;Warehouse&gt; 
&lt;Building&gt;Owned&lt;/Building&gt; 
&lt;Area&gt;60000&lt;/Area&gt; 
&lt;Docks&gt;1&lt;/Docks&gt; 
&lt;DockType&gt;Side load&lt;/DockType&gt; 
&lt;WaterAccess&gt;Y&lt;/WaterAccess&gt; 
&lt;RailAccess&gt;Y&lt;/RailAccess&gt; 
&lt;Parking&gt;Lot&lt;/Parking&gt; 
&lt;VClearance&gt;15 ft&lt;/VClearance&gt; 
&lt;/Warehouse&gt;&#39; 
) WHERE warehouse_id = 10; 

UPDATE oe.warehouses SET warehouse_spec = sys.xmltype.createxml( 
&#39;&lt;?xml version=&#34;1.0&#34;?&gt; 
&lt;Warehouse&gt; 
&lt;Building&gt;Leased&lt;/Building&gt; 
&lt;Area&gt;550000&lt;/Area&gt; 
&lt;Docks&gt;1&lt;/Docks&gt; 
&lt;DockType&gt;Rear load&lt;/DockType&gt; 
&lt;WaterAccess&gt;N&lt;/WaterAccess&gt; 
&lt;RailAccess&gt;Y&lt;/RailAccess&gt; 
&lt;Parking&gt;Street&lt;/Parking&gt; 
&lt;VClearance&gt;12 ft&lt;/VClearance&gt; 
&lt;/Warehouse&gt;&#39; 
) WHERE warehouse_id = 11; 

COMMIT;

-- Create a savepoint so that you can, if necessary, roll back to the point
-- before the extra warehouse was added.
EXECUTE DBMS_WM.CreateSavepoint (&#39;smaller_warehouses&#39;, &#39;smaller_warehouses_add_wh&#39;);

-- Add the extra warehouse for this scenario.
INSERT INTO oe.warehouses VALUES (12, NULL, &#39;Town D&#39;, 4300,
  SDO_GEOMETRY(2001, 8307, 
  SDO_POINT_TYPE(-71.00707, 42.35226, NULL), NULL, NULL)); 

UPDATE oe.warehouses SET warehouse_spec = sys.xmltype.createxml( 
&#39;&lt;?xml version=&#34;1.0&#34;?&gt; 
&lt;Warehouse&gt; 
&lt;Building&gt;Leased&lt;/Building&gt; 
&lt;Area&gt;55000&lt;/Area&gt; 
&lt;Docks&gt;1&lt;/Docks&gt; 
&lt;DockType&gt;Rear load&lt;/DockType&gt; 
&lt;WaterAccess&gt;N&lt;/WaterAccess&gt; 
&lt;RailAccess&gt;N&lt;/RailAccess&gt; 
&lt;Parking&gt;Street&lt;/Parking&gt; 
&lt;VClearance&gt;10 ft&lt;/VClearance&gt; 
&lt;/Warehouse&gt;&#39; 
) WHERE warehouse_id = 12; 

COMMIT;

---------------------------------------------------------------------------
-- SELECT A SCENARIO, AND APPLY IT --
---------------------------------------------------------------------------
-- Later, the company makes its decisions:
-- 1. Add two smaller warehouses.
-- 2. Do not add the extra warehouse (that is, no third new warehouse).
-- Consequently, you need to discard the first scenario (large_warehouse
-- workspace) completely, discard the warehouse addition in the second
-- scenario (roll back to smaller_warehouses_add_wh savepoint), and 
-- apply the second scenario.

-- First go to the LIVE workspace, because a workspace cannot be removed
-- or merged if any users (including you) are in it.
EXECUTE DBMS_WM.GotoWorkspace (&#39;LIVE&#39;);

-- Unfreeze the first workspace and remove it to discard any changes there.
EXECUTE DBMS_WM.UnfreezeWorkspace (&#39;large_warehouse&#39;);
EXECUTE DBMS_WM.RemoveWorkspace (&#39;large_warehouse&#39;);

-- Rollback the workspace for the second scenario to the savepoint created
-- before the extra warehouse was added.
EXECUTE DBMS_WM.RollbackToSP (&#39;smaller_warehouses&#39;, &#39;smaller_warehouses_add_wh&#39;);

-- Apply changes in the smaller_warehouses workspace to the LIVE database 
-- workspace; use the remove_workspace parameter to remove the 
-- smaller_warehouses workspace after the merge.
EXECUTE DBMS_WM.MergeWorkspace (&#39;smaller_warehouses&#39;, remove_workspace =&gt; TRUE);

-- The OE.WAREHOUSES table now has the desired data (two additional warehouses
-- from the smaller_warehouses scenario). Display the IDs and names just to be
-- sure.
SELECT warehouse_id, warehouse_name FROM oe.warehouses 
   ORDER BY warehouse_id;

-- Disable versioning on the table because you are finished testing scenarios.
-- Set the force parameter to TRUE to force disabling even though changes 
-- were made in a non-LIVE workspace. You must also version-disable
-- the other tables previously version-enabled (along with OE.WAREHOUSES).

EXECUTE DBMS_WM.DisableVersioning (&#39;OE.WAREHOUSES, OE.INVENTORIES&#39;, force =&gt; TRUE);

-- Clean up by deleting the rows that were added to the OE.WAREHOUSES table.
DELETE FROM oe.warehouses WHERE warehouse_id &gt;= 10;

-- Clean up by deleting the locations that were added.
DELETE FROM hr.locations WHERE location_id &gt;= 4000;
</pre>
<p>The <code>SELECT</code> statement near the end of <a href="#i1016960">Example 1-5</a> displays the IDs and names of warehouses in the <code>OE.WAREHOUSES</code> table, including the newly added warehouses in Town B and Town C, as shown in the following example:</p>
<pre>SELECT warehouse_id, warehouse_name FROM oe.warehouses 
   ORDER BY warehouse_id;

WAREHOUSE_ID WAREHOUSE_NAME                                                     
------------ -----------------------------------                                
           1 Southlake, Texas                                                   
           2 San Francisco                                                      
           3 New Jersey                                                         
           4 Seattle, Washington                                                
           5 Toronto                                                            
           6 Sydney                                                             
           7 Mexico City                                                        
           8 Beijing                                                            
           9 Bombay                                                             
          10 Town B                                                             
          11 Town C 
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5779">
<tr>
<td class="cellalignment5788">
<table class="cellalignment5784">
<tr>
<td class="cellalignment5783"><a href="long_prtusage.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5783"><a href="long_events.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5790">
<table class="cellalignment5782">
<tr>
<td class="cellalignment5783"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5783"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5783"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5783"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5783"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5783"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>