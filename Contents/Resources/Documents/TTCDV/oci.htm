<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107465"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/TimesTen%20Support%20for%20OCI"></a><title>TimesTen Support for OCI</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033"/>
<meta name="dcterms.created" content="2014-12-10T16:46:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database C Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E21637-09"/>
<meta name="dcterms.isVersionOf" content="TTCDV"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="writing_app.htm" title="Previous" type="text/html"/>
<link rel="Next" href="pro_c.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21637-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/15</span> <!-- End Header -->
<div id="TTCDV190" class="chapter"><a id="BABCABGH"></a>
<h1 class="chapter"><span class="secnum">3</span> TimesTen Support for OCI</h1>
<p>Tim<a id="sthref160"></a>esTen and TimesTen Cache support the Oracle Call Interface (OCI) for C or C++ programs.</p>
<p>This chapter provides an overview and TimesTen-specific information regarding OCI, especially emphasizing differences between using OCI with TimesTen versus with Oracle Database. For complete information about OCI, you can refer to <a class="olink LNOCI" href="../LNOCI/toc.htm"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a> in the Oracle Database library.</p>
<p>Also note that <a href="writing_app.htm#BABJJEEB">Chapter 2, &#34;Working with TimesTen Databases in ODBC&#34;</a>, contains information that may be of general interest regarding TimesTen features.</p>
<p>The following topics are covered:</p>
<ul>
<li>
<p><a href="#BABBACDJ">Overview of OCI</a></p>
</li>
<li>
<p><a href="#CIAFAGIH">Overview of TimesTen OCI support</a></p>
</li>
<li>
<p><a href="#BABEEEFJ">Getting started with TimesTen OCI</a></p>
</li>
<li>
<p><a href="#BABIGBEE">Use of additional features with TimesTen OCI</a></p>
</li>
<li>
<p><a href="#CIABDBDF">TimesTen OCI support reference</a></p>
</li>
</ul>
<a id="BABBACDJ"></a>
<div id="TTCDV191" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Over<a id="sthref161"></a>view of OCI</h2>
<p>OCI is an API that provides functions you can use to access the database and control SQL execution. OCI supports the data types, calling conventions, syntax, and semantics of the C and C++ programming languages. You compile and link an OCI program much as you would any C or C++ program. There is no preprocessing or precompilation step.</p>
<p>The OCI library of database access and retrieval functions is in the form of a dynamic runtime library that can be linked into an application at runtime. The OCI library includes the following functional areas:</p>
<ul>
<li>
<p>SQL access functions</p>
</li>
<li>
<p>Data type mapping and manipulation functions</p>
</li>
</ul>
<p><a id="sthref162"></a><a id="sthref163"></a>The following are among the many useful features that OCI provides or supports:</p>
<ul>
<li>
<p>Statement caching</p>
</li>
<li>
<p>Dynamic SQL</p>
</li>
<li>
<p>Facilities to treat transaction control, session control, and system control statements like DML statements</p>
</li>
<li>
<p>Description functionality to expose layers of server metadata</p>
</li>
<li>
<p>Ability to associate commit requests with statement executions to reduce round trips</p>
</li>
<li>
<p>Optimization of queries using transparent prefetch buffers to reduce round trips</p>
</li>
<li>
<p>Thread safety that eliminates the need for mutual exclusive locks on OCI handles</p>
</li>
</ul>
<p>For general information about OCI, you can refer to <a class="olink LNOCI" href="../LNOCI/toc.htm"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>, included with the Oracle Database documentation set.</p>
</div>
<!-- class="sect1" -->
<a id="CIAFAGIH"></a>
<div id="TTCDV192" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Over<a id="sthref164"></a>view of TimesTen OCI support</h2>
<p>This chapter contains information specific to using OCI with TimesTen and TimesTen Cache. For supported features, TimesTen OCI syntax and usage is the same as that in Oracle Database.</p>
<p>This section covers the following topics:</p>
<ul>
<li>
<p><a href="#BABDFHHC">OCI libraries and architecture</a></p>
</li>
<li>
<p><a href="#BABGBBGD">Globalization support</a></p>
</li>
<li>
<p><a href="#BABDDCGG">TimesTen restrictions and differences</a></p>
</li>
<li>
<p><a href="#BABDCJJD">The ttSrcScan utility</a></p>
</li>
</ul>
<a id="BABDFHHC"></a>
<div id="TTCDV193" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">OCI libraries and architecture</h3>
<p>TimesTen OCI support enables you to run many existing OCI applications with TimesTen direct connections or client/server connections. It also enables you to use other features, such as Pro*C/C++ and ODP.NET, that use OCI as a database interface. (You can also call PL/SQL from OCI, Pro*C/C++, and ODP.NET applications.) <a href="#BABJFFHB">Figure 3-1</a> sh<a id="sthref165"></a><a id="sthref166"></a>ows where OCI support is positioned in the TimesTen architecture.</p>
<p>TimesTen provides Oracle Instant Client as the OCI client library. This is configured through the appropriate <code dir="ltr">ttenv</code> script, discussed in <a class="olink TTINS178" href="../TTINS/install.htm#TTINS178">&#34;Environment variables&#34;</a> in the <span class="italic">Oracle TimesTen In-Memory Database Installation Guide</span>.</p>
<div id="TTCDV194" class="figure">
<p class="titleinfigure"><a id="BABJFFHB"></a>Figure 3-1 OCI in the TimesTen architecture</p>
<img width="514" height="287" src="img/odbc_diagram.gif" alt="Description of Figure 3-1 follows"/><br/>
<a id="sthref167" href="img_text/odbc_diagram.htm">Description of &#34;Figure 3-1 OCI in the TimesTen architecture&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>TimesTen 11<span class="italic">g</span> Release 2 (11.2.2) OCI is based on Oracle Database release 11.2.0.2 OCI and supports the contemporary OCI 8 style APIs. For example, the <code dir="ltr">OCIStmtExecute()</code> function is supported but not the older <code dir="ltr">oexec()</code> function. See <a class="olink LNOCI16142" href="../LNOCI/oci01int.htm#LNOCI16142">&#34;Obsolete OCI Routines&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> in the Oracle Database documentation.</p>
</div>
<!-- class="sect2" -->
<a id="BABGBBGD"></a>
<div id="TTCDV195" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Glo<a id="sthref168"></a>balization support</h3>
<p>This section discusses TimesTen OCI support for globalization.</p>
<a id="BABFCDHB"></a>
<div id="TTCDV196" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Character sets</h4>
<p>To specify a character set for the connection, OCI programs can set the <code dir="ltr">NLS_LANG</code> environment variable or call <code dir="ltr">OCIEnvNlsCreate()</code>. The setting in the <code dir="ltr">sys.odbc.ini</code> or user <code dir="ltr">odbc.ini</code> file is used by default if not overridden by <code dir="ltr">NLS_LANG</code> or <code dir="ltr">OCIEnvNlsCreate()</code>. Setting the character set explicitly is recommended. The default is typically <code dir="ltr">AMERICAN_AMERICA.US7ASCII</code>.</p>
<p>Note that because TimesTen OCI does not support language or locale (territory) settings, the language and territory components of <code dir="ltr">NLS_LANG</code>, such as <code dir="ltr">AMERICAN_AMERICA</code> above, are ignored. Even when not specifying the language and locale, however, you must still have the period in front of the character set when setting <code dir="ltr">NLS_LANG</code>. For example, either of the following would work, although <code dir="ltr">AMERICAN_AMERICA</code> is ignored:</p>
<pre dir="ltr">NLS_LANG=AMERICAN_AMERICA.WE8ISO8859P1
</pre>
<p>Or:</p>
<pre dir="ltr">NLS_LANG=.WE8ISO8859P1
</pre>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>TimesTen character sets are compatible with Oracle Database.</p>
</li>
<li>
<p>An <code dir="ltr">NLS_LANG</code> environment setting overrides the TimesTen default character set.</p>
</li>
<li>
<p>On Windows, the <code dir="ltr">NLS_LANG</code> setting is searched for in the registry if it is not in the environment. If your OCI or Pro*C/C++ program has trouble connecting to TimesTen, verify that the <code dir="ltr">NLS_LANG</code> setting under <code dir="ltr">HKEY_LOCAL_MACHINE\Software\ORACLE\</code>, if that key exists, is valid and indicates a character set supported by TimesTen.</p>
</li>
<li>
<p>Refer to <a class="olink NLSPG189" href="../NLSPG/ch3globenv.htm#NLSPG189">&#34;Choosing a Locale with the NLS_LANG Environment Variable&#34;</a> in <span class="italic">Oracle Database Globalization Support Guide</span> for further information about <code dir="ltr">NLS_LANG</code>.</p>
</li>
<li>
<p>The TimesTen default character set is <code dir="ltr">AMERICAN_AMERICA.US7ASCII</code>. The <code dir="ltr">TIMESTEN8</code> character set is not supported. Refer to <a class="olink TTREF739" href="../TTREF/attribute.htm#TTREF739">&#34;Supported character sets&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
</li>
<li>
<p>Refer to <a class="olink LNOCI17114" href="../LNOCI/oci16rel001.htm#LNOCI17114">&#34;OCIEnvNlsCreate()&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> for information about that OCI call.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABHAJHH"></a>
<div id="TTCDV197" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Additional globalization features</h4>
<p>TimesTen OCI also supports the following additional globalization features. These can be set as environment variables, TimesTen general connection attributes, or TimesTen ODBC connection options. For the connection options, the names here are prepended by &#34;<code dir="ltr">TT_</code>&#34;. An environment variable setting takes precedence over a corresponding connection attribute or connection option setting. A connection option setting takes precedence over a corresponding connection attribute setting.</p>
<ul>
<li>
<p><code dir="ltr">NLS_LENGTH_SEMANTICS</code>: By default, the lengths of character data types <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> are specified in bytes, not characters. For single-byte character encoding this works well. For multibyte character encoding, you can use <code dir="ltr">NLS_LENGTH_SEMANTICS</code> to create <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> columns using character-length semantics instead. Supported settings are <code dir="ltr">BYTE</code> (default) and <code dir="ltr">CHAR</code>. (<code dir="ltr">NCHAR</code> and <code dir="ltr">NVARCHAR2</code> columns are always character-based. Existing columns are not affected.)</p>
</li>
<li>
<p><code dir="ltr">NLS_SORT</code>: This specifies the type of sort for character data. It overrides the default value from <code dir="ltr">NLS_LANG</code>. Valid values are <code dir="ltr">BINARY</code> or any linguistic sort name supported by TimesTen. For example, to specify the German linguistic sort sequence, set <code dir="ltr">NLS_SORT=German</code>.</p>
</li>
<li>
<p><code dir="ltr">NLS_NCHAR_CONV_EXCP</code>: This determines whether an error is reported when there is data loss during an implicit or explicit character type conversion between <code dir="ltr">NCHAR</code> or <code dir="ltr">NVARCHAR</code> data and <code dir="ltr">CHAR</code> or <code dir="ltr">VARCHAR2</code> data. Valid settings are <code dir="ltr">TRUE</code> and <code dir="ltr">FALSE</code>. The default value is <code dir="ltr">FALSE</code>, resulting in no error being reported.</p>
</li>
</ul>
<p>Refer to <a class="olink TTOPR274" href="../TTOPR/globalization.htm#TTOPR274">&#34;Globalization Support&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span> and <a class="olink NLSPG003" href="../NLSPG/ch3globenv.htm#NLSPG003">&#34;Setting Up a Globalization Support Environment&#34;</a> in <span class="italic">Oracle Database Globalization Support Guide</span> for additional information on these environment variables and related features. See <a href="odbc_supported.htm#BEIEGCFC">&#34;Option support for SQLSetConnectOption and SQLGetConnectOption&#34;</a> for information about TimesTen connection option support.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDDCGG"></a>
<div id="TTCDV198" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Times<a id="sthref169"></a>Ten restrictions and differences</h3>
<p>This section discusses the following areas of restrictions and differences for OCI in TimesTen compared to in the Oracle Database:</p>
<ul>
<li>
<p><a href="#BABBIDBD">Oracle Database features not supported</a></p>
</li>
<li>
<p><a href="#BABCJGBF">Additional TimesTen OCI restrictions</a></p>
</li>
<li>
<p><a href="#BABBHIIF">Additional TimesTen OCI differences</a></p>
</li>
</ul>
<a id="BABBIDBD"></a>
<div id="TTCDV493" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Oracle Database features not supported</h4>
<p>TimesTen does not support OCI calls that are related to functionality that does not exist in TimesTen or TimesTen Cache. For example, TimesTen and TimesTen Cache do not support these Oracle Database features:</p>
<ul>
<li>
<p>Advanced Queuing</p>
</li>
<li>
<p>Any Data</p>
</li>
<li>
<p>Object support</p>
</li>
<li>
<p>Collections</p>
</li>
<li>
<p>Cartridge Services</p>
</li>
<li>
<p>Direct path loading</p>
</li>
<li>
<p>Date/time intervals</p>
</li>
<li>
<p>Iterators</p>
</li>
<li>
<p>BFILEs</p>
</li>
<li>
<p>Cryptographic Toolkit</p>
</li>
<li>
<p>XML DB support</p>
</li>
<li>
<p>Spatial Services</p>
</li>
<li>
<p>Event handling</p>
</li>
<li>
<p>Session switching</p>
</li>
<li>
<p>Scrollable cursors</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABCJGBF"></a>
<div id="TTCDV494" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Additional TimesTen OCI restrictions</h4>
<p>TimesTen OCI has the following restrictions:</p>
<ul>
<li>
<p>The <code dir="ltr">TypeMode</code> data store attribute must be set to 0, which corresponds to Oracle Database behavior.</p>
</li>
<li>
<p>The <code dir="ltr">DuplicateBindMode</code> general connection attribute must be set to 0, which corresponds to Oracle Database behavior.</p>
</li>
<li>
<p>The <code dir="ltr">DDLCommitBehavior</code> general connection attribute must be set to 0, which corresponds to Oracle Database behavior.</p>
</li>
<li>
<p>Asynchronous calls are not supported.</p>
</li>
<li>
<p>Connection pooling and session pooling are not supported.</p>
</li>
<li>
<p>Describing objects with <code dir="ltr">OCIDescribeAny()</code> is supported only by name. Describing PL/SQL objects is not supported. (Also see the entry for this function under <a href="#BABCJJIF">&#34;Supported OCI calls&#34;</a>.)</p>
</li>
<li>
<p>TimesTen Client/Server automatic client failover is not supported.</p>
</li>
<li>
<p>The <code dir="ltr">TNSPING</code> utility does not recognize connections to TimesTen.</p>
</li>
<li>
<p>Retrieving implicit <code dir="ltr">ROWID</code> values from <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements is not supported. (This is supported for <code dir="ltr">SELECT FOR UPDATE</code> statements, however.)</p>
</li>
<li>
<p>TimesTen built-in procedures that return result sets are not supported directly. You can, however, use PL/SQL for this purpose, as shown in <a href="#BABEHDGF">&#34;Use of PL/SQL in OCI to call a TimesTen built-in procedure&#34;</a>.</p>
</li>
<li>
<p>Only a single REF CURSOR can be returned from a PL/SQL block, procedure call, or function call.</p>
</li>
<li>
<p>Binding and defining of structures through <code dir="ltr">OCIBindArrayOfStruct()</code> and <code dir="ltr">OCIDefineArrayOfStruct()</code> is supported for SQL statements but not for PL/SQL. (Also see the entries for these functions under <a href="#BABCJJIF">&#34;Supported OCI calls&#34;</a>.)</p>
</li>
<li>
<p>Oracle Database utilities such as SQL*Plus and SQL*Loader are not supported. (In TimesTen, you can use <code dir="ltr">ttIsql</code> instead of SQL*Plus and <code dir="ltr">ttBulkCp</code> instead of SQL*Loader. See <a class="olink TTREF316" href="../TTREF/util.htm#TTREF316">&#34;Utilities&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.)</p>
</li>
<li>
<p>Array binding, the ability to bind arrays into PL/SQL statements, is supported for associative arrays (index-by tables or PL/SQL tables) but is <span class="italic">not</span> supported for varrays (variable size arrays) or nested tables. (See <a href="#BABGGIFF">&#34;Associative array bindings in TimesTen OCI&#34;</a>.)</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABBHIIF"></a>
<div id="TTCDV495" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Additional TimesTen OCI differences</h4>
<p>Be aware of the following points.</p>
<ul>
<li>
<p>Both TimesTen and Oracle Database support XA, but TimesTen does not support XA through OCI.</p>
</li>
<li>
<p>With OCI, TimesTen automatically disables autocommit for DML statements. Transactions should be explicitly committed or rolled back when finished.</p>
</li>
<li>
<p>There are differences in the usage of hexadecimal literals in TimesTen. See the description of <code dir="ltr"><span class="codeinlineitalic">HexadecimalLiteral</span></code> in <a class="olink TTSQL202" href="../TTSQL/express.htm#TTSQL202">&#34;Constants&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database SQL Reference</span>.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDCJJD"></a>
<div id="TTCDV199" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">The t<a id="sthref170"></a>tSrcScan utility</h3>
<p>If you have an existing OCI program and want to see whether it uses OCI features that TimesTen does not support, you can use the <code dir="ltr">ttSrcScan</code> command line utility to scan your program for unsupported functions, types, type codes, attributes, modes, and constants. This is a standalone utility that can be run without TimesTen or Oracle Database being installed and runs on any platform supported by TimesTen. It reads source code files as input and creates HTML and text files as output. If the utility finds unsupported items, then they are logged and alternatives are suggested. You can find the <code dir="ltr">ttSrcScan</code> executable in the <code dir="ltr">quickstart/sample_util</code> directory in your TimesTen installation.</p>
<p>Specify an input file or directory for the program to be scanned and an output directory for the <code dir="ltr">ttSrcScan</code> reports. Other options are available as well. See the README file in the <code dir="ltr">sample_util</code> directory for information.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABEEEFJ"></a>
<div id="TTCDV200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Getting started with TimesTen OCI</h2>
<p>This section discusses the following topics for getting started with a TimesTen OCI application:</p>
<ul>
<li>
<p><a href="#BABFCHHJ">Environment variables for TimesTen OCI</a></p>
</li>
<li>
<p><a href="#BABDFJAH">Compiling and linking OCI applications</a></p>
</li>
<li>
<p><a href="#BABIBEJD">Connecting to a TimesTen database from OCI</a></p>
</li>
<li>
<p><a href="#BABBJCFG">OCI error reporting</a></p>
</li>
<li>
<p><a href="#BABBAGFG">Signal handling and diagnostic framework considerations</a></p>
</li>
<li>
<p><a href="#BABGEGBJ">OCI demo programs</a></p>
</li>
</ul>
<a id="BABFCHHJ"></a>
<div id="TTCDV201" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">En<a id="sthref171"></a><a id="sthref172"></a>vironment variables for TimesTen OCI</h3>
<p>Environment variables for executing a TimesTen OCI application are described in <a href="#BABFHCHH">Table 3-1</a>. Settings apply to both direct connections and client/server connections except as noted.</p>
<p>After installation, you can modify environment variables as appropriate through the TimesTen <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/bin/ttenv</code> script or <code dir="ltr">quickstart/ttquickstartenv</code> script applicable to your operating system. See <a class="olink TTINS178" href="../TTINS/install.htm#TTINS178">&#34;Environment variables&#34;</a> in the <span class="italic">Oracle TimesTen In-Memory Database Installation Guide</span> for information about <code dir="ltr">ttenv</code>.</p>
<p>You can also use the TimesTen OCI and Pro*C/C++ Makefiles provided with the Quick Start demos to implement appropriate environment settings. These are in the following locations.</p>
<pre dir="ltr">quickstart/sample_code/oci/
quickstart/sample_code/proc/
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
To ensure proper generation of OCI programs to be run on TimesTen, do not set <code dir="ltr">ORACLE_HOME</code> for OCI compilations (or unset it if it was set previously).</div>
<div id="TTCDV202" class="tblhruleformal">
<p class="titleintable"><a id="sthref173"></a><a id="BABFHCHH"></a>Table 3-1 Environment variables for TimesTen OCI</p>
<table class="cellalignment4366" title="Environment variables for TimesTen OCI" summary="Environment variable settings" dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t4">Variable</th>
<th class="cellalignment4367" id="r1c2-t4">Required or optional</th>
<th class="cellalignment4367" id="r1c3-t4">Settings</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">LD_LIBRARY_PATH</code> (UNIX)</p>
<p><code dir="ltr">PATH</code> (Windows)</p>
</td>
<td class="cellalignment4368" headers="r2c1-t4 r1c2-t4">
<p>Required</p>
</td>
<td class="cellalignment4368" headers="r2c1-t4 r1c3-t4">
<p>Must be set so that the TimesTen Instant Client directory precedes the Oracle Database libraries in the path. The path is set properly if you use either of the following scripts under <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code> (the second path assuming the standard Quick Start location):</p>
<pre dir="ltr">bin/ttenv
quickstart/ttquickstartenv
</pre>
<p>See <a class="olink TTINS178" href="../TTINS/install.htm#TTINS178">&#34;Environment variables&#34;</a> in the <span class="italic">Oracle TimesTen In-Memory Database Installation Guide</span> for information about <code dir="ltr">ttenv</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">TNS_ADMIN</code></p>
</td>
<td class="cellalignment4368" headers="r3c1-t4 r1c2-t4">
<p>Required if you use the <code dir="ltr">tnsnames</code> naming method</p>
</td>
<td class="cellalignment4368" headers="r3c1-t4 r1c3-t4">
<p>Specifies the directory where the <code dir="ltr">tnsnames.ora</code> file is located. This is also where TimesTen looks for a <code dir="ltr">sqlnet.ora</code> file.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t4" headers="r1c1-t4">
<p><code dir="ltr">TWO_TASK</code> (UNIX)</p>
<p><code dir="ltr">LOCAL</code> (Windows)</p>
</td>
<td class="cellalignment4368" headers="r4c1-t4 r1c2-t4">
<p>Optional</p>
</td>
<td class="cellalignment4368" headers="r4c1-t4 r1c3-t4">
<p>You can use this, whichever is appropriate for your platform, instead of specifying the <code dir="ltr"><span class="codeinlineitalic">dbname</span></code> argument in your OCI logon call. The setting consists of a valid TNS name or easy connect string.</p>
<p>See <a href="#BABIBEJD">&#34;Connecting to a TimesTen database from OCI&#34;</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">NLS_LANG</code></p>
</td>
<td class="cellalignment4368" headers="r5c1-t4 r1c2-t4">
<p>Optional</p>
</td>
<td class="cellalignment4368" headers="r5c1-t4 r1c3-t4">
<p>See <a href="#BABFCDHB">&#34;Character sets&#34;</a>. Only the character set component is honored and it must indicate a character set supported by TimesTen. The language and territory values are ignored.</p>
<p>This environment variable overrides the TimesTen default character set.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t4" headers="r1c1-t4">
<p><code dir="ltr">NLS_SORT</code></p>
</td>
<td class="cellalignment4368" headers="r6c1-t4 r1c2-t4">
<p>Optional</p>
</td>
<td class="cellalignment4368" headers="r6c1-t4 r1c3-t4">
<p>See <a href="#BABHAJHH">&#34;Additional globalization features&#34;</a>. The sort order must be a value supported by TimesTen.</p>
<p>This overrides the TimesTen <code dir="ltr">NLS_SORT</code> general connection attribute.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t4" headers="r1c1-t4">
<p><code dir="ltr">NLS_LENGTH_SEMANTICS</code></p>
</td>
<td class="cellalignment4368" headers="r7c1-t4 r1c2-t4">
<p>Optional</p>
</td>
<td class="cellalignment4368" headers="r7c1-t4 r1c3-t4">
<p>See <a href="#BABHAJHH">&#34;Additional globalization features&#34;</a>.</p>
<p>This overrides the TimesTen <code dir="ltr">NLS_LENGTH_SEMANTICS</code> general connection attribute.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t4" headers="r1c1-t4">
<p><code dir="ltr">NLS_NCHAR_CONV_EXCP</code></p>
</td>
<td class="cellalignment4368" headers="r8c1-t4 r1c2-t4">
<p>Optional</p>
</td>
<td class="cellalignment4368" headers="r8c1-t4 r1c3-t4">
<p>See <a href="#BABHAJHH">&#34;Additional globalization features&#34;</a>.</p>
<p>This overrides the TimesTen <code dir="ltr">NLS_NCHAR_CONV_EXCP</code> general connection attribute.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Refer to <a class="olink TTREF175" href="../TTREF/attribute.htm#TTREF175">&#34;NLS general connection attributes&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for information about the NLS connection attributes mentioned in the table.</div>
</div>
<!-- class="sect2" -->
<a id="BABDFJAH"></a>
<div id="TTCDV203" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Co<a id="sthref174"></a><a id="sthref175"></a><a id="sthref176"></a>mpiling and linking OCI applications</h3>
<p>No changes are required between Oracle Database and TimesTen for the steps to compile and link an OCI application.</p>
<p>OCI programs that use the Oracle Client 11.2.0.2 library do not have to be recompiled or relinked to be executed with TimesTen.</p>
</div>
<!-- class="sect2" -->
<a id="BABIBEJD"></a>
<div id="TTCDV204" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Con<a id="sthref177"></a><a id="sthref178"></a>necting to a TimesTen database from OCI</h3>
<p>TimesTen OCI uses the Oracle Instant Client to connect to the TimesTen database. You can connect to the database through either the <code dir="ltr">tnsnames</code> or the <span class="italic">easy connect</span> naming method, similarly to how you would connect to an Oracle database through those methods.</p>
<p>This section covers the following topics:</p>
<ul>
<li>
<p><a href="#BABHAAHJ">Using the tnsnames naming method to connect</a></p>
</li>
<li>
<p><a href="#BABIBGGB">Using an easy connect string to connect</a></p>
</li>
<li>
<p><a href="#BABJBHIB">Configuring whether to use tnsnames.ora or easy connect</a></p>
</li>
<li>
<p><a href="#BABFFEGE">Connecting as an externally identified user in OCI</a></p>
</li>
</ul>
<p>Refer to <a class="olink NETAG008" href="../NETAG/naming.htm#NETAG008">&#34;Configuring Naming Methods&#34;</a> in <span class="italic">Oracle Database Net Services Administrator&#39;s Guide</span> for additional information about <code dir="ltr">tnsnames</code>, easy connect, and the <code dir="ltr">tnsnames.ora</code> file.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>Although the <code dir="ltr">sqlnet</code> mechanism is used for a TimesTen OCI connection, the connection goes through the TimesTen ODBC driver, not the Oracle Database <code dir="ltr">sqlnet</code> driver.</p>
</li>
<li>
<p>Privilege to connect to the database must be explicitly granted, through the <code dir="ltr">CREATE SESSION</code> privilege, to every user other than the instance administrator who wants to connect to TimesTen. Refer to <a href="writing_app.htm#BABHAGHD">&#34;Access control for connections&#34;</a>.</p>
</li>
</ul>
</div>
<a id="BABHAAHJ"></a>
<div id="TTCDV205" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Using the tnsnames naming method to con<a id="sthref179"></a><a id="sthref180"></a>nect</h4>
<p>TimesTen supports <code dir="ltr">tnsnames</code> syntax. You can use a TimesTen <code dir="ltr">tnsnames.ora</code> entry the same way you would use an Oracle Database <code dir="ltr">tnsnames.ora</code> entry.</p>
<p>The syntax of a TimesTen entry in <code dir="ltr">tnsnames.ora</code> is as follows:</p>
<pre dir="ltr"><span class="italic">tns_entry</span> = (DESCRIPTION =
              (CONNECT_DATA =
                (SERVICE_NAME = <span class="italic">dsn</span>)
                (SERVER = timesten_direct | timesten_client)))
</pre>
<p>Where <code dir="ltr"><span class="codeinlineitalic">tns_entry</span></code> is the arbitrary TNS name you assign to the entry. You can use this as the <code dir="ltr"><span class="codeinlineitalic">dbname</span></code> argument in <code dir="ltr">OCILogon()</code>, <code dir="ltr">OCILogon2()</code>, and <code dir="ltr">OCIServerAttach()</code> calls.</p>
<p><code dir="ltr">DESCRIPTION</code> and <code dir="ltr">CONNECT_DATA</code> are required as shown.</p>
<p>For <code dir="ltr">SERVICE_NAME</code>, <code dir="ltr"><span class="codeinlineitalic">dsn</span></code> must be a TimesTen DSN that is configured in the <code dir="ltr">sys.odbc.ini</code> or user <code dir="ltr">odbc.ini</code> file that is visible to a user running your OCI application. On Windows, the DSN can be specified by using the ODBC Data Source Administrator. See <a class="olink TTOPR120" href="../TTOPR/using.htm#TTOPR120">&#34;Managing TimesTen Databases&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span>.</p>
<p>For <code dir="ltr">SERVER</code>, <code dir="ltr">timesten_direct</code> specifies a direct connection to TimesTen or <code dir="ltr">timesten_client</code> specifies a client/server connection. If you choose <code dir="ltr">timesten_client</code>, the DSN must be configured as a client/server database.</p>
<p>As always, the host and port of the TimesTen server are determined from entries in the <code dir="ltr">sys.ttconnect.ini</code> file, according to the DSN. See <a class="olink TTOPR177" href="../TTOPR/client_server.htm#TTOPR177">&#34;Working with the TimesTen Client and Server&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span>.</p>
<p>Here is a sample <code dir="ltr">tnsnames.ora</code> entry for a direct connection:</p>
<pre dir="ltr">my_tnsname = (DESCRIPTION = 
               (CONNECT_DATA = 
                 (SERVICE_NAME = my_dsn)
                 (SERVER = timesten_direct))) 
</pre>
<p>You can use the TNS name, <code dir="ltr">my_tnsname</code>, in either of the following ways:</p>
<ul>
<li>
<p>Specify &#34;<code dir="ltr">my_tnsname</code>&#34; for the <code dir="ltr"><span class="codeinlineitalic">dbname</span></code> argument in your OCI logon call.</p>
</li>
<li>
<p>Specify an empty string for <code dir="ltr"><span class="codeinlineitalic">dbname</span></code> and set <code dir="ltr">TWO_TASK</code> or <code dir="ltr">LOCAL</code> to &#34;<code dir="ltr">my_tnsname</code>&#34;.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">OCILogon2(envhp, errhp, &amp;svchp,
         (text *)&#34;user1&#34;, (ub4)strlen(&#34;user1&#34;),
         (text *)&#34;pwd1&#34;, (ub4)strlen(&#34;pwd1&#34;), 
         (text *)&#34;my_tnsname&#34;, (ub4)strlen((char*)&#34;my_tnsname&#34;), OCI_DEFAULT)); 
</pre>
<p>Refer to <a class="olink LNOCI151" href="../LNOCI/oci16rel001.htm#LNOCI151">&#34;Connect, Authorize, and Initialize Functions&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> for details about OCI logon calling sequences.</p>
<p>Or on a UNIX system, for example, you can set <code dir="ltr">TWO_TASK</code> to &#34;<code dir="ltr">my_tnsname</code>&#34; and use an OCI logon call with an empty string for <code dir="ltr"><span class="codeinlineitalic">dbname</span></code>:</p>
<pre dir="ltr">OCILogon2(envhp, errhp, &amp;svchp,
         (text *)&#34;user1&#34;, (ub4)strlen(&#34;user1&#34;),
         (text *)&#34;pwd1&#34;, (ub4)strlen(&#34;pwd1&#34;), 
         (text *)&#34;&#34;, (ub4)0, OCI_DEFAULT)); 
</pre></div>
<!-- class="sect3" -->
<a id="BABIBGGB"></a>
<div id="TTCDV206" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Using an easy connect string to con<a id="sthref181"></a><a id="sthref182"></a>nect</h4>
<p>TimesTen supports easy connect syntax, which enhances the Instant Client package by allowing connections to be made without configuring <code dir="ltr">tnsnames.ora</code>. An easy connect string has syntax similar to a URL, in the following format:</p>
<pre dir="ltr">[//]<span class="italic">host</span>[:<span class="italic">port</span>]/<span class="italic">service_name</span>:<span class="italic">server</span>[/<span class="italic">instance</span>]
</pre>
<p>The initial double-slash is optional. A host name must be specified to satisfy easy connect syntax, but is otherwise ignored by TimesTen. The name &#34;<code dir="ltr">localhost</code>&#34; is typically used by convention. Any value specified for the port is also ignored. For client/server connections, the host and port of the TimesTen server are determined from entries in the <code dir="ltr">sys.ttconnect.ini</code> file, according to the TimesTen DSN.</p>
<p>Specify the DSN for <code dir="ltr"><span class="codeinlineitalic">service_name</span></code>. Specify <code dir="ltr">timesten_client</code> or <code dir="ltr">timesten_direct</code>, as appropriate, for <code dir="ltr"><span class="codeinlineitalic">server</span></code>.</p>
<p>TimesTen ignores the <code dir="ltr"><span class="codeinlineitalic">instance</span></code> field and does not require that it be specified.</p>
<p>For example, the following easy connect string connects to a TimesTen server using the client/server libraries. Assume a DSN <code dir="ltr">ttclient</code> in the <code dir="ltr">sys.odbc.ini</code> file is resolved as a client/server data source and connects to the corresponding host and port specified in the <code dir="ltr">sys.ttconnect.ini</code> file:</p>
<pre dir="ltr">&#34;localhost/ttclient:timesten_client&#34;
</pre>
<p>The following easy connect string is for a direct connection to TimesTen. Assume the DSN <code dir="ltr">ttdirect</code> is defined in <code dir="ltr">sys.odbc.ini</code>:</p>
<pre dir="ltr">&#34;localhost/ttdirect:timesten_direct&#34;
</pre>
<p>You can use an easy connect string in either of the following ways:</p>
<ul>
<li>
<p>Specify it for the <code dir="ltr"><span class="codeinlineitalic">dbname</span></code> argument in your OCI logon call.</p>
</li>
<li>
<p>Specify an empty string for <code dir="ltr"><span class="codeinlineitalic">dbname</span></code> and set <code dir="ltr">TWO_TASK</code> or <code dir="ltr">LOCAL</code> to the easy connect string, in quotes.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">OCILogon2(envhp, errhp, &amp;svchp,
         (text *)&#34;user1&#34;, (ub4)strlen(&#34;user1&#34;),
         (text *)&#34;pwd1&#34;, (ub4)strlen(&#34;pwd1&#34;),
         (text *)&#34;localhost/ttclient:timesten_client&#34;,
         (ub4)strlen((char*)&#34;localhost/ttclient:timesten_client&#34;), OCI_DEFAULT));
</pre>
<p>Refer to <a class="olink LNOCI151" href="../LNOCI/oci16rel001.htm#LNOCI151">&#34;Connect, Authorize, and Initialize Functions&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> for details about OCI logon calling sequences.</p>
<p>Or on a UNIX system, for example, you can set <code dir="ltr">TWO_TASK</code> to &#34;<code dir="ltr">localhost/ttclient:timesten_client</code>&#34; and use an OCI logon call with an empty string for <code dir="ltr"><span class="codeinlineitalic">dbname</span></code>, as follows.</p>
<pre dir="ltr">OCILogon2(envhp, errhp, &amp;svchp,
         (text *)&#34;user1&#34;, (ub4)strlen(&#34;user1&#34;),
         (text *)&#34;pwd1&#34;, (ub4)strlen(&#34;pwd1&#34;), 
         (text *)&#34;&#34;, (ub4)0, OCI_DEFAULT)); 
</pre></div>
<!-- class="sect3" -->
<a id="BABJBHIB"></a>
<div id="TTCDV207" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring whether to use tnsnames.ora or easy connect</h4>
<p>If a <code dir="ltr">sqlnet.ora</code> file is present, it specifies the naming methods that are tried and the order in which they are tried. The Instant Client looks for a <code dir="ltr">sqlnet.ora</code> file at the <code dir="ltr">TNS_ADMIN</code> location, if applicable. If <code dir="ltr">TNS_ADMIN</code> has not been set but <code dir="ltr">ORACLE_HOME</code> has been (such as if you had a previous Instant Client installation), the default <code dir="ltr">sqlnet.ora</code> location is the Oracle Database default location as noted in <a class="olink NETRF006" href="../NETRF/sqlnet.htm#NETRF006">&#34;Parameters for the sqlnet.ora File&#34;</a> in <span class="italic">Oracle Database Net Services Reference</span>.</p>
<p>If <code dir="ltr">sqlnet.ora</code> is found and does not indicate a particular naming method, you cannot use that method. If <code dir="ltr">sqlnet.ora</code> is not found, you can use either method.</p>
<p>In TimesTen, sample copies of <code dir="ltr">tnsnames.ora</code> and <code dir="ltr">sqlnet.ora</code> are in the <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/network/admin/samples</code> directory. Here is the <code dir="ltr">sqlnet.ora</code> file that TimesTen provides, which supports both <code dir="ltr">tnsnames</code> and easy connect (&#34;<code dir="ltr">EZCONNECT</code>&#34;):</p>
<pre dir="ltr"># To use ezconnect syntax or tnsnames, the following entries must be
# included in the sqlnet.ora configuration.
#
NAMES.DIRECTORY_PATH= (TNSNAMES, EZCONNECT)
</pre>
<p>With this file, TimesTen first looks for <code dir="ltr">tnsnames</code> syntax in your OCI logon calls. If it cannot find <code dir="ltr">tnsnames</code> syntax, it looks for easy connect syntax.</p>
</div>
<!-- class="sect3" -->
<a id="BABFFEGE"></a>
<div id="TTCDV510" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Con<a id="sthref183"></a><a id="sthref184"></a><a id="sthref185"></a><a id="sthref186"></a>necting as an externally identified user in OCI</h4>
<p>You can connect through OCI as an externally identified user (external user) by specifying the user name in brackets, such as &#34;<code dir="ltr">[myadmin]</code>&#34;, and the password as an empty string, &#34;&#34;.</p>
<p>In particular, this is useful in connecting as the instance administrator, which in TimesTen is always an external user.</p>
<p>Externally identified users can be used for direct mode or for client/server connections to a database on the local host, but not for client/server connections to a database on a remote host.</p>
<p>Adapting an earlier example:</p>
<pre dir="ltr">OCILogon2(envhp, errhp, &amp;svchp,
         (text *)&#34;[myadmin]&#34;, (ub4)strlen(&#34;[myadmin]&#34;),
         (text *)&#34;&#34;, (ub4)strlen(&#34;&#34;), 
         (text *)&#34;my_tnsname&#34;, (ub4)strlen((char*)&#34;my_tnsname&#34;), OCI_DEFAULT)); 
</pre>
<p>This functionality uses OCI proxy syntax. You can refer to the discussion of client access through a proxy in <a class="olink LNOCI13341" href="../LNOCI/oci02bas.htm#LNOCI13341"><span class="italic">Oracle Call Interface Programmer&#39;s Guide</span></a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABBJCFG"></a>
<div id="TTCDV208" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">OCI er<a id="sthref187"></a><a id="sthref188"></a>ror reporting</h3>
<p>Errors under TimesTen OCI applications return Oracle Database error codes. TimesTen attempts to report the same error code as Oracle Database would under similar conditions. The error messages may come from either the TimesTen catalog or the Oracle Database catalog. Some error messages may indicate the accompanying TimesTen error code if appropriate.</p>
<p>Fatal errors are those that make the database inaccessible until after error recovery. When a fatal error occurs, all database connections are required to disconnect in order to avoid out-of-memory conditions. No further operations may complete. Shared memory from the old TimesTen instance is not freed until all active connections at the time of the error have disconnected.</p>
<p>Fatal errors in OCI are indicated by the Oracle Database error code <code dir="ltr">ORA-03135</code> or <code dir="ltr">ORA-00600</code>. Error handling for these errors should be different from standard error handling. In particular, the application error-handling code should have a disconnect from the database.</p>
</div>
<!-- class="sect2" -->
<a id="BABBAGFG"></a>
<div id="TTCDV490" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Sig<a id="sthref189"></a><a id="sthref190"></a><a id="sthref191"></a><a id="sthref192"></a>nal handling and diagnostic framework considerations</h3>
<p>The OCI diagnostic framework installs signal handlers that may impact any signal handling that you use in your application. You can disable OCI signal handling by setting <code dir="ltr">DIAG_SIGHANDLER_ENABLED=FALSE</code> in the <code dir="ltr">sqlnet.ora</code> file. Refer to <a class="olink LNOCI1020" href="../LNOCI/oci10new.htm#LNOCI1020">&#34;Fault Diagnosability in OCI&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> for information.</p>
</div>
<!-- class="sect2" -->
<a id="BABGEGBJ"></a>
<div id="TTCDV209" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">OCI de<a id="sthref193"></a>mo programs</h3>
<p>TimesTen ships OCI demo programs. They are in the <code dir="ltr">quickstart/sample_code/oci</code> directory. The README file in the directory explains how to compile and run the demos.</p>
<p>Refer to the Quick Start welcome page at <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/quickstart.html</code> for information.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIGBEE"></a>
<div id="TTCDV210" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Use of additional features with TimesTen OCI</h2>
<p>This section covers the following topics for developers using TimesTen OCI:</p>
<ul>
<li>
<p><a href="#BABGIIAG">TimesTen deferred prepare</a></p>
</li>
<li>
<p><a href="#BABBIHAG">Parameter binding features in TimesTen OCI</a></p>
</li>
<li>
<p><a href="#BABBFFAA">TimesTen Cache with TimesTen OCI</a></p>
</li>
<li>
<p><a href="#BABIIJDH">LOBs in TimesTen OCI</a></p>
</li>
<li>
<p><a href="#BABEHDGF">Use of PL/SQL in OCI to call a TimesTen built-in procedure</a></p>
</li>
</ul>
<a id="BABGIIAG"></a>
<div id="TTCDV211" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">TimesTen defer<a id="sthref194"></a><a id="sthref195"></a>red prepare</h3>
<p>In OCI, a prepare call is expected to be a lightweight operation performed on the client. To allow TimesTen to be consistent with this expectation, and to avoid unwanted round trips between client and server, the TimesTen client library implementation of <code dir="ltr">SQLPrepare</code> performs what is referred to as a <span class="italic">deferred prepare</span>, where the request is not sent to the server until required. See <a href="writing_app.htm#BABJJIGJ">&#34;TimesTen deferred prepare&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BABBIHAG"></a>
<div id="TTCDV520" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Parameter binding features in TimesTen OCI</h3>
<p>This section discusses features relating to binding parameters into SQL or PL/SQL from an OCI application:</p>
<ul>
<li>
<p><a href="#BABGFCEC">Duplicate parameter bindings in TimesTen OCI</a></p>
</li>
<li>
<p><a href="#BABGGIFF">Associative array bindings in TimesTen OCI</a></p>
</li>
</ul>
<a id="BABGFCEC"></a>
<div id="TTCDV215" class="sect3">
<h4 class="sect3">Du<a id="sthref196"></a><a id="sthref197"></a><a id="sthref198"></a>plicate parameter bindings in TimesTen OCI</h4>
<p><a href="writing_app.htm#BABFEDJH">&#34;Binding duplicate parameters in SQL statements&#34;</a> discusses the two supported modes for binding duplicate parameters in a SQL statement, either the Oracle mode or the traditional TimesTen mode. As in that section, consider the following query. Note that in TimesTen OCI, only the Oracle mode is supported.</p>
<pre dir="ltr">SELECT * FROM employees
  WHERE employee_id &lt; :a AND manager_id &gt; :a AND salary &lt; :b;
</pre>
<p>In OCI, as in the Oracle mode in general, t<a id="sthref199"></a>wo occurrences of parameter <code dir="ltr">a</code> are considered to be separate parameters. However, OCI allows both occurrences of <code dir="ltr">a</code> to be bound with a single call to <code dir="ltr">OCIBindByPos()</code>:</p>
<pre dir="ltr">OCIBindByPos(..., 1, ...); /* both occurrences of :a */
OCIBindByPos(..., 3, ...); /* occurrence of :b */
</pre>
<p>Alternatively, OCI also allows the two occurrences of <code dir="ltr">a</code> to be bound separately:</p>
<pre dir="ltr">OCIBindByPos(..., 1, ...); /* first occurrence of :a */
OCIBindByPos(..., 2, ...); /* second occurrence of :a */
OCIBindByPos(..., 3, ...); /* occurrence of :b */
</pre>
<p>Note that in both cases, parameter <code dir="ltr">b</code> is considered to be in position 3.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
OCI also allows parameters to be bound by name, rather than by position, using <code dir="ltr">OCIBindByName()</code>.</div>
</div>
<!-- class="sect3" -->
<a id="BABGGIFF"></a>
<div id="TTCDV521" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">As<a id="sthref200"></a><a id="sthref201"></a><a id="sthref202"></a>sociative array bindings in TimesTen OCI</h4>
<p>Associative arrays, formerly known as index-by tables or PL/SQL tables, are supported as <code dir="ltr">IN</code>, <code dir="ltr">OUT</code>, or <code dir="ltr">IN OUT</code> bind parameters in TimesTen PL/SQL, such as from an OCI application. This enables arrays of data to be passed efficiently between an application and the database.</p>
<p>An associative array is a set of key-value pairs. In TimesTen, for associative array binding (but not for use of associative arrays only within PL/SQL), the keys, or indexes, must be integers (<code dir="ltr">BINARY_INTEGER</code> or <code dir="ltr">PLS_INTEGER</code>). The values must be simple scalar values of the same data type. For example, there could be an array of department managers indexed by department numbers. Indexes are stored in sort order, not creation order.</p>
<p>You can declare an associative array type and then an associative array from PL/SQL as in the following example (note the <code dir="ltr">INDEX BY</code>):</p>
<pre dir="ltr">declare
   TYPE VARCHARARRTYP IS TABLE OF VARCHAR2(30) INDEX BY BINARY_INTEGER;
   x VARCHARARRTYP;
   ...
</pre>
<p>For Pro*C/C++, see <a href="pro_c.htm#CIHJEBJF">&#34;Associative array bindings in TimesTen Pro*C/C++&#34;</a>.</p>
<p>For related information, see <a class="olink TTPLS378" href="../TTPLS/dtypesfunc.htm#TTPLS378">&#34;Using associative arrays from applications&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database PL/SQL Developer&#39;s Guide</span>.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
Note the following restrictions in TimesTen:
<ul>
<li>
<p>The following types are not supported in binding associative arrays: LOBs, REF CURSORs, <code dir="ltr">TIMESTAMP</code>, <code dir="ltr">ROWID</code>.</p>
</li>
<li>
<p>Associative array binding is not allowed in passthrough statements.</p>
</li>
<li>
<p>General bulk binding of arrays is not supported in TimesTen OCI. Varrays and nested tables are not supported as bind parameters.</p>
</li>
</ul>
</div>
<p>TimesTen supports associative array binds in OCI by supporting the <code dir="ltr">maxarr_len</code> and <code dir="ltr">*curelep</code> parameters of the <code dir="ltr">OCIBindByName()</code> and <code dir="ltr">OCIBindByPos()</code> functions. These parameters are used to indicate that the binding is for an associative array.</p>
<p>The complete calling sequences for those functions are as follows:</p>
<pre dir="ltr">sword OCIBindByName ( OCIStmt *stmtp,
                      OCIBind **bindpp,
                      OCIError *errhp,
                      const OraText *placeholder,
                      sb4 placeh_len,
                      void *valuep,
                      sb4 value_sz,
                      ub2 dty,
                      void *indp,
                      ub2 *alenp,
                      ub2 *rcodep,
                      <span class="bold">ub4 maxarr_len,</span>
                      <span class="bold">ub4 *curelep,</span>
                      ub4 mode );

sword OCIBindByPos ( OCIStmt *stmtp,
                     OCIBind **bindpp,
                     OCIError *errhp,
                     ub4 position,
                     void *valuep,
                     sb4 value_sz,
                     ub2 dty,
                     void *indp,
                     ub2 *alenp,
                     ub2 *rcodep,
                     <span class="bold">ub4 maxarr_len,</span>
                     <span class="bold">ub4 *curelep,</span>
                     ub4 mode );
</pre>
<p>The <code dir="ltr">maxarr_len</code> and <code dir="ltr">*curelep</code> parameters are used as follows when you bind an associative array. (They should be set to 0 if you are not binding an associative array.)</p>
<ul>
<li>
<p><code dir="ltr">maxarr_len</code>: This is an input parameter indicating the maximum array length. This is the maximum number of elements that the associative array can accommodate.</p>
</li>
<li>
<p><code dir="ltr">*curelep</code>: This is an input/output parameter indicating the current array length. It is a pointer to the actual number of elements in the associative array before and after statement execution.</p>
</li>
</ul>
<p>For additional information about these functions, see <a class="olink LNOCI17140" href="../LNOCI/oci16rel003.htm#LNOCI17140">&#34;OCIBindByName()&#34;</a> and <a class="olink LNOCI17141" href="../LNOCI/oci16rel003.htm#LNOCI17141">&#34;OCIBindByPos()&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In TimesTen, the <code dir="ltr">OCIBindDynamic()</code> function and the <code dir="ltr">OCI_DATA_AT_EXEC</code> mode setting for <code dir="ltr">OCIBindByName()</code> and <code dir="ltr">OCIBindByPos()</code> are not supported. (In Oracle Database, <code dir="ltr">OCIBindDynamic()</code> can be used to register user-defined callback functions to provide or receive data in &#34;at exec&#34; mode to set up additional bind attributes at execution time.)</div>
<p>In <a href="#BABIDAHE">Example 3-1</a>, an OCI application binds an integer array and a character array to corresponding <code dir="ltr">OUT</code> associative arrays in a PL/SQL procedure.</p>
<div id="TTCDV522" class="example">
<p class="titleinexample"><a id="BABIDAHE"></a>Example 3-1 Binding to an associative array from OCI</p>
<p>Assume the following SQL setup.</p>
<pre dir="ltr">DROP TABLE FOO;
 
CREATE TABLE FOO (CNUM INTEGER,
                  CVC2 VARCHAR2(20));
 
INSERT INTO FOO VALUES ( null,
     &#39;VARCHAR  1&#39;);
INSERT INTO FOO VALUES (-102,
     null);
INSERT INTO FOO VALUES ( 103,
     &#39;VARCHAR  3&#39;);
INSERT INTO FOO VALUES (-104,
     &#39;VARCHAR  4&#39;);
INSERT INTO FOO VALUES ( 105,
     &#39;VARCHAR  5&#39;);
INSERT INTO FOO VALUES ( 106,
     &#39;VARCHAR  6&#39;);
INSERT INTO FOO VALUES ( 107,
     &#39;VARCHAR  7&#39;);
INSERT INTO FOO VALUES ( 108,
     &#39;VARCHAR  8&#39;);
 
COMMIT;
</pre>
<p>Assume the following PL/SQL package definition. This has the <code dir="ltr">INTEGER</code> associative array type <code dir="ltr">NUMARRTYP</code> and the <code dir="ltr">VARCHAR2</code> associative array type <code dir="ltr">VCHARRTYP</code>, used for output associative arrays <code dir="ltr">c1</code> and <code dir="ltr">c2</code>, respectively, in the definition of procedure <code dir="ltr">P1</code>.</p>
<pre dir="ltr">CREATE OR REPLACE PACKAGE PKG1 AS
  TYPE NUMARRTYP IS TABLE OF INTEGER INDEX BY BINARY_INTEGER;
  TYPE VCHARRTYP IS TABLE OF VARCHAR2(20) INDEX BY BINARY_INTEGER;
 
  PROCEDURE P1(c1 OUT NUMARRTYP,c2 OUT VCHARRTYP);
 
END PKG1;
/
 
CREATE OR REPLACE PACKAGE BODY PKG1 AS
 
  CURSOR CUR1 IS SELECT CNUM, CVC2 FROM FOO;
 
  PROCEDURE P1(c1 OUT NUMARRTYP,c2 OUT VCHARRTYP) IS
  BEGIN
    IF NOT CUR1%ISOPEN  THEN
      OPEN CUR1;
    END IF;
    FOR i IN 1..8 LOOP
      FETCH CUR1 INTO c1(i), c2(i);
      IF CUR1%NOTFOUND THEN
        CLOSE CUR1;
        EXIT;
      END IF;
    END LOOP;
  END P1;
 
END PKG1;
</pre>
<p>The following OCI program calls <code dir="ltr">PKG1.P1</code>, binds arrays to the <code dir="ltr">P1</code> output associative arrays, and prints the contents of those associative arrays. Note in particular the <code dir="ltr">OCIBindByName()</code> function calls to do the binding.</p>
<pre dir="ltr">static OCIEnv *envhp;
static OCIServer *srvhp;
static OCISvcCtx *svchp;
static OCIError *errhp;
static OCISession *authp;
static OCIStmt *stmthp;
static OCIBind *bndhp[MAXCOLS];
static OCIBind *dfnhp[MAXCOLS];
 
STATICF VOID outbnd_1()
{
  int   i;
  int   num[MAXROWS];
  char*   vch[MAXROWS][20];
 
  unsigned int    numcnt   = 5;
  unsigned int    vchcnt = 5;
 
  unsigned short    alen_num[MAXROWS];
  unsigned short    alen_vch[MAXROWS];
  unsigned short    rc_num[MAXROWS];
  unsigned short    rc_vch[MAXROWS];
 
  short    indp_num[MAXROWS];
  short    indp_vch[MAXROWS];
 
/* Assume the process is connected and srvhp, svchp, errhp, authp, and stmthp 
   are all allocated/initialized/etc. */
 
  char  *sqlstmt = (char *)&#34;BEGIN PKG1.P1(:c1, :c2); END; &#34;;
 
  for (i = 0; i &lt; MAXROWS; i++)
  {
    alen_num[i] = 0;
    alen_vch[i] = 0;
    rc_num[i] = 0;
    rc_vch[i] = 0;
    indp_num[i] = 0;
    indp_vch[i] = 0;
  }
 
  DISCARD printf(&#34;Running outbnd_1.\n&#34;);
  DISCARD printf(&#34;\n----&gt; %s\n&#34;, sqlstmt);
  checkerr(errhp, OCIStmtPrepare(stmthp, errhp, sqlstmt, 
           (unsigned int)strlen((char *)sqlstmt),
           (unsigned int) OCI_NTV_SYNTAX, (unsigned int) OCI_DEFAULT));
 
  bndhp[0] = 0;
  bndhp[1] = 0;
 
  checkerr(errhp, OCIBindByName(stmthp, &amp;bndhp[0], errhp,
                  (char *) &#34;:c1&#34;, (sb4) strlen((char *) &#34;:c1&#34;),
                  (dvoid *) &amp;num[0], (sb4) sizeof(num[0]), SQLT_INT,
                  (dvoid *) &amp;indp_num[0], (unsigned short *) &amp;alen_num[0],
                  (unsigned short *) &amp;rc_num[0],
                  (unsigned int) MAXROWS, (unsigned int *) &amp;numcnt, 
                  (unsigned int) OCI_DEFAULT));
 
  checkerr(errhp, OCIBindByName(stmthp, &amp;bndhp[1], errhp,
                  (char *) &#34;:c2&#34;, (sb4) strlen((char *) &#34;:c2&#34;),
                  (dvoid *) vch[0], (sb4) sizeof(vch[0]), SQLT_CHR,
                  (dvoid *) &amp;indp_vch[0], (unsigned short *) &amp;alen_vch[0],
                  (unsigned short *) &amp;rc_vch[0],
                  (unsigned int) MAXROWS, (unsigned int *) &amp;vchcnt, 
                  (unsigned int) OCI_DEFAULT));
 
  DISCARD printf(&#34;\nTo execute the PL/SQL statement.\n&#34;);
 
  checkerr(errhp, OCIStmtExecute(svchp, stmthp, errhp, (unsigned int) 1, 
                  (unsigned int) 0, (const OCISnapshot*) 0,
                  (OCISnapshot*) 0,  (unsigned int) OCI_DEFAULT));
 
  DISCARD printf(&#34;\nHere are the results:\n\n&#34;);
 
  DISCARD printf(&#34;Column 1, INTEGER: \n&#34;);
  for (i = 0; i &lt; numcnt; i++)
  {
    if (indp_num[i] == -1)
      DISCARD printf(&#34;-NULL- &#34;);
    else
      DISCARD printf(&#34;%5d, &#34;, num[i]);
    DISCARD printf(&#34;ind = %d,  len = %d, rc = %d\n&#34;,
                             indp_num[i], alen_num[i], rc_num[i]);
  }
 
  DISCARD printf(&#34;\nColumn 2, VARCHAR2(20): \n&#34;);
  for (i = 0; i &lt; vchcnt; i++)
  {
    if (indp_vch[i] == -1)
      DISCARD printf(&#34;-NULL-      &#34;);
    else
      DISCARD printf(&#34;%.*s, &#34;, alen_vch[i], vch[i]);
    DISCARD printf(&#34;ind = %d,  len = %d, rc = %d\n&#34;,
                             indp_vch[i], alen_vch[i], rc_vch[i]);
  }
 
  DISCARD printf(&#34;\nDone\n&#34;);
  return;
}
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">alen_*</code> arrays are arrays of lengths; the <code dir="ltr">rc_*</code> arrays are arrays of return codes; the <code dir="ltr">indp_*</code> arrays are arrays of indicators.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABBFFAA"></a>
<div id="TTCDV212" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">TimesTen Cache with TimesTen OCI</h3>
<p>This section discusses TimesTen OCI features related using the TimesTen Cache:</p>
<ul>
<li>
<p><a href="#BABICEAA">Specifying the Oracle Database password in OCI for TimesTen Cache</a></p>
</li>
<li>
<p><a href="#BABHHEDJ">Determining the number of cache groups affected by an action</a></p>
</li>
</ul>
<a id="BABICEAA"></a>
<div id="TTCDV213" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Spe<a id="sthref203"></a><a id="sthref204"></a>cifying the Oracle Database password in OCI for TimesTen Cache</h4>
<p>To use TimesTen Cache, there must be a cache user in the TimesTen database with the same name as an Oracle Database user who can select from and update the cached Oracle Database tables. This Oracle Database user, for example, can be the cache administration user or a schema user. The password of the TimesTen cache user can be different from the password of the Oracle Database user with the same name. See <a class="olink TTCAC167" href="../TTCAC/prereqs.htm#TTCAC167">&#34;Setting Up a Caching Infrastructure&#34;</a> in <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span> for details.</p>
<p>For use of OCI with the TimesTen Cache, TimesTen allows you to pass the Oracle Database user&#39;s password through OCI by appending it to the password field in an <code dir="ltr">OCILogon()</code> or <code dir="ltr">OCILogon2()</code> call when you log in to TimesTen. Use the attribute <code dir="ltr">OraclePWD</code> in the connect string, such as in the following example:</p>
<pre dir="ltr">text *cacheuser = (text *)&#34;cacheuser1&#34;;
text *cachepwds = (text *)&#34;ttpwd;OraclePWD=orclpwd&#34;;
text *ttdbname = (text *)&#34;tt_tnsname&#34;;
....
OCILogon2(envhp, errhp, &amp;svchp,
       (text *)cacheuser, (ub4)strlen(cacheuser),
       (text *)cachepwds, (ub4)strlen(cachepwds),
       (text *)ttdbname, (ub4)strlen(ttdbname), OCI_DEFAULT)); 
</pre>
<p>You must always specify <code dir="ltr">OraclePWD</code>, even if the Oracle Database user&#39;s password is the same as the TimesTen user&#39;s password.</p>
<p>Note the following for the example:</p>
<ul>
<li>
<p>The name of the TimesTen cache user, as well as the name of the Oracle Database user who can access the cached Oracle Database tables, is <code dir="ltr">cacheuser1</code>.</p>
</li>
<li>
<p>The password of the TimesTen cache user is <code dir="ltr">ttpwd</code>.</p>
</li>
<li>
<p>The password of the Oracle Database user is <code dir="ltr">orclpwd</code>.</p>
</li>
<li>
<p>The TNS name of the TimesTen database being connected to is <code dir="ltr">tt_tnsname</code>.</p>
</li>
</ul>
<p>The Oracle database is specified through the TimesTen <code dir="ltr">OracleNetServiceName</code> general connection attribute in the <code dir="ltr">sys.odbc.ini</code> or user <code dir="ltr">odbc.ini</code> file.</p>
<p>Alternatively, instead of using a TNS name, you could use easy connect syntax or the <code dir="ltr">TWO_TASK</code> or <code dir="ltr">LOCAL</code> environment variable, as discussed in preceding sections.</p>
</div>
<!-- class="sect3" -->
<a id="BABHHEDJ"></a>
<div id="TTCDV214" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">De<a id="sthref205"></a>termining the number of cache groups affected by an action</h4>
<p>In TimesTen OCI, following the execution of a <code dir="ltr">FLUSH CACHE GROUP</code>, <code dir="ltr">LOAD CACHE GROUP</code>, <code dir="ltr">REFRESH CACHE GROUP</code>, or <code dir="ltr">UNLOAD CACHE GROUP</code> statement, the OCI Function <code dir="ltr">OCIAttrGet()</code> with the <code dir="ltr">OCI_ATTR_ROW_COUNT</code> argument returns the number of cache instances that were flushed, loaded, refreshed, or unloaded.</p>
<p>For related information, see <a class="olink TTCAC290" href="../TTCAC/operations.htm#TTCAC290">&#34;Determining the number of cache instances affected by an operation&#34;</a> in the <span class="italic">Oracle TimesTen Application-Tier Database Cache User&#39;s Guide</span>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABIIJDH"></a>
<div id="TTCDV523" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">L<a id="sthref206"></a>OBs in TimesTen OCI</h3>
<p>TimesTen supports LOBs (large objects). This includes CLOBs (character LOBs), NCLOBs (national character LOBs), and BLOBs (binary LOBs).</p>
<p>See <a href="writing_app.htm#BABDBEGH">&#34;Working with LOBs&#34;</a>. That section is ODBC-oriented but also provides some general overview of LOBs, differences between TimesTen and Oracle Database LOBs, and LOB programming interfaces.</p>
<p>This section focuses on LOB locators, temporary LOBs, and OCI LOB APIs and features.</p>
<p>See <a class="olink TTSQL481" href="../TTSQL/types.htm#TTSQL481">&#34;LOB data types&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database SQL Reference</span> for additional information about LOBs in TimesTen.</p>
<p>For complete information about LOBs and how to use them in OCI, refer to <a class="olink LNOCI070" href="../LNOCI/oci07lob.htm#LNOCI070">&#34;LOB and BFILE Operations&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span>, keeping in mind that TimesTen does not support BFILEs, SecureFiles, array reads and writes for LOBs, or callback functions for LOBs.</p>
<p>The following topics are covered here for OCI:</p>
<ul>
<li>
<p><a href="#BABHACGA">LOB locators in OCI</a></p>
</li>
<li>
<p><a href="#BABDFHFA">Temporary LOBs in OCI</a></p>
</li>
<li>
<p><a href="#BABBHJHD">Differences between TimesTen LOBs and Oracle Database LOBs in OCI</a></p>
</li>
<li>
<p><a href="#BABFAIEI">Using the LOB simple data interface in OCI</a></p>
</li>
<li>
<p><a href="#BABJJGDJ">Using the LOB locator interface in OCI</a></p>
</li>
<li>
<p><a href="#BABBCBJI">OCI client-side buffering</a></p>
</li>
<li>
<p><a href="#BABCBGIF">LOB prefetching in OCI</a></p>
</li>
<li>
<p><a href="#BABFGIHB">Passthrough LOBs in OCI</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The LOB piecewise data interface is not applicable to OCI applications in TimesTen. (You can, however, manipulate LOB data in pieces through features of the LOB locator interface.)</div>
<a id="BABHACGA"></a>
<div id="TTCDV551" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">LOB locators in OCI</h4>
<p>OCI provides the LOB locator interface, where a LOB consists of a LOB locator and a LOB value. The locator acts as a handle to the value. When an application selects a LOB from the database, it receives a locator. When it updates the LOB, it does so through the locator. And when it passes a LOB as a parameter, it is passing the locator, not the actual value. See <a href="#BABJJGDJ">&#34;Using the LOB locator interface in OCI&#34;</a>. (Note that in OCI it is also possible to use the simple data interface, which does not involve a locator. See <a href="#BABFAIEI">&#34;Using the LOB simple data interface in OCI&#34;</a>.)</p>
<p>To update a LOB, your transaction must have an exclusive lock on the row containing the LOB. You can accomplish this by selecting the LOB with a <code dir="ltr">SELECT ... FOR UPDATE</code> statement. This results in a writable locator. With a simple <code dir="ltr">SELECT</code> statement, the locator is read-only. Read-only and writable locators behave as follows:</p>
<ul>
<li>
<p>A read-only locator is <span class="italic">read consistent</span>, meaning that throughout its lifetime, it sees only the contents of the LOB as of the time it was selected. Note that this would include any uncommitted updates made to the LOB within the same transaction prior to when the LOB was selected.</p>
</li>
<li>
<p>A writable locator is updated with the latest data from the database each time a write is made through the locator. So each write is made to the most current data of the LOB, including updates that have been made through other locators.</p>
</li>
</ul>
<p>The following example details behavior for two writable locators for the same LOB:</p>
<ol>
<li>
<p>The LOB column contains &#34;XY&#34;.</p>
</li>
<li>
<p>Select locator <code dir="ltr">L1</code> for update.</p>
</li>
<li>
<p>Select locator <code dir="ltr">L2</code> for update.</p>
</li>
<li>
<p>Write &#34;Z&#34; through <code dir="ltr">L1</code> at offset 1.</p>
</li>
<li>
<p>Read through locator <code dir="ltr">L1</code>. This would return &#34;ZY&#34;.</p>
</li>
<li>
<p>Read through locator <code dir="ltr">L2</code>. This would return &#34;XY&#34;, because <code dir="ltr">L2</code> remains read-consistent until it is used for a write.</p>
</li>
<li>
<p>Write &#34;W&#34; through <code dir="ltr">L2</code> at offset 2.</p>
</li>
<li>
<p>Read through locator <code dir="ltr">L2</code>. This would return &#34;ZW&#34;. Prior to the write in the preceding step, the locator was updated with the latest data (&#34;ZY&#34;).</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABDFHFA"></a>
<div id="TTCDV552" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Temporary LOBs in OCI</h4>
<p>A temporary LOB exists only within an application, and in TimesTen OCI has a lifetime no longer than the transaction in which it was created (as is the case with the lifetime of any LOB locator in TimesTen). You can think of a temporary LOB as a scratch area for LOB data.</p>
<p>An OCI application can instantiate a temporary LOB explicitly, for use within the application, through the appropriate API. (See <a href="#BABJJGDJ">&#34;Using the LOB locator interface in OCI&#34;</a>.) A temporary LOB may also be created implicitly by TimesTen. For example, if a <code dir="ltr">SELECT</code> statement selects a LOB concatenated with an additional string of characters, TimesTen implicitly creates a temporary LOB to contain the concatenated data and an OCI application would receive a locator for the temporary LOB.</p>
<p>Temporary LOBs are stored in the TimesTen temporary data region.</p>
</div>
<!-- class="sect3" -->
<a id="BABBHJHD"></a>
<div id="TTCDV553" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Differences between TimesTen LOBs and Oracle Database LOBs in OCI</h4>
<p>A key difference between the TimesTen LOB implementation and the Oracle Database implementation is that in TimesTen, LOB locators do not remain valid past the end of the transaction. All LOB locators are invalidated after a commit or rollback, whether explicit or implicit. This includes after any DDL statement if TimesTen <code dir="ltr">DDLCommitBehavior</code> is set to 0 (the default), for Oracle Database behavior.</p>
<p>Also see <a href="writing_app.htm#BABDGHFJ">&#34;Differences between TimesTen LOBs and Oracle Database LOBs&#34;</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BABFAIEI"></a>
<div id="TTCDV524" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Using the LOB simple data interface in OCI</h4>
<p>The simple data interface enables applications to access LOB data by binding and defining, as with other scalar data types. The application can use a LOB type that is compatible with the corresponding variable type. Use <code dir="ltr">OCIStmtPrepare()</code> to prepare a statement. For binding parameters, use <code dir="ltr">OCIBindByName()</code> or <code dir="ltr">OCIBindByPos()</code>. For defining result columns, use <code dir="ltr">OCIDefineByPos()</code>.</p>
<p>For example, an OCI application can bind a CLOB parameter by calling <code dir="ltr">OCIBindByName()</code> with a data type of <code dir="ltr">SQLT_CHR</code>. Use <code dir="ltr">OCIStmtExecute()</code> to execute the statement. For an NCLOB parameter, use data type <code dir="ltr">SQLT_CHR</code> and set the OCI <code dir="ltr">csform</code> attribute (<code dir="ltr">OCI_ATTR_CHARSET_FORM</code>) to <code dir="ltr">SQLCS_NCHAR</code>. For a BLOB parameter, you can use data type <code dir="ltr">SQLT_BIN</code>.</p>
<p>Use of the simple data interface through OCI is shown in the following examples.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The simple data interface, through <code dir="ltr">OCIBindByName()</code>, <code dir="ltr">OCIBindByPos()</code>, or <code dir="ltr">OCIDefineByPos()</code>, limits bind sizes to 64 KB.</div>
<div id="TTCDV525" class="example">
<p class="titleinexample"><a id="BABCJDEG"></a>Example 3-2 Example table and variables</p>
<p>For examples that follow, assume the table and variables shown here.</p>
<pre dir="ltr">person(ssn number, resume clob)
 
OCIEnv *envhp;
OCIServer *srvhp;
OCISvcCtx *svchp;
OCIError *errhp;
OCISession *authp;
OCIStmt *stmthp;
 
/* Bind Handles */
OCIBind *bndp1 = (OCIBind *) NULL; 
OCIBind *bndp2 = (OCIBind *) NULL;
 
/* Define Handles */
OCIDefine *defnp1 = (OCIDefine *) NULL;
OCIDefine *defnp2 = (OCIDefine *) NULL;
 
#define DATA_SIZE 50
#define PIECE_SIZE 10
#define NPIECE (DATA_SIZE/PIECE_SIZE)
 
char col2[DATA_SIZE];
char col2Res[DATA_SIZE];
ub2 col2len = DATA_SIZE;
sb4 ssn = 123456;
...

text *ins_stmt = (text *)&#34;INSERT INTO PERSON VALUES (:1, :2)&#34;;
text *sel_stmt = (text *)&#34;SELECT * FROM PERSON_1 ORDER BY SSN&#34;;
...
</pre></div>
<!-- class="example" -->
<div id="TTCDV526" class="example">
<p class="titleinexample"><a id="sthref207"></a>Example 3-3 Insert LOB data using simple data interface</p>
<p>This example executes an <code dir="ltr">INSERT</code> statement using the simple data interface in OCI. It uses the table and variables from the preceding <a href="#BABCJDEG">Example 3-2</a>, including the <code dir="ltr">INSERT</code> statement defined through the variable <code dir="ltr">ins_stmt</code>.</p>
<pre dir="ltr">for (i=0;i&lt;DATA_SIZE;i++) 
  col2[i] = &#39;A&#39;;
 
/* prepare SQL insert statement */
OCIStmtPrepare (stmthp, errhp, ins_stmt, strlen(ins_stmt), OCI_NTV_SYNTAX,
    OCI_DEFAULT);
 
/* bind parameters 1 and 2 using OCI_DEFAULT (not data-at-exec) */
OCIBindByPos (stmthp, &amp;bndp1, errhp, 1, (dvoid *) &amp;ssn, sizeof(ssn), 
 SQLT_INT, 0, 0, 0, 0, 0, OCI_DEFAULT);
OCIBindByPos (stmthp, &amp;bndp2, errhp, 2, (dvoid *) col2, col2len,
                           SQLT_CHR, 0, 0, 0, 0, 0, OCI_DEFAULT);
 
/* execute insert statement */
OCIStmtExecute (svchp, stmthp, errhp, 1, 0, 0, 0, OCI_DEFAULT);
</pre></div>
<!-- class="example" -->
<div id="TTCDV527" class="example">
<p class="titleinexample"><a id="sthref208"></a>Example 3-4 Select LOB data using simple data interface</p>
<p>This example executes a <code dir="ltr">SELECT</code> statement using the simple data interface in OCI. It uses the table and variables from the earlier <a href="#BABCJDEG">Example 3-2</a>, including the <code dir="ltr">SELECT</code> statement defined through the variable <code dir="ltr">sel_stmt</code>.</p>
<pre dir="ltr">/* prepare select statement */
OCIStmtPrepare (stmthp, errhp, sel_stmt, strlen(sel_stmt), OCI_NTV_SYNTAX,
    OCI_DEFAULT);
 
/* define result columns 1 and 2 using OCI_DEFAULT (not data-at-exec) */
OCIDefineByPos (stmthp, &amp;defnp1, errhp, 1, (dvoid*) &amp;ssn, sizeof(ssn), 
                              SQLT_INT, 0, 0, 0, OCI_DEFAULT);
OCIDefineByPos (stmthp, &amp;defnp2, errhp, 2, (dvoid *) col2Res, sizeof(col2), 
                              SQLT_CHR, 0, &amp;col2len, 0, OCI_DEFAULT);
 
/* execute select statement */
OCIStmtExecute (svchp, stmthp, errhp, (ub4)1, (ub4)0, (OCISnapshot *) NULL, 
                              (OCISnapshot *) NULL, OCI_DEFAULT));
 
/* col2Res should now have a DATA_SIZE sized string of &#39;A&#39;s. */
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BABJJGDJ"></a>
<div id="TTCDV528" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Using the LOB locator interface in OCI</h4>
<p>You can use the OCI LOB locator interface to work with either a LOB from the database or a temporary LOB, either piece-by-piece or in whole chunks.</p>
<p>In order to use the LOB locator interface, the application must have a valid LOB locator. For a temporary LOB, this may be obtained explicitly through an <code dir="ltr">OCILobCreateTemporary()</code> call, or implicitly through a SQL statement that results in creation of a temporary LOB (such as <code dir="ltr">SELECT c1 || c2 FROM myclob</code>). For a persistent LOB, use a SQL statement to obtain the LOB locator from the database. (There are examples later in this section.)</p>
<p>Bind types are <code dir="ltr">SQLT_CLOB</code> for CLOBs and <code dir="ltr">SQLT_BLOB</code> for BLOBs. For NCLOBs, use <code dir="ltr">SQLT_CLOB</code> and also set the OCI <code dir="ltr">csform</code> attribute (<code dir="ltr">OCI_ATTR_CHARSET_FORM</code>) to <code dir="ltr">SQLCS_NCHAR</code>.</p>
<p>Refer to <a class="olink LNOCI162" href="../LNOCI/oci17msc002.htm#LNOCI162">&#34;LOB Functions&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> for detailed information and additional examples for OCI LOB functions, noting that TimesTen does not support features specifically intended for BFILEs, SecureFiles, array reads and writes for LOBs, or callback functions for LOBs.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
LOB manipulations through APIs that use LOB locators result in usage of TimesTen temporary space. Any significant number of such manipulations may necessitate a size increase for the TimesTen temporary data region. See <a class="olink TTREF154" href="../TTREF/attribute.htm#TTREF154">&#34;TempSize&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</div>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>If an invalid LOB locator is assigned to another LOB locator using <code dir="ltr">OCILobLocatorAssign()</code>, the target of the assignment is also freed and marked as invalid.</p>
</li>
<li>
<p><code dir="ltr">OCILobLocatorAssign()</code> can be used on a temporary LOB, but <code dir="ltr">OCILobAssign()</code> cannot.</p>
</li>
</ul>
</div>
<a id="BABCHGII"></a>
<div id="TTCDV529" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Create a temporary LOB in OCI</h5>
<p>An OCI application can create a temporary LOB by using the <code dir="ltr">OCILobCreateTemporary()</code> function, which has an input/output parameter for the LOB locator, after first calling <code dir="ltr">OCIDescriptorAlloc()</code> to allocate the locator. When you are finished, use <code dir="ltr">OCIDescriptorFree()</code> to free the allocation for the locator and use <code dir="ltr">OCILobFreeTemporary()</code> to free the temporary LOB itself.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
In TimesTen, creation of a temporary LOB results in creation of a database transaction if one is not already in progress. To avoid error conditions, you must execute a commit or rollback to close the transaction.</div>
<p>In TimesTen, any duration supported by Oracle Database (<code dir="ltr">OCI_DURATION_SESSION</code>, <code dir="ltr">OCI_DURATION_TRANSACTION</code>, or <code dir="ltr">OCI_DURATION_CALL</code>) is permissible in the <code dir="ltr">OCILobCreateTemporary()</code> call; however, in TimesTen the lifetime of the temporary LOB itself is no longer than the lifetime of the transaction.</p>
<p>Note that the lifetime of a temporary LOB can be shorter than the lifetime of the transaction in the following scenarios:</p>
<ul>
<li>
<p>If <code dir="ltr">OCI_DURATION_CALL</code> is specified</p>
</li>
<li>
<p>If the application calls <code dir="ltr">OCILobFreeTemporary()</code> on the locator before the end of the transaction</p>
</li>
<li>
<p>If the application calls <code dir="ltr">OCIDurationBegin()</code> to start a user-specified duration for the temporary LOB, then calls <code dir="ltr">OCIDurationEnd()</code> before the end of the transaction</p>
</li>
</ul>
<p>Following are examples of some of the OCI LOB functions mentioned above. For details about the use of temporary LOBs and a complete example, see <a class="olink LNOCI16522" href="../LNOCI/oci07lob.htm#LNOCI16522">&#34;Temporary LOB Support&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span>.</p>
<pre dir="ltr">if (OCIDescriptorAlloc((void*)envhp, (void **)&amp;tblob,(ub4)OCI_DTYPE_LOB,
    (size_t)0, (void**)0))
{
   printf(&#34;failed in OCIDescriptor Alloc in select_and_createtemp \n&#34;);
   return OCI_ERROR;
}
 
...
 
if (OCILobCreateTemporary(svchp, errhp, tblob, (ub2)0, SQLCS_IMPLICIT,
    OCI_TEMP_BLOB, OCI_ATTR_NOCACHE, OCI_DURATION_TRANSACTION))
{
   (void) printf(&#34;FAILED: OCILobCreateTemporary() \n&#34;);
   return OCI_ERROR;
}
 
...
 
if(OCILobFreeTemporary(svchp,errhp,tblob))
{
   printf (&#34;FAILED: OCILobFreeTemporary() call \n&#34;);
   return OCI_ERROR;
}
</pre></div>
<!-- class="sect4" -->
<a id="BABBHGGE"></a>
<div id="TTCDV530" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Access the locator of a persistent LOB in OCI</h5>
<p>An application typically accesses a LOB from the database by using a SQL statement to obtain or access a LOB locator, then passing the locator to an appropriate API function.</p>
<p>A LOB that has been created using the <code dir="ltr">EMPTY_CLOB()</code> or <code dir="ltr">EMPTY_BLOB()</code> SQL function has a valid locator, which an application can then use to insert data into the LOB by selecting it.</p>
<p>Assume the following table definition:</p>
<pre dir="ltr">CREATE TABLE clobtable (x NUMBER, y DATE, z VARCHAR2(30), lobcol CLOB);
</pre>
<ol>
<li>
<p>Prepare an <code dir="ltr">INSERT</code> statement. For example:</p>
<pre dir="ltr">INSERT INTO clobtable ( x, y, z, lobcol )
   VALUES ( 81, sysdate, &#39;giants&#39;, EMPTY_CLOB() )
   RETURNING lobcol INTO :a;
</pre>
<p>Or, to initialize the LOB with some data:</p>
<pre dir="ltr">INSERT INTO clobtable ( x, y, z, lobcol )
   VALUES ( 81, sysdate, &#39;giants&#39;, &#39;The Giants finally won a World Series&#39; )
   RETURNING lobcol INTO :a;
</pre></li>
<li>
<p>Bind the LOB locator to <code dir="ltr">:a</code> as shown.</p>
</li>
<li>
<p>Execute the statement. After execution, the locator refers to the newly created LOB.</p>
</li>
</ol>
<p>Then the application can use the LOB locator interface to read or write LOB data through the locator.</p>
<p>Alternatively, an application can use a <code dir="ltr">SELECT</code> statement to access the locator of an existing LOB.</p>
<div id="TTCDV531" class="example">
<p class="titleinexample"><a id="BABFFBBA"></a>Example 3-5 Select LOB locator using LOB locator interface</p>
<p>This example uses the following table:</p>
<pre dir="ltr">person(ssn number, resume clob)
</pre>
<p>It selects the locator for the LOB column in the <code dir="ltr">PERSON</code> table.</p>
<pre dir="ltr">text *ins_stmt = (text *)&#34;INSERT INTO PERSON VALUES (:1, :2)&#34;;
text *sel_stmt = (text *)&#34;SELECT * FROM PERSON WHERE SSN = 123456&#34;;
text *ins_empty = (text *)&#34;INSERT INTO PERSON VALUES ( 1, EMPTY_CLOB())&#34;;
 
OCILobLocator *lobp;
 
ub4   amtp = DATA_SIZE;
ub4   remainder = DATA_SIZE;
ub4    nbytes = PIECE_SIZE;
 
/* Allocate lob locator */
OCIDescriptorAlloc (envhp, &amp;lobp, OCI_DTYPE_LOB, 0, 0);
 
/* Insert an empty locator */
OCIStmtPrepare (stmhp, errhp, ins_empty, strlen(ins_empty), OCI_NTV_SYNTAX, 
                               OCI_DEFAULT);
OCIStmtExecute (svchp, stmhp, errhp, 1, 0, 0, 0, OCI_DEFAULT);
 
/* Now select the locator */
 
OCIStmtPrepare (stmhp, errhp, sel_stmt, strlen(sel_stmt), OCI_NTV_SYNTAX,
                OCI_DEFAULT);
 
/* Call define for the lob column */
OCIDefineByPos (stmthp, &amp;defnp2, errhp, 1, &amp;lobp, 0 , SQLT_CLOB, 0, 0, 0,
                OCI_DEFAULT);
 
OCIStmtExecute (svchp, stmhp, errhp, 1, 0, 0, 0, OCI_DEFAULT);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" -->
<a id="BABEJDFC"></a>
<div id="TTCDV532" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Read and write LOB data using the OCI LOB locator interface</h5>
<p>An OCI application can use <code dir="ltr">OCILobOpen()</code> and <code dir="ltr">OCILobClose()</code> to open and close a LOB. If you do not explicitly open and close a LOB, it is opened implicitly before a read or write and closed implicitly at the end of the transaction.</p>
<p>An application can use <code dir="ltr">OCILobRead()</code> or <code dir="ltr">OCILobRead2()</code> to read LOB data, <code dir="ltr">OCILobWrite()</code> or <code dir="ltr">OCILobWrite2()</code> to write LOB data, <code dir="ltr">OCILobWriteAppend()</code> or <code dir="ltr">OCILobWriteAppend2()</code> to append LOB data, <code dir="ltr">OCILobErase()</code> or <code dir="ltr">OCILobErase2()</code> to erase LOB data, and various other OCI functions to perform a variety of other actions.</p>
<p>For example, consider a CLOB with the content &#34;Hello World!&#34; You can overwrite and append data by calling <code dir="ltr">OCILobWrite()</code> with an offset of 7 to write &#34;I am a new string&#34;. This would result in CLOB content being updated to &#34;Hello I am a new string&#34;. Or, to erase data from the original &#34;Hello World!&#34; CLOB, you can call <code dir="ltr">OCILobErase()</code> with an offset of 7 and an amount (number of characters) of 5, for example, to update the CLOB to &#34;Hello&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!&#34; (six spaces).</p>
<p>All the OCI LOB locator interface functions are covered in detail in <a class="olink LNOCI162" href="../LNOCI/oci17msc002.htm#LNOCI162">&#34;LOB Functions&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span>.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>Oracle Database emphasizes use of the &#34;2&#34; versions of the OCI read and write functions for LOBs (the non-&#34;2&#34; versions are deprecated as of the Oracle Database 11.2 release); however, currently in TimesTen there is no technical advantage in using <code dir="ltr">OCILobRead2()</code>, <code dir="ltr">OCILobWrite2()</code>, and <code dir="ltr">OCILobWriteAppend2()</code>, which are intended for LOBs larger than what TimesTen supports.</p>
</li>
<li>
<p>In using any of the LOB read or write functions, be aware that the callback function parameter must be set to <code dir="ltr">NULL</code> or 0, because TimesTen does not support callback functions for LOB manipulation.</p>
</li>
<li>
<p>Because TimesTen does not support binding arrays of LOBs, the <code dir="ltr">OCILobArrayRead()</code> and <code dir="ltr">OCILobArrayWrite()</code> functions are not supported.</p>
</li>
</ul>
</div>
<div id="TTCDV533" class="example">
<p class="titleinexample"><a id="sthref209"></a>Example 3-6 Write and read LOB data using LOB locator interface</p>
<p>This example shows how to write LOB data using the OCI LOB function <code dir="ltr">OCILobWrite()</code> and how to read data using <code dir="ltr">OCILobRead()</code>. It uses the table and variables from the preceding <a href="#BABFFBBA">Example 3-5</a>.</p>
<pre dir="ltr">for (i=0;i&lt;DATA_SIZE;i++) 
  col2[i] = &#39;A&#39;;
 
/*************** Writing to the LOB *****************/
 
amt = DATA_SIZE;
offset = 1;
 
/* Write contents of col2 buffer into the LOB in a single chunk via locator lobp */
OCILobWrite (svchp, errhp, lobp, &amp;amt, offset, col2, DATA_SIZE, OCI_ONE_PIECE,
                        0, 0, 0, SQLCS_IMPLICIT);
 
/*************** Reading from the LOB *****************/
 
/* Get the length of the LOB */
OCILobGetLength (svchp, errhp, lobp, &amp;len);
amt = len;
 
/* Read the LOB data in col2Res in a single chunk */
OCILobRead (svchp, errhp, lobp, &amp;amt, offset, col2Res, DATA_SIZE, 0, 0, 0,  
                        SQLCS_IMPLICIT);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABBCBJI"></a>
<div id="TTCDV534" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">OCI client-side buffering</h4>
<p>OCI provides a facility for client-side buffering on a per-LOB basis. It is enabled for a LOB by a call to <code dir="ltr">OCILobEnableBuffering()</code> and disabled by a call to <code dir="ltr">OCILobDisableBuffering()</code>.</p>
<p>Enabling buffering for a LOB locator creates a 512 KB write buffer. This size is not configurable. Data written by the application through the LOB locator is buffered. When possible, the client library satisfies LOB read requests from the buffer as well. An application can flush the buffer by a call to <code dir="ltr">OCILobFlushBuffer()</code>. Note that buffers are not flushed automatically when they become full, and an attempt to write to the LOB through the locator when the buffer is full results in an error.</p>
<p>The following restrictions apply when you use client-side buffering:</p>
<ul>
<li>
<p>Buffering is incompatible with the following functions: <code dir="ltr">OCILobAppend()</code>, <code dir="ltr">OCILobCopy()</code>, <code dir="ltr">OCILobCopy2()</code>, <code dir="ltr">OCILobErase()</code>, <code dir="ltr">OCILobGetLength()</code>, <code dir="ltr">OCILobTrim()</code>, <code dir="ltr">OCILobWriteAppend()</code>, and <code dir="ltr">OCILobWriteAppend2()</code>.</p>
</li>
<li>
<p>An application can use <code dir="ltr">OCILobWrite()</code> or <code dir="ltr">OCILobWrite2()</code> only to append to the end of a LOB.</p>
</li>
<li>
<p>LOB data becomes visible to SQL and PL/SQL (server-side) operations only after the application has flushed the buffer.</p>
</li>
<li>
<p>When a LOB is selected while there are unflushed client-side writes in its buffer, the unflushed data is not included in the select.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABCBGIF"></a>
<div id="TTCDV535" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">LOB prefetching in OCI</h4>
<p>To reduce round trips to the server in client/server connections, LOB data can be prefetched from the database and cached on the client side during fetch operations. LOB prefetching in OCI has the same functionality in TimesTen as in Oracle Database.</p>
<p>Configure LOB prefetching through the following OCI attributes. Note that size refers to bytes for BLOBs and to characters for CLOBs or NCLOBs.</p>
<ul>
<li>
<p><code dir="ltr">OCI_ATTR_DEFAULT_LOBPREFETCH_SIZE</code>: Use this to enable prefetching and specify the default prefetch size. A value of 0 (default) disables prefetching.</p>
</li>
<li>
<p><code dir="ltr">OCI_ATTR_LOBPREFETCH_SIZE</code>: Set this attribute for a column define handle to specify the prefetch size for the particular LOB column.</p>
</li>
<li>
<p><code dir="ltr">OCI_ATTR_LOBPREFETCH_LENGTH</code>: This attribute can be set <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code> (default) to prefetch LOB metadata such as LOB length and chunk size.</p>
</li>
</ul>
<p>The <code dir="ltr">OCI_ATTR_DEFAULT_LOBPREFETCH_SIZE</code> and <code dir="ltr">OCI_ATTR_LOBPREFETCH_LENGTH</code> settings are independent of each other. You can use LOB data prefetching independently of LOB metadata prefetching.</p>
<p>Refer to <a class="olink LNOCI07100" href="../LNOCI/oci07lob.htm#LNOCI07100">&#34;Prefetching of LOB Data, Length, and Chunk Size&#34;</a> in <span class="italic">Oracle Call Interface Programmer&#39;s Guide</span> for more information and an example.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The above attribute settings are ignored for TimesTen direct connections.</div>
</div>
<!-- class="sect3" -->
<a id="BABFGIHB"></a>
<div id="TTCDV536" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Passthrough LOBs in OCI</h4>
<p>Passthrough LOBs (LOBs in Oracle Database accessed through TimesTen) are exposed as TimesTen LOBs and are supported by TimesTen in much the same way that any TimesTen LOB is supported, but note the following:</p>
<ul>
<li>
<p>You cannot use <code dir="ltr">OCILobCreateTemporary()</code> to create a passthrough LOB.</p>
</li>
<li>
<p>In addition to copying from one TimesTen LOB to another TimesTen LOB&mdash;such as through <code dir="ltr">OCILobCopy()</code>, <code dir="ltr">OCILobCopy2()</code>, or <code dir="ltr">OCILobAppend()</code>&mdash;you can copy from a TimesTen LOB to a passthrough LOB, from a passthrough LOB to a TimesTen LOB, or from one passthrough LOB to another passthrough LOB. Any of these copies the LOB value to the target destination. For example, copying a passthrough LOB to a TimesTen LOB copies the LOB value into the TimesTen database.</p>
<p>An attempt to copy a passthrough LOB to a TimesTen LOB when the passthrough LOB is larger than the TimesTen LOB size limit results in an error.</p>
</li>
<li>
<p>TimesTen LOB size limitations do not apply to storage of LOBs in the Oracle database through passthrough. If a passthrough LOB is copied to a TimesTen LOB, the size limit applies to the copy.</p>
</li>
<li>
<p>As with TimesTen local LOBs, a locator for a passthrough LOB does not remain valid past the end of the transaction.</p>
</li>
</ul>
<div id="TTCDV561" class="example">
<p class="titleinexample"><a id="sthref210"></a>Example 3-7 Copying between TimesTen LOBs and passthrough LOBs</p>
<p>The examples here highlight key functionality in copying between TimesTen LOBs and passthrough LOBs on Oracle Database. After the table and data setup, the first example uses <code dir="ltr">OCILobAppend()</code> to copy LOB data from Oracle Database to TimesTen and the second example uses <code dir="ltr">OCILobCopy()</code> to copy LOB data from TimesTen to Oracle Database. (Either call could be used in either case.) Then, for contrast, the third example uses an <code dir="ltr">UPDATE</code> statement to copy LOB data from Oracle Database to TimesTen and the fourth example uses an <code dir="ltr">INSERT</code> statement to copy LOB data from TimesTen to Oracle Database.</p>
<pre dir="ltr">   /* Table and data setup */
  call ttoptsetflag(&#39;&#39;passthrough&#39;&#39;, 3)&#39;;
  DROP TABLE oratab&#39;;
  CREATE TABLE oratab (i INT, c CLOB)&#39;;
  INSERT INTO oratab VALUES (1, &#39;&#39;Copy from Oracle to TimesTen&#39;&#39;)&#39;;
  INSERT INTO oratab VALUES (2, EMPTY_CLOB())&#39;;
  COMMIT;
 
  call ttoptsetflag(&#39;&#39;passthrough&#39;&#39;, 0)&#39;;
  DROP TABLE tttab&#39;;
  CREATE TABLE tttab (i INT, c CLOB)&#39;;
  INSERT INTO tttab VALUES (1, &#39;&#39;Copy from TimesTen to Oracle&#39;&#39;)&#39;;
  INSERT INTO tttab VALUES (2, EMPTY_CLOB())&#39;;
  INSERT INTO tttab VALUES (3, NULL)&#39;;
  COMMIT;
  /* Table and data setup end */
 
  /*
   * Below are four OCI pseudocode examples, for copying LOBs between
   * TimesTen and Oracle using OCI API and INSERT/UPDATE statements.
   */
 
  /* Init OCI Env */
 
  /* Set the passthrough level to 1 */
  OCIStmtPrepare (..., &#34;call ttoptsetflag(&#39;&#39;passthrough&#39;&#39;, 1)&#39;&#34;, ...);
  OCIStmtExecute (...);
 
  /*
   * 1. Copy a passthrough LOB on Oracle to a TimesTen LOB
   */
 
  /* Select a passthrough locator on Oracle */
  OCIStmtPrepare (..., &#34;SELECT c FROM oratab WHERE i = 1&#34;, ...);
  OCIDefineByPos (..., (dvoid *)&amp;ora_loc_1, 0 , SQLT_CLOB, ...);
  OCIStmtExecute (...);
 
  /* Select a locator on TimesTen for update */
  OCIStmtPrepare (..., &#34;SELECT c FROM tttab WHERE i = 2 FOR UPDATE&#34;, ...);
  OCIDefineByPos (..., (dvoid *)&amp;tt_loc_2, 0 , SQLT_CLOB, ...);
  OCIStmtExecute (...);
 
  /* Copy a passthrough LOB on Oracle to a TimesTen LOB */
  OCILobAppend(..., tt_loc_2, ora_loc_1);
 
  /*
   * 2. Copy a TimesTen LOB to a passthrough LOB on Oracle
   */
 
  /* Select a passthrough locator on Oracle for update */
  OCIStmtPrepare (..., &#34;SELECT c FROM oratab WHERE i = 2 FOR UPDATE&#34;, ...);
  OCIDefineByPos (..., (dvoid *)&amp;ora_loc_2, 0 , SQLT_CLOB, ...);
  OCIStmtExecute (...);
 
  /* Select a locator on TimesTen */
  OCIStmtPrepare (..., &#34;SELECT c FROM tttab WHERE i = 1&#34;, ...);
  OCIDefineByPos (..., (dvoid *)&amp;tt_loc_1, 0 , SQLT_CLOB, ...);
  OCIStmtExecute (...);
 
  /* Copy a passthrough LOB on Oracle to a TimesTen LOB */
  OCILobCopy(..., ora_loc_2, tt_loc_1, 28, 1, 1);
 
  /*
   * 3. UPDATE a TimesTen LOB with a passthrough LOB on Oracle
   */
 
  /* A passthrough LOB, (selected above in case 1) is bound to an UPDATE statement
   * on TimesTen table */
  OCIStmtPrepare (..., &#34;UPDATE tttab SET c = :1 WHERE i = 3&#34;, ...);
  OCIBindByPos (..., (dvoid *)&amp;ora_loc_1, 0 , SQLT_CLOB, ...);
  OCIStmtExecute (...);
 
  /*
   * 4. INSERT a passthrough table on Oracle with a TimesTen LOB
   */
 
  /* A TimesTen LOB, (selected above in case 2) is bound to an INSERT statement
   * on a passthough table on Oracle */
  OCIStmtPrepare (..., &#34;INSERT INTO oratab VALUES (3, :1)&#34;, ...);
  OCIBindByPos (..., (dvoid *)&amp;tt_loc_1, 0 , SQLT_CLOB, ...);
  OCIStmtExecute (...);
 
  OCITransCommit (...);
 
  /* Cleanup OCI Env */
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABEHDGF"></a>
<div id="TTCDV574" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Use of PL/SQL in OCI to call a TimesTen built-in procedure</h3>
<p>As noted earlier in this chapter, TimesTen built-in procedures that return result sets are not supported directly through OCI. You can, however, use PL/SQL for this purpose, as shown in <a href="#BABIGBID">Example 3-8</a>.</p>
<div id="TTCDV575" class="example">
<p class="titleinexample"><a id="BABIGBID"></a>Example 3-8 Using PL/SQL in OCI to call a TimesTen built-in procedure</p>
<pre dir="ltr">plsql_resultset_example(OCIEnv *envhp, OCIError *errhp, OCISvcCtx *svchp) 
{ 
  OCIStmt   *stmhp; 
  OCIBind   *bindp; 
 
  sb4        passThruValue = -1; 
  char       v_name[255]; 
  text      *stmt_text; 
  
  /* prepare the plsql statement */ 
  stmt_text = (text *) 
    &#34;declare v_name varchar2(255); &#34; 
    &#34;begin execute immediate &#34; 
       &#34;&#39;call ttOptGetFlag(&#39;&#39;passthrough&#39;&#39;)&#39; into v_name, :rc1; &#34; 
    &#34;end;&#34;; 
  OCIStmtPrepare2(svchp, &amp;stmhp, errhp, (text *)stmt_text, 
                  (ub4)strlen((char *)stmt_text), 
                  (text *)0, (ub4)0, 
                  (ub4)OCI_NTV_SYNTAX, (ub4)OCI_DEFAULT); 
 
  /* bind parameter 1 (:v_name) to varchar2 out-parameter */ 
  OCIBindByPos(stmhp, &amp;bindp, errhp, 1, 
               (dvoid*)&amp;v_name, sizeof(v_name), SQLT_CHR, 
               (dvoid*)0, (ub2*)0, (ub2*)0, (ub4)0, (ub4*)0, 
               OCI_DEFAULT); 
 
  /* execute the plsql statement */ 
  OCIStmtExecute(svchp, stmhp, errhp, (ub4)1, (ub4)0, 
                 (OCISnapshot *)0, (OCISnapshot *)0, (ub4)OCI_DEFAULT); 
 
  /* convert the passthrough string value to an integer */ 
  passThruValue = (sb4)atoi((const char *)v_name); 
  printf(&#34;Value of the passthrough flag is %d\n&#34;, passThruValue); 
 
  /* drop the statement handle */ 
  OCIStmtRelease(stmhp, errhp, (text *)0, (ub4)0, (ub4)OCI_DEFAULT); 
}
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIABDBDF"></a>
<div id="TTCDV216" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">TimesTen OCI support reference</h2>
<p>This is a reference section for TimesTen support of OCI features, covering the following areas:</p>
<ul>
<li>
<p><a href="#BABCJJIF">Supported OCI calls</a></p>
</li>
<li>
<p><a href="#BABBEFEI">Supported handles and attributes</a></p>
</li>
<li>
<p><a href="#BABJHBHI">Supported descriptors</a></p>
</li>
<li>
<p><a href="#BABIEIEI">Supported SQL data types</a></p>
</li>
<li>
<p><a href="#BABGFJHG">Supported parameter attributes</a></p>
</li>
</ul>
<a id="BABCJJIF"></a>
<div id="TTCDV554" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Supported OCI calls</h3>
<p><a href="#BGBCHJJG">Table 3-2</a> li<a id="sthref211"></a>sts TimesTen support for OCI calls that are documented for Oracle Database release 11.2.0.2.</p>
<p>Some groups of calls are represented with an asterisk in the name. For example, the calls related to Advanced Queuing, which TimesTen does not support, have names that start with <code dir="ltr">OCIAQ</code> and are represented in the table as <code dir="ltr">OCIAQ*()</code>. OCI date functions, which TimesTen does support, are designated by <code dir="ltr">OCIDate*()</code>.</p>
<div id="TTCDV217" class="tblhruleformal">
<p class="titleintable"><a id="sthref212"></a><a id="BGBCHJJG"></a>Table 3-2 TimesTen OCI supported calls</p>
<table class="cellalignment4366" title="TimesTen OCI supported calls" summary="OCI call support" dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t18">OCI call</th>
<th class="cellalignment4367" id="r1c2-t18">Supported</th>
<th class="cellalignment4367" id="r1c3-t18">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIAQ*()</code></p>
</td>
<td class="cellalignment4368" headers="r2c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r2c1-t18 r1c3-t18">
<p>TimesTen does not support Advanced Queuing.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIAnyData*()</code></p>
</td>
<td class="cellalignment4368" headers="r3c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r3c1-t18 r1c3-t18">
<p>TimesTen does not support Any Data.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIAppCtxClearAll()</code></p>
</td>
<td class="cellalignment4368" headers="r4c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r4c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIAppCtxSet()</code></p>
</td>
<td class="cellalignment4368" headers="r5c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r5c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIArrayDescriptorAlloc()</code></p>
</td>
<td class="cellalignment4368" headers="r6c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r6c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIArrayDescriptorFree()</code></p>
</td>
<td class="cellalignment4368" headers="r7c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r7c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIAttrGet()</code></p>
</td>
<td class="cellalignment4368" headers="r8c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r8c1-t18 r1c3-t18">
<p>TimesTen support includes special usage with cache groups. See <a href="#BABBFFAA">&#34;TimesTen Cache with TimesTen OCI&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIAttrSet()</code></p>
</td>
<td class="cellalignment4368" headers="r9c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r9c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBinXml*()</code></p>
</td>
<td class="cellalignment4368" headers="r10c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r10c1-t18 r1c3-t18">
<p>TimesTen does not support XML DB.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBindArrayOfStruct()</code></p>
</td>
<td class="cellalignment4368" headers="r11c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r11c1-t18 r1c3-t18">
<p>This is supported for SQL statements but not PL/SQL.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBindByName()</code></p>
</td>
<td class="cellalignment4368" headers="r12c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r12c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_DATA_AT_EXEC</code></p>
</li>
<li>
<p><code dir="ltr">OCI_IOV</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBindByPos()</code></p>
</td>
<td class="cellalignment4368" headers="r13c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r13c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_DATA_AT_EXEC</code></p>
</li>
<li>
<p><code dir="ltr">OCI_IOV</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r14c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBindDynamic()</code></p>
</td>
<td class="cellalignment4368" headers="r14c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r14c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r15c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBindObject()</code></p>
</td>
<td class="cellalignment4368" headers="r15c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r15c1-t18 r1c3-t18">
<p>TimesTen does not support user-defined objects.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r16c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIBreak()</code></p>
</td>
<td class="cellalignment4368" headers="r16c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r16c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r17c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCICache*()</code></p>
</td>
<td class="cellalignment4368" headers="r17c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r17c1-t18 r1c3-t18">
<p>TimesTen does not support user-defined objects.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r18c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCICharSetConversionIsReplacementUsed()</code></p>
</td>
<td class="cellalignment4368" headers="r18c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r18c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r19c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCICharSetToUnicode()</code></p>
</td>
<td class="cellalignment4368" headers="r19c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r19c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r20c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIClientVersion()</code></p>
</td>
<td class="cellalignment4368" headers="r20c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r20c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r21c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIColl*()</code></p>
</td>
<td class="cellalignment4368" headers="r21c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r21c1-t18 r1c3-t18">
<p>TimesTen does not support collections.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r22c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIConnectionPoolCreate()</code></p>
</td>
<td class="cellalignment4368" headers="r22c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r22c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r23c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIConnectionPoolDestroy()</code></p>
</td>
<td class="cellalignment4368" headers="r23c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r23c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r24c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIContext*()</code></p>
</td>
<td class="cellalignment4368" headers="r24c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r24c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r25c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDBShutdown()</code></p>
</td>
<td class="cellalignment4368" headers="r25c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r25c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r26c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDBStartup()</code></p>
</td>
<td class="cellalignment4368" headers="r26c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r26c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r27c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDate*()</code></p>
</td>
<td class="cellalignment4368" headers="r27c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r27c1-t18 r1c3-t18">
<p>See <a href="#BGBJCFHB">Table 3-4</a> for information about descriptor support.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r28c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDefineArrayOfStruct()</code></p>
</td>
<td class="cellalignment4368" headers="r28c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r28c1-t18 r1c3-t18">
<p>This is supported for SQL statements but not PL/SQL.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r29c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDefineByPos()</code></p>
</td>
<td class="cellalignment4368" headers="r29c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r29c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_DATA_AT_EXEC</code></p>
</li>
<li>
<p><code dir="ltr">OCI_IOV</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r30c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDefineDynamic()</code></p>
</td>
<td class="cellalignment4368" headers="r30c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r30c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r31c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDefineObject()</code></p>
</td>
<td class="cellalignment4368" headers="r31c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r31c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r32c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDescribeAny()</code></p>
</td>
<td class="cellalignment4368" headers="r32c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r32c1-t18 r1c3-t18">
<p>PL/SQL objects are not supported.</p>
<p>Describing objects is supported only by name.</p>
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">objptr_typ</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_OTYPE_REF</code></p>
</li>
<li>
<p><code dir="ltr">OCI_OTYPE_PTR</code></p>
</li>
</ul>
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">objtyp</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_PTYPE_PKG</code></p>
</li>
<li>
<p><code dir="ltr">OCI_PTYPE_FUNC</code></p>
</li>
<li>
<p><code dir="ltr">OCI_PTYPE_PROC</code></p>
</li>
<li>
<p><code dir="ltr">OCI_PTYPE_SYN</code></p>
</li>
<li>
<p><code dir="ltr">OCI_PTYPE_TYPE</code></p>
</li>
</ul>
<p>When you use the setting <code dir="ltr">OCI_PTYPE_DATABASE</code> for the <code dir="ltr"><span class="codeinlineitalic">objtyp</span></code> parameter, use the predetermined name <code dir="ltr">$TT_DB_NAME$</code> as the database name for the <code dir="ltr"><span class="codeinlineitalic">*objptr</span></code> parameter.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r33c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDescriptorAlloc()</code></p>
</td>
<td class="cellalignment4368" headers="r33c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r33c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r34c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDescriptorFree()</code></p>
</td>
<td class="cellalignment4368" headers="r34c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r34c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r35c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDirPath*()</code></p>
</td>
<td class="cellalignment4368" headers="r35c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r35c1-t18 r1c3-t18">
<p>TimesTen does not support Direct Path Loading.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r36c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDurationBegin()</code></p>
</td>
<td class="cellalignment4368" headers="r36c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r36c1-t18 r1c3-t18">
<p>Supported for LOBs. Regardless of the duration setting, the duration cannot exceed the lifetime of the transaction.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r37c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDurationEnd()</code></p>
</td>
<td class="cellalignment4368" headers="r37c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r37c1-t18 r1c3-t18">
<p>Supported for LOBs. Regardless of the duration setting, the duration cannot exceed the lifetime of the transaction.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r38c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIDuration*()</code></p>
</td>
<td class="cellalignment4368" headers="r38c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r38c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r39c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIEnvCreate()</code></p>
</td>
<td class="cellalignment4368" headers="r39c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r39c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_EVENTS</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NEW_LENGTH_SEMANTICS</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NCHAR_LITERAL_REPLACE_ON</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NCHAR_LITERAL_REPLACE_OFF</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NO_MUTEX</code> (Instead use <code dir="ltr">OCI_ENV_NO_MUTEX</code>.)</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r40c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIEnvInit()</code></p>
</td>
<td class="cellalignment4368" headers="r40c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r40c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_NO_MUTEX</code></p>
</li>
<li>
<p><code dir="ltr">OCI_ENV_NO_MUTEX</code></p>
</li>
</ul>
<p><span class="bold">Note</span>: Use <code dir="ltr">OCIEnvCreate()</code> instead of <code dir="ltr">OCIEnvInit()</code>. <code dir="ltr">OCIEnvInit()</code> is supported for backward compatibility.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r41c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIEnvNlsCreate()</code></p>
</td>
<td class="cellalignment4368" headers="r41c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r41c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_EVENTS</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NCHAR_LITERAL_REPLACE_ON</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NCHAR_LITERAL_REPLACE_OFF</code></p>
</li>
<li>
<p><code dir="ltr">OCI_NO_MUTEX</code> (Instead use <code dir="ltr">OCI_ENV_NO_MUTEX</code>.)</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r42c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIErrorGet()</code></p>
</td>
<td class="cellalignment4368" headers="r42c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r42c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r43c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIExtProc*()</code></p>
</td>
<td class="cellalignment4368" headers="r43c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r43c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r44c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIExtract*()</code></p>
</td>
<td class="cellalignment4368" headers="r44c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r44c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r45c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIFile*()</code></p>
</td>
<td class="cellalignment4368" headers="r45c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r45c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r46c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIFormatInit()</code></p>
</td>
<td class="cellalignment4368" headers="r46c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r46c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r47c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIFormatString()</code></p>
</td>
<td class="cellalignment4368" headers="r47c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r47c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r48c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIFormatTerm()</code></p>
</td>
<td class="cellalignment4368" headers="r48c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r48c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r49c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIHandleAlloc()</code></p>
</td>
<td class="cellalignment4368" headers="r49c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r49c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r50c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIHandleFree()</code></p>
</td>
<td class="cellalignment4368" headers="r50c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r50c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r51c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIInitialize()</code></p>
</td>
<td class="cellalignment4368" headers="r51c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r51c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_NO_MUTEX</code></p>
</li>
<li>
<p><code dir="ltr">OCI_ENV_NO_MUTEX</code></p>
</li>
</ul>
<p><span class="bold">Note</span>: Use <code dir="ltr">OCIEnvCreate()</code> instead of <code dir="ltr">OCIInitialize()</code>. <code dir="ltr">OCIInitialize()</code> is supported for backward compatibility.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r52c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIInterval*()</code></p>
</td>
<td class="cellalignment4368" headers="r52c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r52c1-t18 r1c3-t18">
<p>See <a href="#BGBJCFHB">Table 3-4</a> for information about descriptor support.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r53c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIIter*()</code></p>
</td>
<td class="cellalignment4368" headers="r53c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r53c1-t18 r1c3-t18">
<p>TimesTen does not support collections.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r54c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCILdaToSvcCtx()</code></p>
</td>
<td class="cellalignment4368" headers="r54c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r54c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r55c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCILob*()</code></p>
</td>
<td class="cellalignment4368" headers="r55c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r55c1-t18 r1c3-t18">
<p>TimesTen supports <code dir="ltr">OCILob*()</code> functions other than the following:</p>
<ul>
<li>
<p>Functions specifically intended for array reads and writes</p>
</li>
<li>
<p>Functions specifically intended for BFILEs</p>
</li>
<li>
<p>Functions specifically intended for SecureFiles</p>
</li>
</ul>
<p><span class="bold">Notes:</span></p>
<ul>
<li>
<p>Regardless of the duration setting in an <code dir="ltr">OCILobCreateTemporary()</code> call, the LOB lifetime is no longer than the lifetime of the transaction.</p>
</li>
<li>
<p>See <a href="#BABEJDFC">&#34;Read and write LOB data using the OCI LOB locator interface&#34;</a> regarding <code dir="ltr">OCILobRead2()</code>, <code dir="ltr">OCILobWrite2()</code>, and <code dir="ltr">OCILobWriteAppend2()</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r56c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCILogoff()</code></p>
</td>
<td class="cellalignment4368" headers="r56c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r56c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r57c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCILogon()</code></p>
</td>
<td class="cellalignment4368" headers="r57c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r57c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r58c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCILogon2()</code></p>
</td>
<td class="cellalignment4368" headers="r58c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r58c1-t18 r1c3-t18">
<p><code dir="ltr">OCI_DEFAULT</code> is the only supported value for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r59c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIMemory*()</code></p>
</td>
<td class="cellalignment4368" headers="r59c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r59c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r60c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIMessage*()</code></p>
</td>
<td class="cellalignment4368" headers="r60c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r60c1-t18 r1c3-t18">
<p>TimesTen does not support Data Cartridge.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r61c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIMultiByte*()</code></p>
</td>
<td class="cellalignment4368" headers="r61c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r61c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r62c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCINls*()</code></p>
</td>
<td class="cellalignment4368" headers="r62c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r62c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r63c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCINumber*()</code></p>
</td>
<td class="cellalignment4368" headers="r63c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r63c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r64c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIObject*()</code></p>
</td>
<td class="cellalignment4368" headers="r64c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r64c1-t18 r1c3-t18">
<p>TimesTen does not support user-defined objects.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r65c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIParamGet()</code></p>
</td>
<td class="cellalignment4368" headers="r65c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r65c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r66c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIParamSet()</code></p>
</td>
<td class="cellalignment4368" headers="r66c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r66c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r67c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIPasswordChange()</code></p>
</td>
<td class="cellalignment4368" headers="r67c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r67c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r68c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIPing()</code></p>
</td>
<td class="cellalignment4368" headers="r68c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r68c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r69c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIRaw*()</code></p>
</td>
<td class="cellalignment4368" headers="r69c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r69c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r70c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIRef*()</code></p>
</td>
<td class="cellalignment4368" headers="r70c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r70c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r71c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIReset()</code></p>
</td>
<td class="cellalignment4368" headers="r71c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r71c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r72c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIRowidToChar()</code></p>
</td>
<td class="cellalignment4368" headers="r72c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r72c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r73c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIServer*()</code></p>
</td>
<td class="cellalignment4368" headers="r73c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r73c1-t18 r1c3-t18">
<p><code dir="ltr">OCI_DEFAULT</code> is the only supported value for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter of <code dir="ltr">OCIServerAttach</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r74c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISessionBegin()</code></p>
</td>
<td class="cellalignment4368" headers="r74c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r74c1-t18 r1c3-t18">
<p><code dir="ltr">OCI_CRED_RDBMS</code> is the only supported value for the <code dir="ltr"><span class="codeinlineitalic">credt</span></code> parameter.</p>
<p><code dir="ltr">OCI_DEFAULT</code> is the only supported value for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r75c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISessionEnd()</code></p>
</td>
<td class="cellalignment4368" headers="r75c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r75c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r76c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISessionGet()</code></p>
</td>
<td class="cellalignment4368" headers="r76c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r76c1-t18 r1c3-t18">
<p>TimesTen does not support switching between sessions.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r77c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISessionPoolCreate()</code></p>
</td>
<td class="cellalignment4368" headers="r77c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r77c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r78c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISessionPoolDestroy()</code></p>
</td>
<td class="cellalignment4368" headers="r78c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r78c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r79c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISessionRelease()</code></p>
</td>
<td class="cellalignment4368" headers="r79c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r79c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r80c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISharedLibInit()</code></p>
</td>
<td class="cellalignment4368" headers="r80c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r80c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r81c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtExecute()</code></p>
</td>
<td class="cellalignment4368" headers="r81c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r81c1-t18 r1c3-t18">
<p>The following are unsupported values for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">OCI_BATCH_ERRORS</code></p>
</li>
<li>
<p><code dir="ltr">OCI_STMT_SCROLLABLE_READONLY</code></p>
</li>
</ul>
<p><span class="bold">Note</span>: Using <code dir="ltr">OCI_COMMIT_ON_SUCCESS</code> results in improved performance, avoiding an extra round trip to the server to commit a transaction.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r82c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtFetch()</code></p>
</td>
<td class="cellalignment4368" headers="r82c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r82c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r83c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtFetch2()</code></p>
</td>
<td class="cellalignment4368" headers="r83c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r83c1-t18 r1c3-t18">
<p>The only supported values for the <code dir="ltr"><span class="codeinlineitalic">orientation</span></code> parameter are <code dir="ltr">OCI_DEFAULT</code> and <code dir="ltr">OCI_FETCH_NEXT</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r84c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtGetBindInfo()</code></p>
</td>
<td class="cellalignment4368" headers="r84c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r84c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r85c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtGetPieceInfo()</code></p>
</td>
<td class="cellalignment4368" headers="r85c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r85c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r86c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtPrepare()</code></p>
</td>
<td class="cellalignment4368" headers="r86c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r86c1-t18 r1c3-t18">
<p>The only supported value for the <code dir="ltr"><span class="codeinlineitalic">language</span></code> parameter is <code dir="ltr">OCI_NTV_SYNTAX</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r87c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtPrepare2()</code><a id="sthref213"></a><a id="sthref214"></a></p>
</td>
<td class="cellalignment4368" headers="r87c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r87c1-t18 r1c3-t18">
<p>The only supported value for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter is <code dir="ltr">OCI_DEFAULT</code>.</p>
<p>For statement caching, TimesTen supports the <code dir="ltr"><span class="codeinlineitalic">key</span></code> argument to tag a statement for future calls to <code dir="ltr">OCIStmtPrepare2()</code> or <code dir="ltr">OCIStmtRelease()</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r88c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtRelease()</code></p>
</td>
<td class="cellalignment4368" headers="r88c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r88c1-t18 r1c3-t18">
<p>The only supported value for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter is <code dir="ltr">OCI_DEFAULT</code>.</p>
<p>For statement caching, TimesTen supports the <code dir="ltr"><span class="codeinlineitalic">key</span></code> argument to tag a statement. This can be the key from <code dir="ltr">OCIStmtPrepare2()</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r89c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIStmtSetPieceInfo()</code></p>
</td>
<td class="cellalignment4368" headers="r89c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r89c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r90c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIString*()</code></p>
</td>
<td class="cellalignment4368" headers="r90c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r90c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r91c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISubscription*()</code></p>
</td>
<td class="cellalignment4368" headers="r91c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r91c1-t18 r1c3-t18">
<p>TimesTen does not support Advanced Queuing.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r92c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCISvcCtxToLda()</code></p>
</td>
<td class="cellalignment4368" headers="r92c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r92c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r93c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITable*()</code></p>
</td>
<td class="cellalignment4368" headers="r93c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r93c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r94c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITerminate()</code></p>
</td>
<td class="cellalignment4368" headers="r94c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r94c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r95c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIThread*()</code></p>
</td>
<td class="cellalignment4368" headers="r95c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r95c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r96c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransCommit()</code></p>
</td>
<td class="cellalignment4368" headers="r96c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r96c1-t18 r1c3-t18">
<p>The only supported value for the <code dir="ltr"><span class="codeinlineitalic">mode</span></code> parameter is <code dir="ltr">OCI_DEFAULT</code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r97c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransDetach()</code></p>
</td>
<td class="cellalignment4368" headers="r97c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r97c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r98c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransForget()</code></p>
</td>
<td class="cellalignment4368" headers="r98c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r98c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r99c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransMultiPrepare()</code></p>
</td>
<td class="cellalignment4368" headers="r99c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r99c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r100c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransPrepare()</code></p>
</td>
<td class="cellalignment4368" headers="r100c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r100c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r101c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransRollback()</code></p>
</td>
<td class="cellalignment4368" headers="r101c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r101c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r102c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCITransStart()</code></p>
</td>
<td class="cellalignment4368" headers="r102c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r102c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r103c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIType*()</code></p>
</td>
<td class="cellalignment4368" headers="r103c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r103c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r104c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIUnicodeToCharSet()</code></p>
</td>
<td class="cellalignment4368" headers="r104c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r104c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r105c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIUserCallbackGet()</code></p>
</td>
<td class="cellalignment4368" headers="r105c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r105c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r106c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIUserCallbackRegister()</code></p>
</td>
<td class="cellalignment4368" headers="r106c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r106c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r107c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIWideChar*()</code></p>
</td>
<td class="cellalignment4368" headers="r107c1-t18 r1c2-t18">
<p>Yes</p>
</td>
<td class="cellalignment4368" headers="r107c1-t18 r1c3-t18">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r108c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIXmlDbFreeXmlCtx()</code></p>
</td>
<td class="cellalignment4368" headers="r108c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r108c1-t18 r1c3-t18">
<p>TimesTen does not support XML DB.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r109c1-t18" headers="r1c1-t18">
<p><code dir="ltr">OCIXmlDbInitXmlCtx()</code></p>
</td>
<td class="cellalignment4368" headers="r109c1-t18 r1c2-t18">
<p>No</p>
</td>
<td class="cellalignment4368" headers="r109c1-t18 r1c3-t18">
<p>TimesTen does not support XML DB.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BABBEFEI"></a>
<div id="TTCDV555" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Supported handles and attributes</h3>
<p><a href="#BGBDEAAG">Table 3-3</a> lists the <a id="sthref215"></a>handles and attributes that TimesTen OCI supports.</p>
<div id="TTCDV218" class="tblhruleformal">
<p class="titleintable"><a id="sthref216"></a><a id="BGBDEAAG"></a>Table 3-3 TimesTen OCI supported handles and attributes</p>
<table class="cellalignment4366" title="TimesTen OCI supported handles and attributes" summary="supported handles" dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t19">Handle</th>
<th class="cellalignment4367" id="r1c2-t19">C object</th>
<th class="cellalignment4367" id="r1c3-t19">Supported attributes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t19" headers="r1c1-t19">
<p>Environment</p>
</td>
<td class="cellalignment4368" headers="r2c1-t19 r1c2-t19">
<p><code dir="ltr">OCIEnv</code></p>
</td>
<td class="cellalignment4368" headers="r2c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_ENV_CHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_ENV_NCHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_ENV_UTF16</code></p>
<p><code dir="ltr">OCI_ATTR_EVTCTX</code></p>
<p><code dir="ltr">OCI_ATTR_OBJECT</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t19" headers="r1c1-t19">
<p>Error</p>
</td>
<td class="cellalignment4368" headers="r3c1-t19 r1c2-t19">
<p><code dir="ltr">OCIError</code></p>
</td>
<td class="cellalignment4368" headers="r3c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_DML_ROW_OFFSET</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t19" headers="r1c1-t19">
<p>Service context</p>
</td>
<td class="cellalignment4368" headers="r4c1-t19 r1c2-t19">
<p><code dir="ltr">OCISvcCtx</code></p>
</td>
<td class="cellalignment4368" headers="r4c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_ENV</code></p>
<p><code dir="ltr">OCI_ATTR_IN_V8_MODE</code></p>
<p><code dir="ltr">OCI_ATTR_SERVER</code></p>
<p><code dir="ltr">OCI_ATTR_SESSION</code></p>
<p><code dir="ltr">OCI_ATTR_TRANS</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t19" headers="r1c1-t19">
<p>Statement</p>
</td>
<td class="cellalignment4368" headers="r5c1-t19 r1c2-t19">
<p><code dir="ltr">OCIStmt</code></p>
</td>
<td class="cellalignment4368" headers="r5c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_BIND_COUNT</code></p>
<p><code dir="ltr">OCI_ATTR_CURRENT_POSITION</code></p>
<p><code dir="ltr">OCI_ATTR_ENV</code></p>
<p><code dir="ltr">OCI_ATTR_FETCH_ROWID</code></p>
<p><code dir="ltr">OCI_ATTR_NUM_DML_ERRORS</code></p>
<p><code dir="ltr">OCI_ATTR_PARAM_COUNT</code></p>
<p><code dir="ltr">OCI_ATTR_PREFETCH_MEMORY</code></p>
<p><code dir="ltr">OCI_ATTR_PREFETCH_ROWS</code></p>
<p><code dir="ltr">OCI_ATTR_ROW_COUNT</code></p>
<p><code dir="ltr">OCI_ATTR_ROWID</code></p>
<p><code dir="ltr">OCI_ATTR_ROWS_FETCHED</code></p>
<p><code dir="ltr">OCI_ATTR_SQLFNCODE</code></p>
<p><code dir="ltr">OCI_ATTR_STATEMENT</code></p>
<p><code dir="ltr">OCI_ATTR_STMT_TYPE</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t19" headers="r1c1-t19">
<p>Bind</p>
</td>
<td class="cellalignment4368" headers="r6c1-t19 r1c2-t19">
<p><code dir="ltr">OCIBind</code></p>
</td>
<td class="cellalignment4368" headers="r6c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_CHARSET_FORM</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_MAXCHAR_SIZE</code></p>
<p><code dir="ltr">OCI_ATTR_MAXDATA_SIZE</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t19" headers="r1c1-t19">
<p>Define</p>
</td>
<td class="cellalignment4368" headers="r7c1-t19 r1c2-t19">
<p><code dir="ltr">OCIDefine</code></p>
</td>
<td class="cellalignment4368" headers="r7c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_CHARSET_FORM</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_MAXCHAR_SIZE</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t19" headers="r1c1-t19">
<p>Describe</p>
</td>
<td class="cellalignment4368" headers="r8c1-t19 r1c2-t19">
<p><code dir="ltr">OCIDescribe</code></p>
</td>
<td class="cellalignment4368" headers="r8c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_PARAM</code></p>
<p><code dir="ltr">OCI_ATTR_PARAM_COUNT</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t19" headers="r1c1-t19">
<p>Server</p>
</td>
<td class="cellalignment4368" headers="r9c1-t19 r1c2-t19">
<p><code dir="ltr">OCIServer</code></p>
</td>
<td class="cellalignment4368" headers="r9c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_ENV</code></p>
<p><code dir="ltr">OCI_ATTR_IN_V8_MODE</code></p>
<p><code dir="ltr">OCI_ATTR_SERVER_GROUP</code></p>
<p><code dir="ltr">OCI_ATTR_SERVER_STATUS</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t19" headers="r1c1-t19">
<p>User session</p>
</td>
<td class="cellalignment4368" headers="r10c1-t19 r1c2-t19">
<p><code dir="ltr">OCISession</code></p>
</td>
<td class="cellalignment4368" headers="r10c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_CLIENT_IDENTIFER</code></p>
<p><code dir="ltr">OCI_ATTR_CLIENT_INFO</code></p>
<p><code dir="ltr">OCI_ATTR_CURRENT_SCHEMA</code></p>
<p><code dir="ltr">OCI_ATTR_DRIVER_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_INITIAL_CLIENT_ROLES</code></p>
<p><code dir="ltr">OCI_ATTR_MODULE</code></p>
<p><code dir="ltr">OCI_ATTR_PROXY_CREDENTIALS</code></p>
<p><code dir="ltr">OCI_ATTR_USERNAME</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t19" headers="r1c1-t19">
<p>Authentication</p>
</td>
<td class="cellalignment4368" headers="r11c1-t19 r1c2-t19">
<p><code dir="ltr">OCIAuthInfo</code></p>
</td>
<td class="cellalignment4368" headers="r11c1-t19 r1c3-t19">
<p>Same as for user session handle</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t19" headers="r1c1-t19">
<p>Transaction</p>
</td>
<td class="cellalignment4368" headers="r12c1-t19 r1c2-t19">
<p><code dir="ltr">OCITrans</code></p>
</td>
<td class="cellalignment4368" headers="r12c1-t19 r1c3-t19">
<p><code dir="ltr">OCI_ATTR_TRANS_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_TRANS_TIMEOUT</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t19" headers="r1c1-t19">
<p>Thread</p>
</td>
<td class="cellalignment4368" headers="r13c1-t19 r1c2-t19">
<p><code dir="ltr">OCIThreadHandle</code></p>
</td>
<td class="cellalignment4368" headers="r13c1-t19 r1c3-t19">&nbsp;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BABJHBHI"></a>
<div id="TTCDV556" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Supported descriptors</h3>
<p><a href="#BGBJCFHB">Table 3-4</a> li<a id="sthref217"></a>sts the descriptors that TimesTen OCI supports.</p>
<div id="TTCDV219" class="tblhruleformal">
<p class="titleintable"><a id="sthref218"></a><a id="BGBJCFHB"></a>Table 3-4 TimesTen OCI supported descriptors</p>
<table class="cellalignment4366" title="TimesTen OCI supported descriptors" summary="supported descriptors" dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t20">Descriptor</th>
<th class="cellalignment4367" id="r1c2-t20">C object</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t20" headers="r1c1-t20">
<p>Parameter (read-only)</p>
</td>
<td class="cellalignment4368" headers="r2c1-t20 r1c2-t20">
<p><code dir="ltr">OCIParam</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ROWID</code></p>
</td>
<td class="cellalignment4368" headers="r3c1-t20 r1c2-t20">
<p><code dir="ltr">OCIRowid</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t20" headers="r1c1-t20">
<p><code dir="ltr">ANSI DATE</code></p>
</td>
<td class="cellalignment4368" headers="r4c1-t20 r1c2-t20">
<p><code dir="ltr">OCIDateTime</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t20" headers="r1c1-t20">
<p><code dir="ltr">TIMESTAMP</code></p>
</td>
<td class="cellalignment4368" headers="r5c1-t20 r1c2-t20">
<p><code dir="ltr">OCIDateTime</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t20" headers="r1c1-t20">
<p><code dir="ltr">TIMESTAMP WITH TIME ZONE</code></p>
</td>
<td class="cellalignment4368" headers="r6c1-t20 r1c2-t20">
<p><code dir="ltr">OCIDateTime</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t20" headers="r1c1-t20">
<p><code dir="ltr">TIMESTAMP WITH LOCAL TIME ZONE</code></p>
</td>
<td class="cellalignment4368" headers="r7c1-t20 r1c2-t20">
<p><code dir="ltr">OCIDateTime</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t20" headers="r1c1-t20">
<p><code dir="ltr">INTERVAL YEAR TO MONTH</code></p>
</td>
<td class="cellalignment4368" headers="r8c1-t20 r1c2-t20">
<p><code dir="ltr">OCIInterval</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t20" headers="r1c1-t20">
<p><code dir="ltr">INTERVAL DAY TO SECOND</code></p>
</td>
<td class="cellalignment4368" headers="r9c1-t20 r1c2-t20">
<p><code dir="ltr">OCIInterval</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t20" headers="r1c1-t20">
<p>User callback</p>
</td>
<td class="cellalignment4368" headers="r10c1-t20 r1c2-t20">
<p><code dir="ltr">OCIUcb</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BABIEIEI"></a>
<div id="TTCDV557" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Supported SQL data types</h3>
<p><a href="#BGBHEBAH">Table 3-5</a> lists the <a id="sthref219"></a>SQL data types that TimesTen OCI supports.</p>
<div id="TTCDV220" class="tblhruleformal">
<p class="titleintable"><a id="sthref220"></a><a id="BGBHEBAH"></a>Table 3-5 TimesTen OCI supported SQL data types</p>
<table class="cellalignment4366" title="TimesTen OCI supported SQL data types" summary="supported SQL data types" dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t21">SQL data type</th>
<th class="cellalignment4367" id="r1c2-t21">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_AFC</code></p>
</td>
<td class="cellalignment4368" headers="r2c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_AVC</code></p>
</td>
<td class="cellalignment4368" headers="r3c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_BDOUBLE</code></p>
</td>
<td class="cellalignment4368" headers="r4c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_BFLOAT</code></p>
</td>
<td class="cellalignment4368" headers="r5c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_BIN</code></p>
</td>
<td class="cellalignment4368" headers="r6c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_BLOB</code></p>
</td>
<td class="cellalignment4368" headers="r7c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_CHR</code></p>
</td>
<td class="cellalignment4368" headers="r8c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_CLOB</code></p>
</td>
<td class="cellalignment4368" headers="r9c1-t21 r1c2-t21">
<p>To write to or read from an NCLOB, set the character set form (<code dir="ltr">csfrm</code>) parameter to <code dir="ltr">SQLCS_NCHAR</code> for applicable function calls.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_DAT</code></p>
</td>
<td class="cellalignment4368" headers="r10c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_DATE</code></p>
</td>
<td class="cellalignment4368" headers="r11c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_FLT</code></p>
</td>
<td class="cellalignment4368" headers="r12c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_IBDOUBLE</code></p>
</td>
<td class="cellalignment4368" headers="r13c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r14c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_IBFLOAT</code></p>
</td>
<td class="cellalignment4368" headers="r14c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r15c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_INT</code></p>
</td>
<td class="cellalignment4368" headers="r15c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r16c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_INTERVAL_DS</code></p>
</td>
<td class="cellalignment4368" headers="r16c1-t21 r1c2-t21">
<p>Not stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r17c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_INTERVAL_YM</code></p>
</td>
<td class="cellalignment4368" headers="r17c1-t21 r1c2-t21">
<p>Not stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r18c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_LBI</code></p>
</td>
<td class="cellalignment4368" headers="r18c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r19c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_LNG</code></p>
</td>
<td class="cellalignment4368" headers="r19c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r20c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_LVB</code></p>
</td>
<td class="cellalignment4368" headers="r20c1-t21 r1c2-t21">
<p>Truncated at 4 MB when stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r21c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_LVC</code></p>
</td>
<td class="cellalignment4368" headers="r21c1-t21 r1c2-t21">
<p>Truncated at 4 MB when stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r22c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_NUM</code></p>
</td>
<td class="cellalignment4368" headers="r22c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r23c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_ODT</code></p>
</td>
<td class="cellalignment4368" headers="r23c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r24c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_RDD</code></p>
</td>
<td class="cellalignment4368" headers="r24c1-t21 r1c2-t21">
<p>Rowids are returned in Oracle Database format.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r25c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_RSET</code></p>
</td>
<td class="cellalignment4368" headers="r25c1-t21 r1c2-t21">
<p>Only one result set parameter is allowed for each statement.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r26c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_STR</code></p>
</td>
<td class="cellalignment4368" headers="r26c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r27c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_TIME</code></p>
</td>
<td class="cellalignment4368" headers="r27c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r28c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_TIME_TZ</code></p>
</td>
<td class="cellalignment4368" headers="r28c1-t21 r1c2-t21">
<p>Time zone is ignored when stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r29c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_TIMESTAMP</code></p>
</td>
<td class="cellalignment4368" headers="r29c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r30c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_TIMESTAMP_LTZ</code></p>
</td>
<td class="cellalignment4368" headers="r30c1-t21 r1c2-t21">
<p>Time zone is ignored when stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r31c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_TIMESTAMP_TZ</code></p>
</td>
<td class="cellalignment4368" headers="r31c1-t21 r1c2-t21">
<p>Time zone is ignored when stored in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r32c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_UIN</code></p>
</td>
<td class="cellalignment4368" headers="r32c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r33c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_VBI</code></p>
</td>
<td class="cellalignment4368" headers="r33c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r34c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_VCS</code></p>
</td>
<td class="cellalignment4368" headers="r34c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r35c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_VNU</code></p>
</td>
<td class="cellalignment4368" headers="r35c1-t21 r1c2-t21">&nbsp;</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r36c1-t21" headers="r1c1-t21">
<p><code dir="ltr">SQLT_VST</code></p>
</td>
<td class="cellalignment4368" headers="r36c1-t21 r1c2-t21">&nbsp;</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BABGFJHG"></a>
<div id="TTCDV558" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Supported parameter attributes</h3>
<p><a href="#CIACADDI">Table 3-6</a> that follows lists<a id="sthref221"></a> supported parameter attributes.</p>
<div id="TTCDV221" class="tblhruleformal">
<p class="titleintable"><a id="sthref222"></a><a id="CIACADDI"></a>Table 3-6 TimesTen OCI supported parameter attributes</p>
<table class="cellalignment4366" title="TimesTen OCI supported parameter attributes" summary="Supported attributes for parameters" dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t22">Parameter</th>
<th class="cellalignment4367" id="r1c2-t22">Supported attributes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t22" headers="r1c1-t22">
<p>All parameters</p>
</td>
<td class="cellalignment4368" headers="r2c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_NUM_PARAMS</code></p>
<p><code dir="ltr">OCI_ATTR_OBJ_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_OBJ_SCHEMA</code></p>
<p><code dir="ltr">OCI_ATTR_PTYPE</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t22" headers="r1c1-t22">
<p>Table and view parameters</p>
</td>
<td class="cellalignment4368" headers="r3c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_NUM_COLS</code></p>
<p><code dir="ltr">OCI_ATTR_LIST_COLUMNS</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t22" headers="r1c1-t22">
<p>PL/SQL procedure and function parameters</p>
</td>
<td class="cellalignment4368" headers="r4c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_LIST_ARGUMENTS</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t22" headers="r1c1-t22">
<p>PL/SQL subprogram parameters</p>
</td>
<td class="cellalignment4368" headers="r5c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_LIST_ARGUMENTS</code></p>
<p><code dir="ltr">OCI_ATTR_NAME</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t22" headers="r1c1-t22">
<p>PL/SQL package parameters</p>
</td>
<td class="cellalignment4368" headers="r6c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_LIST_SUBPROGRAMS</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t22" headers="r1c1-t22">
<p>Sequence parameters</p>
</td>
<td class="cellalignment4368" headers="r7c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_OBJID</code></p>
<p><code dir="ltr">OCI_ATTR_MIN</code></p>
<p><code dir="ltr">OCI_ATTR_MAX</code></p>
<p><code dir="ltr">OCI_ATTR_INCR</code></p>
<p><code dir="ltr">OCI_ATTR_CACHE</code></p>
<p><code dir="ltr">OCI_ATTR_ORDER</code></p>
<p><code dir="ltr">OCI_ATTR_HW_MARK</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t22" headers="r1c1-t22">
<p>Column parameters</p>
</td>
<td class="cellalignment4368" headers="r8c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_CHAR_USED</code></p>
<p><code dir="ltr">OCI_ATTR_CHAR_SIZE</code></p>
<p><code dir="ltr">OCI_ATTR_DATA_SIZE</code></p>
<p><code dir="ltr">OCI_ATTR_DATA_TYPE</code></p>
<p><code dir="ltr">OCI_ATTR_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_PRECISION</code></p>
<p><code dir="ltr">OCI_ATTR_SCALE</code></p>
<p><code dir="ltr">OCI_ATTR_IS_NULL</code></p>
<p><code dir="ltr">OCI_ATTR_TYPE_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_SCHEMA_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_FORM</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t22" headers="r1c1-t22">
<p>Argument and result parameters</p>
</td>
<td class="cellalignment4368" headers="r9c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_NAME</code></p>
<p><code dir="ltr">OCI_ATTR_POSITION</code></p>
<p><code dir="ltr">OCI_ATTR_DATA_TYPE</code></p>
<p><code dir="ltr">OCI_ATTR_DATA_SIZE</code></p>
<p><code dir="ltr">OCI_ATTR_PRECISION</code></p>
<p><code dir="ltr">OCI_ATTR_SCALE</code></p>
<p><code dir="ltr">OCI_ATTR_LEVEL</code></p>
<p><code dir="ltr">OCI_ATTR_IS_NULL</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_FORM</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t22" headers="r1c1-t22">
<p>List parameters</p>
</td>
<td class="cellalignment4368" headers="r10c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_LTYPE_COLUMN</code></p>
<p><code dir="ltr">OCI_LTYPE_SCH_OBJ</code></p>
<p><code dir="ltr">OCI_LTYPE_DB_SCH</code></p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t22" headers="r1c1-t22">
<p>Database parameters</p>
</td>
<td class="cellalignment4368" headers="r11c1-t22 r1c2-t22">
<p><code dir="ltr">OCI_ATTR_VERSION</code></p>
<p><code dir="ltr">OCI_ATTR_CHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_NCHARSET_ID</code></p>
<p><code dir="ltr">OCI_ATTR_LIST_SCHEMAS</code></p>
<p><code dir="ltr">OCI_ATTR_MAX_PROC_LEN</code></p>
<p><code dir="ltr">OCI_ATTR_MAX_COLUMN_LEN</code></p>
<p><code dir="ltr">OCI_ATTR_ATTR_CURSOR_COMMIT_BEHAVIOR</code></p>
<p><code dir="ltr">OCI_ATTR_MAX_CATALOG_NAMELEN</code></p>
<p><code dir="ltr">OCI_ATTR_CATALOG_LOCATION</code></p>
<p><code dir="ltr">OCI_ATTR_SAVEPOINT_SUPPORT</code></p>
<p><code dir="ltr">OCI_ATTR_NOWAIT_SUPPORT</code></p>
<p><code dir="ltr">OCI_ATTR_AUTOCOMMIT_DDL</code></p>
<p><code dir="ltr">OCI_ATTR_LOCKING_MODE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4359">
<tr>
<td class="cellalignment4368">
<table class="cellalignment4364">
<tr>
<td class="cellalignment4363"><a href="writing_app.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4363"><a href="pro_c.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4370">
<table class="cellalignment4362">
<tr>
<td class="cellalignment4363"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4363"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4363"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4363"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4363"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4363"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>