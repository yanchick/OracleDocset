<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107474"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Distributed%20Transaction%20Processing%3A%20XA"></a><title>Distributed Transaction Processing: XA</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033"/>
<meta name="dcterms.created" content="2014-12-10T16:46:47Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database C Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E21637-09"/>
<meta name="dcterms.isVersionOf" content="TTCDV"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="xla_event.htm" title="Previous" type="text/html"/>
<link rel="Next" href="tuning.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21637-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/15</span> <!-- End Header -->
<div id="TTCDV327" class="chapter"><a id="BHAJIAHD"></a>
<h1 class="chapter"><span class="secnum">6</span> Distributed Transaction Processing: XA</h1>
<p>This chapter describes the TimesTen implementation of the X/Open XA standard.</p>
<p>The TimesTen implementation of the XA interfaces is intended for use by transaction managers in distributed transaction processing (DTP) environments. You can use these interfaces to write a new transaction manager or to adapt an existing transaction manager, such as Oracle Tuxedo, to operate with TimesTen resource managers.</p>
<p>The purpose of this chapter is to provide information specific to the TimesTen implementation of XA and is intended to be used with the following documents:</p>
<ul>
<li>
<p>X/Open CAE Specification, <span class="italic">Distributed Transaction Processing: The XA Specification</span>, published by the The Open Group (<code dir="ltr"><a href="http://www.opengroup.org">http://www.opengroup.org</a></code>)</p>
</li>
<li>
<p>Tuxedo documentation, available through the following location:</p>
<pre dir="ltr"><a href="http://www.oracle.com/technetwork/middleware/weblogic/documentation/">http://www.oracle.com/technetwork/middleware/weblogic/documentation</a>
</pre></li>
</ul>
<p>This chapter includes the following topics:</p>
<ul>
<li>
<p><a href="#BHAGCDGE">Overview of XA</a></p>
</li>
<li>
<p><a href="#CEGHHDHF">Using XA in TimesTen</a></p>
</li>
<li>
<p><a href="#BHABEAGG">XA support through the Windows ODBC driver manager</a></p>
</li>
<li>
<p><a href="#CEGCBEIJ">Configuring Tuxedo to use TimesTen XA</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Important:</p>
<ul>
<li>
<p>The TimesTen XA implementation does not work with TimesTen Cache. The start of any XA transaction fails if the cache agent is running.</p>
</li>
<li>
<p>You cannot execute an XA transaction if replication is enabled.</p>
</li>
<li>
<p>Do not execute DDL statements within an XA transaction.</p>
</li>
</ul>
</div>
<a id="BHAGCDGE"></a>
<div id="TTCDV328" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Ove<a id="sthref419"></a>rview of XA</h2>
<p>This section provides a brief overview of the following XA concepts:</p>
<ul>
<li>
<p><a href="#BHAJCEAH">X/Open DTP model</a></p>
</li>
<li>
<p><a href="#BHAGEDJD">Two-phase commit</a></p>
</li>
</ul>
<a id="BHAJCEAH"></a>
<div id="TTCDV329" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">X/Open D<a id="sthref420"></a>TP model</h3>
<p><a href="#CEGDEJGF">Figure 6-1</a> that follows illustrates the interfaces defined by the X/Open DTP model.</p>
<div id="TTCDV330" class="figure">
<p class="titleinfigure"><a id="CEGDEJGF"></a>Figure 6-1 Distributed transaction processing model</p>
<img width="460" height="254" src="img/dtp.gif" alt="Description of Figure 6-1 follows"/><br/>
<a id="sthref421" href="img_text/dtp.htm">Description of &#34;Figure 6-1 Distributed transaction processing model&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The TX in<a id="sthref422"></a><a id="sthref423"></a><a id="sthref424"></a><a id="sthref425"></a><a id="sthref426"></a><a id="sthref427"></a>terface is what applications use to communicate with a transaction manager. The figure shows an application communicating global transactions to the transaction manager. In the DTP model, the transaction manager breaks each global transaction down into multiple branches and distributes them to separate resource managers for service. It uses the XA interface to coordinate each transaction branch with the appropriate resource manager.</p>
<p>In the context of TimesTen XA, the resource managers can be a collection of TimesTen databases, or databases in combination with other commercial databases that support XA.</p>
<p>Global transaction control provided by the TX and XA interfaces is distinct from local transaction control provided by the native ODBC interface. It is generally best to maintain separate connections for local and global transactions. Applications can obtain a connection handle to a TimesTen resource manager in order to initiate both local and global transactions over the same connection. See <a href="#CEGBEGCB">&#34;TimesTen tt_xa_context function to obtain ODBC handle from XA connection&#34;</a> for more information.</p>
</div>
<!-- class="sect2" -->
<a id="BHAGEDJD"></a>
<div id="TTCDV331" class="sect2">
<h3 class="sect2">Two-phase com<a id="sthref428"></a><a id="sthref429"></a>mit</h3>
<p>In an XA implementation, the transaction manager commits the distributed branches of a global transaction by using a two-phase commit protocol.</p>
<ol>
<li>
<p>In phase one, the transaction manager directs each resource manager to prepare to commit, which is to verify and guarantee it can commit its respective branch of the global transaction. If a resource manager cannot commit its branch, the transaction manager rolls back the entire transaction in phase two.</p>
</li>
<li>
<p>In phase two, the transaction manager either directs each resource manager to commit its branch or, if a resource manager reported it was unable to commit in phase one, rolls back the global transaction.</p>
</li>
</ol>
<p>Note the following optimizations:</p>
<ul>
<li>
<p>If a global transaction is determined by the transaction manager to have involved only one branch, it skips phase one and commits the transaction in phase two.</p>
</li>
<li>
<p>If a global transaction branch is read-only, where it does not generate any transaction log records, the transaction manager commits the branch in phase one and skips phase two for that branch.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The transaction manager considers the global transaction committed if and only if all branches successfully commit.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGHHDHF"></a>
<div id="TTCDV332" class="sect1">
<h2 class="sect1">Using XA in TimesTen</h2>
<p>The TimesTen implementation of XA provides an API that is consistent with the API specified in <span class="italic">Distributed Transaction Processing: The XA Specification</span>. This section describes what you should know when using the TimesTen implementation of XA, covering the following topics:</p>
<ul>
<li>
<p><a href="#BHADAAEA">TimesTen database requirements for XA</a></p>
</li>
<li>
<p><a href="#BHAHJIAJ">Global transaction recovery in TimesTen</a></p>
</li>
<li>
<p><a href="#CEGHGIHA">Considerations in using standard XA functions with TimesTen</a></p>
</li>
<li>
<p><a href="#CEGBEGCB">TimesTen tt_xa_context function to obtain ODBC handle from XA connection</a></p>
</li>
<li>
<p><a href="#CEGGHBAJ">Considerations in calling ODBC functions over XA connections in TimesTen</a></p>
</li>
<li>
<p><a href="#CEGHIHDJ">XA resource manager switch</a></p>
</li>
<li>
<p><a href="#BHACBEDH">XA error handling in TimesTen</a></p>
</li>
</ul>
<a id="BHADAAEA"></a>
<div id="TTCDV333" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tim<a id="sthref430"></a><a id="sthref431"></a><a id="sthref432"></a><a id="sthref433"></a>esTen database requirements for XA</h3>
<p>To guarantee global transaction consistency, TimesTen XA transaction branches must be durable. The TimesTen implementation of the <code dir="ltr">xa_prepare()</code>, <code dir="ltr">xa_rollback()</code>, and <code dir="ltr">xa_commit()</code> functions log their actions to disk, regardless of the value set in the <code dir="ltr">DurableCommits</code> general connection attribute or by the <code dir="ltr">ttDurableCommit</code> built-in procedure. (The behavior is equivalent to what occurs with a setting of <code dir="ltr">DurableCommits=1</code>. See <a class="olink TTREF162" href="../TTREF/attribute.htm#TTREF162">&#34;DurableCommits&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> for related information.) If you must recover from a failure, both the resource manager and the TimesTen transaction manager have a consistent view of which transaction branches were active in a prepared state at the time of failure.</p>
</div>
<!-- class="sect2" -->
<a id="BHAHJIAJ"></a>
<div id="TTCDV334" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Glo<a id="sthref434"></a><a id="sthref435"></a>bal transaction recovery in TimesTen</h3>
<p>When a database is loaded from disk to recover after a failure or unexpected termination, any global transactions that were prepared but not committed are left pending, or in doubt. Normal processing is not enabled until the disposition of all in-doubt transactions has been resolved.</p>
<p>After connection and recovery are complete, TimesTen checks for in-doubt transactions. If there are no in-doubt transactions, operation proceeds as normal. If there are in-doubt transactions, other connections may be created, but virtually all operations are prohibited on those connections until the in-doubt transactions are resolved. Any other ODBC or JDBC calls result in the following error:</p>
<pre dir="ltr">Error 11035 - &#34;In-doubt transactions awaiting resolution in recovery must be 
resolved first&#34;
</pre>
<p>The list of in-doubt transactions can be retrieved through the XA implementation of <code dir="ltr">xa_recover()</code>, then dealt with through the XA call <code dir="ltr">xa_commit()</code>, <code dir="ltr">xa_rollback()</code>, or <code dir="ltr">xa_forget()</code>, as appropriate. After all of the in-doubt transactions are cleared, operation proceeds normally.</p>
<p>This scheme should be adequate for systems that operate strictly under control of the transaction manager, since the first thing the transaction manager should do after connect is to call <code dir="ltr">xa_recover()</code>.</p>
<p>If the transaction manager is unavailable or cannot resolve an in-doubt transaction, you can use the <code dir="ltr">ttXactAdmin</code> utility <code dir="ltr">-HCommit</code> or <code dir="ltr">-HAbort</code> option to independently commit or abort the individual transaction branches. Be aware, however, that these <code dir="ltr">ttXactAdmin</code> options require <code dir="ltr">ADMIN</code> privilege. See <a class="olink TTREF376" href="../TTREF/util.htm#TTREF376">&#34;ttXactAdmin&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHGIHA"></a>
<div id="TTCDV335" class="sect2">
<h3 class="sect2">Considerations in using standard XA functions with TimesTen</h3>
<p>This section describes some issues concerning the use of TimesTen XA functions, which are of interest if you are writing your own transaction manager.</p>
<div id="TTCDV336" class="sect3"><a id="sthref436"></a>
<h4 class="sect3"><a id="sthref437"></a>xa_open()</h4>
<p>The <code dir="ltr"><span class="codeinlineitalic">xa_info</span></code> string used by <code dir="ltr">xa_open()</code> should be a connection string identical to that supplied to <code dir="ltr">SQLDriverConnect</code>, such as:</p>
<pre dir="ltr">&#34;DSN=DataStoreResource;UID=MyName&#34;
</pre>
<p>XA limits the length of the string to 256 characters. See <code dir="ltr">MAXINFOSIZE</code> in the <code dir="ltr">xa.h</code> header file.</p>
<p>The <code dir="ltr">xa_open()</code> function automatically turns off autocommit when it opens an XA connection.</p>
<p>A connection opened with <code dir="ltr">xa_open()</code> must be closed with a call to <code dir="ltr">xa_close()</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any user, other than the instance administrator, who wishes to connect to TimesTen must be granted the <code dir="ltr">CREATE SESSION</code> privilege. Refer to <a href="writing_app.htm#BABHAGHD">&#34;Access control for connections&#34;</a>.</div>
</div>
<!-- class="sect3" -->
<div id="TTCDV337" class="sect3"><a id="sthref438"></a>
<h4 class="sect3"><a id="sthref439"></a>xa_close()</h4>
<p>The <code dir="ltr"><span class="codeinlineitalic">xa_info</span></code> string used by <code dir="ltr">xa_close()</code> should be empty.</p>
</div>
<!-- class="sect3" -->
<div id="TTCDV338" class="sect3"><a id="sthref440"></a>
<h4 class="sect3">Transaction id (<a id="sthref441"></a><a id="sthref442"></a>XID) parameter</h4>
<p>XA uniquely identifies global transactions by using a transaction ID, referred to as an <span class="italic">XID</span>. The XID is a required parameter for XA functions that manipulate a transaction. Internally, TimesTen maps XIDs to its own transaction identifiers.</p>
<p>The XID defined by the XA standard has some of its members (such as <code dir="ltr">formatID</code>, <code dir="ltr">gtrid_length</code>, and <code dir="ltr">bqual_length</code>) defined as type <code dir="ltr">long</code>. Be aware that this can cause problems when 32-bit client applications connect to a 64-bit server, or 64-bit client applications connect to a 32-bit server. This is because <code dir="ltr">long</code> is a 32-bit integer on 32-bit platforms but a 64-bit integer on 64-bit platforms, other than 64-bit Windows. Hence, TimesTen internally uses only the 32 least significant bits of those XID members regardless of the platform type of client or server. TimesTen does not support any value in those XID members that does not fit in a 32-bit integer.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGBEGCB"></a>
<div id="TTCDV339" class="sect2">
<h3 class="sect2">Ti<a id="sthref443"></a><a id="sthref444"></a>mesTen tt_xa_context function to obtain ODBC handle from XA connection</h3>
<p>TimesTen provides the function <code dir="ltr">tt_xa_context()</code>, which enables you to acquire the ODBC connection handle associated with an XA connection opened by <code dir="ltr">xa_open()</code>.</p>
<p class="subhead2"><a id="TTCDV340"></a>Syntax</p>
<pre dir="ltr">#include &lt;tt_xa.h&gt;
int tt_xa_context(int* rmid, SQLHENV* henv, SQLHDBC* hdbc);
</pre>
<p class="subhead2"><a id="TTCDV341"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="tt_xa_context parameters" summary="This table contains descriptions of the parameters of the tt_xa_context function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t5">Parameter</th>
<th class="cellalignment4367" id="r1c2-t5">Type</th>
<th class="cellalignment4367" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">rmid</span></code></td>
<td class="cellalignment4368" headers="r2c1-t5 r1c2-t5"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r2c1-t5 r1c3-t5">The specified resource manager ID
<p>If this is non-null, the function returns the handles associated with the <code dir="ltr"><span class="codeinlineitalic">rmid</span></code> value.</p>
<p>If the specified <code dir="ltr"><span class="codeinlineitalic">rmid</span></code> is null, the function returns the handles associated with the first connection on this thread. For example, specify a null value if the connection has been opened outside the scope of the user-written code, where <code dir="ltr"><span class="codeinlineitalic">rmid</span></code> is unknown. This establishes context in the application environment.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">henv</span></code></td>
<td class="cellalignment4368" headers="r3c1-t5 r1c2-t5"><code dir="ltr">out SQLHENV</code></td>
<td class="cellalignment4368" headers="r3c1-t5 r1c3-t5">The environment handle associated with the current <code dir="ltr">xa_open()</code> context</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">hdbc</span></code></td>
<td class="cellalignment4368" headers="r4c1-t5 r1c2-t5"><code dir="ltr">out SQLHDBC</code></td>
<td class="cellalignment4368" headers="r4c1-t5 r1c3-t5">The connection handle associated with the current <code dir="ltr">xa_open()</code> context</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p class="subhead2"><a id="TTCDV342"></a>Return values</p>
<p>0: Success</p>
<p>1: <code dir="ltr"><span class="codeinlineitalic">rmid</span></code> not found</p>
<p>-1: Invalid parameter</p>
<p class="subhead2"><a id="TTCDV343"></a>Example</p>
<p>In the following example, assume Tuxedo has used <code dir="ltr">xa_open()</code> and <code dir="ltr">xa_start()</code> to open a connection to the database and start a transaction. To do further ODBC processing on the connection, use the <code dir="ltr">tt_xa_context()</code> function to locate the <code dir="ltr">SQLHENV</code> and <code dir="ltr">SQLHDBC</code> handles allocated by <code dir="ltr">xa_open()</code>.</p>
<div id="TTCDV344" class="example">
<p class="titleinexample"><a id="sthref445"></a>Example 6-1 Using tt_xa_context() to locate handles</p>
<pre dir="ltr">do_insert()
{

    SQLHENV henv;
    SQLHDBC hdbc;
    SQLHSTMT hstmt;

    /* retrieve the handles for the current connection */
    tt_xa_context(NULL, &amp;henv, &amp;hdbc);

    /* now we can do our ODBC programming as usual */
    SQLAllocStmt(hdbc, &amp;hstmt);

    SQLExecDirect(hstmt, &#34;insert into t1 values (1)&#34;, SQL_NTS);

    SQLFreeStmt(hstmt, SQL_DROP);
}
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CEGGHBAJ"></a>
<div id="TTCDV345" class="sect2">
<h3 class="sect2">Considerations in calling ODBC functions over XA connections in TimesTen</h3>
<p>This section describes some TimesTen issues to be aware of when calling ODBC functions using an ODBC handle associated with an XA connection opened by <code dir="ltr">xa_open()</code>.</p>
<div id="TTCDV346" class="sect3"><a id="sthref446"></a>
<h4 class="sect3"><a id="sthref447"></a><a id="sthref448"></a>Autocommit</h4>
<p>To simplify operation and prevent possible contradictions, <code dir="ltr">xa_open()</code> automatically turns off autocommit when it opens an XA connection.</p>
<p>Autocommit may subsequently be turned on or off during local transaction work, but must be turned off before <code dir="ltr">xa_start()</code> is called to begin work on a global transaction branch. If autocommit is on, a call to <code dir="ltr">xa_start()</code> returns the following error:</p>
<pre dir="ltr">Error 11030 - &#34;Autocommit must be turned off when working on global (XA) transactions&#34;
</pre>
<p>Once <code dir="ltr">xa_start()</code> has been called to begin work on a global transaction branch, autocommit may not be turned on until such work has been completed through a call to <code dir="ltr">xa_end()</code>. Any attempt to turn on autocommit in this case results in the same error as above.</p>
</div>
<!-- class="sect3" -->
<div id="TTCDV347" class="sect3"><a id="sthref449"></a>
<h4 class="sect3">Local transaction COMMIT and ROLLBACK</h4>
<p>Once work on a global transaction branch has commenced through a call to <code dir="ltr">xa_start()</code>, attempts to perform a local commit or rollback using <code dir="ltr">SQLTransact</code> results in the following error:</p>
<pre dir="ltr">Error 11031 - &#34;Illegal combination of local transaction and global (XA) transaction&#34;
</pre></div>
<!-- class="sect3" -->
<div id="TTCDV348" class="sect3"><a id="sthref450"></a>
<h4 class="sect3">Closing open cursors</h4>
<p>Any open statement cursors must be closed using <code dir="ltr">SQLFreeStmt</code> with a value of <code dir="ltr">SQL_CLOSE</code> before calling <code dir="ltr">xa_end()</code> to end work on a global transaction branch. Otherwise, the following error is returned:</p>
<pre dir="ltr">Error 11032 - &#34;XA request failed due to open cursors&#34;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGHIHDJ"></a>
<div id="TTCDV349" class="sect2">
<h3 class="sect2">XA resource manager switch</h3>
<p>Each resource manager defines a switch in its <code dir="ltr">xa.h</code> header file that provides the transaction manager with access to the XA functions in the resource managers. The transaction manager never directly calls an XA interface function. Instead, it calls the function in the switch table, which, in turn, points to the appropriate function in the resource manager. This enables resource managers to be added and removed without the requirement to recompile the applications.</p>
<p>In the TimesTen implementation of XA, the functions in the XA switch, <code dir="ltr">xa_switch_t</code>, point to their respective functions defined in a TimesTen switch, <code dir="ltr">tt_xa_switch</code>.</p>
<div id="TTCDV350" class="sect3"><a id="sthref451"></a>
<h4 class="sect3"><a id="sthref452"></a>xa_switch_t</h4>
<p>The <code dir="ltr">xa_switch_t</code> structure defined by the XA specification is as follows:</p>
<pre dir="ltr">/* XA Switch Data Structure */
#define RMNAMESZ       32         /* length of resource manager name, */
                                  /* including the null terminator */
#define MAXINFOSIZE    256        /* maximum size in bytes of xa_info strings, */
                                  /* including the null terminator */

struct xa_switch_t
{

    char name[RMNAMESZ];                /* name of resource manager */
    long flags;                         /* resource manager specific options */
    long version;                       /* must be 0 */

int (*xa_open_entry)(char*, int, long);        /* xa_open function pointer */
int (*xa_close_entry)(char*, int, long);       /* xa_close function pointer*/
int (*xa_start_entry)(XID*, int, long);        /* xa_start function pointer */
int (*xa_end_entry)(XID*, int, long);          /* xa_end function pointer */
int (*xa_rollback_entry)(XID*, int, long);     /* xa_rollback function pointer */
int (*xa_prepare_entry)(XID*, int, long);      /* xa_prepare function pointer */
int (*xa_commit_entry)(XID*, int, long);       /* xa_commit function pointer */
int (*xa_recover_entry)(XID*, long, int, long); /* xa_recover function pointer*/
int (*xa_forget_entry)(XID*, int, long);        /* xa_forget function pointer */
int (*xa_complete_entry)(int*, int*, int, long); /* xa_complete function pointer */
};

typedef struct xa_switch_t xa_switch_t;
/*
 * Flag definitions for the RM switch
 */
#define TMNOFLAGS 0x00000000L     /* no resource manager features selected */
#define TMREGISTER 0x00000001L    /* resource manager dynamically registers */
#define TMNOMIGRATE 0x00000002L   /* RM does not support association migration */
#define TMUSEASYNC 0x00000004L    /* RM supports asynchronous operations */
</pre></div>
<!-- class="sect3" -->
<div id="TTCDV351" class="sect3"><a id="sthref453"></a>
<h4 class="sect3">t<a id="sthref454"></a><a id="sthref455"></a>t_xa_switch</h4>
<p>The <code dir="ltr">tt_xa_switch</code> names the actual functions implemented by a TimesTen resource manager. It also indicates explicitly that association migration is not supported. In addition, dynamic registration and asynchronous operations are not supported.</p>
<pre dir="ltr">struct xa_switch_t
tt_xa_switch =
{
    &#34;TimesTen&#34;, /* name of resource manager */
    TMNOMIGRATE, /* RM does not support association migration */
    0,
    tt_xa_open,
    tt_xa_close,
    tt_xa_start,
    tt_xa_end,
    tt_xa_rollback,
    tt_xa_prepare,
    tt_xa_commit,
    tt_xa_recover,
    tt_xa_forget,
    tt_xa_complete
};
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BHACBEDH"></a>
<div id="TTCDV352" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">XA error handling in TimesTen</h3>
<p>The XA specification has a limited and strictly defined set of errors that can be returned from XA interface calls. The ODBC <code dir="ltr">SQLError</code> function returns XA-defined errors along with any additional information.</p>
<p>The TimesTen XA-related errors begin at number 11000. Errors 11002 through 11020 correspond to the errors defined by the XA standard.</p>
<p>See <a class="olink TTERR110" href="../TTERR/error.htm#TTERR110">&#34;Warnings and Errors&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Error Messages and SNMP Traps</span> for the complete list of errors.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BHABEAGG"></a>
<div id="TTCDV353" class="sect1">
<h2 class="sect1">XA sup<a id="sthref456"></a><a id="sthref457"></a>port through the Windows ODBC driver manager</h2>
<p>This section discusses issues and procedures for using XA with the Windows ODBC driver manager. (UNIX ODBC driver managers are not considered.)</p>
<div id="TTCDV354" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref458"></a>
<h3 class="sect2">Issues to consider</h3>
<p>XA support through the ODBC driver manager requires special handling. There are two fundamental problems:</p>
<ul>
<li>
<p>The XA interface is not part of the defined ODBC interface. If the XA symbols are directly referenced in an application, it is not possible to link with only the driver manager library to resolve all the external references.</p>
</li>
<li>
<p>By design, the driver manager determines which driver <code dir="ltr">.dll</code> file to load at connect time, when you call <code dir="ltr">SQLConnect</code> or <code dir="ltr">SQLDriverConnect</code>. XA dictates that the connection should be opened through <code dir="ltr">xa_open()</code>. But the correct <code dir="ltr">xa_open()</code> entry point cannot be located until the <code dir="ltr">.dll</code> is loaded during the connect operation itself.</p>
</li>
</ul>
<p>Note that the driver manager objective of database portability is generally not applicable here, since each XA implementation is essentially proprietary. The primary benefit of driver manager support for XA-enabled applications is to enable TimesTen-specific applications to run transparently with either the TimesTen direct driver or the TimesTen Client/Server driver.</p>
</div>
<!-- class="sect2" -->
<div id="TTCDV355" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref459"></a>
<h3 class="sect2">Linking to the TimesTen ODBC XA driver manager extension library</h3>
<p>On Windows installations, TimesTen provides a driver manager extension library, <code dir="ltr">ttxadm1122.dll</code>, for XA functions. Applications can make XA calls directly, but must link in the extension library.</p>
<p>To link with the <a id="sthref460"></a><code dir="ltr">ttxadm1122.dll</code> library, applications must include <code dir="ltr">ttxadm1122.lib</code> before <code dir="ltr">odbc32.lib</code> in their link line. For example:</p>
<pre dir="ltr"># Link with the ODBC driver manager
appldm.exe:appl.obj
       $(CC) /Feappldm.exe appl.obj ttxadm1122.lib odbc32.lib
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The XA driver manager extension is implemented only for 32-bit Windows applications.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGCBEIJ"></a>
<div id="TTCDV356" class="sect1">
<h2 class="sect1">Confi<a id="sthref461"></a><a id="sthref462"></a>guring Tuxedo to use TimesTen XA</h2>
<p>To configure Tuxedo to use the TimesTen resource managers, perform the following tasks.</p>
<ul>
<li>
<p><a href="#BHAIJDEH">Update the $TUXDIR/udataobj/RM file</a></p>
</li>
<li>
<p><a href="#BHADJBJI">Build the Tuxedo transaction manager server</a></p>
</li>
<li>
<p><a href="#BHACJADD">Update the GROUPS section in the UBBCONFIG file</a></p>
</li>
<li>
<p><a href="#BHAGJEIB">Compile the servers</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Important:</p>
Though TimesTen XA has been demonstrated to work with the Oracle Tuxedo transaction manager, TimesTen cannot guarantee the operation of DTP software beyond the TimesTen implementation of XA.</div>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>The examples in this section use the direct driver. You can also use the client/server library or driver manager library with the XA extension library.</p>
</li>
<li>
<p>Information on configuring TimesTen for object-relational mapping frameworks and application servers, including Oracle WebLogic Application Server, is available in the TimesTen Quick Start. Click <span class="bold">Java EE and OR Mapping</span> under Configuration and Setup.</p>
</li>
</ul>
</div>
<a id="BHAIJDEH"></a>
<div id="TTCDV357" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Update the $TUXDIR/udataobj/RM file</h3>
<p>To integrate the TimesTen XA resource manager into the Oracle Tuxedo system, update the <code dir="ltr">$TUXDIR/udataobj/RM</code> file to identify the TimesTen resource manager, the name of the TimesTen resource manager switch (<code dir="ltr">tt_xa_switch</code>), and the name of the library for the resource manager.</p>
<p>On UNIX platforms, add the following:</p>
<pre dir="ltr">TimesTen:tt_xa_switch:-L<span class="italic">install_dir</span>/lib -ltten
</pre>
<p>For example:</p>
<pre dir="ltr">TimesTen:tt_xa_switch:-L/opt/TimesTen/giraffe/lib -ltten
</pre>
<p>On Windows platforms, add the following:</p>
<pre dir="ltr">TimesTen;tt_xa_switch;<span class="italic">install_dir</span>\lib\ttdv1122.lib
</pre>
<p>For example:</p>
<pre dir="ltr">TimesTen;tt_xa_switch;C:\TimesTen\giraffe\lib\ttdv1122.lib
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code> is the path to the TimesTen home directory.</div>
</div>
<!-- class="sect2" -->
<a id="BHADJBJI"></a>
<div id="TTCDV358" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Build the Tuxedo transaction manager server</h3>
<p>Use the <a id="sthref463"></a><code dir="ltr">buildtms</code> command to build a transaction manager server for the TimesTen resource manager. Then copy the <code dir="ltr">TMS_TT</code> file created by <code dir="ltr">buildtms</code> to the <code dir="ltr">$TUXDIR/bin</code> directory.</p>
<p>On UNIX platforms, the commands are the following:</p>
<pre dir="ltr">buildtms -o TMS_TT -r TimesTen -v
cp TMS_TT $TUXDIR/bin
</pre>
<p>On Windows platforms, the commands are the following:</p>
<pre dir="ltr">buildtms -o TMS_TT -r TimesTen -v
copy TMS_TT.exe %TUXDIR%\bin
</pre></div>
<!-- class="sect2" -->
<a id="BHACJADD"></a>
<div id="TTCDV359" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Update the GROUPS section in the UB<a id="sthref464"></a>BCONFIG file</h3>
<p>For <code dir="ltr">TMSNAME</code>, specify the <code dir="ltr">TMS_TT</code> file created by the <code dir="ltr">buildtms</code> command described in the preceding section.</p>
<pre dir="ltr">TMSNAME=TMS_TT
</pre>
<p>Enter a line for each TimesTen resource manager that specifies a group name, followed by the <code dir="ltr">LMID</code>, <code dir="ltr">GRPNO</code>, and <code dir="ltr">OPENINFO</code> parameters. Your <code dir="ltr">OPENINFO</code> string should look like this:</p>
<pre dir="ltr">OPENINFO=&#34;TimesTen:DSN=<span class="italic">DSNname</span>&#34;
</pre>
<p>Where <code dir="ltr"><span class="codeinlineitalic">DSNname</span></code> is the name of the database.</p>
<p>Note that on Windows, Tuxedo servers run as user <code dir="ltr">SYSTEM</code>. Add the <code dir="ltr">UID</code> general connection attribute to the <code dir="ltr">OPENINFO</code> string to specify a user other than <code dir="ltr">SYSTEM</code>:</p>
<pre dir="ltr">OPENINFO=&#34;TimesTen:DSN=<span class="italic">DSNname</span>;UID=<span class="italic">user</span>&#34;
</pre>
<p>Do not specify a <code dir="ltr">CLOSEINFO</code> parameter for any TimesTen resource manager.</p>
<p><a href="#CEGFDDEB">Example 6-2</a> shows the portions of a <code dir="ltr">UBBCONFIG</code> file used to configure two TimesTen resource managers, <code dir="ltr">GROUP1</code> and <code dir="ltr">GROUP2</code>.</p>
<div id="TTCDV360" class="example">
<p class="titleinexample"><a id="CEGFDDEB"></a>Example 6-2 Configuring TimesTen resource managers</p>
<pre dir="ltr">*RESOURCES
...
*MACHINES
...
ENGSERV LMID=simple
*GROUPS
DEFAULT: TMSNAME=TMS_TT TMSCOUNT=2
GROUP1
    LMID=simple GRPNO=1 OPENINFO=&#34;TimesTen:DSN=MyDSN1;UID=MyName&#34;
GROUP2
    LMID=simple GRPNO=2 OPENINFO=&#34;TimesTen:DSN=MyDSN2;UID=MyName&#34;
*SERVERS
DEFAULT:
    CLOPT=&#34;-A&#34;
simpserv1 SRVGRP=GROUP1 SRVID=1
simpserv2 SRVGRP=GROUP2 SRVID=2

*SERVICES
TOUPPER
TOLOWER
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="BHAGJEIB"></a>
<div id="TTCDV361" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Compile the servers</h3>
<p>Set the <code dir="ltr">CFLAGS</code> environment variable to include the <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/include</code> directory that contains the TimesTen include files. Then use the <code dir="ltr">buildserver</code> command to construct an Oracle Tuxedo ATMI server load module.</p>
<p>On UNIX platforms, enter the following.</p>
<pre dir="ltr">export CFLAGS=-I<span class="italic">install_dir</span>/
buildserver -o server -f server.c -r TimesTen -s SERVICE
</pre>
<p>On Windows platforms, enter the following.</p>
<pre dir="ltr">set CFLAGS=-I<span class="italic">install_dir</span>\
buildserver -o server -f server.c -r TimesTen -s SERVICE
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr"><span class="codeinlineitalic">install_dir</span></code> is the path to the TimesTen home directory.</div>
<p><a href="#CEGDEDEI">Example 6-3</a> shows an example of how to use the <code dir="ltr">buildclient</code> command to construct the client module (<code dir="ltr">simpcl</code>) and the <code dir="ltr">buildserver</code> command to construct the two server modules described in the <code dir="ltr">UBBCONFIG</code> file in <a href="#CEGFDDEB">Example 6-2</a> above.</p>
<div id="TTCDV362" class="example">
<p class="titleinexample"><a id="CEGDEDEI"></a>Example 6-3 Construct server modules</p>
<pre dir="ltr">set CFLAGS=-IC:\TimesTen\giraffe\
buildclient -o simpcl -f simpcl.c
buildserver -v -t -o simpserv1 -f simpserv1.c -r TimesTen -s TOUPPER
buildserver -v -t -o simpserv2 -f simpserv2.c -r TimesTen -s TOLOWER
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4359">
<tr>
<td class="cellalignment4368">
<table class="cellalignment4364">
<tr>
<td class="cellalignment4363"><a href="xla_event.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4363"><a href="tuning.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4370">
<table class="cellalignment4362">
<tr>
<td class="cellalignment4363"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4363"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4363"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4363"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4363"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4363"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>