<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107448"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/TimesTen%20Utility%20API"></a><title>TimesTen Utility API</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033"/>
<meta name="dcterms.created" content="2014-12-10T16:46:47Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database C Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E21637-09"/>
<meta name="dcterms.isVersionOf" content="TTCDV"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="tuning.htm" title="Previous" type="text/html"/>
<link rel="Next" href="xla_ref.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21637-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/15</span> <!-- End Header -->
<div id="TTCDV371" class="chapter"><a id="CACCCIBB"></a>
<h1 class="chapter"><span class="secnum">8</span> TimesTen Utility API</h1>
<p>The TimesTen <a id="sthref484"></a>Utility Library C language functions documented in this chapter provide programmable interfaces to some of the command line utilities documented in <a class="olink TTREF316" href="../TTREF/util.htm#TTREF316">&#34;Utilities&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
<p>Applications that use this set of C language functions must include <code dir="ltr">ttutillib.h</code> and link with both the TimesTen driver library (<code dir="ltr">libtten</code> on UNIX or <code dir="ltr">ttdv1122.lib</code> and <code dir="ltr">tten1122.lib</code> on Windows) and the TimesTen utility library (<code dir="ltr">libttutil</code> on UNIX and <code dir="ltr">ttutil1122.lib</code> on Windows platforms).</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
Applications must call the <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code> C function before calling any other TimesTen utility library function. In addition, applications must call the <code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code> C function when done using the TimesTen utility library interface.</div>
<p>These functions are not supported with TimesTen Client or for Java applications. They are supported for TimesTen ODBC applications using the direct driver. (The TimesTen driver manager supplied with the Quick Start applications does support these functions but is not fully supported itself. See the note regarding this driver manager in <a href="compiling.htm#CEGEJCJJ">&#34;Linking with an ODBC driver manager&#34;</a>.)</p>
<p class="subhead2"><a id="TTCDV372"></a>Return codes</p>
<p>Unless otherwise indicated, the utility functions return these codes as defined in <code dir="ltr">ttutillib.h</code>.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="Utility API return codes" summary="This table contains descriptions of the return codes of the TimesTen C functions." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t3">Code</th>
<th class="cellalignment4367" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t3" headers="r1c1-t3"><code dir="ltr">TTUTIL_SUCCESS</code></td>
<td class="cellalignment4368" headers="r2c1-t3 r1c2-t3">Indicates success.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t3" headers="r1c1-t3"><code dir="ltr">TTUTIL_ERROR</code></td>
<td class="cellalignment4368" headers="r3c1-t3 r1c2-t3">Indicates an error occurs.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t3" headers="r1c1-t3"><code dir="ltr">TTUTIL_WARNING</code></td>
<td class="cellalignment4368" headers="r4c1-t3 r1c2-t3">Upon success, indicates a warning has been generated.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t3" headers="r1c1-t3"><code dir="ltr">TTUTIL_INVALID_HANDLE</code></td>
<td class="cellalignment4368" headers="r5c1-t3 r1c2-t3">Indicates an invalid utility library handle is specified.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The application must call the <code dir="ltr"><a href="#CHDDFBFI">ttUtilGetError</a></code> C function to retrieve all actual error or warning information.</div>
<div class="refentry"><a id="CHDIFHAH"></a>
<div id="TTCDV373" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ttB<a id="sthref485"></a><a id="sthref486"></a><a id="sthref487"></a><a id="sthref488"></a>ackup</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref489"></a>Description</p>
<p>Creates either a full or an incremental backup copy of the database specified by <code dir="ltr"><span class="codeinlineitalic">connStr</span></code>. You can back up a database either to a set of files or to a stream. You can restore the database at a later time using either the <code dir="ltr"><a href="#CHDDIBCI">ttRestore</a></code> function or the <code dir="ltr">ttRestore</code> utility.</p>
<p>For an overview of the TimesTen backup and restore facility, see <a class="olink TTINS252" href="../TTINS/migrate.htm#TTINS252">&#34;Migration, Backup, and Restoration&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Installation Guide</span>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref490"></a>Required privilege</p>
<p><code dir="ltr">ADMIN</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref491"></a>Syntax</p>
<pre dir="ltr">ttBackup (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>,
          ttBackUpType <span class="italic">type</span>, ttBooleanType <span class="italic">atomic</span>,
          const char* <span class="italic">backupDir</span>, const char* <span class="italic">baseName</span>,
          ttUtFileHandle <span class="italic">stream</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref492"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttBackup parameters" summary="This table contains descriptions of the parameters for ttBackup." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t5">Parameter</th>
<th class="cellalignment4367" id="r1c2-t5">Type</th>
<th class="cellalignment4367" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t5 r1c2-t5"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t5 r1c3-t5">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t5 r1c2-t5"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t5 r1c3-t5">This is a null-terminated string specifying a connection string that describes the database to be backed up.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">type</span></code></td>
<td class="cellalignment4368" headers="r4c1-t5 r1c2-t5"><code dir="ltr">ttBackupType</code></td>
<td class="cellalignment4368" headers="r4c1-t5 r1c3-t5">Specifies the type of backup to be performed. Valid values are as follows:
<ul>
<li>
<p><code dir="ltr">TT_BACKUP_FILE_FULL</code>: Performs a full file backup to the backup path specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> and <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> parameters. The resulting backup is not enabled for incremental backup.</p>
</li>
<li>
<p><code dir="ltr">TT_BACKUP_FILE_FULL_ENABLE</code>: Performs a full file backup to the backup path specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> and <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> parameters. The resulting backup is enabled for incremental backup.</p>
</li>
<li>
<p><code dir="ltr">TT_BACKUP_FILE_INCREMENTAL</code>: Performs an incremental file backup to the backup path specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> and <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> parameters, if that backup path contains an incremental-enabled backup of the database. Otherwise, an error is returned.</p>
</li>
<li>
<p><code dir="ltr">TT_BACKUP_FILE_INCR_OR_FULL</code>: Performs an incremental file backup to the backup path specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> and <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> parameters of that backup path contains an incremental-enabled backup of the database. Otherwise, it performs a full file backup of the database and marks it incremental enabled.</p>
</li>
<li>
<p><code dir="ltr">TT_BACKUP_STREAM_FULL</code>: Performs a stream backup to the stream specified by the <code dir="ltr"><span class="codeinlineitalic">stream</span></code> parameter.</p>
</li>
<li>
<p><code dir="ltr">TT_BACKUP__INCREMENTAL_STOP</code>: Does not perform a backup. Disables incremental backups for the backup path specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> and <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> parameters. This prevents transaction log files from accumulating for an incremental backup.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">atomic</span></code></td>
<td class="cellalignment4368" headers="r5c1-t5 r1c2-t5"><code dir="ltr">ttBooleanType</code></td>
<td class="cellalignment4368" headers="r5c1-t5 r1c3-t5">Specifies the disposition of an existing backup with the same <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> and <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> while the new backup is being created.
<p>This parameter has an effect only on full file backups when there is an existing backup with the same <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> and <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code>. It is ignored for incremental backups because they augment, rather than replace, an existing backup. It is ignored for stream backups because they write to the given stream, ignoring the <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> and <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> parameters.</p>
<p>The following are valid values:</p>
<ul>
<li>
<p><code dir="ltr">TT_FALSE</code>: The existing backup is destroyed before the new backup begins. If the new backup fails to complete, neither the new, incomplete, backup nor the existing backup can be used to restore the database. This option should be used only when the database is being backed up for the first time, when there is another backup of the database that uses a different <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> or <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code>, or when the application can tolerate a window of time (typically tens of minutes long for large databases) during which no backup of the database exists.</p>
</li>
<li>
<p><code dir="ltr">TT_TRUE</code>: The existing backup is destroyed only after the new backup has completed successfully. If the new backup fails to complete, the old backup is retained and can be used to restore the database. If there is an existing backup with the same <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> and <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code>, the use of this option ensures that there is no window of time during which neither the existing backup nor the new backup is available for restoring the database, and it ensures that the existing backup is destroyed only if it has been successfully superseded by the new backup. However, it does require enough disk space for both the existing and new backups to reside in the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> at the same time.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">backupDir</span></code></td>
<td class="cellalignment4368" headers="r6c1-t5 r1c2-t5"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r6c1-t5 r1c3-t5">Specifies the backup directory for file backups. It is ignored for stream backups. Otherwise it must be non-null.
<p>For <code dir="ltr">TT_BACKUP_INCREMENTAL_STOP</code>, it specifies the directory portion of the backup path that is to be disabled.</p>
<p>For <code dir="ltr">TT_BACKUP_INCREMENTAL_STOP</code> or a file backup, an error is returned if <code dir="ltr">NULL</code> is specified.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">baseName</span></code></td>
<td class="cellalignment4368" headers="r7c1-t5 r1c2-t5"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r7c1-t5 r1c3-t5">Specifies the file prefix for the backup files in the backup directory specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> parameter for file backups.
<p>It is ignored for stream backups.</p>
<p>If <code dir="ltr">NULL</code> is specified for this parameter, the file prefix for the backup files is the file name portion of the <code dir="ltr">DataStore</code> attribute in the ODBC definition of the database.</p>
<p>For <code dir="ltr">TT_BACKUP_INCREMENTAL_STOP</code>, this parameter specifies the basename portion of the backup path that is to be disabled.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t5" headers="r1c1-t5"><code dir="ltr"><span class="codeinlineitalic">stream</span></code></td>
<td class="cellalignment4368" headers="r8c1-t5 r1c2-t5"><code dir="ltr">ttUtFileHandle</code></td>
<td class="cellalignment4368" headers="r8c1-t5 r1c3-t5">For stream backups, this parameter specifies the stream to which the backup is to be written.
<p>On UNIX, it is an integer file descriptor that can be written to by using <code dir="ltr">write(2)</code>. Pass 1 to write the backup to <code dir="ltr">stdout</code>.</p>
<p>On Windows, it is a handle that can be written to using <code dir="ltr">WriteFile</code>. Pass the result of <code dir="ltr">GetStdHandle(STD_OUTPUT_HANDLE)</code> to write the backup to the standard output.</p>
<p>This parameter is ignored for file backups.</p>
<p>The application can pass <code dir="ltr">TTUTIL_INVALID_FILE_HANDLE</code> for this parameter.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref493"></a>Example</p>
<p>This example backs up the database for the <code dir="ltr">payroll</code> DSN into <code dir="ltr">C:\backup</code>.</p>
<pre dir="ltr">ttUtilHandle  utilHandle;
int           rc;
rc = ttBackup (utilHandle,  &#34;DSN=payroll&#34;, TT_BACKUP_FILE_FULL,
     TT_TRUE, &#34;c:\\backup&#34;, NULL, TTUTIL_INVALID_FILE_HANDLE);
</pre>
<p>Upon successful backup, all files are created in the <code dir="ltr">C:\backup</code> directory.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref494"></a>Note</p>
<p>Each database supports only eight incremental-enabled backups.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref495"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDDIBCI">ttRestore</a></code><br/>
<a class="olink TTREF323" href="../TTREF/util.htm#TTREF323">&#34;ttBackup&#34;</a> and <a class="olink TTREF363" href="../TTREF/util.htm#TTREF363">&#34;ttRestore&#34;</a> utilities in <span class="italic">Oracle TimesTen In-Memory Database Reference</span></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCGAAD"></a>
<div id="TTCDV374" class="refsect1">
<h2 class="refsect1">tt<a id="sthref496"></a><a id="sthref497"></a><a id="sthref498"></a><a id="sthref499"></a>DestroyDataStore</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref500"></a>Description</p>
<p>Destroys a database, including all checkpoint files, transaction logs and daemon catalog entries corresponding to the database specified by the connection string. It does not delete the DSN itself defined in the <code dir="ltr">sys.odbc.ini</code> or user <code dir="ltr">odbc.ini</code> file on the supported UNIX platforms or in Windows registry on the supported Windows platforms.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref501"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref502"></a>Syntax</p>
<pre dir="ltr">ttDestroyDataStore (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>,
                    unsigned int <span class="italic">timeout</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref503"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttDestroyDataStore parameters" summary="This table contains descriptions of the parameters of the ttDestroyDataStore C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t6">Parameter</th>
<th class="cellalignment4367" id="r1c2-t6">Type</th>
<th class="cellalignment4367" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t6" headers="r1c1-t6"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t6 r1c2-t6"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t6 r1c3-t6">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t6" headers="r1c1-t6"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t6 r1c2-t6"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t6 r1c3-t6">This is a null-terminated string specifying the connection string that describes the database to be destroyed. All attributes in this connection string, except the DSN and the <code dir="ltr">DataStore</code> attribute, are ignored.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t6" headers="r1c1-t6"><code dir="ltr"><span class="codeinlineitalic">timeout</span></code></td>
<td class="cellalignment4368" headers="r4c1-t6 r1c2-t6"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r4c1-t6 r1c3-t6">Specifies the number of times to retry before returning to the caller. <code dir="ltr">ttDestroyDataStore</code> continually retries the destroy operation every second until it is successful or the timeout is reached. This is useful in those situations where the destroy fails due to some temporary condition, such as when the database is in use.
<p>No retry is performed if this parameter value is 0.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref504"></a>Example</p>
<p>This example destroys a database defined by the <code dir="ltr">payroll</code> DSN, consisting of files <code dir="ltr">C:\dsns\payroll.ds0</code>, <code dir="ltr">C:\dsns\payroll.ds1</code>, and several transaction log files <code dir="ltr">C:\dsns\payroll.log</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>.</p>
<pre dir="ltr">char            errBuff [256];
int             rc;
unsigned int    retCode;
ttUtilErrType   retType;
ttUtilHandle    utilHandle;
...
...
rc = ttDestroyDataStore (utilHandle, &#34;DSN=payroll&#34;, 30);
if (rc == TTUTIL_SUCCESS)
   printf (&#34;Datastore payroll successfully destroyed.\n&#34;);
else if (rc == TTUTIL_INVALID_HANDLE)
   printf (&#34;TimesTen utility library handle is invalid.\n&#34;);
else
  while ((rc = ttUtilGetError (utilHandle, 0, &amp;retCode,
           &amp;retType, errBuff, sizeof (errBuff), NULL)) !=
           TTUTIL_NODATA)
    {
  ...
  ...
}
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCAAJJ"></a>
<div id="TTCDV375" class="refsect1">
<h2 class="refsect1">tt<a id="sthref505"></a><a id="sthref506"></a><a id="sthref507"></a><a id="sthref508"></a>DestroyDataStoreForce</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref509"></a>Description</p>
<p>Destroys a database, including all checkpoint files, transaction logs and daemon catalog entries corresponding to the database specified by the connection string. It does not delete the DSN itself defined in the <code dir="ltr">sys.odbc.ini</code> or user <code dir="ltr">odbc.ini</code> file on the supported UNIX platforms or in the Windows registry on supported Windows platforms.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref510"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref511"></a>Syntax</p>
<pre dir="ltr">ttDestroyDataStoreForce (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connstr</span>,
                         unsigned int <span class="italic">timeout</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref512"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttDestroyDataStoreForce parameters" summary="This table contains descriptions of the parameters of the ttDestroyDataStoreForce C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t7">Parameter</th>
<th class="cellalignment4367" id="r1c2-t7">Type</th>
<th class="cellalignment4367" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t7" headers="r1c1-t7"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t7 r1c2-t7"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t7 r1c3-t7">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t7" headers="r1c1-t7"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t7 r1c2-t7"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t7 r1c3-t7">This is a null-terminated string specifying the connection string that describes the database to be destroyed. All attributes in this connection string, except the DSN and the <code dir="ltr">DataStore</code> attribute, are ignored.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t7" headers="r1c1-t7"><code dir="ltr"><span class="codeinlineitalic">timeout</span></code></td>
<td class="cellalignment4368" headers="r4c1-t7 r1c2-t7"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r4c1-t7 r1c3-t7">Specifies the number of seconds to retry before returning to the caller. The <code dir="ltr">ttDestroyDataStoreForce</code> utility continually retries the destroy operation every second until it is successful or the timeout is reached. This is useful when the destroy fails due to some temporary condition, such as when the database is in use.
<p>No retry is performed if this parameter value is 0.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref513"></a>Example</p>
<p>This example destroys a database defined by the <code dir="ltr">payroll</code> DSN, consisting of files <code dir="ltr">C:\dsns\payroll.ds0</code>, <code dir="ltr">C:\dsns\payroll.ds1</code>, and several transaction log files <code dir="ltr">C:\dsns\payroll.log</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>.</p>
<pre dir="ltr">char              errBuff [256];
int               rc;
unsigned int      retCode;
ttUtilErrType     retType;
ttUtilHandle      utilHandle;
...
...
rc = ttDestroyDataStoreForce (utilHandle, &#34;DSN=payroll&#34;, 30);
if (rc == TTUTIL_SUCCESS)
  printf (&#34;Datastore payroll successfully destroyed.\n&#34;);
else if (rc == TTUTIL_INVALID_HANDLE)
  printf (&#34;TimesTen utility library handle is invalid.\n&#34;);
else
  while ((rc = ttUtilGetError (utilHandle, 0, &amp;retCode,
                               &amp;retType, errBuff, sizeof (errBuff), NULL)) !=
                               TTUTIL_NODATA)
    {
  ...
  ...
}
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDGCCJI"></a>
<div id="TTCDV376" class="refsect1">
<h2 class="refsect1">tt<a id="sthref514"></a><a id="sthref515"></a><a id="sthref516"></a><a id="sthref517"></a>RamGrace</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref518"></a>Description</p>
<p>Specifies the number of seconds the database specified by the connection string is kept in RAM by TimesTen after the last application disconnects from the database. TimesTen then unloads the database. This grace period can be set or reset at any time but is only in effect if the RAM policy is <code dir="ltr">TT_RAMPOL_INUSE</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref519"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref520"></a>Syntax</p>
<pre dir="ltr">ttRamGrace (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>, unsigned int <span class="italic">seconds</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref521"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRamGrace parameters" summary="This table contains descriptions of the parameters of the ttRamGrace C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t8">Parameter</th>
<th class="cellalignment4367" id="r1c2-t8">Type</th>
<th class="cellalignment4367" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t8" headers="r1c1-t8"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t8 r1c2-t8"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t8 r1c3-t8">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t8" headers="r1c1-t8"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t8 r1c2-t8"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t8 r1c3-t8">This is a null-terminated string specifying a connection string that describes the database for which the RAM grace period is set.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t8" headers="r1c1-t8"><code dir="ltr"><span class="codeinlineitalic">seconds</span></code></td>
<td class="cellalignment4368" headers="r4c1-t8 r1c2-t8"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r4c1-t8 r1c3-t8">Specifies the number of seconds TimesTen keeps the database in RAM after the last application disconnects from the database. TimesTen then unloads the database.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref522"></a>Example</p>
<p>This example sets the RAM grace period of 10 seconds for the <code dir="ltr">payroll</code> DSN.</p>
<pre dir="ltr">ttUtilHandle   utilHandle;
int            rc;
rc = ttRamGrace (utilHandle, &#34;DSN=payroll&#34;, 10);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref523"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDIAFGF">ttRamLoad</a></code><br/>
<code dir="ltr"><a href="#CHDBIIAE">ttRamPolicy</a></code><br/>
<code dir="ltr"><a href="#CHDBHEGG">ttRamUnload</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIAFGF"></a>
<div id="TTCDV377" class="refsect1">
<h2 class="refsect1">tt<a id="sthref524"></a><a id="sthref525"></a><a id="sthref526"></a><a id="sthref527"></a>RamLoad</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref528"></a>Description</p>
<p>Causes TimesTen to load the database specified by the connection string into the system RAM. For a permanent database, a call to <code dir="ltr">ttRamLoad</code> is valid only when <code dir="ltr">RamPolicy</code> is set to <code dir="ltr">TT_RAMPOL_MANUAL</code>. For a temporary database, a call to <code dir="ltr">ttRamLoad</code> loads the database into RAM.</p>
<p>Refer to <a class="olink TTREF281" href="../TTREF/proced.htm#TTREF281">&#34;ttRamPolicySet&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> or to <code dir="ltr"><a href="#CHDBIIAE">ttRamPolicy</a></code> for related information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref529"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref530"></a>Syntax</p>
<pre dir="ltr">ttRamLoad (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref531"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRamLoad parameters" summary="This table contains descriptions of the parameters of the ttRamLoad C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t9">Parameter</th>
<th class="cellalignment4367" id="r1c2-t9">Type</th>
<th class="cellalignment4367" id="r1c3-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t9 r1c2-t9"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t9 r1c3-t9">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t9 r1c2-t9"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t9 r1c3-t9">This is a null-terminated string specifying a connection string that describes the database to be loaded into RAM.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref532"></a>Example</p>
<p>This example loads the database for the <code dir="ltr">payroll</code> DSN.</p>
<pre dir="ltr">ttUtilHandle   utilHandle;
int            rc;
rc = ttRamLoad (utilHandle, &#34;DSN=payroll&#34;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref533"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDGCCJI">ttRamGrace</a></code><br/>
<code dir="ltr"><a href="#CHDBIIAE">ttRamPolicy</a></code><br/>
<code dir="ltr"><a href="#CHDBHEGG">ttRamUnload</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBIIAE"></a>
<div id="TTCDV378" class="refsect1">
<h2 class="refsect1">tt<a id="sthref534"></a><a id="sthref535"></a><a id="sthref536"></a><a id="sthref537"></a>RamPolicy</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref538"></a>Description</p>
<p>Defines the policy used to determine when TimesTen loads the database specified by the connection string into the system RAM.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref539"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref540"></a>Syntax</p>
<pre dir="ltr">ttRamPolicy (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>,
             ttRamPolicyType <span class="italic">policy</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref541"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRamPolicy parameters" summary="This table contains descriptions of the parameters of the ttRamPolicy C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t10">Parameter</th>
<th class="cellalignment4367" id="r1c2-t10">Type</th>
<th class="cellalignment4367" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t10" headers="r1c1-t10"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t10 r1c2-t10"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t10 r1c3-t10">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t10" headers="r1c1-t10"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t10 r1c2-t10"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t10 r1c3-t10">This is a null-terminated string specifying a connection string that describes the database for which the RAM policy is to be set.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t10" headers="r1c1-t10"><code dir="ltr"><span class="codeinlineitalic">policy</span></code></td>
<td class="cellalignment4368" headers="r4c1-t10 r1c2-t10"><code dir="ltr">ttRamPolicyType</code></td>
<td class="cellalignment4368" headers="r4c1-t10 r1c3-t10">Specifies the policy used to determine when TimesTen loads the specified database into system RAM. Valid values are the following:
<ul>
<li>
<p><code dir="ltr">TT_RAMPOL_ALWAYS</code>: Specifies that the database should always remain in RAM.</p>
</li>
<li>
<p><code dir="ltr">TT_RAMPOL_MANUAL</code>: Specifies that the database can be loaded into RAM explicitly using either the <code dir="ltr"><a href="#CHDIAFGF">ttRamLoad</a></code> C function or the <code dir="ltr">ttAdmin</code> <code dir="ltr">-ramLoad</code> command. Similarly, the database can be unloaded from RAM explicitly by using <code dir="ltr"><a href="#CHDBHEGG">ttRamUnload</a></code> C function or using <code dir="ltr">ttAdmin</code> <code dir="ltr">-ramUnload</code> command.</p>
</li>
<li>
<p><code dir="ltr">TT_RAMPOL_INUSE</code>: Specifies that the database is to be loaded into RAM when an application wants to connect to the database. This RAM policy may be further modified using the <code dir="ltr"><a href="#CHDGCCJI">ttRamGrace</a></code> C function or using the <code dir="ltr">ttAdmin</code> <code dir="ltr">-ramGrace</code> command.</p>
</li>
</ul>
<p>If you do not explicitly set the RAM policy for the specified database, the default RAM policy is <code dir="ltr">TT_RAMPOL_INUSE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref542"></a>Example</p>
<p>This example sets the RAM policy to manual for the <code dir="ltr">payroll</code> DSN.</p>
<pre dir="ltr">ttUtilHandle   utilHandle;
int            rc;
rc = ttRamPolicy (utilHandle, &#34;DSN=payroll&#34;, TT_RAMPOL_MANUAL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref543"></a>Note</p>
<p>The policy cannot be set for a temporary database.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref544"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDGCCJI">ttRamGrace</a></code><br/>
<code dir="ltr"><a href="#CHDIAFGF">ttRamLoad</a></code><br/>
<code dir="ltr"><a href="#CHDBHEGG">ttRamUnload</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBHEGG"></a>
<div id="TTCDV379" class="refsect1">
<h2 class="refsect1">tt<a id="sthref545"></a><a id="sthref546"></a><a id="sthref547"></a><a id="sthref548"></a>RamUnload</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref549"></a>Description</p>
<p>Causes TimesTen to unload the database specified by the connection string from the system RAM if the TimesTen RAM policy is set to <code dir="ltr">manual</code>. For a permanent database, this call is valid only when RAM policy is set to <code dir="ltr">TT_RAMPOL_MANUAL</code>. For a temporary database, a call to <code dir="ltr">ttRamUnload</code> always tries to unload the database from RAM because RAM policy cannot be set for such a database.</p>
<p>Refer to <a class="olink TTREF281" href="../TTREF/proced.htm#TTREF281">&#34;ttRamPolicySet&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span> or to <code dir="ltr"><a href="#CHDBIIAE">ttRamPolicy</a></code> for related information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref550"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref551"></a>Syntax</p>
<pre dir="ltr">ttRamUnload (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref552"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRamUnload parameters" summary="This table contains descriptions of the parameters of the ttRamUnload C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t11">Parameter</th>
<th class="cellalignment4367" id="r1c2-t11">Type</th>
<th class="cellalignment4367" id="r1c3-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t11" headers="r1c1-t11"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t11 r1c2-t11"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t11 r1c3-t11">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t11" headers="r1c1-t11"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t11 r1c2-t11"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t11 r1c3-t11">This is a null-terminated string specifying a connection string for the database to be unloaded from RAM.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref553"></a>Example</p>
<p>This example unloads the database from RAM for the <code dir="ltr">payroll</code> DSN.</p>
<pre dir="ltr">ttUtilHandle   utilHandle;
int            rc;
rc = ttRamUnload (utilHandle, &#34;DSN=payroll&#34;);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref554"></a>Notes</p>
<p>When using this function with a temporary database, TimesTen always attempts to unload the database.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref555"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDGCCJI">ttRamGrace</a></code><br/>
<code dir="ltr"><a href="#CHDIAFGF">ttRamLoad</a></code><br/>
<code dir="ltr"><a href="#CHDBIIAE">ttRamPolicy</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDGFGB"></a>
<div id="TTCDV380" class="refsect1">
<h2 class="refsect1">tt<a id="sthref556"></a><a id="sthref557"></a><a id="sthref558"></a><a id="sthref559"></a>RepDuplicateEx</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref560"></a>Description</p>
<p>Creates a replica of a remote database on the local system. The process is initiated from the receiving local system. From there, a connection is made to the remote source database to perform the duplicate operation.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>This u<a id="sthref561"></a>tility has features to recover from a site failure by creating a disaster recovery (DR) read-only subscriber as part of the active standby pair replication scheme. See <a class="olink TTREP250" href="../TTREP/standbycache.htm#TTREP250">&#34;Using a disaster recovery subscriber in an active standby pair&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for additional information.</p>
</li>
<li>
<p>If the database does not use cache groups, the following items discussed below are not relevant: <code dir="ltr">cacheuid</code> and <code dir="ltr">cachepwd</code> data structure elements; <code dir="ltr">TT_REPDUP_NOKEEPCG</code>, <code dir="ltr">TT_REPDUP_RECOVERINGNODE</code>, <code dir="ltr">TT_REPDUP_INITCACHEDR</code>, and <code dir="ltr">TT_REPDUP_DEFERCACHEUPDATE</code> flag values.</p>
</li>
<li>
<p>There are elements in the <code dir="ltr">ttRepDuplicateExArg</code> structure that is a parameter of this utility, <code dir="ltr"><span class="codeinlineitalic">localIP</span></code> and <code dir="ltr"><span class="codeinlineitalic">remoteIP</span></code>, that allow you to optionally specify which local network interface to use, which remote network interface to use, or both.</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref562"></a>Required privilege</p>
<p>Requires an instance administrator on the receiving local database (where <code dir="ltr">ttRepDuplicateEx</code> is called) and a user with <code dir="ltr">ADMIN</code> privilege on the remote source database. Create the internal user on the remote source store as necessary.</p>
<p>In addition, be aware of the following requirements to execute <code dir="ltr">ttRepDuplicateEx</code>:</p>
<ul>
<li>
<p>The operating system user name of the instance administrator on the receiving local database must be the same as the operating system user name of the instance administrator on the remote source database.</p>
</li>
<li>
<p>When <code dir="ltr">ttRepDuplicateEx</code> is called, the <code dir="ltr">uid</code> and <code dir="ltr">pwd</code> data structure elements must specify the user name and password of the user with <code dir="ltr">ADMIN</code> privilege on the remote source database. This user name is used to connect to the remote source database to perform the duplicate operation.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref563"></a>Syntax</p>
<pre dir="ltr">ttRepDuplicateEx (ttUtilHandle <span class="italic">handle</span>,
                  const char* <span class="italic">destConnStr</span>,
                  const char* <span class="italic">srcDatabase</span>,
                  const char* <span class="italic">remoteHost</span>,
                  ttRepDuplicateExArg* <span class="italic">arg</span>
                  )
typedef struct
{
      unsigned int <span class="italic">size</span>; /*set to size of(ttRepDuplicateExArg) */
      unsigned int <span class="italic">flags</span>;
      const char* <span class="italic">uid</span>;
      const char* <span class="italic">pwd</span>;
      const char* <span class="italic">pwdcrypt</span>;
      const char* <span class="italic">cacheuid</span>;
      const char* <span class="italic">cachepwd</span>;
      const char* <span class="italic">localHost</span>;
      int <span class="italic">truncListLen</span>;
      const char** <span class="italic">truncList</span>;
      int <span class="italic">dropListLen</span>;
      const char** <span class="italic">dropList</span>;
      int <span class="italic">maxkbytesPerSec</span>;
      int <span class="italic">remoteDaemonPort</span>;
      int <span class="italic">nThreads4initDR</span>;
      const char* <span class="italic">localIP</span>
      const char* <span class="italic">remoteIP</span>
      int <span class="italic">crsManaged</span>;
      /*new struct elements can only be added here at the end */
} ttRepDuplicateExArg
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref564"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRepDuplicateEx parameters" summary="This table contains descriptions of the parameters of the ttRepDuplicateEx C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t13">Parameter</th>
<th class="cellalignment4367" id="r1c2-t13">Type</th>
<th class="cellalignment4367" id="r1c3-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t13" headers="r1c1-t13"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t13 r1c2-t13"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t13 r1c3-t13">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t13" headers="r1c1-t13"><code dir="ltr"><span class="codeinlineitalic">destConnStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t13 r1c2-t13"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t13 r1c3-t13">This is a null-terminated string specifying the connection string for a local database into which the replica of the remote database is created.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t13" headers="r1c1-t13"><code dir="ltr"><span class="codeinlineitalic">srcDatabase</span></code></td>
<td class="cellalignment4368" headers="r4c1-t13 r1c2-t13"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r4c1-t13 r1c3-t13">This is a null-terminated string specifying the remote source database name. This name is the last component of the database path name.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t13" headers="r1c1-t13"><code dir="ltr"><span class="codeinlineitalic">remoteHost</span></code></td>
<td class="cellalignment4368" headers="r5c1-t13 r1c2-t13"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r5c1-t13 r1c3-t13">This is a null-terminated string specifying the TCP/IP host name of the system where the remote source database is located.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t13" headers="r1c1-t13"><code dir="ltr"><span class="codeinlineitalic">arg</span></code></td>
<td class="cellalignment4368" headers="r6c1-t13 r1c2-t13"><code dir="ltr">ttRepDuplicateExArg*</code></td>
<td class="cellalignment4368" headers="r6c1-t13 r1c3-t13">This is the address of the structure containing the desired <code dir="ltr">ttRepDuplicateEx</code> arguments. If <code dir="ltr">NULL</code> is passed in for <code dir="ltr"><span class="codeinlineitalic">arg</span></code> or if the value of <code dir="ltr"><span class="codeinlineitalic">arg</span></code> <code dir="ltr">-&gt;</code><code dir="ltr"><span class="codeinlineitalic">size</span></code> is invalid, TimesTen returns error 12230, &#34;<code dir="ltr">Invalid argument value</code>&#34;, and <code dir="ltr">TTUTIL_ERROR</code>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref565"></a>Struct elements</p>
<p>The <code dir="ltr">ttRepDuplicateExArg</code> structure contains these elements:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRepDuplicateEx struct elements" summary="This table contains descriptions of the elements of the ttRepDuplicateEx argument struct." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t14">Element</th>
<th class="cellalignment4367" id="r1c2-t14">Type</th>
<th class="cellalignment4367" id="r1c3-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">size</span></code></td>
<td class="cellalignment4368" headers="r2c1-t14 r1c2-t14"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r2c1-t14 r1c3-t14">Size
<p>This must be set up to <code dir="ltr"><span class="codeinlineitalic">sizeof</span></code> (<code dir="ltr">ttRepDuplicateExArg</code>).</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">flags</span></code></td>
<td class="cellalignment4368" headers="r3c1-t14 r1c2-t14"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r3c1-t14 r1c3-t14">Bit-wise union of values chosen from the list in the table of flag values</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">uid</span></code></td>
<td class="cellalignment4368" headers="r4c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r4c1-t14 r1c3-t14">User name of a user on the remote source database with <code dir="ltr">ADMIN</code> privileges
<p>This user name is used to connect to the remote source database to perform the duplicate operation.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">pwd</span></code></td>
<td class="cellalignment4368" headers="r5c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r5c1-t14 r1c3-t14">Password associated with the user ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">pwdcrypt</span></code></td>
<td class="cellalignment4368" headers="r6c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r6c1-t14 r1c3-t14">Encrypted password associated with the user ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">cacheuid</span></code></td>
<td class="cellalignment4368" headers="r7c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r7c1-t14 r1c3-t14">TimesTen Cache administration user ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">cachepwd</span></code></td>
<td class="cellalignment4368" headers="r8c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r8c1-t14 r1c3-t14">TimesTen Cache administration user password</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">localHost</span></code></td>
<td class="cellalignment4368" headers="r9c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r9c1-t14 r1c3-t14">Null-terminated string specifying the TCP/IP host name of the local system
<p>This element is ignored if <code dir="ltr"><span class="codeinlineitalic">remoteRepStart</span></code> is <code dir="ltr">TT_FALSE</code>. This explicitly identifies the local host. This parameter can be null, which is useful if the local host uses a nonstandard name such as an IP address.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">truncListLen</span></code></td>
<td class="cellalignment4368" headers="r10c1-t14 r1c2-t14"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r10c1-t14 r1c3-t14">Number of elements in the <code dir="ltr"><span class="codeinlineitalic">truncList</span></code></td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">truncList</span></code></td>
<td class="cellalignment4368" headers="r11c1-t14 r1c2-t14"><code dir="ltr">const char**</code></td>
<td class="cellalignment4368" headers="r11c1-t14 r1c3-t14">List of non-replicated tables to truncate after duplicate</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">dropListLen</span></code></td>
<td class="cellalignment4368" headers="r12c1-t14 r1c2-t14"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r12c1-t14 r1c3-t14">Number of elements in <code dir="ltr"><span class="codeinlineitalic">dropList</span></code></td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">dropList</span></code></td>
<td class="cellalignment4368" headers="r13c1-t14 r1c2-t14"><code dir="ltr">const char**</code></td>
<td class="cellalignment4368" headers="r13c1-t14 r1c3-t14">List of non-replicated tables to drop after the duplicate operation</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r14c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">maxkbytesPerSec</span></code></td>
<td class="cellalignment4368" headers="r14c1-t14 r1c2-t14"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r14c1-t14 r1c3-t14">Maximum kilobytes per second
<p>Setting this to a nonzero value specifies that the duplicate operation should not put more than <code dir="ltr"><span class="codeinlineitalic">maxkbytesPerSec</span></code> kilobytes of data per second onto the network. Setting it to 0 or a negative number indicates that the duplicate operation should not attempt to limit its bandwidth.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r15c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">remoteDaemonPort</span></code></td>
<td class="cellalignment4368" headers="r15c1-t14 r1c2-t14"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r15c1-t14 r1c3-t14">Remote daemon port
<p>Setting this to 0 results in the daemon port number for the target database being set to the port number used for the daemon on the source database.</p>
<p>This option cannot be used in duplicate operations for databases with automatic port configuration.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r16c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">nThreads4initDR</span></code></td>
<td class="cellalignment4368" headers="r16c1-t14 r1c2-t14"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r16c1-t14 r1c3-t14">Number of threads for initialization
<p>For the disaster recovery subscriber, this determines the number of threads used to initialize the Oracle database on the disaster recovery site.</p>
<p>After the TimesTen database is copied to the disaster recovery system, the Oracle database tables are truncated and the data from the TimesTen cache groups is copied to the Oracle database on the disaster recovery system.</p>
<p>Also see the <code dir="ltr">TT_REPDUP_INITCACHEDR</code> flag below.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r17c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">localIP</span></code></td>
<td class="cellalignment4368" headers="r17c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r17c1-t14 r1c3-t14">A null-terminated string specifying the alias or IP address (IPv4 or IPv6) of the local network interface to use for the duplicate operation. Set this to <code dir="ltr">NULL</code> if you do not want to specify the local network interface, in which case any compatible interface may be used.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r18c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">remoteIP</span></code></td>
<td class="cellalignment4368" headers="r18c1-t14 r1c2-t14"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r18c1-t14 r1c3-t14">A null-terminated string specifying the alias or IP address (IPv4 or IPv6) of the remote network interface to use for the duplicate operation. Set this to <code dir="ltr">NULL</code> if you do not want to specify the remote network interface, in which case any compatible interface may be used.
<p><span class="bold">Note</span>: You can specify both <code dir="ltr"><span class="codeinlineitalic">localIP</span></code> and <code dir="ltr"><span class="codeinlineitalic">remoteIP</span></code>, or either one by itself, or neither.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r19c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">crsManaged</span></code></td>
<td class="cellalignment4368" headers="r19c1-t14 r1c2-t14"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r19c1-t14 r1c3-t14">For internal use
<p>This should be set to 0 (default).</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>The <code dir="ltr">ttRepDuplicateExArg</code> <code dir="ltr"><span class="codeinlineitalic">flags</span></code> element is constructed from these values:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRepDuplicateEx flags element values" summary="This table contains descriptions of the values of the ttRepDuplicateEx flags element." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t15">Value</th>
<th class="cellalignment4367" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_NOFLAGS</code></td>
<td class="cellalignment4368" headers="r2c1-t15 r1c2-t15">Indicates no flags.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_COMPRESS</code></td>
<td class="cellalignment4368" headers="r3c1-t15 r1c2-t15">Enables compression of the data transmitted over the network for the duplicate operation.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_REPSTART</code></td>
<td class="cellalignment4368" headers="r4c1-t15 r1c2-t15">Directs <code dir="ltr">ttRepDuplicateEx</code> to set the replication state (with respect to the local database) in the remote database to the start state before the remote database is copied across the network. This ensures that all updates made after the duplicate operation are replicated from the remote database to the newly created or restored local database.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_RAMLOAD</code></td>
<td class="cellalignment4368" headers="r5c1-t15 r1c2-t15">Keeps the database in memory upon completion of the duplicate operation. It changes the RAM policy for the database to <code dir="ltr">manual</code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_DELXLA</code></td>
<td class="cellalignment4368" headers="r6c1-t15 r1c2-t15">Directs <code dir="ltr">ttRepDuplicateEx</code> to remove all the XLA bookmarks as part of the duplicate operation.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_NOKEEPCG</code></td>
<td class="cellalignment4368" headers="r7c1-t15 r1c2-t15">Do not preserve the cache group definitions; <code dir="ltr">ttRepDuplicateEx</code> converts all cache group tables into regular tables.
<p>By default, cache group definitions are preserved.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_RECOVERINGNODE</code></td>
<td class="cellalignment4368" headers="r8c1-t15 r1c2-t15">Specifies that <code dir="ltr">ttRepDuplicateEx</code> is being used to recover a failed node for a replication scheme that has an AWT or autorefresh cache group. Do not specify <code dir="ltr">TT_REPDUP_RECOVERINGNODE</code> when rolling out a new or modified replication scheme to a node. If <code dir="ltr">ttRepDuplicateEx</code> cannot update metadata stored on the Oracle database and all incremental autorefresh cache groups are replicated, then updates to the metadata are automatically deferred until the cache and replication agents are started.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_DEFERCACHEUPDATE</code></td>
<td class="cellalignment4368" headers="r9c1-t15 r1c2-t15">Forces the deferral of changes to metadata stored on the Oracle database until the cache and replication agents are started and the agents can connect to the Oracle database. Using this option can cause a full autorefresh if some incremental cache groups are not replicated or if <code dir="ltr">ttRepDuplicateEx</code> is being used for rolling out a new or modified replication scheme to a node.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t15" headers="r1c1-t15"><code dir="ltr">TT_REPDUP_INITCACHEDR</code></td>
<td class="cellalignment4368" headers="r10c1-t15 r1c2-t15">Initializes disaster recovery. You must also specify <code dir="ltr"><span class="codeinlineitalic">cacheuid</span></code> and <code dir="ltr"><span class="codeinlineitalic">cachepwd</span></code> in the data structure. Also see <code dir="ltr"><span class="codeinlineitalic">nThreads4initDR</span></code> in the data structure.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref566"></a>Example</p>
<p>This example creates a replica of a remote TimesTen DSN, <code dir="ltr">remote_payroll</code> with the database path name <code dir="ltr">C:\dsns\payroll</code>, to a local DSN <code dir="ltr">local_payroll</code>.</p>
<pre dir="ltr">ttUtilHandle utilHandle;
int rc;
ttRepDuplicateExArg arg;

memset(&amp;arg, 0, sizeof(arg));
arg.size = sizeof(ttRepDuplicateExArg);
arg.flags = TT_REPDUP_REPSTART | TT_REPDUP_DELXLA;
arg.localHost = &#34;mylocalhost&#34;;
arg.uid=&#34;myuid&#34;;
arg.pwd=&#34;mypwd&#34;;
rc=ttRepDuplicateEx(utilHandle,&#34;DSN=local_payroll&#34;,&#34;payroll&#34;,&#34;remotehost&#34;, &amp;arg);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref567"></a>See also</p>
<p><a class="olink TTREF353" href="../TTREF/util.htm#TTREF353"><code dir="ltr">ttRepAdmin</code></a> <code dir="ltr">-duplicate</code> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span></p>
<p>The following built-in procedures are described in <a class="olink TTREF213" href="../TTREF/proced.htm#TTREF213">&#34;Built-In Procedures&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
<br/>
<code dir="ltr">ttReplicationStatus</code><br/>
<code dir="ltr">ttRepPolicySet</code><br/>
<code dir="ltr">ttRepStop</code><br/>
<code dir="ltr">ttRepSubscriberStateSet</code><br/>
<code dir="ltr">ttRepSyncGet</code><br/>
<code dir="ltr">ttRepSyncSet</code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDIBCI"></a>
<div id="TTCDV381" class="refsect1">
<h2 class="refsect1">ttR<a id="sthref568"></a><a id="sthref569"></a><a id="sthref570"></a><a id="sthref571"></a>estore</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref572"></a>Description</p>
<p>Restores a database specified by the connection string from a backup that has been created using the <code dir="ltr"><a href="#CHDIFHAH">ttBackup</a></code> C function or <code dir="ltr">ttBackup</code> utility. If the database already exists, <code dir="ltr">ttRestore</code> does not overwrite it.</p>
<p>For an overview of the TimesTen backup and restore facility, see <a class="olink TTINS252" href="../TTINS/migrate.htm#TTINS252">&#34;Migration, Backup, and Restoration&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Installation Guide</span>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref573"></a>Required privilege</p>
<p>Instance administrator</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref574"></a>Syntax</p>
<pre dir="ltr">ttRestore (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>, 
           ttRestoreType <span class="italic">type</span>, const char* <span class="italic">backupDir</span>, 
           const char* <span class="italic">baseName</span>, ttUtFileHandle <span class="italic">stream</span>,
           unsigned <span class="italic">intflags</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref575"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttRestore parameters" summary="This table contains descriptions of the parameters of the ttRestore C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t16">Parameter</th>
<th class="cellalignment4367" id="r1c2-t16">Type</th>
<th class="cellalignment4367" id="r1c3-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t16 r1c2-t16"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t16 r1c3-t16">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t16 r1c2-t16"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r3c1-t16 r1c3-t16">This is a null-terminated string specifying a connection string that describes the database to be restored.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">type</span></code></td>
<td class="cellalignment4368" headers="r4c1-t16 r1c2-t16"><code dir="ltr">ttRestoreType</code></td>
<td class="cellalignment4368" headers="r4c1-t16 r1c3-t16">Indicates whether the database is to be restored from a file or a stream backup. Valid values are the following:
<ul>
<li>
<p><code dir="ltr">TT_RESTORE_FILE</code>: The database is to be restored from a file backup located at the backup path specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> and <code dir="ltr"><span class="codeinlineitalic">baseName</span></code> parameters.</p>
</li>
<li>
<p><code dir="ltr">TT_RESTORE_STREAM</code>: The database is to be restored from a stream backup read from the given stream.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">backupDir</span></code></td>
<td class="cellalignment4368" headers="r5c1-t16 r1c2-t16"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r5c1-t16 r1c3-t16">For <code dir="ltr">TT_RESTORE_FILE</code>, specifies the directory where the backup files are stored.
<p>For <code dir="ltr">TT_RESTORE_STREAM</code>, this parameter is ignored.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">baseName</span></code></td>
<td class="cellalignment4368" headers="r6c1-t16 r1c2-t16"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r6c1-t16 r1c3-t16">For <code dir="ltr">TT_RESTORE_FILE</code>, specifies the file prefix for the backup files in the backup directory specified by the <code dir="ltr"><span class="codeinlineitalic">backupDir</span></code> parameter.
<p>If <code dir="ltr">NULL</code> is specified, the file prefix for the backup files is the file name portion of the <code dir="ltr">DataStore</code> attribute of the database ODBC definition.</p>
<p>For <code dir="ltr">TT_RESTORE_STREAM</code>, this parameter is ignored.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">stream</span></code></td>
<td class="cellalignment4368" headers="r7c1-t16 r1c2-t16"><code dir="ltr">ttUtFileHandle</code></td>
<td class="cellalignment4368" headers="r7c1-t16 r1c3-t16">For <code dir="ltr">TT_RESTORE_STREAM</code>, specifies the stream from which the backup is to be read.
<p>On UNIX, it is an integer file descriptor that can be read from using <code dir="ltr">read(2)</code>. Pass 0 to read the backup from <code dir="ltr">stdin</code>.</p>
<p>On Windows, it is a handle that can be read from using <code dir="ltr">ReadFile</code>. Pass the result of <code dir="ltr">GetStdHandle(STD_INPUT_HANDLE)</code> to read from the standard input.</p>
<p>For <code dir="ltr">TT_RESTORE_FILE</code>, this parameter is ignored. The application can pass <code dir="ltr">TTUTIL_INVALID_FILE_HANDLE</code> for this parameter.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">flags</span></code></td>
<td class="cellalignment4368" headers="r8c1-t16 r1c2-t16"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r8c1-t16 r1c3-t16">This is reserved for future use. Set it to 0.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref576"></a>Example</p>
<p>This example restores the database for the <code dir="ltr">payroll</code> DSN from <code dir="ltr">C:\backup</code>.</p>
<pre dir="ltr">ttUtilHandle   utilHandle;
int            rc;

rc = ttRestore (utilHandle, &#34;DSN=payroll&#34;, TT_RESTORE_FILE,
              &#34;c:\\backup&#34;, NULL, TTUTIL_INVALID_FILE_HANDLE, 0);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref577"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDIFHAH">ttBackup</a></code><br/>
<a class="olink TTREF323" href="../TTREF/util.htm#TTREF323">&#34;ttBackup&#34;</a> and <a class="olink TTREF363" href="../TTREF/util.htm#TTREF363">&#34;ttRestore&#34;</a> utilities in <span class="italic">Oracle TimesTen In-Memory Database Reference</span></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCEEDA"></a>
<div id="TTCDV382" class="refsect1">
<h2 class="refsect1">tt<a id="sthref578"></a><a id="sthref579"></a><a id="sthref580"></a>UtilAllocEnv</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref581"></a>Description</p>
<p>Allocates memory for a TimesTen utility library environment handle and initializes the TimesTen utility library interface for use by an application. An application must call <code dir="ltr">ttUtilAllocEnv</code> before calling any other TimesTen utility library function. In addition, an application should call <code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code> when it is done using the TimesTen utility library interface.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref582"></a>Required privilege</p>
<p>None</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref583"></a>Syntax</p>
<pre dir="ltr">ttUtilAllocEnv (ttUtilHandle* <span class="italic">handle_ptr</span>, char* <span class="italic">errBuff</span>,
                unsigned int <span class="italic">buffLen</span>, unsigned int* <span class="italic">errLen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref584"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilAllocEnv parameters" summary="This table contains descriptions of the parameters of the ttUtilAllocEnv C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t17">Parameter</th>
<th class="cellalignment4367" id="r1c2-t17">Type</th>
<th class="cellalignment4367" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t17" headers="r1c1-t17"><code dir="ltr"><span class="codeinlineitalic">handle_ptr</span></code></td>
<td class="cellalignment4368" headers="r2c1-t17 r1c2-t17"><code dir="ltr">ttUtilHandle*</code></td>
<td class="cellalignment4368" headers="r2c1-t17 r1c3-t17">Specifies a pointer to storage where the TimesTen utility library environment handle is returned.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t17" headers="r1c1-t17"><code dir="ltr"><span class="codeinlineitalic">errBuff</span></code></td>
<td class="cellalignment4368" headers="r3c1-t17 r1c2-t17"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r3c1-t17 r1c3-t17">This is a user allocated buffer where error messages (if any) are returned. The returned error message is a null-terminated string. If the length of the error message exceeds <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code>-1, it is truncated to <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code>-1. If this parameter is null, <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code> is ignored and TimesTen does not return error messages to the calling application.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t17" headers="r1c1-t17"><code dir="ltr"><span class="codeinlineitalic">buffLen</span></code></td>
<td class="cellalignment4368" headers="r4c1-t17 r1c2-t17"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r4c1-t17 r1c3-t17">Specifies the size of the buffer <code dir="ltr"><span class="codeinlineitalic">errBuff</span></code>. If this parameter is 0, TimesTen does not return error messages to the calling application.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t17" headers="r1c1-t17"><code dir="ltr"><span class="codeinlineitalic">errLen</span></code></td>
<td class="cellalignment4368" headers="r5c1-t17 r1c2-t17"><code dir="ltr">unsigned int*</code></td>
<td class="cellalignment4368" headers="r5c1-t17 r1c3-t17">This is a pointer to an unsigned integer where the actual length of the error message is returned. If it is <code dir="ltr">NULL</code>, this parameter is ignored.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref585"></a>Return codes</p>
<p>This utility returns the following code as defined in <code dir="ltr">ttutillib.h</code>.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilAllocEnv return codes" summary="This table contains descriptions of the codes returned by the ttUtilAllocEnv C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t18">Code</th>
<th class="cellalignment4367" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t18" headers="r1c1-t18"><code dir="ltr">TTUTIL_SUCCESS</code></td>
<td class="cellalignment4368" headers="r2c1-t18 r1c2-t18">Returned upon success.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>Otherwise, it returns a TimesTen-specific error message as defined in <code dir="ltr">tt_errCode.h</code> and a corresponding error message in the buffer provided by the caller.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref586"></a>Example</p>
<p>This example allocates and initializes a TimesTen utility library environment handle with the name <code dir="ltr">utilHandle</code>.</p>
<pre dir="ltr">char           errBuff [256];
int            rc;
ttUtilHandle   utilHandle;

rc = ttUtilAllocEnv (&amp;utilHandle, errBuff, sizeof(errBuff), NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref587"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code><br/>
<code dir="ltr"><a href="#CHDDFBFI">ttUtilGetError</a></code><br/>
<code dir="ltr"><a href="#CHDGBFGD">ttUtilGetErrorCount</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFCJHG"></a>
<div id="TTCDV383" class="refsect1">
<h2 class="refsect1">tt<a id="sthref588"></a><a id="sthref589"></a><a id="sthref590"></a>UtilFreeEnv</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref591"></a>Description</p>
<p>Frees memory associated with the TimesTen utility library handle.</p>
<p>An application must call <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code> before calling any other TimesTen utility library function. In addition, an application should call <code dir="ltr">ttUtilFreeEnv</code> when it is done using the TimesTen utility library interface.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref592"></a>Required privilege</p>
<p>None</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref593"></a>Syntax</p>
<pre dir="ltr">ttUtilFreeEnv (ttUtilHandle <span class="italic">handle</span>, char* <span class="italic">errBuff</span>,
               unsigned int <span class="italic">buffLen</span>, unsigned int* <span class="italic">errLen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref594"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilFreeEnv parameters" summary="This table contains descriptions of the parameters of the ttUtilFreeEnv C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t19">Parameter</th>
<th class="cellalignment4367" id="r1c2-t19">Type</th>
<th class="cellalignment4367" id="r1c3-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t19 r1c2-t19"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t19 r1c3-t19">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">errBuff</span></code></td>
<td class="cellalignment4368" headers="r3c1-t19 r1c2-t19"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r3c1-t19 r1c3-t19">This is a user-allocated buffer where error messages are to be returned. The returned error message is a null-terminated string. If the length of the error message exceeds <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code>-1, it is truncated to <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code>-1. If this parameter is <code dir="ltr">NULL</code>, <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code> is ignored and TimesTen does not return error messages to the calling application.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">buffLen</span></code></td>
<td class="cellalignment4368" headers="r4c1-t19 r1c2-t19"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r4c1-t19 r1c3-t19">Specifies the size of the buffer <code dir="ltr"><span class="codeinlineitalic">errBuff</span></code>. If this parameter is 0, TimesTen does not return error messages to the calling application.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">errLen</span></code></td>
<td class="cellalignment4368" headers="r5c1-t19 r1c2-t19"><code dir="ltr">unsigned int*</code></td>
<td class="cellalignment4368" headers="r5c1-t19 r1c3-t19">This is a pointer to an unsigned integer where the actual length of the error message is returned. If it is <code dir="ltr">NULL</code>, this parameter is ignored.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref595"></a>Return codes</p>
<p>This utility returns the following codes as defined in <code dir="ltr">ttutillib.h</code>.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilFreeEnv return codes" summary="This table contains descriptions of the codes returned by the ttUtilFreeEnv C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t20">Code</th>
<th class="cellalignment4367" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t20" headers="r1c1-t20"><code dir="ltr">TTUTIL_SUCCESS</code></td>
<td class="cellalignment4368" headers="r2c1-t20 r1c2-t20">Returned upon success.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t20" headers="r1c1-t20"><code dir="ltr">TTUTIL_INVALID_HANDLE</code></td>
<td class="cellalignment4368" headers="r3c1-t20 r1c2-t20">Returned if an invalid utility library handle is specified.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>Otherwise, it returns a TimesTen-specific error message as defined in <code dir="ltr">tt_errCode.h</code> and a corresponding error message in the buffer provided by the caller.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref596"></a>Example</p>
<p>This example frees a TimesTen utility library environment handle named <code dir="ltr">utilHandle</code>.</p>
<pre dir="ltr">char           errBuff [256];
int            rc;
ttUtilHandle   utilHandle;

rc = ttUtilFreeEnv (utilHandle, errBuff, sizeof(errBuff), NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref597"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code><br/>
<code dir="ltr"><a href="#CHDDFBFI">ttUtilGetError</a></code><br/>
<code dir="ltr"><a href="#CHDGBFGD">ttUtilGetErrorCount</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDFBFI"></a>
<div id="TTCDV384" class="refsect1">
<h2 class="refsect1">tt<a id="sthref598"></a><a id="sthref599"></a><a id="sthref600"></a>UtilGetError</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref601"></a>Description</p>
<p>Retrieves the errors and warnings generated by the last call to the TimesTen C utility library functions excluding <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code> and <code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref602"></a>Required privilege</p>
<p>None</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref603"></a>Syntax</p>
<pre dir="ltr">ttUtilGetError (ttUtilHandle <span class="italic">handle</span>, unsigned int <span class="italic">errIndex</span>,
                unsigned int* <span class="italic">retCode</span>, ttUtilErrType* <span class="italic">retType</span>,
                char* <span class="italic">errbuff</span>, unsigned int <span class="italic">buffLen</span>,
                unsigned int* <span class="italic">errLen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref604"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilGetError parameters" summary="This table contains descriptions of the parameters of the ttUtilGetError C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t21">Parameter</th>
<th class="cellalignment4367" id="r1c2-t21">Type</th>
<th class="cellalignment4367" id="r1c3-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t21 r1c2-t21"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t21 r1c3-t21">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">errIndex</span></code></td>
<td class="cellalignment4368" headers="r3c1-t21 r1c2-t21"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r3c1-t21 r1c3-t21">Indicates error or warning record to be retrieved from the TimesTen utility library error array. Valid values are as follows:
<ul>
<li>
<p>0: Retrieve the next record from the utility library error array.</p>
</li>
<li>
<p>1...<code dir="ltr"><span class="codeinlineitalic">n</span></code>: Retrieve the specified record from the utility library error array, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the error count returned by the <code dir="ltr"><a href="#CHDGBFGD">ttUtilGetErrorCount</a></code> call.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">retCode</span></code></td>
<td class="cellalignment4368" headers="r4c1-t21 r1c2-t21"><code dir="ltr">unsigned int*</code></td>
<td class="cellalignment4368" headers="r4c1-t21 r1c3-t21">Returns the TimesTen-specific error or warning codes as defined in <code dir="ltr">tt_errCode.h</code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">retType</span></code></td>
<td class="cellalignment4368" headers="r5c1-t21 r1c2-t21"><code dir="ltr">ttUtilErrType*</code></td>
<td class="cellalignment4368" headers="r5c1-t21 r1c3-t21">Indicates whether the returned message is an error or warning. The following are valid return values:
<ul>
<li>
<p><code dir="ltr">TTUTIL_ERROR</code></p>
</li>
<li>
<p><code dir="ltr">TTUTIL_WARNING</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">errBuff</span></code></td>
<td class="cellalignment4368" headers="r6c1-t21 r1c2-t21"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r6c1-t21 r1c3-t21">This is a user allocated buffer where error messages (if any) are to be returned. The returned error message is a null-terminated string. If the length of the error message exceeds <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code>-1, it is truncated to <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code>-1. If this parameter is <code dir="ltr">NULL</code>, <code dir="ltr"><span class="codeinlineitalic">buffLen</span></code> is ignored and TimesTen does not return error messages to the calling application.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">buffLen</span></code></td>
<td class="cellalignment4368" headers="r7c1-t21 r1c2-t21"><code dir="ltr">unsigned int</code></td>
<td class="cellalignment4368" headers="r7c1-t21 r1c3-t21">Specifies the size of the buffer <code dir="ltr"><span class="codeinlineitalic">errBuff</span></code>. If this parameter is 0, TimesTen does not return error messages to the calling application.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">errLen</span></code></td>
<td class="cellalignment4368" headers="r8c1-t21 r1c2-t21"><code dir="ltr">unsigned int*</code></td>
<td class="cellalignment4368" headers="r8c1-t21 r1c3-t21">A pointer to an unsigned integer where the actual length of the error message is returned. If it is <code dir="ltr">NULL</code>, TimesTen ignores this parameter.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref605"></a>Return codes</p>
<p>This utility returns the following codes as defined in <code dir="ltr">ttutillib.h</code>.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilGetError return codes" summary="This table contains descriptions of the codes returned by the ttUtilGetError C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t22">Code</th>
<th class="cellalignment4367" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t22" headers="r1c1-t22"><code dir="ltr">TTUTIL_SUCCESS</code></td>
<td class="cellalignment4368" headers="r2c1-t22 r1c2-t22">Returned upon success.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t22" headers="r1c1-t22"><code dir="ltr">TTUTIL_INVALID_HANDLE</code></td>
<td class="cellalignment4368" headers="r3c1-t22 r1c2-t22">Returned if an invalid utility library handle is specified.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t22" headers="r1c1-t22"><code dir="ltr">TTUTIL_NODATA</code></td>
<td class="cellalignment4368" headers="r4c1-t22 r1c2-t22">Returned if no error or warming information is retrieved.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref606"></a>Example</p>
<p>This example retrieves all error or warning information after calling <code dir="ltr"><a href="#CHDCGAAD">ttDestroyDataStore</a></code> for the DSN named <code dir="ltr">payroll</code>.</p>
<pre dir="ltr">char            errBuff[256];
int             rc;
unsigned int    retCode;
ttUtilErrType   retType;
ttUtilHandle    utilHandle;

rc = ttDestroyDataStore (utilHandle, &#34;DSN=PAYROLL&#34;, 30);
if ((rc == TTUTIL_SUCCESS) 
  printf (&#34;Datastore payroll successfully destroyed.\n&#34;);
else if (rc == TTUTIL_INVALID_HANDLE)
  printf (&#34;TimesTen utility library handle is invalid.\n&#34;);
else
    while ((rc = ttUtilGetError (utilHandle, 0,
        &amp;retCode, &amp;retType, errBuff, sizeof (errBuff),
        NULL)) != TTUTIL_NODATA)
    {
...
...
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref607"></a>Notes</p>
<p>Each of the TimesTen C functions can potentially generate multiple errors and warnings for a single call from an application. To retrieve all of these errors and warnings, the application must make repeated calls to <code dir="ltr"><a href="#CHDDFBFI">ttUtilGetError</a></code> until it returns <code dir="ltr">TTUTIL_NODATA</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref608"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code><br/>
<code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code><br/>
<code dir="ltr"><a href="#CHDGBFGD">ttUtilGetErrorCount</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDGBFGD"></a>
<div id="TTCDV385" class="refsect1">
<h2 class="refsect1">tt<a id="sthref609"></a><a id="sthref610"></a><a id="sthref611"></a>UtilGetErrorCount</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref612"></a>Description</p>
<p>Retrieves the number of errors and warnings generated by the last call to the TimesTen C utility library functions, excluding <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code> and <code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code>. Each of these functions can potentially generate multiple errors and warnings for a single call from an application. To retrieve all of these errors and warnings, the application must make repeated calls to <code dir="ltr"><a href="#CHDDFBFI">ttUtilGetError</a></code> until it returns <code dir="ltr">TTUTIL_NODATA</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref613"></a>Required privilege</p>
<p>None</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref614"></a>Syntax</p>
<pre dir="ltr">ttUtilGetErrorCount (ttUtilHandle <span class="italic">handle</span>,
                     unsigned int* <span class="italic">errCount</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref615"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilGetErrorCount parameters" summary="This table contains descriptions of the parameters of the ttUtilGetErrorCount C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t23">Parameter</th>
<th class="cellalignment4367" id="r1c2-t23">Type</th>
<th class="cellalignment4367" id="r1c3-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t23" headers="r1c1-t23"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t23 r1c2-t23"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t23 r1c3-t23">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t23" headers="r1c1-t23"><code dir="ltr"><span class="codeinlineitalic">errCount</span></code></td>
<td class="cellalignment4368" headers="r3c1-t23 r1c2-t23"><code dir="ltr">unsigned int*</code></td>
<td class="cellalignment4368" headers="r3c1-t23 r1c3-t23">Indicates the number of errors and warnings generated by the last call, excluding <code dir="ltr">ttUtilAllocEnv</code> and <code dir="ltr">ttUtilFreeEnv</code>, to the TimesTen utility library.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref616"></a>Return codes</p>
<p>The utility returns the following codes as defined in <code dir="ltr">ttutillib.h</code>.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttUtilGetErrorCount return codes" summary="This table contains descriptions of the codes returned by the ttUtilGetErrorCount C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t24">Code</th>
<th class="cellalignment4367" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t24" headers="r1c1-t24"><code dir="ltr">TTUTIL_SUCCESS</code></td>
<td class="cellalignment4368" headers="r2c1-t24 r1c2-t24">Returned upon success.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t24" headers="r1c1-t24"><code dir="ltr">TTUTIL_INVALID_HANDLE</code></td>
<td class="cellalignment4368" headers="r3c1-t24 r1c2-t24">Returned if an invalid utility library handle is specified.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref617"></a>Example</p>
<p>This example retrieves the error and warning count information after calling <code dir="ltr"><a href="#CHDCGAAD">ttDestroyDataStore</a></code> for the DSN named <code dir="ltr">payroll</code>.</p>
<pre dir="ltr">int            rc;
unsigned int   errCount;
ttUtilHandle   utilHandle;

rc = ttDestroyDataStore (utilHandle, &#34;DSN=payroll&#34;, 30);
if (rc == TTUTIL_SUCCESS) 
  printf (&#34;Datastore payroll successfully destroyed.\n&#34;)

else if (rc == TTUTIL_INVALID_HANDLE) 
  printf (&#34;TimesTen utility library handle is invalid.\n&#34;);
else
{
rc = ttUtilGetErrorCount(utilHandle, &amp;errCount);
  ...
  ...
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref618"></a>Notes</p>
<p>Each of the TimesTen utility library functions can potentially generate multiple errors and warnings for a single call from an application. To retrieve all of these errors and warnings, the application must make repeated calls to <code dir="ltr">ttUtilGetError</code> until it returns <code dir="ltr">TTUTIL_NODATA</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref619"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code><br/>
<code dir="ltr"><a href="#CHDFCJHG">ttUtilFreeEnv</a></code><br/>
<code dir="ltr"><a href="#CHDDFBFI">ttUtilGetError</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCBIEJ"></a>
<div id="TTCDV386" class="refsect1">
<h2 class="refsect1">tt<a id="sthref620"></a><a id="sthref621"></a><a id="sthref622"></a>XactIdRollback</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref623"></a>Description</p>
<p>Rolls back the transaction indicated by the transaction ID that is specified. The intended user of <code dir="ltr">ttXactIdRollback</code> is the <code dir="ltr">ttXactAdmin</code> utility. However, programs that want to have a thread with the power to roll back the work of other threads must ensure that those threads call the <a id="sthref624"></a><a id="sthref625"></a><code dir="ltr">ttXactIdGet</code> built-in procedure before beginning work and put the results into a location known to the thread that wishes to roll back the transaction. (Refer to <a class="olink TTREF311" href="../TTREF/proced.htm#TTREF311">&#34;ttXactIdGet&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref626"></a>Required privilege</p>
<p><code dir="ltr">ADMIN</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref627"></a>Syntax</p>
<pre dir="ltr">ttXactIdRollback (ttUtilHandle <span class="italic">handle</span>, const char* <span class="italic">connStr</span>,
                  const char* <span class="italic">xactId</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref628"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXactIdRollback parameters" summary="This table contains descriptions of the parameters of the ttXactIdRollback C function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t25">Parameter</th>
<th class="cellalignment4367" id="r1c2-t25">Type</th>
<th class="cellalignment4367" id="r1c3-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t25" headers="r1c1-t25"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t25 r1c2-t25"><code dir="ltr">ttUtilHandle</code></td>
<td class="cellalignment4368" headers="r2c1-t25 r1c3-t25">Specifies the TimesTen utility library environment handle allocated using <code dir="ltr"><a href="#CHDCEEDA">ttUtilAllocEnv</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t25" headers="r1c1-t25"><code dir="ltr"><span class="codeinlineitalic">connStr</span></code></td>
<td class="cellalignment4368" headers="r3c1-t25 r1c2-t25"><code dir="ltr">const char**</code></td>
<td class="cellalignment4368" headers="r3c1-t25 r1c3-t25">Specifies the connection string of the database, which contains the transaction to be rolled back.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t25" headers="r1c1-t25"><code dir="ltr"><span class="codeinlineitalic">xactId</span></code></td>
<td class="cellalignment4368" headers="r4c1-t25 r1c2-t25"><code dir="ltr">const char*</code></td>
<td class="cellalignment4368" headers="r4c1-t25 r1c3-t25">Indicates the transaction ID for the transaction to be rolled back.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref629"></a>Example</p>
<p>This example rolls back a transaction with the ID 3.4567 in the database named <code dir="ltr">payroll</code>.</p>
<pre dir="ltr">char            errBuff [256];
int             rc;
unsigned int    retCode;
ttUtilErrType   retType;
ttUtilHandle    utilHandle;
...
rc = ttXactIdRollback (utilHandle, &#34;DSN=payroll&#34;, &#34;3.4567&#34;);
if (rc == TTUTIL_SUCCESS)
  printf (&#34;Transaction ID successfully rolled back.\n&#34;);
else if (rc == TTUTIL_INVALID_HANDLE)
  printf (&#34;TimesTen utility library handle is invalid.\n&#34;);
else
  while ((rc = ttUtilGetError (utilHandle, 0, &amp;retCode,
  &amp;retType, errBuff, sizeof (errBuff), NULL)) != TTUTIL_NODATA)
   {
  ...
}
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4359">
<tr>
<td class="cellalignment4368">
<table class="cellalignment4364">
<tr>
<td class="cellalignment4363"><a href="tuning.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4363"><a href="xla_ref.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4370">
<table class="cellalignment4362">
<tr>
<td class="cellalignment4363"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4363"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4363"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4363"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4363"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4363"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>