<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107476"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/XLA%20Reference"></a><title>XLA Reference</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1033"/>
<meta name="dcterms.created" content="2014-12-10T16:46:48Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database C Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E21637-09"/>
<meta name="dcterms.isVersionOf" content="TTCDV"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="c_ref.htm" title="Previous" type="text/html"/>
<link rel="Next" href="odbc_supported.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21637-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/15</span> <!-- End Header -->
<div id="TTCDV387" class="chapter"><a id="CHECFFJB"></a>
<h1 class="chapter"><span class="secnum">9</span> XLA Reference</h1>
<p>This chapter provides reference information for the Transaction Log API (XLA) described in <a href="xla_event.htm#BABDBAHB">Chapter 5, &#34;XLA and TimesTen Event Management&#34;</a>. It includes the following topics:</p>
<ul>
<li>
<p><a href="#CHEFHEJH">About XLA functions</a></p>
</li>
<li>
<p><a href="#CHEFIJCA">Summary of XLA functions by category</a></p>
</li>
<li>
<p><a href="#CHEFIEDB">XLA function reference</a></p>
</li>
<li>
<p><a href="#BABJABDH">XLA replication function reference</a></p>
</li>
<li>
<p><a href="#CHEIBHJA">C data structures used by XLA</a></p>
</li>
</ul>
<a id="CHEFHEJH"></a>
<div id="TTCDV388" class="sect1">
<h2 class="sect1">Ab<a id="sthref630"></a><a id="sthref631"></a>out XLA functions</h2>
<p>This section provides general information about XLA functions.</p>
<div id="TTCDV389" class="sect2"><a id="sthref632"></a>
<h3 class="sect2">About return codes</h3>
<p>All of the XLA API functions described in this chapter return a value of type <code dir="ltr">SQLRETURN</code>, which is defined by ODBC to have one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">SQL_SUCCESS</code></p>
</li>
<li>
<p><code dir="ltr">SQL_SUCCESS_WITH_INFO</code></p>
</li>
<li>
<p><code dir="ltr">SQL_NO_DATA_FOUND</code></p>
</li>
<li>
<p><code dir="ltr">SQL_ERROR</code></p>
</li>
</ul>
<p>See <a href="xla_event.htm#BABJGJCJ">&#34;Handling XLA errors&#34;</a> for information on handling XLA errors.</p>
</div>
<!-- class="sect2" -->
<div id="TTCDV390" class="sect2"><a id="sthref633"></a>
<h3 class="sect2">About parameter types (input, output, input/output)</h3>
<p>In the function descriptions:</p>
<ul>
<li>
<p>All parameters are input-only unless otherwise indicated.</p>
</li>
<li>
<p>Output parameters are prefixed with <code dir="ltr">OUT</code>.</p>
</li>
<li>
<p>Input/output parameters are prefixed with <code dir="ltr">IN OUT</code>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="TTCDV391" class="sect2"><a id="sthref634"></a>
<h3 class="sect2">About results output by functions</h3>
<p>Most routines in this API copy results to application buffers. Those few routines that produce pointers to buffers containing results are guaranteed as valid only until the next call with the same XLA handle.</p>
<p>Exceptions to this rule include the following.</p>
<ul>
<li>
<p>Buffers remain valid across calls to the <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> function that supplies diagnostic information.</p>
</li>
<li>
<p>Results returned by <code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code> remain valid until the next call to <code dir="ltr">ttXlaNextUpdate</code>.</p>
</li>
<li>
<p>For <code dir="ltr"><a href="#CHEDIAFE">ttXlaAcknowledge</a></code>, if the application must retain access to the buffers for a longer time, it must copy the information from the buffer returned by XLA to an application-owned buffer.</p>
</li>
</ul>
<p>Character string values in XLA are null-terminated, except for actual column values. Fixed-length <code dir="ltr">CHAR</code> columns are space-padded to their full length. <code dir="ltr">VARCHAR</code> columns have an explicit length encoded.</p>
<p>XLA uses the same data structures for both 32-bit and 64-bit platforms. The types <code dir="ltr">SQLUINTEGER</code> and <code dir="ltr">SQLUBIGINT</code> are used to refer to 32-bit and 64-bit integers unambiguously. Issues of alignment and padding are addressed by filling the type definition so that each <code dir="ltr">SQLUINTEGER</code> value is on a four-byte boundary and each <code dir="ltr">SQLUBIGINT</code> value is on an eight-byte boundary. For a description of storage requirements for other TimesTen data types, see <a class="olink TTOPR387" href="../TTOPR/comp.htm#TTOPR387">&#34;Understanding rows&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Operations Guide</span>.</p>
</div>
<!-- class="sect2" -->
<div id="TTCDV392" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref635"></a>
<h3 class="sect2">About required privileges</h3>
<p><a href="xla_event.htm#CIHIDBJJ">&#34;Access control impact on XLA&#34;</a> introduces the effects of TimesTen access control features on XLA functionality. Any XLA functionality requires the system privilege <code dir="ltr">XLA</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHEFIJCA"></a>
<div id="TTCDV393" class="sect1">
<h2 class="sect1">Sum<a id="sthref636"></a><a id="sthref637"></a>mary of XLA functions by category</h2>
<p>As described in <a href="xla_event.htm#BABDBAHB">Chapter 5, &#34;XLA and TimesTen Event Management&#34;</a>, TimesTen XLA can be used to detect updates on a database or as a toolkit to build your own replication solution.</p>
<p>This section categorizes the XLA functions based on their use and provides a brief description of each function. It includes the following categories:</p>
<ul>
<li>
<p><a href="#CHEFIAHE">XLA core functions</a></p>
</li>
<li>
<p><a href="#BABHJACC">XLA data type conversion functions</a></p>
</li>
<li>
<p><a href="#CHEGFGDG">XLA replication functions</a></p>
</li>
</ul>
<a id="CHEFIAHE"></a>
<div id="TTCDV394" class="sect2">
<h3 class="sect2">XLA core functions</h3>
<p>The following table lists all the XLA functions used in typical XLA operations, aside from data conversion functions which are listed separately below.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="XLA core functions" summary="This table contains descriptions of XLA core functions." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t2">Function</th>
<th class="cellalignment4367" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEDIAFE">ttXlaAcknowledge</a></code></td>
<td class="cellalignment4368" headers="r2c1-t2 r1c2-t2">Acknowledges receipt of one or more transaction update records from the transaction log.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEEFEGG">ttXlaClose</a></code></td>
<td class="cellalignment4368" headers="r3c1-t2 r1c2-t2">Closes the XLA handle opened by <code dir="ltr"><a href="#CHEFECEF">ttXlaPersistOpen</a></code>.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEDJIIG">ttXlaConvertCharType</a></code></td>
<td class="cellalignment4368" headers="r4c1-t2 r1c2-t2">Converts column data into the connection character set.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEFCIJE">ttXlaDeleteBookmark</a></code></td>
<td class="cellalignment4368" headers="r5c1-t2 r1c2-t2">Deletes a transaction log bookmark.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code></td>
<td class="cellalignment4368" headers="r6c1-t2 r1c2-t2">Retrieves error information.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEHCIFA">ttXlaErrorRestart</a></code></td>
<td class="cellalignment4368" headers="r7c1-t2 r1c2-t2">Resets error stack information.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code></td>
<td class="cellalignment4368" headers="r8c1-t2 r1c2-t2">Retrieves information about all the columns in the table.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEICHBA">ttXlaGetLSN</a></code></td>
<td class="cellalignment4368" headers="r9c1-t2 r1c2-t2">Retrieves the log record identifier of the current bookmark for a database.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEDDJIC">ttXlaGetTableInfo</a></code></td>
<td class="cellalignment4368" headers="r10c1-t2 r1c2-t2">Retrieves information about a table.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHECDAAF">ttXlaGetVersion</a></code></td>
<td class="cellalignment4368" headers="r11c1-t2 r1c2-t2">Retrieves the current version of XLA.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code></td>
<td class="cellalignment4368" headers="r12c1-t2 r1c2-t2">Retrieves a batch of updates from TimesTen.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEBCAAE">ttXlaNextUpdateWait</a></code></td>
<td class="cellalignment4368" headers="r13c1-t2 r1c2-t2">Retrieves a batch of updates from TimesTen. Waits for a specified time if no updates are available in the transaction log.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r14c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEFECEF">ttXlaPersistOpen</a></code></td>
<td class="cellalignment4368" headers="r14c1-t2 r1c2-t2">Initializes a handle to a database to access the transaction log.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r15c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEDFIEI">ttXlaSetLSN</a></code></td>
<td class="cellalignment4368" headers="r15c1-t2 r1c2-t2">Sets the log record identifier of the current bookmark for a database.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r16c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEHHHGI">ttXlaSetVersion</a></code></td>
<td class="cellalignment4368" headers="r16c1-t2 r1c2-t2">Sets the XLA version to be used.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r17c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEBGDFB">ttXlaTableByName</a></code></td>
<td class="cellalignment4368" headers="r17c1-t2 r1c2-t2">Finds the system and user table identifiers for a table given the table owner and name.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r18c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEHAAIF">ttXlaTableStatus</a></code></td>
<td class="cellalignment4368" headers="r18c1-t2 r1c2-t2">Sets and retrieves XLA status for a table.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r19c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEBAFEC">ttXlaTableVersionVerify</a></code></td>
<td class="cellalignment4368" headers="r19c1-t2 r1c2-t2">Checks whether the cached table definitions are compatible with the XLA record being processed.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r20c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHECBBBE">ttXlaVersionColumnInfo</a></code></td>
<td class="cellalignment4368" headers="r20c1-t2 r1c2-t2">Retrieves information about the columns in a table for which a change update record must be processed.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r21c1-t2" headers="r1c1-t2"><code dir="ltr"><a href="#CHEJCDEB">ttXlaVersionCompare</a></code></td>
<td class="cellalignment4368" headers="r21c1-t2 r1c2-t2">Compares two XLA versions.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>See <a href="xla_event.htm#BABIGHAJ">&#34;Writing an XLA event-handler application&#34;</a> for a discussion on how to use most of these functions.</p>
</div>
<!-- class="sect2" -->
<a id="BABHJACC"></a>
<div id="TTCDV547" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">XLA data type conversion functions</h3>
<p>The following table lists data type conversion functions.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="XLA data type conversion functions" summary="This table lists data type conversion functions that can be used by any XLA application." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t3">Function</th>
<th class="cellalignment4367" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEBBJGA">ttXlaDateToODBCCType</a></code></td>
<td class="cellalignment4368" headers="r2c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_DATE_TT</code> value to an ODBC C value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHECEIIC">ttXlaDecimalToCString</a></code></td>
<td class="cellalignment4368" headers="r3c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_DECIMAL_TT</code> value to a character string usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEECECB">ttXlaNumberToBigInt</a></code></td>
<td class="cellalignment4368" headers="r4c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a <code dir="ltr">SQLBIGINT</code> C value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEDEBGF">ttXlaNumberToCString</a></code></td>
<td class="cellalignment4368" headers="r5c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a character string usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEHCCAB">ttXlaNumberToDouble</a></code></td>
<td class="cellalignment4368" headers="r6c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a long floating point number value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEJBFAA">ttXlaNumberToInt</a></code></td>
<td class="cellalignment4368" headers="r7c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to an integer usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEDEHAG">ttXlaNumberToSmallInt</a></code></td>
<td class="cellalignment4368" headers="r8c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a <code dir="ltr">SQLSMALLINT</code> C value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEIDCJA">ttXlaNumberToTinyInt</a></code></td>
<td class="cellalignment4368" headers="r9c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a <code dir="ltr">SQLCHAR</code> C value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEHJJGF">ttXlaNumberToUInt</a></code></td>
<td class="cellalignment4368" headers="r10c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_NUMBER</code> value to an unsigned integer usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEHBFCG">ttXlaOraDateToODBCTimeStamp</a></code></td>
<td class="cellalignment4368" headers="r11c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_DATE</code> value to an ODBC timestamp usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEDABHC">ttXlaOraTimeStampToODBCTimeStamp</a></code></td>
<td class="cellalignment4368" headers="r12c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_TIMESTAMP</code> value to an ODBC timestamp usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#BABCFHDF">ttXlaRowidToCString</a></code></td>
<td class="cellalignment4368" headers="r13c1-t3 r1c2-t3">Converts a <code dir="ltr">ROWID</code> value to a character string value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r14c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHEDFIJH">ttXlaTimeToODBCCType</a></code></td>
<td class="cellalignment4368" headers="r14c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_TIME</code> value to an ODBC C value usable by applications.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r15c1-t3" headers="r1c1-t3"><code dir="ltr"><a href="#CHECCIIG">ttXlaTimeStampToODBCCType</a></code></td>
<td class="cellalignment4368" headers="r15c1-t3 r1c2-t3">Converts a <code dir="ltr">TTXLA_TIMESTAMP_TT</code> value to an ODBC C value usable by applications.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>For more information about XLA data types, see <a href="xla_event.htm#BABFCAFA">&#34;About XLA data types&#34;</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CHEGFGDG"></a>
<div id="TTCDV397" class="sect2">
<h3 class="sect2">XLA replication functions</h3>
<p>TimesTen replication as described in <a class="olink TTREP" href="../TTREP/toc.htm"><span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span></a> is sufficient for most customer needs; however, it is also possible to use XLA functions to replicate updates from one database to another. Implementing your own replication scheme on top of XLA in this way is fairly complicated, but can be considered if TimesTen replication is not feasible for some reason.</p>
<p>The following table lists functions used exclusively for XLA as a replication mechanism. (Reference information for these functions is in a separate section from other XLA functions, <a href="#BABJABDH">&#34;XLA replication function reference&#34;</a>.)</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="XLA replication functions" summary="This table contains descriptions of XLA replication functions." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t4">Function</th>
<th class="cellalignment4367" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t4" headers="r1c1-t4"><code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code></td>
<td class="cellalignment4368" headers="r2c1-t4 r1c2-t4">Applies the update to the database associated with the XLA handle.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t4" headers="r1c1-t4"><code dir="ltr"><a href="#CHEJAJEA">ttXlaCommit</a></code></td>
<td class="cellalignment4368" headers="r3c1-t4 r1c2-t4">Commits a transaction.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t4" headers="r1c1-t4"><code dir="ltr"><a href="#CHEHADAC">ttXlaGenerateSQL</a></code></td>
<td class="cellalignment4368" headers="r4c1-t4 r1c2-t4">Generates a SQL statement that expresses the effect of an update record.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t4" headers="r1c1-t4"><code dir="ltr"><a href="#CHEGHGGH">ttXlaLookup</a></code></td>
<td class="cellalignment4368" headers="r5c1-t4 r1c2-t4">Looks for an update record for a table with a specific key value.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t4" headers="r1c1-t4"><code dir="ltr"><a href="#CHECECCA">ttXlaRollback</a></code></td>
<td class="cellalignment4368" headers="r6c1-t4 r1c2-t4">Rolls back a transaction.</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t4" headers="r1c1-t4"><code dir="ltr"><a href="#CHECAIHJ">ttXlaTableCheck</a></code></td>
<td class="cellalignment4368" headers="r7c1-t4 r1c2-t4">Verifies that the named table in the table description received from the sending database is compatible with the receiving database.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>See <a href="xla_event.htm#BABDFIBJ">&#34;Using XLA as a replication mechanism&#34;</a> for a discussion on how to use these functions.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<div class="refentry"><a id="CHEFIEDB"></a>
<div id="TTCDV398" class="refsect1">
<h2 class="refsect1">XLA function reference</h2>
<p>This section provides reference information for XLA core functions and XLA data type conversion functions. The functions are listed in alphabetical order.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Functions used exclusively for XLA as a replication mechanism are documented in a separate section, <a href="#BABJABDH">&#34;XLA replication function reference&#34;</a>.</div>
<div id="TTCDV399" class="refsect2"><a id="CHEDIAFE"></a>
<h3 class="refsect2">t<a id="sthref638"></a><a id="sthref639"></a><a id="sthref640"></a><a id="sthref641"></a>tXlaAcknowledge</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref642"></a>Description</p>
<p>This function is used to acknowledge that one or more records have been read from the transaction log by the <code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code> or <code dir="ltr"><a href="#CHEBCAAE">ttXlaNextUpdateWait</a></code> function.</p>
<p>After you make this call, the bookmark is reset so that you cannot reread any of the previously returned records. Call <code dir="ltr">ttXlaAcknowledge</code> only when messages have been completely processed.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>The bookmark is only reset for the specified handle. Other handles in the system may still be able to access those earlier transactions.</p>
</li>
<li>
<p>The bookmark is reset even if there are no relevant update records to acknowledge.</p>
</li>
</ul>
</div>
<p>Note that <code dir="ltr">ttXlaAcknowledge</code> is an expensive operation that should be used only as necessary. Calling <code dir="ltr">ttXlaAcknowledge</code> more than once per reading of the transaction log file does not reduce the volume of the transaction log since XLA only purges transaction logs a file at a time. To detect when a new transaction log file is generated, you can find out which log file a bookmark is in by examining the <code dir="ltr">purgeLSN</code> (represented by the <code dir="ltr">PURGELSNHIGH</code> and <code dir="ltr">PURGELSNLOW</code> values) for the bookmark in the system table <code dir="ltr">SYS.TRANSACTION_LOG_API</code>. You can then call <code dir="ltr">ttXlaAcknowledge</code> to purge the old transaction log files. (Note that you must have <code dir="ltr">ADMIN</code> or <code dir="ltr">SELECT ANY TABLE</code> privilege to view this table.)</p>
<p>The second purpose of <code dir="ltr">ttXlaAcknowledge</code> is to ensure that the XLA application does not see the acknowledged records if it were to connect to a previously used bookmark by calling the <code dir="ltr"><a href="#CHEFECEF">ttXlaPersistOpen</a></code> function with the <code dir="ltr">XLAREUSE</code> option. If you intend to reuse a bookmark, call <code dir="ltr">ttXlaAcknowledge</code> to reset the bookmark position to the current record before calling <code dir="ltr"><a href="#CHEEFEGG">ttXlaClose</a></code>.</p>
<p>See <a href="xla_event.htm#BABHJGCD">&#34;Retrieving update records from the transaction log&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref643"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref644"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaAcknowledge(ttXlaHandle_h <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref645"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaAcknowledge parameters" summary="This table contains a description of the parameter for the ttXlaAcknowledge function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t7">Parameter</th>
<th class="cellalignment4367" id="r1c2-t7">Type</th>
<th class="cellalignment4367" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t7" headers="r1c1-t7"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t7 r1c2-t7"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t7 r1c3-t7">Transaction log handle</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref646"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref647"></a>Example</p>
<pre dir="ltr">rc = ttXlaAcknowledge(xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref648"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code><br/>
<code dir="ltr"><a href="#CHEBCAAE">ttXlaNextUpdateWait</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV401" class="refsect2"><a id="CHEEFEGG"></a>
<h3 class="refsect2"><a id="sthref649"></a><a id="sthref650"></a><a id="sthref651"></a><a id="sthref652"></a><a id="sthref653"></a>ttXlaClose</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref654"></a>Description</p>
<p>Closes an XLA handle that was opened by <code dir="ltr"><a href="#CHEFECEF">ttXlaPersistOpen</a></code>. See <a href="xla_event.htm#BABIFJIA">&#34;Terminating an XLA application&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref655"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref656"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaClose(ttXlaHandle_h <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref657"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaClose parameters" summary="This table contains a description of the parameter for the ttXlaclose function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t8">Parameter</th>
<th class="cellalignment4367" id="r1c2-t8">Type</th>
<th class="cellalignment4367" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t8" headers="r1c1-t8"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t8 r1c2-t8"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t8 r1c3-t8">ODBC handle for the database</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref658"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
<p>To close the XLA handle opened in the previous example, use the following call:</p>
<pre dir="ltr">rc = ttXlaClose(xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref659"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEFECEF">ttXlaPersistOpen</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV404" class="refsect2"><a id="CHEDJIIG"></a>
<h3 class="refsect2">ttXla<a id="sthref660"></a><a id="sthref661"></a>ConvertCharType</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref662"></a>Description</p>
<p>Converts the column data indicated by the <code dir="ltr"><span class="codeinlineitalic">colinfo</span></code> and <code dir="ltr"><span class="codeinlineitalic">tup</span></code> parameters into the connection character set associated with the transaction log handle and places the result in a buffer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref663"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref664"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaConvertCharType (ttXlaHandle_h <span class="italic">handle</span>,
                                ttXlaColDesc_t*  <span class="italic">colinfo</span>,
                                void* <span class="italic">tup</span>,
                                void* <span class="italic">buf</span>,
                                size_t <span class="italic">buflen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref665"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaConvertCharType parameters" summary="This table contains descriptions of the parameters for the ttXlaConvertCharType function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t9">Parameter</th>
<th class="cellalignment4367" id="r1c2-t9">Type</th>
<th class="cellalignment4367" id="r1c3-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t9 r1c2-t9"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t9 r1c3-t9">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">colinfo</span></code></td>
<td class="cellalignment4368" headers="r3c1-t9 r1c2-t9"><code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t9 r1c3-t9">Pointer to the buffer that holds the column descriptions</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">tup</span></code></td>
<td class="cellalignment4368" headers="r4c1-t9 r1c2-t9"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r4c1-t9 r1c3-t9">Data to be converted</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">buf</span></code></td>
<td class="cellalignment4368" headers="r5c1-t9 r1c2-t9"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r5c1-t9 r1c3-t9">Location where the converted data is placed</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t9" headers="r1c1-t9"><code dir="ltr"><span class="codeinlineitalic">buflen</span></code></td>
<td class="cellalignment4368" headers="r6c1-t9 r1c2-t9"><code dir="ltr">size_t</code></td>
<td class="cellalignment4368" headers="r6c1-t9 r1c3-t9">Size of the buffer where the converted data is placed</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref666"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV405" class="refsect2"><a id="CHEBBJGA"></a>
<h3 class="refsect2">t<a id="sthref667"></a><a id="sthref668"></a>tXlaDateToODBCCType</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref669"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_DATE_TT</code> value to an ODBC C value usable by applications. See <a href="xla_event.htm#BABIGJFI">&#34;Converting complex data types&#34;</a> for a discussion about using this function.</p>
<p>Call this function only on a column of data type <code dir="ltr">TTXLA_DATE_TT</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref670"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref671"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaDateToODBCCType(void* <span class="italic">fromData</span>,
                               out DATE_STRUCT* <span class="italic">returnData</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref672"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDateToODBCCType parameters" summary="This table contains descriptions of the parameters for the ttXlaDateToODBCCType function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t10">Parameter</th>
<th class="cellalignment4367" id="r1c2-t10">Type</th>
<th class="cellalignment4367" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t10" headers="r1c1-t10"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t10 r1c2-t10"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t10 r1c3-t10">Pointer to the date value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t10" headers="r1c1-t10"><code dir="ltr"><span class="codeinlineitalic">returnData</span></code></td>
<td class="cellalignment4368" headers="r3c1-t10 r1c2-t10"><code dir="ltr">DATE_STRUCT*</code></td>
<td class="cellalignment4368" headers="r3c1-t10 r1c3-t10">Pointer to storage allocated to hold the converted date</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref673"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV406" class="refsect2"><a id="CHECEIIC"></a>
<h3 class="refsect2">t<a id="sthref674"></a><a id="sthref675"></a>tXlaDecimalToCString</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref676"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_DECIMAL_TT</code> value to a string usable by applications. The scale and precision values can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function. The <code dir="ltr"><span class="codeinlineitalic">scale</span></code> parameter specifies the maximum number of digits after the decimal point. If the decimal value is larger than 1, the <code dir="ltr"><span class="codeinlineitalic">precision</span></code> parameter should specify the maximum number of digits before and after the decimal point. If the decimal value is less than 1, <code dir="ltr"><span class="codeinlineitalic">precision</span></code> equals <code dir="ltr"><span class="codeinlineitalic">scale</span></code>.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_DECIMAL_TT</code>. The data type can be obtained from the <code dir="ltr">ttXlaColDesc_t</code> structure returned by the <code dir="ltr">ttXlaGetColumnInfo</code> function.</p>
<p>See <a href="xla_event.htm#BABIGJFI">&#34;Converting complex data types&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref677"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref678"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaDecimalToCString(void* <span class="italic">fromData</span>,
                                out char* <span class="italic">returnData</span>,
                                SQLSMALLINT <span class="italic">precision</span>,
                                SQLSMALLINT <span class="italic">scale</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref679"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="tXlaDecimalToCString parameters" summary="This table contains descriptions of the parameters for the ttXlaDecimalToCString function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t11">Parameter</th>
<th class="cellalignment4367" id="r1c2-t11">Type</th>
<th class="cellalignment4367" id="r1c3-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t11" headers="r1c1-t11"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t11 r1c2-t11"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t11 r1c3-t11">Pointer to the decimal value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t11" headers="r1c1-t11"><code dir="ltr"><span class="codeinlineitalic">returnData</span></code></td>
<td class="cellalignment4368" headers="r3c1-t11 r1c2-t11"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r3c1-t11 r1c3-t11">Pointer to storage allocated to hold the converted string</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t11" headers="r1c1-t11"><code dir="ltr"><span class="codeinlineitalic">precision</span></code></td>
<td class="cellalignment4368" headers="r4c1-t11 r1c2-t11"><code dir="ltr">SQLSMALLINT</code></td>
<td class="cellalignment4368" headers="r4c1-t11 r1c3-t11">If <code dir="ltr"><span class="codeinlineitalic">fromData</span></code> is greater than 1, the maximum number of digits before and after the decimal point
<p>If <code dir="ltr"><span class="codeinlineitalic">fromData</span></code> is less than 1, same as scale</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t11" headers="r1c1-t11"><code dir="ltr"><span class="codeinlineitalic">scale</span></code></td>
<td class="cellalignment4368" headers="r5c1-t11 r1c2-t11"><code dir="ltr">SQLSMALLINT</code></td>
<td class="cellalignment4368" headers="r5c1-t11 r1c3-t11">Maximum number of digits after the decimal point</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref680"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref681"></a>Example</p>
<p>This example assumes you have obtained the <code dir="ltr"><span class="codeinlineitalic">offset</span></code>, <code dir="ltr"><span class="codeinlineitalic">precision</span></code>, and <code dir="ltr"><span class="codeinlineitalic">scale</span></code> values from a <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure and used the offset to obtain a decimal value, <code dir="ltr"><span class="codeinlineitalic">pColVal</span></code>, in a row returned in a transaction log record.</p>
<pre dir="ltr">char decimalData[50];
static ttXlaColDesc_t colDesc[255];

rc = ttXlaDecimalToCString(pColVal, (char*)&amp;decimalData,
                                     colDesc-&gt;precision, 
                                     colDesc-&gt;scale);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV407" class="refsect2"><a id="CHEFCIJE"></a>
<h3 class="refsect2">t<a id="sthref682"></a><a id="sthref683"></a><a id="sthref684"></a>tXlaDeleteBookmark</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref685"></a>Description</p>
<p>Deletes the bookmark associated with the specified transaction log handle. After the bookmark has been deleted, it is no longer accessible and its identifier may be reused for another bookmark. The deleted bookmark is no longer associated with the database handle and the effect is the same as having opened the connection with the <code dir="ltr">XLANONE</code> option.</p>
<p>If the bookmark is in use, it cannot be deleted until it is no longer in use.</p>
<p>See <a href="xla_event.htm#BABCFGIE">&#34;Deleting bookmarks&#34;</a> for a discussion about using this function.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>Do not confuse this with the TimesTen built-in procedure <code dir="ltr">ttXlaBookmarkDelete</code>, documented in <a class="olink TTREF313" href="../TTREF/proced.htm#TTREF313">&#34;ttXlaBookmarkDelete&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.</p>
</li>
<li>
<p>You cannot delete replicated bookmarks while the replication agent is running.</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref686"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref687"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaDeleteBookmark(ttXlaHandle_h <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref688"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDeleteBookmark parameters" summary="This table contains a description of the parameter for the ttXlaDeleteBookmark function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t13">Parameter</th>
<th class="cellalignment4367" id="r1c2-t13">Type</th>
<th class="cellalignment4367" id="r1c3-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t13" headers="r1c1-t13"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t13 r1c2-t13"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t13 r1c3-t13">Transaction log handle</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref689"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref690"></a>Example</p>
<p>Delete the bookmark for <code dir="ltr">xlahandle</code>:</p>
<pre dir="ltr">rc = ttXlaDeleteBookmark(xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref691"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEFECEF">ttXlaPersistOpen</a></code><br/>
<code dir="ltr"><a href="#CHEICHBA">ttXlaGetLSN</a></code><br/>
<code dir="ltr"><a href="#CHEDFIEI">ttXlaSetLSN</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV408" class="refsect2"><a id="CHEECIEI"></a>
<h3 class="refsect2"><a id="sthref692"></a><a id="sthref693"></a><a id="sthref694"></a>ttXlaError</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref695"></a>Description</p>
<p>Reports details of any errors encountered from the previous call on the given transaction log handle. Multiple errors may be returned through subsequent calls to <code dir="ltr">ttXlaError</code>. The error stack is cleared following each call to a function other than <code dir="ltr">ttXlaError</code> itself and <code dir="ltr"><a href="#CHEHCIFA">ttXlaErrorRestart</a></code>.</p>
<p>See <a href="xla_event.htm#BABJGJCJ">&#34;Handling XLA errors&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref696"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref697"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaError(ttXlaHandle_h <span class="italic">handle</span>,
                     out SQLINTEGER* <span class="italic">errCode</span>,
                     out char* <span class="italic">errMessage</span>,
                     SQLINTEGER <span class="italic">maxLen</span>,
                     out SQLINTEGER* <span class="italic">retLen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref698"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaError parameters" summary="This table contains descriptions of the parameters for the ttXlaError function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t14">Parameter</th>
<th class="cellalignment4367" id="r1c2-t14">Type</th>
<th class="cellalignment4367" id="r1c3-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t14 r1c2-t14"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t14 r1c3-t14">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">errCode</span></code></td>
<td class="cellalignment4368" headers="r3c1-t14 r1c2-t14"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r3c1-t14 r1c3-t14">Code of the error message to be copied into the <code dir="ltr"><span class="codeinlineitalic">errMessage</span></code> buffer</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">errMessage</span></code></td>
<td class="cellalignment4368" headers="r4c1-t14 r1c2-t14"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r4c1-t14 r1c3-t14">Buffer to hold the error text</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">maxLen</span></code></td>
<td class="cellalignment4368" headers="r5c1-t14 r1c2-t14"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r5c1-t14 r1c3-t14">Maximum length of the <code dir="ltr"><span class="codeinlineitalic">errMessage</span></code> buffer</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t14" headers="r1c1-t14"><code dir="ltr"><span class="codeinlineitalic">retLen</span></code></td>
<td class="cellalignment4368" headers="r6c1-t14 r1c2-t14"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r6c1-t14 r1c3-t14">Actual size of the error message</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref699"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if error information is returned, or <code dir="ltr">SQL_NO_DATA_FOUND</code> if no more errors are found in the error stack. If the <code dir="ltr"><span class="codeinlineitalic">errMessage</span></code> buffer is not large enough, <code dir="ltr">ttXlaError</code> returns <code dir="ltr">SQL_SUCCESS_WITH_INFO</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref700"></a>Example</p>
<p>There can be multiple errors on the error stack. This example shows how to read them all.</p>
<pre dir="ltr">char message[100];
SQLINTEGER code;

for (;;) {
  rc = ttXlaError(xlahandle, &amp;code, message, sizeof (message), &amp;retLen);
  if (rc == SQL_NO_DATA_FOUND)
      break;
  if (rc == SQL_ERROR) {
      printf(&#34;Error in fetching error message\n&#34;);
      break;
  }
  else {
      printf(&#34;Error code %d: %s\n&#34;, code, message);
  }
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref701"></a>Note</p>
<p>If you use multiple threads to access a TimesTen transaction log over a single XLA connection, TimesTen creates a latch to control concurrent access. If for some reason the latch cannot be acquired by a thread, the XLA function returns <code dir="ltr">SQL_INVALID_HANDLE</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref702"></a>See also</p>
<p><code dir="ltr"><a href="#CHEHCIFA">ttXlaErrorRestart</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV409" class="refsect2"><a id="CHEHCIFA"></a>
<h3 class="refsect2"><a id="sthref703"></a><a id="sthref704"></a><a id="sthref705"></a>ttXlaErrorRestart</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref706"></a>Description</p>
<p>Resets the error stack so that an application can reread the errors. See <a href="xla_event.htm#BABJGJCJ">&#34;Handling XLA errors&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref707"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref708"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaErrorRestart(ttXlaHandle_h <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref709"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaErrorRestart parameters" summary="This table contains a description of the parameter for ttXlaErrorRestart." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t15">Parameter</th>
<th class="cellalignment4367" id="r1c2-t15">Type</th>
<th class="cellalignment4367" id="r1c3-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t15" headers="r1c1-t15"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t15 r1c2-t15"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t15 r1c3-t15">Transaction log handle for the database</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref710"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref711"></a>Example</p>
<pre dir="ltr">rc = ttXlaErrorRestart(xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref712"></a>See also</p>
<p><code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV411" class="refsect2"><a id="CHEEJABC"></a>
<h3 class="refsect2"><a id="sthref713"></a><a id="sthref714"></a><a id="sthref715"></a>ttXlaGetColumnInfo</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref716"></a>Description</p>
<p>Retrieves information about all the columns in the table. Normally, the output parameter for number of columns returned, <code dir="ltr"><span class="codeinlineitalic">nreturned</span></code>, is set to the number of columns returned in <code dir="ltr"><span class="codeinlineitalic">colinfo</span></code>. The <code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code> or <code dir="ltr"><span class="codeinlineitalic">userTableID</span></code> parameter describes the desired table. This call is serialized with respect to changes in the table definition.</p>
<p>See <a href="xla_event.htm#BABEEFHF">&#34;Obtaining column descriptions&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref717"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref718"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaGetColumnInfo(ttXlaHandle_h <span class="italic">handle</span>,
                             SQLUBIGINT <span class="italic">systemTableID</span>,
                             SQLUBIGINT <span class="italic">userTableID</span>,
                             out ttXlaColDesc_t* <span class="italic">colinfo</span>,
                             SQLINTEGER <span class="italic">maxcols</span>,
                             out SQLINTEGER* <span class="italic">nreturned</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref719"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaGetColumnInfo parameters" summary="This table contains descriptions of the parameters of the ttXlagetColumnInfo function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t16">Parameter</th>
<th class="cellalignment4367" id="r1c2-t16">Type</th>
<th class="cellalignment4367" id="r1c3-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t16 r1c2-t16"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t16 r1c3-t16">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code></td>
<td class="cellalignment4368" headers="r3c1-t16 r1c2-t16"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r3c1-t16 r1c3-t16">System ID of table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">userTableID</span></code></td>
<td class="cellalignment4368" headers="r4c1-t16 r1c2-t16"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r4c1-t16 r1c3-t16">User ID of table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">colinfo</span></code></td>
<td class="cellalignment4368" headers="r5c1-t16 r1c2-t16"><code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r5c1-t16 r1c3-t16">Pointer to the buffer large enough to hold a separate description for <code dir="ltr"><span class="codeinlineitalic">maxcols</span></code> columns</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">maxcols</span></code></td>
<td class="cellalignment4368" headers="r6c1-t16 r1c2-t16"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r6c1-t16 r1c3-t16">Maximum number of columns that can be stored in the <code dir="ltr"><span class="codeinlineitalic">colInfo</span></code> buffer
<p>If the table contains more than <code dir="ltr"><span class="codeinlineitalic">maxcols</span></code> columns, an error is returned.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t16" headers="r1c1-t16"><code dir="ltr"><span class="codeinlineitalic">nreturned</span></code></td>
<td class="cellalignment4368" headers="r7c1-t16 r1c2-t16"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r7c1-t16 r1c3-t16">Number of columns returned</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref720"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref721"></a>Example</p>
<p>For this example, assume the following definitions:</p>
<pre dir="ltr">ttXlaColDesc_t colinfo[20];
SQLUBIGINT systemTableID, userTableID;
SQLINTEGER ncols;
</pre>
<p>To get the description of up to 20 columns using the system table identifier, issue the following call.</p>
<pre dir="ltr">rc = ttXlaGetColumnInfo(xlahandle, systemTableID, 0, colinfo, 20, &amp;ncols);
</pre>
<p>Likewise, the user table identifier can be used:</p>
<pre dir="ltr">rc = ttXlaGetColumnInfo(xlahandle, 0, userTableID, colinfo, 20, &amp;ncols);
</pre>
<p>See <a href="#CHEIGBDD">&#34;ttXlaColDesc_t&#34;</a> for details and an example on how to access the column data in a returned row.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref722"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEDDJIC">ttXlaGetTableInfo</a></code><br/>
<code dir="ltr"><a href="#CHECEIIC">ttXlaDecimalToCString</a></code><br/>
<code dir="ltr"><a href="#CHEBBJGA">ttXlaDateToODBCCType</a></code><br/>
<code dir="ltr"><a href="#CHEDFIJH">ttXlaTimeToODBCCType</a></code><br/>
<code dir="ltr"><a href="#CHECCIIG">ttXlaTimeStampToODBCCType</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV412" class="refsect2"><a id="CHEICHBA"></a>
<h3 class="refsect2">t<a id="sthref723"></a><a id="sthref724"></a>tXlaGetLSN</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref725"></a>Description</p>
<p>Returns the Current Read log record identifier for the connection specified by the transaction log handle. See <a href="xla_event.htm#CIHDJDAG">&#34;How bookmarks work&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref726"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref727"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaGetLSN(ttXlaHandle_h <span class="italic">handle</span>,
                      out tt_XlaLsn_t* <span class="italic">LSN</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref728"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaGetLSN parameters" summary="This table contains descriptions of the parameters of the ttXlaGetLSN function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t17">Parameter</th>
<th class="cellalignment4367" id="r1c2-t17">Type</th>
<th class="cellalignment4367" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t17" headers="r1c1-t17"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t17 r1c2-t17"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t17 r1c3-t17">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t17" headers="r1c1-t17"><code dir="ltr"><span class="codeinlineitalic">LSN</span></code></td>
<td class="cellalignment4368" headers="r3c1-t17 r1c2-t17"><code dir="ltr"><a href="#CHEJGGEH">tt_XlaLsn_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t17 r1c3-t17">Current Read log record identifier for the handle</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that <code dir="ltr">tt_XlaLsn_t</code>, particularly the <code dir="ltr"><span class="codeinlineitalic">logFile</span></code> and <code dir="ltr"><span class="codeinlineitalic">logOffset</span></code> fields, is used differently than in earlier releases, referring to log record identifiers rather than sequentially increasing LSNs. See the note in <a href="#CHEJGGEH">&#34;tt_XlaLsn_t&#34;</a>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref729"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref730"></a>Example</p>
<p>This example returns the Current Read log record identifier, <code dir="ltr">CurLSN</code>.</p>
<pre dir="ltr">tt_XlaLsn_t CurLSN;

rc = ttXlaGetLSN(xlahandle, &amp;CurLSN);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref731"></a>See also</p>
<p><code dir="ltr"><a href="#CHEDFIEI">ttXlaSetLSN</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV413" class="refsect2"><a id="CHEDDJIC"></a>
<h3 class="refsect2"><a id="sthref732"></a><a id="sthref733"></a><a id="sthref734"></a>ttXlaGetTableInfo</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref735"></a>Description</p>
<p>Retrieves information about the rows in the table (refer to the description of the <code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a></code> data type.) If the <code dir="ltr"><span class="codeinlineitalic">userTableID</span></code> parameter is nonzero, then it is used to locate the desired table. Otherwise, the <code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code> value is used to locate the table. If both are zero, an error is returned. The description is stored in the output parameter <code dir="ltr"><span class="codeinlineitalic">tblinfo</span></code>. This call is serialized with respect to changes in the table definition.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref736"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref737"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaGetTableInfo(ttXlaHandle_h <span class="italic">handle</span>,
                            SQLUBIGINT <span class="italic">systemTableID</span>,
                            SQLUBIGINT <span class="italic">userTableID</span>,
                            out ttXlaTblDesc_t* <span class="italic">tblinfo</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref738"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaGetTableInfo parameters" summary="This table contains descriptions of the parameters of the ttXlaGetTableInfo function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t19">Parameter</th>
<th class="cellalignment4367" id="r1c2-t19">Type</th>
<th class="cellalignment4367" id="r1c3-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t19 r1c2-t19"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t19 r1c3-t19">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code></td>
<td class="cellalignment4368" headers="r3c1-t19 r1c2-t19"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r3c1-t19 r1c3-t19">System table ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">userTableID</span></code></td>
<td class="cellalignment4368" headers="r4c1-t19 r1c2-t19"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r4c1-t19 r1c3-t19">User table ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t19" headers="r1c1-t19"><code dir="ltr"><span class="codeinlineitalic">tblinfo</span></code></td>
<td class="cellalignment4368" headers="r5c1-t19 r1c2-t19"><code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r5c1-t19 r1c3-t19">Row information</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref739"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref740"></a>Example</p>
<p>For this example, assume the following definitions:</p>
<pre dir="ltr">ttXlaTblDesc_t tabinfo; 
SQLUBIGINT systemTableID, userTableID;
</pre>
<p>To get table information using a system identifier, find the system table identifier using <code dir="ltr"><a href="#CHEBGDFB">ttXlaTableByName</a></code> or other means and issue the following call:</p>
<pre dir="ltr">rc = ttXlaGetTableInfo(xlahandle, systemTableID, 0, &amp;tabinfo);
</pre>
<p>Alternatively, the table information can be retrieved using a user table identifier:</p>
<pre dir="ltr">rc = ttXlaGetTableInfo(xlahandle, 0, userTableID, &amp;tabinfo);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref741"></a>See also</p>
<p><code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV414" class="refsect2"><a id="CHECDAAF"></a>
<h3 class="refsect2"><a id="sthref742"></a><a id="sthref743"></a><a id="sthref744"></a>ttXlaGetVersion</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref745"></a>Description</p>
<p>This function is used in combination with <code dir="ltr"><a href="#CHEHHHGI">ttXlaSetVersion</a></code> to ensure XLA applications written for older versions of XLA operate on a new version. The configured version is typically the older version, while the actual version is the newer one.</p>
<p>The function retrieves the currently configured XLA version and stores it into <code dir="ltr"><span class="codeinlineitalic">configuredVersion</span></code> parameter. The actual version of the underlying XLA is stored in <code dir="ltr"><span class="codeinlineitalic">actualVersion</span></code>. Due to calls on <code dir="ltr">ttXlaSetVersion</code>, the results in <code dir="ltr"><span class="codeinlineitalic">configuredVersion</span></code> may vary from one call to the next, but the results in <code dir="ltr"><span class="codeinlineitalic">actualVersion</span></code> remain the same.</p>
<p>See <a href="xla_event.htm#BABCGFJI">&#34;XLA basics&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref746"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref747"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaGetVersion(ttXlaHandle_h <span class="italic">handle</span>,
                          out ttXlaVersion_t* <span class="italic">configuredVersion</span>,
                          out ttXlaVersion_t* <span class="italic">actualVersion</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref748"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaGetVersion parameters" summary="This table contains descriptions of the parameters of the ttXlaGetVersion function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t20">Parameter</th>
<th class="cellalignment4367" id="r1c2-t20">Type</th>
<th class="cellalignment4367" id="r1c3-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t20" headers="r1c1-t20"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t20 r1c2-t20"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t20 r1c3-t20">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t20" headers="r1c1-t20"><code dir="ltr"><span class="codeinlineitalic">configuredVersion</span></code></td>
<td class="cellalignment4368" headers="r3c1-t20 r1c2-t20"><code dir="ltr"><a href="#CHEEHJEJ">ttXlaVersion_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t20 r1c3-t20">Configured version of XLA</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t20" headers="r1c1-t20"><code dir="ltr"><span class="codeinlineitalic">actualVersion</span></code></td>
<td class="cellalignment4368" headers="r4c1-t20 r1c2-t20"><code dir="ltr">ttXlaVersion_t*</code></td>
<td class="cellalignment4368" headers="r4c1-t20 r1c3-t20">Actual version of XLA</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref749"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref750"></a>Example</p>
<p>Assume the following directions for this example:</p>
<pre dir="ltr">ttXlaVersion_t configured, actual;
</pre>
<p>To determine the current version configuration, use the following call:</p>
<pre dir="ltr">rc = ttXlaGetVersion(xlahandle, &amp;configured, &amp;actual);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref751"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEJCDEB">ttXlaVersionCompare</a></code><br/>
<code dir="ltr"><a href="#CHEHHHGI">ttXlaSetVersion</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV416" class="refsect2"><a id="CHEJGJBH"></a>
<h3 class="refsect2"><a id="sthref752"></a><a id="sthref753"></a><a id="sthref754"></a>ttXlaNextUpdate</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref755"></a>Description</p>
<p>This function fetches up to a specified maximum number of update records from the transaction log and returns the records associated with committed transactions to a specified buffer. The actual number of returned records is reported in the <code dir="ltr"><span class="codeinlineitalic">nreturned</span></code> output parameter. This function requires a bookmark to be present in the database and to be associated with the connection used by the function.</p>
<p>Each call to <code dir="ltr">ttXlaNextUpdate</code> resets the bookmark to the last record read to enable the next call to <code dir="ltr">ttXlaNextUpdate</code> to return the next list of records.</p>
<p>See <a href="xla_event.htm#BABHJGCD">&#34;Retrieving update records from the transaction log&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref756"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref757"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNextUpdate(ttXlaHandle_h <span class="italic">handle</span>,
                          out ttXlaUpdateDesc_t***<span class="italic"> records</span>,
                          SQLINTEGER <span class="italic">maxrecords</span>,
                          out SQLINTEGER* <span class="italic">nreturned</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref758"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNextUpdate parameters" summary="This table contains descriptions of the parameters for the ttXlaNextUpdate function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t21">Parameter</th>
<th class="cellalignment4367" id="r1c2-t21">Type</th>
<th class="cellalignment4367" id="r1c3-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t21 r1c2-t21"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t21 r1c3-t21">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">records</span></code></td>
<td class="cellalignment4368" headers="r3c1-t21 r1c2-t21"><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a>***</code></td>
<td class="cellalignment4368" headers="r3c1-t21 r1c3-t21">Buffer to hold the completed transaction records</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">maxrecords</span></code></td>
<td class="cellalignment4368" headers="r4c1-t21 r1c2-t21"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t21 r1c3-t21">Maximum number of records to be fetched</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t21" headers="r1c1-t21"><code dir="ltr"><span class="codeinlineitalic">nreturned</span></code></td>
<td class="cellalignment4368" headers="r5c1-t21 r1c2-t21"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r5c1-t21 r1c3-t21">Actual number of returned records, where 0 is returned if no update data is available</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref759"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref760"></a>Example</p>
<p>This example retrieves up to 100 records and describes a loop in which each record can be processed:</p>
<pre dir="ltr">ttXlaUpdateDesc_t** records;
SQLINTEGER nreturned;
SQLINTEGER i;

rc = ttXlaNextUpdate(xlahandle, &amp;records, 100, &amp;nreturned);
/* Check for errors; if none, process the records */
for (i = 0; i &lt; nreturned; i++) {
  process(records[i]);
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref761"></a>Notes</p>
<p>Updates are generated for all data definition statements, regardless of tracking status. Updates are generated for data update operations for all tracked tables associated with the bookmark.</p>
<p>In addition, updates are generated for certain special operations, including assigning application-level identifiers for tables and columns and changing the tracking status of a table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref762"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEBCAAE">ttXlaNextUpdateWait</a></code><br/>
<code dir="ltr"><a href="#CHEDIAFE">ttXlaAcknowledge</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV417" class="refsect2"><a id="CHEBCAAE"></a>
<h3 class="refsect2">t<a id="sthref763"></a><a id="sthref764"></a>tXlaNextUpdateWait</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref765"></a>Description</p>
<p>This is similar to the <code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code> function, with the addition of a <code dir="ltr"><span class="codeinlineitalic">seconds</span></code> parameter that specifies the number of seconds to wait if no records are available in the transaction log. The actual number of seconds of wait time can be up to two seconds more than the specified <code dir="ltr"><span class="codeinlineitalic">seconds</span></code> value.</p>
<p>Also see <a href="xla_event.htm#BABHJGCD">&#34;Retrieving update records from the transaction log&#34;</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref766"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref767"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNextUpdateWait(ttXlaHandle_h <span class="italic">handle</span>,
                              out ttXlaUpdateDesc_t*** <span class="italic">records</span>,
                              SQLINTEGER <span class="italic">maxrecords</span>,
                              out SQLINTEGER* <span class="italic">nreturned</span>,
                              SQLINTEGER <span class="italic">seconds</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref768"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNextUpdateWait parameters" summary="This table contains descriptions of the parameters for the ttXlaNextUpdateWait function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t22">Parameter</th>
<th class="cellalignment4367" id="r1c2-t22">Type</th>
<th class="cellalignment4367" id="r1c3-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t22" headers="r1c1-t22"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t22 r1c2-t22"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t22 r1c3-t22">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t22" headers="r1c1-t22"><code dir="ltr"><span class="codeinlineitalic">records</span></code></td>
<td class="cellalignment4368" headers="r3c1-t22 r1c2-t22"><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a>***</code></td>
<td class="cellalignment4368" headers="r3c1-t22 r1c3-t22">Buffer to hold completed transaction records</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t22" headers="r1c1-t22"><code dir="ltr"><span class="codeinlineitalic">maxrecords</span></code></td>
<td class="cellalignment4368" headers="r4c1-t22 r1c2-t22"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t22 r1c3-t22">Maximum number of records to be fetched
<p><span class="bold">Note</span>: The largest effective value is 1000 records.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t22" headers="r1c1-t22"><code dir="ltr"><span class="codeinlineitalic">nreturned</span></code></td>
<td class="cellalignment4368" headers="r5c1-t22 r1c2-t22"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r5c1-t22 r1c3-t22">Actual number of records returned, where 0 is returned if no update data is available within the seconds wait period</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t22" headers="r1c1-t22"><code dir="ltr"><span class="codeinlineitalic">seconds</span></code></td>
<td class="cellalignment4368" headers="r6c1-t22 r1c2-t22"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r6c1-t22 r1c3-t22">Number of seconds to wait if the log is empty</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref769"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref770"></a>Example</p>
<p>This example retrieves up to 100 records and waits for up to 60 seconds if there are no records available in the transaction log.</p>
<pre dir="ltr">ttXlaUpdateDesc_t** records;
SQLINTEGER nreturned;
SQLINTEGER i;

rc = ttXlaNextUpdateWait(xlahandle, &amp;records, 100, &amp;nreturned, 60);
/* Check for errors; if none, process the records */
for (i = 0; i &lt; nreturned; i++) {
  process(records[i]);
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref771"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code><br/>
<code dir="ltr"><a href="#CHEDIAFE">ttXlaAcknowledge</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV418" class="refsect2"><a id="CHEECECB"></a>
<h3 class="refsect2">tt<a id="sthref772"></a><a id="sthref773"></a>XlaNumberToBigInt</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref774"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a <code dir="ltr">SQLBIGINT</code> value usable by an application.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref775"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref776"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToBigInt(void* <span class="italic">fromData</span>,
                              SQLBIGINT* <span class="italic">bint</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref777"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToBigInt parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToBigInt function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t23">Parameter</th>
<th class="cellalignment4367" id="r1c2-t23">Type</th>
<th class="cellalignment4367" id="r1c3-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t23" headers="r1c1-t23"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t23 r1c2-t23"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t23 r1c3-t23">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t23" headers="r1c1-t23"><code dir="ltr"><span class="codeinlineitalic">bint</span></code></td>
<td class="cellalignment4368" headers="r3c1-t23 r1c2-t23"><code dir="ltr">SQLBIGINT*</code></td>
<td class="cellalignment4368" headers="r3c1-t23 r1c3-t23">The <code dir="ltr">SQLBIGINT</code> value converted from the XLA number value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref778"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV419" class="refsect2"><a id="CHEDEBGF"></a>
<h3 class="refsect2">tt<a id="sthref779"></a><a id="sthref780"></a>XlaNumberToCString</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref781"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a character string usable by an application.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref782"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref783"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToCString(ttXlaHandle_h <span class="italic">handle</span>,
                               void* <span class="italic">fromData</span>,
                               char* <span class="italic">buf</span>,
                               int <span class="italic">buflen</span>
                               int* <span class="italic">reslen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref784"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToCString parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToCString function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t24">Parameter</th>
<th class="cellalignment4367" id="r1c2-t24">Type</th>
<th class="cellalignment4367" id="r1c3-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t24" headers="r1c1-t24"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t24 r1c2-t24"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t24 r1c3-t24">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t24" headers="r1c1-t24"><code dir="ltr"><span class="codeinlineitalic">buf</span></code></td>
<td class="cellalignment4368" headers="r3c1-t24 r1c2-t24"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r3c1-t24 r1c3-t24">Location where the converted data is placed</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t24" headers="r1c1-t24"><code dir="ltr"><span class="codeinlineitalic">buflen</span></code></td>
<td class="cellalignment4368" headers="r4c1-t24 r1c2-t24"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r4c1-t24 r1c3-t24">Size of the buffer where the converted data is placed</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t24" headers="r1c1-t24"><code dir="ltr"><span class="codeinlineitalic">reslen</span></code></td>
<td class="cellalignment4368" headers="r5c1-t24 r1c2-t24"><code dir="ltr">int*</code></td>
<td class="cellalignment4368" headers="r5c1-t24 r1c3-t24">Number of bytes that were written, assuming <code dir="ltr"><span class="codeinlineitalic">buflen</span></code> is large enough (otherwise, the number of bytes that would have been written)</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref785"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV420" class="refsect2"><a id="CHEHCCAB"></a>
<h3 class="refsect2">tt<a id="sthref786"></a><a id="sthref787"></a>XlaNumberToDouble</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref788"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a long floating point number value usable by applications.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref789"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref790"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToDouble(void* <span class="italic">fromData</span>,
                              double* <span class="italic">dbl</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref791"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToDouble parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToDouble function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t25">Parameter</th>
<th class="cellalignment4367" id="r1c2-t25">Type</th>
<th class="cellalignment4367" id="r1c3-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t25" headers="r1c1-t25"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t25 r1c2-t25"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t25 r1c3-t25">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t25" headers="r1c1-t25"><code dir="ltr"><span class="codeinlineitalic">dbl</span></code></td>
<td class="cellalignment4368" headers="r3c1-t25 r1c2-t25"><code dir="ltr">double*</code></td>
<td class="cellalignment4368" headers="r3c1-t25 r1c3-t25">The long floating point number value converted from the XLA number value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref792"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV421" class="refsect2"><a id="CHEJBFAA"></a>
<h3 class="refsect2">tt<a id="sthref793"></a><a id="sthref794"></a>XlaNumberToInt</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref795"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a <code dir="ltr">SQLINTEGER</code> value usable by an application.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref796"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref797"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToInt(void* <span class="italic">fromData</span>,
                           SQLINTEGER* <span class="italic">ival</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref798"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToInt parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToInt function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t26">Parameter</th>
<th class="cellalignment4367" id="r1c2-t26">Type</th>
<th class="cellalignment4367" id="r1c3-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t26" headers="r1c1-t26"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t26 r1c2-t26"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t26 r1c3-t26">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t26" headers="r1c1-t26"><code dir="ltr"><span class="codeinlineitalic">ival</span></code></td>
<td class="cellalignment4368" headers="r3c1-t26 r1c2-t26"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r3c1-t26 r1c3-t26">The <code dir="ltr">SQLINTEGER</code> value converted from the XLA number value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref799"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV422" class="refsect2"><a id="CHEDEHAG"></a>
<h3 class="refsect2">tt<a id="sthref800"></a><a id="sthref801"></a>XlaNumberToSmallInt</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref802"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a <code dir="ltr">SQLSMALLINT</code> value usable by an application.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref803"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref804"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToSmallInt(void* <span class="italic">fromData</span>,
                                SQLSMALLINT* <span class="italic">smint</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref805"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToSmallInt parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToSmallInt function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t27">Parameter</th>
<th class="cellalignment4367" id="r1c2-t27">Type</th>
<th class="cellalignment4367" id="r1c3-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t27" headers="r1c1-t27"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t27 r1c2-t27"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t27 r1c3-t27">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t27" headers="r1c1-t27"><code dir="ltr"><span class="codeinlineitalic">smint</span></code></td>
<td class="cellalignment4368" headers="r3c1-t27 r1c2-t27"><code dir="ltr">SQLSMALLINT*</code></td>
<td class="cellalignment4368" headers="r3c1-t27 r1c3-t27">The <code dir="ltr">SQLSMALLINT</code> value converted from the XLA number value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref806"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV423" class="refsect2"><a id="CHEIDCJA"></a>
<h3 class="refsect2">tt<a id="sthref807"></a><a id="sthref808"></a>XlaNumberToTinyInt</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref809"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to a tiny integer value usable by an application.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref810"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref811"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToTinyInt(void* <span class="italic">fromData</span>,
                               SQLCHAR* <span class="italic">tiny</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref812"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToTinyInt parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToTinyInt function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t28">Parameter</th>
<th class="cellalignment4367" id="r1c2-t28">Type</th>
<th class="cellalignment4367" id="r1c3-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t28" headers="r1c1-t28"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t28 r1c2-t28"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t28 r1c3-t28">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t28" headers="r1c1-t28"><code dir="ltr"><span class="codeinlineitalic">tiny</span></code></td>
<td class="cellalignment4368" headers="r3c1-t28 r1c2-t28"><code dir="ltr">SQLCHAR*</code></td>
<td class="cellalignment4368" headers="r3c1-t28 r1c3-t28">The tiny integer value converted from the XLA number value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref813"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV424" class="refsect2"><a id="CHEHJJGF"></a>
<h3 class="refsect2">tt<a id="sthref814"></a><a id="sthref815"></a>XlaNumberToUInt</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref816"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_NUMBER</code> value to an unsigned integer value usable by an application.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_NUMBER</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref817"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref818"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaNumberToInt(void* <span class="italic">fromData</span>,
                           SQLUINTEGER* <span class="italic">ival</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref819"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNumberToUInt parameters" summary="This table contains descriptions of the parameters for the ttXlaNumberToUInt function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t29">Parameter</th>
<th class="cellalignment4367" id="r1c2-t29">Type</th>
<th class="cellalignment4367" id="r1c3-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t29" headers="r1c1-t29"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t29 r1c2-t29"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t29 r1c3-t29">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t29" headers="r1c1-t29"><code dir="ltr"><span class="codeinlineitalic">ival</span></code></td>
<td class="cellalignment4368" headers="r3c1-t29 r1c2-t29"><code dir="ltr">SQLUINTEGER*</code></td>
<td class="cellalignment4368" headers="r3c1-t29 r1c3-t29">The integer value converted from the XLA number value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref820"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV426" class="refsect2"><a id="CHEHBFCG"></a>
<h3 class="refsect2">tt<a id="sthref821"></a><a id="sthref822"></a>XlaOraDateToODBCTimeStamp</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref823"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_DATE</code> value to an ODBC timestamp.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_DATE</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref824"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref825"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaOraDateToODBCTimeStamp(void* <span class="italic">fromData</span>,
                                      TIMESTAMP_STRUCT* <span class="italic">returnData</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref826"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaOraDateToODBCTimeStamp parameters" summary="This table contains descriptions of the parameters for the ttXlaOraDateToODBCTimeStamp function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t30">Parameter</th>
<th class="cellalignment4367" id="r1c2-t30">Type</th>
<th class="cellalignment4367" id="r1c3-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t30" headers="r1c1-t30"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t30 r1c2-t30"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t30 r1c3-t30">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t30" headers="r1c1-t30"><code dir="ltr"><span class="codeinlineitalic">returnData</span></code></td>
<td class="cellalignment4368" headers="r3c1-t30 r1c2-t30"><code dir="ltr">TIMESTAMP_STRUCT*</code></td>
<td class="cellalignment4368" headers="r3c1-t30 r1c3-t30">ODBC timestamp value converted from the XLA Oracle Database <code dir="ltr">DATE</code> value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref827"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV427" class="refsect2"><a id="CHEDABHC"></a>
<h3 class="refsect2">tt<a id="sthref828"></a><a id="sthref829"></a>XlaOraTimeStampToODBCTimeStamp</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref830"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_TIMESTAMP</code> value to an ODBC timestamp.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_TIMESTAMP</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref831"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaOraTimeStampToODBCTimeStamp(void* <span class="italic">fromData</span>,
                                           TIMESTAMP_STRUCT* <span class="italic">returnData</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref832"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref833"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaOraTimeStampToODBCTimeStamp parameters" summary="This table contains descriptions of the parameters for the ttXlaOraTimeStampToODBCTimeStamp function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t31">Parameter</th>
<th class="cellalignment4367" id="r1c2-t31">Type</th>
<th class="cellalignment4367" id="r1c3-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t31" headers="r1c1-t31"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t31 r1c2-t31"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t31 r1c3-t31">Pointer to the number value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t31" headers="r1c1-t31"><code dir="ltr"><span class="codeinlineitalic">returnData</span></code></td>
<td class="cellalignment4368" headers="r3c1-t31 r1c2-t31"><code dir="ltr">TIMESTAMP_STRUCT*</code></td>
<td class="cellalignment4368" headers="r3c1-t31 r1c3-t31">ODBC timestamp value converted from the XLA Oracle Database <code dir="ltr">TIMESTAMP</code> value</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref834"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV428" class="refsect2"><a id="CHEFECEF"></a>
<h3 class="refsect2">t<a id="sthref835"></a><a id="sthref836"></a><a id="sthref837"></a><a id="sthref838"></a>tXlaPersistOpen</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref839"></a>Description</p>
<p>Initializes a transaction log handle to a database to enable access to the transaction log. The <code dir="ltr"><span class="codeinlineitalic">hdbc</span></code> parameter is an ODBC connection handle to a database. Create only one XLA handle for each ODBC connection. After you have created an XLA handle on an ODBC connection, do not issue any other ODBC calls over the ODBC connection until it is closed by <code dir="ltr"><a href="#CHEEFEGG">ttXlaClose</a></code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">tag</span></code> is a string that identifies the XLA bookmark (see <a href="xla_event.htm#BABEIFGE">&#34;About XLA bookmarks&#34;</a>). The <code dir="ltr"><span class="codeinlineitalic">tag</span></code> can identify a new bookmark, either non-replicated or replicated, or one that exists in the system, as specified by the <code dir="ltr"><span class="codeinlineitalic">options</span></code> parameter. The <code dir="ltr"><span class="codeinlineitalic">handle</span></code> parameter is initialized by this call and must be provided on each subsequent call to XLA.</p>
<p>Some actions can be done without a bookmark. When performing these types of actions, you can use the <code dir="ltr">XLANONE</code> option to access the transaction log without a bookmark. Actions that <span class="italic">cannot</span> be done without a bookmark are the following:</p>
<ul>
<li>
<p><code dir="ltr"><a href="#CHEDIAFE">ttXlaAcknowledge</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#CHEICHBA">ttXlaGetLSN</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#CHEDFIEI">ttXlaSetLSN</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#CHEBCAAE">ttXlaNextUpdateWait</a></code></p>
</li>
</ul>
<p>Multiple applications can concurrently read from the transaction log. See <a href="xla_event.htm#BABBGAJJ">&#34;Initializing XLA and obtaining an XLA handle&#34;</a> for a discussion about using this function.</p>
<p>When this function is successful, XLA sets the autocommit mode to off.</p>
<p>If this function fails but still creates a handle, the handle must be closed to prevent memory leaks.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Space is allocated by this call. Call <code dir="ltr"><a href="#CHEEFEGG">ttXlaClose</a></code> to free space when you are done.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref840"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref841"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaPersistOpen(SQLHDBC <span class="italic">hdbc</span>,
                           SQLCHAR* <span class="italic">tag</span>,
                           SQLUINTEGER <span class="italic">options</span>,
                           out ttXlaHandle_h* <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref842"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaPersistOpen parameters" summary="This table contains descriptions of the parameters for the ttXlaPersisOpen function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t33">Parameter</th>
<th class="cellalignment4367" id="r1c2-t33">Type</th>
<th class="cellalignment4367" id="r1c3-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t33" headers="r1c1-t33"><code dir="ltr"><span class="codeinlineitalic">hdbc</span></code></td>
<td class="cellalignment4368" headers="r2c1-t33 r1c2-t33"><code dir="ltr">SQLHDBC</code></td>
<td class="cellalignment4368" headers="r2c1-t33 r1c3-t33">ODBC handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t33" headers="r1c1-t33"><code dir="ltr"><span class="codeinlineitalic">tag</span></code></td>
<td class="cellalignment4368" headers="r3c1-t33 r1c2-t33"><code dir="ltr">SQLCHAR*</code></td>
<td class="cellalignment4368" headers="r3c1-t33 r1c3-t33">Identifier for the XLA bookmark
<p>This can be null, in which case <code dir="ltr"><span class="codeinlineitalic">options</span></code> should be set to <code dir="ltr">XLANONE</code>. Maximum allowed length is 31.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t33" headers="r1c1-t33"><code dir="ltr"><span class="codeinlineitalic">options</span></code></td>
<td class="cellalignment4368" headers="r4c1-t33 r1c2-t33"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t33 r1c3-t33">Bookmark options:
<ul>
<li>
<p><code dir="ltr">XLANONE</code>: Connect without a bookmark. The <code dir="ltr"><span class="codeinlineitalic">tag</span></code> field is ignored.</p>
</li>
<li>
<p><code dir="ltr">XLACREAT</code>: Create a new non-replicated bookmark. Fails if a bookmark already exists.</p>
</li>
<li>
<p><code dir="ltr">XLAREPL</code>: Create a new replicated bookmark. Fails if a bookmark already exists.</p>
</li>
<li>
<p><code dir="ltr">XLAREUSE</code>: Associate with an existing bookmark (non-replicated or replicated). Fails if the bookmark does not exist.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t33" headers="r1c1-t33"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r5c1-t33 r1c2-t33"><code dir="ltr">ttXlaHandle_h*</code></td>
<td class="cellalignment4368" headers="r5c1-t33 r1c3-t33">Transaction log handle returned by this call</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref843"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref844"></a>Example</p>
<p>This example opens a transaction log, returns a handle named <code dir="ltr">xlahandle</code>, and creates a new non-replicated bookmark named <code dir="ltr">mybookmark</code>:</p>
<pre dir="ltr">SQLHDBC hdbc;
ttXlaHandle_h xlahandle;

rc = ttXlaPersistOpen(hdbc, ( SQLCHAR*)mybookmark,
                      XLACREAT, &amp;xlahandle);
</pre>
<p>Alternatively, create a new replicated bookmark as follows:</p>
<pre dir="ltr">SQLHDBC hdbc;
ttXlaHandle_h xlahandle;

rc = ttXlaPersistOpen(hdbc, ( SQLCHAR*)mybookmark,
                      XLAREPL, &amp;xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref845"></a>Note</p>
<p>Multithreaded applications should create a separate XLA handle for each thread. If multiple threads must use the same XLA handle, use a mutex to serialize thread access to that XLA handle so that only one thread can execute an XLA operation at a time.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref846"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEEFEGG">ttXlaClose</a></code><br/>
<code dir="ltr"><a href="#CHEFCIJE">ttXlaDeleteBookmark</a></code><br/>
<code dir="ltr"><a href="#CHEICHBA">ttXlaGetLSN</a></code><br/>
<code dir="ltr"><a href="#CHEDFIEI">ttXlaSetLSN</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV431" class="refsect2"><a id="BABCFHDF"></a>
<h3 class="refsect2">ttXla<a id="sthref847"></a><a id="sthref848"></a><a id="sthref849"></a>RowidToCString</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref850"></a>Description</p>
<p>Converts a <code dir="ltr">ROWID</code> value to a string value usable by applications.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref851"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref852"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaRowidToCString(void* <span class="italic">fromData</span>, char* <span class="italic">buf</span>, int <span class="italic">buflen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref853"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaRowidToCString parameters" summary="This table contains descriptions of the parameters for the ttXlaRowidToCString function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t34">Parameter</th>
<th class="cellalignment4367" id="r1c2-t34">Type</th>
<th class="cellalignment4367" id="r1c3-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t34" headers="r1c1-t34"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t34 r1c2-t34"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t34 r1c3-t34">Pointer to the <code dir="ltr">ROWID</code> value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t34" headers="r1c1-t34"><code dir="ltr"><span class="codeinlineitalic">buf</span></code></td>
<td class="cellalignment4368" headers="r3c1-t34 r1c2-t34"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r3c1-t34 r1c3-t34">Pointer to storage allocated to hold the converted string</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t34" headers="r1c1-t34"><code dir="ltr"><span class="codeinlineitalic">buflen</span></code></td>
<td class="cellalignment4368" headers="r4c1-t34 r1c2-t34"><code dir="ltr">int</code></td>
<td class="cellalignment4368" headers="r4c1-t34 r1c3-t34">Length of the converted string</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref854"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref855"></a>Example</p>
<pre dir="ltr">char charbuf[18];
void* rowiddata;
/* ... */
rc = ttXlaRowidToCString(rowiddata, charbuf, sizeof(charbuf));
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV432" class="refsect2"><a id="CHEDFIEI"></a>
<h3 class="refsect2">t<a id="sthref856"></a><a id="sthref857"></a>tXlaSetLSN</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref858"></a>Description</p>
<p>Sets the Current Read log record identifier for the database specified by the transaction handle. The specified <code dir="ltr"><span class="codeinlineitalic">LSN</span></code> value should be returned from <code dir="ltr">ttXlaGetLSN</code>. It cannot be a user-created value and cannot be earlier than the current bookmark Initial Read log record identifier.</p>
<p>See <a href="xla_event.htm#BABEIFGE">&#34;About XLA bookmarks&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref859"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref860"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaSetLSN(ttXlaHandle_h <span class="italic">handle</span>,
                      tt_XlaLsn_t* <span class="italic">LSN</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref861"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaSetLSN parameters" summary="This table contains descriptions of the parameters for the ttXlaSetLSN function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t35">Parameter</th>
<th class="cellalignment4367" id="r1c2-t35">Type</th>
<th class="cellalignment4367" id="r1c3-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t35" headers="r1c1-t35"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t35 r1c2-t35"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t35 r1c3-t35">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t35" headers="r1c1-t35"><code dir="ltr"><span class="codeinlineitalic">LSN</span></code></td>
<td class="cellalignment4368" headers="r3c1-t35 r1c2-t35"><code dir="ltr"><a href="#CHEJGGEH">tt_XlaLsn_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t35 r1c3-t35">New log record identifier for the handle</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that <code dir="ltr">tt_XlaLsn_t</code>, particularly the <code dir="ltr"><span class="codeinlineitalic">logFile</span></code> and <code dir="ltr"><span class="codeinlineitalic">logOffset</span></code> fields, is used differently than in earlier releases, referring to log record identifiers rather than sequentially increasing LSNs. See the note in <a href="#CHEJGGEH">&#34;tt_XlaLsn_t&#34;</a>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref862"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref863"></a>Example</p>
<p>This example sets the Current Read log record identifier to <code dir="ltr">CurLSN</code>.</p>
<pre dir="ltr">tt_XlaLsn_t CurLSN;

rc = ttXlaSetLSN(xlahandle, &amp;CurLSN);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref864"></a>See also</p>
<p><code dir="ltr"><a href="#CHEICHBA">ttXlaGetLSN</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV433" class="refsect2"><a id="CHEHHHGI"></a>
<h3 class="refsect2"><a id="sthref865"></a><a id="sthref866"></a><a id="sthref867"></a>ttXlaSetVersion</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref868"></a>Description</p>
<p>Sets the version of XLA to be used by the application. This version must be either the same as the version received from <code dir="ltr"><a href="#CHECDAAF">ttXlaGetVersion</a></code> or from an earlier version.</p>
<p>See <a href="xla_event.htm#BABCGFJI">&#34;XLA basics&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref869"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref870"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaSetVersion(ttXlaHandle_h <span class="italic">handle</span>,
                          ttXlaVersion_t* <span class="italic">version</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref871"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaSetVersion parameters" summary="This table contains descriptions of the parameters for the ttXlaSetVersion function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t37">Parameter</th>
<th class="cellalignment4367" id="r1c2-t37">Type</th>
<th class="cellalignment4367" id="r1c3-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t37" headers="r1c1-t37"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t37 r1c2-t37"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t37 r1c3-t37">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t37" headers="r1c1-t37"><code dir="ltr"><span class="codeinlineitalic">version</span></code></td>
<td class="cellalignment4368" headers="r3c1-t37 r1c2-t37"><code dir="ltr"><a href="#CHEEHJEJ">ttXlaVersion_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t37 r1c3-t37">Desired version of XLA</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref872"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref873"></a>Example</p>
<p>To set the configured version to the value specified in <code dir="ltr">requestedVersion</code>, issue the following call:</p>
<pre dir="ltr">rc = ttXlaSetVersion(xlahandle, &amp;requestedVersion);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref874"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEJCDEB">ttXlaVersionCompare</a></code><br/>
<code dir="ltr"><a href="#CHECDAAF">ttXlaGetVersion</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV435" class="refsect2"><a id="CHEBGDFB"></a>
<h3 class="refsect2"><a id="sthref875"></a><a id="sthref876"></a><a id="sthref877"></a>ttXlaTableByName</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref878"></a>Description</p>
<p>Finds the system and user table identifiers for a table or materialized view by providing the owner and name of the table or view. See <a href="xla_event.htm#BABHGGDB">&#34;Specifying which tables to monitor for updates&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref879"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref880"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaTableByName(ttXlaHandle_h <span class="italic">handle</span>,
                           char* <span class="italic">owner</span>,
                           char* <span class="italic">name</span>,
                           out SQLUBIGINT* <span class="italic">sysTableID</span>,
                           out SQLUBIGINT* <span class="italic">userTableID</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref881"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTableByName parameters" summary="This table contains descriptions of the parameters for the ttXlaTableByName function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t38">Parameter</th>
<th class="cellalignment4367" id="r1c2-t38">Type</th>
<th class="cellalignment4367" id="r1c3-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t38" headers="r1c1-t38"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t38 r1c2-t38"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t38 r1c3-t38">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t38" headers="r1c1-t38"><code dir="ltr"><span class="codeinlineitalic">owner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t38 r1c2-t38"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r3c1-t38 r1c3-t38">Owner for the table or view as a string</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t38" headers="r1c1-t38"><code dir="ltr"><span class="codeinlineitalic">name</span></code></td>
<td class="cellalignment4368" headers="r4c1-t38 r1c2-t38"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r4c1-t38 r1c3-t38">Name of the table or view</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t38" headers="r1c1-t38"><code dir="ltr"><span class="codeinlineitalic">sysTableID</span></code></td>
<td class="cellalignment4368" headers="r5c1-t38 r1c2-t38"><code dir="ltr">SQLUBIGINT*</code></td>
<td class="cellalignment4368" headers="r5c1-t38 r1c3-t38">System table ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t38" headers="r1c1-t38"><code dir="ltr"><span class="codeinlineitalic">userTableID</span></code></td>
<td class="cellalignment4368" headers="r6c1-t38 r1c2-t38"><code dir="ltr">SQLUBIGINT*</code></td>
<td class="cellalignment4368" headers="r6c1-t38 r1c3-t38">User table ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref882"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref883"></a>Example</p>
<p>To get the system and user table IDs associated with the table <code dir="ltr">PURCHASING.INVOICES</code>, use the following call:</p>
<pre dir="ltr">SQLUBIGINT sysTableID;
SQLUBIGINT userTableID;

rc = ttXlaTableByName(xlahandle, &#34;PURCHASING&#34;, &#34;INVOICES&#34;, 
                      &amp;sysTableID, &amp;userTableID);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref884"></a>See also</p>
<p><code dir="ltr"><a href="#CHEHAAIF">ttXlaTableStatus</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV437" class="refsect2"><a id="CHEHAAIF"></a>
<h3 class="refsect2"><a id="sthref885"></a><a id="sthref886"></a><a id="sthref887"></a>ttXlaTableStatus</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref888"></a>Description</p>
<p>Returns the update status for a table. Identify the table by specifying either a user ID (<code dir="ltr"><span class="codeinlineitalic">userTableID</span></code>) or a system ID (<code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code>). If <code dir="ltr"><span class="codeinlineitalic">userTableID</span></code> is nonzero, it is used to locate the table. Otherwise <code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code> is used. If both are zero, an error is returned.</p>
<p>Specifying a value for <code dir="ltr"><span class="codeinlineitalic">newstatus</span></code> sets the update status to <code dir="ltr"><span class="codeinlineitalic">*newstatus</span></code>. A nonzero status means the table specified by <code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code> is available through XLA. Zero means the table is not tracked. Changes to table update status are effective immediately.</p>
<p>Updates to a table are tracked only if update tracking was enabled for the table at the time the update was performed. This call is serialized with respect to updates to the underlying table. Therefore, transactions that update the table run either completely before or completely after the change to table status.</p>
<p>To use <code dir="ltr">ttXlaTableStatus</code>, the user must be connected to a bookmark. The function reports inserts, updates, and deletes only to the bookmark that has subscribed to the table. It reports DDL events to all bookmarks. DDL events include <code dir="ltr">CREATAB</code>, <code dir="ltr">DROPTAB</code>, <code dir="ltr">CREAIND</code>, <code dir="ltr">DROPIND</code>, <code dir="ltr">CREATVIEW</code>, <code dir="ltr">DROPVIEW</code>, <code dir="ltr">CREATSEQ</code>, <code dir="ltr">DROPSEQ</code>, <code dir="ltr">CREATSYN</code>, <code dir="ltr">DROPSYN</code>, <code dir="ltr">ADDCOLS</code>, <code dir="ltr">DRPCOLS</code>, <code dir="ltr">TRUNCATE</code>, <code dir="ltr">SETTBL1</code>, and <code dir="ltr">SETCOL1</code> transactions. See <a href="#CHEGEBFI">&#34;ttXlaUpdateDesc_t&#34;</a> for information about these event types.</p>
<p>See <a href="xla_event.htm#BABHGGDB">&#34;Specifying which tables to monitor for updates&#34;</a> for a discussion about using this function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
DML updates to a table being tracked through XLA do not prevent <code dir="ltr">ttXlaTableStatus</code> from running. However, DDL updates to the table being tracked, which take a lock on <code dir="ltr">SYS.TABLES</code>, do delay <code dir="ltr">ttXlaTableStatus</code> from running in serializable isolation against <code dir="ltr">SYS.TABLES</code>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref889"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref890"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaTableStatus(ttXlaHandle_h <span class="italic">handle</span>,
                           SQLUBIGINT <span class="italic">systemTableID</span>,
                           SQLUBIGINT <span class="italic">userTableID</span>,
                           out SQLINTEGER* <span class="italic">oldstatus</span>,
                           SQLINTEGER* <span class="italic">newstatus</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref891"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTableStatus parameters" summary="This table contains descriptions of the parameters for the ttXlaTableStatus function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t40">Parameter</th>
<th class="cellalignment4367" id="r1c2-t40">Type</th>
<th class="cellalignment4367" id="r1c3-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t40" headers="r1c1-t40"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t40 r1c2-t40"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t40 r1c3-t40">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t40" headers="r1c1-t40"><code dir="ltr"><span class="codeinlineitalic">systemTableID</span></code></td>
<td class="cellalignment4368" headers="r3c1-t40 r1c2-t40"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r3c1-t40 r1c3-t40">System ID of table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t40" headers="r1c1-t40"><code dir="ltr"><span class="codeinlineitalic">userTableID</span></code></td>
<td class="cellalignment4368" headers="r4c1-t40 r1c2-t40"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r4c1-t40 r1c3-t40">User ID of table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t40" headers="r1c1-t40"><code dir="ltr"><span class="codeinlineitalic">oldstatus</span></code></td>
<td class="cellalignment4368" headers="r5c1-t40 r1c2-t40"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r5c1-t40 r1c3-t40">XLA old status:
<ul>
<li>
<p>1: On</p>
</li>
<li>
<p>0: Off</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t40" headers="r1c1-t40"><code dir="ltr"><span class="codeinlineitalic">newstatus</span></code></td>
<td class="cellalignment4368" headers="r6c1-t40 r1c2-t40"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r6c1-t40 r1c3-t40">XLA new status:
<ul>
<li>
<p>1: On</p>
</li>
<li>
<p>0: Off</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref892"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref893"></a>Example</p>
<p>The following examples assume that the system or user table identifiers are found using <code dir="ltr"><a href="#CHEBGDFB">ttXlaTableByName</a></code> or some other means.</p>
<p>Assume these declarations for the example:</p>
<pre dir="ltr">SQLUBIGINT systemTableID;
SQLUBIGINT userTableID;
SQLINTEGER currentStatus, requestedStatus;
</pre>
<p>To find the status of a table given its system table identifier, use the following call:</p>
<pre dir="ltr">/* Get system table identifier into systemTableID, then ... */
rc = ttXlaTableStatus(xlahandle, systemTableID, 0,
                      &amp;currentStatus, NULL);
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">currentStatus</span></code> value is nonzero if update tracking for the table is enabled, or zero otherwise.</p>
<p>To enable update tracking for a table given a system table identifier, set the requested status to 1 as follows:</p>
<pre dir="ltr">requestedStatus = 1;

rc = ttXlaTableStatus(xlahandle, systemTableID, 0,
                      NULL, &amp;requestedStatus);
</pre>
<p>You can set a new update tracking status and retrieve the current status in a single call, as in the following example:</p>
<pre dir="ltr">requestedStatus = 1;

rc = ttXlaTableStatus(xlahandle, systemTableID, 0,
                      &amp;currentStatus, &amp;requestedStatus);
</pre>
<p>The above call enables update tracking for a table by system table identifier and retrieves the prior update tracking status in the variable <code dir="ltr"><span class="codeinlineitalic">currentStatus</span></code>.</p>
<p>All of these examples can be done using user table identifiers as well. To retrieve the update tracking status of a table through its user table identifier, use the following call:</p>
<pre dir="ltr">/* Get system table identifier into userTableID, then ... */

rc = ttXlaTableStatus(xlahandle, 0, userTableID,
                      &amp;currentStatus, NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref894"></a>See also</p>
<p><code dir="ltr"><a href="#CHEBGDFB">ttXlaTableByName</a></code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV440" class="refsect2"><a id="CHEBAFEC"></a>
<h3 class="refsect2"><a id="sthref895"></a><a id="sthref896"></a>ttXlaTableVersionVerify</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref897"></a>Description</p>
<p>Verifies that the cached table definitions are compatible with the XLA record being processed. Table definitions change only when the <code dir="ltr">ALTER TABLE</code> statement is used to add or remove columns.</p>
<p>You can monitor the XLA stream for XLA records of transaction type <code dir="ltr">ADDCOLS</code> and <code dir="ltr">DRPCOLS</code> to avoid the overhead of using this function. When an XLA record of transaction type <code dir="ltr">ADDCOLS</code> or <code dir="ltr">DROPCOLS</code> is encountered, refresh the table and column definitions. See <a href="xla_event.htm#BABEHGIG">&#34;Inspecting record headers and locating row addresses&#34;</a> for information about monitoring XLA records for transaction type.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref898"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref899"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaTableVersionVerify(ttXlaHandle_h <span class="italic">handle</span>
                                  ttXlaTblVerDesc_t* <span class="italic">table</span>,
                                  ttXlaUpdateDesc_t* <span class="italic">record</span>
                                  out SQLINTEGER* <span class="italic">compat</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref900"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTableVersionVerify parameters" summary="This table contains descriptions of the parameters for the ttXlaTableVersionVerify function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t41">Parameter</th>
<th class="cellalignment4367" id="r1c2-t41">Type</th>
<th class="cellalignment4367" id="r1c3-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t41" headers="r1c1-t41"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t41 r1c2-t41"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t41 r1c3-t41">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t41" headers="r1c1-t41"><code dir="ltr"><span class="codeinlineitalic">table</span></code></td>
<td class="cellalignment4368" headers="r3c1-t41 r1c2-t41"><code dir="ltr"><a href="#CHECGDHD">ttXlaTblVerDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t41 r1c3-t41">A cached table description</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t41" headers="r1c1-t41"><code dir="ltr"><span class="codeinlineitalic">record</span></code></td>
<td class="cellalignment4368" headers="r4c1-t41 r1c2-t41"><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r4c1-t41 r1c3-t41">XLA record to be processed</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t41" headers="r1c1-t41"><code dir="ltr"><span class="codeinlineitalic">compat</span></code></td>
<td class="cellalignment4368" headers="r5c1-t41 r1c2-t41"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r5c1-t41 r1c3-t41">Compatibility information:
<ul>
<li>
<p>1: Tables are compatible.</p>
</li>
<li>
<p>0: Tables are not compatible.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref901"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if cached table definition is compatible with the XLA record being processed. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref902"></a>Example</p>
<p>This example checks the compatibility of a table.</p>
<pre dir="ltr">SQLINTEGER compat;
ttXlaTbVerDesc_t table;
ttXlaUpdateDesc_t* record;
/*
 * Get the desired table definitions into the variable &#34;table&#34;
 */
rc = ttXlaTableVersionVerify(xlahandle, &amp;table, record, &amp;compat);
if (compat) {
/*
 * Compatible
 */
}
else {
/*
 * Not compatible or some other error occurred
 * If not compatible, issue a call to ttXlaVersionTableInfo and
 * ttXlaVersionColumnInfo to get the new definition.
 */
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref903"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHECBBBE">ttXlaVersionColumnInfo</a></code><br/>
<code dir="ltr"><a href="#CHEDIHGI">ttXlaVersionTableInfo</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV438" class="refsect2"><a id="CHEDFIJH"></a>
<h3 class="refsect2">t<a id="sthref904"></a><a id="sthref905"></a>tXlaTimeToODBCCType</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref906"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_TIME</code> value to an ODBC C value usable by applications. See <a href="xla_event.htm#BABIGJFI">&#34;Converting complex data types&#34;</a> for a discussion about using this function.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_TIME</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref907"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref908"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaTimeToODBCCType (void* <span class="italic">fromData</span>,
                                out TIME_STRUCT* <span class="italic">returnData</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref909"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTimeToODBCCType parameters" summary="This table contains descriptions of the parameters for the ttXlaTimeToODBCCType function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t42">Parameter</th>
<th class="cellalignment4367" id="r1c2-t42">Type</th>
<th class="cellalignment4367" id="r1c3-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t42" headers="r1c1-t42"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t42 r1c2-t42"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t42 r1c3-t42">Pointer to the time value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t42" headers="r1c1-t42"><code dir="ltr"><span class="codeinlineitalic">returnData</span></code></td>
<td class="cellalignment4368" headers="r3c1-t42 r1c2-t42"><code dir="ltr">TIME_STRUCT*</code></td>
<td class="cellalignment4368" headers="r3c1-t42 r1c3-t42">Pointer to storage allocated to hold the converted time</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref910"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref911"></a>Example</p>
<p>This example assumes you have used the <code dir="ltr"><span class="codeinlineitalic">offset</span></code> value returned in a <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure to obtain a time value, <code dir="ltr"><span class="codeinlineitalic">pColVal</span></code>, from a row returned in a transaction log record.</p>
<pre dir="ltr">TIME_STRUCT time;

rc = ttXlaTimeToODBCCType(pColVal, &amp;time);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV439" class="refsect2"><a id="CHECCIIG"></a>
<h3 class="refsect2">t<a id="sthref912"></a><a id="sthref913"></a>tXlaTimeStampToODBCCType</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref914"></a>Description</p>
<p>Converts a <code dir="ltr">TTXLA_TIMSTAMP_TT</code> value to an ODBC C value usable by applications. See <a href="xla_event.htm#BABIGJFI">&#34;Converting complex data types&#34;</a> for a discussion about using this function.</p>
<p>Call this function only for a column of type <code dir="ltr">TTXLA_TIMSTAMP_TT</code>. The data type can be obtained from the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref915"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref916"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaTimeStampToODBCCType(void* <span class="italic">fromData</span>,
                                    out TIMESTAMP_STRUCT* <span class="italic">returnData</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref917"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTimeStampToODBCCType parameters" summary="This table contains descriptions of the parameters for the ttXlaTimeStampToODBCCType function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t43">Parameter</th>
<th class="cellalignment4367" id="r1c2-t43">Type</th>
<th class="cellalignment4367" id="r1c3-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t43" headers="r1c1-t43"><code dir="ltr"><span class="codeinlineitalic">fromData</span></code></td>
<td class="cellalignment4368" headers="r2c1-t43 r1c2-t43"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r2c1-t43 r1c3-t43">Pointer to the timestamp value returned from the transaction log</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t43" headers="r1c1-t43"><code dir="ltr"><span class="codeinlineitalic">returnData</span></code></td>
<td class="cellalignment4368" headers="r3c1-t43 r1c2-t43"><code dir="ltr">TIMESTAMP_STRUCT*</code></td>
<td class="cellalignment4368" headers="r3c1-t43 r1c3-t43">Pointer to storage allocated to hold the converted timestamp</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref918"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref919"></a>Example</p>
<p>This example assumes you have used the <code dir="ltr"><span class="codeinlineitalic">offset</span></code> value returned in a <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> structure to obtain a timestamp value, <code dir="ltr"><span class="codeinlineitalic">pColVal</span></code>, from a row returned in a transaction log record.</p>
<pre dir="ltr">TIMESTAMP_STRUCT timestamp;

rc = ttXlaTimeStampToODBCCType(pColVal, &amp;timestamp);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV441" class="refsect2"><a id="CHECBBBE"></a>
<h3 class="refsect2">tt<a id="sthref920"></a><a id="sthref921"></a>XlaVersionColumnInfo</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref922"></a>Description</p>
<p>Retrieves information about the columns in a table for which a change update XLA record must be processed.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref923"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref924"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaVersionColumnInfo(ttXlaHandle_h <span class="italic">handle</span>,
                                 ttXlaUpdateDesc_t* <span class="italic">record</span>,
                                 out ttXlaColDesc_t* <span class="italic">colinfo</span>,
                                 SQLINTEGER <span class="italic">maxcols</span>,
                                 out SQLINTEGER* <span class="italic">nreturned</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref925"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaVersionColumnInfo parameters" summary="This table contains descriptions of the parameters for the ttXlaVersionColumnInfo function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t44">Parameter</th>
<th class="cellalignment4367" id="r1c2-t44">Type</th>
<th class="cellalignment4367" id="r1c3-t44">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t44" headers="r1c1-t44"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t44 r1c2-t44"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t44 r1c3-t44">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t44" headers="r1c1-t44"><code dir="ltr"><span class="codeinlineitalic">record</span></code></td>
<td class="cellalignment4368" headers="r3c1-t44 r1c2-t44"><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t44 r1c3-t44">XLA record to be processed</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t44" headers="r1c1-t44"><code dir="ltr"><span class="codeinlineitalic">colinfo</span></code></td>
<td class="cellalignment4368" headers="r4c1-t44 r1c2-t44"><code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r4c1-t44 r1c3-t44">A pointer to the buffer large enough to hold a description for <code dir="ltr"><span class="codeinlineitalic">maxcols</span></code> columns</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t44" headers="r1c1-t44"><code dir="ltr"><span class="codeinlineitalic">maxcols</span></code></td>
<td class="cellalignment4368" headers="r5c1-t44 r1c2-t44"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r5c1-t44 r1c3-t44">Maximum number of columns the table can have
<p><span class="bold">Note</span>: If the table contains more than <code dir="ltr"><span class="codeinlineitalic">maxcols</span></code> columns, an error is returned.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t44" headers="r1c1-t44"><code dir="ltr"><span class="codeinlineitalic">nreturned</span></code></td>
<td class="cellalignment4368" headers="r6c1-t44 r1c2-t44"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r6c1-t44 r1c3-t44">Number of columns returned</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref926"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref927"></a>Example</p>
<p>For this example, assume the following definitions:</p>
<pre dir="ltr">ttXlaHandle_h xlahandle
ttXlaUpdateDesc_t* record;
ttXlaColDesc_t colinfo[20];
SQLINTEGER ncols;
</pre>
<p>The following call retrieves the description of up to 20 columns:</p>
<pre dir="ltr">rc = ttXlaVersionColumnInfo(xlahandle, record, colinfo, 20, &amp;ncols);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV442" class="refsect2"><a id="CHEJCDEB"></a>
<h3 class="refsect2"><a id="sthref928"></a><a id="sthref929"></a>ttXlaVersionCompare</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref930"></a>Description</p>
<p>Compares two XLA versions and returns the result.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref931"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref932"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaVersionCompare(ttXlaHandle_h <span class="italic">handle</span>,
                              ttXlaVersion_t* <span class="italic">version1</span>,
                              ttXlaVersion_t* <span class="italic">version2</span>,
                              out SQLINTEGER* <span class="italic">comparison</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref933"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaVersionCompare parameters" summary="This table contains descriptions of the ttXlaVersionCompare function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t45">Parameter</th>
<th class="cellalignment4367" id="r1c2-t45">Type</th>
<th class="cellalignment4367" id="r1c3-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t45" headers="r1c1-t45"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t45 r1c2-t45"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t45 r1c3-t45">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t45" headers="r1c1-t45"><code dir="ltr"><span class="codeinlineitalic">version1</span></code></td>
<td class="cellalignment4368" headers="r3c1-t45 r1c2-t45"><code dir="ltr"><a href="#CHEEHJEJ">ttXlaVersion_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t45 r1c3-t45">Version of XLA to compare with <code dir="ltr"><span class="codeinlineitalic">version2</span></code></td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t45" headers="r1c1-t45"><code dir="ltr"><span class="codeinlineitalic">version2</span></code></td>
<td class="cellalignment4368" headers="r4c1-t45 r1c2-t45"><code dir="ltr">ttXlaVersion_t*</code></td>
<td class="cellalignment4368" headers="r4c1-t45 r1c3-t45">Version of XLA to compare with <code dir="ltr"><span class="codeinlineitalic">version1</span></code></td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t45" headers="r1c1-t45"><code dir="ltr"><span class="codeinlineitalic">comparison</span></code></td>
<td class="cellalignment4368" headers="r5c1-t45 r1c2-t45"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r5c1-t45 r1c3-t45">Comparison result:
<ul>
<li>
<p>0: Indicates <code dir="ltr"><span class="codeinlineitalic">version1</span></code> and <code dir="ltr"><span class="codeinlineitalic">version2</span></code> match.</p>
</li>
<li>
<p>-1: Indicates <code dir="ltr"><span class="codeinlineitalic">version1</span></code> is earlier than <code dir="ltr"><span class="codeinlineitalic">version2</span></code>.</p>
</li>
<li>
<p>+1: Indicates <code dir="ltr"><span class="codeinlineitalic">version1</span></code> is later than <code dir="ltr"><span class="codeinlineitalic">version2</span></code>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref934"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref935"></a>Example</p>
<p>To compare the <code dir="ltr">configured</code> version against the <code dir="ltr">actual</code> version of XLA, issue the following call:</p>
<pre dir="ltr">ttXlaVersion_t configured, actual;
SQLINTEGER comparision;

rc = ttXlaGetVersion (xlahandle, &amp;configured, &amp;actual);
rc = ttXlaVersionCompare (xlahandle, &amp;configured, &amp;actual,
                          &amp;comparison);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref936"></a>Notes</p>
<p>When connecting two systems with XLA-based replication, use the following protocol:</p>
<ol>
<li>
<p>At the primary site, retrieve the XLA version using <code dir="ltr">ttXlaGetVersion</code>. Send this version information to the standby site.</p>
</li>
<li>
<p>At the standby site, retrieve the XLA version using <code dir="ltr">ttXlaGetVersion</code>. Use <code dir="ltr">ttXlaVersionCompare</code> to determine which version is earlier. The earlier version number must be used to ensure proper operation between the two sites. Use <code dir="ltr">ttXlaSetVersion</code> to specify the version of the interface to use at the standby site. Send the earlier version number back to the primary site.</p>
</li>
<li>
<p>When the chosen version is received at the primary site, use <code dir="ltr">ttXlaSetVersion</code> to specify the version of XLA to use.</p>
</li>
</ol>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref937"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHECDAAF">ttXlaGetVersion</a></code><br/>
<code dir="ltr"><a href="#CHEHHHGI">ttXlaSetVersion</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV443" class="refsect2"><a id="CHEDIHGI"></a>
<h3 class="refsect2">tt<a id="sthref938"></a><a id="sthref939"></a>XlaVersionTableInfo</h3>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref940"></a>Description</p>
<p>Retrieves the table definition for the change update record that must be processed. The table description is stored in the <code dir="ltr"><span class="codeinlineitalic">tableinfo</span></code> output parameter.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref941"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref942"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaVersionTableInfo(ttXlaHandle_h <span class="italic">handle</span>,
                                ttXlaUpdateDesc_t* <span class="italic">record</span>,
                                out ttXlaTblVerDesc_t* <span class="italic">tblinfo</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref943"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaVersionTableInfo parameters" summary="This table contains descriptions of the parameters for the ttXlaVersionTableInfo function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t46">Parameter</th>
<th class="cellalignment4367" id="r1c2-t46">Type</th>
<th class="cellalignment4367" id="r1c3-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t46" headers="r1c1-t46"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t46 r1c2-t46"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t46 r1c3-t46">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t46" headers="r1c1-t46"><code dir="ltr"><span class="codeinlineitalic">record</span></code></td>
<td class="cellalignment4368" headers="r3c1-t46 r1c2-t46"><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t46 r1c3-t46">XLA record to be processed</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t46" headers="r1c1-t46"><code dir="ltr"><span class="codeinlineitalic">tableinfo</span></code></td>
<td class="cellalignment4368" headers="r4c1-t46 r1c2-t46"><code dir="ltr"><a href="#CHECGDHD">ttXlaTblVerDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r4c1-t46 r1c3-t46">Information about table definition</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref944"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref945"></a>Example</p>
<p>For this example, assume the following definitions:</p>
<pre dir="ltr">ttXlaHandle_h xlahandle;
ttXlaUpdateDesc_t* record;
ttXlaTblVerDesc_t tabinfo;
</pre>
<p>The following call retrieves a table definition:</p>
<pre dir="ltr">rc = ttXlaVersionTableInfo(xlahandle, record, &amp;tabinfo);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="BABJABDH"></a>
<div id="TTCDV548" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">XLA replication function reference</h2>
<p>TimesTen replication as described in <a class="olink TTREP" href="../TTREP/toc.htm"><span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span></a> is sufficient for most customer needs; however, it is also possible to use XLA functions to replicate updates from one database to another. Implementing your own replication scheme on top of XLA in this way is fairly complicated, but can be considered if TimesTen replication is not feasible for some reason.</p>
<p>This section documents the functions that are exclusive to using XLA as a replication mechanism. Functions are listed in alphabetical order.</p>
<div id="TTCDV400" class="refsect2"><a id="CHEHCDII"></a>
<h3 class="refsect2"><a id="sthref946"></a><a id="sthref947"></a><a id="sthref948"></a><a id="sthref949"></a><a id="sthref950"></a>ttXlaApply</h3>
<p>This function is part of XLA replication functionality and is not appropriate for use in a typical XLA application.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref951"></a>Description</p>
<p>Applies an update to the database associated with the transaction log handle. The return value indicates whether the update was successful. The return also shows if the update encountered a persistent problem. (To see whether the update encountered a transient problem such as a deadlock or timeout, you must call <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> and check the error code.)</p>
<p>If the <code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a></code> record is a transaction commit, the underlying database transaction is committed. No other transaction commits are performed by <code dir="ltr">ttXlaApply</code>. If the parameter <code dir="ltr"><span class="codeinlineitalic">test</span></code> is true, the &#34;old values&#34; in the update description are compared against the current contents of the database for record updates and deletions. If the old value in the update description does not match the corresponding row in the database, this function rejects the update and returns an <a id="sthref952"></a><code dir="ltr">sb_ErrXlaTupleMismatch</code> error.</p>
<p>See <a href="xla_event.htm#BABDFIBJ">&#34;Using XLA as a replication mechanism&#34;</a> for a discussion about using this function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">ttXlaApply</code> cannot be used if the table definition was updated since it was originally written to the transaction log. Unique key and foreign key constraints are checked at the row level rather than at the statement level.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref953"></a>Required privilege</p>
<p><code dir="ltr">ADMIN</code></p>
<p>Additional privileges may be required on the target database for the <code dir="ltr">ttXlaApply</code> operation. For example, to apply a <code dir="ltr">CREATETAB</code> (create table) record to the target database, you must have <code dir="ltr">CREATE TABLE</code> or <code dir="ltr">CREATE ANY TABLE</code> privilege, as appropriate.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref954"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaApply(ttXlaHandle_h <span class="italic">handle</span>,
                     ttXlaUpdateDesc_t* <span class="italic">record</span>,
                     SQLINTEGER <span class="italic">test</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref955"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaApply parameters" summary="This table contains descriptions of the parameters for the ttXlaApply function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t48">Parameter</th>
<th class="cellalignment4367" id="r1c2-t48">Type</th>
<th class="cellalignment4367" id="r1c3-t48">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t48" headers="r1c1-t48"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t48 r1c2-t48"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t48 r1c3-t48">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t48" headers="r1c1-t48"><code dir="ltr"><span class="codeinlineitalic">record</span></code></td>
<td class="cellalignment4368" headers="r3c1-t48 r1c2-t48"><code dir="ltr">ttXlaUpdateDesc_t*</code></td>
<td class="cellalignment4368" headers="r3c1-t48 r1c3-t48">Transaction to generate SQL statement</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t48" headers="r1c1-t48"><code dir="ltr"><span class="codeinlineitalic">test</span></code></td>
<td class="cellalignment4368" headers="r4c1-t48 r1c2-t48"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t48 r1c3-t48">Test for old values:
<ul>
<li>
<p>1: Test on</p>
</li>
<li>
<p>0: Test off</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref956"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">test</span></code> is 1 and <code dir="ltr">ttXlaApply</code> detects an update conflict, an <a id="sthref957"></a><code dir="ltr">sb_ErrXlaTupleMismatch</code> error is returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref958"></a>Example</p>
<p>This example applies an update to a database without testing for the previous value of the existing record:</p>
<pre dir="ltr">ttXlaUpdateDesc_t record;
rc = ttXlaApply(xlahandle, &amp;record, 0);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref959"></a>Note</p>
<p>When calling <code dir="ltr">ttXlaApply</code>, it is possible for the update to timeout or deadlock with concurrent transactions. In such cases, it is the application&#39;s responsibility to roll the transaction back and reapply the updates.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref960"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEJAJEA">ttXlaCommit</a></code><br/>
<code dir="ltr"><a href="#CHECECCA">ttXlaRollback</a></code><br/>
<code dir="ltr"><a href="#CHEGHGGH">ttXlaLookup</a></code><br/>
<code dir="ltr"><a href="#CHECAIHJ">ttXlaTableCheck</a></code><br/>
<code dir="ltr"><a href="#CHEHADAC">ttXlaGenerateSQL</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV402" class="refsect2"><a id="CHEJAJEA"></a>
<h3 class="refsect2">tt<a id="sthref961"></a><a id="sthref962"></a><a id="sthref963"></a><a id="sthref964"></a>XlaCommit</h3>
<p>This function is part of XLA replication functionality and is not appropriate for use in a typical XLA application.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref965"></a>Description</p>
<p>Commits the current transaction being applied on the transaction log handle. This routine commits the transaction regardless of whether the transaction has completed. You can call this routine to respond to transient errors (timeout or deadlock) reported by <code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code>, which applies the current transaction if it does not encounter an error.</p>
<p>See <a href="xla_event.htm#BABFFBDH">&#34;Handling timeout and deadlock errors&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref966"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref967"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaCommit(ttXlaHandle_h <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref968"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaCommit parameters" summary="This table contains a description of the parameter for the ttXlaCommit function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t49">Parameter</th>
<th class="cellalignment4367" id="r1c2-t49">Type</th>
<th class="cellalignment4367" id="r1c3-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t49" headers="r1c1-t49"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t49 r1c2-t49"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t49 r1c3-t49">Transaction log handle for the database</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref969"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref970"></a>Example</p>
<pre dir="ltr">rc = ttXlaCommit(xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref971"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code><br/>
<code dir="ltr"><a href="#CHECECCA">ttXlaRollback</a></code><br/>
<code dir="ltr"><a href="#CHEGHGGH">ttXlaLookup</a></code><br/>
<code dir="ltr"><a href="#CHECAIHJ">ttXlaTableCheck</a></code><br/>
<code dir="ltr"><a href="#CHEHADAC">ttXlaGenerateSQL</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV410" class="refsect2"><a id="CHEHADAC"></a>
<h3 class="refsect2"><a id="sthref972"></a><a id="sthref973"></a>ttXlaGenerateSQL</h3>
<p>This function is part of XLA replication functionality and is not appropriate for use in a typical XLA application.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This function does not currently work with LOB locators.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref974"></a>Description</p>
<p>Generates a SQL DML or DDL statement that expresses the effect of the update record. The generated statement is not applied to any database. Instead, the statement is returned in the given buffer, whose maximum size is specified by the <code dir="ltr"><span class="codeinlineitalic">maxLen</span></code> parameter. The actual size of the buffer is returned in <code dir="ltr"><span class="codeinlineitalic">actualLen</span></code>. For update and delete records, <code dir="ltr">ttXlaGenerateSQL</code> requires a primary key or a unique index on a non-nullable column to generate the correct SQL.</p>
<p>The generated SQL statement is encoded in the connection character set that is associated with the ODBC connection of the XLA handle.</p>
<p>Also see <a href="xla_event.htm#BABCFIFC">&#34;Replicating updates to a non-TimesTen database&#34;</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref975"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref976"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaGenerateSQL(ttXlaHandle_h <span class="italic">handle</span>,
                           ttXlaUpdateDesc_t* <span class="italic">record</span>,
                           out char* <span class="italic">buffer</span>,
                           SQLINTEGER <span class="italic">maxLen</span>,
                           out SQLINTEGER* <span class="italic">actualLen</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref977"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaGenerateSQL parameters" summary="This table contains a description of the parameters for the ttXlaGenerateSQL function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t51">Parameter</th>
<th class="cellalignment4367" id="r1c2-t51">Type</th>
<th class="cellalignment4367" id="r1c3-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t51" headers="r1c1-t51"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t51 r1c2-t51"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t51 r1c3-t51">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t51" headers="r1c1-t51"><code dir="ltr"><span class="codeinlineitalic">record</span></code></td>
<td class="cellalignment4368" headers="r3c1-t51 r1c2-t51"><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t51 r1c3-t51">Record to be translated into SQL</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t51" headers="r1c1-t51"><code dir="ltr"><span class="codeinlineitalic">buffer</span></code></td>
<td class="cellalignment4368" headers="r4c1-t51 r1c2-t51"><code dir="ltr">char*</code></td>
<td class="cellalignment4368" headers="r4c1-t51 r1c3-t51">Location of the translated SQL statement</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t51" headers="r1c1-t51"><code dir="ltr"><span class="codeinlineitalic">maxLen</span></code></td>
<td class="cellalignment4368" headers="r5c1-t51 r1c2-t51"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r5c1-t51 r1c3-t51">Maximum length of the buffer, in bytes</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t51" headers="r1c1-t51"><code dir="ltr"><span class="codeinlineitalic">actualLen</span></code></td>
<td class="cellalignment4368" headers="r6c1-t51 r1c2-t51"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r6c1-t51 r1c3-t51">Actual length of the buffer, in bytes</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref978"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref979"></a>Example</p>
<p>This example generates the text of a SQL statement that is equivalent to the <code dir="ltr">UPDATE</code> expressed by an update record:</p>
<pre dir="ltr">ttXlaUpdateDesc_t record;
char buffer[200];
/*
 * Get the desired update record into the varable record.
 */

SQLINTEGER actualLength;

rc = ttXlaGenerateSQL(xlahandle, &amp;record, buffer, 200,
                      &amp;actualLength);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref980"></a>Note</p>
<p>The <code dir="ltr">ttXlaGenerateSQL</code> function cannot generate SQL statements for update records associated with a table that has been dropped or altered since the record was generated.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref981"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code><br/>
<code dir="ltr"><a href="#CHEJAJEA">ttXlaCommit</a></code><br/>
<code dir="ltr"><a href="#CHECECCA">ttXlaRollback</a></code><br/>
<code dir="ltr"><a href="#CHEGHGGH">ttXlaLookup</a></code><br/>
<code dir="ltr"><a href="#CHECAIHJ">ttXlaTableCheck</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV415" class="refsect2"><a id="CHEGHGGH"></a>
<h3 class="refsect2"><a id="sthref982"></a><a id="sthref983"></a><a id="sthref984"></a>ttXlaLookup</h3>
<p>This function is part of XLA replication functionality and is not appropriate for use in a typical XLA application.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref985"></a>Description</p>
<p>This function looks for a record in the given table with key values according to the <code dir="ltr"><span class="codeinlineitalic">keys</span></code> parameter. The formats of the <code dir="ltr"><span class="codeinlineitalic">keys</span></code> and <code dir="ltr"><span class="codeinlineitalic">result</span></code> records are the same as for ordinary rows. This function requires a primary key on the underlying table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref986"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref987"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaLookup(ttXlaHandle_h <span class="italic">handle</span>,
                      ttXlaTableDesc_t* <span class="italic">table</span>,
                      void* <span class="italic">keys</span>,
                      out void* <span class="italic">result</span>,
                      SQLINTEGER <span class="italic">maxsize</span>,
                      out SQLINTEGER* <span class="italic">retsize</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref988"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaLookup parameters" summary="This table contains descriptions of the parameters of the ttXlaLookup function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t52">Parameter</th>
<th class="cellalignment4367" id="r1c2-t52">Type</th>
<th class="cellalignment4367" id="r1c3-t52">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t52" headers="r1c1-t52"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t52 r1c2-t52"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t52 r1c3-t52">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t52" headers="r1c1-t52"><code dir="ltr"><span class="codeinlineitalic">table</span></code></td>
<td class="cellalignment4368" headers="r3c1-t52 r1c2-t52"><code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t52 r1c3-t52">Table to search</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t52" headers="r1c1-t52"><code dir="ltr"><span class="codeinlineitalic">keys</span></code></td>
<td class="cellalignment4368" headers="r4c1-t52 r1c2-t52"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r4c1-t52 r1c3-t52">A record in the defined structure for the table
<p>Only those columns of the keys record that are part of the primary key for the table are examined.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t52" headers="r1c1-t52"><code dir="ltr"><span class="codeinlineitalic">result</span></code></td>
<td class="cellalignment4368" headers="r5c1-t52 r1c2-t52"><code dir="ltr">void*</code></td>
<td class="cellalignment4368" headers="r5c1-t52 r1c3-t52">Where the located record is copied
<p>If no record exists with the matching key columns, an error is returned.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t52" headers="r1c1-t52"><code dir="ltr"><span class="codeinlineitalic">maxsize</span></code></td>
<td class="cellalignment4368" headers="r6c1-t52 r1c2-t52"><code dir="ltr">SQLINTEGER</code></td>
<td class="cellalignment4368" headers="r6c1-t52 r1c3-t52">Size of the largest record that can fit into the result buffer</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t52" headers="r1c1-t52"><code dir="ltr"><span class="codeinlineitalic">retsize</span></code></td>
<td class="cellalignment4368" headers="r7c1-t52 r1c2-t52"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r7c1-t52 r1c3-t52">Actual size of the record</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref989"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref990"></a>Example</p>
<p>This example looks up a record given a pair of integer key values. Before this call, <code dir="ltr"><span class="codeinlineitalic">table</span></code> should describe the desired table and <code dir="ltr"><span class="codeinlineitalic">keybuffer</span></code> contains a record with the key columns set.</p>
<pre dir="ltr">char keybuffer[100];
char recbuffer[2000];
ttXlaTableDesc_t table;
SQLINTEGER recordSize;

rc = ttXlaLookup(xlahandle, &amp;table, keybuffer, recbuffer,
                 sizeof (recbuffer), &amp;recordSize);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref991"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code><br/>
<code dir="ltr"><a href="#CHEJAJEA">ttXlaCommit</a></code><br/>
<code dir="ltr"><a href="#CHECECCA">ttXlaRollback</a></code><br/>
<code dir="ltr"><a href="#CHECAIHJ">ttXlaTableCheck</a></code><br/>
<code dir="ltr"><a href="#CHEHADAC">ttXlaGenerateSQL</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV430" class="refsect2"><a id="CHECECCA"></a>
<h3 class="refsect2"><a id="sthref992"></a><a id="sthref993"></a><a id="sthref994"></a><a id="sthref995"></a>ttXlaRollback</h3>
<p>This function is part of XLA replication functionality and is not appropriate for use in a typical XLA application.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref996"></a>Description</p>
<p>Rolls back the current transaction being applied on the transaction log handle. You can call this routine to respond to transient errors (timeout or deadlock) reported by <code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code>.</p>
<p>See <a href="xla_event.htm#BABFFBDH">&#34;Handling timeout and deadlock errors&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref997"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref998"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaRollback(ttXlaHandle_h <span class="italic">handle</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref999"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaRollback parameters" summary="This table contains a description of the parameter for the ttXlaRollback function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t53">Parameter</th>
<th class="cellalignment4367" id="r1c2-t53">Type</th>
<th class="cellalignment4367" id="r1c3-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t53" headers="r1c1-t53"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t53 r1c2-t53"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t53 r1c3-t53">Transaction log handle for the database</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1000"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1001"></a>Example</p>
<pre dir="ltr">rc = ttXlaRollback(xlahandle);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1002"></a>See Also</p>
<br/>
<code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code><br/>
<code dir="ltr"><a href="#CHEJAJEA">ttXlaCommit</a></code><br/>
<code dir="ltr"><a href="#CHEGHGGH">ttXlaLookup</a></code><br/>
<code dir="ltr"><a href="#CHECAIHJ">ttXlaTableCheck</a></code><br/>
<code dir="ltr"><a href="#CHEHADAC">ttXlaGenerateSQL</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="TTCDV436" class="refsect2"><a id="CHECAIHJ"></a>
<h3 class="refsect2"><a id="sthref1003"></a><a id="sthref1004"></a><a id="sthref1005"></a>ttXlaTableCheck</h3>
<p>This function is part of XLA replication functionality and is not appropriate for use in a typical XLA application.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1006"></a>Description</p>
<p>When using XLA as a replication mechanism, this function verifies that the named table in the <code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a></code> structure received from a master database is compatible with a subscriber database or database associated with the transaction log handle. The <code dir="ltr"><span class="codeinlineitalic">compat</span></code> parameter indicates whether the tables are compatible.</p>
<p>See <a href="xla_event.htm#BABDIEEF">&#34;Checking table compatibility between databases&#34;</a> for a discussion about using this function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1007"></a>Required privilege</p>
<p><code dir="ltr">XLA</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1008"></a>Syntax</p>
<pre dir="ltr">SQLRETURN ttXlaTableCheck(ttXlaHandle_h <span class="italic">handle</span>,
                          ttXlaTblDesc_t* <span class="italic">table</span>,
                          ttXlaColDesc_t* <span class="italic">columns</span>,
                          out SQLINTEGER* <span class="italic">compat</span>)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1009"></a>Parameters</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTableCheck parameters" summary="This table contains descriptions of the parameters for the ttXlaTableCheck function." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t54">Parameter</th>
<th class="cellalignment4367" id="r1c2-t54">Type</th>
<th class="cellalignment4367" id="r1c3-t54">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t54" headers="r1c1-t54"><code dir="ltr"><span class="codeinlineitalic">handle</span></code></td>
<td class="cellalignment4368" headers="r2c1-t54 r1c2-t54"><code dir="ltr">ttXlaHandle_h</code></td>
<td class="cellalignment4368" headers="r2c1-t54 r1c3-t54">Transaction log handle for the database</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t54" headers="r1c1-t54"><code dir="ltr"><span class="codeinlineitalic">table</span></code></td>
<td class="cellalignment4368" headers="r3c1-t54 r1c2-t54"><code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r3c1-t54 r1c3-t54">Table description</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t54" headers="r1c1-t54"><code dir="ltr"><span class="codeinlineitalic">columns</span></code></td>
<td class="cellalignment4368" headers="r4c1-t54 r1c2-t54"><code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a>*</code></td>
<td class="cellalignment4368" headers="r4c1-t54 r1c3-t54">Column description for the table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t54" headers="r1c1-t54"><code dir="ltr"><span class="codeinlineitalic">compat</span></code></td>
<td class="cellalignment4368" headers="r5c1-t54 r1c2-t54"><code dir="ltr">SQLINTEGER*</code></td>
<td class="cellalignment4368" headers="r5c1-t54 r1c3-t54">Compatibility information:
<ul>
<li>
<p>1: Tables are compatible.</p>
</li>
<li>
<p>0: Tables are not compatible.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1010"></a>Returns</p>
<p>Returns <code dir="ltr">SQL_SUCCESS</code> if call is successful. Otherwise, use <code dir="ltr"><a href="#CHEECIEI">ttXlaError</a></code> to report the error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1011"></a>Example</p>
<p>This example checks the compatibility of a table:</p>
<pre dir="ltr">SQLINTEGER compat;
ttXlaTblDesc_t table;
ttXlaColDesc_t columns[20];
/*
 * Get the desired table and column definitions into
 * the variables &#34;table&#34; and &#34;columns&#34;
 */
rc = ttXlaTableCheck(xlahandle, &amp;table, columns, &amp;compat);
if (compat) {
    /* Compatible */
}
else {
    /*
     * Not compatible or some other error occurred
     */
}
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1012"></a>See also</p>
<br/>
<code dir="ltr"><a href="#CHEHCDII">ttXlaApply</a></code><br/>
<code dir="ltr"><a href="#CHEJAJEA">ttXlaCommit</a></code><br/>
<code dir="ltr"><a href="#CHECECCA">ttXlaRollback</a></code><br/>
<code dir="ltr"><a href="#CHEGHGGH">ttXlaLookup</a></code><br/>
<code dir="ltr"><a href="#CHEHADAC">ttXlaGenerateSQL</a></code></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHEIBHJA"></a>
<div id="TTCDV444" class="refsect1">
<h2 class="refsect1"><a id="sthref1013"></a><a id="sthref1014"></a><a id="sthref1015"></a>C data structures used by XLA</h2>
<p>This section describes the C data structures used by the XLA functions described in this chapter. These structures are defined in the following file:</p>
<p><code dir="ltr"><span class="codeinlineitalic">install_dir</span></code><code dir="ltr">/include/tt_xla.h</code></p>
<p>You must include this file when building your XLA application.</p>
<div id="TTCDV445" class="tblhruleformal">
<p class="titleintable"><a id="sthref1016"></a><a id="sthref1017"></a>Table 9-1 Summary of C data structures</p>
<table class="cellalignment4366" title="Summary of C data structures" summary="This table contains descriptions of the C data structures used by XLA functions." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t55">C data structure</th>
<th class="cellalignment4367" id="r1c2-t55">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHECJIBJ">ttXlaNodeHdr_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r2c1-t55 r1c2-t55">
<p>Describes the record type. Used at the beginning of records returned by XLA.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r3c1-t55 r1c2-t55">
<p>Describes an update record.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHEEHJEJ">ttXlaVersion_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r4c1-t55 r1c2-t55">
<p>Describes XLA version information returned by <code dir="ltr"><a href="#CHECDAAF">ttXlaGetVersion</a></code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r5c1-t55 r1c2-t55">
<p>Describes table information returned by <code dir="ltr"><a href="#CHEDDJIC">ttXlaGetTableInfo</a></code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHECGDHD">ttXlaTblVerDesc_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r6c1-t55 r1c2-t55">
<p>Describes table version returned by <code dir="ltr"><a href="#CHEDIHGI">ttXlaVersionTableInfo</a></code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r7c1-t55 r1c2-t55">
<p>Describes table column information returned by <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHEDIGDE">tt_LSN_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r8c1-t55 r1c2-t55">
<p>Describes a log record identifier used by bookmarks. This structure is used by the <code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a></code> structure.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t55" headers="r1c1-t55">
<p><code dir="ltr"><a href="#CHEJGGEH">tt_XlaLsn_t</a></code></p>
</td>
<td class="cellalignment4368" headers="r9c1-t55 r1c2-t55">
<p>Describes a log record identifier used by an XLA bookmark.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<div id="TTCDV446" class="refsect2"><a id="CHECJIBJ"></a>
<h3 class="refsect2">tt<a id="sthref1018"></a><a id="sthref1019"></a><a id="sthref1020"></a>XlaNodeHdr_t</h3>
<p>Most C data structures begin with a standard header that describes the data record type and length. The standard header has the type <code dir="ltr">ttXlaNodeHdr_t</code><a id="sthref1021"></a>.</p>
<p>This header has the following fields.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaNodeHdr_t struct fields" summary="This table contains descriptions of the fields in the ttXlaNodeHdr_t C data structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t56">Field</th>
<th class="cellalignment4367" id="r1c2-t56">Type</th>
<th class="cellalignment4367" id="r1c3-t56">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t56" headers="r1c1-t56"><code dir="ltr"><span class="codeinlineitalic">nodeType</span></code></td>
<td class="cellalignment4368" headers="r2c1-t56 r1c2-t56"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r2c1-t56 r1c3-t56">The type of record:
<ul>
<li>
<p><code dir="ltr">TTXLANHVERSION</code>: Version</p>
</li>
<li>
<p><code dir="ltr">TTXLANHUPDATE</code>: Update</p>
</li>
<li>
<p><code dir="ltr">TTXLANHTABLEDESC</code>: Table description</p>
</li>
<li>
<p><code dir="ltr">TTXLANHCOLDESC</code>: Column description</p>
</li>
<li>
<p><code dir="ltr">TTXLANHSTATUS</code>: Status</p>
</li>
<li>
<p><code dir="ltr">TTXLANHINVALID</code>: Invalid</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t56" headers="r1c1-t56"><code dir="ltr"><span class="codeinlineitalic">byteOrder</span></code></td>
<td class="cellalignment4368" headers="r3c1-t56 r1c2-t56"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r3c1-t56 r1c3-t56">Byte order of the record:
<ul>
<li>
<p>&#34;1&#34;: Big-endian</p>
</li>
<li>
<p>&#34;2&#34;: Little-endian</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t56" headers="r1c1-t56"><code dir="ltr"><span class="codeinlineitalic">length</span></code></td>
<td class="cellalignment4368" headers="r4c1-t56 r1c2-t56"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t56 r1c3-t56">Total length of record, including all attachments</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsect2" -->
<div id="TTCDV447" class="refsect2"><a id="CHEGEBFI"></a>
<h3 class="refsect2">t<a id="sthref1022"></a><a id="sthref1023"></a><a id="sthref1024"></a>tXlaUpdateDesc_t</h3>
<p>This structure describes an update operation to a single row (or <span class="italic">tuple</span>) in the database. Each update record returned by a <code dir="ltr"><a href="#CHEJGJBH">ttXlaNextUpdate</a></code> or <code dir="ltr"><a href="#CHEBCAAE">ttXlaNextUpdateWait</a></code> function begins with a fixed length <code dir="ltr">ttXlaUpdateDesc_t</code> header followed by zero to two rows from the database. The row data differs depending on the record type reported in the <code dir="ltr">ttXlaUpdateDesc_t</code> header:</p>
<ul>
<li>
<p>No rows are present in a <code dir="ltr">COMMITONLY</code> record.</p>
</li>
<li>
<p>One row is present in <code dir="ltr">INSERTTUP</code> or <code dir="ltr">DELETETUP</code>.</p>
</li>
<li>
<p>Two rows are present in an <code dir="ltr">UPDATETUP</code> record to report the row data before and after the update, respectively.</p>
</li>
<li>
<p>Special format rows are present in <code dir="ltr">CREATAB</code>, <code dir="ltr">DROPTAB</code>, <code dir="ltr">CREAIND</code>, <code dir="ltr">DROPIND</code>, <code dir="ltr">CREATVIEW</code>, <code dir="ltr">DROPVIEW</code>, <code dir="ltr">CREATSEQ</code>, <code dir="ltr">DROPSEQ</code>, <code dir="ltr">CREATSYN</code>, <code dir="ltr">DROPSYN</code>, <code dir="ltr">ADDCOLS</code>, and <code dir="ltr">DRPCOLS</code> records, which are described in <a href="#CHEHAAGD">&#34;Special update data formats&#34;</a>.</p>
</li>
</ul>
<p>The <code dir="ltr"><span class="codeinlineitalic">flags</span></code> field is a bit-map of special options for the record update.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">connID</span></code> field identifies the ODBC connection handle that initiated the update. This value can be used to determine if updates came from the same connection.</p>
<p>A separate commit XLA record is generated when a call to the <a id="sthref1025"></a><a id="sthref1026"></a><code dir="ltr">ttApplicationContext</code> procedure is not followed by an operation that generates an XLA record. See <a href="xla_event.htm#BABDCFBB">&#34;Passing application context&#34;</a> for a description of the <code dir="ltr">ttApplicationContext</code> procedure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1027"></a>Note</p>
<p>XLA cannot receive notification of the following:</p>
<ul>
<li>
<p><code dir="ltr">CREATE VIEW</code> or <code dir="ltr">DROP VIEW</code> for a non-materialized view</p>
</li>
<li>
<p><code dir="ltr">CREATE GLOBAL TEMPORARY TABLE</code> or <code dir="ltr">DROP TABLE</code> for a temporary table</p>
</li>
</ul>
<p>The only XLA records that can be generated from an <code dir="ltr">ALTER TABLE</code> operation are of the following types:</p>
<ul>
<li>
<p><code dir="ltr">ADDCOLS</code> or <code dir="ltr">DRPCOLS</code> when columns are added or dropped</p>
</li>
<li>
<p><code dir="ltr">CREAIND</code> or <code dir="ltr">DROPIND</code> when a unique attribute of a column is modified</p>
</li>
</ul>
<p>While sequence creates (<code dir="ltr">CREATESEQ</code>) and drops (<code dir="ltr">DROPSEQ</code>) are visible through XLA, sequence increments are not.</p>
<p>All deletes resulting from cascading deletes and aging are visible through XLA. The <code dir="ltr"><span class="codeinlineitalic">flags</span></code> value (discussed in the following table) indicates when deletes are due to cascading or aging.</p>
<p>The fields of the update header defined by <code dir="ltr">ttXlaUpdateDesc_t</code> are as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaUpdateDesc_t struct fields" summary="This table contains descriptions of the fields in the ttXlaUpdateDesc_t C data structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t57">Field</th>
<th class="cellalignment4367" id="r1c2-t57">Type</th>
<th class="cellalignment4367" id="r1c3-t57">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">header</span></code></td>
<td class="cellalignment4368" headers="r2c1-t57 r1c2-t57"><code dir="ltr"><a href="#CHECJIBJ">ttXlaNodeHdr_t</a></code></td>
<td class="cellalignment4368" headers="r2c1-t57 r1c3-t57">Standard data header</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">type</span></code></td>
<td class="cellalignment4368" headers="r3c1-t57 r1c2-t57"><code dir="ltr">SQLUSMALLINT</code></td>
<td class="cellalignment4368" headers="r3c1-t57 r1c3-t57">Record type:
<ul>
<li>
<p><code dir="ltr">CREATAB</code>: Create table.</p>
</li>
<li>
<p><code dir="ltr">DROPTAB</code>: Drop table.</p>
</li>
<li>
<p><code dir="ltr">CREAIND</code>: Create index.</p>
</li>
<li>
<p><code dir="ltr">DROPIND</code>: Drop index.</p>
</li>
<li>
<p><code dir="ltr">CREATVIEW</code>: Create view.</p>
</li>
<li>
<p><code dir="ltr">DROPVIEW</code>: Drop view.</p>
</li>
<li>
<p><code dir="ltr">CREATSEQ</code>: Create sequence.</p>
</li>
<li>
<p><code dir="ltr">DROPSEQ</code>: Drop sequence.</p>
</li>
<li>
<p><code dir="ltr">CREATSYN</code>: Create synonym.</p>
</li>
<li>
<p><code dir="ltr">DROPSYN</code>: Drop synonym.</p>
</li>
<li>
<p><code dir="ltr">ADDCOLS</code>: Add columns.</p>
</li>
<li>
<p><code dir="ltr">DRPCOLS</code>: Drop columns.</p>
</li>
<li>
<p><code dir="ltr">TRUNCATE</code>: Truncate table.</p>
</li>
<li>
<p><code dir="ltr">INSERTTUP</code>: Insert.</p>
</li>
<li>
<p><code dir="ltr">UPDATETUP</code>: Update.</p>
</li>
<li>
<p><code dir="ltr">DELETETUP</code>: Delete.</p>
</li>
<li>
<p><code dir="ltr">COMMITONLY</code>: Commit.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">flags</span></code></td>
<td class="cellalignment4368" headers="r4c1-t57 r1c2-t57"><code dir="ltr">SQLUSMALLINT</code></td>
<td class="cellalignment4368" headers="r4c1-t57 r1c3-t57">Special options on record update:
<ul>
<li>
<p><a id="sthref1028"></a><code dir="ltr">TT_UPDCOMMIT</code>: Indicates that the update record is the last record for the transaction. (Implied commit.)</p>
</li>
<li>
<p><a id="sthref1029"></a><code dir="ltr">TT_UPDFIRST</code>: Indicates that the update record is the first record for the transaction.</p>
</li>
<li>
<p><a id="sthref1030"></a><code dir="ltr">TT_UPDREPL</code>: Indicates that this update was the result of a non-XLA TimesTen replicated update from another database.</p>
</li>
<li>
<p><a id="sthref1031"></a><code dir="ltr">TT_UPDCOLS</code>: Indicates the presence of a list following the last returned row that specifies which columns in the row were updated. The list consists of an array of <code dir="ltr">SQLUSMALLINT</code> values, the first of which is the number of columns that were updated, followed by the column numbers of the updated columns. For example, if the first and third columns are updated, the array is (2, 1, 3) or (2, 3, 1), depending on the <code dir="ltr">UPDATE</code> statement used. This array is in all <code dir="ltr">UPDATETUP</code> records.</p>
</li>
<li>
<p><a id="sthref1032"></a><code dir="ltr">TT_UPDDEFAULT</code>: Indicates that the update record (either a <code dir="ltr">CREATAB</code> or <code dir="ltr">ADDCOLS</code>) contains default column values. If set, the default columns are presented as an array of <code dir="ltr">SQLUSMALLINT</code> values followed by a string with all the default values concatenated. The number of <code dir="ltr">SQLUSMALLINT</code> values in the array equals the number of columns in the <code dir="ltr">CREATAB</code> or <code dir="ltr">ADDCOLS</code> record.</p>
</li>
<li>
<p><a id="sthref1033"></a><code dir="ltr">TT_CASCDEL</code>: Indicates that the XLA update was generated as part of a cascade delete operation.</p>
</li>
<li>
<p><a id="sthref1034"></a><code dir="ltr">TT_AGING</code>: Indicates that the XLA update was generated as part of an aging operation.</p>
</li>
</ul>
<p>If the value of a specific column is 0, it indicates that column does not have a default value. The defaults for all nonzero values are concatenated in a string and are presented in order, with the array value indicating the length of the default value. For example, three columns with defaults 1 of type <code dir="ltr">INTEGER</code>, no default, and &#34;apple&#34; of type <code dir="ltr">VARCHAR2(10)</code> is (1,0,5)&#34;1apple&#34;.</p>
<p>Decimal values for each of these <code dir="ltr"><span class="codeinlineitalic">flags</span></code> bits is as follows. (Note that some flag values are for internal use only.)</p>
<pre dir="ltr">TT_UPDCOMMIT     1
TT_UPDFIRST      2
TT_UPDREPL       4
TT_UPDCOLS       8
TT_UPDDEFAULT   64
TT_CASCDEL     256
TT_AGING       512
</pre></td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">contextOffset</span></code></td>
<td class="cellalignment4368" headers="r5c1-t57 r1c2-t57"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r5c1-t57 r1c3-t57">Offset to application-provided context value
<p>This value is 0 if there is no context. A nonzero value indicates the location of the context relative to the beginning of the XLA record.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">connID</span></code></td>
<td class="cellalignment4368" headers="r6c1-t57 r1c2-t57"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r6c1-t57 r1c3-t57">Connection ID owning the transaction</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">sysTableID</span></code></td>
<td class="cellalignment4368" headers="r7c1-t57 r1c2-t57"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r7c1-t57 r1c3-t57">System-provided identifier of the affected table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">userTableID</span></code></td>
<td class="cellalignment4368" headers="r8c1-t57 r1c2-t57"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r8c1-t57 r1c3-t57">Application-defined table ID of the affected table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">tranID</span></code></td>
<td class="cellalignment4368" headers="r9c1-t57 r1c2-t57"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r9c1-t57 r1c3-t57">Read-only, system-provided transaction identifier</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">LSN</span></code></td>
<td class="cellalignment4368" headers="r10c1-t57 r1c2-t57"><code dir="ltr"><a href="#CHEDIGDE">tt_LSN_t</a></code></td>
<td class="cellalignment4368" headers="r10c1-t57 r1c3-t57">Transaction log record identifier of this operation, used for diagnostics</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">tuple1</span></code></td>
<td class="cellalignment4368" headers="r11c1-t57 r1c2-t57"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r11c1-t57 r1c3-t57">Length of first row (tuple), or zero</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t57" headers="r1c1-t57"><code dir="ltr"><span class="codeinlineitalic">tuple2</span></code></td>
<td class="cellalignment4368" headers="r12c1-t57 r1c2-t57"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r12c1-t57 r1c3-t57">Length of second row (tuple), or zero</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that <code dir="ltr">tt_LSN_t</code>, particularly the <code dir="ltr"><span class="codeinlineitalic">logFile</span></code> and <code dir="ltr"><span class="codeinlineitalic">logOffset</span></code> fields, is used differently than in earlier releases, referring to log record identifiers rather than sequentially increasing LSNs. See the note in <a href="#CHEDIGDE">&#34;tt_LSN_t&#34;</a>.</div>
</div>
<!-- class="refsubsect" -->
<div id="TTCDV448" class="refsect3"><a id="CHEHAAGD"></a>
<h4 class="refsect3">Special update data formats</h4>
<p>The data contained in an update record follows the <code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a></code> header. This section describes the data formats for the special update records related to specific SQL operations.</p>
<div id="TTCDV449" class="refsect4"><a id="sthref1035"></a>
<h5 class="refsect4">CREATE TABLE</h5>
<p>For a <code dir="ltr">CREATE TABLE</code> operation, the special row value consists of the <code dir="ltr">ttXlaTblDesc_t</code> record describing the new table, followed by the <code dir="ltr"><a href="#CHEIGBDD">ttXlaColDesc_t</a></code> records that describe each column.</p>
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV450" class="refsect4"><a id="sthref1036"></a>
<h5 class="refsect4">ALTER TABLE</h5>
<p>For an <code dir="ltr">ALTER TABLE</code> operation, the special row value consists of a <code dir="ltr">ttXlaDropTableTup_t</code> or <code dir="ltr">ttXlaAddColumnTup_t</code> value, followed by a <code dir="ltr">ttXlaColDesc_t</code> record that describes the column.</p>
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV451" class="refsect4"><a id="CHEEAGED"></a>
<h5 class="refsect4"><a id="sthref1037"></a>ttXlaDropTableTup_t</h5>
<p>For a <code dir="ltr">DROP TABLE</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDropTableTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaDropTableTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t59">Field</th>
<th class="cellalignment4367" id="r1c2-t59">Type</th>
<th class="cellalignment4367" id="r1c3-t59">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t59" headers="r1c1-t59"><code dir="ltr"><span class="codeinlineitalic">tblName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t59 r1c2-t59"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t59 r1c3-t59">Name of the dropped table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t59" headers="r1c1-t59"><code dir="ltr"><span class="codeinlineitalic">tblOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t59 r1c2-t59"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t59 r1c3-t59">Owner of the dropped table</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV452" class="refsect4"><a id="sthref1038"></a>
<h5 class="refsect4"><a id="sthref1039"></a>ttXlaTruncateTableTup_t</h5>
<p>For a <code dir="ltr">TRUNCATE TABLE</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTruncateTableTup_t" summary="This table contains descriptions of the fields in the ttXlaTruncateTableTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t60">Field</th>
<th class="cellalignment4367" id="r1c2-t60">Type</th>
<th class="cellalignment4367" id="r1c3-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t60" headers="r1c1-t60"><code dir="ltr"><span class="codeinlineitalic">tblName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t60 r1c2-t60"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t60 r1c3-t60">Name of the truncated table</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t60" headers="r1c1-t60"><code dir="ltr"><span class="codeinlineitalic">tblOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t60 r1c2-t60"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t60 r1c3-t60">Owner of the truncated table</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV453" class="refsect4"><a id="sthref1040"></a>
<h5 class="refsect4"><a id="sthref1041"></a>ttXlaCreateIndexTup_t</h5>
<p>For a <code dir="ltr">CREATE INDEX</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaCreateIndexTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaCreateIndexTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t61">Field</th>
<th class="cellalignment4367" id="r1c2-t61">Type</th>
<th class="cellalignment4367" id="r1c3-t61">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">tblName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t61 r1c2-t61"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t61 r1c3-t61">Name of the table on which the index is defined</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">tblOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t61 r1c2-t61"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t61 r1c3-t61">Owner of the table on which the index is defined</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">ixName</span></code></td>
<td class="cellalignment4368" headers="r4c1-t61 r1c2-t61"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r4c1-t61 r1c3-t61">Name of the new index</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">flag</span></code></td>
<td class="cellalignment4368" headers="r5c1-t61 r1c2-t61"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r5c1-t61 r1c3-t61">Index flag:
<ul>
<li>
<p>&#34;P&#34;: Primary key</p>
</li>
<li>
<p>&#34;F&#34;: Foreign key</p>
</li>
<li>
<p>&#34;R&#34;: Regular</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">nixcols</span></code></td>
<td class="cellalignment4368" headers="r6c1-t61 r1c2-t61"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r6c1-t61 r1c3-t61">Number of indexed columns</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">ixColsSys</span></code></td>
<td class="cellalignment4368" headers="r7c1-t61 r1c2-t61"><code dir="ltr">SQLUINTEGER(16)</code></td>
<td class="cellalignment4368" headers="r7c1-t61 r1c3-t61">Indexed column numbers using system numbers</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">ixColsUser</span></code></td>
<td class="cellalignment4368" headers="r8c1-t61 r1c2-t61"><code dir="ltr">SQLUINTEGER(16)</code></td>
<td class="cellalignment4368" headers="r8c1-t61 r1c3-t61">Indexed column numbers using user-defined column IDs</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">ixType</span></code></td>
<td class="cellalignment4368" headers="r9c1-t61 r1c2-t61"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r9c1-t61 r1c3-t61">Type of index:
<ul>
<li>
<p>&#34;T&#34;: Range</p>
</li>
<li>
<p>&#34;H&#34;: Hash</p>
</li>
<li>
<p>&#34;B&#34;: Bit map</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">ixUnique</span></code></td>
<td class="cellalignment4368" headers="r10c1-t61 r1c2-t61"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r10c1-t61 r1c3-t61">Uniqueness of index:
<ul>
<li>
<p>&#34;U&#34;: Unique</p>
</li>
<li>
<p>&#34;N&#34;: Non-unique</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t61" headers="r1c1-t61"><code dir="ltr"><span class="codeinlineitalic">pages</span></code></td>
<td class="cellalignment4368" headers="r11c1-t61 r1c2-t61"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r11c1-t61 r1c3-t61">Number of pages for hash indexes</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV454" class="refsect4"><a id="sthref1042"></a>
<h5 class="refsect4"><a id="sthref1043"></a>ttXlaDropIndexTup_t</h5>
<p>For a <code dir="ltr">DROP INDEX</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDropIndexTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaDropIndexTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t62">Field</th>
<th class="cellalignment4367" id="r1c2-t62">Type</th>
<th class="cellalignment4367" id="r1c3-t62">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t62" headers="r1c1-t62"><code dir="ltr"><span class="codeinlineitalic">tblName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t62 r1c2-t62"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t62 r1c3-t62">Name of the table on which the index was dropped</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t62" headers="r1c1-t62"><code dir="ltr"><span class="codeinlineitalic">tblOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t62 r1c2-t62"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t62 r1c3-t62">Owner of the table on which the index was dropped</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t62" headers="r1c1-t62"><code dir="ltr"><span class="codeinlineitalic">ixName</span></code></td>
<td class="cellalignment4368" headers="r4c1-t62 r1c2-t62"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r4c1-t62 r1c3-t62">Name of the dropped index</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV455" class="refsect4"><a id="CHEJIAIH"></a>
<h5 class="refsect4"><a id="sthref1044"></a>ttXlaAddColumnTup_t</h5>
<p>For an <code dir="ltr">ADD COLUMN</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaAddColumnTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaAddColumnTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t63">Field</th>
<th class="cellalignment4367" id="r1c2-t63">Type</th>
<th class="cellalignment4367" id="r1c3-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t63" headers="r1c1-t63"><code dir="ltr"><span class="codeinlineitalic">ncols</span></code></td>
<td class="cellalignment4368" headers="r2c1-t63 r1c2-t63"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r2c1-t63 r1c3-t63">Number of additional columns</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>Following this special row are the <code dir="ltr">ttXlaColDesc_t</code> records describing the new columns.</p>
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV456" class="refsect4"><a id="sthref1045"></a>
<h5 class="refsect4"><a id="sthref1046"></a>ttXlaDropColumnTup_t</h5>
<p>For a <code dir="ltr">DROP COLUMN</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDropColumnTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaDropColumnTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t64">Field</th>
<th class="cellalignment4367" id="r1c2-t64">Type</th>
<th class="cellalignment4367" id="r1c3-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t64" headers="r1c1-t64"><code dir="ltr"><span class="codeinlineitalic">ncols</span></code></td>
<td class="cellalignment4368" headers="r2c1-t64 r1c2-t64"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r2c1-t64 r1c3-t64">Number of dropped columns</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>Following this special row is an array of <code dir="ltr">ttXlaColDesc_t</code> records describing the columns that were dropped.</p>
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV457" class="refsect4"><a id="sthref1047"></a>
<h5 class="refsect4"><a id="sthref1048"></a>ttXlaCreateSeqTup_t</h5>
<p>For a <code dir="ltr">CREATE SEQUENCE</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaCreateSeqTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaCreateSeqTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t65">Field</th>
<th class="cellalignment4367" id="r1c2-t65">Type</th>
<th class="cellalignment4367" id="r1c3-t65">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t65" headers="r1c1-t65"><code dir="ltr"><span class="codeinlineitalic">sqName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t65 r1c2-t65"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t65 r1c3-t65">Name of sequence</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t65" headers="r1c1-t65"><code dir="ltr"><span class="codeinlineitalic">sqOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t65 r1c2-t65"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t65 r1c3-t65">Owner of sequence</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t65" headers="r1c1-t65"><code dir="ltr"><span class="codeinlineitalic">cycle</span></code></td>
<td class="cellalignment4368" headers="r4c1-t65 r1c2-t65"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r4c1-t65 r1c3-t65">Cycle flag
<p>Indicates whether the sequence number generator continues to generate numbers after it reaches the maximum or minimum value:</p>
<ul>
<li>
<p>&#34;1&#34;: Yes</p>
</li>
<li>
<p>&#34;0&#34;: No</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t65" headers="r1c1-t65"><code dir="ltr"><span class="codeinlineitalic">minval</span></code></td>
<td class="cellalignment4368" headers="r5c1-t65 r1c2-t65"><code dir="ltr">SQLBIGINT</code></td>
<td class="cellalignment4368" headers="r5c1-t65 r1c3-t65">Minimum value of sequence</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t65" headers="r1c1-t65"><code dir="ltr"><span class="codeinlineitalic">maxval</span></code></td>
<td class="cellalignment4368" headers="r6c1-t65 r1c2-t65"><code dir="ltr">SQLBIGINT</code></td>
<td class="cellalignment4368" headers="r6c1-t65 r1c3-t65">Maximum value of sequence</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t65" headers="r1c1-t65"><code dir="ltr"><span class="codeinlineitalic">incr</span></code></td>
<td class="cellalignment4368" headers="r7c1-t65 r1c2-t65"><code dir="ltr">SQLBIGINT</code></td>
<td class="cellalignment4368" headers="r7c1-t65 r1c3-t65">Increment between sequence numbers
<p>Positive numbers indicate an ascending sequence and negative numbers indicate a descending sequence. In a descending sequence, the range goes from <code dir="ltr"><span class="codeinlineitalic">maxval</span></code> to <code dir="ltr"><span class="codeinlineitalic">minval</span></code>. In an ascending sequence, the range goes from <code dir="ltr"><span class="codeinlineitalic">minval</span></code> to <code dir="ltr"><span class="codeinlineitalic">maxval</span></code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV458" class="refsect4"><a id="sthref1049"></a>
<h5 class="refsect4"><a id="sthref1050"></a>ttXlaDropSeqTup_t</h5>
<p>For a <code dir="ltr">DROP SEQUENCE</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDropSeqTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaDropSeqTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t66">Field</th>
<th class="cellalignment4367" id="r1c2-t66">Type</th>
<th class="cellalignment4367" id="r1c3-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t66" headers="r1c1-t66"><code dir="ltr"><span class="codeinlineitalic">sqName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t66 r1c2-t66"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t66 r1c3-t66">Name of sequence</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t66" headers="r1c1-t66"><code dir="ltr"><span class="codeinlineitalic">sqOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t66 r1c2-t66"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t66 r1c3-t66">Owner of sequence</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV459" class="refsect4"><a id="sthref1051"></a>
<h5 class="refsect4"><a id="sthref1052"></a>ttXlaViewDesc_t</h5>
<p>For a <code dir="ltr">CREATE VIEW</code> operation, the row value is as follows.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This applies to either materialized or non-materialized views.</div>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaViewDesc_t struct fields" summary="This table contains descriptions of the fields in the ttXlaViewDescTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t68">Field</th>
<th class="cellalignment4367" id="r1c2-t68">Type</th>
<th class="cellalignment4367" id="r1c3-t68">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t68" headers="r1c1-t68"><code dir="ltr"><span class="codeinlineitalic">vwName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t68 r1c2-t68"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t68 r1c3-t68">Name of view</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t68" headers="r1c1-t68"><code dir="ltr"><span class="codeinlineitalic">vwOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t68 r1c2-t68"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t68 r1c3-t68">Owner of view</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t68" headers="r1c1-t68"><code dir="ltr"><span class="codeinlineitalic">sysTableID</span></code></td>
<td class="cellalignment4368" headers="r4c1-t68 r1c2-t68"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r4c1-t68 r1c3-t68">System table ID stored in <code dir="ltr">SYS.TABLES</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV460" class="refsect4"><a id="sthref1053"></a>
<h5 class="refsect4"><a id="sthref1054"></a>ttXlaDropViewTup_t</h5>
<p>For a <code dir="ltr">DROP VIEW</code> operation, the row value is as follows.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This applies to either materialized or non-materialized views.</div>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDropViewTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaDropViewTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t70">Field</th>
<th class="cellalignment4367" id="r1c2-t70">Type</th>
<th class="cellalignment4367" id="r1c3-t70">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t70" headers="r1c1-t70"><code dir="ltr"><span class="codeinlineitalic">vwName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t70 r1c2-t70"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t70 r1c3-t70">Name of view</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t70" headers="r1c1-t70"><code dir="ltr"><span class="codeinlineitalic">vwOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t70 r1c2-t70"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t70 r1c3-t70">Owner of view</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV496" class="refsect4"><a id="sthref1055"></a>
<h5 class="refsect4"><a id="sthref1056"></a>ttXlaCreateSynTup_t</h5>
<p>For a <code dir="ltr">CREATE SYNONYM</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaCreateSynTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaCreateSynTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t71">Field</th>
<th class="cellalignment4367" id="r1c2-t71">Type</th>
<th class="cellalignment4367" id="r1c3-t71">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t71" headers="r1c1-t71"><code dir="ltr"><span class="codeinlineitalic">synName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t71 r1c2-t71"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t71 r1c3-t71">Name of synonym</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t71" headers="r1c1-t71"><code dir="ltr"><span class="codeinlineitalic">synOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t71 r1c2-t71"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t71 r1c3-t71">Owner of synonym</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t71" headers="r1c1-t71"><code dir="ltr"><span class="codeinlineitalic">objName</span></code></td>
<td class="cellalignment4368" headers="r4c1-t71 r1c2-t71"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r4c1-t71 r1c3-t71">Name of object the synonym points to</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t71" headers="r1c1-t71"><code dir="ltr"><span class="codeinlineitalic">objOwner</span></code></td>
<td class="cellalignment4368" headers="r5c1-t71 r1c2-t71"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r5c1-t71 r1c3-t71">Owner of object the synonym points to</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t71" headers="r1c1-t71"><code dir="ltr"><span class="codeinlineitalic">isPublic</span></code></td>
<td class="cellalignment4368" headers="r6c1-t71 r1c2-t71"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r6c1-t71 r1c3-t71">Indicates whether the synonym is public:
<ul>
<li>
<p>&#34;1&#34;: True</p>
</li>
<li>
<p>&#34;0&#34;: False</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t71" headers="r1c1-t71"><code dir="ltr"><span class="codeinlineitalic">isReplace</span></code></td>
<td class="cellalignment4368" headers="r7c1-t71 r1c2-t71"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r7c1-t71 r1c3-t71">Indicates whether the synonym was created using <code dir="ltr">CREATE OR REPLACE</code>:
<ul>
<li>
<p>&#34;1&#34;: True</p>
</li>
<li>
<p>&#34;0&#34;: False</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV497" class="refsect4"><a id="sthref1057"></a>
<h5 class="refsect4"><a id="sthref1058"></a>ttXlaDropSynTup_t</h5>
<p>For a <code dir="ltr">DROP SYNONYM</code> operation, the row value is as follows.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaDropSynTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaDropSynTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t72">Field</th>
<th class="cellalignment4367" id="r1c2-t72">Type</th>
<th class="cellalignment4367" id="r1c3-t72">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t72" headers="r1c1-t72"><code dir="ltr"><span class="codeinlineitalic">synName</span></code></td>
<td class="cellalignment4368" headers="r2c1-t72 r1c2-t72"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r2c1-t72 r1c3-t72">Name of synonym</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t72" headers="r1c1-t72"><code dir="ltr"><span class="codeinlineitalic">synOwner</span></code></td>
<td class="cellalignment4368" headers="r3c1-t72 r1c2-t72"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t72 r1c3-t72">Owner of synonym</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t72" headers="r1c1-t72"><code dir="ltr"><span class="codeinlineitalic">isPublic</span></code></td>
<td class="cellalignment4368" headers="r4c1-t72 r1c2-t72"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r4c1-t72 r1c3-t72">Indicates whether the synonym is public:
<ul>
<li>
<p>&#34;1&#34;: True</p>
</li>
<li>
<p>&#34;0&#34;: False</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV461" class="refsect4"><a id="sthref1059"></a>
<h5 class="refsect4"><a id="sthref1060"></a>ttXlaSetTableTup_t</h5>
<p>The description of the <code dir="ltr">SET TABLE ID</code> operation uses the previously assigned application table identifier in the main part of the update record and provides the new value of the application table identifier in the following special row.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaSetTableTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaSetTableTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t73">Field</th>
<th class="cellalignment4367" id="r1c2-t73">Type</th>
<th class="cellalignment4367" id="r1c3-t73">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t73" headers="r1c1-t73"><code dir="ltr"><span class="codeinlineitalic">newID</span></code></td>
<td class="cellalignment4368" headers="r2c1-t73 r1c2-t73"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r2c1-t73 r1c3-t73">New user-defined table ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV462" class="refsect4"><a id="sthref1061"></a>
<h5 class="refsect4"><a id="sthref1062"></a>ttXlaSetColumnTup_t</h5>
<p>The description of the <code dir="ltr">SET COLUMN ID</code> operation provides the following special row:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaSetColumnTup_t struct fields" summary="This table contains descriptions of the fields in the ttXlaSetColumnTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t74">Field</th>
<th class="cellalignment4367" id="r1c2-t74">Type</th>
<th class="cellalignment4367" id="r1c3-t74">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t74" headers="r1c1-t74"><code dir="ltr"><span class="codeinlineitalic">oldUserColID</span></code></td>
<td class="cellalignment4368" headers="r2c1-t74 r1c2-t74"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r2c1-t74 r1c3-t74">Previous user-defined column ID value</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t74" headers="r1c1-t74"><code dir="ltr"><span class="codeinlineitalic">newUserColID</span></code></td>
<td class="cellalignment4368" headers="r3c1-t74 r1c2-t74"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r3c1-t74 r1c3-t74">New user-defined column ID value</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t74" headers="r1c1-t74"><code dir="ltr"><span class="codeinlineitalic">sysColID</span></code></td>
<td class="cellalignment4368" headers="r4c1-t74 r1c2-t74"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t74 r1c3-t74">System column ID</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" -->
<div id="TTCDV463" class="refsect4"><a id="sthref1063"></a>
<h5 class="refsect4"><a id="sthref1064"></a>ttXlaSetStatusTup_t</h5>
<p>A change in a table&#39;s replication status provides the following special row:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaSetStatusTup_t" summary="This table contains descriptions of the fields in the ttXlaSetStatusTup_t row value." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t75">Field</th>
<th class="cellalignment4367" id="r1c2-t75">Type</th>
<th class="cellalignment4367" id="r1c3-t75">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t75" headers="r1c1-t75"><code dir="ltr"><span class="codeinlineitalic">oldStatus</span></code></td>
<td class="cellalignment4368" headers="r2c1-t75 r1c2-t75"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r2c1-t75 r1c3-t75">Previous replication status</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t75" headers="r1c1-t75"><code dir="ltr"><span class="codeinlineitalic">newStatus</span></code></td>
<td class="cellalignment4368" headers="r3c1-t75 r1c2-t75"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r3c1-t75 r1c3-t75">New replication status</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<br/></div>
<!-- class="refsect4" --></div>
<!-- class="refsect3" -->
<div id="TTCDV464" class="refsect3"><a id="sthref1065"></a>
<h4 class="refsect3">Locating the row data following a ttXlaUpdateDesc_t header</h4>
<p>See <a href="xla_event.htm#BABHJGCD">&#34;Retrieving update records from the transaction log&#34;</a> and <a href="xla_event.htm#BABEHGIG">&#34;Inspecting record headers and locating row addresses&#34;</a> for a detailed discussion on obtaining update records and inspecting the contents of <code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a></code> headers. Below is a summary of these procedures.</p>
<p>The update header is immediately followed by the row data. The row data is stored in an internal format with the offsets given in the <code dir="ltr">ttXlaColDesc_t</code> structure returned by <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code>.</p>
<p>You can locate the address of the row data by adding the address of the update header to its size.</p>
<p>For example:</p>
<pre dir="ltr">char* Row = (char*)&amp;ttXlaUpdateDesc_t +
             sizeof(ttXlaUpdateDesc_t);
</pre>
<p>For <code dir="ltr">UPDATETUP</code> records, there are two rows of data following the <code dir="ltr">ttXlaUpdateDesc_t</code> header. The first row contains the data before the update, and the second row the data after the update.</p>
<p>Since the new row is right after the old row, you can calculate its address by adding the address of the old row to its length (<code dir="ltr">tuple1</code>).</p>
<p>For example:</p>
<pre dir="ltr">char* oldRow = (char*)&amp;ttXlaUpdateDesc_t +
                sizeof(ttXlaUpdateDesc_t);
char* newRow = oldRow + ttXlaUpdateDesc_t.tuple1;
</pre>
<p>See <a href="#CHEIGBDD">&#34;ttXlaColDesc_t&#34;</a> for details on how to access the column data in a returned row.</p>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="TTCDV466" class="refsect2"><a id="CHEEHJEJ"></a>
<h3 class="refsect2">t<a id="sthref1066"></a><a id="sthref1067"></a><a id="sthref1068"></a>tXlaVersion_t</h3>
<p>To permit future extensions to XLA, a version structure <code dir="ltr">ttXlaVersion_t</code> describes the current XLA version and structure byte order. This structure is returned by the <code dir="ltr"><a href="#CHECDAAF">ttXlaGetVersion</a></code> function.</p>
<p>This structure has the following fields:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaVersion_t struct fields" summary="This table contains descriptions of the fields in the ttXlaVersion_t structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t76">Field</th>
<th class="cellalignment4367" id="r1c2-t76">Type</th>
<th class="cellalignment4367" id="r1c3-t76">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">header</span></code></td>
<td class="cellalignment4368" headers="r2c1-t76 r1c2-t76"><code dir="ltr"><a href="#CHECJIBJ">ttXlaNodeHdr_t</a></code></td>
<td class="cellalignment4368" headers="r2c1-t76 r1c3-t76">Standard data header</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">hardware</span></code></td>
<td class="cellalignment4368" headers="r3c1-t76 r1c2-t76"><code dir="ltr">char(16)</code></td>
<td class="cellalignment4368" headers="r3c1-t76 r1c3-t76">Name of hardware platform</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">wordSize</span></code></td>
<td class="cellalignment4368" headers="r4c1-t76 r1c2-t76"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t76 r1c3-t76">Native word size (32 or 64 bits)</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">TTMajor</span></code></td>
<td class="cellalignment4368" headers="r5c1-t76 r1c2-t76"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r5c1-t76 r1c3-t76">TimesTen major version</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">TTMinor</span></code></td>
<td class="cellalignment4368" headers="r6c1-t76 r1c2-t76"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r6c1-t76 r1c3-t76">TimesTen minor version</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">TTPatch</span></code></td>
<td class="cellalignment4368" headers="r7c1-t76 r1c2-t76"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r7c1-t76 r1c3-t76">TimesTen point release number</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">OS</span></code></td>
<td class="cellalignment4368" headers="r8c1-t76 r1c2-t76"><code dir="ltr">char(16)</code></td>
<td class="cellalignment4368" headers="r8c1-t76 r1c3-t76">Name of operating system</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">OSMajor</span></code></td>
<td class="cellalignment4368" headers="r9c1-t76 r1c2-t76"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r9c1-t76 r1c3-t76">Operating system major version</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t76" headers="r1c1-t76"><code dir="ltr"><span class="codeinlineitalic">OSMinor</span></code></td>
<td class="cellalignment4368" headers="r10c1-t76 r1c2-t76"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r10c1-t76 r1c3-t76">Operating system minor version</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsect2" -->
<div id="TTCDV467" class="refsect2"><a id="CHEHJIAA"></a>
<h3 class="refsect2">t<a id="sthref1069"></a><a id="sthref1070"></a><a id="sthref1071"></a>tXlaTblDesc_t</h3>
<p>Table information is portrayed through the <code dir="ltr">ttXlaTblDesc_t</code> structure. This structure is returned by the <code dir="ltr"><a href="#CHEDDJIC">ttXlaGetTableInfo</a></code> function.</p>
<p>This structure has the following fields:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTblDesc_t struct fields" summary="This table contains descriptions of the fields in the ttXlaTblDesc_t structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t77">Field</th>
<th class="cellalignment4367" id="r1c2-t77">Type</th>
<th class="cellalignment4367" id="r1c3-t77">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">header</span></code></td>
<td class="cellalignment4368" headers="r2c1-t77 r1c2-t77"><code dir="ltr"><a href="#CHECJIBJ">ttXlaNodeHdr_t</a></code></td>
<td class="cellalignment4368" headers="r2c1-t77 r1c3-t77">Standard data header</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">tblName</span></code></td>
<td class="cellalignment4368" headers="r3c1-t77 r1c2-t77"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r3c1-t77 r1c3-t77">Name of the table, null-terminated</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">tblOwner</span></code></td>
<td class="cellalignment4368" headers="r4c1-t77 r1c2-t77"><code dir="ltr">char(31)</code></td>
<td class="cellalignment4368" headers="r4c1-t77 r1c3-t77">Owner of the table, null-terminated</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">sysTableID</span></code></td>
<td class="cellalignment4368" headers="r5c1-t77 r1c2-t77"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r5c1-t77 r1c3-t77">Unique system-defined table identifier</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">userTableId</span></code></td>
<td class="cellalignment4368" headers="r6c1-t77 r1c2-t77"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r6c1-t77 r1c3-t77">User-defined table identifier</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">columns</span></code></td>
<td class="cellalignment4368" headers="r7c1-t77 r1c2-t77"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r7c1-t77 r1c3-t77">Number of columns</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">width</span></code></td>
<td class="cellalignment4368" headers="r8c1-t77 r1c2-t77"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r8c1-t77 r1c3-t77">Inline row size</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">nPrimCols</span></code></td>
<td class="cellalignment4368" headers="r9c1-t77 r1c2-t77"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r9c1-t77 r1c3-t77">Number of primary columns</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">primColsSys</span></code></td>
<td class="cellalignment4368" headers="r10c1-t77 r1c2-t77"><code dir="ltr">SQLUINTEGER(16)</code></td>
<td class="cellalignment4368" headers="r10c1-t77 r1c3-t77">System primary key column numbers</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t77" headers="r1c1-t77"><code dir="ltr"><span class="codeinlineitalic">primColsUser</span></code></td>
<td class="cellalignment4368" headers="r11c1-t77 r1c2-t77"><code dir="ltr">SQLUINTEGER(16)</code></td>
<td class="cellalignment4368" headers="r11c1-t77 r1c3-t77">User-defined primary key column numbers</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>The inline row size includes space for all fixed-width columns, null column flags, and pointer information for variable-length columns. Each varying-length column occupies four bytes of inline row space.</p>
<p>Note the following if the table has a declared primary key:</p>
<ul>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">nPrimCols</span></code> value is greater than 0.</p>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">primColsSys</span></code> array contains the column numbers of the primary key, in the same order in which they were originally declared with the <code dir="ltr">CREATE TABLE</code> statement.</p>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">primColsUser</span></code> array contains the corresponding application-specified column identifiers.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="TTCDV468" class="refsect2"><a id="CHECGDHD"></a>
<h3 class="refsect2"><a id="sthref1072"></a><a id="sthref1073"></a><a id="sthref1074"></a>ttXlaTblVerDesc_t</h3>
<p>This data structure contains the table version number and <code dir="ltr">ttXlaTblDesc_t</code>. It is returned by <code dir="ltr"><a href="#CHEDIHGI">ttXlaVersionTableInfo</a></code>. This structure has the following fields:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaTblVerDesc_t struct fields" summary="This table contains descriptions of the fields in the ttXlaTblVerDesc_t structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t78">Field</th>
<th class="cellalignment4367" id="r1c2-t78">Type</th>
<th class="cellalignment4367" id="r1c3-t78">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t78" headers="r1c1-t78"><code dir="ltr"><span class="codeinlineitalic">tblDesc</span></code></td>
<td class="cellalignment4368" headers="r2c1-t78 r1c2-t78"><code dir="ltr"><a href="#CHEHJIAA">ttXlaTblDesc_t</a></code></td>
<td class="cellalignment4368" headers="r2c1-t78 r1c3-t78">Table description</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t78" headers="r1c1-t78"><code dir="ltr"><span class="codeinlineitalic">tblVer</span></code></td>
<td class="cellalignment4368" headers="r3c1-t78 r1c2-t78"><code dir="ltr">SQLBIGINT</code></td>
<td class="cellalignment4368" headers="r3c1-t78 r1c3-t78">System-generated table version number</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsect2" -->
<div id="TTCDV469" class="refsect2"><a id="CHEIGBDD"></a>
<h3 class="refsect2">t<a id="sthref1075"></a><a id="sthref1076"></a><a id="sthref1077"></a>tXlaColDesc_t</h3>
<p>Column information is given through this structure, which is returned by the <code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> function.</p>
<p>The structure has the following fields:</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="ttXlaColDesc_t" summary="This table contains descriptions of the fields in the ttXlaColDesc_t structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t79">Field</th>
<th class="cellalignment4367" id="r1c2-t79">Type</th>
<th class="cellalignment4367" id="r1c3-t79">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">header</span></code></td>
<td class="cellalignment4368" headers="r2c1-t79 r1c2-t79"><code dir="ltr"><a href="#CHECJIBJ">ttXlaNodeHdr_t</a></code></td>
<td class="cellalignment4368" headers="r2c1-t79 r1c3-t79">Standard data header</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">colName [tt_NameLenMax]</span></code></td>
<td class="cellalignment4368" headers="r3c1-t79 r1c2-t79"><code dir="ltr">char</code></td>
<td class="cellalignment4368" headers="r3c1-t79 r1c3-t79">Name of the column</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">pad0</span></code></td>
<td class="cellalignment4368" headers="r4c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r4c1-t79 r1c3-t79">Pad to four-byte boundary</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">sysColNum</span></code></td>
<td class="cellalignment4368" headers="r5c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r5c1-t79 r1c3-t79">Ordinal number of the column as determined when the table is created or subsequently altered
<p>This is the same as the corresponding <code dir="ltr">COLNUM</code> value in <code dir="ltr">SYS.COLUMNS</code>. (See <a class="olink TTSYS363" href="../TTSYS/systemtables.htm#TTSYS363">&#34;SYS.COLUMNS&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database System Tables and Views Reference</span>.)</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r6c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">userColNum</span></code></td>
<td class="cellalignment4368" headers="r6c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r6c1-t79 r1c3-t79">Ordinal number of the column if optionally specified by the user
<p>This is zero or a column number specified through the <code dir="ltr">ttSetUserColumnID</code> TimesTen built-in procedure. (See <a class="olink TTREF303" href="../TTREF/proced.htm#TTREF303">&#34;ttSetUserColumnID&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Reference</span>.)</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r7c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">dataType</span></code></td>
<td class="cellalignment4368" headers="r7c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r7c1-t79 r1c3-t79">Structure in <code dir="ltr">ODBC TTXLA_*</code> code
<p>See <a href="xla_event.htm#BABFCAFA">&#34;About XLA data types&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r8c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">size</span></code></td>
<td class="cellalignment4368" headers="r8c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r8c1-t79 r1c3-t79">Maximum or basic size of column</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r9c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">offset</span></code></td>
<td class="cellalignment4368" headers="r9c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r9c1-t79 r1c3-t79">Offset to fixed-length part of column</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r10c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">nullOffset</span></code></td>
<td class="cellalignment4368" headers="r10c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r10c1-t79 r1c3-t79">Offset to null byte, or zero if not nullable</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r11c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">precision</span></code></td>
<td class="cellalignment4368" headers="r11c1-t79 r1c2-t79"><code dir="ltr">SQLSMALLINT</code></td>
<td class="cellalignment4368" headers="r11c1-t79 r1c3-t79">Numeric precision for decimal types</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r12c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">scale</span></code></td>
<td class="cellalignment4368" headers="r12c1-t79 r1c2-t79"><code dir="ltr">SQLSMALLINT</code></td>
<td class="cellalignment4368" headers="r12c1-t79 r1c3-t79">Numeric scale for decimal types</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r13c1-t79" headers="r1c1-t79"><code dir="ltr"><span class="codeinlineitalic">flags</span></code></td>
<td class="cellalignment4368" headers="r13c1-t79 r1c2-t79"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r13c1-t79 r1c3-t79">Column flag:
<ul>
<li>
<p><code dir="ltr">TT_COLPRIMKEY</code>: Column is primary key.</p>
</li>
<li>
<p><code dir="ltr">TT_COLVARYING</code>: Column is stored out of line.</p>
</li>
<li>
<p><code dir="ltr">TT_COLNULLABLE</code>: Column is nullable.</p>
</li>
<li>
<p><code dir="ltr">TT_COLUNIQUE</code>: Column has a unique attribute defined on it.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p>The procedures for obtaining a <code dir="ltr">ttXlaColDesc_t</code> structure and inspecting its contents are described in <a href="xla_event.htm#BABEGHDA">&#34;Inspecting column data&#34;</a>. Below is a summary of these procedures.</p>
<p>The <code dir="ltr">ttXlaColDesc_t</code> structure is returned by the <code dir="ltr">ttXlaGetColumnInfo</code> function. This structure contains the metadata needed to access column information in a particular table. For example, you can use the <code dir="ltr"><span class="codeinlineitalic">offset</span></code> field to locate specific column data in the row or rows returned in an update record after the <code dir="ltr">ttXlaColDesc_t</code> structure. By adding the <code dir="ltr"><span class="codeinlineitalic">offset</span></code> to the address of a returned row, you can locate the address to the column value. You can then cast this value to the corresponding C types according to the <code dir="ltr"><span class="codeinlineitalic">dataType</span></code> field, or pass it to one of the conversion routines described in <a href="xla_event.htm#BABIGJFI">&#34;Converting complex data types&#34;</a>.</p>
<p>TimesTen row data consists of fixed-length data followed by any variable-length data.</p>
<ul>
<li>
<p>For fixed length column data, <code dir="ltr">ttXlaColDesc_t</code> returns the <code dir="ltr"><span class="codeinlineitalic">offset</span></code> and <code dir="ltr"><span class="codeinlineitalic">size</span></code> of the column data. The <code dir="ltr"><span class="codeinlineitalic">offset</span></code> is relative to the beginning of the fixed part of the record. See <a href="#CHEGGFGB">Example 9-1</a> below.</p>
</li>
<li>
<p>For variable-length column data (<code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, and <code dir="ltr">VARBINARY</code>), <code dir="ltr"><span class="codeinlineitalic">offset</span></code> is an address that points to a four-byte offset value. By adding the offset address to the offset value, you can obtain the address of the column data in the variable-length portion of the row. The first <code dir="ltr"><span class="codeinlineitalic">n</span></code> bytes at this location is the length of the data, followed by the actual data (where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is 4 on 32-bit platforms or 8 on 64-bit platforms). For variable-length data, the returned size value is the maximum allowable column size. See <a href="#CHEGGFGB">Example 9-1</a> below.</p>
</li>
</ul>
<p>For columns that can have null values, <code dir="ltr"><span class="codeinlineitalic">nullOffset</span></code> points to a null byte in the record. This value is 1 if the column is null, or 0 if it is not null. See <a href="xla_event.htm#BABHJEAG">&#34;Detecting null values&#34;</a> for a discussion.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">flags</span></code> bits define whether the column is nullable, part of a primary key, or stored out of line.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">sysColNum</span></code> value is the system column number to assign to the column. This value begins with 1 for the first column.</p>
<div class="infobox-note">
<p class="notep1">No<a id="sthref1078"></a><a id="sthref1079"></a>te:</p>
LOB support in XLA is limited, as follows:
<ul>
<li>
<p>You can subscribe to tables containing LOB columns, but information about the LOB value itself is unavailable.</p>
</li>
<li>
<p><code dir="ltr"><a href="#CHEEJABC">ttXlaGetColumnInfo</a></code> returns information about LOB columns.</p>
</li>
<li>
<p>Columns containing LOBs are reported as empty (zero length) or null (if the value is actually <code dir="ltr">NULL</code>). In this way, you can tell the difference between a null column and a non-null column.</p>
</li>
</ul>
</div>
<div id="TTCDV470" class="example">
<p class="titleinexample"><a id="CHEGGFGB"></a>Example 9-1 Copying and printing a VARCHAR2 string</p>
<p>For fixed-length column data, the address of a column is the <code dir="ltr"><span class="codeinlineitalic">offset</span></code> value in the <code dir="ltr">ttXlaColDesc_t</code> structure, plus the address of the row as follows:</p>
<pre dir="ltr">ttXlaColDesc_t colDesc;

void* pColVal = colDesc-&gt;offset + row;
</pre>
<p>The value of the column can be obtained by dereferencing this pointer using a type pointer that corresponds to the data type. For example, for <code dir="ltr">SQL_INTEGER</code>, the ODBC type is <code dir="ltr">SQLINTEGER</code> and the value of the column can be obtained by the following:</p>
<pre dir="ltr">*((SQLINTEGER*) pColVal))
</pre>
<p>In the case of variable-length column data, the <code dir="ltr"><span class="codeinlineitalic">pColVal</span></code> calculated above is the address of a four-byte offset value. Adding this offset value to the address of <code dir="ltr"><span class="codeinlineitalic">pColVal</span></code> provides a pointer to the beginning of the variable-length column data. Assuming the operation is performed on a 64-bit platform, the first eight bytes at this location is the length of this data (<code dir="ltr">var_len</code>), followed by the actual data (<code dir="ltr">var_data</code>).</p>
<p>In this example, a <code dir="ltr">VARCHAR</code> string is copied and printed.</p>
<pre dir="ltr">tt_ptrint* var_len = (tt_ptrint*)((char*)pColVal +
                    *((int*)pColVal));
char* var_data = (char*)(var_len+1);
char* buffer = malloc(*var_len+1);
memcpy(buffer,var_data,*var_len);
buffer[*var_len] = (char)NULL; /* NULL terminate the string */
printf(&#34;%s\n&#34;,buffer);
free(buffer);
</pre></div>
<!-- class="example" --></div>
<!-- class="refsect2" -->
<div id="TTCDV471" class="refsect2"><a id="CHEDIGDE"></a>
<h3 class="refsect2">t<a id="sthref1080"></a><a id="sthref1081"></a><a id="sthref1082"></a>t_LSN_t</h3>
<p>Description of log record identifier used by bookmarks. This structure is used by the <code dir="ltr"><a href="#CHEGEBFI">ttXlaUpdateDesc_t</a></code> structure.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="tt_LSN_t struct fields" summary="This table contains descriptions of the fields in the tt_LSN_t structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t81">Field</th>
<th class="cellalignment4367" id="r1c2-t81">Type</th>
<th class="cellalignment4367" id="r1c3-t81">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t81" headers="r1c1-t81"><code dir="ltr"><span class="codeinlineitalic">logFile</span></code></td>
<td class="cellalignment4368" headers="r2c1-t81 r1c2-t81"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r2c1-t81 r1c3-t81">Higher order portion of log record identifier</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t81" headers="r1c1-t81"><code dir="ltr"><span class="codeinlineitalic">logOffset</span></code></td>
<td class="cellalignment4368" headers="r3c1-t81 r1c2-t81"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r3c1-t81 r1c3-t81">Lower order portion of log record identifier</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr"><span class="codeinlineitalic">logFile</span></code> and <code dir="ltr"><span class="codeinlineitalic">logOffset</span></code> field names are retained for backward compatibility, although their usage has changed. In previous releases the values referred to LSNs, which increased sequentially, and the values had very specific meanings, indicating the log file number plus byte offset. Now they refer to log record identifiers, which are more abstract and do not have a direct relationship to the log file number and byte offset. All you can assume about a sequence of log record identifiers is that a log record identifier B read at a later time than a log record identifier A has a higher value.</div>
</div>
<!-- class="refsect2" -->
<div id="TTCDV472" class="refsect2"><a id="CHEJGGEH"></a>
<h3 class="refsect2">t<a id="sthref1083"></a><a id="sthref1084"></a><a id="sthref1085"></a>t_XlaLsn_t</h3>
<p>Description of a log record identifier used by bookmarks. This structure is returned by the <code dir="ltr"><a href="#CHEICHBA">ttXlaGetLSN</a></code> function and used by the <code dir="ltr"><a href="#CHEDFIEI">ttXlaSetLSN</a></code> function.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">checksum</span></code> is specific to an XLA handle to ensure that every log record identifier is related to a known XLA connection.</p>
<div class="inftblhruleinformal">
<table class="cellalignment4366" title="tt_XlaLsn_t struct fields" summary="This table contains descriptions of the fields in the tt_Xla_LSN_t structure." dir="ltr">
<thead>
<tr class="cellalignment4360">
<th class="cellalignment4367" id="r1c1-t83">Field</th>
<th class="cellalignment4367" id="r1c2-t83">Type</th>
<th class="cellalignment4367" id="r1c3-t83">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r2c1-t83" headers="r1c1-t83"><code dir="ltr"><span class="codeinlineitalic">checksum</span></code></td>
<td class="cellalignment4368" headers="r2c1-t83 r1c2-t83"><code dir="ltr">SQLUINTEGER</code></td>
<td class="cellalignment4368" headers="r2c1-t83 r1c3-t83">Checksum used to ensure that it is a valid log record identifier handle</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r3c1-t83" headers="r1c1-t83"><code dir="ltr"><span class="codeinlineitalic">xid</span></code></td>
<td class="cellalignment4368" headers="r3c1-t83 r1c2-t83"><code dir="ltr">SQLUSMALLINT</code></td>
<td class="cellalignment4368" headers="r3c1-t83 r1c3-t83">Transaction ID</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r4c1-t83" headers="r1c1-t83"><code dir="ltr"><span class="codeinlineitalic">logFile</span></code></td>
<td class="cellalignment4368" headers="r4c1-t83 r1c2-t83"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r4c1-t83 r1c3-t83">Higher order portion of log record identifier</td>
</tr>
<tr class="cellalignment4360">
<td class="cellalignment4368" id="r5c1-t83" headers="r1c1-t83"><code dir="ltr"><span class="codeinlineitalic">logOffset</span></code></td>
<td class="cellalignment4368" headers="r5c1-t83 r1c2-t83"><code dir="ltr">SQLUBIGINT</code></td>
<td class="cellalignment4368" headers="r5c1-t83 r1c3-t83">Lower order portion of log record identifier</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr"><span class="codeinlineitalic">logFile</span></code> and <code dir="ltr"><span class="codeinlineitalic">logOffset</span></code> field names are retained for backward compatibility, although their usage has changed. In previous releases the values referred to LSNs, which increased sequentially, and the values had very specific meanings, indicating the log file number plus byte offset. Now they refer to log record identifiers, which are more abstract and do not have a direct relationship to the log file number and byte offset. All you can assume about a sequence of log record identifiers is that a log record identifier B read at a later time than a log record identifier A has a higher value.</div>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4359">
<tr>
<td class="cellalignment4368">
<table class="cellalignment4364">
<tr>
<td class="cellalignment4363"><a href="c_ref.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4363"><a href="odbc_supported.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4370">
<table class="cellalignment4362">
<tr>
<td class="cellalignment4363"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4363"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4363"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4363"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4363"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4363"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>