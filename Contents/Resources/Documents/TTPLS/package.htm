<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-113974"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/TimesTen%20Supplied%20PL%2FSQL%20Packages"></a><title>TimesTen Supplied PL/SQL Packages</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 704"/>
<meta name="dcterms.created" content="2014-10-01T13:43:52Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database PL/SQL Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E21639-07"/>
<meta name="dcterms.isVersionOf" content="TTPLS"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="accesscntl.htm" title="Previous" type="text/html"/>
<link rel="Next" href="plsqldiffs.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21639-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/14</span> <!-- End Header --><a id="CDECFEID"></a><a id="TTPLS279"></a>
<h1 class="chapter"><span class="secnum">8</span> TimesTen Supplied PL/SQL Packages<a id="sthref321"></a></h1>
<p>TimesTen supplies public PL/SQL packages, listed immediately below, to extend database functionality and provide PL/SQL access to SQL features. TimesTen installs these packages automatically for your use. Packages that are part of the PL/SQL language itself or are otherwise for Oracle Database internal use only are not shown here or described in this chapter.</p>
<p>This chapter lists and briefly describes the subprograms that comprise each package. For details on these PL/SQL packages, refer to <a class="olink TTPLP" href="../TTPLP/toc.htm"><span class="italic">Oracle TimesTen In-Memory Database PL/SQL Packages Reference</span></a>.</p>
<ul>
<li>
<p><code><a href="#CHDHJHDA">DBMS_LOB</a></code></p>
</li>
<li>
<p><code><a href="#CHDDIDGG">DBMS_LOCK</a></code></p>
</li>
<li>
<p><code><a href="#CHDBCGII">DBMS_OUTPUT</a></code></p>
</li>
<li>
<p><code><a href="#CHDICGBC">DBMS_PREPROCESSOR</a></code></p>
</li>
<li>
<p><code><a href="#CHDCAADG">DBMS_RANDOM</a></code></p>
</li>
<li>
<p><code><a href="#CHDCDJAA">DBMS_SQL</a></code></p>
</li>
<li>
<p><code><a href="#CHDJJFDG">DBMS_UTILITY</a></code></p>
</li>
<li>
<p><code><a href="#CHDIACAB">TT_DB_VERSION</a></code></p>
</li>
<li>
<p><code><a href="#CHDGFJJE">TT_STATS</a></code></p>
</li>
<li>
<p><code><a href="#CHDEHIBB">UTL_FILE</a></code></p>
</li>
<li>
<p><code><a href="#CHDCHEID">UTL_IDENT</a></code></p>
</li>
<li>
<p><code><a href="#CHDCHDFA">UTL_RAW</a></code></p>
</li>
<li>
<p><code><a href="#CHDHIHDG">UTL_RECOMP</a></code></p>
</li>
</ul>
<a id="CHDHJHDA"></a><a id="TTPLS396"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref322"></a><a id="sthref323"></a>DBMS_LOB</h2>
<p>The <code>DBMS_LOB</code> package provides subprograms to operate on BLOBs, CLOBs, and NCLOBs, including temporary LOBs.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>TimesTen does not support <code>DBMS_LOB</code> subprograms intended specifically for BFILEs, SecureFiles (including Database File System features), or inserting or deleting data fragments in the middle of a LOB.</p>
</li>
<li>
<p><code>DBMS_LOB</code> procedures and functions are supported for both TimesTen LOBs and passthrough LOBs, which are LOBs in Oracle Database accessed through TimesTen and exposed as TimesTen LOBs. Note, however, that <code>CREATETEMPORARY</code> can only be used to create a temporary LOB in TimesTen. If a temporary passthrough LOB is created using some other mechanism, such as SQL, <code>ISTEMPORARY</code> and <code>FREETEMPORARY</code> can be used on that LOB.</p>
<p>As with TimesTen local LOBs, a locator for a passthrough LOB does not remain valid past the end of the transaction.</p>
<p>In addition to copying from one TimesTen LOB to another, <code>COPY</code> can copy from a TimesTen LOB to a passthrough LOB, from a passthrough LOB to a TimesTen LOB, or from one passthrough LOB to another passthrough LOB. An attempt to copy a passthrough LOB to a TimesTen LOB when the passthrough LOB is larger than the TimesTen LOB size limit results in an error. (<a class="olink TTPLP66662" href="../TTPLP/d_lob.htm#TTPLP66662">&#34;COPY procedures&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database PL/SQL Packages Reference</span> provides examples for copying LOBs.)</p>
<p>See <a href="overview.htm#CEGEHJBC">&#34;Passthrough LOBs&#34;</a> for related information.</p>
</li>
</ul>
</div>
<p><a href="#CHDBDJEF">Table 8-1</a> describes the supported <code>DBMS_LOB</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS397"></a><a id="sthref324"></a><a id="CHDBDJEF"></a>Table 8-1 DBMS_LOB subprograms</p>
<table class="cellalignment6349" title="DBMS_LOB subprograms" summary="Descriptions of DBMS_LOB subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t3">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t3" headers="r1c1-t3">
<p><code>APPEND</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r2c1-t3 r1c2-t3">
<p>Appends the contents of the source LOB to the destination LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t3" headers="r1c1-t3">
<p><code>CLOSE</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r3c1-t3 r1c2-t3">
<p>Closes a previously opened LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t3" headers="r1c1-t3">
<p><code>COMPARE</code> functions</p>
</td>
<td class="cellalignment6344" headers="r4c1-t3 r1c2-t3">
<p>Compares two entire LOBs or parts of two LOBs.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t3" headers="r1c1-t3">
<p><code>CONVERTTOBLOB</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t3 r1c2-t3">
<p>Reads character data from a source <code>CLOB</code> or <code>NCLOB</code> instance, converts the character data to the specified character set, writes the converted data to a destination <code>BLOB</code> instance in binary format, and returns the new offsets.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t3" headers="r1c1-t3">
<p><code>CONVERTTOCLOB</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r6c1-t3 r1c2-t3">
<p>Takes a source <code>BLOB</code> instance, converts the binary data in the source instance to character data using the specified character set, writes the character data to a destination <code>CLOB</code> or <code>NCLOB</code> instance, and returns the new offsets.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t3" headers="r1c1-t3">
<p><code>COPY</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r7c1-t3 r1c2-t3">
<p>Copies all or part of the source LOB to the destination LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t3" headers="r1c1-t3">
<p><code>CREATETEMPORARY</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r8c1-t3 r1c2-t3">
<p>Creates a temporary LOB in the temporary data region. Any of the durations supported by Oracle Database is permitted (<code>SESSION</code>, <code>TRANSACTION</code>, or <code>CALL</code>), but in TimesTen LOB duration cannot extend past the end of the transaction.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r9c1-t3" headers="r1c1-t3">
<p><code>ERASE</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r9c1-t3 r1c2-t3">
<p>Erases all or part of a LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r10c1-t3" headers="r1c1-t3">
<p><code>FREETEMPORARY</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r10c1-t3 r1c2-t3">
<p>Frees a temporary LOB in the temporary data region.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r11c1-t3" headers="r1c1-t3">
<p><code>GET_STORAGE_LIMIT</code> functions</p>
</td>
<td class="cellalignment6344" headers="r11c1-t3 r1c2-t3">
<p>Returns the storage limit for the LOB type of the specified LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r12c1-t3" headers="r1c1-t3">
<p><code>GETCHUNKSIZE</code> functions</p>
</td>
<td class="cellalignment6344" headers="r12c1-t3 r1c2-t3">
<p>In TimesTen, this simply returns the value 32 KB for interoperability. Do not rely on this value for performance tuning.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r13c1-t3" headers="r1c1-t3">
<p><code>GETLENGTH</code> functions</p>
</td>
<td class="cellalignment6344" headers="r13c1-t3 r1c2-t3">
<p>Returns the length of the LOB value, in bytes for a BLOB or characters for a CLOB or NCLOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r14c1-t3" headers="r1c1-t3">
<p><code>INSTR</code> functions</p>
</td>
<td class="cellalignment6344" headers="r14c1-t3 r1c2-t3">
<p>Returns the matching position of the <span class="italic">nth</span> occurrence of the pattern in the LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r15c1-t3" headers="r1c1-t3">
<p><code>ISOPEN</code> functions</p>
</td>
<td class="cellalignment6344" headers="r15c1-t3 r1c2-t3">
<p>Checks to see if the LOB was already opened using the input locator.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r16c1-t3" headers="r1c1-t3">
<p><code>ISTEMPORARY</code> functions</p>
</td>
<td class="cellalignment6344" headers="r16c1-t3 r1c2-t3">
<p>Checks whether the locator is pointing to a temporary LOB.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r17c1-t3" headers="r1c1-t3">
<p><code>OPEN</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r17c1-t3 r1c2-t3">
<p>Opens a LOB (persistent or temporary) in the indicated mode, read/write or read-only.</p>
<p><span class="bold">Note</span>: Opening a LOB is similar conceptually, but not technically, to opening a file. Opening a LOB is more like a hint regarding resources to be required.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r18c1-t3" headers="r1c1-t3">
<p><code>READ</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r18c1-t3 r1c2-t3">
<p>Reads data from the LOB starting at the specified offset.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r19c1-t3" headers="r1c1-t3">
<p><code>SUBSTR</code> functions</p>
</td>
<td class="cellalignment6344" headers="r19c1-t3 r1c2-t3">
<p>Returns part of the LOB value starting at the specified offset.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r20c1-t3" headers="r1c1-t3">
<p><code>TRIM</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r20c1-t3 r1c2-t3">
<p>Trims the LOB value to the specified shorter length.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r21c1-t3" headers="r1c1-t3">
<p><code>WRITE</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r21c1-t3 r1c2-t3">
<p>Writes data to the LOB from a specified offset.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r22c1-t3" headers="r1c1-t3">
<p><code>WRITEAPPEND</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r22c1-t3 r1c2-t3">
<p>Writes a buffer to the end of a LOB.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDDIDGG"></a><a id="TTPLS280"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref325"></a><a id="sthref326"></a>DBMS_LOCK</h2>
<p>The <code>DBMS_LOCK</code> package provides an interface to lock-management services. In the current release, TimesTen supports only the sleep feature.</p>
<p><a href="#CHDJGIDD">Table 8-2</a> describes the supported <code>DBMS_LOCK</code> subprogram.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS281"></a><a id="sthref327"></a><a id="CHDJGIDD"></a>Table 8-2 DBMS_LOCK subprograms</p>
<table class="cellalignment6349" title="DBMS_LOCK subprograms" summary="Descriptions of DBMS_LOCK subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t4">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t4" headers="r1c1-t4">
<p><code>SLEEP</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t4 r1c2-t4">
<p>This procedure suspends the session for a given duration. Specify the amount of time in seconds. The smallest supported increment is a hundredth of a second. For example:</p>
<pre>DBMS_LOCK.SLEEP(1.95);
</pre>
<p><span class="bold">Notes:</span></p>
<ul>
<li>
<p>The actual sleep time may be somewhat longer than specified, depending on system activity.</p>
</li>
<li>
<p>If <code>PLSQL_TIMEOUT</code> is set to a positive value that is less than this sleep time, the timeout takes effect first. Be sure that either the sleep value is less than the timeout value, or <code>PLSQL_TIMEOUT=0</code> (no timeout). See <a href="plsqlenv.htm#CHDFIDDF">&#34;PL/SQL connection attributes&#34;</a> for information about <code>PLSQL_TIMEOUT</code>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDBCGII"></a><a id="TTPLS282"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref328"></a>DBMS_OUTPUT</h2>
<p>The <code>DBMS_OUTPUT</code> package enables you to send messages from stored procedures and packages. The package is useful for displaying PL/SQL debugging information.</p>
<p><a href="#BABIDJDB">Table 8-3</a> describes the <code>DBMS_OUTPUT</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS283"></a><a id="sthref329"></a><a id="BABIDJDB"></a>Table 8-3 DBMS_OUTPUT subprograms</p>
<table class="cellalignment6349" title="DBMS_OUTPUT subprograms" summary="Descriptions of DBMS_OUTPUT subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t5">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t5" headers="r1c1-t5">
<p><code>DISABLE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t5 r1c2-t5">
<p>Disables message output.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t5" headers="r1c1-t5">
<p><code>ENABLE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r3c1-t5 r1c2-t5">
<p>Enables message output.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t5" headers="r1c1-t5">
<p><code>GET_LINE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r4c1-t5 r1c2-t5">
<p>Retrieves one line from the buffer.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t5" headers="r1c1-t5">
<p><code>GET_LINES</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t5 r1c2-t5">
<p>Retrieves an array of lines from the buffer.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t5" headers="r1c1-t5">
<p><code>NEW_LINE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r6c1-t5 r1c2-t5">
<p>Terminates a line created with <code>PUT</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t5" headers="r1c1-t5">
<p><code>PUT</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r7c1-t5 r1c2-t5">
<p>Places a line in the buffer.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t5" headers="r1c1-t5">
<p><code>PUT_LINE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r8c1-t5 r1c2-t5">
<p>Places a partial line in the buffer.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDICGBC"></a><a id="TTPLS284"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref330"></a>DBMS_PREPROCESSOR</h2>
<p>The <code>DBMS_PREPROCESSOR</code> package provides an interface to print or retrieve the source text of a PL/SQL unit after processing of conditional compilation directives.</p>
<p><a href="#BABCDGEC">Table 8-4</a> describes the <code>DBMS_PREPROCESSOR</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS285"></a><a id="sthref331"></a><a id="BABCDGEC"></a>Table 8-4 DBMS_PREPROCESSOR subprograms</p>
<table class="cellalignment6349" title="DBMS_PREPROCESSOR subprograms" summary="Descriptions of DBMS_PREPROCESSOR subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t6">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t6" headers="r1c1-t6">
<p><code>GET_POST_PROCESSED_SOURCE</code> function</p>
</td>
<td class="cellalignment6344" headers="r2c1-t6 r1c2-t6">
<p>Returns post-processed source text.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t6" headers="r1c1-t6">
<p><code>PRINT_POST_PROCESSED_SOURCE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r3c1-t6 r1c2-t6">
<p>Prints post-processed source text.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDCAADG"></a><a id="TTPLS286"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref332"></a>DBMS_RANDOM</h2>
<p>The <code>DBMS_RANDOM</code> package provides a built-in random number generator.</p>
<p><a href="#BABBJACD">Table 8-5</a> describes the <code>DBMS_RANDOM</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS287"></a><a id="sthref333"></a><a id="BABBJACD"></a>Table 8-5 DBMS_RANDOM subprograms</p>
<table class="cellalignment6349" title="DBMS_RANDOM subprograms" summary="Descriptions of DBMS_RANDOM subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t7">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t7" headers="r1c1-t7">
<p><code>INITIALIZE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t7 r1c2-t7">
<p>Initializes the package with a seed value (deprecated).</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t7" headers="r1c1-t7">
<p><code>NORMAL</code> function</p>
</td>
<td class="cellalignment6344" headers="r3c1-t7 r1c2-t7">
<p>Returns random numbers in a normal distribution.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t7" headers="r1c1-t7">
<p><code>RANDOM</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r4c1-t7 r1c2-t7">
<p>Generates a random number (deprecated).</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t7" headers="r1c1-t7">
<p><code>SEED</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t7 r1c2-t7">
<p>Resets the seed.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t7" headers="r1c1-t7">
<p><code>STRING</code> function</p>
</td>
<td class="cellalignment6344" headers="r6c1-t7 r1c2-t7">
<p>Gets a random string.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t7" headers="r1c1-t7">
<p><code>TERMINATE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r7c1-t7 r1c2-t7">
<p>Terminates the package (deprecated).</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t7" headers="r1c1-t7">
<p><code>VALUE</code> function</p>
</td>
<td class="cellalignment6344" headers="r8c1-t7 r1c2-t7">
<p>There are two overloaded versions. In the first, it gets a random number greater than or equal to 0 and less than 1, with 38 digits to the right of the decimal point (38-digit precision). In the second, it gets a random number within specified low and high limits.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDCDJAA"></a><a id="TTPLS288"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref334"></a><a id="sthref335"></a>DBMS_SQL</h2>
<p>The <code>DBMS_SQL</code> package provides an interface for using dynamic SQL to accomplish any of the following:</p>
<ul>
<li>
<p>Execute data manipulation language (DML) and data definition language (DDL) statements.</p>
</li>
<li>
<p>Execute PL/SQL anonymous blocks.</p>
</li>
<li>
<p>Call PL/SQL stored procedures and functions.</p>
</li>
</ul>
<p>This package does not support pre-defined data types and overloads with data types that are not supported in TimesTen, such as <code>UROWID</code>, time zone features, ADT, database-level collections, and edition overloads. For more information on the supported data types in TimesTen PL/SQL, see <a href="dtypesfunc.htm#CIHJGBII">&#34;Understanding the data type environments&#34;</a>.</p>
<p><a href="#BABBFEBF">Table 8-6</a> describes the <code>DBMS_SQL</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS289"></a><a id="sthref336"></a><a id="BABBFEBF"></a>Table 8-6 DBMS_SQL subprograms</p>
<table class="cellalignment6349" title="DBMS_SQL subprograms" summary="Descriptions of DBMS_SQL subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t8">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t8" headers="r1c1-t8">
<p><code>BIND_ARRAY</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t8 r1c2-t8">
<p>Binds a given value to a given collection.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t8" headers="r1c1-t8">
<p><code>BIND_VARIABLE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r3c1-t8 r1c2-t8">
<p>Binds a given value to a given variable.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t8" headers="r1c1-t8">
<p><code>CLOSE_CURSOR</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r4c1-t8 r1c2-t8">
<p>Closes a given cursor and frees memory.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t8" headers="r1c1-t8">
<p><code>COLUMN_VALUE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t8 r1c2-t8">
<p>Returns the value of the cursor element for a given position in a cursor.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t8" headers="r1c1-t8">
<p><code>COLUMN_VALUE_LONG</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r6c1-t8 r1c2-t8">
<p>Returns a selected part of a <code>LONG</code> column that has been defined using <code>DEFINE_COLUMN_LONG</code>.</p>
<p><span class="bold">Important</span>: Because TimesTen does not support the <code>LONG</code> data type, attempting to use this procedure in TimesTen results in an <code>ORA-01018</code> error at runtime.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t8" headers="r1c1-t8">
<p><code>DEFINE_ARRAY</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r7c1-t8 r1c2-t8">
<p>Defines a collection to be selected from the given cursor. Use with <code>SELECT</code> statements.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t8" headers="r1c1-t8">
<p><code>DEFINE_COLUMN</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r8c1-t8 r1c2-t8">
<p>Defines a column to be selected from the given cursor. Use with <code>SELECT</code> statements.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r9c1-t8" headers="r1c1-t8">
<p><code>DEFINE_COLUMN_LONG</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r9c1-t8 r1c2-t8">
<p>Defines a <code>LONG</code> column to be selected from the given cursor. Use with <code>SELECT</code> statements.</p>
<p><span class="bold">Important</span>: Because TimesTen does not support the <code>LONG</code> data type, attempting to use the <code>COLUMN_VALUE_LONG</code> procedure in TimesTen results in an <code>ORA-01018</code> error at runtime. <code>DEFINE_COLUMN_LONG</code> would be used in conjunction with <code>COLUMN_VALUE_LONG</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r10c1-t8" headers="r1c1-t8">
<p><code>DESCRIBE_COLUMNS</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r10c1-t8 r1c2-t8">
<p>Describes the columns for a cursor opened and parsed through the <code>DBMS_SQL</code> package.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r11c1-t8" headers="r1c1-t8">
<p><code>DESCRIBE_COLUMNS2</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r11c1-t8 r1c2-t8">
<p>Describes the specified column. Use as an alternative to <code>DESCRIBE_COLUMNS</code> procedure.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r12c1-t8" headers="r1c1-t8">
<p><code>DESCRIBE_COLUMNS3</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r12c1-t8 r1c2-t8">
<p>Describes the specified column. Use as an alternative to <code>DESCRIBE_COLUMNS</code> procedure.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r13c1-t8" headers="r1c1-t8">
<p><code>EXECUTE</code> function</p>
</td>
<td class="cellalignment6344" headers="r13c1-t8 r1c2-t8">
<p>Executes a given cursor.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r14c1-t8" headers="r1c1-t8">
<p><code>EXECUTE_AND_FETCH</code> function</p>
</td>
<td class="cellalignment6344" headers="r14c1-t8 r1c2-t8">
<p>Executes a given cursor and fetches rows.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r15c1-t8" headers="r1c1-t8">
<p><code>FETCH_ROWS</code> function</p>
</td>
<td class="cellalignment6344" headers="r15c1-t8 r1c2-t8">
<p>Fetches a row from a given cursor.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r16c1-t8" headers="r1c1-t8">
<p><code>IS_OPEN</code> function</p>
</td>
<td class="cellalignment6344" headers="r16c1-t8 r1c2-t8">
<p>Returns <code>TRUE</code> if a given cursor is open.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r17c1-t8" headers="r1c1-t8">
<p><code>LAST_ERROR_POSITION</code> function</p>
</td>
<td class="cellalignment6344" headers="r17c1-t8 r1c2-t8">
<p>Returns the byte offset in the SQL statement text where the error occurred.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r18c1-t8" headers="r1c1-t8">
<p><code>LAST_ROW_COUNT</code> function</p>
</td>
<td class="cellalignment6344" headers="r18c1-t8 r1c2-t8">
<p>Returns a cumulative count of the number of rows fetched.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r19c1-t8" headers="r1c1-t8">
<p><code>LAST_ROW_ID</code> function</p>
</td>
<td class="cellalignment6344" headers="r19c1-t8 r1c2-t8">
<p>Returns <code>NULL</code>. TimesTen does not support <code>ROWID</code> of the last row operated on by a DML statement.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r20c1-t8" headers="r1c1-t8">
<p><code>LAST_SQL_FUNCTION_CODE</code> function</p>
</td>
<td class="cellalignment6344" headers="r20c1-t8 r1c2-t8">
<p>Returns the SQL function code for the statement.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r21c1-t8" headers="r1c1-t8">
<p><code>OPEN_CURSOR</code> function</p>
</td>
<td class="cellalignment6344" headers="r21c1-t8 r1c2-t8">
<p>Returns the cursor ID number of a new cursor.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r22c1-t8" headers="r1c1-t8">
<p><code>PARSE</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r22c1-t8 r1c2-t8">
<p>Parses a given statement.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r23c1-t8" headers="r1c1-t8">
<p><code>TO_CURSOR_NUMBER</code> function</p>
</td>
<td class="cellalignment6344" headers="r23c1-t8 r1c2-t8">
<p>Takes an opened (by <code>OPEN</code>) strongly or weakly typed REF CURSOR and transforms it into a <code>DBMS_SQL</code> cursor number.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r24c1-t8" headers="r1c1-t8">
<p><code>TO_REFCURSOR</code> function</p>
</td>
<td class="cellalignment6344" headers="r24c1-t8 r1c2-t8">
<p>Takes an opened, parsed, and executed cursor (by <code>OPEN</code>, <code>PARSE</code>, and <code>EXECUTE</code>) and transforms or migrates it into a PL/SQL manageable REF CURSOR (a weakly typed cursor) that can be consumed by PL/SQL native dynamic SQL and switched to use native dynamic SQL.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r25c1-t8" headers="r1c1-t8">
<p><code>VARIABLE_VALUE</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r25c1-t8 r1c2-t8">
<p>Returns value of a named variable for a given cursor.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDJJFDG"></a><a id="TTPLS290"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref337"></a>DBMS_UTILITY</h2>
<p>The <code>DBMS_UTILITY</code> package provides a variety of utility subprograms.</p>
<p>Subprograms are not supported (and not listed here) for features that TimesTen does not support.</p>
<p><a href="#BABBAJIH">Table 8-7</a> describes <code>DBMS_UTILITY</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS291"></a><a id="sthref338"></a><a id="BABBAJIH"></a>Table 8-7 DBMS_UTILITY subprograms</p>
<table class="cellalignment6349" title="DBMS_UTILITY subprograms" summary="Descriptions of DBMS_UTILITY subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t9">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t9" headers="r1c1-t9">
<p><code>CANONICALIZE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t9 r1c2-t9">
<p>Canonicalizes a given string.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t9" headers="r1c1-t9">
<p><code>COMMA_TO_TABLE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r3c1-t9 r1c2-t9">
<p>Converts a comma-delimited list of names into an associative array (index-by table) of names.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t9" headers="r1c1-t9">
<p><code>CO<a id="sthref339"></a>MPILE_SCHEMA</code></p>
</td>
<td class="cellalignment6344" headers="r4c1-t9 r1c2-t9">
<p>Compiles all procedures, functions, packages, and views in the specified database schema.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t9" headers="r1c1-t9">
<p><code>DB_VERSION</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t9 r1c2-t9">
<p>Returns version information for the database.</p>
<p>The procedure returns <code>NULL</code> for the compatibility setting because TimesTen does not support the system parameter <code>COMPATIBLE</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t9" headers="r1c1-t9">
<p><code>FORMAT_CALL_STACK</code> function</p>
</td>
<td class="cellalignment6344" headers="r6c1-t9 r1c2-t9">
<p>Formats the current call stack.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t9" headers="r1c1-t9">
<p><code>FORMAT_ERROR_BACKTRACE</code> function</p>
</td>
<td class="cellalignment6344" headers="r7c1-t9 r1c2-t9">
<p>Formats the backtrace from the point of the current error to the exception handler where the error is caught.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t9" headers="r1c1-t9">
<p><code>FORMAT_ERROR_STACK</code> function</p>
</td>
<td class="cellalignment6344" headers="r8c1-t9 r1c2-t9">
<p>Formats the current error stack.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r9c1-t9" headers="r1c1-t9">
<p><code>GET_CPU_TIME</code> function</p>
</td>
<td class="cellalignment6344" headers="r9c1-t9 r1c2-t9">
<p>Returns the current CPU time in hundredths of a second.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r10c1-t9" headers="r1c1-t9">
<p><code>GET_DEPENDENCY</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r10c1-t9 r1c2-t9">
<p>Shows the dependencies on the objects passed in.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r11c1-t9" headers="r1c1-t9">
<p><code>GET_ENDIANNESS</code> function</p>
</td>
<td class="cellalignment6344" headers="r11c1-t9 r1c2-t9">
<p>Returns the endianness of your database platform.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r12c1-t9" headers="r1c1-t9">
<p><code>GET_HASH_VALUE</code> function</p>
</td>
<td class="cellalignment6344" headers="r12c1-t9 r1c2-t9">
<p>Computes a hash value for a given string.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r13c1-t9" headers="r1c1-t9">
<p><code>GET_SQL_HASH</code> function</p>
</td>
<td class="cellalignment6344" headers="r13c1-t9 r1c2-t9">
<p>Computes the hash value for a given string using the MD5 algorithm.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r14c1-t9" headers="r1c1-t9">
<p><code>GET_TIME</code> function</p>
</td>
<td class="cellalignment6344" headers="r14c1-t9 r1c2-t9">
<p>Returns the current time in hundredths of a second.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r15c1-t9" headers="r1c1-t9">
<p><code>IN<a id="sthref340"></a>VALIDATE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r15c1-t9 r1c2-t9">
<p>Invalidates a database object and optionally modifies the PL/SQL compiler parameter settings for the object.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r16c1-t9" headers="r1c1-t9">
<p><code>IS_BIT_SET</code> function</p>
</td>
<td class="cellalignment6344" headers="r16c1-t9 r1c2-t9">
<p>Checks the setting of a specified bit in a <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r17c1-t9" headers="r1c1-t9">
<p><code>NAME_RESOLVE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r17c1-t9 r1c2-t9">
<p>Resolves the given name of the following form:</p>
<pre>[[<span class="italic">a</span>.]<span class="italic">b</span>.]<span class="italic">c</span>[@<span class="italic">dblink</span>]
</pre>
<p>Where <code><span class="codeinlineitalic">a</span></code>, <code><span class="codeinlineitalic">b</span></code>, and <code><span class="codeinlineitalic">c</span></code> are SQL identifiers and <code><span class="codeinlineitalic">dblink</span></code> is a dblink (database link).</p>
<p>Do not use <code><span class="codeinlineitalic">@dblink</span></code>. TimesTen does not support dblinks.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r18c1-t9" headers="r1c1-t9">
<p><code>NAME_TOKENIZE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r18c1-t9 r1c2-t9">
<p>Calls the parser to parse the given name of the following form:</p>
<pre>&#34;<span class="italic">a</span> [.<span class="italic">b</span> [.<span class="italic">c</span> ]][@<span class="italic">dblink</span>]&#34;
</pre>
<p>Strips double quotes or converts to uppercase if there are no quotes. Ignores comments and does not perform semantic analysis. Missing values are <code>NULL</code>.</p>
<p>Do not use <code><span class="codeinlineitalic">@dblink</span></code>. TimesTen does not support dblinks.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r19c1-t9" headers="r1c1-t9">
<p><code>TABLE_TO_COMMA</code> procedures</p>
</td>
<td class="cellalignment6344" headers="r19c1-t9 r1c2-t9">
<p>Converts an associative array (index-by table) of names into a comma-delimited list of names.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r20c1-t9" headers="r1c1-t9">
<p><code>VALIDATE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r20c1-t9 r1c2-t9">
<p>Validates the object described by either owner, name and namespace, or object ID.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDIACAB"></a><a id="TTPLS292"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref341"></a>TT_DB_VERSION</h2>
<p>The <code>TT_DB_VERSION</code> package contains boolean constants indicating the current TimesTen release.</p>
<p><a href="#BABHJHDC">Table 8-8</a> describes the <code>TT_DB_VERSION</code> constants.</p>
<p>The primary use case for the <code>TT_DB_VERSION</code> and <code>UTL_IDENT</code> packages is for conditional compilation.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS293"></a><a id="sthref342"></a><a id="BABHJHDC"></a>Table 8-8 TT_DB_VERSION constants</p>
<table class="cellalignment6349" title="TT_DB_VERSION constants" summary="Descriptions of TT_DB_VERSION constants." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t10">Name</th>
<th class="cellalignment6350" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t10" headers="r1c1-t10">
<p><code>VER_LE_1121</code></p>
</td>
<td class="cellalignment6344" headers="r2c1-t10 r1c2-t10">
<p>Boolean that is <code>TRUE</code> if the TimesTen version this package ships with is 11.2.1 or prior. <code>FALSE</code> for TimesTen 11<span class="italic">g</span> Release 2 (11.2.2) versions.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t10" headers="r1c1-t10">
<p><code>VER_LE_1122</code></p>
</td>
<td class="cellalignment6344" headers="r3c1-t10 r1c2-t10">
<p>Boolean that is <code>TRUE</code> if the TimesTen version this package ships with is 11.2.2 or prior. <code>TRUE</code> for TimesTen 11<span class="italic">g</span> Release 2 (11.2.2) versions.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p>See <a class="olink TTPLP71466" href="../TTPLP/u_ident.htm#TTPLP71466">&#34;Examples&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database PL/SQL Packages Reference</span> for an example that uses <code>TT_DB_VERSION</code> and <code>UTL_IDENT</code>.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDGFJJE"></a><a id="TTPLS405"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref343"></a>TT_STATS</h2>
<p>The <code>TT_STATS</code> package provides features for collecting and comparing snapshots of TimesTen system metrics, according to the capture level. Each snapshot can consist of what TimesTen considers to be basic metrics, typical metrics, or all available metrics.</p>
<p>For those familiar with Oracle Database performance analysis tools, these reports are similar in nature to Oracle Automatic Workload Repository (AWR) reports.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS406"></a><a id="sthref344"></a><a id="sthref345"></a>Table 8-9 TT_STATS subprograms</p>
<table class="cellalignment6349" title="TT_STATS subprograms" summary="Descriptions of TT_STATS subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t11">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t11" headers="r1c1-t11">
<p><code>CAPTURE_SNAPSHOT</code> procedure and function</p>
</td>
<td class="cellalignment6344" headers="r2c1-t11 r1c2-t11">
<p>Takes a snapshot of TimesTen metrics. The function also returns the snapshot ID.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t11" headers="r1c1-t11">
<p><code>DROP_SNAPSHOTS_RANGE</code> function</p>
</td>
<td class="cellalignment6344" headers="r3c1-t11 r1c2-t11">
<p>Deletes snapshots according to a specified range of snapshot IDs or timestamps.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t11" headers="r1c1-t11">
<p><code>GENERATE_REPORT_HTML</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r4c1-t11 r1c2-t11">
<p>Produces a report in HTML format based on the data from two specified snapshots.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t11" headers="r1c1-t11">
<p><code>GENERATE_REPORT_TEXT</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t11 r1c2-t11">
<p>Produces a report in plain text format based on the data from two specified snapshots.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t11" headers="r1c1-t11">
<p><code>GET_CONFIG</code> function</p>
</td>
<td class="cellalignment6344" headers="r6c1-t11 r1c2-t11">
<p>Retrieves the value of a specified <code>TT_STATS</code> configuration parameter or the values of all configuration parameters.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t11" headers="r1c1-t11">
<p><code>SET_CONFIG</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r7c1-t11 r1c2-t11">
<p>Sets a specified value for a specified <code>TT_STATS</code> configuration parameter.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t11" headers="r1c1-t11">
<p><code>SHOW_SNAPSHOTS</code> function</p>
</td>
<td class="cellalignment6344" headers="r8c1-t11 r1c2-t11">
<p>Shows the snapshot IDs and timestamps of all snapshots currently stored in the database.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDEHIBB"></a><a id="TTPLS294"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref346"></a>UTL_FILE</h2>
<p>The <code>UTL_FILE</code> package enables PL/SQL programs the ability to read and write operating system text files.</p>
<p>In the current release, this package is restricted to access of a pre-defined temporary directory only. Refer to the <a class="olink TTREL" href="../TTREL/index.html#TTREL"><span class="italic">Oracle TimesTen In-Memory Database Release Notes</span></a> for details.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Users do not have execute permission on <code>UTL_FILE</code> by default. To use <code>UTL_FILE</code> in TimesTen, an <code>ADMIN</code> user or instance administrator must explicitly grant <code>EXECUTE</code> permission on it, such as in the following example:
<pre>GRANT EXECUTE ON SYS.UTL_FILE TO scott;
</pre></div>
<p><a href="#BABFBGFH">Table 8-10</a> describes the <code>UTL_FILE</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS295"></a><a id="sthref347"></a><a id="BABFBGFH"></a>Table 8-10 UTL_FILE subprograms</p>
<table class="cellalignment6349" title="UTL_FILE subprograms" summary="Descriptions of UTL_FILE subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t13">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t13" headers="r1c1-t13">
<p><code>FCLOSE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t13 r1c2-t13">
<p>Closes a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t13" headers="r1c1-t13">
<p><code>FCLOSE_ALL</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r3c1-t13 r1c2-t13">
<p>Closes all file handles.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t13" headers="r1c1-t13">
<p><code>FCOPY</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r4c1-t13 r1c2-t13">
<p>Copies a contiguous portion of a file to a newly created file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t13" headers="r1c1-t13">
<p><code>FFLUSH</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r5c1-t13 r1c2-t13">
<p>Physically writes all pending output to a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t13" headers="r1c1-t13">
<p><code>FGETATTR</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r6c1-t13 r1c2-t13">
<p>Reads and returns the attributes of a disk file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t13" headers="r1c1-t13">
<p><code>FGETPOS</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r7c1-t13 r1c2-t13">
<p>Returns the current relative offset position (in bytes) within a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t13" headers="r1c1-t13">
<p><code>FOPEN</code> function</p>
</td>
<td class="cellalignment6344" headers="r8c1-t13 r1c2-t13">
<p>Opens a file for input or output.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r9c1-t13" headers="r1c1-t13">
<p><code>FOPEN_NCHAR</code> function</p>
</td>
<td class="cellalignment6344" headers="r9c1-t13 r1c2-t13">
<p>Opens a file in Unicode for input or output.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r10c1-t13" headers="r1c1-t13">
<p><code>FREMOVE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r10c1-t13 r1c2-t13">
<p>With sufficient privilege, deletes a disk file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r11c1-t13" headers="r1c1-t13">
<p><code>FRENAME</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r11c1-t13 r1c2-t13">
<p>Renames an existing file to a new name (similar to the UNIX <code>mv</code> command).</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r12c1-t13" headers="r1c1-t13">
<p><code>FSEEK</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r12c1-t13 r1c2-t13">
<p>Adjusts the file pointer forward or backward within the file by the number of bytes specified.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r13c1-t13" headers="r1c1-t13">
<p><code>GET_LINE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r13c1-t13 r1c2-t13">
<p>Reads text from an open file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r14c1-t13" headers="r1c1-t13">
<p><code>GET_LINE_NCHAR</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r14c1-t13 r1c2-t13">
<p>Reads text in Unicode from an open file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r15c1-t13" headers="r1c1-t13">
<p><code>GET_RAW</code> function</p>
</td>
<td class="cellalignment6344" headers="r15c1-t13 r1c2-t13">
<p>Reads a <code>RAW</code> string value from a file and adjusts the file pointer ahead by the number of bytes read.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r16c1-t13" headers="r1c1-t13">
<p><code>IS_OPEN</code> function</p>
</td>
<td class="cellalignment6344" headers="r16c1-t13 r1c2-t13">
<p>Determines if a file handle refers to an open file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r17c1-t13" headers="r1c1-t13">
<p><code>NEW_LINE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r17c1-t13 r1c2-t13">
<p>Writes one or more operating system-specific line terminators to a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r18c1-t13" headers="r1c1-t13">
<p><code>PUT</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r18c1-t13 r1c2-t13">
<p>Writes a string to a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r19c1-t13" headers="r1c1-t13">
<p><code>PUT_LINE</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r19c1-t13 r1c2-t13">
<p>Writes a line to a file and appends an operating system-specific line terminator.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r20c1-t13" headers="r1c1-t13">
<p><code>PUT_LINE_NCHAR</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r20c1-t13 r1c2-t13">
<p>Writes a Unicode line to a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r21c1-t13" headers="r1c1-t13">
<p><code>PUT_NCHAR</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r21c1-t13 r1c2-t13">
<p>Writes a Unicode string to a file.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r22c1-t13" headers="r1c1-t13">
<p><code>PUT_RAW</code> function</p>
</td>
<td class="cellalignment6344" headers="r22c1-t13 r1c2-t13">
<p>Accepts as input a <code>RAW</code> data value and writes the value to the output buffer.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r23c1-t13" headers="r1c1-t13">
<p><code>PUTF</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r23c1-t13 r1c2-t13">
<p>This is similar to the <code>PUT</code> procedure, but with formatting.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r24c1-t13" headers="r1c1-t13">
<p><code>PUTF_NCHAR</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r24c1-t13 r1c2-t13">
<p>This is similar to the <code>PUT_NCHAR</code> procedure, but with formatting. Writes a Unicode string to a file with formatting.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDCHEID"></a><a id="TTPLS296"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref348"></a><a id="sthref349"></a>UTL_IDENT</h2>
<p>The <code>UTL_IDENT</code> package indicates whether PL/SQL is running on TimesTen, an Oracle database client, an Oracle database server, or Oracle Forms. Each of these has its own version of <code>UTL_IDENT</code> with appropriate settings for the constants.</p>
<p><a href="#BABDAIJD">Table 8-11</a> shows the <code>UTL_IDENT</code> settings for TimesTen.</p>
<p>The primary use case for the <code>UTL_IDENT</code> package is for conditional compilation, resembling the following:</p>
<pre>$if utl_ident.is_oracle_server $then
    [...Run code supported for Oracle Database...]
$elsif utl_ident.is_timesten $then
    [...code supported for TimesTen Database...]
$end
</pre>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS297"></a><a id="sthref350"></a><a id="BABDAIJD"></a>Table 8-11 UTL_IDENT Constants</p>
<table class="cellalignment6349" title="UTL_IDENT Constants" summary="Descriptions of UTL_IDENT constants." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t14">Name</th>
<th class="cellalignment6350" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t14" headers="r1c1-t14">
<p><code>IS_ORACLE_CLIENT</code></p>
</td>
<td class="cellalignment6344" headers="r2c1-t14 r1c2-t14">
<p><code>BOOLEAN</code> set to <code>FALSE</code></p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t14" headers="r1c1-t14">
<p><code>IS_ORACLE_SERVER</code></p>
</td>
<td class="cellalignment6344" headers="r3c1-t14 r1c2-t14">
<p><code>BOOLEAN</code> set to <code>FALSE</code></p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t14" headers="r1c1-t14">
<p><code>IS_ORACLE_FORMS</code></p>
</td>
<td class="cellalignment6344" headers="r4c1-t14 r1c2-t14">
<p><code>BOOLEAN</code> set to <code>FALSE</code></p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t14" headers="r1c1-t14">
<p><code>IS_TIMESTEN</code></p>
</td>
<td class="cellalignment6344" headers="r5c1-t14 r1c2-t14">
<p><code>BOOLEAN</code> set to <code>TRUE</code></p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p>See <a class="olink TTPLP71466" href="../TTPLP/u_ident.htm#TTPLP71466">&#34;Examples&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database PL/SQL Packages Reference</span> for an example that uses <code>TT_DB_VERSION</code> and <code>UTL_IDENT</code>.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDCHDFA"></a><a id="TTPLS299"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref351"></a>UTL_RAW</h2>
<p>The <code>UTL_RAW</code> package provides SQL functions for manipulating <code>RAW</code> data types.</p>
<p><a href="#BABEEBJD">Table 8-12</a> describes the <code>UTL_RAW</code> subprograms.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS300"></a><a id="sthref352"></a><a id="BABEEBJD"></a>Table 8-12 UTL_RAW subprograms</p>
<table class="cellalignment6349" title="UTL_RAW subprograms" summary="Descriptions of UTL_RAW subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t15">Subprogram</th>
<th class="cellalignment6350" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t15" headers="r1c1-t15">
<p><code>BIT_AND</code> function</p>
</td>
<td class="cellalignment6344" headers="r2c1-t15 r1c2-t15">
<p>Performs bitwise logical &#34;and&#34; of two <code>RAW</code> values and returns the resulting <code>RAW</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t15" headers="r1c1-t15">
<p><code>BIT_COMPLEMENT</code> function</p>
</td>
<td class="cellalignment6344" headers="r3c1-t15 r1c2-t15">
<p>Performs bitwise logical &#34;complement&#34; of a <code>RAW</code> value and returns the resulting <code>RAW</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r4c1-t15" headers="r1c1-t15">
<p><code>BIT_OR</code> function</p>
</td>
<td class="cellalignment6344" headers="r4c1-t15 r1c2-t15">
<p>Performs bitwise logical &#34;or&#34; of two <code>RAW</code> values and returns the resulting <code>RAW</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r5c1-t15" headers="r1c1-t15">
<p><code>BIT_XOR</code> function</p>
</td>
<td class="cellalignment6344" headers="r5c1-t15 r1c2-t15">
<p>Performs bitwise logical &#34;exclusive or&#34; of two <code>RAW</code> values and returns the resulting <code>RAW</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r6c1-t15" headers="r1c1-t15">
<p><code>CAST_FROM_BINARY_DOUBLE</code> function</p>
</td>
<td class="cellalignment6344" headers="r6c1-t15 r1c2-t15">
<p>Returns the <code>RAW</code> binary representation of a <code>BINARY_DOUBLE</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r7c1-t15" headers="r1c1-t15">
<p><code>CAST_FROM_BINARY_FLOAT</code> function</p>
</td>
<td class="cellalignment6344" headers="r7c1-t15 r1c2-t15">
<p>Returns the <code>RAW</code> binary representation of a <code>BINARY_FLOAT</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r8c1-t15" headers="r1c1-t15">
<p><code>CAST_FROM_BINARY_INTEGER</code> function</p>
</td>
<td class="cellalignment6344" headers="r8c1-t15 r1c2-t15">
<p>Returns the <code>RAW</code> binary representation of a <code>BINARY_INTEGER</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r9c1-t15" headers="r1c1-t15">
<p><code>CAST_FROM_NUMBER</code> function</p>
</td>
<td class="cellalignment6344" headers="r9c1-t15 r1c2-t15">
<p>Returns the <code>RAW</code> binary representation of a <code>NUMBER</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r10c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_BINARY_DOUBLE</code> function</p>
</td>
<td class="cellalignment6344" headers="r10c1-t15 r1c2-t15">
<p>Casts the <code>RAW</code> binary representation of a <code>BINARY_DOUBLE</code> value into a <code>BINARY_DOUBLE</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r11c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_BINARY_FLOAT</code> function</p>
</td>
<td class="cellalignment6344" headers="r11c1-t15 r1c2-t15">
<p>Casts the <code>RAW</code> binary representation of a <code>BINARY_FLOAT</code> value into a <code>BINARY_FLOAT</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r12c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_BINARY_INTEGER</code> function</p>
</td>
<td class="cellalignment6344" headers="r12c1-t15 r1c2-t15">
<p>Casts the <code>RAW</code> binary representation of a <code>BINARY_INTEGER</code> value into a <code>BINARY_INTEGER</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r13c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_NUMBER</code> function</p>
</td>
<td class="cellalignment6344" headers="r13c1-t15 r1c2-t15">
<p>Casts the <code>RAW</code> binary representation of a <code>NUMBER</code> value into a <code>NUMBER</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r14c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_NVARCHAR2</code> function</p>
</td>
<td class="cellalignment6344" headers="r14c1-t15 r1c2-t15">
<p>Casts a <code>RAW</code> value represented using <code><span class="codeinlineitalic">n</span></code> data bytes into an <code>NVARCHAR2</code> value with <code><span class="codeinlineitalic">n</span></code> data bytes.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r15c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_RAW</code> function</p>
</td>
<td class="cellalignment6344" headers="r15c1-t15 r1c2-t15">
<p>Casts a <code>VARCHAR2</code> value represented using <code><span class="codeinlineitalic">n</span></code> data bytes into a <code>RAW</code> with <code><span class="codeinlineitalic">n</span></code> data bytes.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r16c1-t15" headers="r1c1-t15">
<p><code>CAST_TO_VARCHAR2</code> function</p>
</td>
<td class="cellalignment6344" headers="r16c1-t15 r1c2-t15">
<p>Casts a <code>RAW</code> value represented using <code><span class="codeinlineitalic">n</span></code> data bytes into a <code>VARCHAR2</code> value with <code><span class="codeinlineitalic">n</span></code> data bytes.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r17c1-t15" headers="r1c1-t15">
<p><code>COMPARE</code> function</p>
</td>
<td class="cellalignment6344" headers="r17c1-t15 r1c2-t15">
<p>Compares two <code>RAW</code> values.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r18c1-t15" headers="r1c1-t15">
<p><code>CONCAT</code> function</p>
</td>
<td class="cellalignment6344" headers="r18c1-t15 r1c2-t15">
<p>Concatenates up to 12 <code>RAW</code> values into a single <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r19c1-t15" headers="r1c1-t15">
<p><code>CONVERT</code> function</p>
</td>
<td class="cellalignment6344" headers="r19c1-t15 r1c2-t15">
<p>Converts a <code>RAW</code> value from one character set to another and returns the resulting <code>RAW</code>.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r20c1-t15" headers="r1c1-t15">
<p><code>COPIES</code> function</p>
</td>
<td class="cellalignment6344" headers="r20c1-t15 r1c2-t15">
<p>Copies a <code>RAW</code> value a specified number of times and returns the concatenated <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r21c1-t15" headers="r1c1-t15">
<p><code>LENGTH</code> function</p>
</td>
<td class="cellalignment6344" headers="r21c1-t15 r1c2-t15">
<p>Returns the length in bytes of a <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r22c1-t15" headers="r1c1-t15">
<p><code>OVERLAY</code> function</p>
</td>
<td class="cellalignment6344" headers="r22c1-t15 r1c2-t15">
<p>Overlays the specified portion of a target <code>RAW</code> value with an overlay <code>RAW</code> value, starting from a specified byte position and proceeding for a specified number of bytes.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r23c1-t15" headers="r1c1-t15">
<p><code>REVERSE</code> function</p>
</td>
<td class="cellalignment6344" headers="r23c1-t15 r1c2-t15">
<p>Reverses a byte-sequence in a <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r24c1-t15" headers="r1c1-t15">
<p><code>SUBSTR</code> function</p>
</td>
<td class="cellalignment6344" headers="r24c1-t15 r1c2-t15">
<p>Returns a substring of a <code>RAW</code> value for a specified number of bytes from a specified starting position.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r25c1-t15" headers="r1c1-t15">
<p><code>TRANSLATE</code> function</p>
</td>
<td class="cellalignment6344" headers="r25c1-t15 r1c2-t15">
<p>Translates the specified bytes from an input <code>RAW</code> value according to the bytes in a specified translation <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r26c1-t15" headers="r1c1-t15">
<p><code>TRANSLITERATE</code> function</p>
</td>
<td class="cellalignment6344" headers="r26c1-t15 r1c2-t15">
<p>Converts the specified bytes from an input <code>RAW</code> value according to the bytes in a specified transliteration <code>RAW</code> value.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r27c1-t15" headers="r1c1-t15">
<p><code>XRANGE</code> function</p>
</td>
<td class="cellalignment6344" headers="r27c1-t15 r1c2-t15">
<p>Returns a <code>RAW</code> value containing the succession of one-byte encodings beginning and ending with the specified byte-codes.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" -->
<a id="CHDHIHDG"></a><a id="TTPLS301"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref353"></a><a id="sthref354"></a>UTL_RECOMP</h2>
<p>The <code>UTL_RECOMP</code> package recompiles invalid PL/SQL modules. This is particularly useful after a major-version upgrade that typically invalidates all PL/SQL objects.</p>
<p><a href="#CHDJIACI">Table 8-13</a> describes the <code>UTL_RECOMP</code> subprograms.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
To use this package, you must be the instance administrator and specify <code>SYS.UTL_RECOMP</code>.</div>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLS302"></a><a id="sthref355"></a><a id="CHDJIACI"></a>Table 8-13 UTL_RECOMP subprograms</p>
<table class="cellalignment6349" title="UTL_RECOMP subprograms" summary="Descriptions of UTL_RECOMP subprograms." dir="ltr">
<thead>
<tr class="cellalignment6338">
<th class="cellalignment6350" id="r1c1-t17">Name</th>
<th class="cellalignment6350" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r2c1-t17" headers="r1c1-t17">
<p><code>RECOMP_PARALLEL</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r2c1-t17 r1c2-t17">
<p>Recompiles invalid objects in a given schema, or all invalid objects in the database, in parallel.</p>
<p><span class="bold">Note</span>: Because TimesTen does not support <code>DBMS_SCHEDULER</code>, the number of recompile threads to run in parallel is always 1, regardless of what the user specifies. Therefore there is no effective difference between <code>RECOMP_PARALLEL</code> and <code>RECOMP_SERIAL</code> in TimesTen.</p>
</td>
</tr>
<tr class="cellalignment6338">
<td class="cellalignment6344" id="r3c1-t17" headers="r1c1-t17">
<p><code>RECOMP_SERIAL</code> procedure</p>
</td>
<td class="cellalignment6344" headers="r3c1-t17 r1c2-t17">
<p>Recompiles invalid objects in a given schema, or all invalid objects in the database, serially.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6337">
<tr>
<td class="cellalignment6344">
<table class="cellalignment6348">
<tr>
<td class="cellalignment6341"><a href="accesscntl.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6341"><a href="plsqldiffs.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6346">
<table class="cellalignment6347">
<tr>
<td class="cellalignment6341"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6341"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6341"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6341"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6341"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6341"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>