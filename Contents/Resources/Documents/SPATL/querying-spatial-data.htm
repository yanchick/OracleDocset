<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-100804"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Querying%20Spatial%20Data"></a><title>Querying Spatial Data</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="spatial query, query, primary filter, secondary filter"/>
<meta name="dcterms.created" content="2017-01-26T11:46:57Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49172-07"/>
<meta name="dcterms.isVersionOf" content="SPATL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="rollback-segments-and-sort-area-size.htm" title="Previous" type="text/html"/>
<link rel="Next" href="coordinate-systems-spatial-reference-systems.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49172-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-34D74D79-6B6A-4827-B418-A05D3F41103D"></a> <span id="PAGE" style="display:none;">82/475</span> <!-- End Header -->
<a id="SPATL592"></a>
<h1 id="SPATL-GUID-34D74D79-6B6A-4827-B418-A05D3F41103D" class="sect1"><span class="enumeration_section">5.2</span> Querying Spatial Data</h1>
<div>
<p>This section describes how the structures of a spatial layer are used to resolve spatial queries and spatial joins.</p>
<p>Spatial and Graph uses a two-tier query model with primary and secondary filter operations to resolve spatial queries and spatial joins, as explained in <a href="query-model.htm">Query Model</a>. The term <span class="italic">two-tier</span> indicates that two distinct operations are performed to resolve queries. If both operations are performed, the exact result set is returned.</p>
<p><a id="d35694e53" class="indexterm-anchor"></a><a id="d35694e57" class="indexterm-anchor"></a>You cannot append a database link (dblink) name to the name of a spatial table in a query if a spatial index is defined on that table.</p>
<p>This section also contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5">Spatial Query</a></p>
</li>
<li>
<p><a href="querying-spatial-data.htm#GUID-C4C35CB5-0138-487B-9C50-B4BF1BDAFE08">Spatial Join</a></p>
</li>
<li>
<p><a href="querying-spatial-data.htm#GUID-DDD42A40-3EF8-473D-8D07-52A934A72D0C">Data and Index Dimensionality_ and Spatial Queries</a></p>
</li>
</ul>
</div>
<a id="SPATL594"></a><a id="SPATL595"></a><a id="SPATL593"></a>
<div class="props_rev_3"><a id="GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5"></a>
<h2 id="SPATL-GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5" class="sect2"><span class="enumeration_section">5.2.1</span> Spatial Query</h2>
<div>
<p>In a spatial R-tree index, each geometry is represented by its minimum bounding rectangle (MBR), as explained in <a href="indexing-spatial-data.htm#GUID-69A50E50-F713-4E3D-9182-AF3797250B97">R-Tree Indexing</a>. Consider the following layer containing several objects in <a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHEJGE">Figure 5-1</a>. Each object is labeled with its geometry name (geom_1 for the line string, geom_2 for the four-sided polygon, geom_3 for the triangular polygon, and geom_4 for the ellipse), and the MBR around each object is represented by a dashed line.</p>
<div class="figure" id="GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHEJGE">
<p class="titleinfigure">Figure 5-1 Geometries with MBRs</p>
<img width="280" height="227" src="img/query_mbrs.gif" alt="Description of Figure 5-1 follows" title="Description of Figure 5-1 follows"/><br/>
<a href="img_text/query_mbrs.htm">Description of &#34;Figure 5-1 Geometries with MBRs&#34;</a></div>
<!-- class="figure" -->
<p>A typical spatial query is to request all objects that lie within a <a id="d35694e146" class="indexterm-anchor"></a><span class="bold">query window</span>, that is, a defined fence or window. A <a id="d35694e151" class="indexterm-anchor"></a>dynamic query window refers to a rectangular area that is not defined in the database, but that must be defined before it is used. <a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHIEJD">Figure 5-2</a> shows the same geometries as in <a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHEJGE">Figure 5-1</a>, but adds a query window represented by the heavy dotted-line box.</p>
<div class="figure" id="GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHIEJD">
<p class="titleinfigure">Figure 5-2 Layer with a Query Window</p>
<img width="280" height="227" src="img/query_window.gif" alt="Description of Figure 5-2 follows" title="Description of Figure 5-2 follows"/><br/>
<a href="img_text/query_window.htm">Description of &#34;Figure 5-2 Layer with a Query Window&#34;</a></div>
<!-- class="figure" -->
<p>In <a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHIEJD">Figure 5-2</a>, the query window covers parts of geometries geom_1 and geom_2, as well as part of the MBR for geom_3 but none of the actual geom_3 geometry. The query window does not cover any part of the geom_4 geometry or its MBR.</p>
</div>
<a id="SPATL597"></a><a id="SPATL598"></a><a id="SPATL599"></a><a id="SPATL596"></a>
<div class="props_rev_3"><a id="GUID-E5954C4A-C8FF-4264-A583-5178A42B3F07"></a>
<h3 id="SPATL-GUID-E5954C4A-C8FF-4264-A583-5178A42B3F07" class="sect3"><span class="enumeration_section">5.2.1.1</span> Primary Filter Operator</h3>
<div>
<p>The <a href="sdo_filter.htm">SDO_FILTER</a> operator, described in <a href="spatial-operators.htm">Spatial Operators</a> , implements the primary filter portion of the two-step process involved in the Oracle Spatial and Graph query processing model. The primary filter uses the index data to determine only if a set of candidate object pairs may interact. Specifically, the primary filter checks to see if the MBRs of the candidate objects interact, not whether the objects themselves interact. The <a href="sdo_filter.htm">SDO_FILTER</a> operator syntax is as follows:</p>
<pre dir="ltr">SDO_FILTER(geometry1 SDO_GEOMETRY, geometry2 SDO_GEOMETRY, param VARCHAR2)
</pre>
<p>In the preceding syntax:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>geometry1</code> is a column of type SDO_GEOMETRY in a table. This column must be spatially indexed.</p>
</li>
<li>
<p><code>geometry2</code> is an object of type SDO_GEOMETRY. This object may or may not come from a table. If it comes from a table, it may or may not be spatially indexed.</p>
</li>
<li>
<p><code>param</code> is an optional string of type VARCHAR2. It can specify either or both of the <code>min_resolution</code> and <code>max_resolution</code> keywords.</p>
</li>
</ul>
<p>The following examples perform a primary filter operation only (with no secondary filter operation). They will return all the geometries shown in <a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHIEJD">Figure 5-2</a> that have an MBR that interacts with the query window. The result of the following examples are geometries geom_1, geom_2, and geom_3.</p>
<p>The following example performs a primary filter operation without inserting the query window into a table. The window will be indexed in memory and performance will be very good.</p>
<div class="example" id="GUID-E5954C4A-C8FF-4264-A583-5178A42B3F07__I1005295">
<p class="titleinexample">Example 5-2 Primary Filter with a Temporary Query Window</p>
<pre dir="ltr">SELECT A.Feature_ID FROM TARGET A
 WHERE sdo_filter(A.shape, SDO_geometry(2003,NULL,NULL,
                                       SDO_elem_info_array(1,1003,3),
                                       SDO_ordinate_array(x1,y1, x2,y2))
                           ) = &#39;TRUE&#39;;  
</pre>
<p>In the preceding example, <code>(x1,y1)</code> and <code>(x2,y2)</code> are the lower-left and upper-right corners of the query window.</p>
<p>In the following example, a transient instance of type SDO_GEOMETRY was constructed for the query window instead of specifying the window parameters in the query itself.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-E5954C4A-C8FF-4264-A583-5178A42B3F07__I1005306">
<p class="titleinexample">Example 5-3 Primary Filter with a Transient Instance of the Query Window</p>
<pre dir="ltr">SELECT A.Feature_ID FROM TARGET A
 WHERE sdo_filter(A.shape, :theWindow) = &#39;TRUE&#39;;        
</pre>
<p>The following example assumes the query window was inserted into a table called WINDOWS, with an ID of WINS_1.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-E5954C4A-C8FF-4264-A583-5178A42B3F07__I1005314">
<p class="titleinexample">Example 5-4 Primary Filter with a Stored Query Window</p>
<pre dir="ltr">SELECT A.Feature_ID FROM TARGET A, WINDOWS B
 WHERE B.ID = &#39;WINS_1&#39; AND 
  sdo_filter(A.shape, B.shape) = &#39;TRUE&#39;;        
</pre>
<p>If the B.SHAPE column is not spatially indexed, the <a href="sdo_filter.htm">SDO_FILTER</a> operator indexes the query window in memory and performance is very good.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="SPATL601"></a><a id="SPATL602"></a><a id="SPATL600"></a>
<div class="props_rev_3"><a id="GUID-00000B2F-E63F-44DE-B969-BD5E6F8F5A5B"></a>
<h3 id="SPATL-GUID-00000B2F-E63F-44DE-B969-BD5E6F8F5A5B" class="sect3"><span class="enumeration_section">5.2.1.2</span> Primary and Secondary Filter Operator</h3>
<div>
<p>The <a href="sdo_relate.htm">SDO_RELATE</a> operator, described in <a href="spatial-operators.htm">Spatial Operators</a> , performs both the primary and secondary filter stages when processing a query. The secondary filter ensures that only candidate objects that actually interact are selected. This operator can be used only if a spatial index has been created on two dimensions of data. The syntax of the <a href="sdo_relate.htm">SDO_RELATE</a> operator is as follows:</p>
<pre dir="ltr">SDO_RELATE(geometry1  SDO_GEOMETRY,
           geometry2  SDO_GEOMETRY,
           param      VARCHAR2)
</pre>
<p>In the preceding syntax:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>geometry1</code> is a column of type SDO_GEOMETRY in a table. This column must be spatially indexed.</p>
</li>
<li>
<p><code>geometry2</code> is an object of type SDO_GEOMETRY. This object may or may not come from a table. If it comes from a table, it may or may not be spatially indexed.</p>
</li>
<li>
<p><code>param</code> is a quoted string with the <code>mask</code> keyword and a valid mask value, and optionally either or both of the <code>min_resolution</code> and <code>max_resolution</code> keywords, as explained in the documentation for the <a href="sdo_relate.htm">SDO_RELATE</a> operator in <a href="spatial-operators.htm">Spatial Operators</a> .</p>
</li>
</ul>
<p>The following examples perform both primary and secondary filter operations. They return all the geometries in <a href="querying-spatial-data.htm#GUID-FE2E8337-8A4E-4508-8D8D-F206ACB898E5__BGBHIEJD">Figure 5-2</a> that lie within or overlap the query window. The result of these examples is objects geom_1 and geom_2.</p>
<p>The following example performs both primary and secondary filter operations without inserting the query window into a table. The window will be indexed in memory and performance will be very good.</p>
<div class="example" id="GUID-00000B2F-E63F-44DE-B969-BD5E6F8F5A5B__I1005358">
<p class="titleinexample">Example 5-5 Secondary Filter Using a Temporary Query Window</p>
<pre dir="ltr">SELECT A.Feature_ID FROM TARGET A
   WHERE sdo_relate(A.shape, SDO_geometry(2003,NULL,NULL,
                                       SDO_elem_info_array(1,1003,3),
                                      SDO_ordinate_array(x1,y1, x2,y2)),
                        &#39;mask=anyinteract&#39;) = &#39;TRUE&#39;;
</pre>
<p>In the preceding example, <code>(x1,y1)</code> and <code>(x2,y2)</code> are the lower-left and upper-right corners of the query window.</p>
<p>The following example assumes the query window was inserted into a table called WINDOWS, with an ID value of WINS_1.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-00000B2F-E63F-44DE-B969-BD5E6F8F5A5B__I1005370">
<p class="titleinexample">Example 5-6 Secondary Filter Using a Stored Query Window</p>
<pre dir="ltr">SELECT A.Feature_ID FROM TARGET A, WINDOWS B
 WHERE B.ID = &#39;WINS_1&#39; AND 
        sdo_relate(A.shape, B.shape,
          &#39;mask=anyinteract&#39;) = &#39;TRUE&#39;; 
</pre>
<p>If the B.SHAPE column is not spatially indexed, the <a href="sdo_relate.htm">SDO_RELATE</a> operator indexes the query window in memory and performance is very good.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="SPATL603"></a>
<div class="props_rev_3"><a id="GUID-3839BEE8-7743-46F4-B573-667ADC7FEB3E"></a>
<h3 id="SPATL-GUID-3839BEE8-7743-46F4-B573-667ADC7FEB3E" class="sect3"><span class="enumeration_section">5.2.1.3</span> Within-Distance Operator</h3>
<div>
<p>The <a href="sdo_within_distance.htm">SDO_WITHIN_DISTANCE</a> operator, described in <a href="spatial-operators.htm">Spatial Operators</a> , is used to determine the set of objects in a table that are within <span class="italic">n</span> distance units from a reference object. This operator can be used only if a spatial index has been created on two dimensions of data. The reference object may be a transient or persistent instance of SDO_GEOMETRY, such as a temporary query window or a permanent geometry stored in the database. The syntax of the operator is as follows:</p>
<pre dir="ltr">SDO_WITHIN_DISTANCE(geometry1  SDO_GEOMETRY, 
                    aGeom      SDO_GEOMETRY,
                    params     VARCHAR2);
</pre>
<p>In the preceding syntax:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>geometry1</code> is a column of type SDO_GEOMETRY in a table. This column must be spatially indexed.</p>
</li>
<li>
<p><code>aGeom</code> is an instance of type SDO_GEOMETRY.</p>
</li>
<li>
<p><code>params</code> is a quoted string of keyword value pairs that determines the behavior of the operator. See the <a href="sdo_within_distance.htm">SDO_WITHIN_DISTANCE</a> operator in <a href="spatial-operators.htm">Spatial Operators</a> for a list of parameters.</p>
</li>
</ul>
<p>The following example selects any objects within 1.35 distance units from the query window:</p>
<pre dir="ltr">SELECT A.Feature_ID
  FROM TARGET A
  WHERE SDO_WITHIN_DISTANCE( A.shape, :theWindow, &#39;distance=1.35&#39;) = &#39;TRUE&#39;;
</pre>
<p>The distance units are based on the geometry coordinate system in use. If you are using a geodetic coordinate system, the units are meters. If no coordinate system is used, the units are the same as for the stored data.</p>
<p>The <a href="sdo_within_distance.htm">SDO_WITHIN_DISTANCE</a> operator is not suitable for performing spatial joins. That is, a query such as <span class="italic">Find all parks that are within 10 distance units from coastlines</span> will not be processed as an index-based spatial join of the COASTLINES and PARKS tables. Instead, it will be processed as a nested loop query in which each COASTLINES instance is in turn a reference object that is buffered, indexed, and evaluated against the PARKS table. Thus, the <a href="sdo_within_distance.htm">SDO_WITHIN_DISTANCE</a> operation is performed <span class="italic">n</span> times if there are <span class="italic">n</span> rows in the COASTLINES table.</p>
<p>For non-geodetic data, there is an efficient way to accomplish a spatial join that involves buffering all geometries of a layer. This method does not use the <a href="sdo_within_distance.htm">SDO_WITHIN_DISTANCE</a> operator. First, create a new table COSINE_BUFS as follows:</p>
<pre dir="ltr">CREATE TABLE cosine_bufs UNRECOVERABLE AS
   SELECT SDO_BUFFER (A.SHAPE, B.DIMINFO, 1.35)
     FROM COSINE A, USER_SDO_GEOM_METADATA B
     WHERE TABLE_NAME=&#39;COSINES&#39; AND COLUMN_NAME=&#39;SHAPE&#39;;
</pre>
<p>Next, create a spatial index on the SHAPE column of COSINE_BUFS. Then you can perform the following query:</p>
<pre dir="ltr">SELECT /*+ ordered */ a.gid, b.gid 
  FROM TABLE(SDO_JOIN(&#39;PARKS&#39;, &#39;SHAPE&#39;, 
                      &#39;COSINE_BUFS&#39;, &#39;SHAPE&#39;,
                      &#39;mask=ANYINTERACT&#39;)) c,
       parks a, 
       cosine_bufs b
  WHERE c.rowid1 = a.rowid AND c.rowid2 = b.rowid;
</pre></div>
</div>
<a id="SPATL604"></a>
<div class="props_rev_3"><a id="GUID-850B0CE8-ED06-4B81-A3CE-39CE63DAFF25"></a>
<h3 id="SPATL-GUID-850B0CE8-ED06-4B81-A3CE-39CE63DAFF25" class="sect3"><span class="enumeration_section">5.2.1.4</span> Nearest Neighbor Operator</h3>
<div>
<p>The <a href="sdo_nn.htm">SDO_NN</a> operator, described in <a href="spatial-operators.htm">Spatial Operators</a> , is used to identify the nearest neighbors for a geometry. This operator can be used only if a spatial index has been created on two dimensions of data. The syntax of the operator is as follows:</p>
<pre dir="ltr">SDO_NN(geometry1  SDO_GEOMETRY, 
       geometry2  SDO_GEOMETRY,
       param      VARCHAR2
       [, number  NUMBER]);
</pre>
<p>In the preceding syntax:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>geometry1</code> is a column of type SDO_GEOMETRY in a table. This column must be spatially indexed.</p>
</li>
<li>
<p><code>geometry2</code> is an instance of type SDO_GEOMETRY.</p>
</li>
<li>
<p><code>param</code> is a quoted string of keyword-value pairs that can determine the behavior of the operator, such as how many nearest neighbor geometries are returned. See the <a href="sdo_nn.htm">SDO_NN</a> operator in <a href="spatial-operators.htm">Spatial Operators</a> for information about this parameter.</p>
</li>
<li>
<p><code>number</code> is the same number used in the call to <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a>. Use this only if the <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a> ancillary operator is included in the call to <a href="sdo_nn.htm">SDO_NN</a>. See the <a href="sdo_nn.htm">SDO_NN</a> operator in <a href="spatial-operators.htm">Spatial Operators</a> for information about this parameter.</p>
</li>
</ul>
<p>The following example finds the two objects from the SHAPE column in the COLA_MARKETS table that are closest to a specified point (10,7). (Note the use of the optimizer hint in the SELECT statement, as explained in the Usage Notes for the <a href="sdo_nn.htm">SDO_NN</a> operator in <a href="spatial-operators.htm">Spatial Operators</a> .)</p>
<pre dir="ltr">SELECT /*+ INDEX(cola_markets cola_spatial_idx) */
 c.mkt_id, c.name  FROM cola_markets c  WHERE SDO_NN(c.shape,
   SDO_geometry(2001, NULL, SDO_point_type(10,7,NULL), NULL,
   NULL),  &#39;sdo_num_res=2&#39;) = &#39;TRUE&#39;; 
</pre></div>
</div>
<a id="SPATL605"></a>
<div class="props_rev_3"><a id="GUID-76F77285-DC7D-496C-8352-1A25202D47A7"></a>
<h3 id="SPATL-GUID-76F77285-DC7D-496C-8352-1A25202D47A7" class="sect3"><span class="enumeration_section">5.2.1.5</span> Spatial Functions</h3>
<div>
<p>Spatial and Graph also supplies functions for determining relationships between geometries, finding information about single geometries, changing geometries, and combining geometries. These functions all take into account two dimensions of source data. If the output value of these functions is a geometry, the resulting geometry will have the same dimensionality as the input geometry, but only the first two dimensions will accurately reflect the result of the operation.</p>
</div>
</div>
</div>
<a id="SPATL606"></a>
<div class="props_rev_3"><a id="GUID-C4C35CB5-0138-487B-9C50-B4BF1BDAFE08"></a>
<h2 id="SPATL-GUID-C4C35CB5-0138-487B-9C50-B4BF1BDAFE08" class="sect2"><span class="enumeration_section">5.2.2</span> Spatial Join</h2>
<div>
<p>A <a id="d35694e783" class="indexterm-anchor"></a><span class="bold">spatial join</span> is the same as a regular join except that the predicate involves a spatial operator. In Spatial and Graph, a spatial join takes place when you compare all geometries of one layer to all geometries of another layer. This is unlike a query window, which compares a single geometry to all geometries of a layer.</p>
<p>Spatial joins can be used to answer questions such as <span class="italic">Which highways cross national parks?</span></p>
<p>The following table structures illustrate how the join would be accomplished for this example:</p>
<pre dir="ltr">PARKS(    GID VARCHAR2(32), SHAPE SDO_GEOMETRY)
HIGHWAYS( GID VARCHAR2(32), SHAPE SDO_GEOMETRY) 
</pre>
<p>To perform a spatial join, use the <a href="sdo_join.htm">SDO_JOIN</a> operator, which is described in <a href="spatial-operators.htm">Spatial Operators</a> . The following spatial join query, to list the GID column values of highways and parks where a highway interacts with a park, performs a primary filter operation only (<code>&#39;mask=FILTER&#39;</code>), and thus it returns only approximate results:</p>
<pre dir="ltr">SELECT /*+ ordered */ a.gid, b.gid 
  FROM TABLE(SDO_JOIN(&#39;PARKS&#39;, &#39;SHAPE&#39;, 
                      &#39;HIGHWAYS&#39;, &#39;SHAPE&#39;,
                      &#39;mask=FILTER&#39;)) c,
       parks a, 
       highways b
  WHERE c.rowid1 = a.rowid AND c.rowid2 = b.rowid;
</pre>
<p>The following spatial join query requests the same information as in the preceding example, but it performs both primary and secondary filter operations (<code>&#39;mask=ANYINTERACT&#39;</code>), and thus it returns exact results:</p>
<pre dir="ltr">SELECT /*+ ordered */ a.gid, b.gid 
  FROM TABLE(SDO_JOIN(&#39;PARKS&#39;, &#39;SHAPE&#39;, 
                      &#39;HIGHWAYS&#39;, &#39;SHAPE&#39;,
                      &#39;mask=ANYINTERACT&#39;)) c,
       parks a, 
       highways b
  WHERE c.rowid1 = a.rowid AND c.rowid2 = b.rowid;
</pre></div>
</div>
<a id="SPATL1412"></a><a id="SPATL1411"></a>
<div class="props_rev_3"><a id="GUID-DDD42A40-3EF8-473D-8D07-52A934A72D0C"></a>
<h2 id="SPATL-GUID-DDD42A40-3EF8-473D-8D07-52A934A72D0C" class="sect2"><span class="enumeration_section">5.2.3</span> Data and Index Dimensionality, and Spatial Queries</h2>
<div>
<p>The elements of a spatial query can, in theory, have the following dimensionality:</p>
<ul style="list-style-type: disc;">
<li>
<p>The base table geometries (or <code>geometry1</code> in spatial operator formats) can have two, three, or more dimensions.</p>
</li>
<li>
<p>The spatial index created on the base table (or <code>geometry1</code>) can be two-dimensional or three-dimensional.</p>
</li>
<li>
<p>The query window (or <code>geometry2</code> in spatial operator formats) can have two, three, or more dimensions.</p>
</li>
</ul>
<p>Some combinations of dimensionality among the three elements are supported and some are not. <a href="querying-spatial-data.htm#GUID-DDD42A40-3EF8-473D-8D07-52A934A72D0C__BGBCEEFJ" title="Data and Index Dimensionality, and Query Support">Table 5-1</a> explains what happens with the possible combinations involving two and three dimensions.</p>
<div class="tblformal" id="GUID-DDD42A40-3EF8-473D-8D07-52A934A72D0C__BGBCEEFJ">
<p class="titleintable">Table 5-1 Data and Index Dimensionality, and Query Support</p>
<table class="cellalignment152" title="Data and Index Dimensionality, and Query Support" summary="Data and Index Dimensionality, and Query Support">
<thead>
<tr class="cellalignment143">
<th class="cellalignment184" id="d35694e903">Base Table (geometry1) Dimensionality</th>
<th class="cellalignment184" id="d35694e906">Spatial Index Dimensionality</th>
<th class="cellalignment180" id="d35694e909">Query Window (geometry2) Dimensionality</th>
<th class="cellalignment185" id="d35694e912">Query Result</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e917" headers="d35694e903">
<p>2-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e917 d35694e906">
<p>2-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e917 d35694e909">
<p>2-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e917 d35694e912">
<p>Performs a two-dimensional query.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e930" headers="d35694e903">
<p>2-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e930 d35694e906">
<p>2-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e930 d35694e909">
<p>3-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e930 d35694e912">
<p>Supported if the query window has an appropriate SDO_GTYPE value less than 3008.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e943" headers="d35694e903">
<p>2-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e943 d35694e906">
<p>3-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e943 d35694e909">
<p>2-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e943 d35694e912">
<p>Not supported: 3D index not permitted on 2D data.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e956" headers="d35694e903">
<p>2-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e956 d35694e906">
<p>3-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e956 d35694e909">
<p>3-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e956 d35694e912">
<p>Not supported: 3D index not permitted on 2D data.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e969" headers="d35694e903">
<p>3-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e969 d35694e906">
<p>2-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e969 d35694e909">
<p>2-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e969 d35694e912">
<p>Ignores the third (Z) dimension in each base geometry and performs a two-dimensional query.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e982" headers="d35694e903">
<p>3-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e982 d35694e906">
<p>2-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e982 d35694e909">
<p>3-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e982 d35694e912">
<p>Supported if the query window has an appropriate SDO_GTYPE value less than 3008.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e995" headers="d35694e903">
<p>3-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e995 d35694e906">
<p>3-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e995 d35694e909">
<p>2-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e995 d35694e912">
<p>Converts the 2D query window to a 3D window with zero Z values and performs a three-dimensional query.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d35694e1008" headers="d35694e903">
<p>3-dimensional</p>
</td>
<td class="cellalignment187" headers="d35694e1008 d35694e906">
<p>3-dimensional</p>
</td>
<td class="cellalignment182" headers="d35694e1008 d35694e909">
<p>3-dimensional</p>
</td>
<td class="cellalignment188" headers="d35694e1008 d35694e912">
<p>Performs a three-dimensional query.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment142">
<tr>
<td class="cellalignment149">
<table class="cellalignment147">
<tr>
<td class="cellalignment146"><a href="rollback-segments-and-sort-area-size.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment146"><a href="coordinate-systems-spatial-reference-systems.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment151">
<table class="cellalignment145">
<tr>
<td class="cellalignment146"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment146"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment146"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment146"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment146"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment146"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>