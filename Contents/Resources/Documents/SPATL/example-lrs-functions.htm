<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-100685"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Example%20of%20LRS%20Functions"></a><title>Example of LRS Functions</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-01-26T11:46:57Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49172-07"/>
<meta name="dcterms.isVersionOf" content="SPATL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="tolerance-values-lrs-functions.htm" title="Previous" type="text/html"/>
<link rel="Next" href="spatial-analysis-and-mining.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49172-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-699CED71-3497-4826-A4A5-60BF13CD3770"></a> <span id="PAGE" style="display:none;">104/475</span> <!-- End Header -->
<a id="SPATL787"></a><a id="SPATL788"></a><a id="SPATL789"></a><a id="SPATL790"></a><a id="SPATL786"></a>
<h1 id="SPATL-GUID-699CED71-3497-4826-A4A5-60BF13CD3770" class="sect1"><span class="enumeration_section">7.7</span> Example of LRS Functions</h1>
<div>
<p><a id="d63557e46" class="indexterm-anchor"></a><a id="d63557e50" class="indexterm-anchor"></a>This section presents a simplified example that uses LRS functions. It refers to concepts that are explained in this chapter and uses functions documented in <a href="sdo_lrs-package-linear-referencing-system.htm">SDO_LRS Package (Linear Referencing System)</a> .</p>
<p>This example uses the road that is illustrated in <a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__I888413">Figure 7-20</a>.</p>
<div class="figure" id="GUID-699CED71-3497-4826-A4A5-60BF13CD3770__I888413">
<p class="titleinfigure">Figure 7-20 Simplified LRS Example: Highway</p>
<img width="304" height="303" src="img/highway.gif" alt="Description of Figure 7-20 follows" title="Description of Figure 7-20 follows"/><br/>
<a href="img_text/highway.htm">Description of &#34;Figure 7-20 Simplified LRS Example: Highway&#34;</a></div>
<!-- class="figure" -->
<p>In <a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__I888413">Figure 7-20</a>, the highway (Route 1) starts at point 2,2 and ends at point 5,14, follows the path shown, and has six entrance-exit points (Exit 1 through Exit 6). For simplicity, each unit on the graph represents one unit of measure, and thus the measure from start to end is 27 (the segment from Exit 5 to Exit 6 being the hypotenuse of a 3-4-5 right triangle).</p>
<p>Each row in <a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABECGJD" title="Highway Features and LRS Counterparts">Table 7-1</a> lists an actual highway-related feature and the LRS feature that corresponds to it or that can be used to represent it.</p>
<div class="tblformal" id="GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABECGJD">
<p class="titleintable">Table 7-1 Highway Features and LRS Counterparts</p>
<table class="cellalignment152" title="Highway Features and LRS Counterparts" summary="Highway Features and LRS Counterparts">
<thead>
<tr class="cellalignment143">
<th class="cellalignment185" id="d63557e89">Highway Feature</th>
<th class="cellalignment222" id="d63557e92">LRS Feature</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e97" headers="d63557e89">
<p>Named route, road, or street</p>
</td>
<td class="cellalignment223" headers="d63557e97 d63557e92">
<p>LRS segment, or linear feature (logical set of segments)</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e104" headers="d63557e89">
<p>Mile or kilometer marker</p>
</td>
<td class="cellalignment223" headers="d63557e104 d63557e92">
<p>Measure</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e111" headers="d63557e89">
<p>Accident reporting and location tracking</p>
</td>
<td class="cellalignment223" headers="d63557e111 d63557e92">
<p><a href="sdo_lrs-locate_pt.htm">SDO_LRS.LOCATE_PT</a> function</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e121" headers="d63557e89">
<p>Construction zone (portion of a road)</p>
</td>
<td class="cellalignment223" headers="d63557e121 d63557e92">
<p><a href="sdo_lrs-clip_geom_segment.htm">SDO_LRS.CLIP_GEOM_SEGMENT</a> function</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e131" headers="d63557e89">
<p>Road extension (adding at the beginning or end) or combination (designating or renaming two roads that meet as one road)</p>
</td>
<td class="cellalignment223" headers="d63557e131 d63557e92">
<p><a href="sdo_lrs-concatenate_geom_segments.htm">SDO_LRS.CONCATENATE_GEOM_SEGMENTS</a> function</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e141" headers="d63557e89">
<p>Road reconstruction or splitting (resulting in two named roads from one named road)</p>
</td>
<td class="cellalignment223" headers="d63557e141 d63557e92">
<p><a href="sdo_lrs-split_geom_segment.htm">SDO_LRS.SPLIT_GEOM_SEGMENT</a> procedure</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e151" headers="d63557e89">
<p>Finding the closest point on the road to a point off the road (such as a building)</p>
</td>
<td class="cellalignment223" headers="d63557e151 d63557e92">
<p><a href="sdo_lrs-project_pt.htm">SDO_LRS.PROJECT_PT</a> function</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment188" id="d63557e161" headers="d63557e89">
<p>Guard rail or fence alongside a road</p>
</td>
<td class="cellalignment223" headers="d63557e161 d63557e92">
<p><a href="sdo_lrs-offset_geom_segment.htm">SDO_LRS.OFFSET_GEOM_SEGMENT</a> function</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p><a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABFDJGE">Example 7-2</a> does the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Creates a table to hold the segment depicted in <a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__I888413">Figure 7-20</a></p>
</li>
<li>
<p>Inserts the definition of the highway depicted in <a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__I888413">Figure 7-20</a> into the table</p>
</li>
<li>
<p>Inserts the necessary metadata into the USER_SDO_GEOM_METADATA view</p>
</li>
<li>
<p>Uses PL/SQL and SQL statements to define the segment and perform operations on it</p>
</li>
</ul>
<div class="example" id="GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABFDJGE">
<p class="titleinexample">Example 7-2 Simplified Example: Highway</p>
<pre dir="ltr">-- Create a table for routes (highways).
CREATE TABLE lrs_routes (
  route_id  NUMBER PRIMARY KEY,
  route_name  VARCHAR2(32),
  route_geometry  SDO_GEOMETRY);

-- Populate table with just one route for this example.
INSERT INTO lrs_routes VALUES(
  1,
  &#39;Route1&#39;,
  SDO_GEOMETRY(
    3302,  -- line string, 3 dimensions: X,Y,M
    NULL,
    NULL,
    SDO_ELEM_INFO_ARRAY(1,2,1), -- one line string, straight segments
    SDO_ORDINATE_ARRAY(
      2,2,0,   -- Start point - Exit1; 0 is measure from start.
      2,4,2,   -- Exit2; 2 is measure from start. 
      8,4,8,   -- Exit3; 8 is measure from start. 
      12,4,12,  -- Exit4; 12 is measure from start. 
      12,10,NULL,  -- Not an exit; measure automatically calculated and filled.
      8,10,22,  -- Exit5; 22 is measure from start.  
      5,14,27)  -- End point (Exit6); 27 is measure from start.
  )
);

-- Update the spatial metadata.
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
  VALUES (
  &#39;lrs_routes&#39;,
  &#39;route_geometry&#39;,
  SDO_DIM_ARRAY(   -- 20X20 grid
    SDO_DIM_ELEMENT(&#39;X&#39;, 0, 20, 0.005),
    SDO_DIM_ELEMENT(&#39;Y&#39;, 0, 20, 0.005),
    SDO_DIM_ELEMENT(&#39;M&#39;, 0, 20, 0.005) -- Measure dimension
     ),
  NULL   -- SRID
);

-- Create the spatial index.
CREATE INDEX lrs_routes_idx ON lrs_routes(route_geometry)
  INDEXTYPE IS MDSYS.SPATIAL_INDEX;

-- Test the LRS procedures.
DECLARE
geom_segment SDO_GEOMETRY;
line_string SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
result_geom_1 SDO_GEOMETRY;
result_geom_2 SDO_GEOMETRY;
result_geom_3 SDO_GEOMETRY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = &#39;Route1&#39;;
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;;

-- Define the LRS segment for Route1. This will populate any null measures.
-- No need to specify start and end measures, because they are already defined 
-- in the geometry.
SDO_LRS.DEFINE_GEOM_SEGMENT (geom_segment, dim_array);

SELECT a.route_geometry INTO line_string FROM lrs_routes a 
  WHERE a.route_name = &#39;Route1&#39;;

-- Split Route1 into two segments.
SDO_LRS.SPLIT_GEOM_SEGMENT(line_string,dim_array,5,result_geom_1,result_geom_2);

-- Concatenate the segments that were just split.
result_geom_3 := SDO_LRS.CONCATENATE_GEOM_SEGMENTS(result_geom_1, dim_array, result_geom_2, dim_array);

-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;

INSERT INTO lrs_routes VALUES(
  11,
  &#39;result_geom_1&#39;,
  result_geom_1
);
INSERT INTO lrs_routes VALUES(
  12,
  &#39;result_geom_2&#39;,
  result_geom_2
);
INSERT INTO lrs_routes VALUES(
  13,
  &#39;result_geom_3&#39;,
  result_geom_3
);

END;
/

-- First, display the data in the LRS table.
SELECT route_id, route_name, route_geometry FROM lrs_routes;

-- Are result_geom_1 and result_geom2 connected? 
SELECT  SDO_LRS.CONNECTED_GEOM_SEGMENTS(a.route_geometry,
           b.route_geometry, 0.005)
  FROM lrs_routes a, lrs_routes b
  WHERE a.route_id = 11 AND b.route_id = 12;

-- Is the Route1 segment valid?
SELECT  SDO_LRS.VALID_GEOM_SEGMENT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- Is 50 a valid measure on Route1? (Should return FALSE; highest Route1 measure is 27.)
SELECT  SDO_LRS.VALID_MEASURE(route_geometry, 50)
  FROM lrs_routes WHERE route_id = 1;

-- Is the Route1 segment defined?
SELECT  SDO_LRS.IS_GEOM_SEGMENT_DEFINED(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- How long is Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_LENGTH(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the start measure of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_START_MEASURE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the end measure of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_END_MEASURE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the start point of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_START_PT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the end point of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_END_PT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- Translate (shift measure values) (+10).
-- First, display the original segment; then, translate.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;
SELECT SDO_LRS.TRANSLATE_MEASURE(a.route_geometry, m.diminfo, 10)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;
    AND a.route_id = 1;
 
-- Redefine geometric segment to &#34;convert&#34; miles to kilometers
DECLARE
geom_segment SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
 
BEGIN
 
SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = &#39;Route1&#39;;
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;;
 
-- &#34;Convert&#34; mile measures to kilometers (27 * 1.609 = 43.443).
SDO_LRS.REDEFINE_GEOM_SEGMENT (geom_segment,
  dim_array,
  0, -- Zero starting measure: LRS segment starts at start of route.
  43.443); -- End of LRS segment. 27 miles = 43.443 kilometers.
 
-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;
 
END;/
-- Display the redefined segment, with all measures &#34;converted.&#34;
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

-- Clip a piece of Route1.
SELECT  SDO_LRS.CLIP_GEOM_SEGMENT(route_geometry, 5, 10)
  FROM lrs_routes WHERE route_id = 1;

-- Point (9,3,NULL) is off the road; should return (9,4,9).
SELECT  SDO_LRS.PROJECT_PT(route_geometry, 
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)) )
  FROM lrs_routes WHERE route_id = 1;

-- Return the measure of the projected point.
SELECT  SDO_LRS.GET_MEASURE(
 SDO_LRS.PROJECT_PT(a.route_geometry, m.diminfo,
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)) ),
 m.diminfo )
 FROM lrs_routes a, user_sdo_geom_metadata m
 WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;
   AND a.route_id = 1;

-- Is point (9,3,NULL) a valid LRS point? (Should return TRUE.)
SELECT  SDO_LRS.VALID_LRS_PT(
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)),
  m.diminfo)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;
    AND a.route_id = 1;

-- Locate the point on Route1 at measure 9, offset 0.
SELECT  SDO_LRS.LOCATE_PT(route_geometry, 9, 0)
  FROM lrs_routes WHERE route_id = 1;
</pre>
<p><a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABGFEHE">Example 7-3</a> shows the output of the SELECT statements in <a href="example-lrs-functions.htm#GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABFDJGE">Example 7-2</a>.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-699CED71-3497-4826-A4A5-60BF13CD3770__BABGFEHE">
<p class="titleinexample">Example 7-3 Simplified Example: Output of SELECT Statements</p>
<pre dir="ltr">SQL&gt; -- First, display the data in the LRS table.
SQL&gt; SELECT route_id, route_name, route_geometry FROM lrs_routes;

  ROUTE_ID ROUTE_NAME                                                           
---------- --------------------------------                                     
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
         1 Route1                                                               
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
        11 result_geom_1                                                        
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 5, 4, 5))                                                     
                                                                                
        12 result_geom_2                                                        

  ROUTE_ID ROUTE_NAME                                                           
---------- --------------------------------                                     
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 4, 5, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))                 
                                                                                
        13 result_geom_3                                                        
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 5, 4, 5, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27)
)  
 
SQL&gt; -- Are result_geom_1 and result_geom2 connected?
SQL&gt; SELECT  SDO_LRS.CONNECTED_GEOM_SEGMENTS(a.route_geometry,
  2             b.route_geometry, 0.005)
  3    FROM lrs_routes a, lrs_routes b
  4    WHERE a.route_id = 11 AND b.route_id = 12;

SDO_LRS.CONNECTED_GEOM_SEGMENTS(A.ROUTE_GEOMETRY,B.ROUTE_GEOMETRY,0.005)        
--------------------------------------------------------------------------------
TRUE
 
SQL&gt; -- Is the Route1 segment valid?
SQL&gt; SELECT  SDO_LRS.VALID_GEOM_SEGMENT(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.VALID_GEOM_SEGMENT(ROUTE_GEOMETRY)                                      
--------------------------------------------------------------------------------
TRUE 
 
SQL&gt; -- Is 50 a valid measure on Route1? (Should return FALSE; highest Route1 measure is 27.)
SQL&gt; SELECT  SDO_LRS.VALID_MEASURE(route_geometry, 50)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.VALID_MEASURE(ROUTE_GEOMETRY,50)                                        
--------------------------------------------------------------------------------
FALSE 
 
SQL&gt; -- Is the Route1 segment defined?
SQL&gt; SELECT  SDO_LRS.IS_GEOM_SEGMENT_DEFINED(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.IS_GEOM_SEGMENT_DEFINED(ROUTE_GEOMETRY)                                 
--------------------------------------------------------------------------------
TRUE 
 
SQL&gt; -- How long is Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_LENGTH(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_LENGTH(ROUTE_GEOMETRY)                                     
-------------------------------------------                                     
                                         27  
 
SQL&gt; -- What is the start measure of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_START_MEASURE(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_START_MEASURE(ROUTE_GEOMETRY)                              
--------------------------------------------------                              
                                                 0  
 
SQL&gt; -- What is the end measure of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_END_MEASURE(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_END_MEASURE(ROUTE_GEOMETRY)                                
------------------------------------------------                                
                                              27  
 
SQL&gt; -- What is the start point of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_START_PT(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_START_PT(ROUTE_GEOMETRY)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, 
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
2, 2, 0)) 
 
SQL&gt; -- What is the end point of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_END_PT(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_END_PT(ROUTE_GEOMETRY)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
5, 14, 27))  
 
SQL&gt; -- Translate (shift measure values) (+10).
SQL&gt; -- First, display the original segment; then, translate.
SQL&gt; SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;
 
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
SQL&gt; SELECT SDO_LRS.TRANSLATE_MEASURE(a.route_geometry, m.diminfo, 10)
  2    FROM lrs_routes a, user_sdo_geom_metadata m
  3    WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;
  4   AND a.route_id = 1;
 
SDO_LRS.TRANSLATE_MEASURE(A.ROUTE_GEOMETRY,M.DIMINFO,10)(SDO_GTYPE, SDO_SRID, SD
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 10, 2, 4, 12, 8, 4, 18, 12, 4, 22, 12, 10, 28, 8, 10, 32, 5, 14, 37))     
                                                                                
 
SQL&gt; -- Redefine geometric segment to &#34;convert&#34; miles to kilometers
SQL&gt; DECLARE
  2  geom_segment SDO_GEOMETRY;
  3  dim_array SDO_DIM_ARRAY;
  4  
  5  BEGIN
  6  
  7  SELECT a.route_geometry into geom_segment FROM lrs_routes a
  8    WHERE a.route_name = &#39;Route1&#39;;
  9  SELECT m.diminfo into dim_array from
 10    user_sdo_geom_metadata m
 11    WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;;
 12  
 13  -- &#34;Convert&#34; mile measures to kilometers (27 * 1.609 = 43.443).
 14  SDO_LRS.REDEFINE_GEOM_SEGMENT (geom_segment,
 15    dim_array,
 16    0, -- Zero starting measure: LRS segment starts at start of route.
 17    43.443); -- End of LRS segment. 27 miles = 43.443 kilometers.
 18  
 19  -- Update and insert geometries into table, to display later.
 20  UPDATE lrs_routes a SET a.route_geometry = geom_segment
 21     WHERE a.route_id = 1;
 22  
 23  END;
 24  /
 
PL/SQL procedure successfully completed.
 
SQL&gt; -- Display the redefined segment, with all measures &#34;converted.&#34;
SQL&gt; SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;
 
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 3.218, 8, 4, 12.872, 12, 4, 19.308, 12, 10, 28.962, 8, 10, 35.398
, 5, 14, 43.443)) 
 
SQL&gt; -- Clip a piece of Route1.
SQL&gt; SELECT  SDO_LRS.CLIP_GEOM_SEGMENT(route_geometry, 5, 10)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.CLIP_GEOM_SEGMENT(ROUTE_GEOMETRY,5,10)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 4, 5, 8, 4, 8, 10, 4, 10))   
 
SQL&gt; -- Point (9,3,NULL) is off the road; should return (9,4,9).
SQL&gt; SELECT  SDO_LRS.PROJECT_PT(route_geometry,
  2    SDO_GEOMETRY(3301, NULL, NULL,
  3    SDO_ELEM_INFO_ARRAY(1, 1, 1),
  4    SDO_ORDINATE_ARRAY(9, 3, NULL)) )
  5    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.PROJECT_PT(ROUTE_GEOMETRY,SDO_GEOMETRY(3301,NULL,NULL,SDO_EL
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
9, 4, 9)) 
 
SQL&gt; -- Return the measure of the projected point.
SQL&gt; SELECT  SDO_LRS.GET_MEASURE(
  2   SDO_LRS.PROJECT_PT(a.route_geometry, m.diminfo,
  3    SDO_GEOMETRY(3301, NULL, NULL,
  4    SDO_ELEM_INFO_ARRAY(1, 1, 1),
  5    SDO_ORDINATE_ARRAY(9, 3, NULL)) ),
  6   m.diminfo )
  7   FROM lrs_routes a, user_sdo_geom_metadata m
  8   WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;
  9      AND a.route_id = 1;

SDO_LRS.GET_MEASURE(SDO_LRS.PROJECT_PT(A.ROUTE_GEOMETRY,M.DIMINFO,SDO_GEOM
--------------------------------------------------------------------------------
                                                                               9
 
SQL&gt; -- Is point (9,3,NULL) a valid LRS point? (Should return TRUE.)
SQL&gt; SELECT  SDO_LRS.VALID_LRS_PT(
  2    SDO_GEOMETRY(3301, NULL, NULL,
  3    SDO_ELEM_INFO_ARRAY(1, 1, 1),
  4    SDO_ORDINATE_ARRAY(9, 3, NULL)),
  5    m.diminfo)
  6    FROM lrs_routes a, user_sdo_geom_metadata m
  7    WHERE m.table_name = &#39;LRS_ROUTES&#39; AND m.column_name = &#39;ROUTE_GEOMETRY&#39;
  8    AND a.route_id = 1;

SDO_LRS.VALID_LRS_PT(SDO_GEOMETRY(3301,NULL,NULL,SDO_ELEM_INFO_ARRAY
------------------------------------------------------------------------------
TRUE   
 
SQL&gt; -- Locate the point on Route1 at measure 9, offset 0.
SQL&gt; SELECT  SDO_LRS.LOCATE_PT(route_geometry, 9, 0)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.LOCATE_PT(ROUTE_GEOMETRY,9,0)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), S
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
9, 4, 9)) 
</pre></div>
<!-- class="example" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment142">
<tr>
<td class="cellalignment149">
<table class="cellalignment147">
<tr>
<td class="cellalignment146"><a href="tolerance-values-lrs-functions.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment146"><a href="spatial-analysis-and-mining.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment151">
<table class="cellalignment145">
<tr>
<td class="cellalignment146"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment146"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment146"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment146"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment146"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment146"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>