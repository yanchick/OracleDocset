<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-101462"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/SDO_NN"></a><title>SDO_NN</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="SDO_NN operator, operators, SDO_NN, nearest neighbor, SDO_NN operator"/>
<meta name="dcterms.created" content="2017-01-26T11:46:57Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49172-07"/>
<meta name="dcterms.isVersionOf" content="SPATL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="sdo_join.htm" title="Previous" type="text/html"/>
<link rel="Next" href="sdo_nn_distance.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49172-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-41E6B1FA-1A03-480B-996F-830E8566661D"></a> <span id="PAGE" style="display:none;">191/475</span> <!-- End Header -->
<a id="SPATL1033"></a><a id="SPATL1032"></a>
<h1 id="SPATL-GUID-41E6B1FA-1A03-480B-996F-830E8566661D" class="sect1"><span class="enumeration_section">18.9</span> SDO_NN</h1>
<div>
<div class="section">
<p class="subhead1">Format</p>
<pre dir="ltr">SDO_NN(geometry1, geometry2, param [, number]);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Description</p>
<p>Uses the spatial index to identify the nearest neighbors for a geometry.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Keywords and Parameters</p>
<div class="tblformal" id="GUID-41E6B1FA-1A03-480B-996F-830E8566661D__GUID-EC6B5964-0D56-4250-B313-CC3CDEF5FC75">
<table class="cellalignment152" summary="Keywords and parameters for SDO_NN operator">
<thead>
<tr class="cellalignment143">
<th class="cellalignment184" id="d109693e75">Value</th>
<th class="cellalignment257" id="d109693e78">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment143">
<td class="cellalignment187" id="d109693e83" headers="d109693e75">
<p>geometry1</p>
</td>
<td class="cellalignment258" headers="d109693e83 d109693e78">
<p>Specifies a geometry column in a table. The column must be spatially indexed. Data type is SDO_GEOMETRY.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d109693e92" headers="d109693e75">
<p>geometry2</p>
</td>
<td class="cellalignment258" headers="d109693e92 d109693e78">
<p>Specifies either a geometry from a table or a transient instance of a geometry. The nearest neighbor or neighbors to <code>geometry2</code> will be returned from <code>geometry1</code>. (<code>geometry2</code> is specified using a bind variable or SDO_GEOMETRY constructor.) Data type is SDO_GEOMETRY.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d109693e110" headers="d109693e75">
<p>param</p>
</td>
<td class="cellalignment258" headers="d109693e110 d109693e78">
<p>Determines the behavior of the operator. The available keywords are listed in <a href="sdo_nn.htm#GUID-41E6B1FA-1A03-480B-996F-830E8566661D__G996876" title="Keywords for the SDO_NN Param Parameter">Table 18-4</a>. If you do not specify this parameter, the operator returns all rows in increasing distance order from <code>geometry2</code>. Data type is VARCHAR2.</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment187" id="d109693e127" headers="d109693e75">
<p>number</p>
</td>
<td class="cellalignment258" headers="d109693e127 d109693e78">
<p>If the <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a> ancillary operator is included in the call to SDO_NN, specifies the same number used in the call to <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a>. Data type is NUMBER.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p><a href="sdo_nn.htm#GUID-41E6B1FA-1A03-480B-996F-830E8566661D__G996876" title="Keywords for the SDO_NN Param Parameter">Table 18-4</a> lists the keywords for the <code>param</code> parameter.</p>
<div class="tblformal" id="GUID-41E6B1FA-1A03-480B-996F-830E8566661D__G996876">
<p class="titleintable">Table 18-4 Keywords for the SDO_NN Param Parameter</p>
<table class="cellalignment152" title="Keywords for the SDO_NN Param Parameter" summary="Keywords for the SDO_NN Param Parameter">
<thead>
<tr class="cellalignment143">
<th class="cellalignment240" id="d109693e162">Keyword</th>
<th class="cellalignment259" id="d109693e165">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment143">
<td class="cellalignment241" id="d109693e170" headers="d109693e162">
<p>distance</p>
</td>
<td class="cellalignment260" headers="d109693e170 d109693e165">
<p>Specifies the number of distance units after which to stop searching for nearest neighbors. If you do not also specify the <code>unit</code> keyword, the default is the unit of measurement associated with the data. Data type is NUMBER.</p>
<p>For example: &#39;distance=10 unit=mile&#39;</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment241" id="d109693e184" headers="d109693e162">
<p>sdo_batch_size</p>
</td>
<td class="cellalignment260" headers="d109693e184 d109693e165">
<p>Specifies the number of rows to be evaluated at a time when the SDO_NN expression may need to be evaluated multiple times in order to return the desired number of results that satisfy the WHERE clause. Available only when an R-tree index is used. If you specify <code>sdo_batch_size=0</code> (or if you omit the <code>param</code> parameter completely), Spatial and Graph calculates a batch size suited to the result set size. See the Usage Notes and Examples for more information. Data type is NUMBER.</p>
<p>For example: &#39;sdo_batch_size=10&#39;</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment241" id="d109693e201" headers="d109693e162">
<p>sdo_num_res</p>
</td>
<td class="cellalignment260" headers="d109693e201 d109693e165">
<p>Specifies the number of results (nearest neighbors) to be returned. If neither <code>sdo_batch_size</code> nor <code>sdo_num_res</code> is specified, this is equivalent to specifying sdo_batch_size=0. See the Usage Notes and Examples for more information. Data type is NUMBER.</p>
<p>For example: &#39;sdo_num_res=5&#39;</p>
</td>
</tr>
<tr class="cellalignment143">
<td class="cellalignment241" id="d109693e218" headers="d109693e162">
<p>unit</p>
</td>
<td class="cellalignment260" headers="d109693e218 d109693e165">
<p>If the <code>distance</code> keyword or the <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a> ancillary operator is included in the call to SDO_NN, specifies the unit of measurement: a quoted string with <code>unit=</code> and an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table. See <a href="unit-measurement-support.htm#GUID-5984C12A-0A22-4BFD-B777-7C837D3CBB99">Unit of Measurement Support</a> for more information about unit of measurement specification. Data type is VARCHAR2. Default = unit of measurement associated with the data. For geodetic data, the default is meters.</p>
<p>For example: &#39;unit=KM&#39;</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Returns</p>
<p>This operator returns the <code>sdo_num_res</code> number of objects from <code>geometry1</code> that are nearest to <code>geometry2</code> in the query. In determining how near two geometry objects are, the shortest possible distance between any two points on the surface of each object is used.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Usage Notes</p>
<p>The operator is disabled if the table does not have a spatial index or if the number of dimensions for the query window does not match the number of dimensions specified when the index was created.</p>
<p>The operator must always be used in a WHERE clause, and the condition that includes the operator should be an expression of the form SDO_NN(arg1, arg2, &#39;&lt;some_parameter&gt;&#39;) = &#39;TRUE&#39;. (The expression must not equate to any value other than &#39;TRUE&#39;.)</p>
<p>The operator can be used in the following ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>If all geometries in the layer are candidates, use the <code>sdo_num_res</code> keyword to specify the number of geometries returned.</p>
<p>The <code>sdo_num_res</code> keyword is especially useful when you are concerned only with proximity (for example, the three closest banks, regardless of bank name).</p>
</li>
<li>
<p>If any geometries in the table might be nearer than the geometries specified in the WHERE clause, use the <code>sdo_batch_size</code> keyword and use the WHERE clause (including the ROWNUM pseudocolumn) to limit the number of geometries returned.</p>
<p>The <code>sdo_batch_size</code> keyword is especially useful when you need to consider one or more columns from the <span class="italic"><span class="bold">same</span></span> table as the nearest neighbor search column in the WHERE clause (for example, the three closest banks whose name contains <span class="italic">MegaBank</span>).</p>
</li>
<li>
<p>You can also specify both the <code>sdo_num_res</code> and <code>sdo_batch_size</code> keywords, as explained later in these Usage Notes.</p>
</li>
</ul>
<p>As an example of the <code>sdo_batch_size</code> keyword, assume that a RESTAURANTS table contains different types of restaurants, and you want to find the two nearest Italian restaurants to your hotel but only if they are within two miles. The query might look like the following:</p>
<pre dir="ltr">SELECT r.name FROM restaurants r WHERE 
   SDO_NN(r.geometry, :my_hotel,
      &#39;sdo_batch_size=10 distance=2 unit=mile&#39;) = &#39;TRUE&#39; 
   AND r.cuisine = &#39;Italian&#39; AND ROWNUM &lt;=2; 
</pre>
<p>In this example, the <code>ROWNUM &lt;=2</code> clause is necessary to limit the number of results returned to no more than 2 where CUISINE is <code>Italian</code>. However, if the <code>sdo_batch_size</code> keyword is not specified in this example, and if <code>sdo_num_res=2</code> is specified instead of <code>ROWNUM &lt;=2</code>, only the two nearest restaurants within two miles are considered, regardless of their CUISINE value; and if the CUISINE value of these two rows is not <code>Italian</code>, the query may return no rows.</p>
<p>The <code>sdo_batch_size</code> value can affect the performance of nearest neighbor queries. A good general guideline is to specify the number of candidate rows likely to satisfy the WHERE clause. Using the preceding example of a query for Italian restaurants, if approximately 20 percent of the restaurants nearest to the hotel are Italian and if you want 2 restaurants, an <code>sdo_batch_size</code> value of 10 will probably result in the best performance. On the other hand, if only approximately 5 percent of the restaurants nearest to the hotel are Italian and if you want 2 restaurants, an <code>sdo_batch_size</code> value of 40 would be better.</p>
<p>You can specify <code>sdo_batch_size=0</code>, which causes Spatial and Graph to calculate a batch size that is suitable for the result set size. However, the calculated batch size may not be optimal, and the calculation incurs some processing overhead; if you can determine a good <code>sdo_batch_size</code> value for a query, the performance will probably be better than if you specify <code>sdo_batch_size=0</code>.</p>
<p>Specify the <code>number</code> parameter only if you are using the <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a> ancillary operator in the call to SDO_NN. See the information about the <a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a> operator in this chapter.</p>
<p>If two or more objects from <code>geometry1</code> are an equal distance from <code>geometry2</code>, any of the objects can be returned on any call to the function. For example, if <code>item_a</code>, <code>item_b</code>, and <code>item_c</code> are nearest to and equally distant from <code>geometry2,</code> and if <code>sdo_num_res=2</code>, two of those three objects are returned, but they can be any two of the three.</p>
<p>If the SDO_NN operator uses a partitioned spatial index (see <a href="using-partitioned-spatial-indexes.htm">Using Partitioned Spatial Indexes</a>), the requested number of geometries is returned for <span class="italic">each</span> partition that contains candidate rows based on the query criteria. For example, if you request the 5 nearest restaurants to a point and the spatial index has 4 partitions, the operator returns up to 20 (5*4) geometries. In this case, you must use the ROWNUM pseudocolumn (here, <code>WHERE ROWNUM &lt;=5</code>) to return the 5 nearest restaurants.</p>
<p>If <code>geometry1</code> and <code>geometry2</code> are based on different coordinate systems, <code>geometry2</code> is temporarily transformed to the coordinate system of <code>geometry1</code> for the operation to be performed, as described in <a href="notes-and-restrictions-coordinate-systems-support.htm#GUID-F1C8A225-2FA0-4338-B5A6-05455C18B1E8">Different Coordinate Systems for Geometries with Operators and Functions</a>.</p>
<p>SDO_NN is not supported for spatial joins.</p>
<p><a id="d109693e425" class="indexterm-anchor"></a>In some situations the SDO_NN operator will not use the spatial index unless an optimizer hint forces the index to be used. This can occur when a query involves a join; and if the optimizer hint is not used in such situations, an internal error occurs. To prevent such errors, you should always specify an optimizer hint to use the spatial index with the SDO_NN operator, regardless of how simple or complex the query is. For example, the following excerpt from a query specifies to use the COLA_SPATIAL_IDX index that is defined on the COLA_MARKETS table:</p>
<pre dir="ltr">SELECT /*+ INDEX(c cola_spatial_idx) */ 
  c.mkt_id, c.name, ... FROM cola_markets c, ...;
</pre>
<p>However, if the column predicate in the WHERE clause specifies any nonspatial column in the table for <code>geometry1</code> that has an associated index, be sure that this index is not used by specifying the NO_INDEX hint for that index. For example, if there was an index named COLA_NAME_IDX defined on the NAME column, you would need to specify the hints in the preceding example as follows:</p>
<pre dir="ltr">SELECT /*+ INDEX(c cola_spatial_idx) NO_INDEX(c cola_name_idx) */ 
  c.mkt_id, c.name, ... FROM cola_markets c, ...;
</pre>
<p>(Note, however, that there is no index named COLA_NAME_IDX in the example in <a href="simple-example-inserting-indexing-and-querying-spatial-data.htm">Simple Example: Inserting_ Indexing_ and Querying Spatial Data</a>.)</p>
<p>If you join two or more tables with the SDO_NN operator and the <code>sdo_num_res</code> keyword, specify the LEADING hint for the outer table, USE_NL hint to have a nested loops join, and the INDEX hint for the inner table (the table with the spatial index). For example:</p>
<pre dir="ltr">SELECT  /*+ LEADING(b) USE_NL(b a) INDEX(a cola_spatial_idx) */ a.gid
   FROM cola_qry  b,  cola_markets  a
      WHERE SDO_NN(a.shape, b.shape, &#39;sdo_num_res=1&#39;)=&#39;TRUE&#39;;
</pre>
<p>However, if you join two or more tables with the SDO_NN operator, the <code>sdo_batch_size</code> keyword, and the ROWNUM clause, the best way to implement the logic is to use a PL/SQL block. For example:</p>
<pre dir="ltr">BEGIN
  FOR item IN ( SELECT b.shape FROM cola_qry b)
  LOOP 
    SELECT  /*+ INDEX(a cola_spatial_idx) */ a.gid INTO local_gid
    FROM cola_markets  a
    WHERE SDO_NN(a.shape, item.shape, &#39;sdo_batch_size=10&#39;)=&#39;TRUE&#39;
      and a.name like &#39;cola%&#39; and ROWNUM &lt;2;
  END LOOP;
END;
</pre>
<p>For detailed information about using optimizer hints, see <a class="olink TGSQL259" target="_blank" href="../TGSQL/tgsql_influence.htm#TGSQL259"><span class="italic">Oracle Database SQL Tuning Guide</span></a>.</p>
<p>For information about 3D support with spatial operators (which operators do and do not consider all three dimensions in their computations), see <a href="three-dimensional-spatial-objects.htm">Three-Dimensional Spatial Objects</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Examples</p>
<p>The following example finds the two objects from the SHAPE column in the COLA_MARKETS table that are nearest to a specified point (10,7). (The example uses the definitions and data described in <a href="simple-example-inserting-indexing-and-querying-spatial-data.htm">Simple Example: Inserting_ Indexing_ and Querying Spatial Data</a> and illustrated in <a href="simple-example-inserting-indexing-and-querying-spatial-data.htm#GUID-51A767CA-82EE-4475-8C8B-13E685C04934__I1004467">Figure 2-1</a>.)</p>
<pre dir="ltr">SELECT /*+ INDEX(c cola_spatial_idx) */
 c.mkt_id, c.name  FROM cola_markets c  WHERE SDO_NN(c.shape,
   sdo_geometry(2001, NULL, sdo_point_type(10,7,NULL), NULL,
   NULL),  &#39;sdo_num_res=2&#39;) = &#39;TRUE&#39;;

    MKT_ID NAME
---------- --------------------------------
         2 cola_b
         4 cola_d
</pre>
<p>The following example uses the <code>sdo_batch_size</code> keyword to find the two objects (ROWNUM &lt;=2), with a NAME value less than &#39;cola_d&#39;, from the SHAPE column in the COLA_MARKETS table that are nearest to a specified point (10,7). The value of 3 for <code>sdo_batch_size</code> represents a best guess at the number of nearest geometries that need to be evaluated before the WHERE clause condition is satisfied. (The example uses the definitions and data from <a href="simple-example-inserting-indexing-and-querying-spatial-data.htm">Simple Example: Inserting_ Indexing_ and Querying Spatial Data</a>.)</p>
<pre dir="ltr">SELECT /*+ INDEX(c cola_spatial_idx) */ c.mkt_id, c.name
   FROM cola_markets c  
   WHERE SDO_NN(c.shape,  sdo_geometry(2001, NULL,
      sdo_point_type(10,7,NULL), NULL,  NULL),
      &#39;sdo_batch_size=3&#39;) = &#39;TRUE&#39;
   AND c.name &lt; &#39;cola_d&#39; AND ROWNUM &lt;= 2; 

    MKT_ID NAME                                                                 
---------- --------------------------------                                     
         2 cola_b                                                               
         3 cola_c
</pre>
<p>See also the more complex SDO_NN examples in <a href="sdo_nn-examples.htm">SDO_NN Examples</a>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Related Topics</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="sdo_nn_distance.htm">SDO_NN_DISTANCE</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment142">
<tr>
<td class="cellalignment149">
<table class="cellalignment147">
<tr>
<td class="cellalignment146"><a href="sdo_join.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment146"><a href="sdo_nn_distance.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment151">
<table class="cellalignment145">
<tr>
<td class="cellalignment146"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment146"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment146"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment146"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment146"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment146"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>