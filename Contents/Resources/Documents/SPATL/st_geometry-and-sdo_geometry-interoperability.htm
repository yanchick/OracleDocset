<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-101944"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/ST_GEOMETRY%20and%20SDO_GEOMETRY%20Interoperability"></a><title>ST_GEOMETRY and SDO_GEOMETRY Interoperability</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="SQL Multimedia, ST_GEOMETRY type, ST_GEOMETRY type"/>
<meta name="dcterms.created" content="2017-01-26T11:46:57Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E49172-07"/>
<meta name="dcterms.isVersionOf" content="SPATL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="sql-multimedia-type-support.htm" title="Previous" type="text/html"/>
<link rel="Next" href="st_xxx-functions-and-spatial-and-graph-counterparts.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49172-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-22FE0E11-C9F0-4E1A-B512-D494E588FFAA"></a> <span id="PAGE" style="display:none;">62/475</span> <!-- End Header -->
<a id="SPATL564"></a><a id="SPATL565"></a><a id="SPATL563"></a>
<h1 id="SPATL-GUID-22FE0E11-C9F0-4E1A-B512-D494E588FFAA" class="sect1"><span class="enumeration_section">3.1</span> ST_GEOMETRY and SDO_GEOMETRY Interoperability</h1>
<div>
<p>The SQL Multimedia ST_GEOMETRY root type, including its subtypes, and the Oracle Spatial and Graph SDO_GEOMETRY type (described in <a href="sdo_geometry-object-type.htm#GUID-683FF8C5-A773-4018-932D-2AF6EC8BC119">SDO_GEOMETRY Object Type</a>) are essentially interoperable. The ST_GEOMETRY subtypes are:</p>
<ul style="list-style-type: disc;">
<li>
<p>ST_CIRCULARSTRING</p>
</li>
<li>
<p>ST_COMPOUNDCURVE</p>
</li>
<li>
<p>ST_CURVE</p>
</li>
<li>
<p>ST_CURVEPOLYGON</p>
</li>
<li>
<p>ST_GEOMCOLLECTION</p>
</li>
<li>
<p>ST_LINESTRING</p>
</li>
<li>
<p>ST_MULTICURVE</p>
</li>
<li>
<p>ST_MULTILINESTRING</p>
</li>
<li>
<p>ST_MULTIPOINT</p>
</li>
<li>
<p>ST_MULTIPOLYGON</p>
</li>
<li>
<p>ST_MULTISURFACE</p>
</li>
<li>
<p>ST_POINT</p>
</li>
<li>
<p>ST_POLYGON</p>
</li>
<li>
<p>ST_SURFACE</p>
</li>
</ul>
<p>The ST_GEOMETRY type has an additional constructor method (that is, in addition to the constructors defined in the ISO standard) for creating an instance of the type using an SDO_GEOMETRY object. This constructor has the following format:</p>
<pre dir="ltr">ST_GEOMETRY(geom SDO_GEOMETRY);
</pre>
<div class="example" id="GUID-22FE0E11-C9F0-4E1A-B512-D494E588FFAA__CHDGHJJD">
<p class="titleinexample">Example 3-1 Using the ST_GEOMETRY Type for a Spatial Column</p>
<p><a href="st_geometry-and-sdo_geometry-interoperability.htm#GUID-22FE0E11-C9F0-4E1A-B512-D494E588FFAA__CHDGHJJD">Example 3-1</a> creates a table using the ST_GEOMETRY type for a spatial column instead of the SDO_GEOMETRY type, and it uses the ST_GEOMETRY constructor to specify the SHAPE column value when inserting a row into that table.</p>
<pre dir="ltr">CREATE TABLE cola_markets (
  mkt_id NUMBER PRIMARY KEY,
  name VARCHAR2(32),
  shape <span class="bold">ST_GEOMETRY</span>);
 
INSERT INTO cola_markets VALUES(
  1,
  &#39;cola_a&#39;,
  <span class="bold">ST_GEOMETRY</span>(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,3), -- one rectangle (1003 = exterior)
      SDO_ORDINATE_ARRAY(1,1, 5,7) -- only 2 points needed to
            -- define rectangle (lower left and upper right) with
            -- Cartesian-coordinate data
    )
  )
);
</pre>
<p>If you create a table with a spatial column of type ST_GEOMETRY, you should add its information to the USER_SDO_GEOM_METADATA view and create a spatial index on the ST_GEOMETRY column, just as you would for spatial data defined using the SDO_GEOMETRY type. After you have performed these operations, you can use Oracle Spatial and Graph operators (described in <a href="spatial-operators.htm">Spatial Operators</a> ) in the ST_GEOMETRY data. In addition to the operators defined in the standard, you can use the <a href="sdo_nn.htm">SDO_NN</a> and <a href="sdo_within_distance.htm">SDO_WITHIN_DISTANCE</a> operators.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-22FE0E11-C9F0-4E1A-B512-D494E588FFAA__CHDHCJIB">
<p class="titleinexample">Example 3-2 Creating, Indexing, Storing, and Querying ST_GEOMETRY Data</p>
<p><a href="st_geometry-and-sdo_geometry-interoperability.htm#GUID-22FE0E11-C9F0-4E1A-B512-D494E588FFAA__CHDHCJIB">Example 3-2</a> performs many of the same basic operations as in <a href="simple-example-inserting-indexing-and-querying-spatial-data.htm#GUID-51A767CA-82EE-4475-8C8B-13E685C04934__I1004730">Example 2-1</a> in <a href="simple-example-inserting-indexing-and-querying-spatial-data.htm">Simple Example: Inserting_ Indexing_ and Querying Spatial Data</a>, but it uses the ST_GEOMETRY type instead of the SDO_GEOMETRY type for the spatial column.</p>
<pre dir="ltr">CREATE TABLE cola_markets (
  mkt_id NUMBER PRIMARY KEY,
  name VARCHAR2(32),
  shape ST_GEOMETRY);
 
INSERT INTO cola_markets VALUES(
  1,
  &#39;cola_a&#39;,
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,3), -- one rectangle (1003 = exterior)
      SDO_ORDINATE_ARRAY(1,1, 5,7) -- only 2 points needed to
            -- define rectangle (lower left and upper right) with
            -- Cartesian-coordinate data
    )
  )
);
 
INSERT INTO cola_markets VALUES(
  2,
  &#39;cola_b&#39;,
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,1), -- one polygon (exterior polygon ring)
      SDO_ORDINATE_ARRAY(5,1, 8,1, 8,6, 5,7, 5,1)
    )
  )
);
 
INSERT INTO cola_markets VALUES(
  3,
  &#39;cola_c&#39;,
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,1), -- one polygon (exterior polygon ring)
      SDO_ORDINATE_ARRAY(3,3, 6,3, 6,5, 4,5, 3,3)
    )
  )
);
 
INSERT INTO cola_markets VALUES(
  4,
  &#39;cola_d&#39;,
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,4), -- one circle
      SDO_ORDINATE_ARRAY(8,7, 10,9, 8,11)
    )
  )
);
 
---------------------------------------------------------------------------
-- UPDATE METADATA VIEW --
---------------------------------------------------------------------------
 
-- Update the USER_SDO_GEOM_METADATA view. This is required before
-- the spatial index can be created. Do this only once for each layer
-- (that is, table-column combination; here: cola_markets and shape).
 
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID) 
  VALUES (
    &#39;cola_markets&#39;,
    &#39;shape&#39;,
    SDO_DIM_ARRAY(   -- 20X20 grid
      SDO_DIM_ELEMENT(&#39;X&#39;, 0, 20, 0.005),
      SDO_DIM_ELEMENT(&#39;Y&#39;, 0, 20, 0.005)
       ),
    NULL   -- SRID
  );
 
-------------------------------------------------------------------
-- CREATE THE SPATIAL INDEX --
-------------------------------------------------------------------
 
CREATE INDEX cola_spatial_idx
ON cola_markets(shape)
INDEXTYPE IS MDSYS.SPATIAL_INDEX;
 
---------------------------
-- SDO_NN and SDO_WITHIN_DISTANCE
--------------------------
 
-- SDO_NN operator.
 
SELECT  /*+ INDEX(c cola_spatial_idx) */ c.mkt_id, c.name  
   FROM cola_markets c  
   WHERE SDO_NN(c.shape,  sdo_geometry(2001, NULL, 
      sdo_point_type(10,7,NULL), NULL,  NULL),  &#39;sdo_num_res=2&#39;) = &#39;TRUE&#39;; 
 
-- SDO_NN_DISTANCE ancillary operator
 
SELECT   /*+ INDEX(c cola_spatial_idx) */ 
   c.mkt_id, c.name, SDO_NN_DISTANCE(1) dist
   FROM cola_markets c  
   WHERE SDO_NN(c.shape,  sdo_geometry(2001, NULL, 
      sdo_point_type(10,7,NULL), NULL,  NULL),
      &#39;sdo_num_res=2&#39;, 1) = &#39;TRUE&#39; ORDER BY dist; 
 
-- SDO_WITHIN_DISTANCE operator (two examples)
 
SELECT c.name FROM cola_markets c WHERE SDO_WITHIN_DISTANCE(c.shape, 
  SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1,1003,3), 
    SDO_ORDINATE_ARRAY(4,6, 8,8)), 
  &#39;distance=10&#39;) = &#39;TRUE&#39;;  
 
-- What geometries are within a distance of 10 from a query window
-- (here, a rectangle with lower-left, upper-right coordinates 4,6, 8,8)?
-- But exclude geoms with MBRs with both sides &lt; 4.1, i.e., cola_c and cola_d.
 
SELECT c.name FROM cola_markets c WHERE SDO_WITHIN_DISTANCE(c.shape, 
  SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1,1003,3), 
    SDO_ORDINATE_ARRAY(4,6, 8,8)), 
  &#39;distance=10 min_resolution=4.1&#39;) = &#39;TRUE&#39;;  
 
-------------------------------------
-- Some ST_GEOMETRY member functions
-------------------------------------
 
SELECT c.shape.GET_WKB() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.GET_WKT() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_COORDDIM()
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_ISVALID() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_SRID() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_SRID(8307) 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_ISEMPTY() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_ENVELOPE() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_BOUNDARY() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_GEOMETRYTYPE() 
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_ISSIMPLE()
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_DIMENSION()
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_CONVEXHULL()
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_CENTROID()
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_GETTOLERANCE()
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
-- Some member functions that require a parameter
DECLARE
  cola_a_geom ST_GEOMETRY;
  cola_b_geom ST_GEOMETRY;
  cola_c_geom ST_GEOMETRY;
  cola_d_geom ST_GEOMETRY;
  returned_geom ST_GEOMETRY;
  returned_number NUMBER;
 
BEGIN
 
-- Populate geometry variables with cola market shapes.
SELECT c.shape INTO cola_a_geom FROM cola_markets c
  WHERE c.name = &#39;cola_a&#39;;
SELECT c.shape INTO cola_b_geom FROM cola_markets c
  WHERE c.name = &#39;cola_b&#39;;
SELECT c.shape INTO cola_c_geom FROM cola_markets c
  WHERE c.name = &#39;cola_c&#39;;
SELECT c.shape INTO cola_d_geom FROM cola_markets c
  WHERE c.name = &#39;cola_d&#39;;
 
SELECT c.shape.ST_EQUALS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Is cola_b equal to cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_SYMMETRICDIFFERENCE(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_DISTANCE(cola_d_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Distance between cola_b equal to cola_d: &#39; || returned_number);
 
SELECT c.shape.ST_INTERSECTS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b intersect cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_CROSS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b cross cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_DISJOINT(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Is cola_b disjoint with cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_TOUCH(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b touch cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_WITHIN(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Is cola_b within cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_OVERLAP(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b overlap cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_CONTAINS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b contain cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_INTERSECTION(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_DIFFERENCE(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_UNION(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_SYMDIFFERENCE(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
 
SELECT c.shape.ST_TOUCHES(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b touch cola_a?: &#39; || returned_number);
 
SELECT c.shape.ST_CROSSES(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = &#39;cola_b&#39;;
DBMS_OUTPUT.PUT_LINE(&#39;Does cola_b cross cola_a?: &#39; || returned_number);
 
END;
/
</pre></div>
<!-- class="example" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment142">
<tr>
<td class="cellalignment149">
<table class="cellalignment147">
<tr>
<td class="cellalignment146"><a href="sql-multimedia-type-support.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment146"><a href="st_xxx-functions-and-spatial-and-graph-counterparts.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment151">
<table class="cellalignment145">
<tr>
<td class="cellalignment146"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment146"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment146"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment146"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment146"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment146"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>