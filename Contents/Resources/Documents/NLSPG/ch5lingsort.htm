<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-78561"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Linguistic%20Sorting%20and%20Matching"></a><title>Linguistic Sorting and Matching</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="diacritic, canonical equivalence, supplementary characters, base letters, special combination letters, composed characters, special letters, expanding characters, linguistic sorts, accent-insensitive, case-insensitive, accent-insensitive linguistic sort, case-insensitive linguistic collation, case-sensitive linguistic collation, collation, case-sensitive, case-insensitive, accent, regular expressions, character range, character class, equivalence class, examples"/>
<meta name="dcterms.created" content="2017-01-18T01:25:48Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Globalization Support Guide"/>
<meta name="dcterms.identifier" content="E41669-12"/>
<meta name="dcterms.isVersionOf" content="NLSPG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="ch4datetime.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch6unicode.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41669-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-B0971B89-63EF-409B-B14A-459B8211E764"></a> <span id="PAGE" style="display:none;">9/20</span> <!-- End Header -->
<script>
//<![CDATA[
window.name='ch5lingsort'
//]]>
</script> <script>
    function footdisplay(footnum,footnote) {
    var msg = window.open('about:blank', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');
    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'); 
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" ><head><title>');
   
    msg.document.write('Footnote&amp;nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() {
        var height = msg.document.getElementById('footnote').offsetHeight;
        msg.resizeTo(598, height + 100);
    }
    , 100);
    msg.focus();
}
</script><noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript><a id="NLSPG041"></a><a id="NLSPG005"></a>
<h1 id="NLSPG-GUID-B0971B89-63EF-409B-B14A-459B8211E764" class="sect1"><span class="enumeration_chapter">5</span> Linguistic Sorting and Matching</h1>
<div>
<p>This chapter explains linguistic sorting and searching for strings in an Oracle Database environment. The process of determining the mutual ordering of strings (character values) is called a <a href="glossary.htm#GUID-4E1C7C38-97EF-41CF-92FF-A03CD6994C3B"><span class="xrefglossterm">collation</span></a>. For any two strings, the collation defines whether the strings are equal or whether one precedes the other in the sorting order. In the Oracle documentation, the term <a href="glossary.htm#GUID-A238AED7-B9C8-4DEC-AE5F-AA5A4B3412BF"><span class="xrefglossterm">sort</span></a> is often used in place of <span class="italic">collation</span>.</p>
<p>Determining equality is especially important when a set of strings, such as a table column, is searched for values that equal a specified search term or that match a search pattern. SQL operators and functions used in searching are <code>=</code>, <code>LIKE</code>, <code>REGEXP_LIKE</code>, <code>INSTR</code>, and <code>REGEXP_INSTR</code>. This chapter uses the term <span class="italic">matching</span> to mean determining the equality of entire strings using the equality operator <code>=</code> or determining the equality of substrings of a string when the string is matched against a pattern using <code>LIKE</code>, <code>REGEXP_LIKE</code> or <code>REGEXP_INSTR</code>. Note that Oracle Text provides advanced full-text searching capabilities for the Oracle Database.</p>
<p>The ordering of strings in a set is called <span class="italic">sorting</span>. For example, the <code>ORDER</code> <code>BY</code> clause uses collation to determine the ordering of strings to sort the query results, while PL/SQL uses collations to sort strings in associative arrays indexed by <code>VARCHAR2</code> values, and the functions <code>MIN</code>, <code>MAX</code>, <code>GREATEST</code>, and <code>LEAST</code> use collations to find the smallest or largest character value.</p>
<p>There are many possible collations that can be applied to strings to determine their ordering. Collations that take into consideration the standards and customs of spoken languages are called <a href="glossary.htm#GUID-5123B5FA-69E6-4E9E-B7DC-40E0D5C40AC5"><span class="xrefglossterm">linguistic collation</span></a>s. They order strings in the same way as dictionaries, phone directories, and other text lists written in a given language. In contrast, <a href="glossary.htm#GUID-B046AD18-4460-412C-B839-197303AC351D"><span class="xrefglossterm">binary collation</span></a> orders strings based on their binary representation (character encoding), treating each string as a simple sequences of bytes.</p>
<div class="infoboxnotealso" id="GUID-B0971B89-63EF-409B-B14A-459B8211E764__GUID-FD437094-88F1-4742-A143-391EB509CE8A">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink CCAPP" target="_blank" href="../CCAPP/toc.htm"><span class="italic">Oracle Text Application Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-84F2A594-E641-4436-A903-D5D5B4D7FFA9">Overview of Oracle Database Collation Capabilities</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-68633595-DC95-4393-A6B8-146AD05F5FDF">Using Binary Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-3D736236-BF98-4A4D-9D09-293AAA50A04E">Using Linguistic Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-C8379BCB-B175-40E3-8824-59C20F92C864">Linguistic Collation Features</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-7FF18E5A-4ED6-4BDC-8059-886E9BD85E8F">Case-Insensitive and Accent-Insensitive Linguistic Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-85328A92-CB08-4467-9F02-42E9EF9D41B7">Performing Linguistic Comparisons</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-924966AE-16EA-4D0D-A3C5-5AC4342F4FCF">Using Linguistic Indexes</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-A5143269-5804-408C-8E57-F5730AE9DA4B">Searching Linguistic Strings</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-A7ABC638-4928-40F7-A252-6A1B84482BD5">SQL Regular Expressions in a Multilingual Environment</a></p>
</li>
</ul>
</div>
<a id="NLSPG267"></a>
<div class="props_rev_3"><a id="GUID-84F2A594-E641-4436-A903-D5D5B4D7FFA9"></a>
<h2 id="NLSPG-GUID-84F2A594-E641-4436-A903-D5D5B4D7FFA9" class="sect2">Overview of Oracle Database Collation Capabilities</h2>
<div>
<p>Different languages have different collations. In addition, different cultures or countries that use the same alphabets may sort words differently. For example, in Danish, &AElig; is after <code>Z</code>, while <code>Y</code> and <code>&Uuml;</code> are considered to be variants of the same letter.</p>
<p>Collation can be <a id="d40716e299" class="indexterm-anchor"></a>case-sensitive or case-insensitive. <span class="bold">Case</span> refers to the condition of being uppercase or lowercase. For example, in a Latin alphabet, <code>A</code> is the uppercase glyph for <code>a</code>, the lowercase glyph.</p>
<p>Collation can ignore or consider diacritics. A <span class="bold">diacritic</span> is a mark near or through a character or combination of characters that indicates a different sound than the sound of the character without the diacritic. For example, the cedilla (<code>,</code>) in <code>fa&ccedil;ade</code> is a diacritic. It changes the sound of <code>c</code>.</p>
<p>Collation order can be phonetic or it can be based on the appearance of the character. For example, collation can be based on the number of strokes in East Asian ideographs. Another common collation issue is combining letters into a single character. For example, in traditional Spanish, <code>ch</code> is a distinct character that comes after <code>c</code>, which means that the correct order is: cerveza, colorado, cheremoya. This means that the letter <code>c</code> cannot be sorted until Oracle Database has checked whether the next letter is an <code>h</code>.</p>
<p>Oracle Database provides the following types of collation:</p>
<ul style="list-style-type: disc;">
<li>
<p>Binary</p>
</li>
<li>
<p>Monolingual</p>
</li>
<li>
<p>Multilingual</p>
</li>
<li>
<p>Unicode Collation Algorithm (UCA)</p>
</li>
</ul>
<p>While monolingual collation achieves a linguistically correct order for a single language, multilingual collation and UCA collation are designed to handle many languages at the same time. Furthermore, UCA collation conforms to the Unicode Collation Algorithm (UCA) that is a Unicode standard and is fully compatible with the international collation standard ISO 14651. The UCA standard provides a complete linguistic ordering for all characters in Unicode, hence all the languages around the world. With wide deployment of Unicode application, UCA collation is best suited for sorting multilingual data.</p>
</div>
</div>
<a id="NLSPG268"></a>
<div class="props_rev_3"><a id="GUID-68633595-DC95-4393-A6B8-146AD05F5FDF"></a>
<h2 id="NLSPG-GUID-68633595-DC95-4393-A6B8-146AD05F5FDF" class="sect2">Using Binary Collation</h2>
<div>
<p>One way to sort character data <a id="d40716e430" class="indexterm-anchor"></a>is based on the numeric values of the characters defined by the character encoding scheme. This is called a <span class="bold">binary</span> <span class="bold">collation</span>. Binary collation is the fastest type of sort. It produces reasonable results for the English alphabet because the ASCII and EBCDIC standards define the letters A to Z in ascending numeric value.</p>
<div class="infobox-note" id="GUID-68633595-DC95-4393-A6B8-146AD05F5FDF__GUID-ABE9603C-620A-4D72-A610-E90A948E0595">
<p class="notep1">Note:</p>
<p>In the ASCII standard, all uppercase letters appear before any lowercase letters. In the EBCDIC standard, the opposite is true: all lowercase letters appear before any uppercase letters.</p>
</div>
<p>When characters used in other languages are present, a binary collation usually does not produce reasonable results. For example, an ascending <code>ORDER</code> <code>BY</code> query returns the character strings <code>ABC</code>, <code>ABZ</code>, <code>BCD</code>, <code>&Auml;BC</code>, when <code>&Auml;</code> has a higher numeric value than <code>B</code> in the character encoding scheme. A binary collation is not usually linguistically meaningful for Asian languages that use ideographic characters.</p>
</div>
</div>
<a id="NLSPG269"></a>
<div class="props_rev_3"><a id="GUID-3D736236-BF98-4A4D-9D09-293AAA50A04E"></a>
<h2 id="NLSPG-GUID-3D736236-BF98-4A4D-9D09-293AAA50A04E" class="sect2">Using Linguistic Collation</h2>
<div>
<p>To produce a collation <a id="d40716e544" class="indexterm-anchor"></a>sequence that matches the alphabetic sequence of characters, another sorting technique must be used that sorts characters independently of their numeric values in the character encoding scheme. This technique is called a <span class="bold">linguistic</span> <span class="bold">collation</span>. A linguistic collation operates by replacing characters with numeric values that reflect each character&#39;s proper linguistic order.</p>
<p>This section includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D">Monolingual Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-6EF8FD2D-6E76-4E00-9FDF-23D09C542F6D">Multilingual Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-6ADFC7B7-5857-4962-BED9-E1975CEDD0C8">UCA Collation</a></p>
</li>
</ul>
</div>
<a id="NLSPG768"></a><a id="NLSPG270"></a>
<div class="props_rev_3"><a id="GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D"></a>
<h3 id="NLSPG-GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D" class="sect3">Monolingual Collation</h3>
<div>
<p>Oracle Database <a id="d40716e648" class="indexterm-anchor"></a>compares character strings in two steps for monolingual collation. The first step compares the major value of the entire string from a table of major values. Usually, letters with the same appearance have the same major value. The second step compares the minor value from a table of minor values. The major and minor values are defined by Oracle Database. Oracle Database defines letters with diacritic and case differences as having the same major value but different minor values.</p>
<p>Each major table entry contains the <span class="bold">Unicode code point</span> and major value for a character. The Unicode code point is a 16-bit binary value that represents a character.</p>
<p><a href="ch5lingsort.htm#GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D__g1010269" title="This table is described in the preceding text">Table 5-1</a> illustrates sample values for sorting <code>a</code>, <code>A</code>, <code>&auml;</code>, <code>&Auml;</code>, and <code>b</code>.</p>
<div class="tblformal" id="GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D__g1010269">
<p class="titleintable">Table 5-1 Sample Glyphs and Their Major and Minor Sort Values</p>
<table class="cellalignment2377" title="Sample Glyphs and Their Major and Minor Sort Values " summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2390" id="d40716e690">Glyph</th>
<th class="cellalignment2449" id="d40716e693">Major Value</th>
<th class="cellalignment2449" id="d40716e696">Minor Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2392" id="d40716e701" headers="d40716e690">
<p>a</p>
</td>
<td class="cellalignment2451" headers="d40716e701 d40716e693">
<p>15</p>
</td>
<td class="cellalignment2451" headers="d40716e701 d40716e696">
<p>5</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2392" id="d40716e711" headers="d40716e690">
<p>A</p>
</td>
<td class="cellalignment2451" headers="d40716e711 d40716e693">
<p>15</p>
</td>
<td class="cellalignment2451" headers="d40716e711 d40716e696">
<p>10</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2392" id="d40716e721" headers="d40716e690">
<p>&auml;</p>
</td>
<td class="cellalignment2451" headers="d40716e721 d40716e693">
<p>15</p>
</td>
<td class="cellalignment2451" headers="d40716e721 d40716e696">
<p>15</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2392" id="d40716e731" headers="d40716e690">
<p>&Auml;</p>
</td>
<td class="cellalignment2451" headers="d40716e731 d40716e693">
<p>15</p>
</td>
<td class="cellalignment2451" headers="d40716e731 d40716e696">
<p>20</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2392" id="d40716e741" headers="d40716e690">
<p>b</p>
</td>
<td class="cellalignment2451" headers="d40716e741 d40716e693">
<p>20</p>
</td>
<td class="cellalignment2451" headers="d40716e741 d40716e696">
<p>5</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note" id="GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D__GUID-8A528F49-49F2-42E8-9339-060AB9135892">
<p class="notep1">Note:</p>
<p>Monolingual collation is not available for non-Unicode multibyte database character sets. If a monolingual collation is specified when the database character set is non-Unicode multibyte, then the default sort order is the binary sort order of the database character set. One exception is <code>UNICODE_BINARY</code>. This collation is available for all character sets.</p>
</div>
<div class="infoboxnotealso" id="GUID-2824671D-BFAD-4441-9C82-B7AB54945B1D__GUID-DD5616C3-8FB0-4EC8-8732-CC854141D30C">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch6unicode.htm#GUID-FFF1D9C8-1465-4F0E-A84D-7776E7DB57CA">What is the Unicode Standard?</a>&#34;</span></p>
</div>
</div>
</div>
<a id="NLSPG271"></a>
<div class="props_rev_3"><a id="GUID-6EF8FD2D-6E76-4E00-9FDF-23D09C542F6D"></a>
<h3 id="NLSPG-GUID-6EF8FD2D-6E76-4E00-9FDF-23D09C542F6D" class="sect3">Multilingual Collation</h3>
<div>
<p>Oracle Database provides <a id="d40716e842" class="indexterm-anchor"></a>multilingual collation so that you can sort data in more than one language in one sort. This is useful for regions or languages that have complex sorting rules and for multilingual databases. As of Oracle Database 12<span class="italic">c</span>, Oracle Database supports all of the collations defined by previous releases.</p>
<p>For Asian language data or multilingual data, Oracle Database provides a sorting mechanism based on the ISO 14651 standard. For example, Chinese characters can be ordered by the number of strokes, PinYin, or radicals.</p>
<p>In addition, multilingual collation can handle canonical equivalence and supplementary characters. <span class="bold">Canonical equivalence</span> is a basic equivalence between characters or sequences of characters. For example, <code>&ccedil;</code> is equivalent to the combination of <code>c</code> and <code>,</code>. <span class="bold">Supplementary characters</span> are user-defined characters or predefined characters in Unicode that require two code points within a specific code range. You can define up to 1.1 million code points in one multilingual sort.</p>
<p>For example, Oracle Database supports a monolingual French sort (<code>FRENCH</code>), but you can specify a multilingual French collation (<code>FRENCH_M</code>). <code>_M</code> represents the ISO 14651 standard for multilingual sorting. The sorting order is based on the <code>GENERIC_M</code> sorting order and can sort diacritical marks from right to left. Multilingual linguistic sort is usually used if the tables contain multilingual data. If the tables contain only French, then a monolingual French sort might have better performance because it uses less memory. It uses less memory because fewer characters are defined in a monolingual French sort than in a multilingual French sort. There is a trade-off between the scope and the performance of a sort.</p>
<div class="infoboxnotealso" id="GUID-6EF8FD2D-6E76-4E00-9FDF-23D09C542F6D__GUID-615A5C47-8548-40FE-9276-00F547644C55">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-B1CD101D-EEF7-4D77-A53E-9C34B5258B26">Canonical Equivalence</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="ch6unicode.htm#GUID-EF49F9DF-CF5D-466A-8383-F5809F356DBE">Code Points and Supplementary Characters</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
<a id="NLSPG272"></a>
<div class="props_rev_3"><a id="GUID-F64D6578-0B14-4FA2-B643-58EAFC9A5330"></a>
<h4 id="NLSPG-GUID-F64D6578-0B14-4FA2-B643-58EAFC9A5330" class="sect4">Multilingual Collation Levels</h4>
<div>
<p>Oracle Database evaluates multilingual collation at three levels of precision:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-76B5FB37-1FD1-4E52-B45E-322E7CF34DD6">Primary Level Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-3C5D3D15-A891-4449-A946-9A5283D07561">Secondary Level Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-09D52D47-8E03-4AEE-BE19-ED41B0ABD3A4">Tertiary Level Collation</a></p>
</li>
</ul>
</div>
<a id="NLSPG273"></a>
<div class="props_rev_3"><a id="GUID-76B5FB37-1FD1-4E52-B45E-322E7CF34DD6"></a>
<h5 id="NLSPG-GUID-76B5FB37-1FD1-4E52-B45E-322E7CF34DD6" class="sect5">Primary Level Collation</h5>
<div>
<p>A <a id="d40716e1065" class="indexterm-anchor"></a><a id="d40716e1067" class="indexterm-anchor"></a>primary level collation distinguishes between <span class="bold">base</span> <span class="bold">letters</span>, such as the difference between characters <code>a</code> and <code>b</code>. It is up to individual locales to define whether <code>a</code> is before <code>b</code>, <code>b</code> is before <code>a</code>, or if they are equal. The binary representation of the characters is completely irrelevant. If a character is an ignorable character, then it is assigned a primary level <span class="bold">order</span> (or weight) of zero, which means it is ignored at the primary level. Characters that are ignorable on other levels are given an order of zero at those levels.</p>
<p>For example, at the primary level, all variations of <code>bat</code> come before all variations of <code>bet</code>. The variations of <code>bat</code> can appear in any order, and the variations of <code>bet</code> can appear in any order:</p>
<pre dir="ltr">Bat
bat
BAT
BET
Bet
bet
</pre>
<div class="infoboxnotealso" id="GUID-76B5FB37-1FD1-4E52-B45E-322E7CF34DD6__GUID-F99A6F5F-EDAE-4824-AB2B-B645AAA79548">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-4801B9FC-976F-458E-B74F-F39817B79560">Ignorable Characters</a>&#34;</span></p>
</div>
</div>
</div>
<a id="NLSPG274"></a>
<div class="props_rev_3"><a id="GUID-3C5D3D15-A891-4449-A946-9A5283D07561"></a>
<h5 id="NLSPG-GUID-3C5D3D15-A891-4449-A946-9A5283D07561" class="sect5">Secondary Level Collation</h5>
<div>
<p>A <a id="d40716e1199" class="indexterm-anchor"></a>secondary level collation distinguishes between base letters (the primary level collation) before distinguishing between diacritics on a given base letter. For example, the character <code>&Auml;</code> differs from the character <code>A</code> only because it has a diacritic. Thus, <code>&Auml;</code> and <code>A</code> are the same on the primary level because they have the same base letter (<code>A</code>) but differ on the secondary level.</p>
<p>The following list has been sorted on the primary level (<code>resume</code> comes before <code>resumes</code>) and on the secondary level (strings without diacritics come before strings with diacritics):</p>
<pre dir="ltr">resume
r&eacute;sum&eacute;
R&eacute;sum&eacute;
Resumes
resumes
r&eacute;sum&eacute;s
</pre></div>
</div>
<a id="NLSPG275"></a>
<div class="props_rev_3"><a id="GUID-09D52D47-8E03-4AEE-BE19-ED41B0ABD3A4"></a>
<h5 id="NLSPG-GUID-09D52D47-8E03-4AEE-BE19-ED41B0ABD3A4" class="sect5">Tertiary Level Collation</h5>
<div>
<p>A <a id="d40716e1303" class="indexterm-anchor"></a>tertiary level collation distinguishes between base letters (primary level collation), diacritics (secondary level collation), and case (upper case and lower case). It can also include special characters such as <code>+</code>, <code>-</code>, and <code>*</code><span class="italic"><span class="bold">.</span></span></p>
<p>The following are examples of tertiary level collations:</p>
<ul style="list-style-type: disc;">
<li>
<p>Characters <code>a</code> and <code>A</code> are equal on the primary and secondary levels but different on the tertiary level because they have different cases.</p>
</li>
<li>
<p>Characters <code>&auml;</code> and <code>A</code> are equal on the primary level and different on the secondary and tertiary levels.</p>
</li>
<li>
<p>The primary and secondary level orders for the dash character <code>-</code> is 0. That is, it is ignored on the primary and secondary levels. If a dash is compared with another character whose primary level weight is nonzero, for example, <code>u</code>, then no result for the primary level is available because <code>u</code> is not compared with anything. In this case, Oracle Database finds a difference between <code>-</code> and <code>u</code> only at the tertiary level.</p>
</li>
</ul>
<p>The following list has been sorted on the primary level (<code>resume</code> comes before <code>resumes</code>) and on the secondary level (strings without diacritics come before strings with diacritics) and on the tertiary level (lower case comes before upper case):</p>
<pre dir="ltr">resume
Resume
r&eacute;sum&eacute;
R&eacute;sum&eacute;
resumes
Resumes
r&eacute;sum&eacute;s
R&eacute;sum&eacute;s
</pre></div>
</div>
</div>
</div>
<a id="NLSPG1005"></a>
<div class="props_rev_3"><a id="GUID-6ADFC7B7-5857-4962-BED9-E1975CEDD0C8"></a>
<h3 id="NLSPG-GUID-6ADFC7B7-5857-4962-BED9-E1975CEDD0C8" class="sect3">UCA Collation</h3>
<div>
<p>The Unicode <a id="d40716e1441" class="indexterm-anchor"></a>Collation Algorithm (UCA) is a Unicode standard that is fully compatible with the international collation <a id="d40716e1446" class="indexterm-anchor"></a>standard ISO 14651. The UCA defines a Default Unicode Collation Element Table (DUCET) that provides a reasonable default ordering for all languages that are not tailored. To achieve the correct ordering for a particular language, DUCET can be tailored to meet the linguistic requirements for that language. There are tailorings of DUCET for various languages provided in the Unicode Common Locale Data Repository. For details of the UCA and related terminologies, see the Unicode Collation Algorithm at <a href="http://www.unicode.org" target="_blank"><code>http://www.unicode.org</code></a>.</p>
<p>Oracle Database provides UCA collation that fully conforms to the UCA 6.2.0 as of Oracle Database 12<span class="italic">c</span> (12.1.0.2). In addition to the collation based on DUCET, it provides tailored collations for a number of commonly used languages. For example, you can specify the UCA collation, <code>UCA0620_SCHINESE</code>, to sort multilingual data containing Simplified Chinese. The collation will make Simplified Chinese data appear in the PinYin order.</p>
<p>For sorting multilingual data, Oracle Corporation recommends UCA collation.</p>
</div>
<a id="NLSPG1006"></a>
<div class="props_rev_3"><a id="GUID-20978448-BBDE-46F9-AE7C-5F03862D32C1"></a>
<h4 id="NLSPG-GUID-20978448-BBDE-46F9-AE7C-5F03862D32C1" class="sect4">UCA Comparison Levels</h4>
<div>
<p>Similar to multilingual collation, UCA collations employ a multilevel comparison algorithm to evaluate characters. This can go up to four levels of comparison:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-B79FB734-CF41-44E7-9FEE-3CE38F458F1E">Primary Level</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-2402E509-F577-445F-91D2-B35592D7DA7D">Secondary Level</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-9478506B-A183-4522-9F85-EFC60F336887">Tertiary Level</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-4437B468-3F12-4D63-961F-FD2DBE2AA707">Quaternary Level</a></p>
</li>
</ul>
</div>
<a id="NLSPG1007"></a>
<div class="props_rev_3"><a id="GUID-B79FB734-CF41-44E7-9FEE-3CE38F458F1E"></a>
<h5 id="NLSPG-GUID-B79FB734-CF41-44E7-9FEE-3CE38F458F1E" class="sect5">Primary Level</h5>
<div>
<p>The primary level is used to distinguish between base letters, which is similar to the comparison used in the primary level collation of the multilingual collation.</p>
<div class="infoboxnotealso" id="GUID-B79FB734-CF41-44E7-9FEE-3CE38F458F1E__GUID-3879BE5C-FBCC-464F-9ADC-926AAA4C1419">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-76B5FB37-1FD1-4E52-B45E-322E7CF34DD6">Primary Level Collation</a>&#34;</span> for examples of base letter differences</p>
</div>
</div>
</div>
<a id="NLSPG1008"></a>
<div class="props_rev_3"><a id="GUID-2402E509-F577-445F-91D2-B35592D7DA7D"></a>
<h5 id="NLSPG-GUID-2402E509-F577-445F-91D2-B35592D7DA7D" class="sect5">Secondary Level</h5>
<div>
<p>The secondary level is used to distinguish between diacritics if base letters are the same, which is similar to what is used in the secondary level collation of the multilingual collation to distinguish between diacritics.</p>
<div class="infoboxnotealso" id="GUID-2402E509-F577-445F-91D2-B35592D7DA7D__GUID-46D673AA-CBED-4232-9A04-49572AA47BE4">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-3C5D3D15-A891-4449-A946-9A5283D07561">Secondary Level Collation</a>&#34;</span> for examples of diacritic differences</p>
</div>
</div>
</div>
<a id="NLSPG1009"></a>
<div class="props_rev_3"><a id="GUID-9478506B-A183-4522-9F85-EFC60F336887"></a>
<h5 id="NLSPG-GUID-9478506B-A183-4522-9F85-EFC60F336887" class="sect5">Tertiary Level</h5>
<div>
<p>The tertiary level is used to distinguish between cases on a given base letter with the same diacritic, which is similar to what is used in the tertiary level collation of the multilingual collation to distinguish between cases. Moreover, UCA DUCET collation treats punctuations with primary or quaternary significance based on how variable characters are weighted, which is different from the tertiary level collation of the multilingual collation that treat punctuations with tertiary level of significance.</p>
<div class="infoboxnotealso" id="GUID-9478506B-A183-4522-9F85-EFC60F336887__GUID-4E14250D-E268-40D5-A857-927733EDC869">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-09D52D47-8E03-4AEE-BE19-ED41B0ABD3A4">Tertiary Level Collation</a>&#34;</span> for examples of characters with case differences</p>
</div>
</div>
</div>
<a id="NLSPG1011"></a><a id="NLSPG1010"></a>
<div class="props_rev_3"><a id="GUID-4437B468-3F12-4D63-961F-FD2DBE2AA707"></a>
<h5 id="NLSPG-GUID-4437B468-3F12-4D63-961F-FD2DBE2AA707" class="sect5">Quaternary Level</h5>
<div>
<p>The quaternary level is u<a id="d40716e1878" class="indexterm-anchor"></a><a id="d40716e1880" class="indexterm-anchor"></a><a id="d40716e1882" class="indexterm-anchor"></a>sed to distinguish variable characters from other characters if variable characters are weighted as shifted. It is also used to distinguish Hiragana from Katakana with the same base and case. An example is illustrated in <a href="ch5lingsort.htm#GUID-4437B468-3F12-4D63-961F-FD2DBE2AA707__CHDFIBDF">Figure 5-1</a>.</p>
<div class="figure" id="GUID-4437B468-3F12-4D63-961F-FD2DBE2AA707__CHDFIBDF">
<p class="titleinfigure">Figure 5-1 Hiragana and Katakana Collation</p>
<img width="454" height="76" src="img/GUID-9551AB08-1A6C-491C-AA29-72278461FF7A-default.png" alt="Description of Figure 5-1 follows" title="Description of Figure 5-1 follows"/><br/>
<a href="img_text/GUID-9551AB08-1A6C-491C-AA29-72278461FF7A-print.htm">Description of &#34;Figure 5-1 Hiragana and Katakana Collation&#34;</a></div>
<!-- class="figure" -->
<div class="infoboxnotealso" id="GUID-4437B468-3F12-4D63-961F-FD2DBE2AA707__GUID-4B9E580D-F0FF-4BA6-AF5B-958FB945B9C6">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268">UCA Collation Parameters</a>&#34;</span></p>
</div>
</div>
</div>
<a id="NLSPG1013"></a><a id="NLSPG1012"></a>
<div class="props_rev_3"><a id="GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268"></a>
<h5 id="NLSPG-GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268" class="sect5">UCA Collation Parameters</h5>
<div>
<div class="section">
<p><a href="ch5lingsort.htm#GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268__CHDBFEFB" title="UCA Collation Parameters">Table 5-2</a> illustrates the collation parameters and options that are supported in UCA collations in Oracle Database 12<span class="italic">c</span>.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268__CHDBFEFB">
<p class="titleintable">Table 5-2 UCA Collation Parameters</p>
<table class="cellalignment2377" title="UCA Collation Parameters" summary="UCA Collation Parameters">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2416" id="d40716e1994">Attribute</th>
<th class="cellalignment2449" id="d40716e1997">Options</th>
<th class="cellalignment2457" id="d40716e2000">Collation Modifier</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2005" headers="d40716e1994">
<p><code>strength</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2005 d40716e1997">
<p>primary</p>
<p>secondary</p>
<p>tertiary</p>
<p>quaternary</p>
</td>
<td class="cellalignment2459" headers="d40716e2005 d40716e2000">
<p><code>_AI</code> or <code>_S1</code></p>
<p><code>_CI</code> or <code>_S2</code></p>
<p><code>_S3</code></p>
<p><code>_S4</code><a id="fn_1" href="#fn_1" onclick="footdisplay(1,&#34;_S4: Applicable only when alternate is shifted &#34;)"><sup>Foot&nbsp;1</sup></a></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2043" headers="d40716e1994">
<p><code>alternate</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2043 d40716e1997">
<p>non-ignorable</p>
<p>shifted</p>
<p>blanked</p>
</td>
<td class="cellalignment2459" headers="d40716e2043 d40716e2000">
<p><code>_VN</code></p>
<p><code>_VS</code></p>
<p><code>_VB</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2065" headers="d40716e1994">
<p><code>backwards</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2065 d40716e1997">
<p>on</p>
<p>off</p>
</td>
<td class="cellalignment2459" headers="d40716e2065 d40716e2000">
<p><code>_BY</code></p>
<p><code>_BN</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2082" headers="d40716e1994">
<p><code>normalization</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2082 d40716e1997">
<p>on</p>
</td>
<td class="cellalignment2459" headers="d40716e2082 d40716e2000">
<p><code>_NY</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2094" headers="d40716e1994">
<p><code>caseLevel</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2094 d40716e1997">
<p>off</p>
</td>
<td class="cellalignment2459" headers="d40716e2094 d40716e2000">
<p><code>_EN</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2106" headers="d40716e1994">
<p><code>caseFirst</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2106 d40716e1997">
<p>upper</p>
<p>off</p>
</td>
<td class="cellalignment2459" headers="d40716e2106 d40716e2000">
<p><code>_FU</code><a id="fn_2" href="#fn_2" onclick="footdisplay(2,&#34;_FU: Only valid for Danish &#34;)"><sup>Foot&nbsp;2</sup></a></p>
<p><code>_FN</code><a id="fn_3" href="#fn_3" onclick="footdisplay(3,&#34;_FN: Only valid for other languages &#34;)"><sup>Foot&nbsp;3</sup></a></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2133" headers="d40716e1994">
<p><code>hiraganaQuaternary</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2133 d40716e1997">
<p>on</p>
<p>off</p>
</td>
<td class="cellalignment2459" headers="d40716e2133 d40716e2000">
<p><code>_HY</code></p>
<p><code>_HN</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2150" headers="d40716e1994">
<p><code>numeric</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2150 d40716e1997">
<p>off</p>
</td>
<td class="cellalignment2459" headers="d40716e2150 d40716e2000">
<p><code>_DN</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2418" id="d40716e2162" headers="d40716e1994">
<p><code>match-style</code></p>
</td>
<td class="cellalignment2451" headers="d40716e2162 d40716e1997">
<p>minimal</p>
</td>
<td class="cellalignment2459" headers="d40716e2162 d40716e2000">
<p><code>_MN</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1</sup></p>
<p><code>_S4</code>: Applicable only when alternate is shifted</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2</sup></p>
<p><code>_FU</code>: Only valid for Danish</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;3</sup></p>
<p><code>_FN</code>: Only valid for other languages</p>
<div class="section">
<p>The parameter <code>strength</code> represents UCA comparison level (see <span class="q">&#34;<a href="ch5lingsort.htm#GUID-20978448-BBDE-46F9-AE7C-5F03862D32C1">UCA Comparison Levels</a>&#34;</span>). The parameter <code>alternate</code> controls how variable characters are weighted. The parameter <code>backwards</code> controls if diacritics are to be sorted backward. Users can configure these three UCA parameters using the options listed in <a href="ch5lingsort.htm#GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268__CHDBFEFB" title="UCA Collation Parameters">Table 5-2</a>. The options for the other parameters listed in <a href="ch5lingsort.htm#GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268__CHDBFEFB" title="UCA Collation Parameters">Table 5-2</a> are currently fixed based on tailored languages and not configurable as of Oracle Database 12<span class="italic">c</span>.</p>
<p>For a complete description of UCA collation parameters and options, see the Unicode Collation Algorithm standard at: <a href="http://www.unicode.org" target="_blank"><code>http://www.unicode.org</code></a>.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
</div>
<a id="NLSPG276"></a>
<div class="props_rev_3"><a id="GUID-C8379BCB-B175-40E3-8824-59C20F92C864"></a>
<h2 id="NLSPG-GUID-C8379BCB-B175-40E3-8824-59C20F92C864" class="sect2">Linguistic Collation Features</h2>
<div>
<p>This section contains information about different features that a linguistic collation can have:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-5C93ABE8-13D6-4F34-8855-B416BB810851">Base Letters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-4801B9FC-976F-458E-B74F-F39817B79560">Ignorable Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-5E5D577B-FEA8-4056-BDBA-CD86197D6944">Contracting Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-C9FB8A02-7B65-4922-8902-5722CB71957C">Expanding Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-486E0007-A760-4794-B910-FA0FF56DAE04">Context-Sensitive Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-B1CD101D-EEF7-4D77-A53E-9C34B5258B26">Canonical Equivalence</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-6175C023-2157-4EEF-ABAE-B47C4E307434">Reverse Secondary Sorting</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-1BED8983-8D48-45DB-9F03-939457C5A654">Character Rearrangement for Thai and Laotian Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-5CF60951-8D3A-480E-B68B-6CF7C5EBEE4E">Special Letters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-058D3AF4-DAED-4BC5-A048-98CA01E22CB8">Special Combination Letters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-911BCCDC-6FA9-4B5E-B76E-C7D05B969E26">Special Uppercase Letters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-9E1B89DF-1E19-4660-9D5C-A27D628DDD16">Special Lowercase Letters</a></p>
</li>
</ul>
<p>You can customize linguistic collations to include the desired characteristics.</p>
<div class="infoboxnotealso" id="GUID-C8379BCB-B175-40E3-8824-59C20F92C864__GUID-CFD6167B-FBD2-45D9-95B3-FCF97960B1C7">
<p class="notep1">See Also:</p>
<p><a href="ch12custlocale.htm#GUID-ED5E5917-15CD-4075-BBA8-BEE69A162A19">Customizing Locale Data</a></p>
</div>
</div>
<a id="NLSPG277"></a>
<div class="props_rev_3"><a id="GUID-5C93ABE8-13D6-4F34-8855-B416BB810851"></a>
<h3 id="NLSPG-GUID-5C93ABE8-13D6-4F34-8855-B416BB810851" class="sect3">Base Letters</h3>
<div>
<p>Base letters are defined in a base letter table, which maps each letter to its base letter. For example, <code>a</code>, <code>A</code>, <code>&auml;</code>, and <code>&Auml;</code> all map to <code>a</code>, which is the <span class="bold">base</span> <span class="bold">letter</span>. This concept is particularly relevant for working with Oracle Text.</p>
<div class="infoboxnotealso" id="GUID-5C93ABE8-13D6-4F34-8855-B416BB810851__GUID-AD258577-C711-440B-9CAD-8BC59AB92175">
<p class="notep1">See Also:</p>
<p><a class="olink CCREF2211" target="_blank" href="../CCREF/cspell.htm#CCREF2211"><span class="italic">Oracle Text Reference</span></a></p>
</div>
</div>
</div>
<a id="NLSPG278"></a>
<div class="props_rev_3"><a id="GUID-4801B9FC-976F-458E-B74F-F39817B79560"></a>
<h3 id="NLSPG-GUID-4801B9FC-976F-458E-B74F-F39817B79560" class="sect3">Ignorable Characters</h3>
<div>
<p>In multilingual collation and UCA collation, certain characters may be treated as ignorable<a id="d40716e2534" class="indexterm-anchor"></a>. <span class="bold">Ignorable</span> <span class="bold">characters</span> are skipped, that is, treated as non-existent, when two character values (strings) containing such characters are compared in a sorting or matching operation. There are three kinds of ignorable characters: primary, secondary, and tertiary.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-47802AEA-B994-4A70-828F-41ECB84341FA">Primary Ignorable Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-92E6F5BE-036E-4454-88F5-D810EF7DC93C">Secondary Ignorable Characters</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-BDFDD195-6162-4976-8C5D-6A59B72251BE">Tertiary Ignorable Characters</a></p>
</li>
</ul>
</div>
<a id="NLSPG1014"></a>
<div class="props_rev_3"><a id="GUID-47802AEA-B994-4A70-828F-41ECB84341FA"></a>
<h4 id="NLSPG-GUID-47802AEA-B994-4A70-828F-41ECB84341FA" class="sect4">Primary Ignorable Characters</h4>
<div>
<p>Primary ignorable characters are ignored when the multilingual collation or UCA collation definition applied to the given comparison has the accent-insensitivity modifier <code>_AI,</code> for example, <code>GENERIC_M_AI</code> or <code>UCA0620_DUCET_AI</code>. Primary ignorable characters are comprised of diacritics (accents) from various alphabets (Latin, Cyrillic, Greek, Devanagari, Katakana, and so on) but also of decorating modifiers, such as an enclosing circle or enclosing square. These characters are non-spacing combining characters, which means they combine with the preceding character to form a complete accented or decorated character (&#34;non-spacing&#34; means that the character occupies the same character position on screen or paper as the preceding character). For example, the character &#34;Latin Small Letter e&#34; followed by the character &#34;Combining Grave Accent&#34; forms a single letter &#34;&egrave;&#34;, while the character &#34;Latin Capital Letter A&#34; followed by the &#34;Combining Enclosing Circle&#34; forms a single character &#34;(A)&#34;. Because non-spacing characters are defined as ignorable for accent-insensitive sorts, these sorts can treat, for example, <code>r&ocirc;le</code> as equal to <code>role</code>, <code>na&iuml;ve</code> as equal to <code>naive</code>, and <code>(A)(B)(C)</code> as equal to <code>ABC</code>.</p>
<p>Primary ignorable characters are called non-spacing characters when viewed in a multilingual collation definition in the Oracle Locale Builder utility.</p>
</div>
</div>
<a id="NLSPG1015"></a>
<div class="props_rev_3"><a id="GUID-92E6F5BE-036E-4454-88F5-D810EF7DC93C"></a>
<h4 id="NLSPG-GUID-92E6F5BE-036E-4454-88F5-D810EF7DC93C" class="sect4">Secondary Ignorable Characters</h4>
<div>
<p>Secondary ignorable characters are ignored when the applied definition has either the accent-insensitivity modifier <code>_AI</code> or the case-insensitivity modifier <code>_CI</code>.</p>
<p>In multilingual collation, secondary ignorable characters are comprised of punctuation characters, such as the space character, new line control codes, dashes, various quote forms, mathematical operators, dot, comma, exclamation mark, various bracket forms, and so on. In accent-insensitive (<code>_AI</code>) and case-insensitive (<code>_CI</code>) sorts, these punctuation characters are ignored so that <code>multi-lingual</code> can be treated as equal to <code>multilingual</code> and <code>e-mail</code> can be treated as equal to <code>email</code>.</p>
<p>Secondary ignorable characters are called punctuation characters when viewed in a multilingual collation definition in the Oracle Locale Builder utility.</p>
<p>There are no secondary ignorable characters defined in the UCA DUCET, however. Punctuations are treated as variable characters in the UCA.</p>
</div>
</div>
<a id="NLSPG1016"></a>
<div class="props_rev_3"><a id="GUID-BDFDD195-6162-4976-8C5D-6A59B72251BE"></a>
<h4 id="NLSPG-GUID-BDFDD195-6162-4976-8C5D-6A59B72251BE" class="sect4">Tertiary Ignorable Characters</h4>
<div>
<p>Tertiary ignorable characters are generally ignored in linguistic comparison. They are mainly comprised of control codes, format characters, variation selectors, and so on.</p>
<p>Primary and secondary ignorable characters are not ignored when a standard, case- and accent-sensitive sort is used. However, they have lower priority when determining the order of strings. For example, <code>multi-lingual</code> is sorted after <code>multilingual</code> in the <code>GENERIC_M</code> sort, but it is still sorted between <code>multidimensional</code> and <code>multinational</code>. The comparison <code>d &lt; l &lt; n</code> of the base letters has higher priority in determining the order than the presence of the secondary ignorable character HYPHEN (U+002D).</p>
<p>You can see the full list of non-spacing characters and punctuation characters in a multilingual collation definition when viewing the definition in the Oracle Locale Builder. Generally, neither punctuation characters nor non-spacing characters are included in monolingual collation definitions. In some monolingual collation definitions, the space character and the tabulator character may be included. The comparison algorithm automatically assigns a minor value to each undefined character. This makes punctuation characters non-ignorable but, as in the case of multilingual collations, considered with lower priority when determining the order of compared strings. The ordering among punctuation characters in monolingual collations is based on their Unicode code points and may not correspond to user expectations.</p>
<div class="infoboxnotealso" id="GUID-BDFDD195-6162-4976-8C5D-6A59B72251BE__GUID-B3F0442D-906B-422F-BDFC-EDDD5414BDE6">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-7FF18E5A-4ED6-4BDC-8059-886E9BD85E8F">Case-Insensitive and Accent-Insensitive Linguistic Collation</a>&#34;</span></p>
</div>
</div>
</div>
</div>
<a id="NLSPG1018"></a><a id="NLSPG1019"></a><a id="NLSPG1020"></a><a id="NLSPG1021"></a><a id="NLSPG1017"></a>
<div class="props_rev_3"><a id="GUID-5E5AC1FF-1E02-406B-82E1-94521D695C96"></a>
<h3 id="NLSPG-GUID-5E5AC1FF-1E02-406B-82E1-94521D695C96" class="sect3">Variable Characters and Variable Weighting</h3>
<div>
<p>There are characters defined with variable collation elements in the UCA. These characters are called variable characters and are comprised of white space characters, punctuations, and certain symbols.</p>
<p>Variable characters can be weighted differently in UCA collations to adjust the effect of these characters in a sorting or comparison, which is called variable weighting. The collation parameter, <code>alternate</code>, controls how it works. The following options on variable weighting are supported in UCA collations as of Oracle Database 12<span class="italic">c</span>:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>blanked</code></p>
<p>Variable characters are treated as ignorable characters. For example, SPACE (U+0020) is ignored in comparison.</p>
</li>
<li>
<p><code>non-ignorable</code></p>
<p>Variable characters are treated as if they were not ignorable characters. For example, SPACE (U+0020) is not ignored in comparison at primary level.</p>
</li>
<li>
<p><code>shifted</code></p>
<p>Variable characters are treated as ignorable characters on the primary, secondary and tertiary levels. In addition, a new quaternary level is used for all characters. The quaternary weight of a character depends on if the character is a variable, ignorable, or other. For example, SPACE (U+0020) is assigned a quaternary weight differently from A (U+0041) because SPACE is a variable character while A is neither a variable nor an ignorable character.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-5E5AC1FF-1E02-406B-82E1-94521D695C96__GUID-64DF51E7-0CE2-41EC-B176-5BD821A6792F">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-8D12ED0E-AEBE-43F6-8473-DF097F9A0268">UCA Collation Parameters</a>&#34;</span></p>
</div>
<div class="section">
<p class="subhead3">Examples of Variable Weighting</p>
<p>This section includes different examples of variable weighting.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-5E5AC1FF-1E02-406B-82E1-94521D695C96__GUID-30CDDD2C-69FF-4840-B231-F7E0CB5BCD53">
<p class="titleinexample">Example 5-1 UCA DUCET Order When Variable is Weighed as Blanked</p>
<p>The following list has been sorted using <code>UCA0620_DUCET_VB</code>:</p>
<pre dir="ltr">blackbird
Blackbird
Black-bird
Black bird
BlackBird
</pre>
<p><code>Blackbird</code>, <code>Black-bird</code>, and <code>Black</code> <code>bird</code> have the same collation weight because SPACE(U+0020) and HYPHEN(U+002D) are treated as ignorable characters. Selecting only the distinct entries illustrates this behavior (note that only <code>Blackbird</code> is shown in the result):</p>
<pre dir="ltr">blackbird
Blackbird
BlackBird
</pre>
<p><code>Blackbird</code>, <code>Black-bird</code>, and <code>Black</code> <code>bird</code> are sorted after <code>blackbird</code> due to case difference on the first letter B (U+0042), but before <code>BlackBird</code> due to case difference at the second <code>b</code> (U+0062).</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-5E5AC1FF-1E02-406B-82E1-94521D695C96__GUID-F7AB5430-419F-47E9-9034-F93B2C26E7D2">
<p class="titleinexample">Example 5-2 UCA DUCET Order When Variable is Weighed as Non-Ignorable</p>
<p>The following list has been sorted using <code>UCA0620_DUCET_VN</code>:</p>
<pre dir="ltr">Black bird
Black-bird
blackbird
Blackbird
BlackBird
</pre>
<p><code>Black</code> <code>bird</code> and <code>Black-bird</code> are sorted before <code>blackbird</code> because both SPACE (U+0020) and HYPHEN (U+002D) are not treated as ignorable characters but they are smaller than <code>b</code> (U+0062) at the primary level. <code>Black</code> <code>bird</code> is sorted before <code>Black-bird</code> because SPACE (U+0020) is small than HYPHEN (U+002D) at the primary level.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-5E5AC1FF-1E02-406B-82E1-94521D695C96__GUID-39F1C35D-3639-4D53-96ED-A049E0735860">
<p class="titleinexample">Example 5-3 UCA DUCET Order When Variable is Weighed as Shifted</p>
<p>The following list has been sorted using <code>UCA0620_DUCET</code>:</p>
<pre dir="ltr">blackbird
Black bird
Black-bird
Blackbird
BlackBird
</pre>
<p><code>blackbird</code> is sorted before <code>Black</code> <code>bird</code> and <code>Black-bird</code> because both SPACE (U+0020) and HYPHEN (U+002D) are ignored at the first three levels, and there is a case difference on the first letter <code>b</code> (U+0062). <code>Black-bird</code> is sorted before <code>Blackbird</code> is because HYPHEN (U+002D) has a small quaternary weight than the letter <code>b</code> (U+0062) in <code>Blackbird</code>.</p>
</div>
<!-- class="example" --></div>
</div>
<a id="NLSPG279"></a>
<div class="props_rev_3"><a id="GUID-5E5D577B-FEA8-4056-BDBA-CD86197D6944"></a>
<h3 id="NLSPG-GUID-5E5D577B-FEA8-4056-BDBA-CD86197D6944" class="sect3">Contracting Characters</h3>
<div>
<p>Collation elements usually consist of a single character, but in some locales, two or more characters in a character <a id="d40716e3195" class="indexterm-anchor"></a><a id="d40716e3197" class="indexterm-anchor"></a>string must be considered as a single collation element during sorting. For example, in traditional Spanish, the string <code>ch</code> is composed of two characters. These characters are called <span class="bold">contracting</span> <span class="bold">characters</span> in multilingual collation and <span class="bold">special</span> <span class="bold">combination</span> <span class="bold">letters</span> in monolingual collation.</p>
<p>Do not confuse a <span class="bold">composed character</span> with a contracting character. A composed character like <code>&aacute;</code> can be decomposed into <code>a</code> and <code>&#39;</code>, each with their own encoding. The difference between a composed character and a contracting character is that a composed character can be displayed as a single character on a terminal, while a contracting character is used only for sorting, and its component characters must be rendered separately.</p>
</div>
</div>
<a id="NLSPG280"></a>
<div class="props_rev_3"><a id="GUID-C9FB8A02-7B65-4922-8902-5722CB71957C"></a>
<h3 id="NLSPG-GUID-C9FB8A02-7B65-4922-8902-5722CB71957C" class="sect3">Expanding Characters</h3>
<div>
<p>In some locales, certain charact<a id="d40716e3313" class="indexterm-anchor"></a>ers must be sorted as if they were character strings. An example is the German character <code>&szlig;</code> (sharp s). It is sorted exactly the same as the string <code>SS</code>. Another example is that <code>&ouml;</code> sorts as if it were <code>oe</code>, after <code>od</code> and before <code>of</code>. These characters are known as <span class="bold">expanding</span> <span class="bold">characters</span> in multilingual collation and <span class="bold">special</span> <span class="bold">letters</span> in monolingual collation. Just as with contracting characters, the replacement string for an expanding character is meaningful only for sorting.</p>
</div>
</div>
<a id="NLSPG281"></a>
<div class="props_rev_3"><a id="GUID-486E0007-A760-4794-B910-FA0FF56DAE04"></a>
<h3 id="NLSPG-GUID-486E0007-A760-4794-B910-FA0FF56DAE04" class="sect3">Context-Sensitive Characters</h3>
<div>
<p>In Japanese, a prolonged sound mark that resembles an em dash <code>&mdash;</code> represents a length mark that lengthens the<a id="d40716e3429" class="indexterm-anchor"></a><a id="d40716e3431" class="indexterm-anchor"></a> vowel of the preceding character. The sort order depends on the vowel that precedes the length mark. This is called context-sensitive collation. For example, after the character <code>ka</code>, the <code>&mdash;</code> length mark indicates a long <code>a</code> and is treated the same as <code>a</code>, while after the character <code>ki</code>, the <code>&mdash;</code> length mark indicates a long <code>i</code> and is treated the same as <code>i</code>. Transliterating this to Latin characters, a sort might look like this:</p>
<pre dir="ltr">kaa   
ka&mdash;   -- kaa and ka&mdash; are the same
kai   -- kai follows ka- because i is after a
kia   -- kia follows kai because i is after a
kii   -- kii follows kia because i is after a
ki&mdash;   -- kii and ki&mdash; are the same
</pre></div>
</div>
<a id="NLSPG282"></a>
<div class="props_rev_3"><a id="GUID-B1CD101D-EEF7-4D77-A53E-9C34B5258B26"></a>
<h3 id="NLSPG-GUID-B1CD101D-EEF7-4D77-A53E-9C34B5258B26" class="sect3">Canonical Equivalence</h3>
<div>
<p><span class="bold">Canonical</span> <span class="bold">equivalence</span> is an attribute of a multilingual collation and describes how equivalent code point sequences are sorted. If canonical equivalence is applied in a particular multilingual collation, then canonically equivalent strings are treated as equal.</p>
<p>One Unicode code point can be <a id="d40716e3544" class="indexterm-anchor"></a>equivalent to a sequence of base letter code points plus diacritic code points. This is called the Unicode canonical equivalence. For example, <code>&auml;</code> equals its base letter <code>a</code> and an umlaut. A linguistic flag, <code>CANONICAL_EQUIVALENCE = TRUE</code>, indicates that all canonical equivalence rules defined in Unicode need to be applied in a specific multilingual collation. Oracle Database-defined multilingual collations include the appropriate setting for the canonical equivalence flag. You can set the flag to <code>FALSE</code> to speed up the comparison and ordering functions if all the data is in its composed form.</p>
<p>For example, consider the following strings:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>&auml;a</code> (<code>a</code> umlaut followed by <code>a</code>)</p>
</li>
<li>
<p><code>a&uml;b</code> (<code>a</code> followed by umlaut followed by <code>b</code>)</p>
</li>
<li>
<p><code>&auml;c</code> (<code>a</code> umlaut followed by <code>c</code>)</p>
</li>
</ul>
<p>If <code>CANONICAL_EQUIVALENCE=FALSE</code>, then the sort order of the strings is:</p>
<pre dir="ltr">a&uml;b
&auml;a
&auml;c
</pre>
<p>This occurs because <code>a</code> comes before <code>&auml;</code> if canonical equivalence is not applied.</p>
<p>If <code>CANONICAL_EQUIVALENCE=TRUE</code>, then the sort order of the strings is:</p>
<pre dir="ltr">&auml;a
a&uml;b
&auml;c
</pre>
<p>This occurs because <code>&auml;</code> and <code>a&uml;</code> are treated as canonically equivalent.</p>
<p>You can use Oracle Locale Builder to view the setting of the canonical equivalence flag in existing multilingual collations. When you create a customized multilingual collation with Oracle Locale Builder, you can set the canonical equivalence flag as desired.</p>
<div class="infoboxnotealso" id="GUID-B1CD101D-EEF7-4D77-A53E-9C34B5258B26__GUID-F11BFB16-99A0-4F69-80E6-6FAD16A5D15B">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch12custlocale.htm#GUID-114ABBB8-9B7C-449F-A408-821518356399">Creating a New Linguistic Sort with the Oracle Locale Builder</a>&#34;</span> for more information about setting the canonical equivalence flag</p>
</div>
</div>
</div>
<a id="NLSPG283"></a>
<div class="props_rev_3"><a id="GUID-6175C023-2157-4EEF-ABAE-B47C4E307434"></a>
<h3 id="NLSPG-GUID-6175C023-2157-4EEF-ABAE-B47C4E307434" class="sect3">Reverse Secondary Sorting</h3>
<div>
<p>In French, sorting <a id="d40716e3709" class="indexterm-anchor"></a><a id="d40716e3711" class="indexterm-anchor"></a>strings of characters with diacritics first compares base letters from left to right, but compares characters with diacritics from right to left. For example, by default, a character with a diacritic is placed after its unmarked variant. Thus <code>&Egrave;dit</code> comes before <code>Ed&iacute;t</code> in a French sort. They are equal on the primary level, and the secondary order is determined by examining characters with diacritics from right to left. Individual locales can request that the characters with diacritics be sorted with the right-to-left rule. Set the <code>REVERSE_SECONDARY</code> linguistic flag to <code>TRUE</code> to enable reverse secondary sorting.</p>
<div class="infoboxnotealso" id="GUID-6175C023-2157-4EEF-ABAE-B47C4E307434__GUID-710E1EEC-99D4-49EA-B1BC-B02304020CFC">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch12custlocale.htm#GUID-114ABBB8-9B7C-449F-A408-821518356399">Creating a New Linguistic Sort with the Oracle Locale Builder</a>&#34;</span> for more information about setting the reverse secondary flag</p>
</div>
</div>
</div>
<a id="NLSPG284"></a>
<div class="props_rev_3"><a id="GUID-1BED8983-8D48-45DB-9F03-939457C5A654"></a>
<h3 id="NLSPG-GUID-1BED8983-8D48-45DB-9F03-939457C5A654" class="sect3">Character Rearrangement for Thai and Laotian Characters</h3>
<div>
<p>In Thai and Lao, some <a id="d40716e3810" class="indexterm-anchor"></a><a id="d40716e3812" class="indexterm-anchor"></a>characters must first change places with the following character before sorting. Normally, these types of characters are symbols representing vowel sounds, and the next character is a consonant. Consonants and vowels must change places before sorting. Set the <code>SWAP_WITH_NEXT</code> linguistic flag for all characters that must change places before sorting.</p>
<div class="infoboxnotealso" id="GUID-1BED8983-8D48-45DB-9F03-939457C5A654__GUID-69DC59FE-7BA8-4D30-834D-7F8408F93B57">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch12custlocale.htm#GUID-114ABBB8-9B7C-449F-A408-821518356399">Creating a New Linguistic Sort with the Oracle Locale Builder</a>&#34;</span> for more information about setting the <code>SWAP_WITH_NEXT</code> flag</p>
</div>
</div>
</div>
<a id="NLSPG285"></a>
<div class="props_rev_3"><a id="GUID-5CF60951-8D3A-480E-B68B-6CF7C5EBEE4E"></a>
<h3 id="NLSPG-GUID-5CF60951-8D3A-480E-B68B-6CF7C5EBEE4E" class="sect3">Special Letters</h3>
<div>
<p><span class="bold">Special letters</span> is a term used in monolingual collation. They are called <span class="bold">expanding</span> <span class="bold">characters</span> in multilingual collation.</p>
<div class="infoboxnotealso" id="GUID-5CF60951-8D3A-480E-B68B-6CF7C5EBEE4E__GUID-FA868321-1C67-490A-922B-F003DF2EC2C1">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-C9FB8A02-7B65-4922-8902-5722CB71957C">Expanding Characters</a>&#34;</span></p>
</div>
</div>
</div>
<a id="NLSPG286"></a>
<div class="props_rev_3"><a id="GUID-058D3AF4-DAED-4BC5-A048-98CA01E22CB8"></a>
<h3 id="NLSPG-GUID-058D3AF4-DAED-4BC5-A048-98CA01E22CB8" class="sect3">Special Combination Letters</h3>
<div>
<p><span class="bold">Special</span> <span class="bold">combination</span> <span class="bold">letters</span> is the term <a id="d40716e4004" class="indexterm-anchor"></a><a id="d40716e4006" class="indexterm-anchor"></a>used in monolingual collations. They are called <span class="bold">contracting</span> <span class="bold">letters</span> in multilingual collation.</p>
<div class="infoboxnotealso" id="GUID-058D3AF4-DAED-4BC5-A048-98CA01E22CB8__GUID-44120373-607C-469E-B64F-C6795EB733EA">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-5E5D577B-FEA8-4056-BDBA-CD86197D6944">Contracting Characters</a>&#34;</span></p>
</div>
</div>
</div>
<a id="NLSPG287"></a>
<div class="props_rev_3"><a id="GUID-911BCCDC-6FA9-4B5E-B76E-C7D05B969E26"></a>
<h3 id="NLSPG-GUID-911BCCDC-6FA9-4B5E-B76E-C7D05B969E26" class="sect3">Special Uppercase Letters</h3>
<div>
<p>One lowercase letter may map to<a id="d40716e4097" class="indexterm-anchor"></a> multiple uppercase letters. For example, in traditional German, the uppercase letters for <code>&szlig;</code> are <code>SS</code>.</p>
<p>These case conversions are handled by the <code>NLS_UPPER</code>, <code>NLS_LOWER</code>, and <code>NLS_INITCAP</code> SQL functions, according to the conventions established by the linguistic collations. The <code>UPPER</code>, <code>LOWER</code>, and <code>INITCAP</code> SQL functions cannot handle these special characters, because their casing operation is based on binary mapping defined for the underlying character set, which is not linguistic sensitive.</p>
<p>The <code>NLS_UPPER</code> SQL function returns all uppercase characters from the same character set as the lowercase string. The following example shows the result of the <code>NLS_UPPER</code> function when <code>NLS_SORT</code> is set to <code>XGERMAN</code>:</p>
<pre dir="ltr">SELECT NLS_UPPER (&#39;gro&szlig;e&#39;) &#34;Uppercase&#34; FROM DUAL;

Upper
-----
GROSSE
</pre>
<div class="infoboxnotealso" id="GUID-911BCCDC-6FA9-4B5E-B76E-C7D05B969E26__GUID-E0C3A27B-5C96-4495-AFDA-28E742B908AD">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF00679" target="_blank" href="../SQLRF/functions124.htm#SQLRF00679"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</div>
</div>
</div>
<a id="NLSPG288"></a>
<div class="props_rev_3"><a id="GUID-9E1B89DF-1E19-4660-9D5C-A27D628DDD16"></a>
<h3 id="NLSPG-GUID-9E1B89DF-1E19-4660-9D5C-A27D628DDD16" class="sect3">Special Lowercase Letters</h3>
<div>
<p>Oracle Database supports special lowercas<a id="d40716e4223" class="indexterm-anchor"></a>e letters. One uppercase letter may map to multiple lowercase letters. An example is the Turkish uppercase <code>I</code> becoming a small, dotless i.</p>
</div>
</div>
</div>
<a id="NLSPG0051"></a>
<div class="props_rev_3"><a id="GUID-7FF18E5A-4ED6-4BDC-8059-886E9BD85E8F"></a>
<h2 id="NLSPG-GUID-7FF18E5A-4ED6-4BDC-8059-886E9BD85E8F" class="sect2">Case-Insensitive and Accent-Insensitive Linguistic Collation</h2>
<div>
<p>Operation inside an Oracle database is always sensitive to the case and the accents (diacritics) of the characters. Sometimes you may need to perform case-insensitive or accent-insensitive comparisons and collations.</p>
<p>In previous versions of the database, case-insensitive queries could be achieved by using the <code>NLS_UPPER</code> and <code>NLS_LOWER</code> SQL functions. The functions change the case of strings based on a specific linguistic collation definition. This enables you to perform case-insensitive searches regardless of the language being used. For example, create a table called <code>test1</code> as follows:</p>
<pre dir="ltr">SQL&gt; CREATE TABLE test1(word VARCHAR2(12));
SQL&gt; INSERT INTO test1 VALUES(&#39;GROSSE&#39;);
SQL&gt; INSERT INTO test1 VALUES(&#39;Gro&szlig;e&#39;);
SQL&gt; INSERT INTO test1 VALUES(&#39;gro&szlig;e&#39;);
SQL&gt; SELECT * FROM test1;

WORD
------------
GROSSE
Gro&szlig;e
gro&szlig;e
</pre>
<p>Perform a case-sensitive search for <code>GROSSE</code> as follows:</p>
<pre dir="ltr">SQL&gt; SELECT word FROM test1 WHERE word=&#39;GROSSE&#39;;

WORD
------------
GROSSE
</pre>
<p>Perform a case-insensitive search for <code>GROSSE</code> using the <code>NLS_UPPER</code> function:</p>
<pre dir="ltr">SELECT word FROM test1
WHERE NLS_UPPER(word, &#39;NLS_SORT = XGERMAN&#39;) = &#39;GROSSE&#39;;

WORD
------------
GROSSE
Gro&szlig;e
gro&szlig;e
</pre>
<p>Oracle Database provides case-insensitive and accent-insensitive options for collation. It provides the following types of linguistic collations:</p>
<ul style="list-style-type: disc;">
<li>
<p>Linguistic collations that use information about base letters, diacritics, punctuation, and case. These are the standard linguistic collations that are described in <span class="q">&#34;<a href="ch5lingsort.htm#GUID-3D736236-BF98-4A4D-9D09-293AAA50A04E">Using Linguistic Collation</a>&#34;</span>.</p>
</li>
<li>
<p>Monolingual collations that use information about base letters, diacritics, and punctuation, but not case, and multilingual and UCA collations that use information about base letters and diacritics, but not case or punctuation. This type of sort is called <span class="bold">case-insensitive</span>.</p>
</li>
<li>
<p>Monolingual collations that use information about base letters and punctuation only, and multilingual and UCA collations that use information about base letters only. This type of sort is called <span class="bold">accent-insensitive</span>. (<span class="bold">Accent</span> is another word for <span class="bold">diacritic</span>.) Like case-insensitive sorts, an accent-insensitive sort does not use information about case.</p>
</li>
</ul>
<p>Accent- and case-insensitive multilingual collations ignore punctuation characters as described in <span class="q">&#34;<a href="ch5lingsort.htm#GUID-4801B9FC-976F-458E-B74F-F39817B79560">Ignorable Characters</a>&#34;</span>.</p>
<p>The rest of this section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-C6CE48AD-A02B-4A2B-94AE-1C64C033C939">Examples: Case-Insensitive and Accent-Insensitive Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-D918D6AE-220B-41F0-98D8-62502B9B1DBB">Specifying a Case-Insensitive or Accent-Insensitive Collation</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-B84E044F-C147-483B-957B-12EBDB368D3F">Examples: Linguistic Collation</a></p>
<div class="infoboxnotealso" id="GUID-7FF18E5A-4ED6-4BDC-8059-886E9BD85E8F__GUID-B379FAD9-58CB-44B5-8007-4F58231F7C33">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="ch3globenv.htm#GUID-D5252CF9-20AF-44EE-816F-E0052877673E">NLS_SORT</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="ch3globenv.htm#GUID-598F4515-BE13-4BBE-9750-AEC2BFD21593">NLS_COMP</a>&#34;</span></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<a id="NLSPG769"></a><a id="NLSPG770"></a><a id="NLSPG771"></a><a id="NLSPG289"></a>
<div class="props_rev_3"><a id="GUID-C6CE48AD-A02B-4A2B-94AE-1C64C033C939"></a>
<h3 id="NLSPG-GUID-C6CE48AD-A02B-4A2B-94AE-1C64C033C939" class="sect3">Examples: Case-Insensitive and Accent-Insensitive Collation</h3>
<div>
<p>The following examples show:</p>
<ul style="list-style-type: disc;">
<li>
<p>A collation that uses information about base letters, diacritics, punctuation, and case</p>
</li>
<li>
<p>A case-insensitive collation</p>
</li>
<li>
<p>An accent-insensitive collation</p>
</li>
</ul>
<div class="example" id="GUID-C6CE48AD-A02B-4A2B-94AE-1C64C033C939__GUID-571C05F3-1199-4F45-A423-CA79848E3728">
<p class="titleinexample">Example 5-4 Linguistic Collation Using Base Letters, Diacritics, Punctuation, and Case Information</p>
<p>The following list has been sorted using information about base letters, diacritics, punctuation, and case:</p>
<pre dir="ltr">blackbird
black bird
black-bird
Blackbird
Black-bird
blackb&icirc;rd
bl&auml;ckbird
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-C6CE48AD-A02B-4A2B-94AE-1C64C033C939__GUID-4F890BC3-F812-4A0A-AA3F-0970CCDE2BAC">
<p class="titleinexample">Example 5-5 Case-Insensitive Linguistic Collation</p>
<p>The following list has been sorted using information about base letters, diacritics, and punctuation, ignoring case:</p>
<pre dir="ltr">black bird
black-bird
Black-bird
blackbird
Blackbird
blackb&icirc;rd
bl&auml;ckbird
</pre>
<p><code>black-bird</code> and <code>Black-bird</code> have the same value in the collation, because the only different between them is case. They could appear interchanged in the list. <code>Blackbird</code> and <code>blackbird</code> also have the same value in the collation and could appear interchanged in the list.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-C6CE48AD-A02B-4A2B-94AE-1C64C033C939__GUID-405B532B-DF24-45C7-8E7D-C5BBCB982FCE">
<p class="titleinexample">Example 5-6 Accent-Insensitive Linguistic Collation</p>
<p>The following list has been sorted using information about base letters only. No information about diacritics, punctuation, or case has been used.</p>
<pre dir="ltr">blackbird
bl&auml;ckbird
blackb&icirc;rd
Blackbird
BlackBird
Black-bird
Black bird
</pre></div>
<!-- class="example" --></div>
</div>
<a id="NLSPG290"></a>
<div class="props_rev_3"><a id="GUID-D918D6AE-220B-41F0-98D8-62502B9B1DBB"></a>
<h3 id="NLSPG-GUID-D918D6AE-220B-41F0-98D8-62502B9B1DBB" class="sect3">Specifying a Case-Insensitive or Accent-Insensitive Collation</h3>
<div>
<p>Use the <code>NLS_SORT</code> session parameter to specify a case-insensitive or accent-insensitive collation:</p>
<ul style="list-style-type: disc;">
<li>
<p>Append <code>_CI</code> to an Oracle Database collation name for a case-insensitive collation.</p>
</li>
<li>
<p>Append <code>_AI</code> to an Oracle Database collation name for an accent-insensitive and case-insensitive collation.</p>
</li>
</ul>
<p>For example, you can set <code>NLS_SORT</code> to the following types of values:</p>
<pre dir="ltr">UCA0620_SPANISH_AI
FRENCH_M_AI
XGERMAN_CI
</pre>
<p>Binary collation <a id="d40716e4648" class="indexterm-anchor"></a>can also be case-insensitive or accent-insensitive. When you specify <code>BINARY_CI</code> as a value for <code>NLS_SORT</code>, it designates a collation that is accent-sensitive and case-insensitive. <code>BINARY_AI</code> designates an accent-insensitive and case-insensitive binary collation. You may want to use a binary collation if the binary collation order of the character set is appropriate for the character set you are using.</p>
<p>For example, with the <code>NLS_LANG</code> environment variable set to <code>AMERICAN_AMERICA.WE8ISO8859P1</code>, create a table called <code>test2</code> and populate it as follows:</p>
<pre dir="ltr">SQL&gt; CREATE TABLE test2 (letter VARCHAR2(10));
SQL&gt; INSERT INTO test2 VALUES(&#39;&auml;&#39;);
SQL&gt; INSERT INTO test2 VALUES(&#39;a&#39;);
SQL&gt; INSERT INTO test2 VALUES(&#39;A&#39;);
SQL&gt; INSERT INTO test2 VALUES(&#39;Z&#39;);
SQL&gt; SELECT * FROM test2;

LETTER
-----------
&auml; 
a
A
Z
</pre>
<p>The default value of <code>NLS_SORT</code> is <code>BINARY</code>. Use the following statement to do a binary collation of the characters in table <code>test2</code>:</p>
<pre dir="ltr">SELECT * FROM test2 ORDER BY letter;
</pre>
<p>To change the value of <code>NLS_SORT</code>, enter a statement similar to the following:</p>
<pre dir="ltr">ALTER SESSION SET NLS_SORT=BINARY_CI;
</pre>
<p>The following table shows the collation orders that result from setting <code>NLS_SORT</code> to <code>BINARY</code>, <a id="d40716e4704" class="indexterm-anchor"></a><a id="d40716e4708" class="indexterm-anchor"></a><code>BINARY_CI</code>, and <code>BINARY_AI</code>.</p>
<div class="tblformal" id="GUID-D918D6AE-220B-41F0-98D8-62502B9B1DBB__GUID-7D0957E7-CDB8-40D4-A441-EDCD809905CD">
<table class="cellalignment2377" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2420" id="d40716e4729">BINARY</th>
<th class="cellalignment2439" id="d40716e4732">BINARY_CI</th>
<th class="cellalignment2378" id="d40716e4735">BINARY_AI</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2421" id="d40716e4740" headers="d40716e4729">
<p><code>A</code></p>
</td>
<td class="cellalignment2441" headers="d40716e4740 d40716e4732">
<p><code>a</code></p>
</td>
<td class="cellalignment2379" headers="d40716e4740 d40716e4735">
<p><code>&auml;</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2421" id="d40716e4753" headers="d40716e4729">
<p><code>Z</code></p>
</td>
<td class="cellalignment2441" headers="d40716e4753 d40716e4732">
<p><code>A</code></p>
</td>
<td class="cellalignment2379" headers="d40716e4753 d40716e4735">
<p><code>a</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2421" id="d40716e4766" headers="d40716e4729">
<p><code>a</code></p>
</td>
<td class="cellalignment2441" headers="d40716e4766 d40716e4732">
<p><code>Z</code></p>
</td>
<td class="cellalignment2379" headers="d40716e4766 d40716e4735">
<p><code>A</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2421" id="d40716e4779" headers="d40716e4729">
<p><code>&auml;</code></p>
</td>
<td class="cellalignment2441" headers="d40716e4779 d40716e4732">
<p><code>&auml;</code></p>
</td>
<td class="cellalignment2379" headers="d40716e4779 d40716e4735">
<p><code>Z</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>When <code>NLS_SORT=BINARY</code>, uppercase letters come before lowercase letters. Letters with diacritics appear last.</p>
<p>When the collation considers diacritics but ignores case (<code>BINARY_CI</code>), the letters with diacritics appear last.</p>
<p>When both case and diacritics are ignored (<code>BINARY_AI</code>), <code>&auml;</code> is sorted with the other characters whose base letter is <code>a</code>. All the characters whose base letter is <code>a</code> occur before <code>z</code>.</p>
<p>You can use binary collation for better performance when the character set is US7ASCII or another character set that has the same collation order as the binary collation.</p>
<p>The following table shows the collation orders that result from German collation for the table.</p>
<div class="tblformal" id="GUID-D918D6AE-220B-41F0-98D8-62502B9B1DBB__GUID-911FA63A-CFCD-434D-BBB5-C42D0DF4710F">
<table class="cellalignment2377" summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2402" id="d40716e4831">GERMAN</th>
<th class="cellalignment2416" id="d40716e4834">GERMAN_CI</th>
<th class="cellalignment2416" id="d40716e4837">GERMAN_AI</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2404" id="d40716e4842" headers="d40716e4831">
<p><code>a</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4842 d40716e4834">
<p><code>a</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4842 d40716e4837">
<p><code>&auml;</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2404" id="d40716e4855" headers="d40716e4831">
<p><code>A</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4855 d40716e4834">
<p><code>A</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4855 d40716e4837">
<p><code>a</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2404" id="d40716e4868" headers="d40716e4831">
<p><code>&auml;</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4868 d40716e4834">
<p><code>&auml;</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4868 d40716e4837">
<p><code>A</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2404" id="d40716e4881" headers="d40716e4831">
<p><code>Z</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4881 d40716e4834">
<p><code>Z</code></p>
</td>
<td class="cellalignment2418" headers="d40716e4881 d40716e4837">
<p><code>Z</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>A German collation places lowercase letters before uppercase letters, and <code>&auml;</code> occurs before <code>Z</code>. When the collation ignores both case and diacritics (<code>GERMAN_AI</code>), <code>&auml;</code> appears with the other characters whose base letter is <code>a</code>.</p>
</div>
</div>
<a id="NLSPG772"></a><a id="NLSPG773"></a><a id="NLSPG774"></a><a id="NLSPG775"></a><a id="NLSPG291"></a>
<div class="props_rev_3"><a id="GUID-B84E044F-C147-483B-957B-12EBDB368D3F"></a>
<h3 id="NLSPG-GUID-B84E044F-C147-483B-957B-12EBDB368D3F" class="sect3">Examples: Linguistic Collation</h3>
<div>
<p>The examples in this section demonstrate a binary collation, a monolingual collation, and a UCA collation. To prepare for the examples, create and populate a table called <code>test3</code>. Enter the following statements:</p>
<pre dir="ltr">SQL&gt; CREATE TABLE test3 (name VARCHAR2(20));
SQL&gt; INSERT INTO test3 VALUES(&#39;Diet&#39;);
SQL&gt; INSERT INTO test3 VALUES(&#39;&Agrave; voir&#39;);
SQL&gt; INSERT INTO test3 VALUES(&#39;Freizeit&#39;);
</pre>
<div class="example" id="GUID-B84E044F-C147-483B-957B-12EBDB368D3F__GUID-718ADB25-9854-433C-886F-CB97C096E042">
<p class="titleinexample">Example 5-7 Binary Collation</p>
<p>The <code>ORDER BY</code> <a id="d40716e5002" class="indexterm-anchor"></a>clause uses a binary collation.</p>
<pre dir="ltr">SQL&gt; SELECT * FROM test3 ORDER BY name;
</pre>
<p>You should see the following output:</p>
<pre dir="ltr">Diet
Freizeit
&Agrave; voir
</pre>
<p>Note that a binary collation results in <code>&Agrave; voir</code> being at the end of the list.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-B84E044F-C147-483B-957B-12EBDB368D3F__GUID-B99319EC-5830-4B28-B7B0-4056C6EACFBB">
<p class="titleinexample">Example 5-8 Monolingual German Collation</p>
<p>Use the <code>NLSSORT</code> <a id="d40716e5026" class="indexterm-anchor"></a>function with the <code>NLS_SORT</code> parameter set to <code>german</code> to obtain a German collation.</p>
<pre dir="ltr">SQL&gt; SELECT * FROM test3 ORDER BY NLSSORT(name, &#39;NLS_SORT=german&#39;);
</pre>
<p>You should see the following output:</p>
<pre dir="ltr">&Agrave; voir
Diet
Freizeit
</pre>
<p>Note that <code>&Agrave; voir</code> is at the beginning of the list in a German collation.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-B84E044F-C147-483B-957B-12EBDB368D3F__GUID-F158D5AE-1A1F-4881-8E6C-CFA688818A8F">
<p class="titleinexample">Example 5-9 Comparing a Monolingual German Collation to a UCA Collation</p>
<p>Insert the <a id="d40716e5053" class="indexterm-anchor"></a>character string shown in <a href="ch5lingsort.htm#GUID-B84E044F-C147-483B-957B-12EBDB368D3F__I1009005">Figure 5-2</a> into <code>test</code>. It is a <code>D</code> with a crossbar followed by <code>&ntilde;</code>.</p>
</div>
<!-- class="example" -->
<div class="figure" id="GUID-B84E044F-C147-483B-957B-12EBDB368D3F__I1009005">
<p class="titleinfigure">Figure 5-2 Example Character String</p>
<img width="600" height="16" src="img/GUID-A08117B8-1DF4-4D75-BE6B-1282D7ED23FD-default.gif" alt="Description of Figure 5-2 follows" title="Description of Figure 5-2 follows"/><br/>
<a href="img_text/GUID-A08117B8-1DF4-4D75-BE6B-1282D7ED23FD-print.htm">Description of &#34;Figure 5-2 Example Character String&#34;</a></div>
<!-- class="figure" -->
<p>Perform a monolingual German collation by using the <code>NLSSORT</code> function with the <code>NLS_SORT</code> parameter set to <code>german</code>.</p>
<pre dir="ltr">SELECT * FROM test2 ORDER BY NLSSORT(name, &#39;NLS_SORT=german&#39;);
</pre>
<p>The output from the German collation shows the new character string last in the list of entries because the characters are not recognized in a German collation.</p>
<p>Perform a UCA collation by entering the following statement:</p>
<pre dir="ltr">SELECT * FROM test2
ORDER BY NLSSORT(name, &#39;NLS_SORT=UCA0620_DUCET&#39;);
</pre>
<p>The output shows the new character string after <code>Diet</code>, following the UCA order.</p>
<div class="infoboxnotealso" id="GUID-B84E044F-C147-483B-957B-12EBDB368D3F__GUID-1C4B2D56-EF69-485C-9C4C-0DEAE131CF49">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="ch9sql.htm#GUID-8C7B0DAC-2379-45A3-9CCF-B7A4811E5497">The NLSSORT Function</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="ch3globenv.htm#GUID-D5252CF9-20AF-44EE-816F-E0052877673E">NLS_SORT</a>&#34;</span> for more information about setting and changing the <code>NLS_SORT</code> parameter</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="NLSPG776"></a><a id="NLSPG292"></a>
<div class="props_rev_3"><a id="GUID-85328A92-CB08-4467-9F02-42E9EF9D41B7"></a>
<h2 id="NLSPG-GUID-85328A92-CB08-4467-9F02-42E9EF9D41B7" class="sect2">Performing Linguistic Comparisons</h2>
<div>
<p>When performing <a id="d40716e5193" class="indexterm-anchor"></a><a id="d40716e5197" class="indexterm-anchor"></a>SQL comparison operations, characters are compared according to their binary values. A character is greater than another if it has a higher binary value. Because the binary sequences rarely match the linguistic sequences for most languages, such comparisons may not be meaningful for a typical user. To achieve a meaningful comparison, you can specify behavior by using the session parameters <code>NLS_COMP</code> and <code>NLS_SORT</code>. The way you set these two parameters determines the rules by which characters are collated and compared.</p>
<p>The <code>NLS_COMP</code> setting determines how <code>NLS_SORT</code> is handled by the SQL operations. There are three valid values for <code>NLS_COMP</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>BINARY</code></p>
<p>All SQL collations and comparisons are based on the binary values of the string characters, regardless of the value set to <code>NLS_SORT</code>. This is the default setting.</p>
</li>
</ul>
<ul style="list-style-type: disc;">
<li>
<p><code>LINGUISTIC</code></p>
<p>All SQL collation and comparison are based on the linguistic rule specified by <code>NLS_SORT</code>. For example, <code>NLS_COMP=LINGUISTIC</code> and <code>NLS_SORT=BINARY_CI</code> means the collation sensitive SQL operations will use binary value for collating and comparison but ignore character case.</p>
</li>
</ul>
<ul style="list-style-type: disc;">
<li>
<p><code>ANSI</code></p>
<p>A limited set of SQL functions honor the <code>NLS_SORT</code> setting. <code>ANSI</code> is available for backward compatibility only. In general, you should set <code>NLS_COMP</code> to <code>LINGUISTIC</code> when performing linguistic comparison.</p>
</li>
</ul>
<p><a href="ch5lingsort.htm#GUID-85328A92-CB08-4467-9F02-42E9EF9D41B7__CIHBFIID" title="Linguistic Comparison Behavior">Table 5-3</a> shows how different SQL or PL/SQL operations behave with these different settings.</p>
<div class="tblformalwide" id="GUID-85328A92-CB08-4467-9F02-42E9EF9D41B7__CIHBFIID">
<p class="titleintable">Table 5-3 Linguistic Comparison Behavior with NLS_COMP Settings</p>
<table class="cellalignment2407" title="Linguistic Comparison Behavior with NLS_COMP Settings" summary="Linguistic Comparison Behavior">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2453" id="d40716e5280">SQL or PL/SQL Operation</th>
<th class="cellalignment2412" id="d40716e5283">BINARY</th>
<th class="cellalignment2480" id="d40716e5286">LINGUISTIC</th>
<th class="cellalignment2480" id="d40716e5289">ANSI</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5294" headers="d40716e5280">
<p><span class="bold">Set</span> <span class="bold">Operators</span></p>
</td>
<td class="cellalignment2414" headers="d40716e5294 d40716e5283">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5294 d40716e5286">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5294 d40716e5289">
<p>-</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5311" headers="d40716e5280">
<p><code>UNION</code>, <code>INTERSECT</code>, <code>MINUS</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5311 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5311 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5311 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5333" headers="d40716e5280">
<p><span class="bold">Scalar</span> <span class="bold">Functions</span></p>
</td>
<td class="cellalignment2414" headers="d40716e5333 d40716e5283">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5333 d40716e5286">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5333 d40716e5289">
<p>-</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5349" headers="d40716e5280">
<p><code>DECODE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5349 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5349 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5349 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5365" headers="d40716e5280">
<p><code>INSTRx</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5365 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5365 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5365 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5381" headers="d40716e5280">
<p><code>LEAST</code>, <code>GREATEST</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5381 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5381 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5381 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5400" headers="d40716e5280">
<p><code>MAX</code>, <code>MIN</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5400 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5400 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5400 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5419" headers="d40716e5280">
<p><code>NLS_INITCAP</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5419 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5419 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5419 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5439" headers="d40716e5280">
<p><code>NLS_LOWER</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5439 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5439 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5439 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5459" headers="d40716e5280">
<p><code>NLS_UPPER</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5459 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5459 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5459 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5479" headers="d40716e5280">
<p><code>NLSSORT</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5479 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5479 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5479 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5500" headers="d40716e5280">
<p><code>NULLIF</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5500 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5500 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5500 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5516" headers="d40716e5280">
<p><code>REGEXP_COUNT</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5516 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5516 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5516 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5536" headers="d40716e5280">
<p><code>REGEXP_INSTR</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5536 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5536 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5536 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5556" headers="d40716e5280">
<p><code>REGEXP_REPLACE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5556 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5556 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5556 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5576" headers="d40716e5280">
<p><code>REGEXP_SUBSTR</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5576 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5576 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5576 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5596" headers="d40716e5280">
<p><code>REPLACE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5596 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5596 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5596 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5612" headers="d40716e5280">
<p><code>RTRIM</code>, <code>TRIM</code>, <code>LTRIM</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5612 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5612 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5612 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5634" headers="d40716e5280">
<p><code>TRANSLATE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5634 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5634 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5634 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5650" headers="d40716e5280">
<p><span class="bold">Condit</span><span class="bold">ions</span></p>
</td>
<td class="cellalignment2414" headers="d40716e5650 d40716e5283">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5650 d40716e5286">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5650 d40716e5289">
<p>-</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5666" headers="d40716e5280">
<p><code>=</code>, <code>!=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&lt;=</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5666 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5666 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5666 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5699" headers="d40716e5280">
<p><code>BETWEEN</code>, <code>NOT</code> <code>BETWEEN</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5699 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5699 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5699 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5724" headers="d40716e5280">
<p><code>IN</code>, <code>NOT</code> <code>IN</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5724 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5724 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5724 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5748" headers="d40716e5280">
<p><code>LIKE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5748 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5748 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5748 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5764" headers="d40716e5280">
<p><code>REGEXP_LIKE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5764 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5764 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5764 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5784" headers="d40716e5280">
<p><span class="bold">CASE</span> <span class="bold">Expression</span></p>
</td>
<td class="cellalignment2414" headers="d40716e5784 d40716e5283">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5784 d40716e5286">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5784 d40716e5289">
<p>-</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5801" headers="d40716e5280">
<p><code>CASE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5801 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5801 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5801 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5817" headers="d40716e5280">
<p><span class="bold">Analytic</span> <span class="bold">Function Clauses</span></p>
</td>
<td class="cellalignment2414" headers="d40716e5817 d40716e5283">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5817 d40716e5286">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5817 d40716e5289">
<p>-</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5834" headers="d40716e5280">
<p><code>DISTINCT</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5834 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5834 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5834 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5854" headers="d40716e5280">
<p><code>OVER(ORDER BY)</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5854 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5854 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5854 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5874" headers="d40716e5280">
<p><code>OVER(PARTITION BY)</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5874 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5874 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5874 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5894" headers="d40716e5280">
<p><span class="bold">Subquery Clauses</span></p>
</td>
<td class="cellalignment2414" headers="d40716e5894 d40716e5283">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5894 d40716e5286">
<p>-</p>
</td>
<td class="cellalignment2481" headers="d40716e5894 d40716e5289">
<p>-</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5908" headers="d40716e5280">
<p><code>DISTINCT, UNIQUE</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5908 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5908 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5908 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5925" headers="d40716e5280">
<p><code>GROUP BY</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5925 d40716e5283">
<p>Binary</p>
</td>
<td class="cellalignment2481" headers="d40716e5925 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5925 d40716e5289">
<p>Binary</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2455" id="d40716e5941" headers="d40716e5280">
<p><code>ORDER BY</code></p>
</td>
<td class="cellalignment2414" headers="d40716e5941 d40716e5283">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5941 d40716e5286">
<p>Honors <code>NLS_SORT</code></p>
</td>
<td class="cellalignment2481" headers="d40716e5941 d40716e5289">
<p>Honors <code>NLS_SORT</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>See <span class="q">&#34;<a href="ch3globenv.htm#GUID-598F4515-BE13-4BBE-9750-AEC2BFD21593">NLS_COMP</a>&#34;</span> and <span class="q">&#34;<a href="ch3globenv.htm#GUID-D5252CF9-20AF-44EE-816F-E0052877673E">NLS_SORT</a>&#34;</span> for information regarding these parameters.</p>
</div>
<a id="NLSPG976"></a>
<div class="props_rev_3"><a id="GUID-67478295-31CD-47AE-8349-C76F437A75D5"></a>
<h3 id="NLSPG-GUID-67478295-31CD-47AE-8349-C76F437A75D5" class="sect3">Collation Keys</h3>
<div>
<p>When the comparison conditions =, !=, &gt;, &lt;, &gt;=, &lt;=, <code>BETWEEN</code>, <code>NOT</code> <code>BETWEEN</code>, <code>IN</code>, <code>NOT</code> <code>IN</code>, the query clauses <code>ORDER</code> <code>BY</code> or <code>GROUP</code> <code>BY</code>, or the aggregate function <code>COUNT(DISTINCT)</code> are evaluated according to linguistic rules specified by <code>NLS_SORT</code>, the compared argument values are first transformed to binary values called collation keys and then compared byte by byte, like <code>RAW</code> values. If a monolingual collation is applied, collation keys contain major values for characters of the source value concatenated with minor values for those characters. If a multilingual collation is applied, collation keys contain concatenated primary, secondary, and tertiary values.</p>
<p>The collation keys are the same values that are returned by the <code>NLSSORT</code> function. That is, activating the linguistic behavior of these SQL operations is equivalent to including their arguments into calls to the <code>NLSSORT</code> function.</p>
</div>
</div>
<a id="NLSPG977"></a>
<div class="props_rev_3"><a id="GUID-6AAE9969-98B5-4C24-8540-6AFF26E46A7B"></a>
<h3 id="NLSPG-GUID-6AAE9969-98B5-4C24-8540-6AFF26E46A7B" class="sect3">Restricted Precision of Linguistic Comparison</h3>
<div>
<p>As collation keys are values of the data type <code>RAW</code> and the maximum length of a <code>RAW</code> value depends on the value of the initialization parameter, <code>MAX_STRING_SIZE</code>, the maximum length of a collation key is controlled by the parameter as well.</p>
<p>When <code>MAX_STRING_SIZE</code> is set to <code>STANDARD</code>, the maximum length of a collation key is restricted to 2000 bytes. If a full source string yields a collation key longer than the maximum length, the collation key generated for this string is calculated for a maximum prefix (initial substring) of the value for which the calculated result does not exceed 2000 bytes. For monolingual collation, the prefix is typically 1000 characters. For multilingual collation, the prefix is typically 500 characters. For UCA collations, the prefix is typically 300 characters. The exact length of the prefix may be higher or lower and depends on the particular collation and the particular characters contained in the source string. The implication of this method of collation key generation is that SQL operations using the collation keys to implement the linguistic behavior will return results that may ignore trailing parts of long arguments. For example, two strings starting with the same 1000 characters but differing somewhere after the 1000th character will be grouped together by the <code>GROUP</code> <code>BY</code> clause.</p>
<p>When <code>MAX_STRING_SIZE</code> is set to <code>EXTENDED</code>, the maximum length of a collation key is restricted to 32767 bytes. If a full source string yields a collation key longer than the maximum length, ORA- 12742 will be raised.</p>
</div>
</div>
<a id="NLSPG777"></a><a id="NLSPG778"></a><a id="NLSPG779"></a><a id="NLSPG780"></a><a id="NLSPG781"></a><a id="NLSPG1022"></a><a id="NLSPG293"></a>
<div class="props_rev_3"><a id="GUID-1D29435C-3285-455A-9297-3092D3E97993"></a>
<h3 id="NLSPG-GUID-1D29435C-3285-455A-9297-3092D3E97993" class="sect3">Examples: Linguistic Comparison</h3>
<div>
<p>The following examples illustrate behavior with different <code>NLS_COMP</code> settings.</p>
<div class="example" id="GUID-1D29435C-3285-455A-9297-3092D3E97993__GUID-9E4D4080-D366-4CFF-BD07-66C62C99C744">
<p class="titleinexample">Example 5-10 Binary Comparison Binary Collation</p>
<p>The following illustrates behavior with a binary setting:</p>
</div>
<!-- class="example" -->
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=BINARY;
SQL&gt; ALTER SESSION SET NLS_SORT=BINARY;
SQL&gt; SELECT ename FROM emp1;

ENAME
----------------------
Mc Calla
MCAfee
McCoye
Mccathye
McCafe&eacute;

5 rows selected

SQL&gt; SELECT ename FROM emp1 WHERE ename LIKE &#39;McC%e&#39;;

ENAME
----------------------
McCoye

1 row selected
</pre>
<div class="example" id="GUID-1D29435C-3285-455A-9297-3092D3E97993__GUID-D02FB7A0-BA13-44EA-8E93-4BBDF8827F47">
<p class="titleinexample">Example 5-11 Linguistic Comparison Binary Case-Insensitive Collation</p>
<p>The following illustrates behavior with a case-insensitive setting:</p>
</div>
<!-- class="example" -->
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=LINGUISTIC;
SQL&gt; ALTER SESSION SET NLS_SORT=BINARY_CI;
SQL&gt; SELECT ename FROM emp1 WHERE ename LIKE &#39;McC%e&#39;;

ENAME
----------------------
McCoye
Mccathye

2 rows selected
</pre>
<div class="example" id="GUID-1D29435C-3285-455A-9297-3092D3E97993__GUID-A8D8D59D-2802-48CC-ABC7-97B11669F5A2">
<p class="titleinexample">Example 5-12 Linguistic Comparison Binary Accent-Insensitive Collation</p>
<p>The following illustrates behavior with an accent-insensitive setting:</p>
</div>
<!-- class="example" -->
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=LINGUISTIC;
SQL&gt; ALTER SESSION SET NLS_SORT=BINARY_AI;
SQL&gt; SELECT ename FROM emp1 WHERE ename LIKE &#39;McC%e&#39;;

ENAME
----------------------
McCoye
Mccathye
McCafe&eacute;

3 rows selected
</pre>
<div class="example" id="GUID-1D29435C-3285-455A-9297-3092D3E97993__GUID-897090EE-BEF4-40DA-B271-8EF12096272F">
<p class="titleinexample">Example 5-13 Linguistic Comparisons Returning Fewer Rows</p>
<p>Some operations may return fewer rows after applying linguistic rules. For example, with a binary setting, <code>McAfee</code> and <code>Mcafee</code> are different:</p>
</div>
<!-- class="example" -->
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=BINARY;
SQL&gt; ALTER SESSION SET NLS_SORT=BINARY;
SQL&gt; SELECT DISTINCT ename FROM emp2;

ENAME
----------------------
McAfee
Mcafee
McCoy

3 rows selected
</pre>
<p>However, with a case-insensitive setting, <code>McAfee</code> and <code>Mcafee</code> are the same:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=LINGUISTIC;
SQL&gt; ALTER SESSION SET NLS_SORT=BINARY_CI;
SQL&gt; SELECT DISTINCT ename FROM emp2;

ENAME
----------------------
McAfee
McCoy

2 rows selected
</pre>
<p>In this example, either <code>McAfee</code> or <code>Mcafee</code> could be returned from the <code>DISTINCT</code> operation. There is no guarantee exactly which one will be picked.</p>
<div class="example" id="GUID-1D29435C-3285-455A-9297-3092D3E97993__GUID-EA8855EE-BDB2-41CA-BF5F-1CDB34046AD3">
<p class="titleinexample">Example 5-14 Linguistic Comparisons Using XSPANISH</p>
<p>There are cases where characters are the same using binary comparison but different using linguistic comparison. For example, with a binary setting, the character <code>C</code> in <code>Cindy</code>, <code>Chad</code>, and <code>Clara</code> represents the same letter <code>C</code>:</p>
</div>
<!-- class="example" -->
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=BINARY;
SQL&gt; ALTER SESSION SET NLS_SORT=BINARY;
SQL&gt; SELECT ename FROM emp3 WHERE ename LIKE &#39;C%&#39;;

ENAME
----------------------
Cindy
Chad
Clara

3 rows selected
</pre>
<p>In a database session with the linguistic rule set to traditional Spanish, <code>XSPANISH</code>, <code>ch</code> is treated as one character. So the letter <code>c</code> in <code>Chad</code> is different than the letter <code>C</code> in <code>Cindy</code> and <code>Clara</code>:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP=LINGUISTIC;
SQL&gt; ALTER SESSION SET NLS_SORT=XSPANISH;
SQL&gt; SELECT ename FROM emp3 WHERE ename LIKE &#39;C%&#39;;

ENAME
----------------------
Cindy
Clara

2 rows selected
</pre>
<p>And the letter <code>c</code> in combination <code>ch</code> is different than the <code>c</code> standing by itself:</p>
<pre dir="ltr">SQL&gt; SELECT REPLACE (&#39;character&#39;, &#39;c&#39;, &#39;t&#39;) &#34;Changes&#34; FROM DUAL;

Changes
---------------------
charatter
</pre>
<div class="example" id="GUID-1D29435C-3285-455A-9297-3092D3E97993__GUID-A716491B-CC8C-4290-B825-31761211A963">
<p class="titleinexample">Example 5-15 Linguistic Comparisons Using UCA0620_TSPANISH</p>
<p>The character <code>ch</code> behaves the same in the traditional Spanish ordering of the UCA collations as that in <code>XSPANISH</code>:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_COMP = LINGUISTIC;
SQL&gt; ALTER SESSION SET NLS_SORT = UCA0620_TSPANISH;
SQL&gt; SELECT ename FROM emp3 WHERE ename LIKE &#39;C%&#39;;

ENAME
--------------
Cindy
Clara

SQL&gt; SELECT REPLACE (&#39;character&#39;, &#39;c&#39;, &#39;t&#39;) &#34;Changes&#34; FROM DUAL;

Changes
-----------
charatter
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="NLSPG294"></a>
<div class="props_rev_3"><a id="GUID-924966AE-16EA-4D0D-A3C5-5AC4342F4FCF"></a>
<h2 id="NLSPG-GUID-924966AE-16EA-4D0D-A3C5-5AC4342F4FCF" class="sect2">Using Linguistic Indexes</h2>
<div>
<p>Linguistic collation is<a id="d40716e6489" class="indexterm-anchor"></a><a id="d40716e6491" class="indexterm-anchor"></a> language-specific and requires more data processing than binary collation. Using a binary collation for ASCII is accurate and fast because the binary codes for ASCII characters reflect their linguistic order. When data in multiple languages is stored in the database, you may want applications to collate the data returned from a <code>SELECT...ORDER BY</code> statement according to different collation sequences depending on the language. You can accomplish this without sacrificing performance by using linguistic indexes. Although a linguistic index for a column slows down inserts and updates, it greatly improves the performance of linguistic collation with the <code>ORDER</code> <code>BY</code> clause and the <code>WHERE</code> clause.</p>
<p>You can create a function-based index that uses languages other than English. The index does not change the linguistic collation order determined by <code>NLS_SORT</code>. The linguistic index simply improves the performance.</p>
<p>The following statement creates an index based on a German collation:</p>
<pre dir="ltr">CREATE TABLE my_table(name VARCHAR(20) NOT NULL);
CREATE INDEX nls_index ON my_table (NLSSORT(name, &#39;NLS_SORT = German&#39;));
</pre>
<p>The <code>NOT</code> <code>NULL</code> in the <code>CREATE</code> <code>TABLE</code> statement ensures that the index is used.</p>
<p>After the index has been created, enter a <code>SELECT</code> statement similar to the following example:</p>
<pre dir="ltr">SELECT * FROM my_table WHERE name LIKE &#39;Hein%&#39; ORDER BY name;
</pre>
<p>It returns the result much faster than the same <code>SELECT</code> statement without a linguistic index.</p>
<p>The rest of this section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-ADC570FE-7C93-45FF-B502-4BD075B1DABA">Supported SQL Operations and Functions for Linguistic Indexes</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-476C0972-2890-46D9-BC90-B933C849D52A">Linguistic Indexes for Multiple Languages</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-9FED6389-F5B5-4729-8404-74DBFB16E1DD">Requirements for Using Linguistic Indexes</a></p>
<div class="infoboxnotealso" id="GUID-924966AE-16EA-4D0D-A3C5-5AC4342F4FCF__GUID-BFF7C249-D469-4376-A160-C375F95926F4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADMIN11730" target="_blank" href="../ADMIN/indexes.htm#ADMIN11730"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about function-based indexes</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<a id="NLSPG295"></a>
<div class="props_rev_3"><a id="GUID-ADC570FE-7C93-45FF-B502-4BD075B1DABA"></a>
<h3 id="NLSPG-GUID-ADC570FE-7C93-45FF-B502-4BD075B1DABA" class="sect3">Supported SQL Operations and Functions for Linguistic Indexes</h3>
<div>
<div class="section">
<p>Linguistic index support is available for the following collation-sensitive SQL operations and SQL functions:</p>
<ul style="list-style-type: disc;">
<li>
<p>Comparison conditions <code>=</code>, <code>!=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&lt;=</code></p>
</li>
<li>
<p>Range conditions <code>BETWEEN</code> | <code>NOT</code> <code>BETWEEN</code></p>
</li>
<li>
<p><code>IN</code> | <code>NOT</code> <code>IN</code></p>
</li>
<li>
<p><code>ORDER</code> <code>BY</code></p>
</li>
<li>
<p><code>GROUP</code> <code>BY</code></p>
</li>
<li>
<p><code>LIKE</code> (<code>LIKE</code>, <code>LIKE2</code>, <code>LIKE4</code>, <code>LIKEC</code>)</p>
</li>
<li>
<p><code>DISTINCT</code></p>
</li>
<li>
<p><code>UNIQUE</code></p>
</li>
<li>
<p><code>UNION</code></p>
</li>
<li>
<p><code>INTERSECT</code></p>
</li>
<li>
<p><code>MINUS</code></p>
</li>
</ul>
<p>The SQL functions in the following list cannot utilize linguistic index:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>INSTR</code> (<code>INSTR</code>, <code>INSTRB</code>, <code>INSTR2</code>, <code>INSTR4</code>, <code>INSTRC</code>)</p>
</li>
<li>
<p><code>MAX</code></p>
</li>
<li>
<p><code>MIN</code></p>
</li>
<li>
<p><code>REPLACE</code></p>
</li>
<li>
<p><code>TRIM</code></p>
</li>
<li>
<p><code>LTRIM</code></p>
</li>
<li>
<p><code>RTRIM</code></p>
</li>
<li>
<p><code>TRANSLATE</code></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="NLSPG296"></a>
<div class="props_rev_3"><a id="GUID-476C0972-2890-46D9-BC90-B933C849D52A"></a>
<h3 id="NLSPG-GUID-476C0972-2890-46D9-BC90-B933C849D52A" class="sect3">Linguistic Indexes for Multiple Languages</h3>
<div>
<div class="section">
<p>There are four ways to build linguistic indexes for data in multiple languages:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Build a linguistic index for each language that the application supports. This approach offers simplicity but requires more disk space. For each index, the rows in the language other than the one on which the index is built are collated together at the end of the sequence. The following example builds linguistic indexes for French and German.</p>
<pre dir="ltr">CREATE INDEX french_index ON employees (NLSSORT(employee_id, &#39;NLS_SORT=FRENCH&#39;));
CREATE INDEX german_index ON employees (NLSSORT(employee_id, &#39;NLS_SORT=GERMAN&#39;));
</pre>
<p>Oracle Database chooses the index based on the <code>NLS_SORT</code> session parameter or the arguments of the <code>NLSSORT</code> function specified in the <code>ORDER</code> <code>BY</code> clause. For example, if the <code>NLS_SORT</code> session parameter is set to <code>FRENCH</code>, then Oracle Database uses <code>french_index</code>. When it is set to <code>GERMAN</code>, Oracle Database uses <code>german_index</code>.</p>
</li>
<li>
<p>Build a single linguistic index for all languages. This requires a language column (<code>LANG_COL</code> in <span class="q">&#34;<a href="ch5lingsort.htm#GUID-FB2E0477-D901-4594-9F36-4A9ECABC9E0B">Example: Setting Up a French Linguistic Index</a>&#34;</span>) to be used as a parameter of the <code>NLSSORT</code> function. The language column contains <code>NLS_LANGUAGE</code> values for the data in the column on which the index is built. The following example builds a single linguistic index for multiple languages. With this index, the rows with the same values for <code>NLS_LANGUAGE</code> are sorted together.</p>
<pre dir="ltr">CREATE INDEX i ON t (LANG_COL, NLSSORT(col, &#39;NLS_SORT=&#39; || LANG_COL));
</pre>
<p>Queries choose an index based on the argument of the <code>NLSSORT</code> function specified in the <code>ORDER BY</code> clause.</p>
</li>
<li>
<p>Build a single linguistic index for all languages using one of the multilingual collations such as <code>GENERIC_M</code> or <code>FRENCH_M</code>. These indexes sort characters according to the rules defined in ISO 14651. For example:</p>
<pre dir="ltr">CREATE INDEX i ON t (NLSSORT(col, &#39;NLS_SORT=GENERIC_M&#39;));
</pre>
<div class="infoboxnotealso" id="GUID-476C0972-2890-46D9-BC90-B933C849D52A__GUID-2898C8D3-6477-4FDA-977B-42ECC86904EA">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-6EF8FD2D-6E76-4E00-9FDF-23D09C542F6D">Multilingual Collation</a>&#34;</span> for more information</p>
</div>
</li>
<li>
<p>Build a single linguistic index for all languages using one of the UCA collations such as <code>UCA0620_DUCET</code> or <code>UCA0620_CFRENCH</code>. These indexes sort characters in the order conforming to ISO 14654 and UCA 6.2.0. For example:</p>
<pre dir="ltr">CREATE INDEX i
  ON t (NLSSORT(col, &#39;NLS_SORT=UCA0620_DUCET&#39;));
</pre>
<div class="infoboxnotealso" id="GUID-476C0972-2890-46D9-BC90-B933C849D52A__GUID-1B21E626-BA1B-40E4-965C-EB4967BB353B">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-6ADFC7B7-5857-4962-BED9-E1975CEDD0C8">UCA Collation</a>&#34;</span> for more information</p>
</div>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="NLSPG297"></a>
<div class="props_rev_3"><a id="GUID-9FED6389-F5B5-4729-8404-74DBFB16E1DD"></a>
<h3 id="NLSPG-GUID-9FED6389-F5B5-4729-8404-74DBFB16E1DD" class="sect3">Requirements for Using Linguistic Indexes</h3>
<div>
<p>The following are requirements for using linguistic indexes:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-1ED96C64-7D14-4A45-8070-6F4484E6C775">Set NLS_SORT Appropriately</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-2646995E-6FA9-4CBA-B135-8F760DE6564D">Specify NOT NULL in a WHERE Clause If the Column Was Not Declared NOT NULL</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-8E289C54-137D-4C3B-967A-C418BB6953AD">Use a Tablespace with an Adequate Block Size</a></p>
</li>
</ul>
<p>This section also includes:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-FB2E0477-D901-4594-9F36-4A9ECABC9E0B">Example: Setting Up a French Linguistic Index</a></p>
</li>
</ul>
</div>
<a id="NLSPG298"></a>
<div class="props_rev_3"><a id="GUID-1ED96C64-7D14-4A45-8070-6F4484E6C775"></a>
<h4 id="NLSPG-GUID-1ED96C64-7D14-4A45-8070-6F4484E6C775" class="sect4">Set NLS_SORT Appropriately</h4>
<div>
<p>The <code>NLS_SORT</code> parameter should indicate the linguistic definition you want to use for the linguistic collation. If you want a French linguistic collation order, then <code>NLS_SORT</code> should be set to <code>FRENCH</code>. If you want a German linguistic collation order, then <code>NLS_SORT</code> should be set to <code>GERMAN</code>.</p>
<p>There are several ways to set <code>NLS_SORT</code>. You should set <code>NLS_SORT</code> as a client environment variable so that you can use the same SQL statements for all languages. Different linguistic indexes can be used when <code>NLS_SORT</code> is set in the client environment.</p>
<div class="infoboxnotealso" id="GUID-1ED96C64-7D14-4A45-8070-6F4484E6C775__GUID-073F9F5D-1024-49DA-89E6-92722901E68F">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="ch3globenv.htm#GUID-D5252CF9-20AF-44EE-816F-E0052877673E">NLS_SORT</a>&#34;</span></p>
</div>
</div>
</div>
<a id="NLSPG299"></a>
<div class="props_rev_3"><a id="GUID-2646995E-6FA9-4CBA-B135-8F760DE6564D"></a>
<h4 id="NLSPG-GUID-2646995E-6FA9-4CBA-B135-8F760DE6564D" class="sect4">Specify NOT NULL in a WHERE Clause If the Column Was Not Declared NOT NULL</h4>
<div>
<p>When you want to use the <code>ORDER BY</code> <span class="italic"><code>column_name</code></span> clause with a column that has a linguistic index, include a <code>WHERE</code> clause like the following example:</p>
<pre dir="ltr">WHERE NLSSORT(<span class="italic">column_name</span>) IS NOT NULL
</pre>
<p>This <code>WHERE</code> clause is not necessary if the column has already been defined as a <code>NOT NULL</code> column in the schema.</p>
</div>
</div>
<a id="NLSPG1036"></a>
<div class="props_rev_3"><a id="GUID-8E289C54-137D-4C3B-967A-C418BB6953AD"></a>
<h4 id="NLSPG-GUID-8E289C54-137D-4C3B-967A-C418BB6953AD" class="sect4">Use a Tablespace with an Adequate Block Size</h4>
<div>
<p>A collation key created from a character value is usually a few times longer than this value. The actual length expansion depends on the particular collation in use and the content of the source value, with the UCA-based collations expanding the most.</p>
<p>When creating a linguistic index, Oracle Database first calculates the estimated maximum size of the index key by summing up the estimated maximum sizes of the collation keys (<code>NLSSORT</code> results) for each of the character columns forming the index key. In this calculation, the maximum size of a collation key for a character column with the maximum byte length <code>n</code> is estimated to be <code>n*21+5</code> for UCA-based collations and <code>n*8+10</code> for other collations.</p>
<p>The large expansion ratios can yield large maximum index key sizes, especially for composite (multicolumn) keys. At the same time, the maximum key size of an index cannot exceed around 70% of the block size of the tablespace containing the index. If it does, an ORA-1450 error is reported. To avoid this error, you should store the linguistic index in a tablespace with an adequate block size, which may be larger than the default block size of your database. A suitable tablespace can be created with the <code>CREATE</code> <code>TABLESPACE</code> statement, provided the initialization parameter <code>DB_</code><span class="italic"><code>n</code></span><code>K_CACHE_SIZE</code> corresponding to the required block size <span class="italic">n</span> has been set appropriately.</p>
<div class="infoboxnotealso" id="GUID-8E289C54-137D-4C3B-967A-C418BB6953AD__GUID-DF342095-C1A7-46CD-B3EE-82CC6678DE74">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADMIN011" target="_blank" href="../ADMIN/tspaces.htm#ADMIN011"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="NLSPG300"></a>
<div class="props_rev_3"><a id="GUID-FB2E0477-D901-4594-9F36-4A9ECABC9E0B"></a>
<h4 id="NLSPG-GUID-FB2E0477-D901-4594-9F36-4A9ECABC9E0B" class="sect4">Example: Setting Up a French Linguistic Index</h4>
<div>
<p>The following example shows how to set up a French linguistic index. You may want to set <code>NLS_SORT</code> as a client environment variable instead of using the <code>ALTER</code> <code>SESSION</code> statement.</p>
<pre dir="ltr">ALTER SESSION SET NLS_SORT=&#39;FRENCH&#39;;
CREATE INDEX test_idx ON test4(NLSSORT(name, &#39;NLS_SORT=FRENCH&#39;));
SELECT * FROM test4 ORDER BY col;
ALTER SESSION SET NLS_COMP=LINGUISTIC;
SELECT * FROM test4 WHERE name &gt; &#39;Henri&#39;;
</pre>
<div class="infobox-note" id="GUID-FB2E0477-D901-4594-9F36-4A9ECABC9E0B__GUID-B7C32DAF-F540-49E5-9C08-B137C997B505">
<p class="notep1">Note:</p>
<p>The SQL functions <code>MAX()</code> and <code>MIN()</code> cannot use linguistic indexes when <code>NLS_COMP</code> is set to <code>LINGUISTIC</code>.</p>
</div>
</div>
</div>
</div>
</div>
<a id="NLSPG301"></a>
<div class="props_rev_3"><a id="GUID-A5143269-5804-408C-8E57-F5730AE9DA4B"></a>
<h2 id="NLSPG-GUID-A5143269-5804-408C-8E57-F5730AE9DA4B" class="sect2">Searching Linguistic Strings</h2>
<div>
<p>Searching <a id="d40716e7561" class="indexterm-anchor"></a><a id="d40716e7563" class="indexterm-anchor"></a>and collation are related tasks. Organizing data and processing it in a linguistically meaningful order is necessary for proper business processing. Searching and matching data in a linguistically meaningful way depends on what collation order is applied. For example, searching for all strings greater than <code>c</code> and less than <code>f</code> produces different results depending on the value of <code>NLS_SORT</code>. In an ASCII binary collation, the search finds any strings that start with <code>d</code> or <code>e</code> but excludes entries that begin with upper case <code>D</code> or <code>E</code> or accented <code>e</code> with a diacritic, such as <code>&ecirc;</code>. Applying an accent-insensitive binary collation returns all strings that start with <code>d</code>, <code>D,</code> and accented <code>e,</code> such as <code>&Ecirc;</code> or <code>&ecirc;</code>. Applying the same search with <code>NLS_SORT</code> set to <code>XSPANISH</code> also returns strings that start with <code>ch</code>, because <code>ch</code> is treated as a composite character that collates between <code>c</code> and <code>d</code> in traditional Spanish. This chapter discusses the kinds of collation that Oracle Database offers and how they affect string searches by SQL and SQL regular expressions.</p>
<div class="infoboxnotealso" id="GUID-A5143269-5804-408C-8E57-F5730AE9DA4B__GUID-0D3F7900-2BF0-4068-AB60-8B2B2B12F88C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-C8379BCB-B175-40E3-8824-59C20F92C864">Linguistic Collation Features</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="ch5lingsort.htm#GUID-A7ABC638-4928-40F7-A252-6A1B84482BD5">SQL Regular Expressions in a Multilingual Environment</a>&#34;</span></p>
</li>
</ul>
</div>
</div>
</div>
<a id="NLSPG0052"></a>
<div class="props_rev_3"><a id="GUID-A7ABC638-4928-40F7-A252-6A1B84482BD5"></a>
<h2 id="NLSPG-GUID-A7ABC638-4928-40F7-A252-6A1B84482BD5" class="sect2">SQL Regular Expressions in a Multilingual Environment</h2>
<div>
<p>Regular<a id="d40716e7720" class="indexterm-anchor"></a> expressions provide a powerful method of identifying patterns of strings within a body of text. Usage ranges from a simple search for a string such as <code>San Francisco</code> to the more complex task of extracting all URLs to finding all words whose every second character is a vowel. SQL and PL/SQL support regular expressions in Oracle Database.</p>
<p>Traditional regular expression engines were designed to address only English text. However, regular expression implementations can encompass a wide variety of languages with characteristics that are very different from western European text. The implementation of regular expressions in Oracle Database is based on the Unicode Regular Expression Guidelines. The <code>REGEXP</code> SQL functions work with all character sets that are supported as database character sets and national character sets. Moreover, Oracle Database enhances the matching capabilities of the POSIX regular expression constructs to handle the unique linguistic requirements of matching multilingual data.</p>
<p>Oracle Database enhancements of the linguistic-sensitive operators are described in the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch5lingsort.htm#GUID-EF1DD284-7CAA-4B51-A47F-6162660CFE18">Character Range &#39;[x-y]&#39; in Regular Expressions</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-017FAFC6-B213-43A3-9653-AA2774DEDC4B">Collation Element Delimiter &#39;[. .]&#39; in Regular Expressions</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-C4D197C1-81EE-4743-9845-2E29BB63EC6B">Character Class &#39;[: :]&#39; in Regular Expressions</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-CC657DEB-1A0A-4097-8D59-6723BCEDDD68">Equivalence Class &#39;[= =]&#39; in Regular Expressions</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2">Examples: Regular Expressions</a></p>
<div class="infoboxnotealso" id="GUID-A7ABC638-4928-40F7-A252-6A1B84482BD5__GUID-5098F9C2-6E3C-41A3-9FB8-5F3ABA6593C0">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADFNS1003" target="_blank" href="../ADFNS/adfns_regexp.htm#ADFNS1003"><span class="italic">Oracle Database Development Guide</span></a> for more information about regular expression syntax</p>
</li>
<li>
<p><a class="olink SQLRF20014" target="_blank" href="../SQLRF/functions161.htm#SQLRF20014"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about <code>REGEX</code> SQL functions</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<a id="NLSPG302"></a>
<div class="props_rev_3"><a id="GUID-EF1DD284-7CAA-4B51-A47F-6162660CFE18"></a>
<h3 id="NLSPG-GUID-EF1DD284-7CAA-4B51-A47F-6162660CFE18" class="sect3">Character Range &#39;[x-y]&#39; in Regular Expressions</h3>
<div>
<p>According to the POSIX standard, a range in a regular expression includes all collation elements between the start point and the end point of the range in the linguistic definition of the current locale. Therefore, ranges in regular expressions are meant to be linguistic ranges, not byte value ranges, because byte value ranges depend on the platform, and the end user should not be expected to know the ordering of the byte values of the characters. The semantics of the range expression must be independent of the character set. This implies that a range such as <code>[a-d]</code> may include all the letters between <code>a</code> and <code>d</code> plus all of those letters with diacritics, plus any special case collation element such as <code>ch</code> in Traditional Spanish that is sorted as one character.</p>
<p>Oracle Database interprets range expressions as specified by the <code>NLS_SORT</code> parameter to determine the collation elements covered by a given range. For example:</p>
<pre dir="ltr">Expression:     [a-d]e
NLS_SORT:       BINARY
Does not match: cheremoya
NLS_SORT:       XSPANISH
Matches:        &gt;&gt;che&lt;&lt;remoya
</pre></div>
</div>
<a id="NLSPG303"></a>
<div class="props_rev_3"><a id="GUID-017FAFC6-B213-43A3-9653-AA2774DEDC4B"></a>
<h3 id="NLSPG-GUID-017FAFC6-B213-43A3-9653-AA2774DEDC4B" class="sect3">Collation Element Delimiter &#39;[. .]&#39; in Regular Expressions</h3>
<div>
<p>This <a id="d40716e7953" class="indexterm-anchor"></a>construct is introduced by the POSIX standard to separate collating elements. A <span class="bold">collating element</span> is a unit of collation and is equal to one character in most cases. However, the collation sequence in some languages may define two or more characters as a collating element. The historical regular expression syntax does not allow the user to define ranges involving multicharacter collation elements. For example, there was no way to define a range from <code>a</code> to <code>ch</code> because <code>ch</code> was interpreted as two separate characters.</p>
<p>By using the collating element delimiter <code>[. .]</code>, you can separate a multicharacter collation element from other elements. For example, the range from <code>a</code> to <code>ch</code> can be written as <code>[a-[.ch.]]</code>. It can also be used to separate single-character collating elements. If you use <code>[. .]</code> to enclose a multicharacter sequence that is not a defined collating element, then it is considered as a semantic error in the regular expression. For example, <code>[.ab.]</code> is considered invalid if <code>ab</code> is not a defined multicharacter collating element.</p>
</div>
</div>
<a id="NLSPG304"></a>
<div class="props_rev_3"><a id="GUID-C4D197C1-81EE-4743-9845-2E29BB63EC6B"></a>
<h3 id="NLSPG-GUID-C4D197C1-81EE-4743-9845-2E29BB63EC6B" class="sect3">Character Class &#39;[: :]&#39; in Regular Expressions</h3>
<div>
<p>In English regular expressions, the range expression can be used to indicate a character class. For example, <code>[a-z]</code> can be used to indicate any lowercase letter. However, in non-English regular expressions, this approach is not accurate unless <code>a</code> is the first lowercase letter and <code>z</code> is the last lowercase letter in the collation sequence of the language.</p>
<p>The POSIX standard introduces a new syntactical element to enable specifying explicit character classes in a portable way. The <code>[: :]</code> syntax denotes the set of characters belonging to a certain character class. The character class definition is based on the character set classification data.</p>
</div>
</div>
<a id="NLSPG305"></a>
<div class="props_rev_3"><a id="GUID-CC657DEB-1A0A-4097-8D59-6723BCEDDD68"></a>
<h3 id="NLSPG-GUID-CC657DEB-1A0A-4097-8D59-6723BCEDDD68" class="sect3">Equivalence Class &#39;[= =]&#39; in Regular Expressions</h3>
<div>
<p>Oracle Database also supports equivalence classes through the <code>[= =]</code> syntax as recommended by the POSIX standard. A base letter and all of the accented versions of the base constitute an <span class="bold">equivalence class</span>. For example, the equivalence class <code>[=a=]</code> matches <code>&auml;</code> as well as <code>&acirc;</code>. The current implementation does not support matching of Unicode composed and decomposed forms for performance reasons. For example, &auml; (<code>a</code> umlaut) does not match &#39;<code>a</code> followed by umlaut&#39;.</p>
</div>
</div>
<a id="NLSPG782"></a><a id="NLSPG783"></a><a id="NLSPG784"></a><a id="NLSPG785"></a><a id="NLSPG786"></a><a id="NLSPG306"></a>
<div class="props_rev_3"><a id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2"></a>
<h3 id="NLSPG-GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2" class="sect3">Examples: Regular Expressions</h3>
<div>
<p>The following examples show regular expression matches.</p>
<div class="example" id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2__GUID-6AA9259D-C4BE-4ED1-BFE9-5101529750D7">
<p class="titleinexample">Example 5-16 Case-Insensitive Match Using the NLS_SORT Value</p>
<p>Case sensitivity in an Oracle Database regular expression match is determined at two levels: the <code>NLS_SORT</code> initialization parameter and the run-time match option. The <code>REGEXP</code> functions inherit the case-sensitivity behavior from the value of <code>NLS_SORT</code> by default. The value can also be explicitly overridden by the run-time match option <code>&#39;c&#39;</code> (case sensitive) or <code>&#39;i&#39;</code> (case insensitive).</p>
<pre dir="ltr">Expression: catalog(ue)?
NLS_SORT: GENERIC_M_CI
Matches: 
</pre>
<pre dir="ltr">&gt;&gt;Catalog&lt;&lt;
&gt;&gt;catalogue&lt;&lt;
&gt;&gt;CATALOG&lt;&lt;
</pre>
<p>Oracle Database SQL syntax:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_SORT=&#39;GENERIC_M_CI&#39;;
SQL&gt; SELECT col FROM test WHERE REGEXP_LIKE(col,&#39;catalog(ue)?&#39;);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2__GUID-5805E4BD-3FFC-4C22-8741-B80AE0BDB743">
<p class="titleinexample">Example 5-17 Case Insensitivity Overridden by the Run-time Match Option</p>
<pre dir="ltr">Expression: catalog(ue)?
NLS_SORT: GENERIC_M_CI
Match option: &#39;c&#39;
Matches:
</pre>
<pre dir="ltr">&gt;&gt;catalogue&lt;&lt;
</pre>
<pre dir="ltr">Does not match: 
</pre>
<pre dir="ltr">Catalog
CATALOG
</pre>
<p>Oracle Database SQL syntax:</p>
<pre dir="ltr">SQL&gt; ALTER SESSION SET NLS_SORT=&#39;GENERIC_M_CI&#39;;
SQL&gt; SELECT col FROM test WHERE REGEXP_LIKE(col,&#39;catalog(ue)?&#39;,&#39;c&#39;);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2__GUID-5FD95C1D-61CC-4581-9C42-33D05F0945F9">
<p class="titleinexample">Example 5-18 Matching with the Collation Element Operator [..]</p>
<pre dir="ltr">Expression: [^-a-[.ch.]]+  /*with NLS_SORT set to xspanish*/
Matches: 
</pre>
<pre dir="ltr">&gt;&gt;driver&lt;&lt;
</pre>
<pre dir="ltr">Does not match:
</pre>
<pre dir="ltr">cab
</pre>
<p>Oracle Database SQL syntax:</p>
<pre dir="ltr">SQL&gt; SELECT col FROM test WHERE REGEXP_LIKE(col,&#39;[^-a-[.ch.]]+&#39;);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2__GUID-E957715E-4A61-4B32-A63D-E622B578B3CE">
<p class="titleinexample">Example 5-19 Matching with the Character Class Operator [::]</p>
<p>This expression looks for 6-character strings with lowercase characters. Note that accented characters are matched as lowercase characters.</p>
<pre dir="ltr">Expression: [[:lower:]]{6}
Database character set: WE8ISO8859P1
Matches:
</pre>
<pre dir="ltr">&gt;&gt;ma&icirc;tre&lt;&lt;
&gt;&gt;m&ograve;bile&lt;&lt;
&gt;&gt;p&aacute;jaro&lt;&lt;
&gt;&gt;zur&uuml;ck&lt;&lt;
</pre>
<p>Oracle Database SQL syntax:</p>
<pre dir="ltr">SQL&gt; SELECT col FROM test WHERE REGEXP_LIKE(col,&#39;[[:lower:]]{6}&#39;);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2__GUID-F54BEEE4-5788-4B4E-9AA1-B0C00E6A7D92">
<p class="titleinexample">Example 5-20 Matching with the Base Letter Operator [==]</p>
<pre dir="ltr">Expression: r[[=e=]]sum[[=e=]]
Matches:
</pre>
<pre dir="ltr">&gt;&gt;resume&lt;&lt;
&gt;&gt;r&eacute;sum&eacute;&lt;&lt;
&gt;&gt;r&eacute;sume&lt;&lt;
&gt;&gt;resum&eacute;&lt;&lt;
</pre>
<p>Oracle Database SQL syntax:</p>
<pre dir="ltr">SQL&gt; SELECT col FROM test WHERE REGEXP_LIKE(col,&#39;r[[=e=]]sum[[=e=]]&#39;);
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso" id="GUID-9D2E25FE-49DE-4030-91A6-E97BA351E0E2__GUID-0034CAE8-F1D4-436C-A4D2-93E90D163658">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ADFNS1003" target="_blank" href="../ADFNS/adfns_regexp.htm#ADFNS1003"><span class="italic">Oracle Database Development Guide</span></a> for more information about regular expression syntax</p>
</li>
<li>
<p><a class="olink SQLRF20014" target="_blank" href="../SQLRF/functions161.htm#SQLRF20014"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about <code>REGEX</code> SQL functions</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2367">
<tr>
<td class="cellalignment2374">
<table class="cellalignment2372">
<tr>
<td class="cellalignment2371"><a href="ch4datetime.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2371"><a href="ch6unicode.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2376">
<table class="cellalignment2370">
<tr>
<td class="cellalignment2371"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2371"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2371"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2371"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2371"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2371"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>


</body></html>