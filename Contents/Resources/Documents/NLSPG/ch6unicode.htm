<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-78562"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Supporting%20Multilingual%20Databases%20with%20Unicode"></a><title>Supporting Multilingual Databases with Unicode</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="strict superset, superset, strict, UCS-2 encoding, Unicode, UCS-2 encoding, Unicode database, Unicode datatypes, creating a database with Unicode datatypes, multilingual data, specifying column lengths, multiple languages, storing data, storing documents in LOBs, LOBs, storing documents in multiple languages, indexes, creating for multilingual document search, multilingual document search, creating indexes, searching multilingual documents, multilexers, creating, CLOBs, creating for documents stored as CLOBs, BLOBs, creating indexes for documents stored as BLOBs"/>
<meta name="dcterms.created" content="2017-01-18T01:25:48Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Globalization Support Guide"/>
<meta name="dcterms.identifier" content="E41669-12"/>
<meta name="dcterms.isVersionOf" content="NLSPG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="ch5lingsort.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch7progrunicode.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41669-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-AA09A60E-123E-457C-ACE1-89E4634E492C"></a> <span id="PAGE" style="display:none;">10/20</span> <!-- End Header -->
<a id="NLSPG006"></a>
<h1 id="NLSPG-GUID-AA09A60E-123E-457C-ACE1-89E4634E492C" class="sect1"><span class="enumeration_chapter">6</span> Supporting Multilingual Databases with Unicode</h1>
<div>
<p>This chapter illustrates how to use the Unicode Standard in an Oracle Database environment. This chapter includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-FFF1D9C8-1465-4F0E-A84D-7776E7DB57CA">What is the Unicode Standard?</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-0028DFA6-2E69-4582-80C4-F63E46CED876">Features of the Unicode Standard</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-3676A834-54C1-46C6-8349-40524E195377">Implementing a Unicode Solution in the Database</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3">Unicode Case Studies</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-8426FD32-DBE4-49F3-B67C-2388122DD524">Designing Database Schemas to Support Multiple Languages</a></p>
</li>
</ul>
</div>
<a id="NLSPG307"></a>
<div class="props_rev_3"><a id="GUID-FFF1D9C8-1465-4F0E-A84D-7776E7DB57CA"></a>
<h2 id="NLSPG-GUID-FFF1D9C8-1465-4F0E-A84D-7776E7DB57CA" class="sect2">What is the Unicode Standard?</h2>
<div>
<p>The <a id="d50960e172" class="indexterm-anchor"></a>Unicode Standard is a character encoding system that defines every character in most of the spoken languages in the world.</p>
<p>To overcome the limitations of existing character encodings, several organizations began working on the creation of a global character set in the late 1980s. The need for this became even greater with the development of the World Wide Web in the mid-1990s. The Internet has changed how companies do business, with an emphasis on the global market that has made a universal character set a major requirement.</p>
<p>A global character set needs to fulfill the following conditions:</p>
<ul style="list-style-type: disc;">
<li>
<p>Contain all major living scripts</p>
</li>
<li>
<p>Support legacy data and implementations</p>
</li>
<li>
<p>Be simple enough that a single implementation of an application is sufficient for worldwide use</p>
</li>
</ul>
<p>A global character set should also have the following capabilities:</p>
<ul style="list-style-type: disc;">
<li>
<p>Support multilingual users and organizations</p>
</li>
<li>
<p>Conform to international standards</p>
</li>
<li>
<p>Enable worldwide interchange of data</p>
</li>
</ul>
<p>The Unicode Standard, which is now in wide use, meets all of the requirements and capabilities of a global character set. It provides a unique code value for every character, regardless of the platform, program, or language. It also defines a number of character properties and processing rules that help implement complex multilingual text processing correctly and consistently. Bi-directional behavior, word breaking, and line breaking are examples of such complex processing.</p>
<p>The Unicode Standard has been adopted by many software and hardware vendors. Many operating systems and browsers now support the standard. The Unicode Standard is required by other standards such as XML, Java, JavaScript, LDAP, and WML. It is also synchronized with the ISO/IEC 10646 standard.</p>
<p>Oracle Database introduced the Unicode Standard character encoding as the now obsolete database character set AL24UTFFSS in Oracle Database 7. Since then , incremental improvements have been made in each release to synchronize the support with the new published version of the standard. Oracle Database 12<span class="italic">c</span> (12.1.0.2) expands the support to version 6.2 of the Unicode Standard and introduces new linguistic collations complying with the Unicode Collation Algorithm (UCA).</p>
<div class="infoboxnotealso" id="GUID-FFF1D9C8-1465-4F0E-A84D-7776E7DB57CA__GUID-5C819C29-9813-4F44-AF8E-330118305E4C">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="http://www.unicode.org" target="_blank"><code>http://www.unicode.org</code></a> for more information about the Unicode Standard</p>
</li>
<li>
<p><a href="ch5lingsort.htm#GUID-B0971B89-63EF-409B-B14A-459B8211E764">Linguistic Sorting and Matching</a> for more information about the support for the Unicode Collation Algorithm</p>
</li>
</ul>
</div>
</div>
</div>
<a id="NLSPG308"></a>
<div class="props_rev_3"><a id="GUID-0028DFA6-2E69-4582-80C4-F63E46CED876"></a>
<h2 id="NLSPG-GUID-0028DFA6-2E69-4582-80C4-F63E46CED876" class="sect2">Features of the Unicode Standard</h2>
<div>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-EF49F9DF-CF5D-466A-8383-F5809F356DBE">Code Points and Supplementary Characters</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-2A1CA4B9-AE97-4610-B454-AFAF33277BB1">Unicode Encoding Forms</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-CD422E4F-C5C6-4E22-B95F-CA9CABBCB543">Support for the Unicode Standard in Oracle Database</a></p>
</li>
</ul>
</div>
<a id="NLSPG309"></a>
<div class="props_rev_3"><a id="GUID-EF49F9DF-CF5D-466A-8383-F5809F356DBE"></a>
<h3 id="NLSPG-GUID-EF49F9DF-CF5D-466A-8383-F5809F356DBE" class="sect3">Code Points and Supplementary Characters</h3>
<div>
<p>The first version of the Unicode Standard was a 16-bit, fixed-width encoding that used two bytes to encode each character. This enabled 65,536 characters to be represented. However, more characters need to be supported, especially additional CJK ideographs that are important for the Chinese, Japanese, and Korean markets.</p>
<p>The current definition of the Unicode Standard assigns a number to each character defined in the standard. These numbers are called code points, and are in the range 0 to 10FFFF hexadecimal. The Unicode notation for representing character code points is the prefix &#34;U+&#34; followed by the hexadecimal code point value. The code point value is left-padded with non-significant zeros to the minimum length of four. Characters with code points U+0000 to U+FFFF are called Basic Multilingual Plane characters. Characters with code points U+10000 to U+10FFFF are called supplementary characters.</p>
<p>Adding supplementary characters has increased the complexity of the Unicode 16-bit, fixed-width encoding form; however, this is still far less complex than managing hundreds of legacy encodings used before Unicode.</p>
</div>
</div>
<a id="NLSPG310"></a>
<div class="props_rev_3"><a id="GUID-2A1CA4B9-AE97-4610-B454-AFAF33277BB1"></a>
<h3 id="NLSPG-GUID-2A1CA4B9-AE97-4610-B454-AFAF33277BB1" class="sect3">Unicode Encoding Forms</h3>
<div>
<p><a id="d50960e466" class="indexterm-anchor"></a>The Unicode Standard defines a few encoding forms, which are mappings from Unicode code points to code units. Code units are integer values processed by applications. Code units may have 8, 16, or 32 bits. The standard encoding forms are: UTF-8, UTF-16, and UTF-32. There are also two compatibility encodings mentioned in the standard and its associated technical reports: UCS-2 and CESU-8. Conversion between different Unicode encodings is a simple bit-wise operation that is defined in the standard.</p>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-2F27E626-20B5-4F1B-920B-CEE6465633F7">UTF-8 Encoding Form</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-98BD4E64-99AE-4AD8-8CAD-EE438D988318">UTF-16 Encoding Form</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-42BCD57A-A380-4ED9-897F-0500A94803D1">UCS-2 Encoding Form</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-105BD4A2-6B6D-4478-903C-010F87E1D15E">UTF-32 Encoding Form</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-F3B0B4F7-B6D9-473D-840F-F98998F37981">CESU-8 Encoding Form</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-4177C4CE-24ED-4F07-BDCE-B9FABDEDCA0E">Examples: UTF-16, UTF-8, and UCS-2 Encoding</a></p>
</li>
</ul>
</div>
<a id="NLSPG311"></a>
<div class="props_rev_3"><a id="GUID-2F27E626-20B5-4F1B-920B-CEE6465633F7"></a>
<h4 id="NLSPG-GUID-2F27E626-20B5-4F1B-920B-CEE6465633F7" class="sect4">UTF-8 Encoding Form</h4>
<div>
<p>UTF-8 is the <a id="d50960e584" class="indexterm-anchor"></a><a id="d50960e586" class="indexterm-anchor"></a>8-bit encoding form of Unicode. It is a variable-width encoding and a <span class="bold">strict superset</span> of ASCII. This means that each and every character in the ASCII character set is available in UTF-8 with the same byte representation. One Unicode character can be represented by 1 byte, 2 bytes, 3 bytes, or 4 bytes in the UTF-8 encoding form. Characters from the European and Middle Eastern scripts are represented in either 1 or 2 bytes. Characters from most Asian scripts are represented in 3 bytes. Supplementary characters are represented in 4 bytes.</p>
<p>UTF-8 is the Unicode encoding used for HTML and most Internet browsers.</p>
<p>The benefits of UTF-8 are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>Compact storage requirement for European scripts because it is a strict superset of ASCII</p>
</li>
<li>
<p>Ease of migration between ASCII-based character sets and UTF-8</p>
<div class="infoboxnotealso" id="GUID-2F27E626-20B5-4F1B-920B-CEE6465633F7__GUID-F472BCE9-12E0-4543-B9E5-BDF20BC31067">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="ch6unicode.htm#GUID-EF49F9DF-CF5D-466A-8383-F5809F356DBE">Code Points and Supplementary Characters</a>&#34;</span></p>
</li>
<li>
<p><a href="appunicode.htm#GUID-567C403F-7A68-4A8A-8404-ECD89B99799E__CACHBDGH" title="This table is described in the preceding text">Table B-2</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<a id="NLSPG313"></a>
<div class="props_rev_3"><a id="GUID-98BD4E64-99AE-4AD8-8CAD-EE438D988318"></a>
<h4 id="NLSPG-GUID-98BD4E64-99AE-4AD8-8CAD-EE438D988318" class="sect4">UTF-16 Encoding Form</h4>
<div>
<p>UTF-16 <a id="d50960e693" class="indexterm-anchor"></a><a id="d50960e695" class="indexterm-anchor"></a>is the 16-bit encoding form of Unicode. One character can be represented by either one 16-bit integer value (two bytes) or two 16-bit integer values (four bytes) in UTF-16. All characters from the Basic Multilingual Plane, which are most characters used in everyday text, are represented in two bytes. Supplementary characters are represented in four bytes. The two code units (integer values) encoding a single supplementary character are called a surrogate pair.</p>
<p>UTF-16 is the main Unicode encoding used for internal processing by Java since version J2SE 5.0 and by Microsoft Windows since version 2000.</p>
<p>The benefits of UTF-16 over UTF-8 are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>More compact storage for Asian scripts because most of the commonly used Asian characters are represented in two bytes.</p>
</li>
<li>
<p>Better compatibility with Java and Microsoft clients</p>
<div class="infoboxnotealso" id="GUID-98BD4E64-99AE-4AD8-8CAD-EE438D988318__GUID-3A056F05-FE9E-4484-80D6-01836C0FEEC4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="ch6unicode.htm#GUID-EF49F9DF-CF5D-466A-8383-F5809F356DBE">Code Points and Supplementary Characters</a>&#34;</span></p>
</li>
<li>
<p><a href="appunicode.htm#GUID-567C403F-7A68-4A8A-8404-ECD89B99799E__g635384" title="This table is described in the preceding text">Table B-1</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<a id="NLSPG312"></a>
<div class="props_rev_3"><a id="GUID-42BCD57A-A380-4ED9-897F-0500A94803D1"></a>
<h4 id="NLSPG-GUID-42BCD57A-A380-4ED9-897F-0500A94803D1" class="sect4">UCS-2 Encoding Form</h4>
<div>
<p>UCS-2 is not an official Unicode encoding form. The name originally comes from older versions of the ISO/IEC 10646 standard, before the introduction of the supplementary characters. Therefore, it is currently used to refer to the UTF-16 encoding form stripped from support for supplementary characters and surrogate pairs. That is, surrogate pairs are processed in UCS-2 as two separate characters. Applications supporting UCS-2 but not UTF-16 should not process text containing supplementary characters, as they may incorrectly split surrogate pairs when dividing text into fragments. They are also generally incapable of displaying such text.</p>
<p>UCS-2 is the Unicode encoding used for internal processing by Java before version J2SE 5.0 and by Microsoft Windows NT.</p>
</div>
</div>
<a id="NLSPG1023"></a>
<div class="props_rev_3"><a id="GUID-105BD4A2-6B6D-4478-903C-010F87E1D15E"></a>
<h4 id="NLSPG-GUID-105BD4A2-6B6D-4478-903C-010F87E1D15E" class="sect4">UTF-32 Encoding Form</h4>
<div>
<p>UTF-32 is the 32-bit encoding form of Unicode. Each Unicode code point is represented by a single 32-bit, fixed-width integer value. If is the simplest encoding form, but very space inefficient. For English text, it quadruples the storage requirements compared to UTF-8 and doubles when compared to UTF16. Therefore, UTF-32 is sometimes used as an intermediate form in internal text processing, but it is generally not used for information interchange.</p>
<p>In Java, since version J2SE 5.0, selected APIs have been enhanced to operate on characters in the 32-bit form, stored as <code>int</code> values.</p>
</div>
</div>
<a id="NLSPG1024"></a>
<div class="props_rev_3"><a id="GUID-F3B0B4F7-B6D9-473D-840F-F98998F37981"></a>
<h4 id="NLSPG-GUID-F3B0B4F7-B6D9-473D-840F-F98998F37981" class="sect4">CESU-8 Encoding Form</h4>
<div>
<p>CESU-8 is not part of the core Unicode Standard. It is described in the Unicode Technical Report #26. CESU-8 is a compatibility encoding form identical to UTF-8 except for its representation of supplementary characters. In CESU-8, supplementary characters are represented as surrogate pairs, as in UTF-16. To obtain the CESU-8 encoding of a supplementary character, encode the character in UTF-16 first and then treat each of the surrogate code units as a code point with the same value. Then, apply the UTF-8 encoding rules (bit transformation) to each of the code points. This will yield two three-byte representations, six bytes in total.</p>
<p>CESU-8 has only two benefits:</p>
<ul style="list-style-type: disc;">
<li>
<p>It has the same binary sorting order as UTF-16.</p>
</li>
<li>
<p>It uses the same number of codes per character (one or two). This is important for character length semantics in string processing.</p>
</li>
</ul>
<p>In general, the CESU-8 encoding form should be avoided as much as possible.</p>
</div>
</div>
<a id="NLSPG787"></a><a id="NLSPG314"></a>
<div class="props_rev_3"><a id="GUID-4177C4CE-24ED-4F07-BDCE-B9FABDEDCA0E"></a>
<h4 id="NLSPG-GUID-4177C4CE-24ED-4F07-BDCE-B9FABDEDCA0E" class="sect4">Examples: UTF-16, UTF-8, and UCS-2 Encoding</h4>
<div>
<p>The following table shows some characters and their character codes in UTF-16, UTF-8, and UCS-2 encoding. The last character is a treble clef (a music symbol), a supplementary character.</p>
<div class="figure" id="GUID-4177C4CE-24ED-4F07-BDCE-B9FABDEDCA0E__I1006859"><img width="495" height="171" src="img/GUID-DD5D530D-BDBD-478D-96BC-D106331FB4FA-default.gif" alt="Description of GUID-DD5D530D-BDBD-478D-96BC-D106331FB4FA-print.eps follows" title="Description of GUID-DD5D530D-BDBD-478D-96BC-D106331FB4FA-print.eps follows"/><br/>
<a href="img_text/GUID-DD5D530D-BDBD-478D-96BC-D106331FB4FA-print.htm">Description of the illustration GUID-DD5D530D-BDBD-478D-96BC-D106331FB4FA-print.eps</a></div>
<!-- class="figure" --></div>
</div>
</div>
<a id="NLSPG788"></a><a id="NLSPG315"></a>
<div class="props_rev_3"><a id="GUID-CD422E4F-C5C6-4E22-B95F-CA9CABBCB543"></a>
<h3 id="NLSPG-GUID-CD422E4F-C5C6-4E22-B95F-CA9CABBCB543" class="sect3">Support for the Unicode Standard in Oracle Database</h3>
<div>
<p>Oracle Database <a id="d50960e1129" class="indexterm-anchor"></a>began supporting the Unicode character set as a database character set in release 7. <a href="ch6unicode.htm#GUID-CD422E4F-C5C6-4E22-B95F-CA9CABBCB543__g1008165" title="This table is described in the preceding text">Table 6-1</a> summarizes the Unicode character sets supported by Oracle Database.</p>
<div class="tblformal" id="GUID-CD422E4F-C5C6-4E22-B95F-CA9CABBCB543__g1008165">
<p class="titleintable">Table 6-1 Unicode Character Sets Supported by Oracle Database</p>
<table class="cellalignment2377" title="Unicode Character Sets Supported by Oracle Database " summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2490" id="d50960e1153">Character Set</th>
<th class="cellalignment2391" id="d50960e1156">Supported in RDBMS Release</th>
<th class="cellalignment2391" id="d50960e1159">Unicode Encoding Form</th>
<th class="cellalignment2457" id="d50960e1162">Unicode Version</th>
<th class="cellalignment2391" id="d50960e1165">Database Character Set</th>
<th class="cellalignment2391" id="d50960e1168">National Character Set</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2491" id="d50960e1173" headers="d50960e1153">
<p><a id="d50960e1175" class="indexterm-anchor"></a><a id="d50960e1177" class="indexterm-anchor"></a>AL24UTFFSS</p>
</td>
<td class="cellalignment2393" headers="d50960e1173 d50960e1156">
<p>7.2 - 8<span class="italic">i</span></p>
</td>
<td class="cellalignment2393" headers="d50960e1173 d50960e1159">
<p>UTF-8</p>
</td>
<td class="cellalignment2459" headers="d50960e1173 d50960e1162">
<p>1.1</p>
</td>
<td class="cellalignment2393" headers="d50960e1173 d50960e1165">
<p>Yes</p>
</td>
<td class="cellalignment2393" headers="d50960e1173 d50960e1168">
<p>No</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2491" id="d50960e1200" headers="d50960e1153">
<p>UTF8</p>
</td>
<td class="cellalignment2393" headers="d50960e1200 d50960e1156">
<p>8.0 - 12<span class="italic">c</span></p>
</td>
<td class="cellalignment2393" headers="d50960e1200 d50960e1159">
<p>CESU-8</p>
</td>
<td class="cellalignment2459" headers="d50960e1200 d50960e1162">
<p>For Oracle Database release 8.0 through Oracle8<span class="italic">i</span> Release 8.1.6: 2.1</p>
<p>For Oracle8<span class="italic">i</span> Database release 8.1.7 and later: 3.0</p>
</td>
<td class="cellalignment2393" headers="d50960e1200 d50960e1165">
<p>Yes</p>
</td>
<td class="cellalignment2393" headers="d50960e1200 d50960e1168">
<p>Yes (Oracle9<span class="italic">i</span> Database and newer only)</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2491" id="d50960e1232" headers="d50960e1153">
<p><a id="d50960e1234" class="indexterm-anchor"></a><a id="d50960e1236" class="indexterm-anchor"></a>UTFE</p>
</td>
<td class="cellalignment2393" headers="d50960e1232 d50960e1156">
<p>8.0 - 12<span class="italic">c</span></p>
</td>
<td class="cellalignment2393" headers="d50960e1232 d50960e1159">
<p>UTF-EBCDIC</p>
</td>
<td class="cellalignment2459" headers="d50960e1232 d50960e1162">
<p>For Oracle8<span class="italic">i</span> Database releases 8.0 through 8.1.6: 2.1</p>
<p>For Oracle8<span class="italic">i</span> Database release 8.1.7 and later: 3.0</p>
</td>
<td class="cellalignment2393" headers="d50960e1232 d50960e1165">
<p>Yes (see Note 1)</p>
</td>
<td class="cellalignment2393" headers="d50960e1232 d50960e1168">
<p>No</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2491" id="d50960e1267" headers="d50960e1153">
<p><a id="d50960e1269" class="indexterm-anchor"></a><a id="d50960e1271" class="indexterm-anchor"></a>AL32UTF8</p>
</td>
<td class="cellalignment2393" headers="d50960e1267 d50960e1156">
<p>9<span class="italic">i</span> - 12<span class="italic">c</span></p>
</td>
<td class="cellalignment2393" headers="d50960e1267 d50960e1159">
<p>UTF-8</p>
</td>
<td class="cellalignment2459" headers="d50960e1267 d50960e1162">
<p>Oracle9<span class="italic">i</span> Database release 1: 3.0</p>
<p>Oracle9<span class="italic">i</span> Database release 2: 3.1</p>
<p>Oracle Database 10<span class="italic">g</span>, release 1: 3.2</p>
<p>Oracle Database 10<span class="italic">g</span>, release 2: 4.0</p>
<p>Oracle Database 11<span class="italic">g</span>: 5.0</p>
<p>Oracle Database 12<span class="italic">c</span>: 6.2</p>
</td>
<td class="cellalignment2393" headers="d50960e1267 d50960e1165">
<p>Yes</p>
</td>
<td class="cellalignment2393" headers="d50960e1267 d50960e1168">
<p>No</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2491" id="d50960e1325" headers="d50960e1153">
<p><a id="d50960e1327" class="indexterm-anchor"></a><a id="d50960e1329" class="indexterm-anchor"></a>AL16UTF16</p>
</td>
<td class="cellalignment2393" headers="d50960e1325 d50960e1156">
<p>9<span class="italic">i</span> - 12<span class="italic">c</span></p>
</td>
<td class="cellalignment2393" headers="d50960e1325 d50960e1159">
<p>UTF-16</p>
</td>
<td class="cellalignment2459" headers="d50960e1325 d50960e1162">
<p>Oracle9<span class="italic">i</span> Database release 1: 3.0</p>
<p>Oracle9<span class="italic">i</span> Database release 2: 3.1</p>
<p>Oracle Database 10<span class="italic">g</span>, release 1: 3.2</p>
<p>Oracle Database 10<span class="italic">g</span>, release 2: 4.0</p>
<p>Oracle Database 11<span class="italic">g</span>: 5.0</p>
<p>Oracle Database 12<span class="italic">c</span>: 6.2</p>
</td>
<td class="cellalignment2393" headers="d50960e1325 d50960e1165">
<p>No</p>
</td>
<td class="cellalignment2393" headers="d50960e1325 d50960e1168">
<p>Yes</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Note 1: UTF-EBCDIC is a compatibility encoding form specific to EBCDIC-based systems, such as IBM z/OS or Fujitsu BS2000. It is described in the Unicode Technical Report #16. Oracle character set UTFE is a partial implementation of the UTF-EBCDIC encoding form, supported on ECBDIC-based platforms only. Oracle Database does not support five-byte sequences of the this encoding form, limiting the supported code point range to U+000 - U+3FFFF. The use of the UTFE character set is discouraged.</p>
</div>
</div>
</div>
<a id="NLSPG316"></a>
<div class="props_rev_3"><a id="GUID-3676A834-54C1-46C6-8349-40524E195377"></a>
<h2 id="NLSPG-GUID-3676A834-54C1-46C6-8349-40524E195377" class="sect2">Implementing a Unicode Solution in the Database</h2>
<div>
<p>Unicode characters can be stored in an Oracle database in two ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>You can create a database that enables you to store UTF-8 encoded characters as SQL <code>CHAR</code> data types (<code>CHAR</code>, <code>VARCHAR2</code>, <code>CLOB</code>, and <code>LONG)</code>.</p>
</li>
<li>
<p>You can store Unicode data in either the UTF-16 or CESU-8 encoding form in SQL <code>NCHAR</code> data types (<code>NCHAR</code>, <code>NVARCHAR2</code>, and <code>NCLOB</code>). The SQL <code>NCHAR</code> data types are called Unicode data types because they are used only for storing Unicode data.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-3676A834-54C1-46C6-8349-40524E195377__GUID-80DD35C7-A603-421F-83D8-2B77AE157BE0">
<p class="notep1">Note:</p>
<p>You can combine both Unicode solutions, if required by different applications running in a single database.</p>
</div>
<p>The following sections explain how to use the two Unicode solutions and how to choose between them:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-EB57AB68-A390-4814-81DD-6B78D33310CC">Enabling Multilingual Support for Whole Databases</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-95787DA3-08D4-41A7-9418-2A36C602014E">Enabling Multilingual Support with Unicode Data Types</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-2DF950F1-47EB-4B82-A58E-762714C7FB7D">How to Choose Between Unicode Solutions</a></p>
</li>
</ul>
</div>
<a id="NLSPG789"></a><a id="NLSPG317"></a>
<div class="props_rev_3"><a id="GUID-EB57AB68-A390-4814-81DD-6B78D33310CC"></a>
<h3 id="NLSPG-GUID-EB57AB68-A390-4814-81DD-6B78D33310CC" class="sect3">Enabling Multilingual Support for Whole Databases</h3>
<div>
<p>The database character set specifies the encoding to be used in the SQL <code>CHAR</code> data types as well as the metadata such as table names, column names, and SQL statements. A <span class="bold">Unicode Standard-enabled database</span> is a database with a Unicode Standard-compliant character set as the database character set. There are two database Oracle character sets that implement the Unicode Standard.</p>
<ul style="list-style-type: disc;">
<li>
<p>AL32UTF8</p>
<p>The AL32UTF8 <a id="d50960e1608" class="indexterm-anchor"></a>character set implements the UTF-8 encoding form and supports the latest version of the Unicode standard. It encodes characters in one, two, three, or four bytes. Supplementary characters require four bytes. It is for ASCII-based platforms.</p>
<p>AL32UTF8 is the recommended database character set for any new deployment of Oracle Database as it provides the optimal support for multilingual applications, such as Internet websites and applications for multinational companies.</p>
</li>
<li>
<p>UTF8</p>
<p>The <a id="d50960e1618" class="indexterm-anchor"></a>UTF8 character set implements the CESU-8 encoding form and encodes characters in one, two, or three bytes. It is for ASCII-based platforms.</p>
<p>Supplementary characters inserted into a UTF8 database are stored in the CESU-8 encoding form. Each character is represented by two three-byte codes and hence occupies six bytes of memory in total.</p>
<p>The properties of characters in the UTF8 character set are not guaranteed to be updated beyond version 3.0 of the Unicode Standard.</p>
<p>Oracle recommends that you switch to AL32UTF8 for full support of the supplementary characters and the most recent versions of the Unicode Standard.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-EB57AB68-A390-4814-81DD-6B78D33310CC__GUID-8619B281-DC19-412C-BB88-1405A05D6B9B">
<p class="notep1">Note:</p>
<p>Specify the database character set when you create the database.</p>
</div>
<div class="example" id="GUID-EB57AB68-A390-4814-81DD-6B78D33310CC__GUID-1A04F927-4C29-4D57-8BFC-F8F425183E72">
<p class="titleinexample">Example 6-1 Creating a Database with a Unicode Character Set</p>
<p>To <a id="d50960e1635" class="indexterm-anchor"></a>create a database with the AL32UTF8 character set, use the <code>CREATE</code> <code>DATABASE</code> statement and include the <code>CHARACTER SET AL32UTF8</code> clause. For example:</p>
<pre dir="ltr">CREATE DATABASE sample 
</pre>
<pre dir="ltr">CONTROLFILE REUSE 
LOGFILE 
</pre>
<pre dir="ltr">GROUP 1 (&#39;diskx:log1.log&#39;, &#39;disky:log1.log&#39;) SIZE 50K, 
GROUP 2 (&#39;diskx:log2.log&#39;, &#39;disky:log2.log&#39;) SIZE 50K 
</pre>
<pre dir="ltr">MAXLOGFILES 5 
MAXLOGHISTORY 100 
MAXDATAFILES 10 
MAXINSTANCES 2 
ARCHIVELOG
CHARACTER SET AL32UTF8
NATIONAL CHARACTER SET AL16UTF16 
DATAFILE 
</pre>
<pre dir="ltr">&#39;disk1:df1.dbf&#39; AUTOEXTEND ON, 
&#39;disk2:df2.dbf&#39; AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED 
</pre>
<pre dir="ltr">DEFAULT TEMPORARY TABLESPACE temp_ts 
UNDO TABLESPACE undo_ts 
SET TIME_ZONE = &#39;+00:00&#39;;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="NLSPG790"></a><a id="NLSPG318"></a>
<div class="props_rev_3"><a id="GUID-95787DA3-08D4-41A7-9418-2A36C602014E"></a>
<h3 id="NLSPG-GUID-95787DA3-08D4-41A7-9418-2A36C602014E" class="sect3">Enabling Multilingual Support with Unicode Data Types</h3>
<div>
<p>An alternative to storing Unicode data in the database is to use the SQL <code>NCHAR</code> data types (<code>NCHAR</code>, <code>NVARCHAR2</code>, <code>NCLOB</code>). You can store Unicode characters in columns of these data types regardless of how the database character set has been defined. The <code>NCHAR</code> data type is exclusively a Unicode data type, which means that it stores data encoded in a Unicode encoding form.</p>
<p>Oracle recommends using SQL <code>CHAR</code>, <code>VARCHAR2</code>, and <code>CLOB</code> data types in AL32UTF8 database to store Unicode character data. SQL <code>NCHAR</code>, <code>NVARCHAR2</code>, and <code>NCLOB</code> data types are not supported by some database features. Most notably, Oracle Text and XML DB do not support these data types.</p>
<p>You can create a table using the <code>NVARCHAR2</code> and <code>NCHAR</code> data types. The column length specified for the <code>NCHAR</code> and <code>NVARCHAR2</code> columns always equals the number of characters instead of the number of bytes:</p>
<pre dir="ltr">CREATE TABLE product_information 
    ( product_id          NUMBER(6) 
    , product_name        NVARCHAR2(100) 
    , product_description VARCHAR2(1000));
</pre>
<p>The encoding used in the SQL <code>NCHAR</code> data types is the <a id="d50960e1797" class="indexterm-anchor"></a><a id="d50960e1799" class="indexterm-anchor"></a>national character set specified for the database. You can specify one of the following Oracle character sets as the national character set:</p>
<ul style="list-style-type: disc;">
<li>
<p>AL16UTF16</p>
<p>This is the default character set and recommended for SQL <code>NCHAR</code> data types. This character set encodes Unicode data in the UTF-16 encoding form. It supports supplementary characters, which are stored as four bytes.</p>
</li>
<li>
<p>UTF8</p>
<p>When UTF8 is specified for SQL <code>NCHAR</code> data types, the data stored in the SQL data types is in CESU-8 encoding form. The UTF8 character set is deprecated.</p>
</li>
</ul>
<p>You can specify the national character set for the SQL <code>NCHAR</code> data types when you create a database using the <code>CREATE</code> <code>DATABASE</code> statement with the <code>NATIONAL CHARACTER SET</code> clause. The following statement creates a database with WE8ISO8859P1 as the database character set and AL16UTF16 as the national character set.</p>
<div class="example" id="GUID-95787DA3-08D4-41A7-9418-2A36C602014E__GUID-6DEC7F13-68A6-4F71-A777-C40946E122A3">
<p class="titleinexample">Example 6-2 Creating a Database with a National Character Set</p>
<pre dir="ltr">CREATE DATABASE sample 
</pre>
<pre dir="ltr">CONTROLFILE REUSE 
LOGFILE 
</pre>
<pre dir="ltr">GROUP 1 (&#39;diskx:log1.log&#39;, &#39;disky:log1.log&#39;) SIZE 50K, 
GROUP 2 (&#39;diskx:log2.log&#39;, &#39;disky:log2.log&#39;) SIZE 50K 
</pre>
<pre dir="ltr">MAXLOGFILES 5 
MAXLOGHISTORY 100 
MAXDATAFILES 10 
MAXINSTANCES 2 
ARCHIVELOG
CHARACTER SET WE8ISO8859P1
NATIONAL CHARACTER SET AL16UTF16 
DATAFILE 
</pre>
<pre dir="ltr">&#39;disk1:df1.dbf&#39; AUTOEXTEND ON, 
&#39;disk2:df2.dbf&#39; AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED 
</pre>
<pre dir="ltr">DEFAULT TEMPORARY TABLESPACE temp_ts 
UNDO TABLESPACE undo_ts 
SET TIME_ZONE = &#39;+00:00&#39;;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="NLSPG319"></a>
<div class="props_rev_3"><a id="GUID-2DF950F1-47EB-4B82-A58E-762714C7FB7D"></a>
<h3 id="NLSPG-GUID-2DF950F1-47EB-4B82-A58E-762714C7FB7D" class="sect3">How to Choose Between Unicode Solutions</h3>
<div>
<p>Oracle recommends that you deploy all new Oracle databases in the database character set AL32UTF8 and you use SQL <code>VARCHAR2</code>, <code>CHAR</code>, and <code>CLOB</code> data types to store character data. The SQL <code>NVARCHAR2</code>, <code>NCHAR</code>, and <code>NCLOB</code> data types should be considered only if:</p>
<ul style="list-style-type: disc;">
<li>
<p>You have an existing database with a non-Unicode database character set and a legacy application, for which the business costs of migrating to Unicode would be inacceptable, and you need to add support for multilingual data in a small part of the application or in a small new module for which a separate database would not make much sense, or</p>
</li>
<li>
<p>You need to create an application that has to support multilingual data and which must be installable in any of Oracle database deployed by your customers.</p>
</li>
</ul>
<p>For the database character set in a Unicode Standard-enabled database, always select AL32UTF8. For the national character set, select AL16UTF16. If you consider choosing the deprecated UTF8 because of the lower storage requirements for English character data, first consider other options, such as data compression or increasing disk storage. Later migration to AL16UTF16 may be expensive, if a lot of data accumulates in the database.</p>
</div>
</div>
</div>
<a id="NLSPG795"></a><a id="NLSPG796"></a><a id="NLSPG323"></a>
<div class="props_rev_3"><a id="GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3"></a>
<h2 id="NLSPG-GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3" class="sect2">Unicode Case Studies</h2>
<div>
<p>This section describes typical scenarios for storing Unicode characters in an Oracle database:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3__i1007284">Example 6-3</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3__i1007297">Example 6-4</a></p>
</li>
</ul>
<div class="example" id="GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3__i1007284">
<p class="titleinexample">Example 6-3 Unicode Solution with a Unicode Standard-Enabled Database</p>
<p>An American <a id="d50960e2041" class="indexterm-anchor"></a>company running a Java application would like to add German and French support in the next release of the application. They would like to add Japanese support at a later time. The company currently has the following system configuration:</p>
</div>
<!-- class="example" -->
<ul style="list-style-type: disc;">
<li>
<p>The existing database has a database character set of US7ASCII.</p>
</li>
<li>
<p>All character data in the existing database is composed of ASCII characters.</p>
</li>
<li>
<p>PL/SQL stored procedures are used in the database.</p>
</li>
<li>
<p>The database is about 300 GB, with very little data stored in <code>CLOB</code> columns.</p>
</li>
<li>
<p>There is a nightly downtime of 4 hours.</p>
</li>
</ul>
<p>In this case, a typical solution is to choose AL32UTF8 for the database character set because of the following reasons:</p>
<ul style="list-style-type: disc;">
<li>
<p>The database is very large and the scheduled downtime is short. Fast migration of the database to a Unicode character set is vital. Because the database is in US7ASCII, the easiest and fastest way of enabling the database to support the Unicode Standard is to switch the database character set to AL32UTF8 by using the Database Migration Assistant for Unicode (DMU). No data conversion is required for columns other than <code>CLOB</code> because US7ASCII is a subset of AL32UTF8.</p>
</li>
<li>
<p>Because most of the code is written in Java and PL/SQL, changing the database character set to AL32UTF8 is unlikely to break existing code. Unicode support is automatically enabled in the application.</p>
</li>
</ul>
<div class="example" id="GUID-007A0077-DEBA-475D-A1A1-10DD83DE46C3__i1007297">
<p class="titleinexample">Example 6-4 Unicode Solution with Unicode Data Types</p>
<p>A European <a id="d50960e2082" class="indexterm-anchor"></a>company that runs its legacy applications mainly on Windows platforms wants to add a new small Windows application written in Visual C/C++. The new application will use the existing database to support Japanese and Chinese customer names. The company currently has the following system configuration:</p>
</div>
<!-- class="example" -->
<ul style="list-style-type: disc;">
<li>
<p>The existing database has a database character set of WE8MSWIN1252.</p>
</li>
<li>
<p>All character data in the existing database is composed of Western European characters.</p>
</li>
<li>
<p>The database is around 500 GB with a lot of <code>CLOB</code> columns.</p>
</li>
<li>
<p>Support for full-text search and XML storage is not required in the new application</p>
</li>
</ul>
<p>A typical solution is to take the following actions:</p>
<ul style="list-style-type: disc;">
<li>
<p>Use <code>NCHAR</code> and <code>NVARCHAR2</code> data types to store Unicode characters</p>
</li>
<li>
<p>Keep WE8MSWIN1252 as the database character set</p>
</li>
<li>
<p>Use AL16UTF16 as the national character set</p>
</li>
</ul>
<p>The reasons for this solution are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Migrating the existing database to a Unicode database requires data conversion because the database character set is WE8MSWIN1252 (a Windows Latin-1 character set), which is not a subset of AL32UTF8. Also, a lot of data is stored in <code>CLOB</code> columns. All <code>CLOB</code> values in a database, even if they contain only ASCII characters, must be converted when migrating from a single-byte database character set, such as US7ASCII or WE8MSWIN1252 to AL32UTF8. As a result, there will be a lot of overhead in converting the data to AL32UTF8.</p>
</li>
<li>
<p>The additional languages are supported in the new application only. It does not depend on the existing applications or schemas. It is simpler to use the Unicode data type in the new schema and keep the existing schemas unchanged.</p>
</li>
<li>
<p>Only customer name columns require Unicode character set support. Using a single <code>NCHAR</code> column meets the customer&#39;s requirements without migrating the entire database.</p>
</li>
<li>
<p>The new application does not need database features that do not support SQL <code>NCHAR</code> data types.</p>
</li>
<li>
<p>The lengths of the SQL <code>NCHAR</code> data types are defined as number of characters. This is the same as how they are treated when using <code>wchar_t</code> strings in Windows C/C++ programs. This reduces programming complexity.</p>
</li>
<li>
<p>Existing applications using the existing schemas are unaffected.</p>
</li>
</ul>
</div>
</div>
<a id="NLSPG324"></a>
<div class="props_rev_3"><a id="GUID-8426FD32-DBE4-49F3-B67C-2388122DD524"></a>
<h2 id="NLSPG-GUID-8426FD32-DBE4-49F3-B67C-2388122DD524" class="sect2">Designing Database Schemas to Support Multiple Languages</h2>
<div>
<p>In addition to <a id="d50960e2235" class="indexterm-anchor"></a><a id="d50960e2239" class="indexterm-anchor"></a>choosing a Unicode solution, the following issues should be taken into consideration when the database schema is designed to support multiple languages:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-6B549B3B-90DE-478B-A183-553D1A018996">Specifying Column Lengths for Multilingual Data</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-C72E6288-D724-428F-847D-995FCF2D9F59">Storing Data in Multiple Languages</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-68A4CB7B-2359-4E1A-B966-EAD9823FD00D">Storing Documents in Multiple Languages in LOB Data Types</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-9E4134BD-B88C-4868-8DFC-86B50948FABF">Creating Indexes for Searching Multilingual Document Contents</a></p>
</li>
</ul>
</div>
<a id="NLSPG1025"></a><a id="NLSPG325"></a>
<div class="props_rev_3"><a id="GUID-6B549B3B-90DE-478B-A183-553D1A018996"></a>
<h3 id="NLSPG-GUID-6B549B3B-90DE-478B-A183-553D1A018996" class="sect3">Specifying Column Lengths for Multilingual Data</h3>
<div>
<p>When you use <code>NCHAR</code> and <code>NVARCHAR2</code> data types for storing multilingual data, the column size specified for a column is defined in number of characters. (This number of characters means the number of encoded Unicode code points, except that supplementary Unicode characters represented through surrogate pairs count as two characters.) <a href="ch6unicode.htm#GUID-6B549B3B-90DE-478B-A183-553D1A018996__CIAGFJGJ" title="Maximum Data Type Size">Table 6-2</a> shows the maximum size of the <code>NCHAR</code> and <code>NVARCHAR2</code> data types for the AL16UTF16 and UTF8 national character sets.</p>
<div class="tblformal" id="GUID-6B549B3B-90DE-478B-A183-553D1A018996__CIAGFJGJ">
<p class="titleintable">Table 6-2 Maximum Data Type Size</p>
<table class="cellalignment2377" title="Maximum Data Type Size" summary="Maximum Data Type Size">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2434" id="d50960e2375">National Character Set</th>
<th class="cellalignment2395" id="d50960e2378">Maximum Column Size of NCHAR Data Type</th>
<th class="cellalignment2482" id="d50960e2381">Maximum Column Size of NVARCHAR2 Data Type (When MAX_STRING_SIZE = STANDARD)</th>
<th class="cellalignment2439" id="d50960e2384">Maximum Column Size of NVARCHAR2 Data Type (When MAX_STRING_SIZE = EXTENDED)</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2437" id="d50960e2389" headers="d50960e2375">
<p>AL16UTF16</p>
</td>
<td class="cellalignment2397" headers="d50960e2389 d50960e2378">
<p>1000 characters</p>
</td>
<td class="cellalignment2484" headers="d50960e2389 d50960e2381">
<p>2000 characters</p>
</td>
<td class="cellalignment2441" headers="d50960e2389 d50960e2384">
<p>16383 characters</p>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2437" id="d50960e2402" headers="d50960e2375">
<p>UTF8</p>
</td>
<td class="cellalignment2397" headers="d50960e2402 d50960e2378">
<p>2000 characters</p>
</td>
<td class="cellalignment2484" headers="d50960e2402 d50960e2381">
<p>4000 characters</p>
</td>
<td class="cellalignment2441" headers="d50960e2402 d50960e2384">
<p>32767 characters</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>This maximum size in characters is a constraint, not guaranteed capacity of the data type. The maximum capacity is expressed in bytes. For the <code>NCHAR</code> data type, the maximum capacity is 2000 bytes. For <code>NVARCHAR2</code>, it is 4000 bytes, if the initialization parameter <code>MAX_STRING_SIZE</code> is set to <code>STANDARD</code>, and 32767 bytes, if the initialization parameter <code>MAX_STRING_SIZE</code> is set to <code>EXTENDED</code>. When the national character set is AL16UTF16, the maximum number of characters never occupies more bytes than the maximum capacity, as each character (in an Oracle sense) occupies exactly 2 bytes. However, if the national character set is UTF8, the maximum number of characters can be stored only if all these characters are from the Unicode Basic Latin range, which corresponds to the ASCII standard. Other Unicode characters occupy more than one byte each in UTF8 and presence of such characters in a 4000 character string makes the string longer than the maximum 4000 bytes. If you want national character set columns to be able to hold the declared number of characters in any national character set, do not declare <code>NCHAR</code> columns longer than 2000/3=666 characters and <code>NVARCHAR2</code> columns longer than 4000/3=1333 or 32767/3=10922 characters, depending on the <code>MAX_STRING_SIZE</code> initialization parameter.</p>
<p>When you use <code>CHAR</code> and <code>VARCHAR2</code> data types for storing multilingual data, the maximum length specified for each column is, by default, in number of bytes. If the database needs to support Thai, Arabic, or multibyte languages such as Chinese and Japanese, then the maximum lengths of the <code>CHAR</code>, <code>VARCHAR</code>, and <code>VARCHAR2</code> columns may need to be extended. This is because the number of bytes required to encode these languages in UTF8 or AL32UTF8 may be significantly larger than the number of bytes for encoding English and Western European languages. For example, one Thai character in the Thai character set requires 3 bytes in UTF8 or AL32UTF8. Application designers should consider using an extended character data type or <code>CLOB</code> data type if they need to store data larger than 4000 bytes.</p>
<div class="infoboxnotealso" id="GUID-6B549B3B-90DE-478B-A183-553D1A018996__GUID-8B00B532-5F85-4322-8AD2-DF88A17F4F29">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink SQLRF55623" target="_blank" href="../SQLRF/sql_elements001.htm#SQLRF55623"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
<li>
<p><a class="olink REFRN10321" target="_blank" href="../REFRN/GUID-D424D23B-0933-425F-BC69-9C0E6724693C.htm#REFRN10321"><span class="italic">Oracle Database Reference</span></a> for more information about extending character data types by setting <code>MAX_STRING_SIZE</code> to the value of <code>EXTENDED</code></p>
</li>
</ul>
</div>
</div>
</div>
<a id="NLSPG327"></a><a id="NLSPG328"></a><a id="NLSPG326"></a>
<div class="props_rev_3"><a id="GUID-C72E6288-D724-428F-847D-995FCF2D9F59"></a>
<h3 id="NLSPG-GUID-C72E6288-D724-428F-847D-995FCF2D9F59" class="sect3">Storing Data in Multiple Languages</h3>
<div>
<p>The Unicode character set includes characters of most written languages around the world, but it does not contain information about the language to which a given character belongs. In other words, a character such as <code>&auml;</code> does not contain information about whether it is a Swedish or German character. In order to provide information in the language a user desires, data stored in a Unicode database should be tagged with the language information to which the data belongs.</p>
<p>There are many ways for a database schema to relate data to a language. The following sections discuss example steps to achieve this goal.</p>
<div class="section">
<p class="subhead3">Store Language Information with the Data</p>
<p>For data such as product descriptions or product names, you can add a language column (<code>language_id</code>) of <code>CHAR</code> or <code>VARCHAR2</code> data type to the product table to identify the language of the corresponding product information. This enables applications to retrieve the information in the desired language. The possible values for this language column are the 3-letter abbreviations of the valid <code>NLS_LANGUAGE</code> values of the database.</p>
<div class="infoboxnotealso" id="GUID-C72E6288-D724-428F-847D-995FCF2D9F59__GUID-2B552290-BD42-4135-BDCC-690B6B4D0778">
<p class="notep1">See Also:</p>
<p><a href="applocaledata.htm#GUID-A9E30C27-FD47-4552-B670-F41A95B11405">Locale Data</a> for a list of <code>NLS_LANGUAGE</code> values and their abbreviations</p>
</div>
<p>You can also create a view to select the data of the current language. For example:</p>
<pre dir="ltr">ALTER TABLE scott.product_information ADD (language_id VARCHAR2(50)):

CREATE OR REPLACE VIEW product AS 
   SELECT product_id, product_name 
   FROM   product_information 
   WHERE  language_id = SYS_CONTEXT(&#39;USERENV&#39;,&#39;LANG&#39;);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Select Translated Data Using Fine-Grained Access Control</p>
<p>Fine-grained access control enables you to limit the degree to which a user can view information in a table or view. Typically, this is done by appending a <code>WHERE</code> clause. When you add a <code>WHERE</code> clause as a fine-grained access policy to a table or view, Oracle automatically appends the <code>WHERE</code> clause to any SQL statements on the table at run time so that only those rows satisfying the <code>WHERE</code> clause can be accessed.</p>
<p>You can use this feature to avoid specifying the desired language of a user in the <code>WHERE</code> clause in every <code>SELECT</code> statement in your applications. The following <code>WHERE</code> clause limits the view of a table to the rows corresponding to the desired language of a user:</p>
<pre dir="ltr">WHERE language_id = SYS_CONTEXT(&#39;userenv&#39;, &#39;LANG&#39;)
</pre>
<p>Specify this <code>WHERE</code> clause as a fine-grained access policy for <code>product_information</code> as follows:</p>
<pre dir="ltr">CREATE FUNCTION func1 (sch VARCHAR2 , obj VARCHAR2 )
RETURN VARCHAR2(100);
BEGIN
RETURN &#39;language_id = SYS_CONTEXT(&#39;&#39;userenv&#39;&#39;, &#39;&#39;LANG&#39;&#39;)&#39;;
END
/

DBMS_RLS.ADD_POLICY (&#39;scott&#39;, &#39;product_information&#39;, &#39;lang_policy&#39;, &#39;scott&#39;, &#39;func1&#39;, &#39;select&#39;);
</pre>
<p>Then any <code>SELECT</code> statement on the <code>product_information</code> table automatically appends the <code>WHERE</code> clause.</p>
<div class="infoboxnotealso" id="GUID-C72E6288-D724-428F-847D-995FCF2D9F59__GUID-6CFFC133-DB4B-44AB-A888-95B27546CE40">
<p class="notep1">See Also:</p>
<p><a class="olink ADFNS523" target="_blank" href="../ADFNS/adfns_secur.htm#ADFNS523"><span class="italic">Oracle Database Development Guide</span></a> for more information about fine-grained access control</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="NLSPG799"></a><a id="NLSPG329"></a>
<div class="props_rev_3"><a id="GUID-68A4CB7B-2359-4E1A-B966-EAD9823FD00D"></a>
<h3 id="NLSPG-GUID-68A4CB7B-2359-4E1A-B966-EAD9823FD00D" class="sect3">Storing Documents in Multiple Languages in LOB Data Types</h3>
<div>
<p>You can store documents in multiple languages in <code>CLOB</code>, <code>NCLOB</code>, or <code>BLOB</code> data types and set up Oracle Text to enable content search for the documents.</p>
<p>Data in <code>CLOB</code> columns is stored in the AL16UTF16 character set when the database character set is multibyte, such as UTF8 or AL32UTF8. This means that the storage space required for an English document doubles when the data is converted. Storage for an Asian language document in a <code>CLOB</code> column requires less storage space than the same document in a <code>LONG</code> column using AL32UTF8, typically around 30% less, depending on the contents of the document.</p>
<p>Documents in <code>NCLOB</code> format are also stored in the AL16UTF16 character set regardless of the database character set or national character set. The storage space requirement is the same as for <code>CLOB</code> data. Document contents are converted to UTF-16 when they are inserted into a <code>NCLOB</code> column. If you want to store multilingual documents in a non-Unicode database, then choose <code>NCLOB</code>. However, content search on <code>NCLOB</code> with Oracle Text is not supported.</p>
<p>Documents in <code>BLOB</code> format are stored as they are. No data conversion occurs during insertion and retrieval. However, SQL string manipulation functions (such as <code>LENGTH</code> or <code>SUBSTR</code>) and collation functions (such as <code>NLS_SORT</code> and <code>ORDER BY</code>) cannot be applied to the <code>BLOB</code> data type.</p>
<p><a href="ch6unicode.htm#GUID-68A4CB7B-2359-4E1A-B966-EAD9823FD00D__g1008321" title="This table is described in the preceding text">Table 6-3</a> lists the advantages and disadvantages of the <code>CLOB</code>, <code>NCLOB</code>, and <code>BLOB</code> data types when storing documents:</p>
<div class="tblformal" id="GUID-68A4CB7B-2359-4E1A-B966-EAD9823FD00D__g1008321">
<p class="titleintable">Table 6-3 Comparison of LOB Data Types for Document Storage</p>
<table class="cellalignment2377" title="Comparison of LOB Data Types for Document Storage " summary="This table is described in the preceding text">
<thead>
<tr class="cellalignment2368">
<th class="cellalignment2384" id="d50960e2830">Data Types</th>
<th class="cellalignment2388" id="d50960e2833">Advantages</th>
<th class="cellalignment2388" id="d50960e2836">Disadvantages</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2368">
<td class="cellalignment2385" id="d50960e2841" headers="d50960e2830">
<p><code>CLOB</code></p>
</td>
<td class="cellalignment2389" headers="d50960e2841 d50960e2833">
<ul style="list-style-type: disc;">
<li>
<p>Content search support with Oracle Text</p>
</li>
<li>
<p>String manipulation support</p>
</li>
</ul>
</td>
<td class="cellalignment2389" headers="d50960e2841 d50960e2836">
<ul style="list-style-type: disc;">
<li>
<p>Depends on database character set</p>
</li>
<li>
<p>Data conversion is necessary for insertion</p>
</li>
<li>
<p>Cannot store binary documents</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2385" id="d50960e2865" headers="d50960e2830">
<p><code>NCLOB</code></p>
</td>
<td class="cellalignment2389" headers="d50960e2865 d50960e2833">
<ul style="list-style-type: disc;">
<li>
<p>Independent of database character set</p>
</li>
<li>
<p>String manipulation support</p>
</li>
</ul>
</td>
<td class="cellalignment2389" headers="d50960e2865 d50960e2836">
<ul style="list-style-type: disc;">
<li>
<p>No content search support</p>
</li>
<li>
<p>Data conversion is necessary for insertion</p>
</li>
<li>
<p>Cannot store binary documents</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2368">
<td class="cellalignment2385" id="d50960e2889" headers="d50960e2830">
<p><code>BLOB</code></p>
</td>
<td class="cellalignment2389" headers="d50960e2889 d50960e2833">
<ul style="list-style-type: disc;">
<li>
<p>Independent of database character set</p>
</li>
<li>
<p>Content search support</p>
</li>
<li>
<p>No data conversion, data stored as is</p>
</li>
<li>
<p>Can store binary documents such as Microsoft Word or Microsoft Excel</p>
</li>
</ul>
</td>
<td class="cellalignment2389" headers="d50960e2889 d50960e2836">
<ul style="list-style-type: disc;">
<li>
<p>No string manipulation support</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="NLSPG330"></a>
<div class="props_rev_3"><a id="GUID-9E4134BD-B88C-4868-8DFC-86B50948FABF"></a>
<h3 id="NLSPG-GUID-9E4134BD-B88C-4868-8DFC-86B50948FABF" class="sect3">Creating Indexes for Searching Multilingual Document Contents</h3>
<div>
<p>Oracle Text enables you to build indexes for content search on multilingual documents stored in <code>CLOB</code> format and <code>BLOB</code> format. It uses a language-specific lexer to parse the <code>CLOB</code> or <code>BLOB</code> data and produces a list of searchable keywords.</p>
<p>Create a multilexer to search multilingual documents. The multilexer chooses a language-specific lexer for each row, based on a language column. This section describes the high level steps to create indexes for documents in multiple languages. It contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="ch6unicode.htm#GUID-8B8F4067-065D-4D7E-B9DC-4F313B320442">Creating Multilexers</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-C114A44C-5268-492D-B448-3A4B7075F8C1">Creating Indexes for Documents Stored in the CLOB Data Type</a></p>
</li>
<li>
<p><a href="ch6unicode.htm#GUID-DCD82CE9-D4EE-4727-A1A9-C7D2B69C4784">Creating Indexes for Documents Stored in the BLOB Data Type</a></p>
<div class="infoboxnotealso" id="GUID-9E4134BD-B88C-4868-8DFC-86B50948FABF__GUID-09E2D72F-4329-4117-9340-870E1BE54299">
<p class="notep1">See Also:</p>
<p><a class="olink CCREF0219" target="_blank" href="../CCREF/cdatadic.htm#CCREF0219"><span class="italic">Oracle Text Reference</span></a></p>
</div>
</li>
</ul>
</div>
<a id="NLSPG331"></a>
<div class="props_rev_3"><a id="GUID-8B8F4067-065D-4D7E-B9DC-4F313B320442"></a>
<h4 id="NLSPG-GUID-8B8F4067-065D-4D7E-B9DC-4F313B320442" class="sect4">Creating Multilexers</h4>
<div>
<div class="section">
<p>The first step in creating the multilexer is the creation of language-specific lexer preferences for each language supported. The following example creates English, German, and Japanese lexers with PL/SQL procedures:</p>
<pre dir="ltr">ctx_ddl.create_preference(&#39;english_lexer&#39;, &#39;basic_lexer&#39;); 
ctx_ddl.set_attribute(&#39;english_lexer&#39;,&#39;index_themes&#39;,&#39;yes&#39;); 
ctx_ddl.create_preference(&#39;german_lexer&#39;, &#39;basic_lexer&#39;); 
ctx_ddl.set_attribute(&#39;german_lexer&#39;,&#39;composite&#39;,&#39;german&#39;); 
ctx_ddl.set_attribute(&#39;german_lexer&#39;,&#39;alternate_spelling&#39;,&#39;german&#39;); 
ctx_ddl.set_attribute(&#39;german_lexer&#39;,&#39;mixed_case&#39;,&#39;yes&#39;); 
ctx_ddl.create_preference(&#39;japanese_lexer&#39;, &#39;JAPANESE_VGRAM_LEXER&#39;); 
</pre>
<p>After the language-specific lexer preferences are created, they need to be gathered together under a single multilexer preference. First, create the multilexer preference, using the <code>MULTI_LEXER</code> object:</p>
<pre dir="ltr">ctx_ddl.create_preference(&#39;global_lexer&#39;,&#39;multi_lexer&#39;); 
</pre>
<p>Now add the language-specific lexers to the multilexer preference using the <code>add_sub_lexer</code> call:</p>
<pre dir="ltr">ctx_ddl.add_sub_lexer(&#39;global_lexer&#39;, &#39;german&#39;, &#39;german_lexer&#39;); 
ctx_ddl.add_sub_lexer(&#39;global_lexer&#39;, &#39;japanese&#39;, &#39;japanese_lexer&#39;); 
ctx_ddl.add_sub_lexer(&#39;global_lexer&#39;, &#39;default&#39;,&#39;english_lexer&#39;); 
</pre>
<p>This nominates the <code>german_lexer</code> preference to handle German documents, the <code>japanese_lexer</code> preference to handle Japanese documents, and the <code>english_lexer</code> preference to handle everything else, using <code>DEFAULT</code> as the language.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="NLSPG332"></a>
<div class="props_rev_3"><a id="GUID-C114A44C-5268-492D-B448-3A4B7075F8C1"></a>
<h4 id="NLSPG-GUID-C114A44C-5268-492D-B448-3A4B7075F8C1" class="sect4">Creating Indexes for Documents Stored in the CLOB Data Type</h4>
<div>
<div class="section">
<p>The multilexer decides which lexer to use for each row based on a language column in the table. This is a character column that stores the language of the document in a text column. Use the Oracle language name to identify the language of a document in this column. For example, if you use the <code>CLOB</code> data type to store your documents, then add the language column to the table where the documents are stored:</p>
<pre dir="ltr">CREATE TABLE globaldoc
  (doc_id    NUMBER       PRIMARY KEY, 
  language  VARCHAR2(30), 
  text      CLOB); 
</pre>
<p>To create an index for this table, use the multilexer preference and specify the name of the language column:</p>
<pre dir="ltr">CREATE INDEX globalx ON globaldoc(text) 
  indextype IS ctxsys.context 
  parameters (&#39;lexer 
               global_lexer 
               language 
               column 
               language&#39;); 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="NLSPG333"></a>
<div class="props_rev_3"><a id="GUID-DCD82CE9-D4EE-4727-A1A9-C7D2B69C4784"></a>
<h4 id="NLSPG-GUID-DCD82CE9-D4EE-4727-A1A9-C7D2B69C4784" class="sect4">Creating Indexes for Documents Stored in the BLOB Data Type</h4>
<div>
<div class="section">
<p>In addition to the language column, the character set and format columns must be added in the table where the documents are stored. The character set column stores the character set of the documents using the Oracle character set names. The format column specifies whether a document is a text or binary document. For example, the <code>CREATE TABLE</code> statement can specify columns called <code>characterset</code> and <code>format</code>:</p>
<pre dir="ltr">CREATE TABLE globaldoc ( 
   doc_id       NUMBER       PRIMARY KEY, 
   language     VARCHAR2(30), 
   characterset VARCHAR2(30), 
   format       VARCHAR2(10), 
   text         BLOB 
  ); 
</pre>
<p>You can put word-processing or spreadsheet documents into the table and specify <code>binary</code> in the <code>format</code> column. For documents in HTML, XML and text format, you can put them into the table and specify <code>text</code> in the <code>format</code> column.</p>
<p>Because there is a column in which to specify the character set, you can store text documents in different character sets.</p>
<p>When you create the index, specify the names of the format and character set columns:</p>
<pre dir="ltr">CREATE INDEX globalx ON globaldoc(text) 
  indextype is ctxsys.context 
  parameters (&#39;filter inso_filter 
                lexer global_lexer 
                language column language 
                format  column format 
                charset column characterset&#39;); 
</pre>
<p>You can use the <code>charset_filter</code> if all documents are in text format. The <code>charset_filter</code> converts data from the character set specified in the <code>charset</code> column to the database character set.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2367">
<tr>
<td class="cellalignment2374">
<table class="cellalignment2372">
<tr>
<td class="cellalignment2371"><a href="ch5lingsort.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2371"><a href="ch7progrunicode.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2376">
<table class="cellalignment2370">
<tr>
<td class="cellalignment2371"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2371"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2371"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2371"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2371"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2371"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>