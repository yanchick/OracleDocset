<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-101988"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Syntax%20for%20SQL%20Functions"></a><title>Syntax for SQL Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1091"/>
<meta name="dcterms.created" content="2017-03-16T17:26:49Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database SQL Language Quick Reference"/>
<meta name="dcterms.identifier" content="E49206-17"/>
<meta name="dcterms.isVersionOf" content="SQLQR"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="sqlqr02.htm" title="Previous" type="text/html"/>
<link rel="Next" href="sqlqr03.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E49206-17.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/23</span> <!-- End Header --><a id="i103386"></a>
<div id="SQLQR241" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Syntax for SQL Functions</h1>
<p>A function is a command that manipulates data items and returns a single value.</p>
<p>The sections that follow show each SQL function and its related syntax. Refer to <a href="sqlqr05.htm#g1004143">Chapter 5, &#34;Subclauses&#34;</a> for the syntax of the subclauses.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF006" href="../SQLRF/functions.htm#SQLRF006"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about SQL functions</div>
<p class="subhead2"><a id="SQLQR242"></a><a id="sthref292"></a><a id="sthref293"></a><a class="olink SQLRF00601" href="../SQLRF/functions009.htm#SQLRF00601">ABS</a></p>
<pre dir="ltr">ABS(n)
</pre>
<p class="subhead2"><a id="SQLQR243"></a><a id="sthref294"></a><a id="sthref295"></a><a class="olink SQLRF00602" href="../SQLRF/functions010.htm#SQLRF00602">ACOS</a></p>
<pre dir="ltr">ACOS(n)
</pre>
<p class="subhead2"><a id="SQLQR244"></a><a id="sthref296"></a><a id="sthref297"></a><a class="olink SQLRF00603" href="../SQLRF/functions011.htm#SQLRF00603">ADD_MONTHS</a></p>
<pre dir="ltr">ADD_MONTHS(date, integer)
</pre>
<p class="subhead2"><a id="SQLQR245"></a><a id="sthref298"></a><a id="sthref299"></a><a class="olink SQLRF20035" href="../SQLRF/functions003.htm#SQLRF20035">aggregate_function</a></p>
<p>Aggregate functions return a single result row based on groups of rows, rather than on single rows.</p>
<p class="subhead2"><a id="SQLQR246"></a><a id="sthref300"></a><a id="sthref301"></a><a class="olink SQLRF06174" href="../SQLRF/functions004.htm#SQLRF06174">analytic_function</a></p>
<pre dir="ltr">analytic_function([ arguments ]) OVER (analytic_clause)
</pre>
<p class="subhead2"><a id="SQLQR247"></a><a id="sthref302"></a><a id="sthref303"></a><a class="olink SQLRF06201" href="../SQLRF/functions012.htm#SQLRF06201">APPENDCHILDXML</a></p>
<pre dir="ltr">APPENDCHILDXML
  ( XMLType_instance, XPath_string, value_expr [, namespace_string ])
</pre>
<p class="subhead2"><a id="SQLQR1168"></a><a id="sthref304"></a><a id="sthref305"></a><a class="olink SQLRF56900" href="../SQLRF/functions013.htm#SQLRF56900">APPROX_COUNT_DISTINCT</a></p>
<pre dir="ltr">APPROX_COUNT_DISTINCT(expr)
</pre>
<p class="subhead2"><a id="SQLQR248"></a><a id="sthref306"></a><a id="sthref307"></a><a class="olink SQLRF00604" href="../SQLRF/functions014.htm#SQLRF00604">ASCII</a></p>
<pre dir="ltr">ASCII(char)
</pre>
<p class="subhead2"><a id="SQLQR249"></a><a id="sthref308"></a><a id="sthref309"></a><a class="olink SQLRF00605" href="../SQLRF/functions015.htm#SQLRF00605">ASCIISTR</a></p>
<pre dir="ltr">ASCIISTR(char)
</pre>
<p class="subhead2"><a id="SQLQR250"></a><a id="sthref310"></a><a id="sthref311"></a><a class="olink SQLRF00606" href="../SQLRF/functions016.htm#SQLRF00606">ASIN</a></p>
<pre dir="ltr">ASIN(n)
</pre>
<p class="subhead2"><a id="SQLQR251"></a><a id="sthref312"></a><a id="sthref313"></a><a class="olink SQLRF00607" href="../SQLRF/functions017.htm#SQLRF00607">ATAN</a></p>
<pre dir="ltr">ATAN(n)
</pre>
<p class="subhead2"><a id="SQLQR252"></a><a id="sthref314"></a><a id="sthref315"></a><a class="olink SQLRF00608" href="../SQLRF/functions018.htm#SQLRF00608">ATAN2</a></p>
<pre dir="ltr">ATAN2(n1 , n2)
</pre>
<p class="subhead2"><a id="SQLQR253"></a><a id="sthref316"></a><a id="sthref317"></a><a class="olink SQLRF00609" href="../SQLRF/functions019.htm#SQLRF00609">AVG</a></p>
<pre dir="ltr">AVG([ DISTINCT | ALL ] expr) [ OVER(analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR254"></a><a id="sthref318"></a><a id="sthref319"></a><a class="olink SQLRF00610" href="../SQLRF/functions020.htm#SQLRF00610">BFILENAME</a></p>
<pre dir="ltr">BFILENAME(&#39;directory&#39;, &#39;filename&#39;)
</pre>
<p class="subhead2"><a id="SQLQR255"></a><a id="sthref320"></a><a id="sthref321"></a><a class="olink SQLRF00611" href="../SQLRF/functions021.htm#SQLRF00611">BIN_TO_NUM</a></p>
<pre dir="ltr">BIN_TO_NUM(expr [, expr ]... )
</pre>
<p class="subhead2"><a id="SQLQR256"></a><a id="sthref322"></a><a id="sthref323"></a><a class="olink SQLRF00612" href="../SQLRF/functions022.htm#SQLRF00612">BITAND</a></p>
<pre dir="ltr">BITAND(expr1, expr2)
</pre>
<p class="subhead2"><a id="SQLQR257"></a><a id="sthref324"></a><a id="sthref325"></a><a class="olink SQLRF06305" href="../SQLRF/functions023.htm#SQLRF06305">CARDINALITY</a></p>
<pre dir="ltr">CARDINALITY(nested_table)
</pre>
<p class="subhead2"><a id="SQLQR258"></a><a id="sthref326"></a><a id="sthref327"></a><a class="olink SQLRF00613" href="../SQLRF/functions024.htm#SQLRF00613">CAST</a></p>
<pre dir="ltr">CAST({ expr | MULTISET (subquery) } AS type_name)
</pre>
<p class="subhead2"><a id="SQLQR259"></a><a id="sthref328"></a><a id="sthref329"></a><a class="olink SQLRF00614" href="../SQLRF/functions025.htm#SQLRF00614">CEIL</a></p>
<pre dir="ltr">CEIL(n)
</pre>
<p class="subhead2"><a id="SQLQR260"></a><a id="sthref330"></a><a id="sthref331"></a><a class="olink SQLRF00615" href="../SQLRF/functions026.htm#SQLRF00615">CHARTOROWID</a></p>
<pre dir="ltr">CHARTOROWID(char)
</pre>
<p class="subhead2"><a id="SQLQR261"></a><a id="sthref332"></a><a id="sthref333"></a><a class="olink SQLRF00616" href="../SQLRF/functions027.htm#SQLRF00616">CHR</a></p>
<pre dir="ltr">CHR(n [ USING NCHAR_CS ])
</pre>
<p class="subhead2"><a id="SQLQR1112"></a><a id="sthref334"></a><a id="sthref335"></a><a class="olink SQLRF55705" href="../SQLRF/functions028.htm#SQLRF55705">CLUSTER_DETAILS</a></p>
<pre dir="ltr">CLUSTER_DETAILS ( [ schema . ] model 
                  [ , cluster_id [ , topN ] ] [ DESC | ASC | ABS ]
                  mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1113"></a><a id="sthref336"></a><a id="sthref337"></a><a class="olink SQLRF55707" href="../SQLRF/functions028.htm#SQLRF55707">CLUSTER_DETAILS (analytic)</a></p>
<pre dir="ltr">CLUSTER_DETAILS ( INTO n
                  [ , cluster_id [ , topN ] ] [ DESC | ASC | ABS ]
                  mining_attribute_clause )
                OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR1114"></a><a id="sthref338"></a><a id="sthref339"></a><a class="olink SQLRF55714" href="../SQLRF/functions029.htm#SQLRF55714">CLUSTER_DISTANCE</a></p>
<pre dir="ltr">CLUSTER_DISTANCE ( [ schema . ] model [ , cluster_id ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1115"></a><a id="sthref340"></a><a id="sthref341"></a><a class="olink SQLRF55716" href="../SQLRF/functions029.htm#SQLRF55716">CLUSTER_DISTANCE (analytic)</a></p>
<pre dir="ltr">CLUSTER_DISTANCE ( INTO n [, cluster_id] mining_attribute_clause )
                 OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR262"></a><a id="sthref342"></a><a id="sthref343"></a><a class="olink SQLRF06213" href="../SQLRF/functions030.htm#SQLRF06213">CLUSTER_ID</a></p>
<pre dir="ltr">CLUSTER_ID ( [ schema . ] model mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1116"></a><a id="sthref344"></a><a id="sthref345"></a><a class="olink SQLRF55724" href="../SQLRF/functions030.htm#SQLRF55724">CLUSTER_ID (analytic)</a></p>
<pre dir="ltr">CLUSTER_ID ( INTO n mining_attribute_clause )
           OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR263"></a><a id="sthref346"></a><a id="sthref347"></a><a class="olink SQLRF06214" href="../SQLRF/functions031.htm#SQLRF06214">CLUSTER_PROBABILITY</a></p>
<pre dir="ltr">CLUSTER_PROBABILITY ( [ schema . ] model [, cluster_id ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1117"></a><a id="sthref348"></a><a id="sthref349"></a><a class="olink SQLRF55728" href="../SQLRF/functions031.htm#SQLRF55728">CLUSTER_PROBABILITY (analytic)</a></p>
<pre dir="ltr">CLUSTER_PROBABILITY ( INTO n [, cluster_id] mining_attribute_clause )
                    OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR264"></a><a id="sthref350"></a><a id="sthref351"></a><a class="olink SQLRF06215" href="../SQLRF/functions032.htm#SQLRF06215">CLUSTER_SET</a></p>
<pre dir="ltr">CLUSTER_SET ( [ schema . ] model [ , topN [ , cutoff ] ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1118"></a><a id="sthref352"></a><a id="sthref353"></a><a class="olink SQLRF55732" href="../SQLRF/functions032.htm#SQLRF55732">CLUSTER_SET (analytic)</a></p>
<pre dir="ltr">CLUSTER_SET ( INTO n [, topN [, cutoff]] mining_attribute_clause )
            OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR265"></a><a id="sthref354"></a><a id="sthref355"></a><a class="olink SQLRF00617" href="../SQLRF/functions033.htm#SQLRF00617">COALESCE</a></p>
<pre dir="ltr">COALESCE(expr [, expr ]...)
</pre>
<p class="subhead2"><a id="SQLQR266"></a><a id="sthref356"></a><a id="sthref357"></a><a class="olink SQLRF06304" href="../SQLRF/functions034.htm#SQLRF06304">COLLECT</a></p>
<pre dir="ltr">COLLECT( [ DISTINCT | UNIQUE ] column [ ORDER BY expr ] )
</pre>
<p class="subhead2"><a id="SQLQR267"></a><a id="sthref358"></a><a id="sthref359"></a><a class="olink SQLRF00618" href="../SQLRF/functions035.htm#SQLRF00618">COMPOSE</a></p>
<pre dir="ltr">COMPOSE(char)
</pre>
<p class="subhead2"><a id="SQLQR1132"></a><a id="sthref360"></a><a id="sthref361"></a><a class="olink SQLRF56629" href="../SQLRF/functions036.htm#SQLRF56629">CON_DBID_TO_ID</a></p>
<pre dir="ltr">CON_DBID_TO_ID(container_dbid)
</pre>
<p class="subhead2"><a id="SQLQR1133"></a><a id="sthref362"></a><a id="sthref363"></a><a class="olink SQLRF56633" href="../SQLRF/functions037.htm#SQLRF56633">CON_GUID_TO_ID</a></p>
<pre dir="ltr">CON_GUID_TO_ID(container_guid)
</pre>
<p class="subhead2"><a id="SQLQR1134"></a><a id="sthref364"></a><a id="sthref365"></a><a class="olink SQLRF56637" href="../SQLRF/functions038.htm#SQLRF56637">CON_NAME_TO_ID</a></p>
<pre dir="ltr">CON_NAME_TO_ID(container_name)
</pre>
<p class="subhead2"><a id="SQLQR1135"></a><a id="sthref366"></a><a id="sthref367"></a><a class="olink SQLRF56641" href="../SQLRF/functions039.htm#SQLRF56641">CON_UID_TO_ID</a></p>
<pre dir="ltr">CON_UID_TO_ID(container_uid)
</pre>
<p class="subhead2"><a id="SQLQR268"></a><a id="sthref368"></a><a id="sthref369"></a><a class="olink SQLRF00619" href="../SQLRF/functions040.htm#SQLRF00619">CONCAT</a></p>
<pre dir="ltr">CONCAT(char1, char2)
</pre>
<p class="subhead2"><a id="SQLQR269"></a><a id="sthref370"></a><a id="sthref371"></a><a class="olink SQLRF00620" href="../SQLRF/functions041.htm#SQLRF00620">CONVERT</a></p>
<pre dir="ltr">CONVERT(char, dest_char_set[, source_char_set ])
</pre>
<p class="subhead2"><a id="SQLQR270"></a><a id="sthref372"></a><a id="sthref373"></a><a class="olink SQLRF00621" href="../SQLRF/functions042.htm#SQLRF00621">CORR</a></p>
<pre dir="ltr">CORR(expr1, expr2) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR271"></a><a id="sthref374"></a><a id="sthref375"></a><a class="olink SQLRF06314" href="../SQLRF/functions043.htm#SQLRF06314">CORR_K</a>, <a id="sthref376"></a><a id="sthref377"></a><a class="olink SQLRF06314" href="../SQLRF/functions043.htm#SQLRF06314">CORR_S</a></p>
<pre dir="ltr">{ CORR_K | CORR_S }
   (expr1, expr2
     [, { COEFFICIENT
        | ONE_SIDED_SIG
        | ONE_SIDED_SIG_POS
        | ONE_SIDED_SIG_NEG
        | TWO_SIDED_SIG
        }
     ]
   )
</pre>
<p class="subhead2"><a id="SQLQR272"></a><a id="sthref378"></a><a id="sthref379"></a><a class="olink SQLRF00622" href="../SQLRF/functions044.htm#SQLRF00622">COS</a></p>
<pre dir="ltr">COS(n)
</pre>
<p class="subhead2"><a id="SQLQR273"></a><a id="sthref380"></a><a id="sthref381"></a><a class="olink SQLRF00623" href="../SQLRF/functions045.htm#SQLRF00623">COSH</a></p>
<pre dir="ltr">COSH(n)
</pre>
<p class="subhead2"><a id="SQLQR274"></a><a id="sthref382"></a><a id="sthref383"></a><a class="olink SQLRF00624" href="../SQLRF/functions046.htm#SQLRF00624">COUNT</a></p>
<pre dir="ltr">COUNT({ * | [ DISTINCT | ALL ] expr }) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR275"></a><a id="sthref384"></a><a id="sthref385"></a><a class="olink SQLRF00625" href="../SQLRF/functions047.htm#SQLRF00625">COVAR_POP</a></p>
<pre dir="ltr">COVAR_POP(expr1, expr2)
   [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR276"></a><a id="sthref386"></a><a id="sthref387"></a><a class="olink SQLRF00626" href="../SQLRF/functions048.htm#SQLRF00626">COVAR_SAMP</a></p>
<pre dir="ltr">COVAR_SAMP(expr1, expr2) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR277"></a><a id="sthref388"></a><a id="sthref389"></a><a class="olink SQLRF20027" href="../SQLRF/functions049.htm#SQLRF20027">CUBE_TABLE</a></p>
<pre dir="ltr">CUBE_TABLE
( &#39; { schema.cube [ {HIERARCHY | HRR} dimension hierarchy ]...
    | schema.dimension [ {HIERARCHY | HRR} [dimension] hierarchy ]
    }
  &#39;
)
</pre>
<p class="subhead2"><a id="SQLQR278"></a><a id="sthref390"></a><a id="sthref391"></a><a class="olink SQLRF00627" href="../SQLRF/functions050.htm#SQLRF00627">CUME_DIST (aggregate)</a></p>
<pre dir="ltr">CUME_DIST(expr[,expr ]...) WITHIN GROUP
  (ORDER BY expr [ DESC | ASC ]
                 [ NULLS { FIRST | LAST } ] 
            [, expr [ DESC | ASC ]
                    [ NULLS { FIRST | LAST } ]
            ]...
  )
</pre>
<p class="subhead2"><a id="SQLQR279"></a><a id="sthref392"></a><a id="sthref393"></a><a class="olink SQLRF00627" href="../SQLRF/functions050.htm#SQLRF00627">CUME_DIST (analytic)</a></p>
<pre dir="ltr">CUME_DIST() OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR280"></a><a id="sthref394"></a><a id="sthref395"></a><a class="olink SQLRF00628" href="../SQLRF/functions051.htm#SQLRF00628">CURRENT_DATE</a></p>
<pre dir="ltr">CURRENT_DATE
</pre>
<p class="subhead2"><a id="SQLQR281"></a><a id="sthref396"></a><a id="sthref397"></a><a class="olink SQLRF00629" href="../SQLRF/functions052.htm#SQLRF00629">CURRENT_TIMESTAMP</a></p>
<pre dir="ltr">CURRENT_TIMESTAMP [ (precision) ]
</pre>
<p class="subhead2"><a id="SQLQR282"></a><a id="sthref398"></a><a id="sthref399"></a><a class="olink SQLRF06175" href="../SQLRF/functions053.htm#SQLRF06175">CV</a></p>
<pre dir="ltr">CV([ dimension_column ])
</pre>
<p class="subhead2"><a id="SQLQR1212"></a><a id="sthref400"></a><a id="sthref401"></a><a class="olink SQLRF57051" href="../SQLRF/functions054.htm#SQLRF57051">DATAOBJ_TO_MAT_PARTITION</a></p>
<pre dir="ltr">DATAOBJ_TO_MAT_PARTITION( table, partition_id )
</pre>
<p class="subhead2"><a id="SQLQR283"></a><a id="sthref402"></a><a id="sthref403"></a><a class="olink SQLRF20028" href="../SQLRF/functions055.htm#SQLRF20028">DATAOBJ_TO_PARTITION</a></p>
<pre dir="ltr">DATAOBJ_TO_PARTITION( table, partition_id )
</pre>
<p class="subhead2"><a id="SQLQR284"></a><a id="sthref404"></a><a id="sthref405"></a><a class="olink SQLRF00630" href="../SQLRF/functions056.htm#SQLRF00630">DBTIMEZONE</a></p>
<pre dir="ltr">DBTIMEZONE
</pre>
<p class="subhead2"><a id="SQLQR285"></a><a id="sthref406"></a><a id="sthref407"></a><a class="olink SQLRF00631" href="../SQLRF/functions057.htm#SQLRF00631">DECODE</a></p>
<pre dir="ltr">DECODE(expr, search, result [, search, result ]... [, default ])
</pre>
<p class="subhead2"><a id="SQLQR286"></a><a id="sthref408"></a><a id="sthref409"></a><a class="olink SQLRF00632" href="../SQLRF/functions058.htm#SQLRF00632">DECOMPOSE</a></p>
<pre dir="ltr">DECOMPOSE( string [, { &#39;CANONICAL&#39; | &#39;COMPATIBILITY&#39; } ] )
</pre>
<p class="subhead2"><a id="SQLQR287"></a><a id="sthref410"></a><a id="sthref411"></a><a class="olink SQLRF06202" href="../SQLRF/functions059.htm#SQLRF06202">DELETEXML</a></p>
<pre dir="ltr">DELETEXML( XMLType_instance, XPath_string [, namespace_string ])
</pre>
<p class="subhead2"><a id="SQLQR288"></a><a id="sthref412"></a><a id="sthref413"></a><a class="olink SQLRF00633" href="../SQLRF/functions060.htm#SQLRF00633">DENSE_RANK (aggregate)</a></p>
<pre dir="ltr">DENSE_RANK(expr [, expr ]...) WITHIN GROUP
  (ORDER BY expr [ DESC | ASC ]
                 [ NULLS { FIRST | LAST } ]
            [,expr [ DESC | ASC ]
                   [ NULLS { FIRST | LAST } ]
            ]...
  )
</pre>
<p class="subhead2"><a id="SQLQR289"></a><a id="sthref414"></a><a id="sthref415"></a><a class="olink SQLRF00633" href="../SQLRF/functions060.htm#SQLRF00633">DENSE_RANK (analytic)</a></p>
<pre dir="ltr">DENSE_RANK( ) OVER([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR290"></a><a id="sthref416"></a><a id="sthref417"></a><a class="olink SQLRF06176" href="../SQLRF/functions061.htm#SQLRF06176">DEPTH</a></p>
<pre dir="ltr">DEPTH(correlation_integer)
</pre>
<p class="subhead2"><a id="SQLQR291"></a><a id="sthref418"></a><a id="sthref419"></a><a class="olink SQLRF00634" href="../SQLRF/functions062.htm#SQLRF00634">DEREF</a></p>
<pre dir="ltr">DEREF(expr)
</pre>
<p class="subhead2"><a id="SQLQR292"></a><a id="sthref420"></a><a id="sthref421"></a><a class="olink SQLRF00635" href="../SQLRF/functions063.htm#SQLRF00635">DUMP</a></p>
<pre dir="ltr">DUMP(expr[, return_fmt [, start_position [, length ] ]])
</pre>
<p class="subhead2"><a id="SQLQR293"></a><a id="sthref422"></a><a id="sthref423"></a><a class="olink SQLRF00636" href="../SQLRF/functions064.htm#SQLRF00636">EMPTY_BLOB</a>, <a id="sthref424"></a><a id="sthref425"></a><a class="olink SQLRF00636" href="../SQLRF/functions064.htm#SQLRF00636">EMPTY_CLOB</a></p>
<pre dir="ltr">{ EMPTY_BLOB | EMPTY_CLOB }( )
</pre>
<p class="subhead2"><a id="SQLQR294"></a><a id="sthref426"></a><a id="sthref427"></a><a class="olink SQLRF00637" href="../SQLRF/functions065.htm#SQLRF00637">EXISTSNODE</a></p>
<pre dir="ltr">EXISTSNODE(XMLType_instance, XPath_string [, namespace_string ])
</pre>
<p class="subhead2"><a id="SQLQR295"></a><a id="sthref428"></a><a id="sthref429"></a><a class="olink SQLRF00638" href="../SQLRF/functions066.htm#SQLRF00638">EXP</a></p>
<pre dir="ltr">EXP(n)
</pre>
<p class="subhead2"><a id="SQLQR296"></a><a id="sthref430"></a><a id="sthref431"></a><a class="olink SQLRF00639" href="../SQLRF/functions067.htm#SQLRF00639">EXTRACT (datetime)</a></p>
<pre dir="ltr">EXTRACT( { YEAR
         | MONTH
         | DAY
         | HOUR
         | MINUTE
         | SECOND
         | TIMEZONE_HOUR
         | TIMEZONE_MINUTE
         | TIMEZONE_REGION
         | TIMEZONE_ABBR
         }
         FROM { expr }
       )
</pre>
<p class="subhead2"><a id="SQLQR297"></a><a id="sthref432"></a><a id="sthref433"></a><a class="olink SQLRF00640" href="../SQLRF/functions068.htm#SQLRF00640">EXTRACT (XML)</a></p>
<pre dir="ltr">EXTRACT(XMLType_instance, XPath_string [, namespace_string ])
</pre>
<p class="subhead2"><a id="SQLQR298"></a><a id="sthref434"></a><a id="sthref435"></a><a class="olink SQLRF06173" href="../SQLRF/functions069.htm#SQLRF06173">EXTRACTVALUE</a></p>
<pre dir="ltr">EXTRACTVALUE(XMLType_instance, XPath_string [, namespace_string ])
</pre>
<p class="subhead2"><a id="SQLQR1119"></a><a id="sthref436"></a><a id="sthref437"></a><a class="olink SQLRF55736" href="../SQLRF/functions070.htm#SQLRF55736">FEATURE_DETAILS</a></p>
<pre dir="ltr">FEATURE_DETAILS ( [ schema . ] model
                  [ , feature_id [ , topN ] ] [ DESC | ASC | ABS ]
                  mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1120"></a><a id="sthref438"></a><a id="sthref439"></a><a class="olink SQLRF55738" href="../SQLRF/functions070.htm#SQLRF55738">FEATURE_DETAILS (analytic)</a></p>
<pre dir="ltr">FEATURE_DETAILS ( INTO n
                  [ , feature_id [ , topN ] ] [ DESC | ASC | ABS ]
                  mining_attribute_clause )
                OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR299"></a><a id="sthref440"></a><a id="sthref441"></a><a class="olink SQLRF06216" href="../SQLRF/functions071.htm#SQLRF06216">FEATURE_ID</a></p>
<pre dir="ltr">FEATURE_ID( [ schema . ] model mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1121"></a><a id="sthref442"></a><a id="sthref443"></a><a class="olink SQLRF55745" href="../SQLRF/functions071.htm#SQLRF55745">FEATURE_ID (analytic)</a></p>
<pre dir="ltr">FEATURE_ID ( INTO n mining_attribute_clause )
           OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR300"></a><a id="sthref444"></a><a id="sthref445"></a><a class="olink SQLRF06217" href="../SQLRF/functions072.htm#SQLRF06217">FEATURE_SET</a></p>
<pre dir="ltr">FEATURE_SET ( [ schema . ] model [, topN [, cutoff ]] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1122"></a><a id="sthref446"></a><a id="sthref447"></a><a class="olink SQLRF55749" href="../SQLRF/functions072.htm#SQLRF55749">FEATURE_SET (analytic)</a></p>
<pre dir="ltr">FEATURE_SET ( INTO n [, topN [, cutoff ] ] mining_attribute_clause )
            OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR301"></a><a id="sthref448"></a><a id="sthref449"></a><a class="olink SQLRF06218" href="../SQLRF/functions073.htm#SQLRF06218">FEATURE_VALUE</a></p>
<pre dir="ltr">FEATURE_VALUE ( [ schema . ] model [, feature_id ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1123"></a><a id="sthref450"></a><a id="sthref451"></a><a class="olink SQLRF55753" href="../SQLRF/functions073.htm#SQLRF55753">FEATURE_VALUE (analytic)</a></p>
<pre dir="ltr">FEATURE_VALUE ( INTO n [ , feature_id ] mining_attribute_clause )
              OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR302"></a><a id="sthref452"></a><a id="sthref453"></a><a class="olink SQLRF00641" href="../SQLRF/functions074.htm#SQLRF00641">FIRST</a></p>
<pre dir="ltr">aggregate_function
   KEEP
   (DENSE_RANK FIRST ORDER BY
    expr [ DESC | ASC ]
         [ NULLS { FIRST | LAST } ]
    [, expr [ DESC | ASC ]
            [ NULLS { FIRST | LAST } ]
    ]...
   )
   [ OVER ( [query_partition_clause] ) ]
</pre>
<p class="subhead2"><a id="SQLQR303"></a><a id="sthref454"></a><a id="sthref455"></a><a class="olink SQLRF00642" href="../SQLRF/functions075.htm#SQLRF00642">FIRST_VALUE</a></p>
<pre dir="ltr">FIRST_VALUE 
  { (expr) [ {RESPECT | IGNORE} NULLS ]
  | (expr [ {RESPECT | IGNORE} NULLS ])
  }
  OVER (analytic_clause)
</pre>
<p class="subhead2"><a id="SQLQR304"></a><a id="sthref456"></a><a id="sthref457"></a><a class="olink SQLRF00643" href="../SQLRF/functions076.htm#SQLRF00643">FLOOR</a></p>
<pre dir="ltr">FLOOR(n)
</pre>
<p class="subhead2"><a id="SQLQR305"></a><a id="sthref458"></a><a id="sthref459"></a><a class="olink SQLRF00644" href="../SQLRF/functions077.htm#SQLRF00644">FROM_TZ</a></p>
<pre dir="ltr">FROM_TZ (timestamp_value, time_zone_value)
</pre>
<p class="subhead2"><a id="SQLQR306"></a><a id="sthref460"></a><a id="sthref461"></a><a class="olink SQLRF00645" href="../SQLRF/functions078.htm#SQLRF00645">GREATEST</a></p>
<pre dir="ltr">GREATEST(expr [, expr ]...)
</pre>
<p class="subhead2"><a id="SQLQR307"></a><a id="sthref462"></a><a id="sthref463"></a><a class="olink SQLRF00646" href="../SQLRF/functions079.htm#SQLRF00646">GROUP_ID</a></p>
<pre dir="ltr">GROUP_ID( )
</pre>
<p class="subhead2"><a id="SQLQR308"></a><a id="sthref464"></a><a id="sthref465"></a><a class="olink SQLRF00647" href="../SQLRF/functions080.htm#SQLRF00647">GROUPING</a></p>
<pre dir="ltr">GROUPING(expr)
</pre>
<p class="subhead2"><a id="SQLQR309"></a><a id="sthref466"></a><a id="sthref467"></a><a class="olink SQLRF00648" href="../SQLRF/functions081.htm#SQLRF00648">GROUPING_ID</a></p>
<pre dir="ltr">GROUPING_ID(expr [, expr ]...)
</pre>
<p class="subhead2"><a id="SQLQR310"></a><a id="sthref468"></a><a id="sthref469"></a><a class="olink SQLRF00649" href="../SQLRF/functions082.htm#SQLRF00649">HEXTORAW</a></p>
<pre dir="ltr">HEXTORAW(char)
</pre>
<p class="subhead2"><a id="SQLQR311"></a><a id="sthref470"></a><a id="sthref471"></a><a class="olink SQLRF00650" href="../SQLRF/functions083.htm#SQLRF00650">INITCAP</a></p>
<pre dir="ltr">INITCAP(char)
</pre>
<p class="subhead2"><a id="SQLQR312"></a><a id="sthref472"></a><a id="sthref473"></a><a class="olink SQLRF06203" href="../SQLRF/functions084.htm#SQLRF06203">INSERTCHILDXML</a></p>
<pre dir="ltr">INSERTCHILDXML
  ( XMLType_instance, XPath_string, child_expr, value_expr [, namespace_string ] )
</pre>
<p class="subhead2"><a id="SQLQR313"></a><a id="sthref474"></a><a id="sthref475"></a><a class="olink SQLRF30008" href="../SQLRF/functions085.htm#SQLRF30008">INSERTCHILDXMLAFTER</a></p>
<pre dir="ltr">INSERTCHILDXMLAFTER
  ( XMLType_instance, XPath_string, child_expr, value_expr [, namespace_string ] )
</pre>
<p class="subhead2"><a id="SQLQR314"></a><a id="sthref476"></a><a id="sthref477"></a><a class="olink SQLRF30006" href="../SQLRF/functions086.htm#SQLRF30006">INSERTCHILDXMLBEFORE</a></p>
<pre dir="ltr">INSERTCHILDXMLBEFORE
  ( XMLType_instance, XPath_string, child_expr, value_expr [, namespace_string ] )
</pre>
<p class="subhead2"><a id="SQLQR315"></a><a id="sthref478"></a><a id="sthref479"></a><a class="olink SQLRF30010" href="../SQLRF/functions087.htm#SQLRF30010">INSERTXMLAFTER</a></p>
<pre dir="ltr">INSERTXMLAFTER
  ( XMLType_instance, XPath_string, value_expr [, namespace_string ] )
</pre>
<p class="subhead2"><a id="SQLQR316"></a><a id="sthref480"></a><a id="sthref481"></a><a class="olink SQLRF06204" href="../SQLRF/functions088.htm#SQLRF06204">INSERTXMLBEFORE</a></p>
<pre dir="ltr">INSERTXMLBEFORE
  ( XMLType_instance, XPath_string, value_expr [, namespace_string ] )
</pre>
<p class="subhead2"><a id="SQLQR317"></a><a id="sthref482"></a><a id="sthref483"></a><a class="olink SQLRF00651" href="../SQLRF/functions089.htm#SQLRF00651">INSTR</a></p>
<pre dir="ltr">{ INSTR
| INSTRB
| INSTRC
| INSTR2
| INSTR4
}
(string , substring [, position [, occurrence ] ])
</pre>
<p class="subhead2"><a id="SQLQR318"></a><a id="sthref484"></a><a id="sthref485"></a><a class="olink SQLRF06328" href="../SQLRF/functions090.htm#SQLRF06328">ITERATION_NUMBER</a></p>
<pre dir="ltr">ITERATION_NUMBER
</pre>
<p class="subhead2"><a id="SQLQR1142"></a><a id="sthref486"></a><a id="sthref487"></a><a class="olink SQLRF56718" href="../SQLRF/functions091.htm#SQLRF56718">JSON_QUERY</a></p>
<pre dir="ltr">JSON_QUERY
  ( expr [ FORMAT JSON ], JSON_path_expression
    [ JSON_query_returning_clause ] [ JSON_query_wrapper_clause ]
    [ JSON_query_on_error_clause ]
  )
</pre>
<p class="subhead2"><a id="SQLQR1169"></a><a id="sthref488"></a><a id="sthref489"></a><a class="olink SQLRF56973" href="../SQLRF/functions092.htm#SQLRF56973">JSON_TABLE</a></p>
<pre dir="ltr">JSON_TABLE
  ( expr [ FORMAT JSON ], JSON_path_expression
    [ JSON_table_on_error_clause ] JSON_columns_clause )
</pre>
<p class="subhead2"><a id="SQLQR1143"></a><a id="sthref490"></a><a id="sthref491"></a><a class="olink SQLRF56669" href="../SQLRF/functions093.htm#SQLRF56669">JSON_VALUE</a></p>
<pre dir="ltr">JSON_VALUE
  ( expr [ FORMAT JSON ], JSON_path_expression
    [ JSON_value_returning_clause ] [ JSON_value_on_error_clause ]
  )
</pre>
<p class="subhead2"><a id="SQLQR319"></a><a id="sthref492"></a><a id="sthref493"></a><a class="olink SQLRF00652" href="../SQLRF/functions094.htm#SQLRF00652">LAG</a></p>
<pre dir="ltr">LAG
  { ( value_expr [, offset [, default]]) [ { RESPECT | IGNORE } NULLS ] 
  | ( value_expr [ { RESPECT | IGNORE } NULLS ] [, offset [, default]] )
  }
  OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR320"></a><a id="sthref494"></a><a id="sthref495"></a><a class="olink SQLRF00653" href="../SQLRF/functions095.htm#SQLRF00653">LAST</a></p>
<pre dir="ltr">aggregate_function KEEP
  (DENSE_RANK LAST ORDER BY
    expr [ DESC | ASC ]
         [ NULLS { FIRST | LAST } ]
    [, expr [ DESC | ASC ]
            [ NULLS { FIRST | LAST } ]
    ]...
  )
  [ OVER ( [query_partition_clause] ) ]
</pre>
<p class="subhead2"><a id="SQLQR321"></a><a id="sthref496"></a><a id="sthref497"></a><a class="olink SQLRF00654" href="../SQLRF/functions096.htm#SQLRF00654">LAST_DAY</a></p>
<pre dir="ltr">LAST_DAY(date)
</pre>
<p class="subhead2"><a id="SQLQR322"></a><a id="sthref498"></a><a id="sthref499"></a><a class="olink SQLRF00655" href="../SQLRF/functions097.htm#SQLRF00655">LAST_VALUE</a></p>
<pre dir="ltr">LAST_VALUE
  { (expr) [ { RESPECT | IGNORE } NULLS ]
  | (expr [ { RESPECT | IGNORE } NULLS ])
  OVER (analytic_clause)
</pre>
<p class="subhead2"><a id="SQLQR323"></a><a id="sthref500"></a><a id="sthref501"></a><a class="olink SQLRF00656" href="../SQLRF/functions098.htm#SQLRF00656">LEAD</a></p>
<pre dir="ltr">LEAD
  { ( value_expr [, offset [, default]] ) [ { RESPECT | IGNORE } NULLS ] 
  | ( value_expr [ { RESPECT | IGNORE } NULLS ] [, offset [, default]] )
  }
  OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR324"></a><a id="sthref502"></a><a id="sthref503"></a><a class="olink SQLRF00657" href="../SQLRF/functions099.htm#SQLRF00657">LEAST</a></p>
<pre dir="ltr">LEAST(expr [, expr ]...)
</pre>
<p class="subhead2"><a id="SQLQR325"></a><a id="sthref504"></a><a id="sthref505"></a><a class="olink SQLRF00658" href="../SQLRF/functions100.htm#SQLRF00658">LENGTH</a></p>
<pre dir="ltr">{ LENGTH
| LENGTHB
| LENGTHC
| LENGTH2
| LENGTH4
}
(char)
</pre>
<p class="subhead2"><a id="SQLQR326"></a><a id="sthref506"></a><a id="sthref507"></a><a class="olink SQLRF30030" href="../SQLRF/functions101.htm#SQLRF30030">LISTAGG</a></p>
<pre dir="ltr">LISTAGG(measure_expr [, &#39;delimiter&#39;])
  WITHIN GROUP (order_by_clause) [OVER query_partition_clause]
</pre>
<p class="subhead2"><a id="SQLQR327"></a><a id="sthref508"></a><a id="sthref509"></a><a class="olink SQLRF00659" href="../SQLRF/functions102.htm#SQLRF00659">LN</a></p>
<pre dir="ltr">LN(n)
</pre>
<p class="subhead2"><a id="SQLQR328"></a><a id="sthref510"></a><a id="sthref511"></a><a class="olink SQLRF06327" href="../SQLRF/functions103.htm#SQLRF06327">LNNVL</a></p>
<pre dir="ltr">LNNVL(condition)
</pre>
<p class="subhead2"><a id="SQLQR329"></a><a id="sthref512"></a><a id="sthref513"></a><a class="olink SQLRF00660" href="../SQLRF/functions104.htm#SQLRF00660">LOCALTIMESTAMP</a></p>
<pre dir="ltr">LOCALTIMESTAMP [ (timestamp_precision) ]
</pre>
<p class="subhead2"><a id="SQLQR330"></a><a id="sthref514"></a><a id="sthref515"></a><a class="olink SQLRF00661" href="../SQLRF/functions105.htm#SQLRF00661">LOG</a></p>
<pre dir="ltr">LOG(n2, n1)
</pre>
<p class="subhead2"><a id="SQLQR331"></a><a id="sthref516"></a><a id="sthref517"></a><a class="olink SQLRF00662" href="../SQLRF/functions106.htm#SQLRF00662">LOWER</a></p>
<pre dir="ltr">LOWER(char)
</pre>
<p class="subhead2"><a id="SQLQR332"></a><a id="sthref518"></a><a id="sthref519"></a><a class="olink SQLRF00663" href="../SQLRF/functions107.htm#SQLRF00663">LPAD</a></p>
<pre dir="ltr">LPAD(expr1, n [, expr2 ])
</pre>
<p class="subhead2"><a id="SQLQR333"></a><a id="sthref520"></a><a id="sthref521"></a><a class="olink SQLRF00664" href="../SQLRF/functions108.htm#SQLRF00664">LTRIM</a></p>
<pre dir="ltr">LTRIM(char [, set ])
</pre>
<p class="subhead2"><a id="SQLQR334"></a><a id="sthref522"></a><a id="sthref523"></a><a class="olink SQLRF00665" href="../SQLRF/functions109.htm#SQLRF00665">MAKE_REF</a></p>
<pre dir="ltr">MAKE_REF({ table | view } , key [, key ]...)
</pre>
<p class="subhead2"><a id="SQLQR335"></a><a id="sthref524"></a><a id="sthref525"></a><a class="olink SQLRF00666" href="../SQLRF/functions110.htm#SQLRF00666">MAX</a></p>
<pre dir="ltr">MAX([ DISTINCT | ALL ] expr) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR336"></a><a id="sthref526"></a><a id="sthref527"></a><a class="olink SQLRF06315" href="../SQLRF/functions111.htm#SQLRF06315">MEDIAN</a></p>
<pre dir="ltr">MEDIAN(expr) [ OVER (query_partition_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR337"></a><a id="sthref528"></a><a id="sthref529"></a><a class="olink SQLRF00667" href="../SQLRF/functions112.htm#SQLRF00667">MIN</a></p>
<pre dir="ltr">MIN([ DISTINCT | ALL ] expr) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR338"></a><a id="sthref530"></a><a id="sthref531"></a><a class="olink SQLRF00668" href="../SQLRF/functions113.htm#SQLRF00668">MOD</a></p>
<pre dir="ltr">MOD(n2, n1)
</pre>
<p class="subhead2"><a id="SQLQR339"></a><a id="sthref532"></a><a id="sthref533"></a><a class="olink SQLRF00669" href="../SQLRF/functions114.htm#SQLRF00669">MONTHS_BETWEEN</a></p>
<pre dir="ltr">MONTHS_BETWEEN(date1, date2)
</pre>
<p class="subhead2"><a id="SQLQR340"></a><a id="sthref534"></a><a id="sthref535"></a><a class="olink SQLRF06311" href="../SQLRF/functions115.htm#SQLRF06311">NANVL</a></p>
<pre dir="ltr">NANVL(n2, n1)
</pre>
<p class="subhead2"><a id="SQLQR341"></a><a id="sthref536"></a><a id="sthref537"></a><a class="olink SQLRF00670" href="../SQLRF/functions116.htm#SQLRF00670">NCHR</a></p>
<pre dir="ltr">NCHR(number)
</pre>
<p class="subhead2"><a id="SQLQR342"></a><a id="sthref538"></a><a id="sthref539"></a><a class="olink SQLRF00671" href="../SQLRF/functions117.htm#SQLRF00671">NEW_TIME</a></p>
<pre dir="ltr">NEW_TIME(date, timezone1, timezone2)
</pre>
<p class="subhead2"><a id="SQLQR343"></a><a id="sthref540"></a><a id="sthref541"></a><a class="olink SQLRF00672" href="../SQLRF/functions118.htm#SQLRF00672">NEXT_DAY</a></p>
<pre dir="ltr">NEXT_DAY(date, char)
</pre>
<p class="subhead2"><a id="SQLQR344"></a><a id="sthref542"></a><a id="sthref543"></a><a class="olink SQLRF00673" href="../SQLRF/functions119.htm#SQLRF00673">NLS_CHARSET_DECL_LEN</a></p>
<pre dir="ltr">NLS_CHARSET_DECL_LEN(byte_count, char_set_id)
</pre>
<p class="subhead2"><a id="SQLQR345"></a><a id="sthref544"></a><a id="sthref545"></a><a class="olink SQLRF00674" href="../SQLRF/functions120.htm#SQLRF00674">NLS_CHARSET_ID</a></p>
<pre dir="ltr">NLS_CHARSET_ID(string)
</pre>
<p class="subhead2"><a id="SQLQR346"></a><a id="sthref546"></a><a id="sthref547"></a><a class="olink SQLRF00675" href="../SQLRF/functions121.htm#SQLRF00675">NLS_CHARSET_NAME</a></p>
<pre dir="ltr">NLS_CHARSET_NAME(number)
</pre>
<p class="subhead2"><a id="SQLQR347"></a><a id="sthref548"></a><a id="sthref549"></a><a class="olink SQLRF00676" href="../SQLRF/functions122.htm#SQLRF00676">NLS_INITCAP</a></p>
<pre dir="ltr">NLS_INITCAP(char [, &#39;nlsparam&#39; ])
</pre>
<p class="subhead2"><a id="SQLQR348"></a><a id="sthref550"></a><a id="sthref551"></a><a class="olink SQLRF00677" href="../SQLRF/functions123.htm#SQLRF00677">NLS_LOWER</a></p>
<pre dir="ltr">NLS_LOWER(char [, &#39;nlsparam&#39; ])
</pre>
<p class="subhead2"><a id="SQLQR349"></a><a id="sthref552"></a><a id="sthref553"></a><a class="olink SQLRF00679" href="../SQLRF/functions124.htm#SQLRF00679">NLS_UPPER</a></p>
<pre dir="ltr">NLS_UPPER(char [, &#39;nlsparam&#39; ])
</pre>
<p class="subhead2"><a id="SQLQR350"></a><a id="sthref554"></a><a id="sthref555"></a><a class="olink SQLRF00678" href="../SQLRF/functions125.htm#SQLRF00678">NLSSORT</a></p>
<pre dir="ltr">NLSSORT(char [, &#39;nlsparam&#39; ])
</pre>
<p class="subhead2"><a id="SQLQR351"></a><a id="sthref556"></a><a id="sthref557"></a><a class="olink SQLRF30031" href="../SQLRF/functions126.htm#SQLRF30031">NTH_VALUE</a></p>
<pre dir="ltr">NTH_VALUE(measure_expr, n)
  [ FROM { FIRST | LAST } ][ { RESPECT | IGNORE } NULLS ] 
  OVER (analytic_clause)
</pre>
<p class="subhead2"><a id="SQLQR352"></a><a id="sthref558"></a><a id="sthref559"></a><a class="olink SQLRF00680" href="../SQLRF/functions127.htm#SQLRF00680">NTILE</a></p>
<pre dir="ltr">NTILE(expr) OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR353"></a><a id="sthref560"></a><a id="sthref561"></a><a class="olink SQLRF00681" href="../SQLRF/functions128.htm#SQLRF00681">NULLIF</a></p>
<pre dir="ltr">NULLIF(expr1, expr2)
</pre>
<p class="subhead2"><a id="SQLQR354"></a><a id="sthref562"></a><a id="sthref563"></a><a class="olink SQLRF00682" href="../SQLRF/functions129.htm#SQLRF00682">NUMTODSINTERVAL</a></p>
<pre dir="ltr">NUMTODSINTERVAL(n, &#39;interval_unit&#39;)
</pre>
<p class="subhead2"><a id="SQLQR355"></a><a id="sthref564"></a><a id="sthref565"></a><a class="olink SQLRF00683" href="../SQLRF/functions130.htm#SQLRF00683">NUMTOYMINTERVAL</a></p>
<pre dir="ltr">NUMTOYMINTERVAL(n, &#39;interval_unit&#39;)
</pre>
<p class="subhead2"><a id="SQLQR356"></a><a id="sthref566"></a><a id="sthref567"></a><a class="olink SQLRF00684" href="../SQLRF/functions131.htm#SQLRF00684">NVL</a></p>
<pre dir="ltr">NVL(expr1, expr2)
</pre>
<p class="subhead2"><a id="SQLQR357"></a><a id="sthref568"></a><a id="sthref569"></a><a class="olink SQLRF00685" href="../SQLRF/functions132.htm#SQLRF00685">NVL2</a></p>
<pre dir="ltr">NVL2(expr1, expr2, expr3)
</pre>
<p class="subhead2"><a id="SQLQR358"></a><a id="sthref570"></a><a id="sthref571"></a><a class="olink SQLRF30032" href="../SQLRF/functions133.htm#SQLRF30032">ORA_DST_AFFECTED</a></p>
<pre dir="ltr">ORA_DST_AFFECTED(datetime_expr)
</pre>
<p class="subhead2"><a id="SQLQR359"></a><a id="sthref572"></a><a id="sthref573"></a><a class="olink SQLRF30034" href="../SQLRF/functions134.htm#SQLRF30034">ORA_DST_CONVERT</a></p>
<pre dir="ltr">ORA_DST_CONVERT(datetime_expr [, integer [, integer ]])
</pre>
<p class="subhead2"><a id="SQLQR360"></a><a id="sthref574"></a><a id="sthref575"></a><a class="olink SQLRF30033" href="../SQLRF/functions135.htm#SQLRF30033">ORA_DST_ERROR</a></p>
<pre dir="ltr">ORA_DST_ERROR(datetime_expr)
</pre>
<p class="subhead2"><a id="SQLQR361"></a><a id="sthref576"></a><a id="sthref577"></a><a class="olink SQLRF06313" href="../SQLRF/functions136.htm#SQLRF06313">ORA_HASH</a></p>
<pre dir="ltr">ORA_HASH(expr [, max_bucket [, seed_value ] ])
</pre>
<p class="subhead2"><a id="SQLQR999"></a><a id="sthref578"></a><a id="sthref579"></a><a class="olink SQLRF55902" href="../SQLRF/functions137.htm#SQLRF55902">ORA_INVOKING_USER</a></p>
<pre dir="ltr">ORA_INVOKING_USER
</pre>
<p class="subhead2"><a id="SQLQR1000"></a><a id="sthref580"></a><a id="sthref581"></a><a class="olink SQLRF55906" href="../SQLRF/functions138.htm#SQLRF55906">ORA_INVOKING_USERID</a></p>
<pre dir="ltr">ORA_INVOKING_USERID
</pre>
<p class="subhead2"><a id="SQLQR362"></a><a id="sthref582"></a><a id="sthref583"></a><a class="olink SQLRF06177" href="../SQLRF/functions139.htm#SQLRF06177">PATH</a></p>
<pre dir="ltr">PATH(correlation_integer)
</pre>
<p class="subhead2"><a id="SQLQR363"></a><a id="sthref584"></a><a id="sthref585"></a><a class="olink SQLRF00686" href="../SQLRF/functions140.htm#SQLRF00686">PERCENT_RANK (aggregate)</a></p>
<pre dir="ltr">PERCENT_RANK(expr [, expr ]...) WITHIN GROUP
  (ORDER BY
   expr [ DESC | ASC ]
        [NULLS { FIRST | LAST } ]
   [, expr [ DESC | ASC ]
           [NULLS { FIRST | LAST } ]
   ]...
  )
</pre>
<p class="subhead2"><a id="SQLQR364"></a><a id="sthref586"></a><a id="sthref587"></a><a class="olink SQLRF00686" href="../SQLRF/functions140.htm#SQLRF00686">PERCENT_RANK (analytic)</a></p>
<pre dir="ltr">PERCENT_RANK( )
   OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR365"></a><a id="sthref588"></a><a id="sthref589"></a><a class="olink SQLRF00687" href="../SQLRF/functions141.htm#SQLRF00687">PERCENTILE_CONT</a></p>
<pre dir="ltr">PERCENTILE_CONT(expr) WITHIN GROUP
  (ORDER BY expr [ DESC | ASC ])
  [ OVER (query_partition_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR366"></a><a id="sthref590"></a><a id="sthref591"></a><a class="olink SQLRF00688" href="../SQLRF/functions142.htm#SQLRF00688">PERCENTILE_DISC</a></p>
<pre dir="ltr">PERCENTILE_DISC(expr) WITHIN GROUP
  (ORDER BY expr [ DESC | ASC ])
  [ OVER (query_partition_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR367"></a><a id="sthref592"></a><a id="sthref593"></a><a class="olink SQLRF00689" href="../SQLRF/functions143.htm#SQLRF00689">POWER</a></p>
<pre dir="ltr">POWER(n2, n1)
</pre>
<p class="subhead2"><a id="SQLQR368"></a><a id="sthref594"></a><a id="sthref595"></a><a class="olink SQLRF06306" href="../SQLRF/functions144.htm#SQLRF06306">POWERMULTISET</a></p>
<pre dir="ltr">POWERMULTISET(expr)
</pre>
<p class="subhead2"><a id="SQLQR369"></a><a id="sthref596"></a><a id="sthref597"></a><a class="olink SQLRF06307" href="../SQLRF/functions145.htm#SQLRF06307">POWERMULTISET_BY_CARDINALITY</a></p>
<pre dir="ltr">POWERMULTISET_BY_CARDINALITY(expr, cardinality)
</pre>
<p class="subhead2"><a id="SQLQR370"></a><a id="sthref598"></a><a id="sthref599"></a><a class="olink SQLRF06219" href="../SQLRF/functions146.htm#SQLRF06219">PREDICTION</a></p>
<pre dir="ltr">PREDICTION ( [ schema . ] model [ cost_matrix_clause ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1124"></a><a id="sthref600"></a><a id="sthref601"></a><a class="olink SQLRF55757" href="../SQLRF/functions146.htm#SQLRF55757">PREDICTION (analytic)</a></p>
<pre dir="ltr">PREDICTION ( ( OF ANOMALY | FOR expr ) [ cost_matrix_clause ] mining_attribute_clause )
           OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR371"></a><a id="sthref602"></a><a id="sthref603"></a><a class="olink SQLRF20020" href="../SQLRF/functions147.htm#SQLRF20020">PREDICTION_BOUNDS</a></p>
<pre dir="ltr">PREDICTION_BOUNDS ( [schema.] model [, confidence_level [, class_value]]
                    mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR372"></a><a id="sthref604"></a><a id="sthref605"></a><a class="olink SQLRF06210" href="../SQLRF/functions148.htm#SQLRF06210">PREDICTION_COST</a></p>
<pre dir="ltr">PREDICTION_COST ( [ schema . ] model [ , class ] cost_matrix_clause mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1125"></a><a id="sthref606"></a><a id="sthref607"></a><a class="olink SQLRF55761" href="../SQLRF/functions148.htm#SQLRF55761">PREDICTION_COST (analytic)</a></p>
<pre dir="ltr">PREDICTION_COST ( ( OF ANOMALY | FOR expr ) [ , class ]
                  cost_matrix_clause mining_attribute_clause )
                OVER (mining_analytic_clause)
</pre>
<p class="subhead2"><a id="SQLQR373"></a><a id="sthref608"></a><a id="sthref609"></a><a class="olink SQLRF06211" href="../SQLRF/functions149.htm#SQLRF06211">PREDICTION_DETAILS</a></p>
<pre dir="ltr">PREDICTION_DETAILS ( [ schema . ] model 
                     [ , class_value [ , topN ] ] [ DESC | ASC | ABS ]
                     mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1126"></a><a id="sthref610"></a><a id="sthref611"></a><a class="olink SQLRF55765" href="../SQLRF/functions149.htm#SQLRF55765">PREDICTION_DETAILS (analytic)</a></p>
<pre dir="ltr">PREDICTION_DETAILS ( ( OF ANOMALY | FOR expr ) [ , class_value [ , topN ] ]
                     [ DESC | ASC | ABS ] mining_attribute_clause )
                   OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR374"></a><a id="sthref612"></a><a id="sthref613"></a><a class="olink SQLRF06212" href="../SQLRF/functions150.htm#SQLRF06212">PREDICTION_PROBABILITY</a></p>
<pre dir="ltr">PREDICTION_PROBABILITY ( [ schema . ] model [ , class ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1127"></a><a id="sthref614"></a><a id="sthref615"></a><a class="olink SQLRF55769" href="../SQLRF/functions150.htm#SQLRF55769">PREDICTION_PROBABILITY (analytic)</a></p>
<pre dir="ltr">PREDICTION_PROBABILITY ( ( OF ANOMALY | FOR expr ) [ , class ]
                         mining_attribute_clause )
                       OVER (mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR375"></a><a id="sthref616"></a><a id="sthref617"></a><a class="olink SQLRF06233" href="../SQLRF/functions151.htm#SQLRF06233">PREDICTION_SET</a></p>
<pre dir="ltr">PREDICTION_SET ( [ schema . ] model [ , bestN [ , cutoff ] ] 
                 [ cost_matrix_clause ] mining_attribute_clause )
</pre>
<p class="subhead2"><a id="SQLQR1128"></a><a id="sthref618"></a><a id="sthref619"></a><a class="olink SQLRF55773" href="../SQLRF/functions151.htm#SQLRF55773">PREDICTION_SET (analytic)</a></p>
<pre dir="ltr">PREDICTION_SET ( ( OF ANOMALY | FOR &#34;expr&#34; ) [ , bestN [ , cutoff ] ]
                 [ cost_matrix_clause ] mining_attribute_clause )
               OVER ( mining_analytic_clause )
</pre>
<p class="subhead2"><a id="SQLQR376"></a><a id="sthref620"></a><a id="sthref621"></a><a class="olink SQLRF06178" href="../SQLRF/functions152.htm#SQLRF06178">PRESENTNNV</a></p>
<pre dir="ltr">PRESENTNNV(cell_reference, expr1, expr2)
</pre>
<p class="subhead2"><a id="SQLQR377"></a><a id="sthref622"></a><a id="sthref623"></a><a class="olink SQLRF06179" href="../SQLRF/functions153.htm#SQLRF06179">PRESENTV</a></p>
<pre dir="ltr">PRESENTV(cell_reference, expr1, expr2)
</pre>
<p class="subhead2"><a id="SQLQR378"></a><a id="sthref624"></a><a id="sthref625"></a><a class="olink SQLRF06180" href="../SQLRF/functions154.htm#SQLRF06180">PREVIOUS</a></p>
<pre dir="ltr">PREVIOUS(cell_reference)
</pre>
<p class="subhead2"><a id="SQLQR379"></a><a id="sthref626"></a><a id="sthref627"></a><a class="olink SQLRF00690" href="../SQLRF/functions155.htm#SQLRF00690">RANK (aggregate)</a></p>
<pre dir="ltr">RANK(expr [, expr ]...) WITHIN GROUP
   (ORDER BY
    expr [ DESC | ASC ]
         [ NULLS { FIRST | LAST } ]
    [, expr [ DESC | ASC ]
            [ NULLS { FIRST | LAST } ]
    ]...
   )
</pre>
<p class="subhead2"><a id="SQLQR380"></a><a id="sthref628"></a><a id="sthref629"></a><a class="olink SQLRF00690" href="../SQLRF/functions155.htm#SQLRF00690">RANK (analytic)</a></p>
<pre dir="ltr">RANK( )
   OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR381"></a><a id="sthref630"></a><a id="sthref631"></a><a class="olink SQLRF00691" href="../SQLRF/functions156.htm#SQLRF00691">RATIO_TO_REPORT</a></p>
<pre dir="ltr">RATIO_TO_REPORT(expr)
   OVER ([ query_partition_clause ])
</pre>
<p class="subhead2"><a id="SQLQR382"></a><a id="sthref632"></a><a id="sthref633"></a><a class="olink SQLRF00692" href="../SQLRF/functions157.htm#SQLRF00692">RAWTOHEX</a></p>
<pre dir="ltr">RAWTOHEX(raw)
</pre>
<p class="subhead2"><a id="SQLQR383"></a><a id="sthref634"></a><a id="sthref635"></a><a class="olink SQLRF00693" href="../SQLRF/functions158.htm#SQLRF00693">RAWTONHEX</a></p>
<pre dir="ltr">RAWTONHEX(raw)
</pre>
<p class="subhead2"><a id="SQLQR384"></a><a id="sthref636"></a><a id="sthref637"></a><a class="olink SQLRF00694" href="../SQLRF/functions159.htm#SQLRF00694">REF</a></p>
<pre dir="ltr">REF (correlation_variable)
</pre>
<p class="subhead2"><a id="SQLQR385"></a><a id="sthref638"></a><a id="sthref639"></a><a class="olink SQLRF00695" href="../SQLRF/functions160.htm#SQLRF00695">REFTOHEX</a></p>
<pre dir="ltr">REFTOHEX (expr)
</pre>
<p class="subhead2"><a id="SQLQR386"></a><a class="olink SQLRF20014" href="../SQLRF/functions161.htm#SQLRF20014">REGEXP_COUNT</a> <a id="sthref640"></a><a id="sthref641"></a></p>
<pre dir="ltr">REGEXP_COUNT (source_char, pattern [, position [, match_param]])
</pre>
<p class="subhead2"><a id="SQLQR387"></a><a id="sthref642"></a><a id="sthref643"></a><a class="olink SQLRF06300" href="../SQLRF/functions162.htm#SQLRF06300">REGEXP_INSTR</a></p>
<pre dir="ltr">REGEXP_INSTR ( source_char, pattern
               [, position
                  [, occurrence
                     [, return_opt
                        [, match_param
                           [, subexpr ]
                        ]
                     ]
                  ]
               ]
             )
</pre>
<p class="subhead2"><a id="SQLQR388"></a><a id="sthref644"></a><a id="sthref645"></a><a class="olink SQLRF06302" href="../SQLRF/functions163.htm#SQLRF06302">REGEXP_REPLACE</a></p>
<pre dir="ltr">REGEXP_REPLACE ( source_char, pattern
                 [, replace_string
                    [, position
                       [, occurrence
                          [, match_param ]
                       ]
                    ]
                 ]
               )
</pre>
<p class="subhead2"><a id="SQLQR389"></a><a id="sthref646"></a><a id="sthref647"></a><a class="olink SQLRF06303" href="../SQLRF/functions164.htm#SQLRF06303">REGEXP_SUBSTR</a></p>
<pre dir="ltr">REGEXP_SUBSTR ( source_char, pattern
                [, position
                   [, occurrence
                      [, match_param
                         [, subexpr ]
                      ]
                   ]
                ]
              )
</pre>
<p class="subhead2"><a id="SQLQR390"></a><a id="sthref648"></a><a id="sthref649"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_AVGX</a>, <a id="sthref650"></a><a id="sthref651"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_AVGY</a>, <a id="sthref652"></a><a id="sthref653"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_COUNT</a>, <a id="sthref654"></a><a id="sthref655"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_INTERCEPT</a>, <a id="sthref656"></a><a id="sthref657"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_R2</a>, <a id="sthref658"></a><a id="sthref659"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_SLOPE</a>, <a id="sthref660"></a><a id="sthref661"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_SXX</a>, <a id="sthref662"></a><a id="sthref663"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_SXY</a>, <a id="sthref664"></a><a id="sthref665"></a><a class="olink SQLRF00696" href="../SQLRF/functions165.htm#SQLRF00696">REGR_SYY</a></p>
<pre dir="ltr">{ REGR_SLOPE 
| REGR_INTERCEPT 
| REGR_COUNT 
| REGR_R2 
| REGR_AVGX
| REGR_AVGY 
| REGR_SXX 
| REGR_SYY 
| REGR_SXY
}
(expr1 , expr2)
[ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR391"></a><a id="sthref666"></a><a id="sthref667"></a><a class="olink SQLRF06312" href="../SQLRF/functions166.htm#SQLRF06312">REMAINDER</a></p>
<pre dir="ltr">REMAINDER(n2, n1)
</pre>
<p class="subhead2"><a id="SQLQR392"></a><a id="sthref668"></a><a id="sthref669"></a><a class="olink SQLRF00697" href="../SQLRF/functions167.htm#SQLRF00697">REPLACE</a></p>
<pre dir="ltr">REPLACE(char, search_string
        [, replacement_string ]
       )
</pre>
<p class="subhead2"><a id="SQLQR393"></a><a id="sthref670"></a><a id="sthref671"></a><a class="olink SQLRF00699" href="../SQLRF/functions168.htm#SQLRF00699">ROUND (date)</a></p>
<pre dir="ltr">ROUND(date [, fmt ])
</pre>
<p class="subhead2"><a id="SQLQR394"></a><a id="sthref672"></a><a id="sthref673"></a><a class="olink SQLRF00698" href="../SQLRF/functions169.htm#SQLRF00698">ROUND (number)</a></p>
<pre dir="ltr">ROUND(n [, integer ])
</pre>
<p class="subhead2"><a id="SQLQR395"></a><a id="sthref674"></a><a id="sthref675"></a><a class="olink SQLRF06100" href="../SQLRF/functions170.htm#SQLRF06100">ROW_NUMBER</a></p>
<pre dir="ltr">ROW_NUMBER( )
   OVER ([ query_partition_clause ] order_by_clause)
</pre>
<p class="subhead2"><a id="SQLQR396"></a><a id="sthref676"></a><a id="sthref677"></a><a class="olink SQLRF06101" href="../SQLRF/functions171.htm#SQLRF06101">ROWIDTOCHAR</a></p>
<pre dir="ltr">ROWIDTOCHAR(rowid)
</pre>
<p class="subhead2"><a id="SQLQR397"></a><a id="sthref678"></a><a id="sthref679"></a><a class="olink SQLRF06102" href="../SQLRF/functions172.htm#SQLRF06102">ROWIDTONCHAR</a></p>
<pre dir="ltr">ROWIDTONCHAR(rowid)
</pre>
<p class="subhead2"><a id="SQLQR398"></a><a id="sthref680"></a><a id="sthref681"></a><a class="olink SQLRF06103" href="../SQLRF/functions173.htm#SQLRF06103">RPAD</a></p>
<pre dir="ltr">RPAD(expr1 , n [, expr2 ])
</pre>
<p class="subhead2"><a id="SQLQR399"></a><a id="sthref682"></a><a id="sthref683"></a><a class="olink SQLRF06104" href="../SQLRF/functions174.htm#SQLRF06104">RTRIM</a></p>
<pre dir="ltr">RTRIM(char [, set ])
</pre>
<p class="subhead2"><a id="SQLQR400"></a><a id="sthref684"></a><a id="sthref685"></a><a class="olink SQLRF06325" href="../SQLRF/functions175.htm#SQLRF06325">SCN_TO_TIMESTAMP</a></p>
<pre dir="ltr">SCN_TO_TIMESTAMP(number)
</pre>
<p class="subhead2"><a id="SQLQR401"></a><a id="sthref686"></a><a id="sthref687"></a><a class="olink SQLRF06105" href="../SQLRF/functions176.htm#SQLRF06105">SESSIONTIMEZONE</a></p>
<pre dir="ltr">SESSIONTIMEZONE
</pre>
<p class="subhead2"><a id="SQLQR402"></a><a id="sthref688"></a><a id="sthref689"></a><a class="olink SQLRF06308" href="../SQLRF/functions177.htm#SQLRF06308">SET</a></p>
<pre dir="ltr">SET (nested_table)
</pre>
<p class="subhead2"><a id="SQLQR403"></a><a id="sthref690"></a><a id="sthref691"></a><a class="olink SQLRF06106" href="../SQLRF/functions178.htm#SQLRF06106">SIGN</a></p>
<pre dir="ltr">SIGN(n)
</pre>
<p class="subhead2"><a id="SQLQR404"></a><a id="sthref692"></a><a id="sthref693"></a><a class="olink SQLRF06107" href="../SQLRF/functions179.htm#SQLRF06107">SIN</a></p>
<pre dir="ltr">SIN(n)
</pre>
<p class="subhead2"><a id="SQLQR405"></a><a id="sthref694"></a><a id="sthref695"></a><a class="olink SQLRF06108" href="../SQLRF/functions180.htm#SQLRF06108">SINH</a></p>
<pre dir="ltr">SINH(n)
</pre>
<p class="subhead2"><a id="SQLQR406"></a><a id="sthref696"></a><a id="sthref697"></a><a class="olink SQLRF06109" href="../SQLRF/functions181.htm#SQLRF06109">SOUNDEX</a></p>
<pre dir="ltr">SOUNDEX(char)
</pre>
<p class="subhead2"><a id="SQLQR407"></a><a id="sthref698"></a><a id="sthref699"></a><a class="olink SQLRF06110" href="../SQLRF/functions182.htm#SQLRF06110">SQRT</a></p>
<pre dir="ltr">SQRT(n)
</pre>
<p class="subhead2"><a id="SQLQR1001"></a><a id="sthref700"></a><a id="sthref701"></a><a class="olink SQLRF55647" href="../SQLRF/functions183.htm#SQLRF55647">STANDARD_HASH</a></p>
<pre dir="ltr">STANDARD_HASH(expr [, &#39;method&#39; ])
</pre>
<p class="subhead2"><a id="SQLQR408"></a><a id="sthref702"></a><a id="sthref703"></a><a class="olink SQLRF06316" href="../SQLRF/functions184.htm#SQLRF06316">STATS_BINOMIAL_TEST</a></p>
<pre dir="ltr">STATS_BINOMIAL_TEST(expr1, expr2, p
                    [, { TWO_SIDED_PROB
                       | EXACT_PROB
                       | ONE_SIDED_PROB_OR_MORE
                       | ONE_SIDED_PROB_OR_LESS
                       }
                    ]
                   )
</pre>
<p class="subhead2"><a id="SQLQR409"></a><a id="sthref704"></a><a id="sthref705"></a><a class="olink SQLRF06317" href="../SQLRF/functions185.htm#SQLRF06317">STATS_CROSSTAB</a></p>
<pre dir="ltr">STATS_CROSSTAB(expr1, expr2
               [, { CHISQ_OBS
                  | CHISQ_SIG
                  | CHISQ_DF
                  | PHI_COEFFICIENT
                  | CRAMERS_V
                  | CONT_COEFFICIENT
                  | COHENS_K
                  }
               ]
              )
</pre>
<p class="subhead2"><a id="SQLQR410"></a><a id="sthref706"></a><a id="sthref707"></a><a class="olink SQLRF06318" href="../SQLRF/functions186.htm#SQLRF06318">STATS_F_TEST</a></p>
<pre dir="ltr">STATS_F_TEST(expr1, expr2
             [, { { STATISTIC
                  | DF_NUM
                  | DF_DEN
                  | ONE_SIDED_SIG
    } , expr3
                | TWO_SIDED_SIG
                }
             ]
            )
</pre>
<p class="subhead2"><a id="SQLQR411"></a><a id="sthref708"></a><a id="sthref709"></a><a class="olink SQLRF06319" href="../SQLRF/functions187.htm#SQLRF06319">STATS_KS_TEST</a></p>
<pre dir="ltr">STATS_KS_TEST(expr1, expr2
              [, { STATISTIC | SIG } ]
             )
</pre>
<p class="subhead2"><a id="SQLQR412"></a><a id="sthref710"></a><a id="sthref711"></a><a class="olink SQLRF06320" href="../SQLRF/functions188.htm#SQLRF06320">STATS_MODE</a></p>
<pre dir="ltr">STATS_MODE(expr)
</pre>
<p class="subhead2"><a id="SQLQR413"></a><a id="sthref712"></a><a id="sthref713"></a><a class="olink SQLRF06321" href="../SQLRF/functions189.htm#SQLRF06321">STATS_MW_TEST</a></p>
<pre dir="ltr">STATS_MW_TEST(expr1, expr2
              [, { STATISTIC
                 | U_STATISTIC
                 | ONE_SIDED_SIG , expr3
                 | TWO_SIDED_SIG
                 }
              ]
             )
</pre>
<p class="subhead2"><a id="SQLQR414"></a><a id="sthref714"></a><a id="sthref715"></a><a class="olink SQLRF06322" href="../SQLRF/functions190.htm#SQLRF06322">STATS_ONE_WAY_ANOVA</a></p>
<pre dir="ltr">STATS_ONE_WAY_ANOVA(expr1, expr2
                    [, { SUM_SQUARES_BETWEEN
                       | SUM_SQUARES_WITHIN
                       | DF_BETWEEN
                       | DF_WITHIN
                       | MEAN_SQUARES_BETWEEN
                       | MEAN_SQUARES_WITHIN
                       | F_RATIO
                       | SIG
                       }
                    ]
                   )
</pre>
<p class="subhead2"><a id="SQLQR415"></a><a id="sthref716"></a><a id="sthref717"></a><a class="olink SQLRF06323" href="../SQLRF/functions191.htm#SQLRF06323">STATS_T_TEST_INDEP</a>, <a id="sthref718"></a><a id="sthref719"></a><a class="olink SQLRF06323" href="../SQLRF/functions191.htm#SQLRF06323">STATS_T_TEST_INDEPU</a>, <a id="sthref720"></a><a id="sthref721"></a><a class="olink SQLRF06323" href="../SQLRF/functions191.htm#SQLRF06323">STATS_T_TEST_ONE</a>, <a id="sthref722"></a><a id="sthref723"></a><a class="olink SQLRF06323" href="../SQLRF/functions191.htm#SQLRF06323">STATS_T_TEST_PAIRED</a></p>
<pre dir="ltr">{
  STATS_T_TEST_ONE ( expr1 [, expr2 ]
|
  { { STATS_T_TEST_PAIRED
    | STATS_T_TEST_INDEP
    | STATS_T_TEST_INDEPU
    } ( expr1, expr2
  }
}
[, { { STATISTIC | ONE_SIDED_SIG } , expr3 | TWO_SIDED_SIG | DF } ] )
</pre>
<p class="subhead2"><a id="SQLQR416"></a><a id="sthref724"></a><a id="sthref725"></a><a class="olink SQLRF06324" href="../SQLRF/functions192.htm#SQLRF06324">STATS_WSR_TEST</a></p>
<pre dir="ltr">STATS_WSR_TEST(expr1, expr2
               [, { STATISTIC
                  | ONE_SIDED_SIG
                  | TWO_SIDED_SIG
                  }
               ]
              )
</pre>
<p class="subhead2"><a id="SQLQR417"></a><a id="sthref726"></a><a id="sthref727"></a><a class="olink SQLRF06111" href="../SQLRF/functions193.htm#SQLRF06111">STDDEV</a></p>
<pre dir="ltr">STDDEV([ DISTINCT | ALL ] expr)
   [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR418"></a><a id="sthref728"></a><a id="sthref729"></a><a class="olink SQLRF06112" href="../SQLRF/functions194.htm#SQLRF06112">STDDEV_POP</a></p>
<pre dir="ltr">STDDEV_POP(expr)
   [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR419"></a><a id="sthref730"></a><a id="sthref731"></a><a class="olink SQLRF06113" href="../SQLRF/functions195.htm#SQLRF06113">STDDEV_SAMP</a></p>
<pre dir="ltr">STDDEV_SAMP(expr)
   [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR420"></a><a id="sthref732"></a><a id="sthref733"></a><a class="olink SQLRF06114" href="../SQLRF/functions196.htm#SQLRF06114">SUBSTR</a></p>
<pre dir="ltr">{ SUBSTR
| SUBSTRB
| SUBSTRC
| SUBSTR2
| SUBSTR4
}
(char, position [, substring_length ])
</pre>
<p class="subhead2"><a id="SQLQR421"></a><a id="sthref734"></a><a id="sthref735"></a><a class="olink SQLRF06115" href="../SQLRF/functions197.htm#SQLRF06115">SUM</a></p>
<pre dir="ltr">SUM([ DISTINCT | ALL ] expr)
   [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR422"></a><a id="sthref736"></a><a id="sthref737"></a><a class="olink SQLRF06116" href="../SQLRF/functions198.htm#SQLRF06116">SYS_CONNECT_BY_PATH</a></p>
<pre dir="ltr">SYS_CONNECT_BY_PATH(column, char)
</pre>
<p class="subhead2"><a id="SQLQR423"></a><a id="sthref738"></a><a id="sthref739"></a><a class="olink SQLRF06117" href="../SQLRF/functions199.htm#SQLRF06117">SYS_CONTEXT</a></p>
<pre dir="ltr">SYS_CONTEXT(&#39;namespace&#39;, &#39;parameter&#39; [, length ])
</pre>
<p class="subhead2"><a id="SQLQR424"></a><a id="sthref740"></a><a id="sthref741"></a><a class="olink SQLRF06118" href="../SQLRF/functions200.htm#SQLRF06118">SYS_DBURIGEN</a></p>
<pre dir="ltr">SYS_DBURIGEN({ column | attribute }
             [ rowid ]
               [, { column | attribute }
                  [ rowid ]
               ]...
             [, &#39;text ( )&#39; ]
            )
</pre>
<p class="subhead2"><a id="SQLQR425"></a><a id="sthref742"></a><a id="sthref743"></a><a class="olink SQLRF06119" href="../SQLRF/functions201.htm#SQLRF06119">SYS_EXTRACT_UTC</a></p>
<pre dir="ltr">SYS_EXTRACT_UTC(datetime_with_timezone)
</pre>
<p class="subhead2"><a id="SQLQR426"></a><a id="sthref744"></a><a id="sthref745"></a><a class="olink SQLRF06120" href="../SQLRF/functions202.htm#SQLRF06120">SYS_GUID</a></p>
<pre dir="ltr">SYS_GUID( )
</pre>
<p class="subhead2"><a id="SQLQR1170"></a><a id="sthref746"></a><a id="sthref747"></a><a class="olink SQLRF56848" href="../SQLRF/functions203.htm#SQLRF56848">SYS_OP_ZONE_ID</a></p>
<pre dir="ltr">SYS_OP_ZONE_ID( [ [ schema. ] table. | t_alias. ] rowid [, scale ] )
</pre>
<p class="subhead2"><a id="SQLQR427"></a><a id="sthref748"></a><a id="sthref749"></a><a class="olink SQLRF06121" href="../SQLRF/functions204.htm#SQLRF06121">SYS_TYPEID</a></p>
<pre dir="ltr">SYS_TYPEID(object_type_value)
</pre>
<p class="subhead2"><a id="SQLQR428"></a><a id="sthref750"></a><a id="sthref751"></a><a class="olink SQLRF06122" href="../SQLRF/functions205.htm#SQLRF06122">SYS_XMLAGG</a></p>
<pre dir="ltr">SYS_XMLAGG(expr [, fmt ])
</pre>
<p class="subhead2"><a id="SQLQR429"></a><a id="sthref752"></a><a id="sthref753"></a><a class="olink SQLRF06123" href="../SQLRF/functions206.htm#SQLRF06123">SYS_XMLGEN</a></p>
<pre dir="ltr">SYS_XMLGEN(expr [, fmt ])
</pre>
<p class="subhead2"><a id="SQLQR430"></a><a id="sthref754"></a><a id="sthref755"></a><a class="olink SQLRF06124" href="../SQLRF/functions207.htm#SQLRF06124">SYSDATE</a></p>
<pre dir="ltr">SYSDATE
</pre>
<p class="subhead2"><a id="SQLQR431"></a><a id="sthref756"></a><a id="sthref757"></a><a class="olink SQLRF06125" href="../SQLRF/functions208.htm#SQLRF06125">SYSTIMESTAMP</a></p>
<pre dir="ltr">SYSTIMESTAMP
</pre>
<p class="subhead2"><a id="SQLQR432"></a><a id="sthref758"></a><a id="sthref759"></a><a class="olink SQLRF06126" href="../SQLRF/functions209.htm#SQLRF06126">TAN</a></p>
<pre dir="ltr">TAN(n)
</pre>
<p class="subhead2"><a id="SQLQR433"></a><a id="sthref760"></a><a id="sthref761"></a><a class="olink SQLRF06127" href="../SQLRF/functions210.htm#SQLRF06127">TANH</a></p>
<pre dir="ltr">TANH(n)
</pre>
<p class="subhead2"><a id="SQLQR434"></a><a id="sthref762"></a><a id="sthref763"></a><a class="olink SQLRF06326" href="../SQLRF/functions211.htm#SQLRF06326">TIMESTAMP_TO_SCN</a></p>
<pre dir="ltr">TIMESTAMP_TO_SCN(timestamp)
</pre>
<p class="subhead2"><a id="SQLQR435"></a><a id="sthref764"></a><a id="sthref765"></a><a class="olink SQLRF06309" href="../SQLRF/functions212.htm#SQLRF06309">TO_BINARY_DOUBLE</a></p>
<pre dir="ltr">TO_BINARY_DOUBLE(expr [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR436"></a><a id="sthref766"></a><a id="sthref767"></a><a class="olink SQLRF06310" href="../SQLRF/functions213.htm#SQLRF06310">TO_BINARY_FLOAT</a></p>
<pre dir="ltr">TO_BINARY_FLOAT(expr [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR437"></a><a id="sthref768"></a><a id="sthref769"></a><a class="olink SQLRF30029" href="../SQLRF/functions214.htm#SQLRF30029">TO_BLOB</a></p>
<pre dir="ltr">TO_BLOB ( raw_value )
</pre>
<p class="subhead2"><a id="SQLQR438"></a><a id="sthref770"></a><a id="sthref771"></a><a class="olink SQLRF06128" href="../SQLRF/functions215.htm#SQLRF06128">TO_CHAR (character)</a></p>
<pre dir="ltr">TO_CHAR(nchar | clob | nclob)
</pre>
<p class="subhead2"><a id="SQLQR439"></a><a id="sthref772"></a><a id="sthref773"></a><a class="olink SQLRF06129" href="../SQLRF/functions216.htm#SQLRF06129">TO_CHAR (datetime)</a></p>
<pre dir="ltr">TO_CHAR({ datetime | interval } [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR440"></a><a id="sthref774"></a><a id="sthref775"></a><a class="olink SQLRF06130" href="../SQLRF/functions217.htm#SQLRF06130">TO_CHAR (number)</a></p>
<pre dir="ltr">TO_CHAR(n [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR441"></a><a id="sthref776"></a><a id="sthref777"></a><a class="olink SQLRF06131" href="../SQLRF/functions218.htm#SQLRF06131">TO_CLOB</a></p>
<pre dir="ltr">TO_CLOB(lob_column | char)
</pre>
<p class="subhead2"><a id="SQLQR442"></a><a id="sthref778"></a><a id="sthref779"></a><a class="olink SQLRF06132" href="../SQLRF/functions219.htm#SQLRF06132">TO_DATE</a></p>
<pre dir="ltr">TO_DATE(char [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR443"></a><a id="sthref780"></a><a id="sthref781"></a><a class="olink SQLRF06133" href="../SQLRF/functions220.htm#SQLRF06133">TO_DSINTERVAL</a></p>
<pre dir="ltr">TO_DSINTERVAL ( &#39; { sql_format | ds_iso_format } &#39; )
</pre>
<p class="subhead2"><a id="SQLQR444"></a><a id="sthref782"></a><a id="sthref783"></a><a class="olink SQLRF06134" href="../SQLRF/functions221.htm#SQLRF06134">TO_LOB</a></p>
<pre dir="ltr">TO_LOB(long_column)
</pre>
<p class="subhead2"><a id="SQLQR445"></a><a id="sthref784"></a><a id="sthref785"></a><a class="olink SQLRF06135" href="../SQLRF/functions222.htm#SQLRF06135">TO_MULTI_BYTE</a></p>
<pre dir="ltr">TO_MULTI_BYTE(char)
</pre>
<p class="subhead2"><a id="SQLQR446"></a><a id="sthref786"></a><a id="sthref787"></a><a class="olink SQLRF06136" href="../SQLRF/functions223.htm#SQLRF06136">TO_NCHAR (character)</a></p>
<pre dir="ltr">TO_NCHAR({char | clob | nclob})
</pre>
<p class="subhead2"><a id="SQLQR447"></a><a id="sthref788"></a><a id="sthref789"></a><a class="olink SQLRF06137" href="../SQLRF/functions224.htm#SQLRF06137">TO_NCHAR (datetime)</a></p>
<pre dir="ltr">TO_NCHAR({ datetime | interval }
         [, fmt [, &#39;nlsparam&#39; ] ]
        )
</pre>
<p class="subhead2"><a id="SQLQR448"></a><a id="sthref790"></a><a id="sthref791"></a><a class="olink SQLRF06138" href="../SQLRF/functions225.htm#SQLRF06138">TO_NCHAR (number)</a></p>
<pre dir="ltr">TO_NCHAR(n [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR449"></a><a id="sthref792"></a><a id="sthref793"></a><a class="olink SQLRF06139" href="../SQLRF/functions226.htm#SQLRF06139">TO_NCLOB</a></p>
<pre dir="ltr">TO_NCLOB(lob_column | char)
</pre>
<p class="subhead2"><a id="SQLQR450"></a><a id="sthref794"></a><a id="sthref795"></a><a class="olink SQLRF06140" href="../SQLRF/functions227.htm#SQLRF06140">TO_NUMBER</a></p>
<pre dir="ltr">TO_NUMBER(expr [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR451"></a><a id="sthref796"></a><a id="sthref797"></a><a class="olink SQLRF06141" href="../SQLRF/functions228.htm#SQLRF06141">TO_SINGLE_BYTE</a></p>
<pre dir="ltr">TO_SINGLE_BYTE(char)
</pre>
<p class="subhead2"><a id="SQLQR452"></a><a id="sthref798"></a><a id="sthref799"></a><a class="olink SQLRF06142" href="../SQLRF/functions229.htm#SQLRF06142">TO_TIMESTAMP</a></p>
<pre dir="ltr">TO_TIMESTAMP(char [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR453"></a><a id="sthref800"></a><a id="sthref801"></a><a class="olink SQLRF06143" href="../SQLRF/functions230.htm#SQLRF06143">TO_TIMESTAMP_TZ</a></p>
<pre dir="ltr">TO_TIMESTAMP_TZ(char [, fmt [, &#39;nlsparam&#39; ] ])
</pre>
<p class="subhead2"><a id="SQLQR454"></a><a id="sthref802"></a><a id="sthref803"></a><a class="olink SQLRF06144" href="../SQLRF/functions231.htm#SQLRF06144">TO_YMINTERVAL</a></p>
<pre dir="ltr">TO_YMINTERVAL
  ( &#39;  { [+|-] years - months 
       | ym_iso_format 
       } &#39; )
</pre>
<p class="subhead2"><a id="SQLQR455"></a><a id="sthref804"></a><a id="sthref805"></a><a class="olink SQLRF06145" href="../SQLRF/functions232.htm#SQLRF06145">TRANSLATE</a></p>
<pre dir="ltr">TRANSLATE(expr, from_string, to_string)
</pre>
<p class="subhead2"><a id="SQLQR456"></a><a id="sthref806"></a><a id="sthref807"></a><a class="olink SQLRF06146" href="../SQLRF/functions233.htm#SQLRF06146">TRANSLATE ... USING</a></p>
<pre dir="ltr">TRANSLATE ( char USING
          { CHAR_CS | NCHAR_CS }
          )
</pre>
<p class="subhead2"><a id="SQLQR457"></a><a id="sthref808"></a><a id="sthref809"></a><a class="olink SQLRF06148" href="../SQLRF/functions234.htm#SQLRF06148">TREAT</a></p>
<pre dir="ltr">TREAT(expr AS [ REF ] [ schema. ]type)
</pre>
<p class="subhead2"><a id="SQLQR458"></a><a id="sthref810"></a><a id="sthref811"></a><a class="olink SQLRF06149" href="../SQLRF/functions235.htm#SQLRF06149">TRIM</a></p>
<pre dir="ltr">TRIM([ { { LEADING | TRAILING | BOTH }
         [ trim_character ]
       | trim_character
       }
       FROM 
     ]
     trim_source
    )
</pre>
<p class="subhead2"><a id="SQLQR459"></a><a id="sthref812"></a><a id="sthref813"></a><a class="olink SQLRF06151" href="../SQLRF/functions236.htm#SQLRF06151">TRUNC (date)</a></p>
<pre dir="ltr">TRUNC(date [, fmt ])
</pre>
<p class="subhead2"><a id="SQLQR460"></a><a id="sthref814"></a><a id="sthref815"></a><a class="olink SQLRF06150" href="../SQLRF/functions237.htm#SQLRF06150">TRUNC (number)</a></p>
<pre dir="ltr">TRUNC(n1 [, n2 ])
</pre>
<p class="subhead2"><a id="SQLQR461"></a><a id="sthref816"></a><a id="sthref817"></a><a class="olink SQLRF06152" href="../SQLRF/functions238.htm#SQLRF06152">TZ_OFFSET</a></p>
<pre dir="ltr">TZ_OFFSET({ &#39;time_zone_name&#39;
          | &#39;{ + | - } hh : mi&#39;
          | SESSIONTIMEZONE
          | DBTIMEZONE
          }
         )
</pre>
<p class="subhead2"><a id="SQLQR462"></a><a id="sthref818"></a><a id="sthref819"></a><a class="olink SQLRF06153" href="../SQLRF/functions239.htm#SQLRF06153">UID</a></p>
<pre dir="ltr">UID
</pre>
<p class="subhead2"><a id="SQLQR463"></a><a id="sthref820"></a><a id="sthref821"></a><a class="olink SQLRF06154" href="../SQLRF/functions240.htm#SQLRF06154">UNISTR</a></p>
<pre dir="ltr">UNISTR( string )
</pre>
<p class="subhead2"><a id="SQLQR464"></a><a id="sthref822"></a><a id="sthref823"></a><a class="olink SQLRF06172" href="../SQLRF/functions241.htm#SQLRF06172">UPDATEXML</a></p>
<pre dir="ltr">UPDATEXML
      (XMLType_instance,
        XPath_string, value_expr
          [, XPath_string, value_expr ]...
        [, namespace_string ]
      )
</pre>
<p class="subhead2"><a id="SQLQR465"></a><a id="sthref824"></a><a id="sthref825"></a><a class="olink SQLRF06155" href="../SQLRF/functions242.htm#SQLRF06155">UPPER</a></p>
<pre dir="ltr">UPPER(char)
</pre>
<p class="subhead2"><a id="SQLQR466"></a><a id="sthref826"></a><a id="sthref827"></a><a class="olink SQLRF06156" href="../SQLRF/functions243.htm#SQLRF06156">USER</a></p>
<pre dir="ltr">USER
</pre>
<p class="subhead2"><a id="SQLQR467"></a><a id="sthref828"></a><a id="sthref829"></a><a class="olink SQLRF06181" href="../SQLRF/functions272.htm#SQLRF06181">user-defined function</a></p>
<pre dir="ltr">[ schema. ]
{ [ package. ]function | user_defined_operator }
[ @ dblink. ]
[ ( [ [ DISTINCT | ALL ] expr [, expr ]... ] ) ]
</pre>
<p class="subhead2"><a id="SQLQR468"></a><a id="sthref830"></a><a id="sthref831"></a><a class="olink SQLRF06157" href="../SQLRF/functions244.htm#SQLRF06157">USERENV</a></p>
<pre dir="ltr">USERENV(&#39;parameter&#39;)
</pre>
<p class="subhead2"><a id="SQLQR469"></a><a id="sthref832"></a><a id="sthref833"></a><a class="olink SQLRF06158" href="../SQLRF/functions245.htm#SQLRF06158">VALUE</a></p>
<pre dir="ltr">VALUE(correlation_variable)
</pre>
<p class="subhead2"><a id="SQLQR470"></a><a id="sthref834"></a><a id="sthref835"></a><a class="olink SQLRF06159" href="../SQLRF/functions246.htm#SQLRF06159">VAR_POP</a></p>
<pre dir="ltr">VAR_POP(expr) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR471"></a><a id="sthref836"></a><a id="sthref837"></a><a class="olink SQLRF06160" href="../SQLRF/functions247.htm#SQLRF06160">VAR_SAMP</a></p>
<pre dir="ltr">VAR_SAMP(expr) [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR472"></a><a id="sthref838"></a><a id="sthref839"></a><a class="olink SQLRF06161" href="../SQLRF/functions248.htm#SQLRF06161">VARIANCE</a></p>
<pre dir="ltr">VARIANCE([ DISTINCT | ALL ] expr)
        [ OVER (analytic_clause) ]
</pre>
<p class="subhead2"><a id="SQLQR473"></a><a id="sthref840"></a><a id="sthref841"></a><a class="olink SQLRF06162" href="../SQLRF/functions249.htm#SQLRF06162">VSIZE</a></p>
<pre dir="ltr">VSIZE(expr)
</pre>
<p class="subhead2"><a id="SQLQR474"></a><a id="sthref842"></a><a id="sthref843"></a><a class="olink SQLRF06163" href="../SQLRF/functions250.htm#SQLRF06163">WIDTH_BUCKET</a></p>
<pre dir="ltr">WIDTH_BUCKET
   (expr, min_value, max_value, num_buckets)
</pre>
<p class="subhead2"><a id="SQLQR475"></a><a id="sthref844"></a><a id="sthref845"></a><a class="olink SQLRF06165" href="../SQLRF/functions251.htm#SQLRF06165">XMLAGG</a></p>
<pre dir="ltr">XMLAGG(XMLType_instance [ order_by_clause ])
</pre>
<p class="subhead2"><a id="SQLQR476"></a><a class="olink SQLRF20012" href="../SQLRF/functions252.htm#SQLRF20012">XMLCAST</a><a id="sthref846"></a><a id="sthref847"></a></p>
<pre dir="ltr">XMLCAST ( value_expression AS datatype )
</pre>
<p class="subhead2"><a id="SQLQR477"></a><a id="sthref848"></a><a id="sthref849"></a><a class="olink SQLRF06205" href="../SQLRF/functions253.htm#SQLRF06205">XMLCDATA</a></p>
<pre dir="ltr">XMLCDATA ( value_expr )
</pre>
<p class="subhead2"><a id="SQLQR478"></a><a id="sthref850"></a><a id="sthref851"></a><a class="olink SQLRF06166" href="../SQLRF/functions254.htm#SQLRF06166">XMLCOLATTVAL</a></p>
<pre dir="ltr">XMLCOLATTVAL
  (value_expr [ AS { c_alias  | EVALNAME value_expr } ]
    [, value_expr [ AS { c_alias  | EVALNAME value_expr } ]
      ]...
  )
</pre>
<p class="subhead2"><a id="SQLQR479"></a><a id="sthref852"></a><a id="sthref853"></a><a class="olink SQLRF06206" href="../SQLRF/functions255.htm#SQLRF06206">XMLCOMMENT</a></p>
<pre dir="ltr">XMLCOMMENT ( value_expr )
</pre>
<p class="subhead2"><a id="SQLQR480"></a><a id="sthref854"></a><a id="sthref855"></a><a class="olink SQLRF06167" href="../SQLRF/functions256.htm#SQLRF06167">XMLCONCAT</a></p>
<pre dir="ltr">XMLCONCAT(XMLType_instance [, XMLType_instance ]...)
</pre>
<p class="subhead2"><a id="SQLQR481"></a><a id="sthref856"></a><a id="sthref857"></a><a class="olink SQLRF20025" href="../SQLRF/functions257.htm#SQLRF20025">XMLDIFF</a></p>
<pre dir="ltr">XMLDIFF ( XMLType_document, XMLType_document [ , integer, string ] )
</pre>
<p class="subhead2"><a id="SQLQR482"></a><a id="sthref858"></a><a id="sthref859"></a><a class="olink SQLRF06168" href="../SQLRF/functions258.htm#SQLRF06168">XMLELEMENT</a></p>
<pre dir="ltr">XMLELEMENT
 ( [ ENTITYESCAPING | NOENTITYESCAPING ]
   [ NAME ]
     { identifier
     | EVALNAME value_expr
     }
   [, XML_attributes_clause ]
   [, value_expr [ [AS] c_alias ]]...
 )
</pre>
<p class="subhead2"><a id="SQLQR483"></a><a id="sthref860"></a><a id="sthref861"></a><a class="olink SQLRF20013" href="../SQLRF/functions259.htm#SQLRF20013">XMLEXISTS</a></p>
<pre dir="ltr">XMLEXISTS ( XQuery_string [ XML_passing_clause ] )
</pre>
<p class="subhead2"><a id="SQLQR484"></a><a id="sthref862"></a><a id="sthref863"></a><a class="olink SQLRF06169" href="../SQLRF/functions260.htm#SQLRF06169">XMLFOREST</a></p>
<pre dir="ltr">XMLFOREST
  ( value_expr [ AS { c_alias | EVALNAME value_expr } ]
    [, value_expr [ AS { c_alias | EVALNAME value_expr } ]
      ]...
  )
</pre>
<p class="subhead2"><a id="SQLQR485"></a><a id="sthref864"></a><a id="sthref865"></a><a class="olink SQLRF06147" href="../SQLRF/functions261.htm#SQLRF06147">XMLISVALID</a></p>
<pre dir="ltr">XMLISVALID ( XMLType_instance [, XMLSchema_URL [, element ]] )
</pre>
<p class="subhead2"><a id="SQLQR486"></a><a id="sthref866"></a><a id="sthref867"></a><a class="olink SQLRF06207" href="../SQLRF/functions262.htm#SQLRF06207">XMLPARSE</a></p>
<pre dir="ltr">XMLPARSE
  ({ DOCUMENT | CONTENT } value_expr [ WELLFORMED ]
  )
</pre>
<p class="subhead2"><a id="SQLQR487"></a><a id="sthref868"></a><a id="sthref869"></a><a class="olink SQLRF20026" href="../SQLRF/functions263.htm#SQLRF20026">XMLPATCH</a></p>
<pre dir="ltr">XMLPATCH ( XMLType_document, XMLType_document )
</pre>
<p class="subhead2"><a id="SQLQR488"></a><a id="sthref870"></a><a id="sthref871"></a><a class="olink SQLRF06208" href="../SQLRF/functions264.htm#SQLRF06208">XMLPI</a></p>
<pre dir="ltr">XMLPI
 ( { [ NAME ] identifier
   | EVALNAME value_expr
   } [, value_expr ]
 )
</pre>
<p class="subhead2"><a id="SQLQR489"></a><a id="sthref872"></a><a id="sthref873"></a><a class="olink SQLRF06209" href="../SQLRF/functions265.htm#SQLRF06209">XMLQUERY</a></p>
<pre dir="ltr">XMLQUERY
 ( XQuery_string 
   [ XML_passing_clause ] 
   RETURNING CONTENT [NULL ON EMPTY] 
 )
</pre>
<p class="subhead2"><a id="SQLQR490"></a><a id="sthref874"></a><a id="sthref875"></a><a class="olink SQLRF06230" href="../SQLRF/functions266.htm#SQLRF06230">XMLROOT</a></p>
<pre dir="ltr">XMLROOT
  ( value_expr, VERSION 
  { value_expr | NO VALUE }
  [, STANDALONE { YES | NO | NO VALUE } ]
  )
</pre>
<p class="subhead2"><a id="SQLQR491"></a><a id="sthref876"></a><a id="sthref877"></a><a class="olink SQLRF06170" href="../SQLRF/functions267.htm#SQLRF06170">XMLSEQUENCE</a></p>
<pre dir="ltr">XMLSEQUENCE( XMLType_instance
           | sys_refcursor_instance [, fmt ]
           )
</pre>
<p class="subhead2"><a id="SQLQR492"></a><a id="sthref878"></a><a id="sthref879"></a><a class="olink SQLRF06231" href="../SQLRF/functions268.htm#SQLRF06231">XMLSERIALIZE</a></p>
<pre dir="ltr">XMLSERIALIZE
  ( { DOCUMENT | CONTENT } value_expr [ AS datatype ]
    [ ENCODING xml_encoding_spec ]
    [ VERSION string_literal ]
    [ NO INDENT | { INDENT [SIZE = number] } ]
    [ { HIDE | SHOW } DEFAULTS ]
  )
</pre>
<p class="subhead2"><a id="SQLQR493"></a><a id="sthref880"></a><a id="sthref881"></a><a class="olink SQLRF06232" href="../SQLRF/functions269.htm#SQLRF06232">XMLTABLE</a></p>
<pre dir="ltr">XMLTABLE
 ( 
  [ XMLnamespaces_clause , ] XQuery_string XMLTABLE_options 
 )
</pre>
<p class="subhead2"><a id="SQLQR494"></a><a id="sthref882"></a><a id="sthref883"></a><a class="olink SQLRF06171" href="../SQLRF/functions270.htm#SQLRF06171">XMLTRANSFORM</a></p>
<pre dir="ltr">XMLTRANSFORM(XMLType_instance, { XMLType_instance
                               | string
                               }
            )
</pre></div>
<!-- class="sect1" --></div>
<!-- class="chapter" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4934">
<tr>
<td class="cellalignment4943">
<table class="cellalignment4939">
<tr>
<td class="cellalignment4938"><a href="sqlqr02.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4938"><a href="sqlqr03.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4945">
<table class="cellalignment4937">
<tr>
<td class="cellalignment4938"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4938"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4938"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4938"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4938"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4938"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>