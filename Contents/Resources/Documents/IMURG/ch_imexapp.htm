<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-48246"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Multimedia%20Java%20API%20Sample%20Application"></a><title>Oracle Multimedia Java API Sample Application</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="Presents information about using Oracle Database to store, manage, and retrieve images, audio, video, DICOM format medical images and other objects, or other heterogeneous media data in an integrated fashion with other enterprise information. Oracle Multimedia extends Oracle Database reliability, availability, and data management to multimedia content in traditional, Internet, electronic commerce, medical, financial, and other media-rich applications."/>
<meta name="dcterms.created" content="2014-07-31T9:32:45Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Multimedia User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17697-09"/>
<meta name="dcterms.isVersionOf" content="IMURG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="im_glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="ch_cdwizapp.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_metadata.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17697-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/20</span> <!-- End Header -->
<div id="IMURG4000" class="chapter"><a id="CHDCBCDA"></a>
<h1 class="chapter"><span class="secnum">5</span> Oracle Multimedia Java API Sample Application</h1>
<p>This chapter describes the Oracle Multimedia Java API sample application<a id="sthref154"></a><a id="sthref155"></a>. The Oracle Multimedia Java API sample application is a Java application that uses Oracle Multimedia Java classes to demonstrate how to upload, download, update, and delete Oracle Multimedia objects, including image, audio, and video. It also demonstrates how to extract attributes from media content, generate thumbnail images, and display media.</p>
<p>This chapter assumes the following:</p>
<ul>
<li>
<p>You are familiar with developing Java applications using Oracle Multimedia Java classes.</p>
</li>
<li>
<p>You have installed and configured the Oracle Multimedia Java API sample application.</p>
</li>
</ul>
<p>After installing the Oracle Database Examples media, the sample application files and <code>README.txt</code> file are located at:</p>
<p><code><span class="codeinlineitalic">&lt;ORACLE_HOME&gt;</span></code><code>/ord/im/demo/java</code> (on Linux and UNIX)</p>
<p><code><span class="codeinlineitalic">&lt;ORACLE_HOME&gt;</span></code><code>\ord\im\demo\java</code> (on Windows)</p>
<p>This chapter describes how to run the Oracle Multimedia Java API sample application. See <a href="ch_appdev.htm#CHDGJDIB">Section 2.4.1</a> and the <code>README.txt</code> file for additional requirements and instructions on installing, configuring, compiling, and running this sample application.</p>
<p>This chapter includes these sections:</p>
<ul>
<li>
<p><a href="#CEGFHEGF">Running the Oracle Multimedia Java API Sample Application</a></p>
</li>
<li>
<p><a href="#CHDBBDHA">Description of the Oracle Multimedia Java API Sample Application</a></p>
</li>
</ul>
<p class="subhead2"><a id="IMURG11834"></a>More Sample Applications</p>
<p>See these chapters for more sample applications:</p>
<p><a href="ch_phtalbapps.htm#BABGIDFB">Chapter 3</a> describes these Photo Album sample Web applications:</p>
<ul>
<li>
<p>Oracle Multimedia PL/SQL Web Toolkit Photo Album application (<a href="ch_phtalbapps.htm#CHDCHCDE">Section 3.1</a>)</p>
</li>
<li>
<p>Oracle Multimedia Java Servlet Photo Album application (<a href="ch_phtalbapps.htm#BCEEDIEB">Section 3.2</a>)</p>
</li>
<li>
<p>Oracle Multimedia JSP Photo Album application (<a href="ch_phtalbapps.htm#BABHCJFJ">Section 3.3</a>)</p>
</li>
</ul>
<p>These Web applications use PL/SQL scripts, Java servlet files, and JSP files to demonstrate various ways to upload and retrieve media using Oracle Multimedia object types.</p>
<p><a href="ch_cdwizapp.htm#BCEHIBCE">Chapter 4</a> describes the Oracle Multimedia Code Wizard sample application, a media upload and retrieval Web application for the PL/SQL Gateway.</p>
<a id="CEGFHEGF"></a>
<div id="IMURG4100" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.1</span> Running the Oracle Multimedia Java API Sample Application</h2>
<p>To use the Oracle Multimedia Java API sample application to retrieve, save, play, and delete multimedia data from the Oracle Database sample schemas, you must perform these steps:</p>
<ol>
<li>
<p>Install Oracle Database with Oracle Multimedia.</p>
</li>
<li>
<p>Grant the appropriate permissions to the user who is connecting to the database.</p>
</li>
<li>
<p>Compile and start the sample application.</p>
</li>
<li>
<p>Log in and run the sample application.</p>
</li>
</ol>
<p>The following section describes the Java class files, and shows code examples that demonstrate how to use Oracle Multimedia object types and methods and other Oracle objects in a Java application.</p>
</div>
<!-- class="sect1" -->
<a id="CHDBBDHA"></a>
<div id="IMURG4200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.2</span> Description of the Oracle Multimedia Java API Sample Application</h2>
<p>The Oracle Multimedia Java API sample application lets you retrieve multimedia data from the Oracle Database sample schemas, save to a file, play, and delete from the sample schema image, audio, video, and testimonial data using these Oracle Multimedia object types:</p>
<ul>
<li>
<p>OrdImage</p>
</li>
<li>
<p>OrdAudio</p>
</li>
<li>
<p>OrdVideo</p>
</li>
<li>
<p>OrdDoc</p>
</li>
</ul>
<p>This sample application uses the PRODUCT_INFORMATION table in the Order Entry (OE) sample schema, and the ONLINE_MEDIA table in the Product Media (PM) sample schema.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
After installing Oracle Multimedia, if the OE and PM sample schemas do not exist, you must install them manually before compiling and running the sample application.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink COMSC002" href="../COMSC/overview.htm#COMSC002"><span class="italic">Oracle Database Sample Schemas</span></a> for more information about the OE and PM schemas</p>
</div>
<p>The Oracle Multimedia Java API sample application, when compiled, creates the class files shown in <a href="#BABBHIAG">Table 5-1</a>:</p>
<div id="IMURG11877" class="tblruleformal">
<p class="titleintable"><a id="sthref156"></a><a id="BABBHIAG"></a>Table 5-1 Java Class Files in the Compiled Sample Application</p>
<table class="cellalignment1321" title="Java Class Files in the Compiled Sample Application" summary="List of compiled class files" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t4">Name</th>
<th class="cellalignment1322" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t4" headers="r1c1-t4">
<p><code>IMExample</code></p>
</td>
<td class="cellalignment1318" headers="r2c1-t4 r1c2-t4">
<p>Creates the sample application frame and maintains the only connection to the database. This class is the entry point of this sample application.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t4" headers="r1c1-t4">
<p><code>IMExampleFrame</code></p>
</td>
<td class="cellalignment1318" headers="r3c1-t4 r1c2-t4">
<p>Extends the <code>JFrame</code> class and displays the main frame.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t4" headers="r1c1-t4">
<p><code>IMLoginDialog</code></p>
</td>
<td class="cellalignment1318" headers="r4c1-t4 r1c2-t4">
<p>Extends the <code>JDialog</code> class, displays the login dialog box, and creates the connection to the database.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t4" headers="r1c1-t4">
<p><code>IMExampleQuery</code></p>
</td>
<td class="cellalignment1318" headers="r5c1-t4 r1c2-t4">
<p>Performs the SQL SELECT statement to retrieve rows of the <code>OE.PRODUCT_INFORMATION</code> table and displays the content of the table by product ID.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t4" headers="r1c1-t4">
<p><code>IMProductDialog</code></p>
</td>
<td class="cellalignment1318" headers="r6c1-t4 r1c2-t4">
<p>Extends the <code>JDialog</code> class, shows a dialog box to display detailed information for a particular product, including the product ID, product name, and product description. The IMProductDialog class also retrieves and displays the product photo, audio, video, and testimonial data within the appropriate panel. It supports retrieving, saving, deleting, and playing the media data. And, it allows for applying changes or rolling back changes to the media objects.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r7c1-t4" headers="r1c1-t4">
<p><code>IMImagePanel</code></p>
</td>
<td class="cellalignment1318" headers="r7c1-t4 r1c2-t4">
<p>Extends the <code>IMMediaPanel</code> class, displays the product photo and its attributes: MIME type, image height, image width, and content length, and if it applies, generates and displays the thumbnail image and displays lists for reading and writing metadata.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r8c1-t4" headers="r1c1-t4">
<p><code>IMAudioPanel</code></p>
</td>
<td class="cellalignment1318" headers="r8c1-t4 r1c2-t4">
<p>Extends the <code>IMMediaPanel</code> class and displays the product audio and its attributes: MIME type, duration of the audio, and content length.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r9c1-t4" headers="r1c1-t4">
<p><code>IMVideoPanel</code></p>
</td>
<td class="cellalignment1318" headers="r9c1-t4 r1c2-t4">
<p>Extends the <code>IMMediaPanel</code> class and displays the product video and its attributes: MIME type, frame height, frame width, duration of the video, and content length.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r10c1-t4" headers="r1c1-t4">
<p><code>IMDocPanel</code></p>
</td>
<td class="cellalignment1318" headers="r10c1-t4 r1c2-t4">
<p>Extends the <code>IMMediaPanel</code> class and displays the product testimonials and its attributes: MIME type and content length.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r11c1-t4" headers="r1c1-t4">
<p><code>IMLoadFile</code></p>
</td>
<td class="cellalignment1318" headers="r11c1-t4 r1c2-t4">
<p>Loads a media stream (photo, video, audio, and testimonials), from a file to the <code>PM.ONLINE_MEDIA</code> table in the database, and if necessary, inserts a row and initializes the media objects, then updates the media data, sets the media attributes, and generates and updates the thumbnail image if loading a photo.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r12c1-t4" headers="r1c1-t4">
<p><code>IMSaveFile</code></p>
</td>
<td class="cellalignment1318" headers="r12c1-t4 r1c2-t4">
<p>Saves a media stream from the database to a target file.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r13c1-t4" headers="r1c1-t4">
<p><code>IMMediaPanel</code></p>
</td>
<td class="cellalignment1318" headers="r13c1-t4 r1c2-t4">
<p>Extends the <code>JPanel</code> class, lays out the common components for the photo, audio, video, and doc panel with load, save, delete, and play check boxes, initializes the MIME configuration file for each operating system that lists plug-in players and media and their associated MIME types, plays the data stream associated with the MIME type of the media, and enables users to specify their own player to play the media data stream.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p>The major flow among these class files is: <code>IMExample</code> to <code>IMExampleFrame</code> to <code>IMLoginDialog</code> (login) to <code>IMExampleFrame</code><code>.showDefaultTable( )</code> to <code>IMExampleQuery</code> to <code>IMProductDialog</code> to one group of classes (<code>IMImagePanel</code>, <code>IMAudioPanel</code>, <code>IMVideoPanel</code>, <code>IMDocPanel</code>), and finally to the last group of classes (<code>IMLoadFile</code>, <code>IMSaveFile</code>, <code>IMMediaPanel</code>).</p>
<p><a href="#BABBECJJ">Table 5-2</a> lists and describes the remaining Java class files in this sample application:</p>
<div id="IMURG11878" class="tblruleformal">
<p class="titleintable"><a id="sthref157"></a><a id="BABBECJJ"></a>Table 5-2 Additional Java Class Files in the Sample Application</p>
<table class="cellalignment1321" title="Additional Java Class Files in the Sample Application" summary="List of additional class files" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t5">Name</th>
<th class="cellalignment1322" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t5" headers="r1c1-t5">
<p><code>IMUtil</code></p>
</td>
<td class="cellalignment1318" headers="r2c1-t5 r1c2-t5">
<p>Includes common utilities such as a method to generate and update thumbnail images, wrapper methods for each setProperties( ) method of each media object type to separate the exceptions caused by unrecognizable formats, and cleanup methods to close the following: resultSet, Statement, input stream and its reader, and output stream and its writer.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t5" headers="r1c1-t5">
<p><code>IMMIME</code></p>
</td>
<td class="cellalignment1318" headers="r3c1-t5 r1c2-t5">
<p>Loads and stores the mapping between plug-in players and the MIME type.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t5" headers="r1c1-t5">
<p><code>IMResultSetTableModel</code></p>
</td>
<td class="cellalignment1318" headers="r4c1-t5 r1c2-t5">
<p>Extends the <code>AbstractTableModel</code> class and controls the display of the <code>OE.PRODUCT_INFORMATION</code> table.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t5" headers="r1c1-t5">
<p><code>IMMessage</code></p>
</td>
<td class="cellalignment1318" headers="r5c1-t5 r1c2-t5">
<p>Displays various messages for the sample application and classifies the message level as error, warning, or suggestion.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t5" headers="r1c1-t5">
<p><code>IMMessageResource</code></p>
</td>
<td class="cellalignment1318" headers="r6c1-t5 r1c2-t5">
<p>Extends the <code>java.util.ListResourceBundle</code> class and contains the actual message text for all messages.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r7c1-t5" headers="r1c1-t5">
<p><code>IMJOptionPane</code></p>
</td>
<td class="cellalignment1318" headers="r7c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>JOptionPane</code> class to add an accessible description message to the displayed dialog box.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r8c1-t5" headers="r1c1-t5">
<p><code>IMGetMetadataDialog</code></p>
</td>
<td class="cellalignment1318" headers="r8c1-t5 r1c2-t5">
<p>Extends the <code>JDialog</code> class, and retrieves the metadata from an image into an XML document and then displays the XML document in a JTree form.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r9c1-t5" headers="r1c1-t5">
<p><code>IMPutMetadataDialog</code></p>
</td>
<td class="cellalignment1318" headers="r9c1-t5 r1c2-t5">
<p>Extends the <code>JDialog</code> class, and constructs an XMP packet to write into an image from user inputs.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r10c1-t5" headers="r1c1-t5">
<p><code>XMLTreeNode</code></p>
</td>
<td class="cellalignment1318" headers="r10c1-t5 r1c2-t5">
<p>Extends the <code>DefaultMutableTreeNode</code> class, and creates a tree representation of an XML node.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r11c1-t5" headers="r1c1-t5">
<p><code>XMLTreeView</code></p>
</td>
<td class="cellalignment1318" headers="r11c1-t5 r1c2-t5">
<p>Extends the <code>JPanel</code> class, and displays an XML document as a tree.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r12c1-t5" headers="r1c1-t5">
<p><code>IMFileChooser</code></p>
</td>
<td class="cellalignment1318" headers="r12c1-t5 r1c2-t5">
<p>Extends the <code>JFileChooser</code> class, and inherits from the <code>JFileChooser</code> class to add the button mnemonic and accessible description.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r13c1-t5" headers="r1c1-t5">
<p><code>IMConstants</code></p>
</td>
<td class="cellalignment1318" headers="r13c1-t5 r1c2-t5">
<p>Describes the IMConstants interface, which contains all the constants for column names, media types, message types, and message dialog titles.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r14c1-t5" headers="r1c1-t5">
<p><code>IMAttrTableModel</code></p>
</td>
<td class="cellalignment1318" headers="r14c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>DefaultTableModel</code> class to provide the table model for displaying media attributes, and overwrites the isCellEditable( ) method to make the cells uneditable.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r15c1-t5" headers="r1c1-t5">
<p><code>FocusedJTextField</code></p>
</td>
<td class="cellalignment1318" headers="r15c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>JTextField</code> class and overwrites the isFocusTraversable( ) method to enable it to gain focus when it is set to uneditable.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r16c1-t5" headers="r1c1-t5">
<p><code>FocusedJTextArea</code></p>
</td>
<td class="cellalignment1318" headers="r16c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>JTextArea</code> class and overwrites the isFocusTraversable( ) method to enable it to gain focus when it is set to uneditable; also overrides the isManagingFocus( ) method to force the <code>JTextArea</code> class not to handle a TAB key operation.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r17c1-t5" headers="r1c1-t5">
<p><code>FocusedJPanel</code></p>
</td>
<td class="cellalignment1318" headers="r17c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>JPanel</code> class and overwrites the isFocusTraversable( ) method to enable it to gain focus.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r18c1-t5" headers="r1c1-t5">
<p><code>FocusedJLabel</code></p>
</td>
<td class="cellalignment1318" headers="r18c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>JLabel</code> class, overwrites the isFocusTraversable( ) method, and adds a focus listener to enable it to gain focus.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r19c1-t5" headers="r1c1-t5">
<p><code>BooleanRenderer</code></p>
</td>
<td class="cellalignment1318" headers="r19c1-t5 r1c2-t5">
<p>Extends the <code>JCheckBox</code> class and renders Boolean objects as JCheckBox (a check box) in a JTable (two-dimensional table format). This class also sets the AccessibleName and AccessibleDescription properties by setting the tooltip to support accessibility.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r20c1-t5" headers="r1c1-t5">
<p><code>IMStreamAbsorber</code></p>
</td>
<td class="cellalignment1318" headers="r20c1-t5 r1c2-t5">
<p>Extends the <code>Thread</code> class and runs as a separate thread to consume an input stream. This is useful when a plug-in application is loaded and it writes something out to, for example, a standard error, without consuming the application&#39;s output, the application may be unable to continue.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r21c1-t5" headers="r1c1-t5">
<p><code>IMTable</code></p>
</td>
<td class="cellalignment1318" headers="r21c1-t5 r1c2-t5">
<p>Extends and puts into subclasses the <code>JTable</code> class and overwrites the isManagingFocus( ) method to avoid letting the table handle a TAB key operation.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r22c1-t5" headers="r1c1-t5">
<p><code>IMTableRenderer</code></p>
</td>
<td class="cellalignment1318" headers="r22c1-t5 r1c2-t5">
<p>Extends the <code>DefaultTableCellRenderer</code> class and renders the <code>PRODUCT_ID</code>, <code>PRODUCT_NAME</code>, and <code>PRODUCT_DESCRIPTION</code> columns to add accessibility information, and sets the customized display.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r23c1-t5" headers="r1c1-t5">
<p><code>IMUIUtil</code></p>
</td>
<td class="cellalignment1318" headers="r23c1-t5 r1c2-t5">
<p>Includes common GUI utilities.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p>The following subsections describe the main operations that are performed within specific classes in the Oracle Multimedia Java API sample application:</p>
<ul>
<li>
<p><a href="#BABICGAD">Operations in the IMProductDialog Class</a></p>
</li>
<li>
<p><a href="#CJFFEFJJ">Operations in the IMImagePanel Class</a></p>
</li>
<li>
<p><a href="#BABHHEHG">Operations in the IMGetMetadataDialog Class</a></p>
</li>
<li>
<p><a href="#BABDCHBC">Operations in the IMPutMetadataDialog Class</a></p>
</li>
<li>
<p><a href="#CJFIJJCB">Operations in the IMVideoPanel Class</a></p>
</li>
<li>
<p><a href="#CJFHCABG">Operations in the IMAudioPanel Class</a></p>
</li>
<li>
<p><a href="#CJFBFIDE">Operations in the IMDocPanel Class</a></p>
</li>
<li>
<p><a href="#BABCCFCI">Operations in the IMLoadFile Class</a></p>
</li>
<li>
<p><a href="#BABECDAJ">Operations in the IMUtil Class</a></p>
</li>
</ul>
<a id="BABICGAD"></a>
<div id="IMURG11636" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.1</span> Operations in the IMProductDialog Class</h3>
<p>This class defines the following methods followed by a description of what each method does:</p>
<ul>
<li>
<p>The loadMedia( ) method to retrieve the media objects from the database. This method performs a SQL SELECT...FOR UPDATE statement on the <code>PM.ONLINE_MEDIA</code> table where the <code>PRODUCT_ID</code> column is a parameter marker. Then, this class uses the getORAData( ) and getORADataFactory( ) methods to get the media data objects from the result set.</p>
</li>
<li>
<p>The displayMedia( ) method to display the media data, which in turn calls the corresponding media display methods displayImage( ), displayAudio( ), displayVideo( ), and displayDoc ( ).</p>
</li>
<li>
<p>The displayImage( ) method calls the IMImagePanel.display( ) method to display the image data attributes, display the thumbnail image, and display the full sized image using a media player that supports this MIME type.</p>
</li>
<li>
<p>The displayAudio( ) method calls the IMAudioPanel.display( ) method to display the audio data attributes and play the audio stream using a media player that supports this MIME type.</p>
</li>
<li>
<p>The displayVideo( ) method calls the IMVideoPanel.display( ) method to display the video data attributes and play the video stream using a media player that supports this MIME type.</p>
</li>
<li>
<p>The displayDoc( ) method calls the IMDocPanel.display( ) method to display the testimonial data attributes and play the testimonial data using a media player that supports this MIME type.</p>
</li>
</ul>
<p>The following code example shows the loadMedia( ), displayMedia( ), displayImage( ), displayAudio( ), displayVideo( ), and displayDoc( ) methods, and highlights in bold the SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used.</p>
<pre>  private void loadMedia() throws SQLException, IOException
  {
    String sQuery = 
      <span class="codeinlinebold">&#34;select product_photo, product_thumbnail, product_audio, product_video, &#34; +</span> 
      <span class="codeinlinebold">&#34;product_testimonials from pm.online_media where product_id = ? for update&#34;;</span>

    OracleConnection conn = null;
    OracleResultSet rs = null;
    OraclePreparedStatement pstmt = null;
    boolean isInsertNeeded = false;
    byte[] ctx[] = new byte[1][64];

    try
    {
      conn = IMExample.getDBConnection();

      pstmt = (OraclePreparedStatement)conn.prepareStatement(sQuery);
      pstmt.setInt(1, m_iProdId);
      rs = (OracleResultSet)pstmt.executeQuery();
      if (rs.next() == true)
      {
        <span class="codeinlinebold">m_img = (OrdImage)rs.getORAData(1, OrdImage.getORADataFactory());</span>
        <span class="codeinlinebold">m_imgThumb = (OrdImage)rs.getORAData(2, OrdImage.getORADataFactory());</span>
        <span class="codeinlinebold">m_aud = (OrdAudio)rs.getORAData(3, OrdAudio.getORADataFactory());</span>
        <span class="codeinlinebold">m_vid = (OrdVideo)rs.getORAData(4, OrdVideo.getORADataFactory());</span>
        <span class="codeinlinebold">m_doc = (OrdDoc)rs.getORAData(5, OrdDoc.getORADataFactory());</span>
      }

      displayMedia();

      rs.close();
      pstmt.close();
    }
    finally
    {
      IMUtil.cleanup(rs, pstmt);
    }
  }

  private void displayMedia() throws SQLException, IOException
  {
    displayImage();
    displayAudio();
    displayVideo();
    displayDoc();
  }

  /**   * Add the product photo panel.
   */
  private void displayImage() throws SQLException, IOException
  {
    <span class="codeinlinebold">m_jImgPanel = new IMImagePanel(this,</span> 
        <span class="codeinlinebold">m_img, m_imgThumb, m_iProdId, m_colorFieldBg);</span>
    m_jImgPanel.display();
    m_jImgPanel.getAccessibleContext().setAccessibleName
      (&#34;Product photo panel&#34;);
    m_jImgPanel.getAccessibleContext().setAccessibleDescription
      (&#34;Product photo panel with an image icon on the left, &#34; + 
       &#34;image attribute panel in the middle and image control&#34; +
        &#34;panel on the right.&#34;);

    m_jMediaPanel.add(m_jImgPanel);

    Component jImgFocus = m_jImgPanel.getFirstFocusComponent();
  }

  /**
   * Add the product audio panel.
   */
  private void displayAudio() throws SQLException, IOException
  {
    <span class="bold">m_jAudPanel = new IMAudioPanel(this, m_aud, m_iProdId, m_colorFieldBg);</span>
    m_jAudPanel.display();
    m_jAudPanel.getAccessibleContext().setAccessibleName
      (&#34;Product audio panel&#34;);
    m_jAudPanel.getAccessibleContext().setAccessibleDescription(
        &#34;Product audio panel with an audio icon at the left, &#34; + 
        &#34;audio attribute panel in the middle and audio control&#34; +
        &#34;panel at the right.&#34;);
    m_jMediaPanel.add(m_jAudPanel);
  }

  /**
   * Add the product video panel.
   */
  private void displayVideo() throws SQLException, IOException
  {
    <span class="codeinlinebold">m_jVidPanel = new IMVideoPanel(this, m_vid, m_iProdId, m_colorFieldBg);</span> 
    m_jVidPanel.display();
    m_jVidPanel.getAccessibleContext().setAccessibleName
      (&#34;Product audio panel&#34;);
    m_jVidPanel.getAccessibleContext().setAccessibleDescription(
        &#34;Product audio panel with an video icon at the left, &#34; + 
        &#34;video attribute panel in the middle and video control&#34; +
        &#34;panel at the right.&#34;);
    m_jMediaPanel.add(m_jVidPanel);
  }

  /**
   * Add the product testimonials panel.
   */
  private void displayDoc() throws SQLException, IOException
  {
    <span class="codeinlinebold">m_jDocPanel = new IMDocPanel(this, m _doc, m_iProdId, m_colorFieldBg);</span>
    m_jDocPanel.display();
    m_jDocPanel.getAccessibleContext().setAccessibleName
      (&#34;Product testimonials panel&#34;);
    m_jDocPanel.getAccessibleContext().setAccessibleDescription(
        &#34;Product testimonials panel with an document icon at the left, &#34; + 
        &#34;testimonials attribute panel in the middle and testimonials control&#34; +
        &#34;panel at the right.&#34;);
    m_jMediaPanel.add(m_jDocPanel);
  }
</pre>
<p>See the following sections, respectively, for code examples of the corresponding m_j<span class="italic">Xxx</span>Panel.display( ) methods, where <span class="italic">Xxx</span> represents the particular media data type, Img, Aud, Vid, or Doc:</p>
<ul>
<li>
<p><a href="#CJFFEFJJ">Operations in the IMImagePanel Class</a></p>
</li>
<li>
<p><a href="#CJFHCABG">Operations in the IMAudioPanel Class</a></p>
</li>
<li>
<p><a href="#CJFIJJCB">Operations in the IMVideoPanel Class</a></p>
</li>
<li>
<p><a href="#CJFBFIDE">Operations in the IMDocPanel Class</a></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CJFFEFJJ"></a>
<div id="IMURG11637" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.2</span> Operations in the IMImagePanel Class</h3>
<p>This class displays the image panel, the product photo and its attributes, and the thumbnail image, and lists for reading and writing metadata. What follows is a more detailed description of each of the methods that are defined and what each method does:</p>
<ul>
<li>
<p>The display( ) method, which first calls the insertProperty( ) method, which calls the Oracle Multimedia image object type methods getMimeType( ), getHeight( ), getWidth( ), and getContentlength( ) to get the attributes of the image to display in a table, and lays out the user interface components for reading and writing image metadata.</p>
</li>
<li>
<p>For supported formats, the class displays the product photo thumbnail image, which is generated by calling the IMUtil.generateThumbnail( )method to create the thumbnail image from the product photo.</p>
</li>
<li>
<p>The addThumbnail( ) method to show the new thumbnail image.</p>
</li>
<li>
<p>The changeThumbnail( ) method to change the thumbnail image.</p>
</li>
<li>
<p>The saveToFile( ) method to save the photo to a file.</p>
</li>
<li>
<p>The deleteMedia( ) method to delete the product photo image and its thumbnail image from the database by setting the image object type columns to empty using the OrdImage.init( ) method.</p>
</li>
<li>
<p>The play( ) media method to show the image using a media player.</p>
</li>
<li>
<p>The setMedia( ) method to set the photo and thumbnail object.</p>
</li>
<li>
<p>The notExist( ) method checks whether the image data exists and returns true if the BLOB is empty or is not associated with an existing BFILE; otherwise, it returns false.</p>
</li>
<li>
<p>The getDataInByteArray( ) method retrieves image data into a byte array by calling the Oracle Multimedia importData( ) method first for the BFILE and returns the results of calling the Oracle Multimedia getDataInByteArray( ) method.</p>
</li>
<li>
<p>The refreshPanel( ) method refreshes the display when updating the photo image, attributes, and thumbnail image.</p>
</li>
<li>
<p>The getFirstFocusComponent( ) method enforces the correct focus order.</p>
</li>
<li>
<p>The emptyPanel( ) method clears the icon and attribute panel.</p>
</li>
<li>
<p>The showMetadata( ) method to pop up a window for displaying metadata for the selected type.</p>
</li>
<li>
<p>The writeMetadata( ) method to display the write metadata dialog.</p>
</li>
</ul>
<p>The following code example includes the display( ), insertProperty( ), notExist( ), getDataInByteArray( ), and refreshPanel( ) methods, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre>  void display() throws IOException, SQLException
  {
    addControlPane();

    <span class="codeinlinebold">if (notExist(m_img))</span>
    {
      // The image does not exist.
      m_hasMedia = false; 
      layoutEmpty(s_sNotExist);
    }
    else
    {
      m_hasMedia = true; 
      // If image exists, try to show the attributes.
      if (insertProperty())
      {
        // Show the thumbnail image.
        // If the thumbnail image does not exist, generate it first.
        <span class="codeinlinebold">if (m_imgThumb != null)</span>
        {
          <span class="codeinlinebold">String sFormat = m_imgThumb.getFormat();</span>

          <span class="codeinlinebold">if (notExist(m_imgThumb) ||</span>
              ( !(&#34;JFIF&#34;.equalsIgnoreCase(sFormat)) &amp;&amp;
                !(&#34;GIFF&#34;.equalsIgnoreCase(sFormat))
              ))
          {
            <span class="codeinlinebold">m_imgThumb = IMUtil.generateThumbnail(m_iProdId, m_img, m_imgThumb);</span>
          }

          <span class="codeinlinebold">byte[] thumbnail = getDataInByteArray(m_imgThumb);</span>
          addThumbnail(thumbnail);
        }
        else
        {
          <span class="codeinlinebold">m_imgThumb = IMUtil.generateThumbnail(m_iProdId, m_img, m_imgThumb);</span>
          <span class="codeinlinebold">byte[] thumbnail = getDataInByteArray(m_imgThumb);</span>
          addThumbnail(thumbnail);
        }
      }
    }
  }
.
.
.
  boolean insertProperty() throws SQLException
  {
    boolean isFormatSupported = false;
    <span class="codeinlinebold">String sMimeType = m_img.getMimeType();</span>

    if (sMimeType == null)
      <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_img);</span>
    else
      isFormatSupported = true;

    if (!isFormatSupported)
    {
      layoutEmpty(s_sNotSupported);
    }
    else
    {
      Object[][] data = 
      {
        <span class="codeinlinebold">{&#34;MIME Type&#34;,  m_img.getMimeType()},</span>
        <span class="codeinlinebold">{&#34;Height&#34;, new Integer(m_img.getHeight()).toString()},</span>
        <span class="codeinlinebold">{&#34;Width&#34;,  new Integer(m_img.getWidth()).toString()},</span>
        <span class="codeinlinebold">{&#34;Content Length&#34;, new Integer(m_img.getContentLength()).toString()}</span>
      };

      .
      .
      .
    }

    return isFormatSupported;  }
.
.
.
  static boolean notExist(OrdImage img) throws SQLException, IOException
  {
    <span class="codeinlinebold">if (img == null)</span>
      return true;
    else
    {
      <span class="codeinlinebold">if (img.isLocal() &amp;&amp; (img.getDataInByteArray() == null))</span>
        return true;
      <span class="codeinlinebold">else if (!img.isLocal() &amp;&amp; (&#34;:///&#34;.equals(img.getSource())))</span>
        return true;
      else
      {
        <span class="codeinlinebold">if (!img.isLocal())</span>
        {
          <span class="codeinlinebold">BFILE bfile = img.getBFILE();</span>
          <span class="codeinlinebold">if (!bfile.fileExists())</span>
            return true;
          else 
            return false;
        }
        else
          return false;
      }
    }
  }
.
.
.
  <span class="codeinlinebold">static byte[] getDataInByteArray(OrdImage img) throws SQLException, IOException</span>
  {
    <span class="codeinlinebold">if (notExist(img))</span>
      return null;
    else
    {
      <span class="codeinlinebold">if (!img.isLocal())</span>
      {
        byte[] ctx[] = new byte[1][4000];
        try
        {
          <span class="codeinlinebold">img.importData(ctx);</span>
        }
        catch (SQLException e)
        {
          new IMMessage(IMConstants.ERROR, &#34;MEDIA_SOURCE_ERR&#34;, e);
          return null;
        }
      }
      <span class="codeinlinebold">return img.getDataInByteArray();</span>
    }
  }
.
.
.
  void refreshPanel(boolean isFormatSupported) throws SQLException, IOException
  {
    m_hasMedia = true;
    if (isFormatSupported)
    {
      if (m_jAttrTbl == null)
      {
        m_jAttrPane.remove(m_jEmpty);
        m_jIconPane.remove(m_jIcon);

        <span class="codeinlinebold">byte[] thumbnail = getDataInByteArray(m_imgThumb);</span>
        addThumbnail(thumbnail);

        insertProperty();
      }
      else
      {
        <span class="codeinlinebold">byte[] thumbnail = getDataInByteArray(m_imgThumb);</span>
        changThumbnail(thumbnail);

        <span class="codeinlinebold">m_jAttrTbl.setValueAt(m_img.getMimeType(), 0, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_img.getHeight()).toString(), 1, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_img.getWidth()).toString(), 2, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_img.getContentLength()).toString(),3, 1);</span>
      }
    }
   .
   .
   .
  }
</pre></div>
<!-- class="sect2" -->
<a id="BABHHEHG"></a>
<div id="IMURG11638" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.3</span> Operations in the IMGetMetadataDialog Class</h3>
<p>This class shows a dialog to display detailed information for metadata in a product photograph. This class also defines the displayMetadata( ) method and describes what it does.</p>
<p>The displayMetadata( ) method retrieves metadata from the image by using the Oracle Multimedia OrdImage getMetadata( ) method, and then displays the metadata.</p>
<p>The following code example includes the displayMetadata( ) method, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre>  private void displayMetadata(String sMetaType) 
  {
    XMLDocument doc = null;
    try
    {
      //
      // Retrieves the metadata into an XMLType array
      //
      <span class="bold">XMLType xmlList[] = m_img.getMetadata(sMetaType);</span>
 
      if (xmlList.length == 1)
      {
        DOMParser parser = new DOMParser();
        parser.setValidationMode(XMLConstants.NONVALIDATING);
        parser.setPreserveWhitespace(false);
        parser.parse(new StringReader(XMLType.createXML(xmlList[0]).getStringVal()));
        doc = parser.getDocument();
      }
    }
    .
    .
    .
  }
</pre></div>
<!-- class="sect2" -->
<a id="BABDCHBC"></a>
<div id="IMURG11639" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.4</span> Operations in the IMPutMetadataDialog Class</h3>
<p>This class shows a dialog to write metadata into a product photograph. This class also defines the writeMetadata( ) method and describes what it does.</p>
<p>The writeMetadata( ) method writes XMP metadata into the image metadata by using the Oracle Multimedia OrdImage putMetadata( ) method.</p>
<p>The following code example includes the writeMetadata( ) method, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre>  void writeMetadata()
  {
    try
    {
      //
      // Let the StringBuffer to hold the XMP packet
      //
      <span class="bold">StringBuffer sb = new StringBuffer(</span>
          <span class="bold">&#34;&lt;xmpMetadata xmlns=\&#34;http://xmlns.oracle.com/ord/meta/xmp\&#34; &#34;</span>
          <span class="bold">+ &#34; xsi:schemaLocation=\&#34;http://xmlns.oracle.com/ord/meta/xmp &#34;</span>
          <span class="bold">+ &#34; http://xmlns.oracle.com/ord/meta/xmp\&#34; &#34;</span>
          <span class="bold">+ &#34; xmlns:xsi=\&#34;http://www.w3.org/2001/XMLSchema-instance\&#34; &gt; &#34;</span>
          <span class="bold">+ &#34; &lt;rdf:RDF xmlns:rdf=\&#34;http://www.w3.org/1999/02/22-rdf-syntax-ns#\&#34;&gt; &#34;</span>
          <span class="bold">+ &#34; &lt;rdf:Description about=\&#34;\&#34; xmlns:dc=\&#34;http://purl.org/dc/elements/1.1/\&#34;&gt; &#34;</span>
          );
 
      String str = null;
      if ( (str=m_jTitleField.getText()) != null)
        sb.append(&#34;&lt;dc:title&gt;&#34; + str + &#34;&lt;/dc:title&gt;&#34;);
      if ( (str=m_jCreatorField.getText()) !=null)
        sb.append(&#34;&lt;dc:creator&gt;&#34; + str + &#34;&lt;/dc:creator&gt;&#34;);
      if ( (str=m_jDateField.getText()) !=null)
        sb.append(&#34;&lt;dc:date&gt;&#34; + str + &#34;&lt;/dc:date&gt;&#34;);
      if ( (str=m_jDescriptionField.getText()) !=null)
        sb.append(&#34;&lt;dc:description&gt;&#34; + str + &#34;&lt;/dc:description&gt;&#34;);
      if ( (str=m_jCopyrightField.getText()) !=null)
        sb.append(&#34;&lt;dc:rights&gt;&#34; + str + &#34;&lt;/dc:rights&gt;&#34;);
 
      sb.append(&#34;&lt;/rdf:Description&gt;&lt;/rdf:RDF&gt;&lt;/xmpMetadata&gt;&#34;);
 
      <span class="bold">XMLType xmp = XMLType.createXML(IMExample.getDBConnection(), sb.toString(),</span>
                <span class="bold">&#34;http://xmlns.oracle.com/ord/meta/xmp&#34;, true, true);</span>
 
      //
      // Make sure the image data is local
      //
      <span class="bold">if (!m_img.isLocal())</span>
      {
        byte[] ctx[] = new byte[1][4000];
        <span class="bold">m_img.importData(ctx);</span>
      }
 
      //
      // Call Ordimage.putMetadata
      //
      <span class="bold">m_img.putMetadata(xmp, &#34;XMP&#34;, &#34;utf-8&#34;);</span>
 
      this.dispose();
    }
    .
    .
    .
  }
</pre></div>
<!-- class="sect2" -->
<a id="CJFIJJCB"></a>
<div id="IMURG11640" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.5</span> Operations in the IMVideoPanel Class</h3>
<p>This class displays the video panel, the product video, and its attributes. This class is identical in structure and functions similarly to the <code>IMImagePanel</code> class. See <a href="#CJFFEFJJ">Operations in the IMImagePanel Class</a> for descriptions of methods.</p>
<p>The following code example includes the display( ), insertProperty( ), notExist( ), getDataInByteArray( ), and refreshPanel( ) methods, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre>  void display() throws IOException, SQLException
  {
    addControlPane();

    // Set the video icon.
    m_jIcon = new JLabel(new ImageIcon(IMExampleFrame.class.getResource(&#34;OrdVideo.gif&#34;)));
    m_jIcon.setLabelFor(m_jAttrPane);

      m_jIconPane.add(m_jIcon, BorderLayout.CENTER);

    if (notExist())
    {
      // The video does not exist.
      m_hasMedia = false; 
      layoutEmpty(s_sNotExist);
    }
    else
    {
      m_hasMedia = true; 
      // If the video exists, try to show the attributes.
      insertProperty();
    }
  }
.
.
.
  boolean insertProperty() throws SQLException
  {
    boolean isFormatSupported = false;
    <span class="codeinlinebold">String sMimeType = m_vid.getMimeType();</span>

    if (sMimeType == null)
      <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_vid);</span>
    else
      isFormatSupported = true;

    if (!isFormatSupported)
    {
      layoutEmpty(s_sNotSupported);
    }
    else
    {
      Object[][] data = 
      {
        <span class="codeinlinebold">{&#34;MIME Type&#34;,  m_vid.getMimeType()},</span>
        <span class="codeinlinebold">{&#34;Height&#34;, new Integer(m_vid.getHeight()).toString()},</span>
        <span class="codeinlinebold">{&#34;Width&#34;,  new Integer(m_vid.getWidth()).toString()},</span>
        <span class="codeinlinebold">{&#34;Duration&#34;, new Integer(m_vid.getVideoDuration()).toString()},</span>
        <span class="codeinlinebold">{&#34;Content Length&#34;, new Integer(m_vid.getContentLength()).toString()}</span>
      };
      .
      .
      .
    }

    return isFormatSupported;  }
.
.
.
  boolean notExist() throws SQLException, IOException
  {
    <span class="codeinlinebold">if (m_vid == null)</span>
      return true;
    else
    {
      <span class="codeinlinebold">if (m_vid.isLocal() &amp;&amp; (m_vid.getDataInByteArray() == null))</span>
        return true;
      <span class="codeinlinebold">else if (!m_vid.isLocal() &amp;&amp; (&#34;:///&#34;.equals(m_vid.getSource())))</span>
        return true;
      else
      {
        <span class="codeinlinebold">if (!m_vid.isLocal())</span>
        {
          <span class="codeinlinebold">BFILE bfile = m_vid.getBFILE();</span>
          <span class="codeinlinebold">if (!bfile.fileExists())</span>
            return true;
          else 
            return false;
        }
        else
          return false;
      }
    }
  }
.
.
.
  <span class="codeinlinebold">byte[] getDataInByteArray(OrdVideo vid) throws SQLException, IOException</span>
  {
    if (!m_hasMedia)
      return null;
    else
    {
      <span class="codeinlinebold">if (!vid.isLocal())</span>
      {
        byte[] ctx[] = new byte[1][4000];
        try
        {
          <span class="codeinlinebold">vid.importData(ctx);</span>
        }
        catch (SQLException e)
        {
          new IMMessage(IMConstants.ERROR, &#34;MEDIA_SOURCE_ERR&#34;, e);
          return null;
        }
      }
      <span class="codeinlinebold">return vid.getDataInByteArray();</span>
    }
  }
.
.
.
  void refreshPanel(boolean isFormatSupported) throws SQLException, IOException
  {
    m_hasMedia = true;

    if (isFormatSupported)
    {
      if (m_jAttrTbl == null)
      {
        m_jAttrPane.remove(m_jEmpty);
        insertProperty();
      }
      else
      {
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(m_vid.getMimeType(), 0, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_vid.getHeight()).toString(), 1, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_vid.getWidth()).toString(), 2, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_vid.getVideoDuration()).toString(), 3, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_vid.getContentLength()).toString(), 4, 1);</span>
      }
    }
        .
        .
        .
  }
</pre></div>
<!-- class="sect2" -->
<a id="CJFHCABG"></a>
<div id="IMURG11641" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.6</span> Operations in the IMAudioPanel Class</h3>
<p>This class displays the audio panel, the product audio, and its attributes. This class is identical in structure and functions similarly to the <code>IMImagePanel</code> class. See <a href="#CJFFEFJJ">Operations in the IMImagePanel Class</a> for descriptions of methods.</p>
<p>The following code example includes the display( ), insertProperty( ), notExist( ), getDataInByteArray( ), and refreshPanel( ) methods, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre>  void display() throws IOException, SQLException
  {
    addControlPane();

    // Set the audio icon.
    m_jIcon = new JLabel(new ImageIcon(IMExampleFrame.class.getResource(&#34;OrdAudio.gif&#34;)));
    m_jIcon.setLabelFor(m_jAttrPane);

      m_jIconPane.add(m_jIcon, BorderLayout.CENTER);

    if (notExist())
    {
      // The audio does not exist.
      m_hasMedia = false; 
      layoutEmpty(s_sNotExist);
    }
    else
    {
      m_hasMedia = true;

      // If the audio exists, try to show the attributes.
      insertProperty();
    }
  }
.
.
.
  boolean insertProperty() throws SQLException
  {
    boolean isFormatSupported = false;
    <span class="codeinlinebold">String sMimeType = m_aud.getMimeType();</span>

    if (sMimeType == null)
      <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_aud);</span>
    else
      isFormatSupported = true;

    if (!isFormatSupported)
    {
      layoutEmpty(s_sNotSupported);
    }
    else
    {
      Object[][] data = 
      {
        <span class="codeinlinebold">{&#34;MIME Type&#34;,  m_aud.getMimeType()},</span>
        <span class="codeinlinebold">{&#34;Duration&#34;, new Integer(m_aud.getAudioDuration()).toString()},</span>
        <span class="codeinlinebold">{&#34;Content Length&#34;, new Integer(m_aud.getContentLength()).toString()}</span>
      };

      .
      .
      .
    }

    return isFormatSupported;
  }
.
.
.
  boolean notExist() throws SQLException, IOException
  {
    <span class="codeinlinebold">if (m_aud == null)</span>
      return true;
    else
    {
      <span class="codeinlinebold">if (m_aud.isLocal() &amp;&amp; (m_aud.getDataInByteArray() == null))</span>
        return true;
      <span class="codeinlinebold">else if (!m_aud.isLocal() &amp;&amp; (&#34;:///&#34;.equals(m_aud.getSource())))</span>
        return true;
      else
      {
        <span class="codeinlinebold">if (!m_aud.isLocal())</span>
        {
          <span class="codeinlinebold">BFILE bfile = m_aud.getBFILE();</span>
          <span class="codeinlinebold">if (!bfile.fileExists())</span>
            return true;
          else 
            return false;
        }
        else
          return false;
      }
    }
  }
.
.
.
  <span class="codeinlinebold">byte[] getDataInByteArray(OrdAudio aud) throws SQLException, IOException</span>
  {
    if (!m_hasMedia)
      return null;
    else
    {
      <span class="codeinlinebold">if (!aud.isLocal())</span>
      {
        byte[] ctx[] = new byte[1][4000];
        try
        {
          <span class="codeinlinebold">aud.importData(ctx);</span>
        }
        catch (SQLException e)
        {
          new IMMessage(IMConstants.ERROR, &#34;MEDIA_SOURCE_ERR&#34;, e);
          return null;
        }
      }
      <span class="codeinlinebold">return aud.getDataInByteArray();</span>
    }
  }
.
.
.
  void refreshPanel(boolean isFormatSupported) throws SQLException, IOException
  {
    m_hasMedia = true;
    if (isFormatSupported)
    {
      if (m_jAttrTbl == null)
      {
        m_jAttrPane.remove(m_jEmpty);
        insertProperty();
      }
      else
      {
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(m_aud.getMimeType(), 0, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_aud.getAudioDuration()).toString(), 1, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_aud.getContentLength()).toString(), 2, 1);</span>
      }
    }
    .
    .
    .
  }
</pre></div>
<!-- class="sect2" -->
<a id="CJFBFIDE"></a>
<div id="IMURG11642" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.7</span> Operations in the IMDocPanel Class</h3>
<p>This class displays the doc panel, the product testimonials, and its attributes. This class is identical in structure and functions similarly to the <code>IMImagePanel</code> class. See <a href="#CJFFEFJJ">Operations in the IMImagePanel Class</a> for descriptions of methods.</p>
<p>The following code example includes the display( ), insertProperty( ), notExist( ), getDataInByteArray( ), and refreshPanel( ) methods, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre>  void display() throws IOException, SQLException
  {
    addControlPane();

    // Set the icon.
    m_jIcon = new JLabel(new ImageIcon(
          IMExampleFrame.class.getResource(&#34;OrdDoc.gif&#34;)
          ));
    m_jIcon.setLabelFor(m_jAttrPane);
      m_jIconPane.add(m_jIcon, BorderLayout.CENTER);

    if (notExist())
    {
      // The doc does not exist.
      m_hasMedia = false; 
      layoutEmpty(s_sNotExist);
    }
    else
    {
      // If the doc exists, show the attribute table.
      m_hasMedia = true; 
      insertProperty();
    }
  }
.
.
.
  boolean insertProperty() throws SQLException
  {
    boolean isFormatSupported = false;
    <span class="codeinlinebold">String sMimeType = m_doc.getMimeType();</span>

    if (sMimeType == null)
      <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_doc);</span>
    else
      isFormatSupported = true;

    if (!isFormatSupported)
    {
      layoutEmpty(s_sNotSupported);
    }
    else
    {
      Object[][] data = 
      {
        <span class="codeinlinebold">{&#34;MIME Type&#34;,  m_doc.getMimeType()},</span>
        <span class="codeinlinebold">{&#34;Content Length&#34;, new Integer(m_doc.getContentLength()).toString()}</span>
      };

     .
     .
     .
    }

    return isFormatSupported;
  }
.
.
.
  boolean notExist() throws SQLException, IOException
  {
    <span class="codeinlinebold">if (m_doc == null)</span>
      return true;
    else
    {
      <span class="codeinlinebold">if (m_doc.isLocal() &amp;&amp; (m_doc.getDataInByteArray() == null))</span>
        return true;
      <span class="codeinlinebold">else if (!m_doc.isLocal() &amp;&amp; (&#34;:///&#34;.equals(m_doc.getSource())))</span>
        return true;
      else
      {
        <span class="codeinlinebold">if (!m_doc.isLocal())</span>
        {
          <span class="codeinlinebold">BFILE bfile = m_doc.getBFILE();</span>
          <span class="codeinlinebold">if (!bfile.fileExists())</span>
            return true;
          else 
            return false;
        }
        else
          return false;
      }
    }
  }
.
.
.
  <span class="codeinlinebold">byte[] getDataInByteArray(OrdDoc doc) throws SQLException, IOException</span>
  {
    if (!m_hasMedia)
      return null;
    else
    {
      <span class="codeinlinebold">if (!doc.isLocal())</span>
      {
        byte[] ctx[] = new byte[1][4000];
        try
        {
          <span class="codeinlinebold">doc.importData(ctx, false);</span>
        }
        catch (SQLException e)
        {
          new IMMessage(IMConstants.ERROR, &#34;MEDIA_SOURCE_ERR&#34;, e);
          return null;
        }
      }
      <span class="codeinlinebold">return doc.getDataInByteArray();</span>
    }
  }
.
.
.
  void refreshPanel(boolean isFormatSupported) throws SQLException, IOException
  {
    m_hasMedia = true;
    if (isFormatSupported)
    {
      if (m_jAttrTbl == null)
      {
        m_jAttrPane.remove(m_jEmpty);
        insertProperty();
      }
      else
      {
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(m_doc.getMimeType(), 0, 1);</span>
        <span class="codeinlinebold">m_jAttrTbl.setValueAt(new Integer(m_doc.getContentLength()).toString(), 1, 1);</span>
      }
    }
.
.
.
  }
</pre></div>
<!-- class="sect2" -->
<a id="BABCCFCI"></a>
<div id="IMURG11643" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.8</span> Operations in the IMLoadFile Class</h3>
<p>This class loads a media stream from a file to a database for each of the media object types. First, it checks whether this <code>PRODUCT_ID</code> column exists in the <code>PM.ONLINE_MEDIA</code> table and if not, it inserts a new row into the table. Then, it creates and initializes a new media object for each media object type, updates the media data, that is, loads it into the database if it is not already stored there, and finally, sets the media attributes for each media data object.</p>
<p>In this class, the IMFileLoad( ) method calls the initFileChooser( ) method, then the initFileChooser( ) method calls the loadNewMedia( ) method, which does the row insertion and initializing of the media object type columns, and then calls the updateMedia( ) method to update the media and to set the media attributes.</p>
<p>The following code example includes the loadNewMedia( ) and UpdateMedia( ) methods, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used as previously described:</p>
<pre>  private void loadNewMedia() 
    throws SQLException, FileNotFoundException, SecurityException, IOException
  {
    boolean isInsertNeeded = false;
    String sQuery = null;
    OracleConnection conn = null;
    OracleResultSet rs = null;
    OraclePreparedStatement pstmt = null;

    try
    {
      conn = IMExample.getDBConnection();

      if (m_obj == null)
      {
        // First, check whether or not this product exists in the 
        // pm.online_media table. If it exists, isInsertNeeded is set to false;
        // or else, isInsertNeeded is set to true.
        sQuery = new String(
            <span class="codeinlinebold">&#34;select product_id from pm.online_media where product_id = ?&#34;);</span>
        pstmt = (OraclePreparedStatement) conn.prepareStatement(sQuery);
        pstmt.setInt(1, m_iProdId);
        rs = (OracleResultSet)pstmt.executeQuery();
        if (rs.next() == false)
          isInsertNeeded = true;
        else
          isInsertNeeded = false;
        rs.close();
        pstmt.close();

        if (isInsertNeeded)
        {
          // If this product is not in the pm.online_media table, 
          // insert a row in pm.online_media for this product,
          // and initialize the media object at the same time.
          sQuery = new String(
              <span class="codeinlinebold">&#34;insert into pm.online_media (product_id, product_photo, &#34; +</span> 
              <span class="codeinlinebold">&#34;product_photo_signature, product_thumbnail, product_video, &#34; +</span> 
              <span class="codeinlinebold">&#34;product_audio, product_text, product_testimonials) values (&#34; +</span> 
              <span class="codeinlinebold">&#34;?, ORDSYS.ORDImage.init(), ORDSYS.ORDImageSignature.init(), &#34; +</span>
              <span class="codeinlinebold">&#34;ORDSYS.ORDImage.init(),  ORDSYS.ORDVideo.init(), &#34; +</span>
              <span class="codeinlinebold">&#34;ORDSYS.ORDAudio.init(), null, ORDSYS.ORDDoc.init())&#34;);</span>

          pstmt = (OraclePreparedStatement) conn.prepareCall(sQuery);
          pstmt.setInt(1, m_iProdId);
          pstmt.execute();
          pstmt.close();
        }
      }

    if (!isInsertNeeded)
    {
      // Create a new media object.
      switch (m_iTypeIdentifier)
      {
        case IMG_TYPE:
          sQuery = new String(
              <span class="codeinlinebold">&#34;update pm.online_media set &#34; + m_sColName +</span> 
              <span class="codeinlinebold">&#34; = ORDSYS.ORDImage.init() where product_id = ?&#34;);</span>
          break;
        case AUD_TYPE:
          sQuery = new String(
              <span class="codeinlinebold">&#34;update pm.online_media set &#34; + m_sColName +</span>
              <span class="codeinlinebold">&#34; = ORDSYS.ORDAudio.init() where product_id = ?&#34;);</span>
          break;
        case VID_TYPE:
          sQuery = new String(
              <span class="codeinlinebold">&#34;update pm.online_media set &#34; + m_sColName +</span> 
              <span class="codeinlinebold">&#34; = ORDSYS.ORDVideo.init() where product_id = ?&#34;);</span>
          break;
        case DOC_TYPE:
          sQuery = new String(
              <span class="codeinlinebold">&#34;update pm.online_media set &#34; + m_sColName +</span>  
              <span class="codeinlinebold">&#34; = ORDSYS.ORDDoc.init() where product_id = ?&#34;);</span> 
          break;
        default:
          new IMMessage(IMConstants.ERROR, &#34;UNKNOWN_TYPE&#34;);
          break;
      }

      pstmt = (OraclePreparedStatement) conn.prepareCall(sQuery);
      pstmt.setInt(1, m_iProdId);
      pstmt.execute();
      pstmt.close();
    }

      // At this point, there is a row in the online_media table
      // for this product and the desired media object is initialized.
      // In the following, we update the media object pointer and 
      // acquire the right to modify it by selecting again from the
      // database.
      //
      sQuery = new String(
          &#34;<span class="codeinlinebold">select &#34; + m_sColName +</span> 
          &#34; <span class="codeinlinebold">from pm.online_media where product_id = ? for update&#34;);</span>
      pstmt = (OraclePreparedStatement) conn.prepareStatement(sQuery);
      pstmt.setInt(1, m_iProdId);
      rs = (OracleResultSet)pstmt.executeQuery();
      if (rs.next() == false)
        throw new SQLException();
      else
      {
        switch (m_iTypeIdentifier)
        {
          case IMG_TYPE:
            <span class="codeinlinebold">m_img = (OrdImage)rs.getORAData(1, OrdImage.getORADataFactory());</span>
            break;
          case AUD_TYPE:
            <span class="codeinlinebold">m_aud = (OrdAudio)rs.getORAData(1, OrdAudio.getORADataFactory());</span>
            break;
          case VID_TYPE:
            <span class="codeinlinebold">m_vid = (OrdVideo)rs.getORAData(1, OrdVideo.getORADataFactory());</span>
            break;
          case DOC_TYPE:
            <span class="codeinlinebold">m_doc = (OrdDoc)rs.getORAData(1, OrdDoc.getORADataFactory());</span>
            break;
          default:
            new IMMessage(IMConstants.ERROR, &#34;UNKNOWN_TYPE&#34;);
            break;
        }

        // Update the media object.
        updateMedia();
      }

      rs.close();
      pstmt.close();
    }
    finally
    {
      IMUtil.cleanup(rs, pstmt);
    }
  }

  /**
   * Update the media and also set the media properties.
   */
  private void updateMedia()
    throws SQLException, FileNotFoundException, SecurityException, IOException
  {
    String sQuery = null;
    OracleConnection conn = null;
    byte[] ctx[] = new byte[1][64];
    OraclePreparedStatement pstmt = null;

    boolean isFormatSupported = false;

    try
    {
      conn = IMExample.getDBConnection();
      sQuery = new String(
          <span class="codeinlinebold">&#34;update pm.online_media set &#34; + m_sColName +</span> 
          <span class="codeinlinebold">&#34; = ? where product_id = ?&#34;);</span>
      pstmt = (OraclePreparedStatement) conn.prepareCall(sQuery);
      pstmt.setInt(2, m_iProdId);

      switch (m_iTypeIdentifier)
      {
        case IMG_TYPE:
          <span class="codeinlinebold">m_img.loadDataFromFile(m_jFileChooser.getText());</span>
          <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_img);</span>
          <span class="codeinlinebold">m_img.setLocal();</span>
          <span class="codeinlinebold">pstmt.setORAData(1, m_img);</span>
          break;
        case AUD_TYPE:
          <span class="codeinlinebold">m_aud.loadDataFromFile(m_jFileChooser.getText());</span>
          <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_aud);</span>
          <span class="codeinlinebold">m_aud.setLocal();</span>
          <span class="codeinlinebold">pstmt.setORAData(1, m_aud);</span>

          // We need to update the media pointer for display,
          // because the input media pointer may be null.
          <span class="codeinlinebold">((IMAudioPanel)m_parent).setMedia(m_aud);</span>
          ((IMAudioPanel)m_parent).refreshPanel(isFormatSupported);
          break;
        case VID_TYPE:
          <span class="codeinlinebold">m_vid.loadDataFromFile(m_jFileChooser.getText());</span>
          <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_vid);</span>
          <span class="codeinlinebold">m_vid.setLocal();</span>
          <span class="codeinlinebold">pstmt.setORAData(1, m_vid);</span>

          <span class="codeinlinebold">((IMVideoPanel)m_parent).setMedia(m_vid);</span>
          ((IMVideoPanel)m_parent).refreshPanel(isFormatSupported);
          break;
        case DOC_TYPE:
          <span class="codeinlinebold">m_doc.loadDataFromFile(m_jFileChooser.getText());</span>
          <span class="codeinlinebold">isFormatSupported = IMUtil.setProperties(m_doc);</span>
          <span class="codeinlinebold">m_doc.setLocal();</span>
          <span class="codeinlinebold">pstmt.setORAData(1, m_doc);</span>

          <span class="codeinlinebold">((IMDocPanel)m_parent).setMedia(m_doc);</span>
          ((IMDocPanel)m_parent).refreshPanel(isFormatSupported);
          break;
        default:
          new IMMessage(IMConstants.ERROR, &#34;UNKNOWN_TYPE&#34;);
          break;
      }

      pstmt.execute();
      pstmt.close();

      // Update the thumbnail image.
      if (m_iTypeIdentifier == IMG_TYPE)
      {
        if (isFormatSupported)
          <span class="codeinlinebold">m_imgThumb = IMUtil.generateThumbnail(m_iProdId, m_img, m_imgThumb);</span>

        <span class="codeinlinebold">((IMImagePanel)m_parent).setMedia(m_img, m_imgThumb);</span>
        ((IMImagePanel)m_parent).refreshPanel(isFormatSupported);
      }
    }
    finally
    {
      IMUtil.cleanup(pstmt);
    }
  }
</pre></div>
<!-- class="sect2" -->
<a id="BABECDAJ"></a>
<div id="IMURG11644" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.2.9</span> Operations in the IMUtil Class</h3>
<p>This class contains common utilities, such as a generateThumbnail( ) static method, wrapper methods for the setProperties( ) methods for each media object type to separate the exceptions caused by unrecognizable formats, and finally, several cleanup methods.</p>
<p>The following code example includes the generateThumbnail( ) method, and highlights in bold any SQL query statements and areas in the code where Oracle Multimedia and other Oracle object types and methods are used:</p>
<pre><span class="codeinlinebold">static OrdImage generateThumbnail(int iProdId, OrdImage img, OrdImage imgThumb)</span>
  throws SQLException
  {
    String sQuery = null;
    OracleConnection conn = null;
    OracleResultSet rs = null;
    OraclePreparedStatement pstmt = null;

    try
    {
      conn = IMExample.getDBConnection();

      if (imgThumb == null)
      {
        // The thumbnail media pointer is not initialized.
        // Initialize it first.
        sQuery = new String(
            <span class="codeinlinebold">&#34;update pm.online_media set product_thumbnail = &#34; +</span> 
            <span class="codeinlinebold">&#34;ORDSYS.ORDImage.init() where product_id = ?&#34;);</span>
        pstmt = (OraclePreparedStatement) conn.prepareCall(sQuery);
        pstmt.setInt(1, iProdId);
        pstmt.execute();
        pstmt.close();

        // Acquire the new pointer and the permission to update.
        sQuery = new String(<span class="codeinlinebold">&#34;select product_thumbnail from pm.online_media &#34; +</span>
            <span class="codeinlinebold">&#34;where product_id = ? for update&#34;);</span>
        pstmt = (OraclePreparedStatement) conn.prepareStatement(sQuery);
        pstmt.setInt(1, iProdId);
        rs = (OracleResultSet)pstmt.executeQuery();
        if (rs.next() == false)
          throw new SQLException();
        else
          <span class="codeinlinebold">imgThumb = (OrdImage)rs.getORAData(1, OrdImage.getORADataFactory());</span>

        rs.close();
        pstmt.close();
      }

      // Generate the thumbnail image.
      <span class="codeinlinebold">img.processCopy(&#34;maxScale=64 64, fileFormat=GIFF&#34;, imgThumb);</span>

      // Update the thumbnail image in the database.
      sQuery = new String(
          <span class="codeinlinebold">&#34;update pm.online_media set product_thumbnail = ? where product_id = ?&#34;);</span>
      pstmt = (OraclePreparedStatement) conn.prepareCall(sQuery);
      <span class="bold">pstmt.setORAData(1, imgThumb);</span>
      pstmt.setInt(2, iProdId);
      pstmt.execute();
      pstmt.close();

      return imgThumb;
    }
    finally
    {
      IMUtil.cleanup(rs, pstmt);
    }
  }
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1311">
<tr>
<td class="cellalignment1318">
<table class="cellalignment1316">
<tr>
<td class="cellalignment1315"><a href="ch_cdwizapp.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1315"><a href="ch_metadata.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1320">
<table class="cellalignment1314">
<tr>
<td class="cellalignment1315"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1315"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1315"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1315"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1315"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1315"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>