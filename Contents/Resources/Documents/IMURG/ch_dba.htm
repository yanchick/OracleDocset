<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-48243"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Multimedia%20Tuning%20Tips%20for%20DBAs"></a><title>Oracle Multimedia Tuning Tips for DBAs</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="Presents information about using Oracle Database to store, manage, and retrieve images, audio, video, DICOM format medical images and other objects, or other heterogeneous media data in an integrated fashion with other enterprise information. Oracle Multimedia extends Oracle Database reliability, availability, and data management to multimedia content in traditional, Internet, electronic commerce, medical, financial, and other media-rich applications."/>
<meta name="dcterms.created" content="2014-07-31T9:32:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Multimedia User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17697-09"/>
<meta name="dcterms.isVersionOf" content="IMURG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="im_glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="ch_extend.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_examples.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17697-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/20</span> <!-- End Header -->
<div id="IMURG8000" class="chapter"><a id="g1001753"></a> <a id="i598962"></a>
<h1 class="chapter"><span class="secnum">8</span> Oracle Multimedia Tuning Tips for <a id="sthref212"></a>DBAs</h1>
<p>This chapter provides information and advice for Oracle DBAs who want to achieve more efficient storage and management of multimedia data in the database when using Oracle Multimedia.</p>
<p>The goals of your Oracle Multimedia application determine the resource requirements and how to allocate those resources. Because application development and design decisions have the greatest effect on performance, standard tuning methods must be applied to the system planning, design, and development phases of the project to achieve optimal results for your Oracle Multimedia application in a production environment.</p>
<p>Multimedia data consists of a variety of media types including images, audio clips, video clips, line drawings, and so on. All these media types are typically stored in LOBs. LOBs can be either internal BLOBs (stored in an internal database tablespace) or BFILEs (external LOBs in operating system files outside of the database tablespaces). This chapter discusses the management of audio, image, and video data stored in BLOBs only.</p>
<p>This chapter includes these sections:</p>
<ul>
<li>
<p><a href="#CHDEGHJA">Understanding the Performance Profile of Oracle Multimedia Operations</a></p>
</li>
<li>
<p><a href="#CHDDAJCH">Choosing LOB Storage Parameters for Oracle Multimedia Objects</a></p>
</li>
<li>
<p><a href="#BABCDHEF">Setting Database Initialization Parameters</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB002" href="../ADLOB/adlob_working.htm#ADLOB002"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for more information about using LOBs in Oracle Database</p>
</div>
<a id="CHDEGHJA"></a>
<div id="IMURG8100" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.1</span> Understanding the Performance Profile of Oracle Multimedia Operations</h2>
<p>Multimedia data, and the operations that can be performed on that data, differs significantly from traditional types of data commonly stored in relational databases. A basic understanding of the performance profile of Oracle Multimedia operations can help you make better decisions when tuning your database for media performance.</p>
<p>The following tables summarize the general performance profiles for a set of commonly performed operations. There are two primary components to each profile. The I/O pattern is a general characterization of the primary type of I/O access and of how much of the media data the operation reads or writes. Because some operations involve two media objects, the I/O pattern is described for both the source and destination media objects. The second component is a general characterization of the level of CPU usage for the operation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The information in these tables describes general characterizations and I/O patterns, thus CPU usage may vary considerably for some media formats.</div>
<p><a href="#CHDJCIDG">Table 8-1</a> shows the profile for loading and retrieving data, which applies to all Oracle Multimedia media types.</p>
<div id="IMURG11677" class="tblruleformal">
<p class="titleintable"><a id="sthref213"></a><a id="CHDJCIDG"></a>Table 8-1 Performance Profile For All Multimedia Types</p>
<table class="cellalignment1321" title="Performance Profile For All Multimedia Types" summary="Profile for all multimedia types" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t4">Operation</th>
<th class="cellalignment1322" id="r1c2-t4">I/O Pattern (Source)</th>
<th class="cellalignment1322" id="r1c3-t4">I/O Pattern (Destination)</th>
<th class="cellalignment1322" id="r1c4-t4">I/O Pattern (Amount)</th>
<th class="cellalignment1322" id="r1c5-t4">CPU Usage</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t4" headers="r1c1-t4">
<p>Load new media data into a database</p>
</td>
<td class="cellalignment1318" headers="r2c1-t4 r1c2-t4">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r2c1-t4 r1c3-t4">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r2c1-t4 r1c4-t4">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r2c1-t4 r1c5-t4">
<p>Low</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t4" headers="r1c1-t4">
<p>Retrieve media from a database</p>
</td>
<td class="cellalignment1318" headers="r3c1-t4 r1c2-t4">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r3c1-t4 r1c3-t4">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r3c1-t4 r1c4-t4">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r3c1-t4 r1c5-t4">
<p>Low</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p><a href="#CHDEAFFF">Table 8-2</a> shows the profile for commonly used methods of the ORDImage type.</p>
<div id="IMURG11678" class="tblruleformal">
<p class="titleintable"><a id="sthref214"></a><a id="CHDEAFFF"></a>Table 8-2 Performance Profile For ORDImage Methods</p>
<table class="cellalignment1321" title="Performance Profile For ORDImage Methods" summary="Profile for ORDImage methods" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t5">Object Method</th>
<th class="cellalignment1322" id="r1c2-t5">I/O Pattern (Source)</th>
<th class="cellalignment1322" id="r1c3-t5">I/O Pattern (Destination)</th>
<th class="cellalignment1322" id="r1c4-t5">I/O Pattern (Amount)</th>
<th class="cellalignment1322" id="r1c5-t5">CPU Usage</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t5" headers="r1c1-t5">
<p>setProperties( )</p>
</td>
<td class="cellalignment1318" headers="r2c1-t5 r1c2-t5">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r2c1-t5 r1c3-t5">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r2c1-t5 r1c4-t5">
<p>Media header</p>
</td>
<td class="cellalignment1318" headers="r2c1-t5 r1c5-t5">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t5" headers="r1c1-t5">
<p>getMetadata( )</p>
</td>
<td class="cellalignment1318" headers="r3c1-t5 r1c2-t5">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r3c1-t5 r1c3-t5">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r3c1-t5 r1c4-t5">
<p>Media header</p>
</td>
<td class="cellalignment1318" headers="r3c1-t5 r1c5-t5">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t5" headers="r1c1-t5">
<p>putMetadata( )</p>
</td>
<td class="cellalignment1318" headers="r4c1-t5 r1c2-t5">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r4c1-t5 r1c3-t5">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r4c1-t5 r1c4-t5">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r4c1-t5 r1c5-t5">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t5" headers="r1c1-t5">
<p>process( )</p>
</td>
<td class="cellalignment1318" headers="r5c1-t5 r1c2-t5">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r5c1-t5 r1c3-t5">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r5c1-t5 r1c4-t5">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r5c1-t5 r1c5-t5">
<p>High</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t5" headers="r1c1-t5">
<p>processCopy( )</p>
</td>
<td class="cellalignment1318" headers="r6c1-t5 r1c2-t5">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r6c1-t5 r1c3-t5">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r6c1-t5 r1c4-t5">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r6c1-t5 r1c5-t5">
<p>High</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p><a href="#CHDBBBGH">Table 8-3</a> shows the profile for commonly used methods of the ORDDicom type.</p>
<div id="IMURG11679" class="tblruleformal">
<p class="titleintable"><a id="sthref215"></a><a id="CHDBBBGH"></a>Table 8-3 Performance Profile For ORDDicom Methods</p>
<table class="cellalignment1321" title="Performance Profile For ORDDicom Methods" summary="Profile for ORDDicom methods" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t6">Object Method</th>
<th class="cellalignment1322" id="r1c2-t6">I/O Pattern (Source)</th>
<th class="cellalignment1322" id="r1c3-t6">I/O Pattern (Destination)</th>
<th class="cellalignment1322" id="r1c4-t6">I/O Pattern (Amount)</th>
<th class="cellalignment1322" id="r1c5-t6">CPU Usage</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t6" headers="r1c1-t6">
<p>setProperties( )</p>
</td>
<td class="cellalignment1318" headers="r2c1-t6 r1c2-t6">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r2c1-t6 r1c3-t6">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r2c1-t6 r1c4-t6">
<p>Media header</p>
</td>
<td class="cellalignment1318" headers="r2c1-t6 r1c5-t6">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t6" headers="r1c1-t6">
<p>extractMetadata( )</p>
</td>
<td class="cellalignment1318" headers="r3c1-t6 r1c2-t6">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r3c1-t6 r1c3-t6">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r3c1-t6 r1c4-t6">
<p>Media header</p>
</td>
<td class="cellalignment1318" headers="r3c1-t6 r1c5-t6">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t6" headers="r1c1-t6">
<p>writeMetadata( )</p>
</td>
<td class="cellalignment1318" headers="r4c1-t6 r1c2-t6">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r4c1-t6 r1c3-t6">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r4c1-t6 r1c4-t6">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r4c1-t6 r1c5-t6">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t6" headers="r1c1-t6">
<p>makeAnonymous( )</p>
</td>
<td class="cellalignment1318" headers="r5c1-t6 r1c2-t6">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r5c1-t6 r1c3-t6">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r5c1-t6 r1c4-t6">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r5c1-t6 r1c5-t6">
<p>Low to medium</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t6" headers="r1c1-t6">
<p>process( )</p>
</td>
<td class="cellalignment1318" headers="r6c1-t6 r1c2-t6">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r6c1-t6 r1c3-t6">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r6c1-t6 r1c4-t6">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r6c1-t6 r1c5-t6">
<p>High</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r7c1-t6" headers="r1c1-t6">
<p>processCopy( )</p>
</td>
<td class="cellalignment1318" headers="r7c1-t6 r1c2-t6">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r7c1-t6 r1c3-t6">
<p>Sequential write</p>
</td>
<td class="cellalignment1318" headers="r7c1-t6 r1c4-t6">
<p>All</p>
</td>
<td class="cellalignment1318" headers="r7c1-t6 r1c5-t6">
<p>High</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" -->
<p><a href="#CHDFBEEF">Table 8-4</a> shows the profile for commonly used methods of the ORDAudio and ORDVideo types.</p>
<div id="IMURG11680" class="tblruleformal">
<p class="titleintable"><a id="sthref216"></a><a id="CHDFBEEF"></a>Table 8-4 Performance Profile For ORDAudio and ORDVideo Methods</p>
<table class="cellalignment1321" title="Performance Profile For ORDAudio and ORDVideo Methods" summary="Profile for ORDAudio and ORDVideo methods" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t7">Object Method</th>
<th class="cellalignment1322" id="r1c2-t7">I/O Pattern (Source)</th>
<th class="cellalignment1322" id="r1c3-t7">I/O Pattern (Destination)</th>
<th class="cellalignment1322" id="r1c4-t7">I/O Pattern (Amount)</th>
<th class="cellalignment1322" id="r1c5-t7">CPU Usage</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t7" headers="r1c1-t7">
<p>setProperties( )</p>
</td>
<td class="cellalignment1318" headers="r2c1-t7 r1c2-t7">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r2c1-t7 r1c3-t7">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r2c1-t7 r1c4-t7">
<p>Media header</p>
</td>
<td class="cellalignment1318" headers="r2c1-t7 r1c5-t7">
<p>Low</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t7" headers="r1c1-t7">
<p>getProperties( )</p>
</td>
<td class="cellalignment1318" headers="r3c1-t7 r1c2-t7">
<p>Sequential read</p>
</td>
<td class="cellalignment1318" headers="r3c1-t7 r1c3-t7">
<p>N/A</p>
</td>
<td class="cellalignment1318" headers="r3c1-t7 r1c4-t7">
<p>Media header</p>
</td>
<td class="cellalignment1318" headers="r3c1-t7 r1c5-t7">
<p>Low</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect1" -->
<a id="CHDDAJCH"></a>
<div id="IMURG8200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.2</span> Choosing LOB Storage Parameters for Oracle Multimedia Objects</h2>
<p>The choices you make for specifying LOB storage attributes during table creation can significantly affect the performance of media load, retrieval, and processing operations. This section describes the most important options to consider and shows how the performance profile of Oracle Multimedia operations can affect the choice of LOB storage parameters.</p>
<p>The following subsections describe the LOB storage parameters and include examples of how to use them:</p>
<ul>
<li>
<p><a href="#BABJBGII">SecureFiles LOBs and BasicFiles LOBs</a></p>
</li>
<li>
<p><a href="#BABBJJIB">TABLESPACE</a></p>
</li>
<li>
<p><a href="#BABGJIGD">CACHE, NOCACHE, and CACHE READS</a></p>
</li>
<li>
<p><a href="#BABIGFCG">LOGGING and NOLOGGING</a></p>
</li>
<li>
<p><a href="#BABEEDAJ">CHUNK</a></p>
</li>
<li>
<p><a href="#BABIHACF">Example of Setting LOB Storage Options</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB45132" href="../ADLOB/part_start.htm#ADLOB45132"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for detailed information about LOBs</p>
</div>
<a id="BABJBGII"></a>
<div id="IMURG11681" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.1</span> SecureFiles LOBs and BasicFiles LOBs</h3>
<p>SecureFiles LOBs (SecureFiles) were introduced in Oracle Database 11<span class="italic">g</span> Release 1 (11.1) to supplement the original BasicFiles LOBs implementation that is identified by the SQL parameter BASICFILE. The performance of SecureFiles LOBs is significantly better than that of BasicFiles LOBs, especially for large media data. Oracle recommends using SecureFiles LOBs for storing media data whenever possible. SecureFiles LOBs are identified by specifying the SQL parameter SECUREFILE.</p>
</div>
<!-- class="sect2" -->
<a id="BABBJJIB"></a>
<div id="IMURG11682" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.2</span> TABLESPACE</h3>
<p>You can achieve the best performance for LOBs by specifying storage for LOBs in a different tablespace than the one used for the table that contains the LOB. If many different LOBs are to be accessed frequently, you can also specify a separate tablespace for each LOB column or attribute to reduce device contention.</p>
</div>
<!-- class="sect2" -->
<a id="BABGJIGD"></a>
<div id="IMURG11683" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.3</span> CACHE, NOCACHE, and CACHE READS</h3>
<p>The cache option is a part of the STORE AS clause, and determines whether LOB pages are stored in the buffer cache.</p>
<ul>
<li>
<p>When the option has the value <code>CACHE</code>, Oracle places LOB pages in the buffer cache where they can be shared among multiple users. Over time and if the LOB pages are no longer accessed, the pages are eventually removed from the buffer cache.</p>
</li>
<li>
<p>For the value <code>NOCACHE</code>, LOB pages are not placed in the buffer cache.</p>
</li>
<li>
<p>For the value <code>CACHE READS</code>, LOB pages are placed in the cache for read operations only.</p>
</li>
</ul>
<p>If your application performs multiple read operations on a media object (for example: invoking the setProperties( ) method and then generating a thumbnail image), enable read caching for the source media object.</p>
</div>
<!-- class="sect2" -->
<a id="BABIGFCG"></a>
<div id="IMURG11684" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.4</span> LOGGING and NOLOGGING</h3>
<p>The logging option is a part of the STORE AS clause and determines if REDO data is logged when a LOB is updated. If the [NO]LOGGING clause is omitted, neither NOLOGGING nor LOGGING is specified and the logging attribute of the table or table partition defaults to the logging attribute of the tablespace in which it resides.</p>
<p>There is another alternative depending on how the cache option is specified.</p>
<ul>
<li>
<p>If CACHE is specified and [NO]LOGGING is omitted, LOGGING is automatically implemented (because you cannot have CACHE NOLOGGING).</p>
</li>
<li>
<p>If CACHE is not specified and [NO]LOGGING is omitted, the [NO]LOGGING value is obtained from the tablespace in which the LOB segment resides.</p>
</li>
</ul>
<p>Specify NOLOGGING only when you do not care about media recovery. However, if the disk, tape, or storage media fails, you will not be able to recover your changes from the log because those changes were not logged.</p>
<p>NOLOGGING can be useful for bulk loading of media data. For instance, when loading data into the LOB, if you do not care about the redo operation and you can start the load over if it fails, set the LOB data segment storage characteristics to NOCACHE NOLOGGING. This option provides good performance for the initial loading of data.</p>
<p>After you finish loading data, if necessary, you can use the ALTER TABLE statement to modify the LOB storage characteristics for the LOB data segment for normal LOB operations (for example: to CACHE or NOCACHE LOGGING).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Data Guard Redo Apply technology uses logging to populate the standby database. Thus, do not specify NOLOGGING with this Data Guard technology.</div>
</div>
<!-- class="sect2" -->
<a id="BABEEDAJ"></a>
<div id="IMURG11685" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.5</span> CHUNK</h3>
<p>The CHUNK option applies only to BasicFiles LOBs. It is part of the STORE AS clause, and indicates the size of the minimum unit of storage for the LOB data. CHUNK must be an integer multiple of the block size, and it must have a maximum value of 32K bytes.</p>
<p>Accessing LOBs in bigger chunks is more efficient. For the most efficient storage of media objects, which are almost always much larger than 32K, choose the maximum value of 32K.</p>
</div>
<!-- class="sect2" -->
<a id="BABIHACF"></a>
<div id="IMURG11686" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.6</span> Example of Setting LOB Storage Options</h3>
<p>This section describes a simple example that shows how to use the performance profiles of Oracle Multimedia operations (see <a href="#CHDJCIDG">Table 8-1</a> through <a href="#CHDFBEEF">Table 8-4</a>) to guide your usage of LOB storage options.</p>
<p>In this example, Company X wants to build an archive for digital images. The archive stores a full resolution copy of the original image, and two Web-ready, JPEG format versions of the original at reduced scales, one at 50% of the original size and another at 25% of the original size. The database team plans to use the SQL*Loader utility to bulk load all the initial images. Then, they can use a PL/SQL program to initialize the image data. Initialization consists of setting the properties for the original image and generating the scaled images. After initialization, the table is prepared for the primary application, which retrieves images for Web-based users.</p>
<p>The following example shows a table definition for storing the images. The table stores the binary image data using SecureFiles in tablespace <code>tbs2</code>. All the other table data is stored in tablespace <code>tbs1</code>.</p>
<pre>create table images(id        integer primary key,
                    original  ordsys.ordimage,
                    scale50   ordsys.ordimage,
                    scale25   ordsys.ordimage)
tablespace tbs1
lob(original.source.localdata)store as secureFile (tablespace tbs2)
lob(scale50.source.localdata)store as secureFile (tablespace tbs2)
lob(scale25.source.localdata)store as secureFile (tablespace tbs2);
</pre>
<p>After the table is created, the image data can be loaded. Loading image data generates a sequential write pattern to the LOB. Because no applications are reading the data during the load operation, caching it is not required. You can also improve load performance by disabling logging for the column that is loaded. The following command dynamically alters the table to prepare the original image column LOB for loading.</p>
<pre>alter table images modify lob(original.source.localdata) (nocache nologging);
</pre>
<p>After loading, the next step is to set the image properties for the <code>original</code> column and generate the scaled versions to be stored in the <code>scale50</code> and <code>scale25</code> columns. In this step, the source image are fully read twice to generate the scaled versions. The scaled images that are generated are written but not read. The following command dynamically alters the table to enable read caching for the source image, and disables caching and logging for the destination images.</p>
<pre>alter table images modify lob(original.source.localdata) (cache reads);
alter table images modify lob(scale50.source.localdata) (nocache nologging);
alter table images modify lob(scale25.source.localdata) (nocache nologging);
</pre>
<p>After running the program to set the properties of the <code>original</code> image and generate the scaled versions, the LOB storage attributes can be optimized for the main application that retrieves images for users to view in a Web browser. Because the archive contains millions of images, users are not expected to view the same image simultaneously. Thus, there is little benefit to caching the image data. The following command reenables logging for the LOBs and disables caching.</p>
<pre>alter table images modify lob(original.source.localdata) (nocache logging);
alter table images modify lob(scale50.source.localdata) (nocache logging);
alter table images modify lob(scale25.source.localdata) (nocache logging);
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCDHEF"></a>
<div id="IMURG8300" class="sect1">
<h2 class="sect1"><span class="secnum">8.3</span> Setting Database Initialization Parameters</h2>
<p><a href="#CHDDAJCH">Section 8.2</a> points out that you can disable logging of LOB data at the column level to reduce the amount of I/O to the redo log. However, if logging cannot be disabled, additional database tuning may be required. For example, you may have to increase the size of the redo log buffer to prevent load processes from waiting.</p>
<p>The initialization parameter LOG_BUFFER specifies the amount of memory (in bytes) that Oracle uses when buffering redo entries to a redo log file. Redo log entries contain a record of the changes that have been made to the database block buffers. The LGWR process writes redo log entries from the log buffer to a redo log file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TGDBA553" href="../TGDBA/tune_buffer_cache.htm#TGDBA553"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about configuring the database redo log buffer</p>
</li>
<li>
<p><a class="olink REFRN001" href="../REFRN/GUID-6F1C3203-0AA0-4AF1-921C-A027DD7CB6A9.htm#REFRN001"><span class="italic">Oracle Database Reference</span></a> for comprehensive information about setting database initialization parameters</p>
</li>
<li>
<p><a class="olink ADMIN11099" href="../ADMIN/create.htm#ADMIN11099"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about managing initialization parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1311">
<tr>
<td class="cellalignment1318">
<table class="cellalignment1316">
<tr>
<td class="cellalignment1315"><a href="ch_extend.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1315"><a href="ch_examples.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1320">
<table class="cellalignment1314">
<tr>
<td class="cellalignment1315"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1315"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1315"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1315"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1315"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1315"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>