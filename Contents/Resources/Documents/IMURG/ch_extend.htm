<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-48245"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Extending%20Oracle%20Multimedia"></a><title>Extending Oracle Multimedia</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="description" content="Presents information about using Oracle Database to store, manage, and retrieve images, audio, video, DICOM format medical images and other objects, or other heterogeneous media data in an integrated fashion with other enterprise information. Oracle Multimedia extends Oracle Database reliability, availability, and data management to multimedia content in traditional, Internet, electronic commerce, medical, financial, and other media-rich applications."/>
<meta name="dcterms.created" content="2014-07-31T9:32:46Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Multimedia User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E17697-09"/>
<meta name="dcterms.isVersionOf" content="IMURG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="im_glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="ch_metadata.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_dba.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17697-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">14/20</span> <!-- End Header -->
<div id="IMURG7000" class="chapter"><a id="BABIEAHB"></a>
<h1 class="chapter"><span class="secnum">7</span> Extending Oracle Multimedia</h1>
<p>Oracle Multimedia can be extended to support:</p>
<ul>
<li>
<p>Other external sources of media data not currently supported</p>
</li>
<li>
<p>Other media data formats not currently supported</p>
</li>
<li>
<p>A new object type</p>
</li>
<li>
<p>Media (audio and video) data processing</p>
</li>
</ul>
<p>For each unique external media data source or each unique ORDAudio, ORDDoc, or ORDVideo data format you want to support, you must:</p>
<ol>
<li>
<p>Design your new data source or new ORDAudio, ORDDoc, or ORDVideo data format.</p>
</li>
<li>
<p>Implement your new data source or new ORDAudio, ORDDoc, or ORDVideo data format.</p>
</li>
<li>
<p>Install your new plug-in into the <code>ORDPLUGINS</code> schema.</p>
</li>
<li>
<p>Grant EXECUTE privileges on your new plug-in to <code>PUBLIC</code>.</p>
</li>
</ol>
<p>This chapter includes these sections:</p>
<ul>
<li>
<p><a href="#i615841">Supporting Other External Sources</a></p>
</li>
<li>
<p><a href="#BEBEFJCH">Supporting Other Media Data Formats</a></p>
</li>
<li>
<p><a href="#i607611">Extending Oracle Multimedia with a New Type</a></p>
</li>
<li>
<p><a href="#BEBGIBDC">Supporting Media Data Processing</a></p>
</li>
</ul>
<a id="i615841"></a>
<div id="IMURG7100" class="sect1">
<h2 class="sect1"><span class="secnum">7.1</span> Supporting Other External Sources</h2>
<p>To implement your new data source, you must implement the required interfaces in the <code>ORDX_&lt;srcType&gt;_SOURCE</code> package in the <code>ORDPLUGINS</code> schema (where <code>&lt;srcType&gt;</code> represents the name of the new external source type). Use the package body example in <a href="#i78095">Section 7.1.1.3</a> as a template to create the package body. Then, set the source type parameter in the setSourceInformation( ) call to the appropriate source value to indicate to the ORDAudio, ORDImage, ORDDoc, or ORDVideo object that package <code>ORDPLUGINS.ORDX_&lt;srcType&gt;_SOURCE</code> is available as a plug-in. Use the <code>ORDPLUGINS.ORDX_FILE_SOURCE</code> and <code>ORDPLUGINS.ORDX_HTTP_SOURCE</code> packages as guides when you extend support to other external audio, image, video, or other heterogeneous media data sources.</p>
<p>The following subsection presents reference information on the packages or PL/SQL plug-ins provided:</p>
<ul>
<li>
<p><a href="#i77801">Packages or PL/SQL Plug-ins</a></p>
</li>
</ul>
<a id="i77801"></a>
<div id="IMURG11651" class="sect2">
<h3 class="sect2"><span class="secnum">7.1.1</span> <a id="sthref185"></a>Packages or PL/SQL Plug-ins</h3>
<p>Plug-ins must be named as ORDX_&lt;name&gt;_&lt;module_name&gt; where the &lt;module_name&gt; is SOURCE for ORDSource. For example, the FILE plug-in described in <a href="#i77813">Section 7.1.1.1</a> is named ORDX_FILE_SOURCE and the HTTP plug-in described in <a href="#i77953">Section 7.1.1.2</a> is named ORDX_HTTP_SOURCE and &lt;name&gt; is the source type. Both source type names, FILE and HTTP, are reserved to Oracle.</p>
<p>Use the <code>ORDPLUGINS.ORDX_FILE_SOURCE</code> and <code>ORDPLUGINS.ORDX_HTTP_SOURCE</code> packages as a guide in developing your new source type package.</p>
<p>The following subsections provide examples and more information about extending the supported external sources of audio, image, video, or other heterogeneous media data:</p>
<ul>
<li>
<p><a href="#i77813">ORDPLUGINS.ORDX_FILE_SOURCE Package</a></p>
</li>
<li>
<p><a href="#i77953">ORDPLUGINS.ORDX_HTTP_SOURCE Package</a></p>
</li>
<li>
<p><a href="#i78095">Extending Oracle Multimedia to Support a New Data Source</a></p>
</li>
</ul>
<a id="i77813"></a>
<div id="IMURG11652" class="sect3">
<h4 class="sect3"><span class="secnum">7.1.1.1</span> <a id="sthref186"></a><a id="sthref187"></a>ORDPLUGINS.ORDX_FILE_SOURCE Package</h4>
<p>The <code>ORDPLUGINS.ORDX_FILE_SOURCE</code> package or PL/SQL plug-in provides support for multimedia stored in the local file system external to the database.</p>
<pre>CREATE OR REPLACE PACKAGE ORDX_FILE_SOURCE AS
  -- functions/procedures
  FUNCTION processCommand(obj     IN OUT NOCOPY ORDSYS.ORDSource,
                          ctx     IN OUT RAW,
                          cmd     IN VARCHAR2,
                          arglist IN VARCHAR2,
                          result  OUT RAW)
           RETURN RAW;
  PROCEDURE import(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                   ctx      IN OUT RAW,
                   mimetype OUT VARCHAR2,
                   format   OUT VARCHAR2);
  PROCEDURE import(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                   ctx      IN OUT RAW,
                   dlob     IN OUT NOCOPY BLOB,
                   mimetype OUT VARCHAR2,
                   format   OUT VARCHAR2);
  PROCEDURE importFrom(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                       ctx      IN OUT RAW,
                       mimetype OUT VARCHAR2,
                       format   OUT VARCHAR2,
                       loc      IN VARCHAR2,
                       name     IN VARCHAR2);
  PROCEDURE importFrom(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                       ctx      IN OUT RAW,
                       dlob     IN OUT NOCOPY BLOB,
                       mimetype OUT VARCHAR2,
                       format   OUT VARCHAR2,
                       loc      IN VARCHAR2,
                       name     IN VARCHAR2);
  PROCEDURE export(obj  IN OUT NOCOPY ORDSYS.ORDSource,
                   ctx  IN OUT RAW,
                   slob IN OUT NOCOPY BLOB,
                   loc  IN VARCHAR2,
                   name IN VARCHAR2);
  FUNCTION  getContentLength(obj  IN ORDSYS.ORDSource,
                             ctx  IN OUT RAW),
            RETURN INTEGER;
  PRAGMA RESTRICT_REFERENCES(getContentLength, WNDS, WNPS, RNDS, RNPS);
  FUNCTION  getSourceAddress(obj  IN ORDSYS.ORDSource,
                             ctx  IN OUT RAW,
                             userData IN VARCHAR2)
            RETURN VARCHAR2;
  PRAGMA RESTRICT_REFERENCES(getSourceAddress, WNDS, WNPS, RNDS, RNPS);
  
  FUNCTION open(obj IN OUT NOCOPY ORDSYS.ORDSource, 
           userArg IN RAW, 
           ctx OUT RAW) RETURN INTEGER;
  FUNCTION close(obj IN OUT NOCOPY ORDSYS.ORDSource, ctx IN OUT RAW) 
         RETURN INTEGER;
  FUNCTION trim(obj IN OUT NOCOPY ORDSYS.ORDSource, 
                ctx IN OUT RAW,
                newlen IN INTEGER) RETURN INTEGER;
PROCEDURE read(obj     IN OUT NOCOPY ORDSYS.ORDSource,
               ctx      IN OUT RAW,
               startPos IN INTEGER,
               numBytes IN OUT INTEGER,
               buffer   OUT RAW);
PROCEDURE write(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                ctx      IN OUT RAW,
                startPos IN INTEGER,
                numBytes IN OUT INTEGER,
                buffer   OUT RAW);
END ORDX_FILE_SOURCE;
/
</pre>
<p><a href="#g996805">Table 7-1</a> shows the methods supported in the <code>ORDX_FILE_SOURCE</code> package and the exceptions raised if you call a method that is not supported.</p>
<div id="IMURG11653" class="tblruleformal">
<p class="titleintable"><a id="sthref188"></a><a id="g996805"></a>Table 7-1 Methods Supported in the ORDPLUGINS.ORDX_FILE_SOURCE Package</p>
<table class="cellalignment1321" title="Methods Supported in the ORDPLUGINS.ORDX_FILE_SOURCE Package" summary="List of supported methods in the ORDX_FILE_SOURCE package" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t2">Name of Method</th>
<th class="cellalignment1322" id="r1c2-t2">Level of Support</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t2" headers="r1c1-t2">
<p>processCommand</p>
</td>
<td class="cellalignment1318" headers="r2c1-t2 r1c2-t2">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t2" headers="r1c1-t2">
<p>import</p>
</td>
<td class="cellalignment1318" headers="r3c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t2" headers="r1c1-t2">
<p>import</p>
</td>
<td class="cellalignment1318" headers="r4c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t2" headers="r1c1-t2">
<p>importFrom</p>
</td>
<td class="cellalignment1318" headers="r5c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t2" headers="r1c1-t2">
<p>importFrom</p>
</td>
<td class="cellalignment1318" headers="r6c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r7c1-t2" headers="r1c1-t2">
<p>export</p>
</td>
<td class="cellalignment1318" headers="r7c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r8c1-t2" headers="r1c1-t2">
<p>getContentLength</p>
</td>
<td class="cellalignment1318" headers="r8c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r9c1-t2" headers="r1c1-t2">
<p>getSourceAddress</p>
</td>
<td class="cellalignment1318" headers="r9c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r10c1-t2" headers="r1c1-t2">
<p>open</p>
</td>
<td class="cellalignment1318" headers="r10c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r11c1-t2" headers="r1c1-t2">
<p>close</p>
</td>
<td class="cellalignment1318" headers="r11c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r12c1-t2" headers="r1c1-t2">
<p>trim</p>
</td>
<td class="cellalignment1318" headers="r12c1-t2 r1c2-t2">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r13c1-t2" headers="r1c1-t2">
<p>read</p>
</td>
<td class="cellalignment1318" headers="r13c1-t2 r1c2-t2">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r14c1-t2" headers="r1c1-t2">
<p>write</p>
</td>
<td class="cellalignment1318" headers="r14c1-t2 r1c2-t2">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect3" -->
<a id="i77953"></a>
<div id="IMURG11654" class="sect3">
<h4 class="sect3"><span class="secnum">7.1.1.2</span> <a id="sthref189"></a><a id="sthref190"></a>ORDPLUGINS.ORDX_HTTP_SOURCE Package</h4>
<p>The <code>ORDPLUGINS.ORDX_HTTP_SOURCE</code> package or PL/SQL plug-in provides support for multimedia stored in any HTTP server and accessed through a URL.</p>
<pre>CREATE OR REPLACE PACKAGE ORDX_HTTP_SOURCE AS
  -- functions/procedures
  FUNCTION processCommand(obj     IN OUT NOCOPY ORDSYS.ORDSource,
                          ctx     IN OUT RAW,
                          cmd     IN VARCHAR2,
                          arglist IN VARCHAR2,
                          result  OUT RAW)
           RETURN RAW;
  PROCEDURE import(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                   ctx      IN OUT RAW,
                   mimetype OUT VARCHAR2,
                   format   OUT VARCHAR2);
  PROCEDURE import(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                   ctx      IN OUT RAW,
                   dlob     IN OUT NOCOPY BLOB,
                   mimetype OUT VARCHAR2,
                   format   OUT VARCHAR2);
  PROCEDURE importFrom(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                       ctx      IN OUT RAW,
                       mimetype OUT VARCHAR2,
                       format   OUT VARCHAR2,
                       loc      IN VARCHAR2,
                       name     IN VARCHAR2);
  PROCEDURE importFrom(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                       ctx      IN OUT RAW,
                       dlob     IN OUT NOCOPY BLOB,
                       mimetype OUT VARCHAR2,
                       format   OUT VARCHAR2,
                       loc      IN VARCHAR2,
                       name     IN VARCHAR2);
  PROCEDURE export(obj  IN OUT NOCOPY ORDSYS.ORDSource,
                   ctx  IN OUT RAW,
                   dlob IN OUT NOCOPY BLOB,
                   loc  IN VARCHAR2,
                   name IN VARCHAR2);
  FUNCTION  getContentLength(obj  IN ORDSYS.ORDSource,
                             ctx  IN OUT RAW)
            RETURN INTEGER;
  PRAGMA RESTRICT_REFERENCES(getContentLength, WNDS, WNPS, RNDS, RNPS, TRUST);
  FUNCTION  getSourceAddress(obj  IN ORDSYS.ORDSource,
                             ctx  IN OUT RAW,
                             userData IN VARCHAR2) 
            RETURN VARCHAR2;
  PRAGMA RESTRICT_REFERENCES(getSourceAddress, WNDS, WNPS, RNDS, RNPS);
  FUNCTION open(obj IN OUT NOCOPY ORDSYS.ORDSource, userArg IN RAW,
           ctx OUT RAW) RETURN INTEGER;
  FUNCTION close(obj IN OUT NOCOPY ORDSYS.ORDSource, ctx IN OUT RAW) 
           RETURN INTEGER;
  FUNCTION trim(obj IN OUT NOCOPY ORDSYS.ORDSource, 
           ctx IN OUT RAW,
           newlen IN INTEGER) RETURN INTEGER;
  PROCEDURE read(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                 ctx      IN OUT RAW,
                 startPos IN INTEGER,
                 numBytes IN OUT INTEGER,
                 buffer   OUT RAW);
  PROCEDURE write(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                  ctx      IN OUT RAW,
                  startPos IN INTEGER,
                  numBytes IN OUT INTEGER,
                  buffer   OUT RAW);
END ORDX_HTTP_SOURCE;
/
</pre>
<p><a href="#g996851">Table 7-2</a> shows the methods supported in the <code>ORDX_HTTP_SOURCE</code> package and the exceptions raised if you call a method that is not supported.</p>
<div id="IMURG11655" class="tblruleformal">
<p class="titleintable"><a id="sthref191"></a><a id="g996851"></a>Table 7-2 Methods Supported in the ORDPLUGINS.ORDX_HTTP_SOURCE Package</p>
<table class="cellalignment1321" title="Methods Supported in the ORDPLUGINS.ORDX_HTTP_SOURCE Package" summary="List of supported methods in the ORDX_HTTP_SOURCE package" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t3">Name of Method</th>
<th class="cellalignment1322" id="r1c2-t3">Level of Support</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t3" headers="r1c1-t3">
<p>processCommand</p>
</td>
<td class="cellalignment1318" headers="r2c1-t3 r1c2-t3">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t3" headers="r1c1-t3">
<p>import</p>
</td>
<td class="cellalignment1318" headers="r3c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t3" headers="r1c1-t3">
<p>import</p>
</td>
<td class="cellalignment1318" headers="r4c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t3" headers="r1c1-t3">
<p>importFrom</p>
</td>
<td class="cellalignment1318" headers="r5c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t3" headers="r1c1-t3">
<p>importFrom</p>
</td>
<td class="cellalignment1318" headers="r6c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r7c1-t3" headers="r1c1-t3">
<p>export</p>
</td>
<td class="cellalignment1318" headers="r7c1-t3 r1c2-t3">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r8c1-t3" headers="r1c1-t3">
<p>getContentLength</p>
</td>
<td class="cellalignment1318" headers="r8c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r9c1-t3" headers="r1c1-t3">
<p>getSourceAddress</p>
</td>
<td class="cellalignment1318" headers="r9c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r10c1-t3" headers="r1c1-t3">
<p>open</p>
</td>
<td class="cellalignment1318" headers="r10c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r11c1-t3" headers="r1c1-t3">
<p>close</p>
</td>
<td class="cellalignment1318" headers="r11c1-t3 r1c2-t3">
<p>Supported</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r12c1-t3" headers="r1c1-t3">
<p>trim</p>
</td>
<td class="cellalignment1318" headers="r12c1-t3 r1c2-t3">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r13c1-t3" headers="r1c1-t3">
<p>read</p>
</td>
<td class="cellalignment1318" headers="r13c1-t3 r1c2-t3">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r14c1-t3" headers="r1c1-t3">
<p>write</p>
</td>
<td class="cellalignment1318" headers="r14c1-t3 r1c2-t3">
<p>Not supported - raises exception: METHOD_NOT_SUPPORTED</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect3" -->
<a id="i78095"></a>
<div id="IMURG11656" class="sect3">
<h4 class="sect3"><span class="secnum">7.1.1.3</span> Extending Oracle Multimedia to Support a New Data Source</h4>
<p><a id="sthref192"></a>Extending Oracle Multimedia to support a new data source consists of these steps:</p>
<ol>
<li>
<p>Design your new data source.</p>
</li>
<li>
<p>Implement your new data source and name it, for example, <code>ORDX_MY_SOURCE.SQL</code>.</p>
</li>
<li>
<p>Install your new <code>ORDX_MY_SOURCE.SQL</code> plug-in into the <code>ORDPLUGINS</code> schema.</p>
</li>
<li>
<p>Grant EXECUTE privileges on your new plug-in, for example, <code>ORDX_MY_SOURCE.SQL</code> plug-in to PUBLIC.</p>
</li>
<li>
<p>Set the srctype to <code>my</code> to cause your plug-in to be invoked.</p>
</li>
</ol>
<p>A package body listing is provided in <a href="#i78110">Example 7-1</a> to assist you in this operation. Add your variables to the places that say &#34;--Your variables go here&#34; and add your code to the places that say &#34;--Your code goes here&#34;.</p>
<div id="IMURG11657" class="example">
<p class="titleinexample"><a id="i78110"></a>Example 7-1 Package Body for Extending Support to a New Data Source</p>
<pre>CREATE OR REPLACE PACKAGE BODY ORDX_MY_SOURCE
AS
  -- functions/procedures
  FUNCTION processCommand(
                    obj  IN OUT NOCOPY ORDSYS.ORDSource,
                    ctx  IN OUT RAW,
                    cmd  IN VARCHAR2,
                    arglist IN VARCHAR2,
                    result OUT RAW)
  RETURN RAW
  IS
   --Your variables go here.
  BEGIN
  --Your code goes here.
  END processCommand;
  PROCEDURE import( obj  IN OUT NOCOPY ORDSYS.ORDSource,
                    ctx  IN OUT RAW,
                    mimetype OUT VARCHAR2,
                    format   OUT VARCHAR2)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END import;
  PROCEDURE import( obj  IN OUT NOCOPY ORDSYS.ORDSource,
                    ctx  IN OUT RAW,
                    dlob IN OUT NOCOPY BLOB,
                    mimetype OUT VARCHAR2,
                    format   OUT VARCHAR2)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END import;
  PROCEDURE importFrom( obj      IN OUT NOCOPY ORDSYS.ORDSource,
                        ctx      IN OUT RAW,
                        mimetype OUT VARCHAR2,
                        format   OUT VARCHAR2,
                        loc      IN VARCHAR2,
                        name     IN VARCHAR2)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END importFrom;
  PROCEDURE importFrom( obj      IN OUT NOCOPY ORDSYS.ORDSource,
                        ctx      IN OUT RAW,
                        dlob     IN OUT NOCOPY BLOB,
                        mimetype OUT VARCHAR2,
                        format   OUT VARCHAR2,
                        loc      IN VARCHAR2,
                        name     IN VARCHAR2)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END importFrom;
  PROCEDURE export( obj  IN OUT NOCOPY ORDSYS.ORDSource,
                    ctx  IN OUT RAW,
                    slob IN OUT NOCOPY BLOB,
                    loc  IN VARCHAR2,
                    name IN VARCHAR2)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END export;
  
  FUNCTION  getContentLength( obj  IN ORDSYS.ORDSource,
                              ctx  IN OUT RAW)
  RETURN INTEGER
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END getContentLength;
  FUNCTION  getSourceAddress(obj  IN ORDSYS.ORDSource,
                             ctx  IN OUT RAW,
                             userData IN VARCHAR2)
  RETURN VARCHAR2
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END getSourceAddress;
  FUNCTION open(obj IN OUT NOCOPY ORDSYS.ORDSource, userArg IN RAW, ctx OUT RAW)
  RETURN INTEGER
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END open;
  FUNCTION close(obj IN OUT NOCOPY ORDSYS.ORDSource, ctx IN OUT RAW)
  RETURN INTEGER
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END close;
  FUNCTION trim(obj    IN OUT NOCOPY ORDSYS.ORDSource,
                       ctx    IN OUT RAW,
                       newlen IN INTEGER)
  RETURN INTEGER
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END trim;
  PROCEDURE read(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                 ctx      IN OUT RAW,
                 startPos IN INTEGER,
                 numBytes IN OUT INTEGER,
                 buffer   OUT RAW)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END read;
  PROCEDURE write(obj      IN OUT NOCOPY ORDSYS.ORDSource,
                  ctx      IN OUT RAW,
                  startPos IN INTEGER,
                  numBytes IN OUT INTEGER,
                  buffer   OUT RAW)
  IS
  --Your variables go here.
  BEGIN
  --Your code goes here.
  END write;
END ORDX_MY_SOURCE;
/
show errors;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEBEFJCH"></a>
<div id="IMURG7200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.2</span> Supporting Other Media Data Formats</h2>
<p>To implement your new ORDAudio, ORDDoc, or ORDVideo data format, you must implement the required interfaces in the <code>ORDPLUGINS.ORDX_&lt;format&gt;_&lt;media&gt;</code> package in the <code>ORDPLUGINS</code> schema (where <code>&lt;format&gt;</code> represents the name of the new audio or video, or other heterogeneous media data format and <code>&lt;media&gt;</code> represents the type of media (&#34;AUDIO&#34; or &#34;VIDEO&#34;, or &#34;DOC&#34;). Use the <code>ORDPLUGINS.ORDX_DEFAULT_&lt;media&gt;</code> package as a guide when you extend support to other audio or video data formats or other heterogeneous media data formats. Use the package body examples in <a href="#i1057795">Section 7.2.1.2</a>, <a href="#BABFBIHH">Section 7.2.2.2</a>, and <a href="#i1069721">Section 7.2.3.2</a> as templates to create the audio or video, or other heterogeneous media data package body, respectively. Then, set the new format parameter in the<br/>
setFormat( ) call to the appropriate format value to indicate to the ORDAudio, ORDDoc, or ORDVideo object that package <code>ORDPLUGINS.ORDX_&lt;format&gt;_&lt;media&gt;</code> is available as a plug-in, and that it must be used for method invocation.</p>
<p>The following subsections describe how to extend Oracle Multimedia to support other data formats:</p>
<ul>
<li>
<p><a href="#BEIJDJJB">Supporting Other ORDAudio Data Formats</a></p>
</li>
<li>
<p><a href="#BEIHBCHE">Supporting Other ORDDoc Data Formats</a></p>
</li>
<li>
<p><a href="#BEIEEHAA">Supporting Other Video Data Formats</a></p>
</li>
<li>
<p><a href="#BEIJADBJ">Supporting Other Image Data Formats</a></p>
</li>
</ul>
<a id="BEIJDJJB"></a>
<div id="IMURG11658" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.2.1</span> Supporting Other ORDAudio Data Formats</h3>
<p>The following subsections describe how to extend ORDAudio to support other data formats:</p>
<ul>
<li>
<p><a href="#i1037705">ORDPLUGINS.ORDX_DEFAULT_AUDIO Package</a></p>
</li>
<li>
<p><a href="#i1057795">Extending Oracle Multimedia to Support a New Audio Data Format</a></p>
</li>
</ul>
<a id="i1037705"></a>
<div id="IMURG11659" class="sect3">
<h4 class="sect3"><span class="secnum">7.2.1.1</span> ORDPLUGINS.ORDX_DEFAULT_AUDIO Package</h4>
<p><a id="sthref193"></a>Use the following <code>ORDPLUGINS.ORDX_DEFAULT_AUDIO</code> package<a id="sthref194"></a><a id="sthref195"></a> provided as a guide in developing your own <code>ORDPLUGINS.ORDX_&lt;format&gt;_AUDIO</code> audio format package. This package sets the <code>mimeType</code> field in the setProperties( ) method with a MIME type value that is dependent on the file format.</p>
<pre>CREATE OR REPLACE PACKAGE ORDX_DEFAULT_AUDIO
authid current_user
AS 
--AUDIO ATTRIBUTES ACCESSORS

PROCEDURE setProperties(ctx IN OUT RAW, 
                        obj IN OUT NOCOPY ORDSYS.ORDAudio,
                        setComments IN NUMBER := 0);
FUNCTION checkProperties(ctx IN OUT RAW, obj IN OUT ORDSYS.ORDAudio)
                RETURN NUMBER;
FUNCTION getAttribute(ctx IN OUT RAW,
                      obj IN ORDSYS.ORDAudio,
                      name IN VARCHAR2) RETURN VARCHAR2;
PROCEDURE getAllAttributes(ctx IN OUT RAW, 
                           obj IN ORDSYS.ORDAudio, 
                           attributes IN OUT NOCOPY CLOB);
--AUDIO PROCESSING METHODS
FUNCTION processCommand(ctx       IN OUT RAW,
                        obj       IN OUT NOCOPY ORDSYS.ORDAudio,
                        cmd       IN VARCHAR2,
                        arguments IN VARHAR2,
                        result    OUT RAW)
         RETURN RAW;

END;
/
</pre>
<p><a href="#g1102533">Table 7-3</a> shows the methods supported in the <code>ORDPLUGINS.ORDX_DEFAULT_AUDIO</code> package and the exceptions raised if you call a method that is not supported.</p>
<div id="IMURG11660" class="tblruleformal">
<p class="titleintable"><a id="sthref196"></a><a id="g1102533"></a>Table 7-3 Methods Supported in the ORDPLUGINS.ORDX_DEFAULT_AUDIO Package</p>
<table class="cellalignment1321" title="Methods Supported in the ORDPLUGINS.ORDX_DEFAULT_AUDIO Package" summary="List and level of support for supported methods in the ORDPLUGINS.ORDX_DEFAULT_AUDIO package" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t4">Name of Method</th>
<th class="cellalignment1322" id="r1c2-t4">Level of Support</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t4" headers="r1c1-t4">
<p>setProperties</p>
</td>
<td class="cellalignment1318" headers="r2c1-t4 r1c2-t4">
<p>Supported; if the source is local, extract attributes from the local data and set the properties, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; if the source is a BFILE, then extract attributes from the BFILE and set the properties; if the source is neither local nor a BFILE, get the media content into a temporary LOB, extract attributes from the data, and set the properties.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t4" headers="r1c1-t4">
<p>checkProperties</p>
</td>
<td class="cellalignment1318" headers="r3c1-t4 r1c2-t4">
<p>Supported; if the source is local, extract the attributes from the local data and compare them with the attribute values of the object, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; if the source is a BFILE, extract the attributes from the BFILE and compare them with the attribute values of the object; if the source is neither local nor a BFILE, get the media content into a temporary LOB, extract the attributes from the media content and compare them with the attribute values of the object.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t4" headers="r1c1-t4">
<p>getAttribute</p>
</td>
<td class="cellalignment1318" headers="r4c1-t4 r1c2-t4">
<p>Not supported - raises exceptions: METHOD_NOT_SUPPORTED and AUDIO_PLUGIN_EXCEPTION.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t4" headers="r1c1-t4">
<p>getAllAttributes</p>
</td>
<td class="cellalignment1318" headers="r5c1-t4 r1c2-t4">
<p>Supported; if the source is local, get the attributes and return them, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; otherwise, if the source is external, raise an<br/>
ORDSYS.ORDAudioExceptions.LOCAL_DATA_SOURCE_REQUIRED exception.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t4" headers="r1c1-t4">
<p>processCommand</p>
</td>
<td class="cellalignment1318" headers="r6c1-t4 r1c2-t4">
<p>Not supported - raises exceptions: METHOD_NOT_SUPPORTED and AUDIO_PLUGIN_EXCEPTION.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect3" -->
<a id="i1057795"></a>
<div id="IMURG11661" class="sect3">
<h4 class="sect3"><span class="secnum">7.2.1.2</span> Extending Oracle Multimedia to Support a New Audio Data Format</h4>
<p><a id="sthref197"></a>Extending Oracle Multimedia to support a new audio data format consists of the following steps:</p>
<ol>
<li>
<p>Design your new audio data format.</p>
<ol>
<li>
<p><a id="sthref198"></a>To support a new audio data format, implement the required interfaces in the <code>ORDX_&lt;format&gt;_AUDIO</code> package in the <code>ORDPLUGINS</code> schema (where <code>&lt;format&gt;</code> represents the name of the new audio data format). See <a href="#i1037705">Section 7.2.1.1</a> for a complete description of the interfaces for the <code>ORDX_DEFAULT_AUDIO</code> package. Use the package body example in <a href="#i1057817">Example 7-2</a> as a template to create the audio package body.</p>
</li>
<li>
<p>Then, set the new format parameter in the setFormat( ) call to the appropriate format value to indicate to the audio object that package <code>ORDPLUGINS.ORDX_&lt;format&gt;_AUDIO</code> is available as a plug-in.</p>
</li>
</ol>
</li>
<li>
<p>Implement your new audio data format and name it, for example, <code>ORDX_MY_AUDIO.SQL</code>.</p>
</li>
<li>
<p>Install your new <code>ORDX_MY_AUDIO.SQL</code> plug-in into the <code>ORDPLUGINS</code> schema.</p>
</li>
<li>
<p>Grant EXECUTE privileges on your new plug-in, for example, <code>ORDX_MY_AUDIO</code> plug-in, to PUBLIC.</p>
</li>
<li>
<p>In an application, set the format attribute to <code>my</code> to cause your plug-in to be invoked.</p>
</li>
</ol>
<p>A package body listing is provided in <a href="#i1057817">Example 7-2</a> to assist you in this operation. Add your variables to the places that say &#34;--Your variables go here&#34; and add your code to the places that say &#34;--Your code goes here&#34;.</p>
<div id="IMURG11662" class="example">
<p class="titleinexample"><a id="i1057817"></a>Example 7-2 Package Body for Extending Support to a New Audio Data Format</p>
<pre>CREATE OR REPLACE PACKAGE BODY ORDX_MY_AUDIO
AS
  --AUDIO ATTRIBUTES ACCESSORS
  PROCEDURE setProperties(ctx IN OUT RAW,
                          obj IN OUT NOCOPY ORDSYS.ORDAudio,
                          setComments IN NUMBER :=0)
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  FUNCTION checkProperties(ctx IN OUT RAW, obj IN OUT ORDSYS.ORDAudio)
  RETURN NUMBER
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  FUNCTION  getAttribute(ctx IN OUT RAW,
                         obj IN ORDSYS.ORDAudio,
                         name IN VARCHAR2)
  RETURN VARCHAR2
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  PROCEDURE getAllAttributes(ctx IN OUT RAW,
                             obj IN ORDSYS.ORDAudio,
                             attributes IN OUT NOCOPY CLOB)
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  -- AUDIO PROCESSING METHODS
  FUNCTION  processCommand(
                                 ctx       IN OUT RAW,
                                 obj       IN OUT NOCOPY ORDSYS.ORDAudio,
                                 cmd       IN VARCHAR2,
                                 arguments IN VARCHAR2,
                                 result    OUT RAW)
  RETURN RAW
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
END;
/
show errors;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIHBCHE"></a>
<div id="IMURG11663" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.2.2</span> Supporting Other ORDDoc Data Formats</h3>
<p>The following subsections describe how to extend ORDDoc to support other data formats:</p>
<ul>
<li>
<p><a href="#i1088210">ORDPLUGINS.ORDX_DEFAULT_DOC Package</a></p>
</li>
<li>
<p><a href="#BABFBIHH">Extending Oracle Multimedia to Support a New ORDDoc Data Format</a></p>
</li>
</ul>
<a id="i1088210"></a>
<div id="IMURG11664" class="sect3">
<h4 class="sect3"><span class="secnum">7.2.2.1</span> ORDPLUGINS.ORDX_DEFAULT_DOC Package</h4>
<p><a id="sthref199"></a>Use the following <code>ORDPLUGINS.ORDX_DEFAULT_DOC</code> package<a id="sthref200"></a><a id="sthref201"></a> provided as a guide in developing your own <code>ORDPLUGINS.ORDX_&lt;format&gt;_DOC</code> media format package.</p>
<pre>CREATE OR REPLACE PACKAGE ORDX_DEFAULT_DOC
authid current_user
AS 

PROCEDURE setProperties(ctx IN OUT RAW, 
                        obj IN OUT NOCOPY ORDSYS.ORDDoc,
                        setComments IN NUMBER := 0);

END;
/
</pre>
<p><a href="#BABEEAEJ">Table 7-4</a> shows the method supported in the <code>ORDPLUGINS.ORDX_DEFAULT_DOC</code> package and the exception raised if the source is <code>NULL</code>.</p>
<div id="IMURG11665" class="tblruleformal">
<p class="titleintable"><a id="sthref202"></a><a id="BABEEAEJ"></a>Table 7-4 Method Supported in the ORDPLUGINS.ORDX_DEFAULT_DOC Package</p>
<table class="cellalignment1321" title="Method Supported in the ORDPLUGINS.ORDX_DEFAULT_DOC Package" summary="List and level of support for supported methods in the ORDPLUGINS.ORDX_DEFAULT_DOC package" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t5">Name of Method</th>
<th class="cellalignment1322" id="r1c2-t5">Level of Support</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t5" headers="r1c1-t5">
<p>setProperties</p>
</td>
<td class="cellalignment1318" headers="r2c1-t5 r1c2-t5">
<p>Supported; if the source is local, extract attributes from the local data and set the properties, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; if the source is a BFILE, then extract attributes from the BFILE and set the properties; if the source is neither local nor a BFILE, get the media content into a temporary LOB, extract attributes from the data, and set the properties.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect3" -->
<a id="BABFBIHH"></a>
<div id="IMURG11666" class="sect3">
<h4 class="sect3"><span class="secnum">7.2.2.2</span> Extending Oracle Multimedia to Support a New ORDDoc Data Format</h4>
<p><a id="sthref203"></a>Extending Oracle Multimedia to support a new ORDDoc data format consists of the following steps:</p>
<ol>
<li>
<p>Design your new media data format.</p>
<ol>
<li>
<p><a id="sthref204"></a>To support a new media data format, implement the required interfaces in the <code>ORDX_&lt;format&gt;_DOC</code> package in the <code>ORDPLUGINS</code> schema (where <code>&lt;format&gt;</code> represents the name of the new media data format). See <a href="#i1088210">Section 7.2.2.1</a> for a complete description of the interfaces for the <code>ORDX_DEFAULT_DOC</code> package. Use the package body example in <a href="#BABDHIBD">Example 7-3</a> as a template to create the package body.</p>
</li>
<li>
<p>Then, set the new format parameter in the setFormat( ) call to the appropriate format value to indicate to the media object that package <code>ORDPLUGINS.ORDX_&lt;format&gt;_DOC</code> is available as a plug-in.</p>
</li>
</ol>
</li>
<li>
<p>Implement your new media data format and name it, for example, <code>ORDX_MY_DOC.SQL</code>.</p>
</li>
<li>
<p>Install your new <code>ORDX_MY_DOC.SQL</code> plug-in into the <code>ORDPLUGINS</code> schema.</p>
</li>
<li>
<p>Grant EXECUTE privileges on your new plug-in, for example, <code>ORDX_MY_DOC</code> plug-in, to PUBLIC.</p>
</li>
<li>
<p>In an application, set the format to <code>my</code> to cause your plug-in to be invoked.</p>
</li>
</ol>
<p>A package body listing is provided in <a href="#BABDHIBD">Example 7-3</a> to assist you in this operation. Add your variables to the places that say &#34;--Your variables go here&#34; and add your code to the places that say &#34;--Your code goes here&#34;.</p>
<div id="IMURG11667" class="example">
<p class="titleinexample"><a id="BABDHIBD"></a>Example 7-3 Package Body for Extending Support to a New ORDDoc Data Format</p>
<pre>CREATE OR REPLACE PACKAGE BODY ORDX_MY_DOC
AS
  --DOCUMENT ATTRIBUTES ACCESSORS
  PROCEDURE setProperties(ctx IN OUT RAW,
                          obj IN OUT NOCOPY ORDSYS.ORDDoc,
                          setComments IN NUMBER :=0)
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
END;
/
show errors;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIEEHAA"></a>
<div id="IMURG11668" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.2.3</span> Supporting Other Video Data Formats</h3>
<p>The following subsections describe how to extend ORDVideo to support other data formats:</p>
<ul>
<li>
<p><a href="#i1065622">ORDPLUGINS.ORDX_DEFAULT_VIDEO Package</a></p>
</li>
<li>
<p><a href="#i1069721">Extending Oracle Multimedia to Support a New Video Data Format</a></p>
</li>
</ul>
<a id="i1065622"></a>
<div id="IMURG11669" class="sect3">
<h4 class="sect3"><span class="secnum">7.2.3.1</span> ORDPLUGINS.ORDX_DEFAULT_VIDEO Package</h4>
<p><a id="sthref205"></a>Use the following <code>ORDPLUGINS.ORDX_DEFAULT_VIDEO</code> package<a id="sthref206"></a><a id="sthref207"></a> provided as a guide in developing your own <code>ORDPLUGINS.ORDX_&lt;format&gt;_VIDEO</code> video format package. This package sets the <code>mimeType</code> field in the setProperties( ) method with a MIME type value that is dependent on the file format.</p>
<pre>CREATE OR REPLACE PACKAGE ORDX_DEFAULT_VIDEO
authid current_user
AS
--VIDEO ATTRIBUTES ACCESSORS
FUNCTION  getAttribute(ctx IN OUT RAW,
                       obj IN ORDSYS.ORDVideo,
                       name IN VARCHAR2) 
          RETURN VARCHAR2;
PROCEDURE setProperties(ctx IN OUT RAW, 
                        obj IN OUT NOCOPY ORDSYS.ORDVideo,
                        setComments IN NUMBER := 0);
FUNCTION checkProperties(ctx IN OUT RAW,obj IN ORDSYS.ORDVideo) RETURN NUMBER;

-- must return name=value; name=value; ...  pairs
PROCEDURE getAllAttributes(ctx IN OUT RAW,
                           obj IN ORDSYS.ORDVideo,
                           attributes IN OUT NOCOPY CLOB);
-- VIDEO PROCESSING METHODS
FUNCTION  processCommand(
                         ctx       IN OUT RAW,
                         obj       IN OUT NOCOPY ORDSYS.ORDVideo,
                         cmd       IN VARCHAR2,
                         arguments IN VARCHAR2,
                         result    OUT RAW)
         RETURN RAW;

END;
/
</pre>
<p><a href="#g1091365">Table 7-5</a> shows the methods supported in the <code>ORDPLUGINS.ORDX_DEFAULT_VIDEO</code> package and the exceptions raised if you call a method that is not supported.</p>
<div id="IMURG11670" class="tblruleformal">
<p class="titleintable"><a id="sthref208"></a><a id="g1091365"></a>Table 7-5 Methods Supported in the ORDPLUGINS.ORDX_DEFAULT_VIDEO Package</p>
<table class="cellalignment1321" title="Methods Supported in the ORDPLUGINS.ORDX_DEFAULT_VIDEO Package" summary="List and level of support for supported methods in the ORDPLUGINS.ORDX_DEFAULT_VIDEO package" dir="ltr">
<thead>
<tr class="cellalignment1312">
<th class="cellalignment1322" id="r1c1-t6">Name of Method</th>
<th class="cellalignment1322" id="r1c2-t6">Level of Support</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r2c1-t6" headers="r1c1-t6">
<p>getAttribute</p>
</td>
<td class="cellalignment1318" headers="r2c1-t6 r1c2-t6">
<p>Not supported - raises exceptions: METHOD_NOT_SUPPORTED and VIDEO_PLUGIN_EXCEPTION</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r3c1-t6" headers="r1c1-t6">
<p>setProperties</p>
</td>
<td class="cellalignment1318" headers="r3c1-t6 r1c2-t6">
<p>Supported; if the source is local, extract attributes from the local data and set the properties, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; if the source is a BFILE, then extract attributes from the BFILE and set the properties; if the source is neither local nor a BFILE, get the media content into a temporary LOB, extract attributes from the data, and set the properties.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r4c1-t6" headers="r1c1-t6">
<p>checkProperties</p>
</td>
<td class="cellalignment1318" headers="r4c1-t6 r1c2-t6">
<p>Supported; if the source is local, extract attributes from the local data and compare them with the attribute values of the object, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; if the source is a BFILE, then extract attributes from the BFILE data and compare them with the attribute values of the object; if the source is neither local nor a BFILE, get the media content into a temporary LOB, extract attributes from the media content and compare them with the attribute values of the object.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r5c1-t6" headers="r1c1-t6">
<p>getAllAttributes</p>
</td>
<td class="cellalignment1318" headers="r5c1-t6 r1c2-t6">
<p>Supported; if the source is local, get the attributes and return them, but if the source is <code>NULL</code>, raise an ORDSYS.ORDSourceExceptions.EMPTY_SOURCE exception; otherwise, if the source is external, raise an ORDSYS.ORDVideoExceptions.LOCAL_DATA_SOURCE_REQUIRED exception.</p>
</td>
</tr>
<tr class="cellalignment1312">
<td class="cellalignment1318" id="r6c1-t6" headers="r1c1-t6">
<p>processCommand</p>
</td>
<td class="cellalignment1318" headers="r6c1-t6 r1c2-t6">
<p>Not supported - raises exceptions: METHOD_NOT_SUPPORTED and VIDEO_PLUGIN_EXCEPTION</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblruleformal" --></div>
<!-- class="sect3" -->
<a id="i1069721"></a>
<div id="IMURG11671" class="sect3">
<h4 class="sect3"><span class="secnum">7.2.3.2</span> Extending Oracle Multimedia to Support a New Video Data Format</h4>
<p><a id="sthref209"></a>Extending Oracle Multimedia to support a new video data format consists of the following steps:</p>
<ol>
<li>
<p>Design your new video data format.</p>
<ol>
<li>
<p><a id="sthref210"></a>To support a new video data format, implement the required interfaces in the <code>ORDX_&lt;format&gt;_VIDEO</code> package in the <code>ORDPLUGINS</code> schema (where <code>&lt;format&gt;</code> represents the name of the new video data format). See <a href="#i1065622">Section 7.2.3.1</a> for a complete description of the interfaces for the <code>ORDX_DEFAULT_VIDEO</code> package. Use the package body example in <a href="#i1069743">Example 7-4</a> as a template to create the video package body.</p>
</li>
<li>
<p>Then, set the new format parameter in the setFormat( ) call to the appropriate format value to indicate to the video object that package <code>ORDPLUGINS.ORDX_&lt;format&gt;_VIDEO</code> is available as a plug-in.</p>
</li>
</ol>
</li>
<li>
<p>Implement your new video data format and name it, for example, <code>ORDX_MY_VIDEO.SQL</code>.</p>
</li>
<li>
<p>Install your new <code>ORDX_MY_VIDEO.SQL</code> plug-in into the <code>ORDPLUGINS</code> schema.</p>
</li>
<li>
<p>Grant EXECUTE privileges on your new plug-in, for example, <code>ORDX_MY_VIDEO</code> plug-in, to PUBLIC.</p>
</li>
<li>
<p>In an application, set the video format to <code>my</code> to cause your plug-in to be invoked.</p>
</li>
</ol>
<p>A package body listing is provided in <a href="#i1069743">Example 7-4</a> to assist you in this operation. Add your variables to the places that say &#34;--Your variables go here&#34; and add your code to the places that say &#34;--Your code goes here&#34;.</p>
<div id="IMURG11672" class="example">
<p class="titleinexample"><a id="i1069743"></a>Example 7-4 Package Body for Extending Support to a New Video Data Format</p>
<pre>CREATE OR REPLACE PACKAGE BODY ORDX_MY_VIDEO
AS
  --VIDEO ATTRIBUTES ACCESSORS
  FUNCTION  getAttribute(ctx IN OUT RAW,
                         obj IN ORDSYS.ORDVideo,
                         name IN VARCHAR2)
  RETURN VARCHAR2
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  PROCEDURE setProperties(ctx IN OUT RAW, 
          obj IN OUT NOCOPY ORDSYS.ORDVideo,
          setComments IN NUMBER :=0)
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  FUNCTION checkProperties(ctx IN OUT RAW, obj IN ORDSYS.ORDVideo) RETURN NUMBER
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  PROCEDURE getAllAttributes(ctx IN OUT RAW,
                             obj IN ORDSYS.ORDVideo,
                             attributes IN OUT NOCOPY CLOB)
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
  -- VIDEO PROCESSING METHODS
  FUNCTION  processCommand(
                                 ctx       IN OUT RAW,
                                 obj       IN OUT NOCOPY ORDSYS.ORDVideo,
                                 cmd       IN VARCHAR2,
                                 arguments IN VARCHAR2,
                                 result OUT RAW)
  RETURN RAW
  IS
--Your variables go here.
  BEGIN
--Your code goes here.
  END;
END;
/
show errors;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIJADBJ"></a>
<div id="IMURG11673" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.2.4</span> Supporting Other Image Data Formats</h3>
<p>Oracle Multimedia supports certain other image formats through the setProperties( ) method for foreign images. This method enables other image formats to be recognized by writing the values supplied to the setProperties( ) method for foreign images to the existing ORDImage data attributes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p>The setProperties( ) for foreign images method in <a class="olink AIVUG80491" href="../AIVUG/ch_imgref.htm#AIVUG80491"><span class="italic">Oracle Multimedia Reference</span></a> for more information, and to determine the type of images that are supported this way</p>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i607611"></a>
<div id="IMURG7300" class="sect1">
<h2 class="sect1"><span class="secnum">7.3</span> Extending Oracle Multimedia with a New Type</h2>
<p><a id="sthref211"></a>You can use any of the Oracle Multimedia objects types as the basis for a new type of your own creation, as shown in <a href="#i602719">Example 7-5</a> for the ORDImage object type.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When a type is altered, any dependent type definitions are invalidated. You will encounter this problem if you define a new type that includes an Oracle Multimedia object type attribute and the Oracle Multimedia object type is altered, which always occurs during an Oracle Multimedia installation upgrade.
<p>A workaround to this problem is to revalidate all invalid type definitions with the following SQL statement:</p>
<pre>SQL&gt; ALTER TYPE &lt;type-name&gt; COMPILE;
</pre></div>
<div id="IMURG11674" class="example">
<p class="titleinexample"><a id="i602719"></a>Example 7-5 Extend Oracle Multimedia ORDImage with a New Object Type</p>
<pre>CREATE TYPE AnnotatedImage AS OBJECT
    ( image ORDSYS.ORDImage,
      description VARCHAR2(2000),
      MEMBER PROCEDURE SetProperties(SELF IN OUT AnnotatedImage),
      MEMBER PROCEDURE Copy(dest IN OUT AnnotatedImage),
      MEMBER PROCEDURE ProcessCopy(command IN VARCHAR2,
                                   dest IN OUT AnnotatedImage)
    );
/

CREATE TYPE BODY AnnotatedImage AS
  MEMBER PROCEDURE SetProperties(SELF IN OUT AnnotatedImage) IS
  BEGIN
    SELF.image.setProperties();
    SELF.description :=
        &#39;This is an example of using Image object as a subtype&#39;;
  END SetProperties;
  MEMBER PROCEDURE Copy(dest IN OUT AnnotatedImage) IS
  BEGIN
    SELF.image.copy(dest.image);
    dest.description := SELF.description;
  END Copy;
  MEMBER PROCEDURE ProcessCopy(command IN VARCHAR2,
                               dest IN OUT AnnotatedImage) IS
  BEGIN
    SELF.Image.processCopy(command,dest.image);
    dest.description := SELF.description;
  END ProcessCopy;
END;
/
</pre>
<p>After creating the new type, you can use it as you would any other type. For example:</p>
<pre>CREATE OR REPLACE DIRECTORY ORDIMGDIR AS &#39;C:\TESTS&#39;;

CREATE TABLE my_example(id NUMBER, an_image AnnotatedImage);
INSERT INTO my_example VALUES (1,
    AnnotatedImage(
        ORDSYS.ORDImage.init(&#39;file&#39;,&#39;ORDIMGDIR&#39;,&#39;plaid.gif&#39;));
COMMIT;
DECLARE
    myimage AnnotatedImage;
BEGIN
    SELECT an_image INTO myimage FROM my_example;
    myimage.SetProperties;
    DBMS_OUTPUT.PUT_LINE(&#39;This image has a description of &#39;);
    DBMS_OUTPUT.PUT_LINE(myimage.description);
    UPDATE my_example SET an_image = myimage;
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="BEBGIBDC"></a>
<div id="IMURG7400" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.4</span> Supporting Media Data Processing</h2>
<p>Oracle Multimedia also supports the processing of audio and video data, as described in the following subsections:</p>
<ul>
<li>
<p><a href="#i617275">Supporting Audio Data Processing</a></p>
</li>
<li>
<p><a href="#i617264">Supporting Video Data Processing</a></p>
</li>
</ul>
<a id="i617275"></a>
<div id="IMURG11675" class="sect2">
<h3 class="sect2"><span class="secnum">7.4.1</span> Supporting Audio Data Processing</h3>
<p>To support audio data processing, that is, the passing of an audio processing command and set of arguments to a format plug-in for processing, use the<br/>
processAudioCommand( ) method. This method is available only for user-defined formats.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p>The processAudioCommand( ) method in <a class="olink AIVUG80452" href="../AIVUG/ch_audref.htm#AIVUG80452"><span class="italic">Oracle Multimedia Reference</span></a> for a description</p>
</div>
</div>
<!-- class="sect2" -->
<a id="i617264"></a>
<div id="IMURG11676" class="sect2">
<h3 class="sect2"><span class="secnum">7.4.2</span> Supporting Video Data Processing</h3>
<p>To support video data processing, that is, the passing of a command and set of arguments to a format plug-in for processing, use the processVideoCommand( ) method. This method is only available for user-defined formats.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p>The processVideoCommand( ) method in <a class="olink AIVUG80512" href="../AIVUG/ch_vidref.htm#AIVUG80512"><span class="italic">Oracle Multimedia Reference</span></a> for a description</p>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1311">
<tr>
<td class="cellalignment1318">
<table class="cellalignment1316">
<tr>
<td class="cellalignment1315"><a href="ch_metadata.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1315"><a href="ch_dba.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1320">
<table class="cellalignment1314">
<tr>
<td class="cellalignment1315"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1315"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1315"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1315"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1315"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1315"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>