<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-5346"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Database%20Applications"></a><title>Database Applications</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="Programmatic Interfaces, Oracle Database, programmatic interfaces, Precompilers, precompilers, Pro*C/C++, Pro*C, Starting, Pro*COBOL, Oracle Call Interface, OCI, Call Interface, linking, UTM, interfacing to the Oracle XA Library, Troubleshooting, Trace Files, Files, trace"/>
<meta name="dcterms.created" content="2017-01-22T21:16:43Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Installation and Administration Guide"/>
<meta name="dcterms.identifier" content="E67706-02"/>
<meta name="dcterms.isVersionOf" content="DFSIG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2007, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="application-development.htm" title="Previous" type="text/html"/>
<link rel="Next" href="external-procedures.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E67706-02.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-41D56A81-E5F9-4EA2-BA40-FCF1F672FC33"></a> <span id="PAGE" style="display:none;">21/30</span> <!-- End Header -->
<h1 id="DFSIG-GUID-41D56A81-E5F9-4EA2-BA40-FCF1F672FC33" class="sect1"><span class="enumeration_chapter">13</span> Database Applications</h1>
<div>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-CD3D9664-859C-4ECA-8DC2-B75C7B81DA00">Overview of Database Applications</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-2B049F7B-DA0E-4CDF-AAE7-BBF64A14E620">Precompiler Applications</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-6BF6BB1D-387F-4C12-912D-C36B97A96920">Oracle Call Interface Applications</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-458B8008-57EC-45E1-AD2B-72D0F3320735">The Object Type Translator</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-3DA92F58-3E81-4B47-806B-BC888706F7B3">Oracle Database Applications in POSIX</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-035E1C1C-DAE0-48B7-81FF-C69823DCD83C" title="This section describes the responsibilities of the DBA or the administrator of the openUTM application.">openUTM Database Applications</a></p>
</li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-CD3D9664-859C-4ECA-8DC2-B75C7B81DA00"></a>
<h2 id="DFSIG-GUID-CD3D9664-859C-4ECA-8DC2-B75C7B81DA00" class="sect2">Overview of Database Applications</h2>
<div>
<p>Oracle Programmatic Interfaces are tools for application designers who want to use SQL statements to access an Oracle Database from within high-level language programs. The following types of programmatic interfaces are available:</p>
<ul style="list-style-type: disc;">
<li>
<p>The Precompiler Interface, which is a programming tool that enables you to embed SQL statements in high-level language source code.</p>
</li>
<li>
<p>The Oracle Call Interface (OCI), that enables to create high-level language applications that use function calls to access an Oracle database and control all phases of SQL statement execution.</p>
</li>
</ul>
<p>On BS2000/OSD, the Oracle Database precompilers support programs written in C, C++, and COBOL programming languages.</p>
<p>This section contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-29C1D248-92D5-433B-9299-C222AA76A244">Architecture of the Programmatic Interfaces</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-09AEE82D-DD6A-4947-97B3-A2137923A748">PL/SQL Support</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-F22EE759-B1B2-4B5A-B9D6-CFC4D0C5EB3C">Building and Running a Programmatic Interface Application</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-CD3D9664-859C-4ECA-8DC2-B75C7B81DA00__GUID-59142328-9C1A-4D5A-A36A-F1BC8FDC00CF">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink ZZPRE124" target="_blank" href="../ZZPRE/ch_one.htm#ZZPRE124"><span><cite>Oracle Database Programmer&#39;s Guide to the Oracle Precompilers</cite></span></a> for detailed information about Oracle Precompilers</p>
</li>
<li>
<p><a class="olink LNPCC3028" target="_blank" href="../LNPCC/pc_01int.htm#LNPCC3028"><span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></a> or <a class="olink LNPCB002" target="_blank" href="../LNPCB/pco02prc.htm#LNPCB002"><span><cite>Pro*COBOL Programmer&#39;s Guide</cite></span></a></p>
</li>
</ul>
</div>
</div>
<div class="props_rev_3"><a id="GUID-29C1D248-92D5-433B-9299-C222AA76A244"></a>
<h3 id="DFSIG-GUID-29C1D248-92D5-433B-9299-C222AA76A244" class="sect3">Architecture of the Programmatic Interfaces</h3>
<div>
<p>All precompiler and Oracle Call Interface (OCI) applications are linked with a small stub module. This stub module dynamically loads the SQL runtime system of the Oracle Database precompilers from the <code>ORALOAD</code> library. Programs written in the following languages can be combined:</p>
<ul style="list-style-type: disc;">
<li>
<p>Pro*C/C++</p>
</li>
<li>
<p>Pro*COBOL (COBOL85 and COBOL2000)</p>
</li>
</ul>
<div class="infobox-note" id="GUID-29C1D248-92D5-433B-9299-C222AA76A244__GUID-60AA1959-F9E8-4EF1-A871-8DD9AE2CAEC9">
<p class="notep1">Note:</p>
<p>OCI C and OCI COBOL programs cannot be combined; any attempt to do so results in execution errors. The entries into Oracle Database used by OCI C and OCI COBOL (for example, <code>OLOGON</code>) have identical names but different argument lists. For OCI COBOL, all arguments are by reference, that is, the parameter list contains all pointers. For OCI C, the numeric arguments are by value.</p>
</div>
<p>Oracle Database precompilers generate different <code>SQLLIB</code> function names for different languages. The following names are used:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>SQ0XXX:</code> COBOL</p>
</li>
<li>
<p><code>sq2xxx:</code> C</p>
</li>
</ul>
</div>
</div>
<div class="props_rev_3"><a id="GUID-09AEE82D-DD6A-4947-97B3-A2137923A748"></a>
<h3 id="DFSIG-GUID-09AEE82D-DD6A-4947-97B3-A2137923A748" class="sect3">PL/SQL Support</h3>
<div>
<p>The precompilers support PL/SQL as described in the <a class="olink LNPLS001" target="_blank" href="../LNPLS/overview.htm#LNPLS001"><span class="italic">Oracle Database PL/SQL Language Reference</span></a>. When using PL/SQL, you must specify <code>SQLCHECK=FULL</code> or <code>SQLCHECK=SEMANTICS</code> on the precompiler option line. The default is <code>SQLCHECK=NONE</code>. When requesting <code>SQLCHECK</code>, the precompiler must connect to a database. So, ensure that you provide the necessary connection information. (You may also want to set the <code>DEFAULT_CONNECTION</code> variable in the <code>ORAENV</code> file).</p>
<p>When <code>SQLCHECK=SEMANTICS</code> is specified, you must also specify <code>USERID=<span class="codeinlineitalic">username/password</span></code>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-F22EE759-B1B2-4B5A-B9D6-CFC4D0C5EB3C"></a>
<h3 id="DFSIG-GUID-F22EE759-B1B2-4B5A-B9D6-CFC4D0C5EB3C" class="sect3">Building and Running a Programmatic Interface Application</h3>
<div>
<div class="section">
<p>To build and run a programmatic interface application, perform the following steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Edit your source code, including embedded SQL, as outlined in the generic precompiler documentation.</span></li>
<li class="stepexpand"><span>Precompile the source with the corresponding precompiler.</span>
<div>
<div class="infobox-note" id="GUID-F22EE759-B1B2-4B5A-B9D6-CFC4D0C5EB3C__GUID-E07E6BEB-2F5A-4A61-BEA8-7D6F1E11F354">
<p class="notep1">Note:</p>
<p>You must use WE8BS2000 as client character set during precompilation (set in <code>ORAENV</code> file). Any other character set might lead to problems with the concatenation sign (&#34;||&#34;).</p>
<p>You do not need to precompile if you build an OCI C or an OCI COBOL application.</p>
</div>
</div>
</li>
<li class="stepexpand"><span>Compile the application.</span></li>
<li class="stepexpand"><span>Link the application, including the stub module <code>PROSTUB</code> from the <code>$ORACINST.PRO.LIB</code> library.</span></li>
<li class="stepexpand"><span>Call the environment definition file. Refer to <span class="q">&#34;<a href="oracle-database-utilities.htm#GUID-BA4C4B2E-5772-4907-9751-F341BB161F73">Calling the Environment-Definition File</a>&#34;</span> for details.</span></li>
<li class="stepexpand"><span>Run the application with the <code>START-EXECUTABLE</code> command. The supporting Oracle Database module is dynamically loaded from the <code>ORALOAD</code> library.</span></li>
<li class="stepexpand"><span>You can find sample BS2000 procedures for precompiling, compiling, and linking in the installation user ID: <code>$ORACINST.P.PROC</code>, <code>$ORACINST.P.PROCOB</code>, and <code>$ORACINST.P.PROLNK</code>.</span></li>
</ol>
<div class="section">
<p><a href="database-applications.htm#GUID-F22EE759-B1B2-4B5A-B9D6-CFC4D0C5EB3C__BABIIBGD">Figure 13-1</a> illustrates the sequence of events outlined in the preceding numbered list and how the programmatic interfaces use the program libraries.</p>
<div class="figure" id="GUID-F22EE759-B1B2-4B5A-B9D6-CFC4D0C5EB3C__BABIIBGD">
<p class="titleinfigure">Figure 13-1 Usage of Program Libraries by Programmatic Interfaces</p>
<img width="503" height="471" src="img/GUID-03218993-0209-4AF2-B802-B4EBB89DD6F2-default.png" alt="Description of Figure 13-1 follows" title="Description of Figure 13-1 follows"/><br/>
<a href="img_text/GUID-03218993-0209-4AF2-B802-B4EBB89DD6F2-print.htm">Description of &#34;Figure 13-1 Usage of Program Libraries by Programmatic Interfaces&#34;</a></div>
<!-- class="figure" -->
<p>For more information, see the specific notes for the programmatic interfaces in this chapter.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<div class="sect2"><a id="GUID-2B049F7B-DA0E-4CDF-AAE7-BBF64A14E620"></a>
<h2 id="DFSIG-GUID-2B049F7B-DA0E-4CDF-AAE7-BBF64A14E620" class="sect2">Precompiler Applications</h2>
<div>
<p>Learn about precompiler applications in this section. It includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-80C05965-F72F-4B7F-9445-70524235ACD5">About Using Precompilers</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-50E9097B-E93F-4FDD-9ED0-F473A6E2D458">Precompiler Pro*C/C++</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-3F7847B2-B92F-41AE-BFF2-685753F1ECE4">Precompiler Pro*COBOL</a></p>
</li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-80C05965-F72F-4B7F-9445-70524235ACD5"></a>
<h3 id="DFSIG-GUID-80C05965-F72F-4B7F-9445-70524235ACD5" class="sect3">About Using Precompilers</h3>
<div>
<p>Oracle Database precompilers on BS2000/OSD support LMS libraries for the files mentioned in this section. This section includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-7F969CD1-C355-4D65-9490-2041BED8307A">Include Files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-D6CEBCA5-8621-4484-946F-B615DDD05DF3">User-Specific Configuration Files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-415ACB50-7B9F-422E-9759-9403C00BFB67">Input, Output, and List-files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-BD1442BC-F45C-467A-B940-FEBD4AF48BC6">Additional Remarks</a></p>
</li>
</ul>
<p>This functionality helps saving disk resources and provides clarity by grouping files in different libraries.</p>
<p>All LMS library elements that you use must be of element type &#34;S&rdquo;. The precompilers generate elements of type &#34;S&#34; if libraries are used. When you use LMS library elements, the precompilers build temporary files with the prefix &#34;#T.&rdquo;, which are deleted when the preprocessing completes successfully.</p>
<p>When you use LMS library elements, the element name that you specify must be the full element name including the suffix. The precompilers do not append the suffix to the element name.</p>
</div>
<div class="props_rev_3"><a id="GUID-7F969CD1-C355-4D65-9490-2041BED8307A"></a>
<h4 id="DFSIG-GUID-7F969CD1-C355-4D65-9490-2041BED8307A" class="sect4">Include Files</h4>
<div>
<p>All standard include files are shipped in the LMS library, <code>$ORACINST.PRO.INCLUDE.LIB</code>. You must specify this LMS library or a user-defined include library for the <code>EXEC SQL INCLUDE</code> statements. Use the <code>INCLUDE</code> precompiler option, as follows:</p>
<pre dir="ltr">* INCLUDE=$ORACINST.PRO.INCLUDE.LIB \
* INCLUDE=<span class="italic">mylibrary</span>
</pre>
<p>where <span class="italic"><code>mylibrary</code></span> is the BS2000 file name of the user-defined library, such as <code>PROC.INCLIB</code>.</p>
<div class="infobox-note" id="GUID-7F969CD1-C355-4D65-9490-2041BED8307A__GUID-9540CC93-9348-48AD-A4DE-0A30BD14A5D0">
<p class="notep1">Note:</p>
<p>The order in which you specify the different <code>INCLUDE</code> options affects the performance of precompilation. You should place the commonly used files before the rarely used ones.</p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-D6CEBCA5-8621-4484-946F-B615DDD05DF3"></a>
<h4 id="DFSIG-GUID-D6CEBCA5-8621-4484-946F-B615DDD05DF3" class="sect4">User-Specific Configuration Files</h4>
<div>
<p>You can also specify a user-specific configuration file as an LMS-element using the following syntax:</p>
<pre dir="ltr">* CONFIG=<span class="italic">my_config_lib</span><span class="italic">[config_element]</span>
</pre>
<p>where <span class="italic"><code>my_config_lib</code></span> is the BS2000 file name of the configuration library and <span class="italic"><code>config_element</code></span> is the full name of the element.</p>
<p>You must use brackets when specifying the configuration element, as shown in the following example.</p>
<pre dir="ltr">* CONFIG=CONFIG.LIB[PROCOB.CFG]
</pre></div>
</div>
<div class="props_rev_3"><a id="GUID-415ACB50-7B9F-422E-9759-9403C00BFB67"></a>
<h4 id="DFSIG-GUID-415ACB50-7B9F-422E-9759-9403C00BFB67" class="sect4">Input, Output, and List-files</h4>
<div>
<p>Besides using BS2000 files, you can also use the LMS library elements for precompiler I/O using the <code>INAME</code>, <code>ONAME</code>, and <code>LNAME</code> options.</p>
<p>If you do not specify a library file name and an element, then the Oracle Database precompilers generate BS2000 ISAM files by default. The only option that you must enter is the <code>INAME</code> option. This can be either a BS2000 file name or a library file name, and the name of an element from the LMS library.</p>
<p>For example:</p>
<pre dir="ltr">* INAME=<span class="italic">my_input_lib</span>[<span class="italic">my_element</span>] \
* ONAME=<span class="italic">my_output_lib</span>[<span class="italic">my_element</span>] \
* LNAME=<span class="italic">my_list_lib</span>[<span class="italic">my_element</span>] \
</pre>
<p>where <span class="italic"><code>my_input_lib</code></span> is the BS2000 file name of the particular library and <span class="italic"><code>my_element</code></span> is the name of the element including the specific suffix.</p>
<div class="infobox-note" id="GUID-415ACB50-7B9F-422E-9759-9403C00BFB67__GUID-F933F869-3C38-4E92-AB86-75C4B84E9D42">
<p class="notep1">Note:</p>
<p>You must use brackets when specifying the LMS library element.</p>
</div>
<p>In the following example, Pro*C generates an output file with the name <code>SAMPLE.C</code> as the <code>ONAME</code> option has been omitted:</p>
<pre dir="ltr">* INAME=INPUT.LIB[SAMPLE.PC] \ 
* LNAME=LIST.LIB[SAMPLE.LST]
</pre></div>
</div>
<div class="props_rev_3"><a id="GUID-BD1442BC-F45C-467A-B940-FEBD4AF48BC6"></a>
<h4 id="DFSIG-GUID-BD1442BC-F45C-467A-B940-FEBD4AF48BC6" class="sect4">Additional Remarks</h4>
<div>
<p>The following are the additional remarks on this release of Oracle Database 12<span class="italic">c</span> Release 1 (12.1) for Fujitsu BS2000/OSD:</p>
<ul style="list-style-type: disc;">
<li>
<p>Only compilers and compiler versions supporting the ILCS Standard Linkage are supported. If the Oracle Database detects a call from a user program not using the Standard Linkage conventions, then it terminates the task and displays the message number 5002 or 5003.</p>
</li>
<li>
<p>If <code>ONAME</code> is not specified when starting a precompiler, then the precompiler generates a default name, which consists of the last part of <code>INAME</code> with the relevant suffix. For example, if the name of the C program you want to compile is <span class="italic"><code>MYPROG.PERS.TEST.PC</code></span>, and if <code>ONAME</code> is omitted, then Pro*C generates an output file with the name <code>TEST.C</code>.</p>
</li>
<li>
<p>If you work with float variables, then you may encounter rounding problems. The workaround is to declare the float variables as double variables instead.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-50E9097B-E93F-4FDD-9ED0-F473A6E2D458"></a>
<h3 id="DFSIG-GUID-50E9097B-E93F-4FDD-9ED0-F473A6E2D458" class="sect3">Precompiler Pro*C/C++</h3>
<div>
<p>This section describes the procedure for using Pro*C/C++. It includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-6C502446-448B-4635-B2FD-31D30267881B">Starting Pro*C</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-73901F6C-6D7C-40B2-A697-AEEF355AF79D">Pro*C Include, System Configuration and Demo Files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-FE9B0FED-C7E7-4BA4-96A7-7DDE6589D3D9">SQLLIB Calls</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-3D540605-4C80-439E-BCD5-ED386B191322">Linking Pro*C Programs</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-C884E45A-2E9B-4284-8FD4-8FD791195340">The Pro*C SQLCPR.H Header File</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-0D37A3AF-AE20-4658-86AC-592E53F30A8B">UTM Applications</a></p>
</li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-6C502446-448B-4635-B2FD-31D30267881B"></a>
<h4 id="DFSIG-GUID-6C502446-448B-4635-B2FD-31D30267881B" class="sect4">Starting Pro*C</h4>
<div>
<div class="section">
<p>To start the Pro*C precompiler, enter the following:</p>
<pre dir="ltr">/START-EXECUTABLE (*LINK(ORALOAD),PROC)
* INAME=myprog<span class="italic">.PC ONAME=myprog.C [</span><span class="italic">options</span><span class="italic">]</span>
</pre>
<p>where:</p>
<p><span class="italic"><code>myprog</code></span> is the name of the C program.</p>
<p><span class="italic"><code>options</code></span> specifies Pro*C options. For a list and description of the valid options, see <a class="olink LNPCC3574" target="_blank" href="../LNPCC/pc_10opt.htm#LNPCC3574"><span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></a>.</p>
<div class="infobox-note" id="GUID-6C502446-448B-4635-B2FD-31D30267881B__GUID-B084800C-D638-4775-9BA3-8526E719A355">
<p class="notep1">Note:</p>
<p>You must use a separate precompiler option <code>INCLUDE</code> for each path you want to specify, unlike as described in <a class="olink LNPCC3747" target="_blank" href="../LNPCC/pc_10opt.htm#LNPCC3747"><span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></a>. A list as allowed for the option <code>SYS_INCLUDE</code> may cause the precompiler to loop.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<div class="props_rev_3"><a id="GUID-73901F6C-6D7C-40B2-A697-AEEF355AF79D"></a>
<h4 id="DFSIG-GUID-73901F6C-6D7C-40B2-A697-AEEF355AF79D" class="sect4">Pro*C Include, System Configuration and Demo Files</h4>
<div>
<p>The Pro*C include files, demo files, and system configuration files are shipped under:</p>
<pre dir="ltr">$ORACINST.PRO.INCLUDE.LIB
$ORACINST.C.DEMO.*.PC
$ORACINST.UTM.DEMO.*.PC
$ORACINST.CONFIG.PCSCFG.CFG
</pre>
<p>An example of a BS2000 procedure for precompilation and compilation is included in the Oracle Database software under the name <code>$ORACINST.P.PROC</code>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-FE9B0FED-C7E7-4BA4-96A7-7DDE6589D3D9"></a>
<h4 id="DFSIG-GUID-FE9B0FED-C7E7-4BA4-96A7-7DDE6589D3D9" class="sect4">SQLLIB Calls</h4>
<div>
<p>If you want to program explicit C calls to <code>SQLLIB</code> functions, then you must call <code>sq2</code><span class="italic"><code>xxx</code></span> instead of <code>sql</code><span class="italic"><code>xxx</code></span>. For example, call <code>sq2cex</code> instead of <code>sqlcex</code>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-3D540605-4C80-439E-BCD5-ED386B191322"></a>
<h4 id="DFSIG-GUID-3D540605-4C80-439E-BCD5-ED386B191322" class="sect4">Linking Pro*C Programs</h4>
<div>
<div class="section">
<p>To link a Pro*C program, you need:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The common runtime environment, <code>CRTE</code>.</p>
</li>
<li>
<p>The Pro* library <code>$ORACINST.PRO.LIB</code>, which contains the stub module, <code>PROSTUB</code>.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-3D540605-4C80-439E-BCD5-ED386B191322__GUID-4688151D-621D-4AC3-82DE-54C690D8C946">
<p class="notep1">Note:</p>
<p>You must use the BS2000 <code>BINDER</code> instead of <code>TSOSLNK</code>.</p>
</div>
<p>To link your program, you must create your user-specific link procedure. An example of such a link procedure is included in the Oracle Database software with the name, <code>$ORACINST.P.PROLNK</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<div class="props_rev_3"><a id="GUID-C884E45A-2E9B-4284-8FD4-8FD791195340"></a>
<h4 id="DFSIG-GUID-C884E45A-2E9B-4284-8FD4-8FD791195340" class="sect4">The Pro*C SQLCPR.H Header File</h4>
<div>
<p>If you are making calls to Pro*C functions, such as <code>sq2cls()</code> or <code>sq2glm()</code>, then you can include the <code>SQLCPR.H</code> file into the C programs to verify that the functions calls are correct.</p>
<p>In the Pro*C programs, add the following line:</p>
<pre dir="ltr">EXEC SQL INCLUDE SQLCPR
</pre>
<p>as you would for <code>SQLCA</code> or <code>SQLDA</code>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-0D37A3AF-AE20-4658-86AC-592E53F30A8B"></a>
<h4 id="DFSIG-GUID-0D37A3AF-AE20-4658-86AC-592E53F30A8B" class="sect4">UTM Applications</h4>
<div>
<p>You can use Pro*C to write UTM program units.</p>
<div class="infoboxnotealso" id="GUID-0D37A3AF-AE20-4658-86AC-592E53F30A8B__GUID-719FCDDD-93D9-4E87-9D4F-A8C543157772">
<p class="notep1">See Also:</p>
<a href="database-applications.htm#GUID-035E1C1C-DAE0-48B7-81FF-C69823DCD83C" title="This section describes the responsibilities of the DBA or the administrator of the openUTM application.">openUTM Database Applications</a></div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-3F7847B2-B92F-41AE-BFF2-685753F1ECE4"></a>
<h3 id="DFSIG-GUID-3F7847B2-B92F-41AE-BFF2-685753F1ECE4" class="sect3">Precompiler Pro*COBOL</h3>
<div>
<p>This section describes the procedure for using Pro*COBOL: It includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-88BA1ADD-C1D2-467B-89D9-3AB096C7BDC5">Starting Pro*COBOL</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-666C2B49-3BDE-4C4B-BD1D-1E86E31E4917">Pro*COBOL Include, System Configuration, and Demo Files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-277E3152-D742-4085-9958-40EBB3A393EE">SQLLIB Calls</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-309F0147-54A4-4B0B-989B-50530048C314">Linking Pro*COBOL Programs</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-C7CEC089-6E83-48F5-B0EA-6A8657B86619">openUTM Applications</a></p>
</li>
</ul>
<p>When using Pro*COBOL, be careful about the following constructions with paragraphs and <code>EXEC</code> statements, because the precompiler generates a paragraph heading for the code generated from these <code>EXEC</code> statements:</p>
<div class="tblformal" id="GUID-3F7847B2-B92F-41AE-BFF2-685753F1ECE4__GUID-6F3631C1-B32F-4323-94BD-BE18F97B1EE8">
<table class="cellalignment4274" summary="Table displaying precompiler output of Pro*COBOL">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4295" id="d27339e1030">Before precompiling</th>
<th class="cellalignment4295" id="d27339e1034">After precompiling</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1040" headers="d27339e1030">
<p>COB-LABEL1.</p>
</td>
<td class="cellalignment4296" headers="d27339e1040 d27339e1034">
<p>COB-LABEL1</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1047" headers="d27339e1030">
<p>.</p>
</td>
<td class="cellalignment4296" headers="d27339e1047 d27339e1034">
<p>.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1054" headers="d27339e1030">
<p>.</p>
</td>
<td class="cellalignment4296" headers="d27339e1054 d27339e1034">
<p>.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1061" headers="d27339e1030">
<p>EXEC SQL....</p>
</td>
<td class="cellalignment4296" headers="d27339e1061 d27339e1034">
<p>SQL-LABEL1.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1068" headers="d27339e1030">
<p>.</p>
</td>
<td class="cellalignment4296" headers="d27339e1068 d27339e1034">
<p>.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1075" headers="d27339e1030">
<p>.</p>
</td>
<td class="cellalignment4296" headers="d27339e1075 d27339e1034">
<p>.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4296" id="d27339e1082" headers="d27339e1030">
<p>COB-LABEL2.</p>
</td>
<td class="cellalignment4296" headers="d27339e1082 d27339e1034">
<p>COB-LABEL2.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Before precompiling, the statement <code>PERFORM COB-LABEL1</code> runs the code in paragraph <code>COB-LABEL1</code> until the <code>COB-LABEL2</code> heading is reached. However, the precompiler generates a paragraph heading, <code>SQL-LABEL1</code>, for the code generated from the <code>EXEC SQL</code> statement.</p>
<p>As a result, after precompiling, <code>PERFORM COB-LABEL1</code> runs the code in the paragraph <code>COB-LABEL1</code> until the <code>SQL-LABEL1</code> heading is reached. The workaround for this problem is to use <code>SECTIONS</code> or to run <code>PERFORM COB-LABEL1 THRU COB-LABEL2</code>.</p>
<p>A <code>COPY</code> statement as the first statement in <code>WORKING-STORAGE SECTION</code> may result in a wrong code generation if copied structures must be continued by non-copied code. This is because the precompiler generates its data definitions before the first data definition of the source program. To avoid this, insert a <code>FILLER</code> definition as the first line in <code>WORKING-STORAGE SECTION</code>, as follows:</p>
<pre dir="ltr">01 FILLER PIC X
</pre></div>
<div class="props_rev_3"><a id="GUID-88BA1ADD-C1D2-467B-89D9-3AB096C7BDC5"></a>
<h4 id="DFSIG-GUID-88BA1ADD-C1D2-467B-89D9-3AB096C7BDC5" class="sect4">Starting Pro*COBOL</h4>
<div>
<div class="section">
<p>To start the Pro*COBOL precompiler, enter the following commands:</p>
<pre dir="ltr">/START-EXECUTABLE (*LINK(ORALOAD),PROCOB)
* INAME=<span class="italic">myprog</span><span class="italic">.PCO ONAME=myprog.COB [options]</span>
</pre>
<p>where:</p>
<p><span class="italic"><code>myprog</code></span> specifies the COBOL program.</p>
<p><span class="italic"><code>options</code></span> specifies the Pro*COBOL options.</p>
<div class="infobox-note" id="GUID-88BA1ADD-C1D2-467B-89D9-3AB096C7BDC5__GUID-D525EF08-50EA-4657-815F-14A4A048638E">
<p class="notep1">Note:</p>
<p>The Pro*COBOL option <code>MAXLITERAL</code> defaults to 180, and not 256, as shown in the <a class="olink LNPCB1303" target="_blank" href="../LNPCB/pcoabops.htm#LNPCB1303"><span class="italic">Pro*COBOL Programmer&#39;s Guide</span></a>. The option <code>FORMAT=TERMINAL</code> is not supported.</p>
</div>
<div class="infoboxnotealso" id="GUID-88BA1ADD-C1D2-467B-89D9-3AB096C7BDC5__GUID-3574B588-ED3F-4A18-AE57-FA9B41F0B2B3">
<p class="notep1">See Also:</p>
<a class="olink LNPCB014" target="_blank" href="../LNPCB/pco14opt.htm#LNPCB014"><span><cite>Pro*COBOL Programmer&#39;s Guide</cite></span></a> for PRO*COBOL options</div>
</div>
<!-- class="section" --></div>
</div>
<div class="props_rev_3"><a id="GUID-666C2B49-3BDE-4C4B-BD1D-1E86E31E4917"></a>
<h4 id="DFSIG-GUID-666C2B49-3BDE-4C4B-BD1D-1E86E31E4917" class="sect4">Pro*COBOL Include, System Configuration, and Demo Files</h4>
<div>
<p>The Pro*COBOL include files, demo files, and system configuration files are shipped under:</p>
<pre dir="ltr">$ORACINST.PRO.INCLUDE.LIB
$ORACINST.COBOL.DEMO.*.PCO 
$ORACINST.UTM.DEMO.*.PCO 
$ORACINST.CONFIG.PCBCFG.CFG
</pre>
<p>An example of a BS2000 procedure for precompilation and compilation is included in your Oracle Database software under the name <code>$ORACINST.P.PROCOB2000</code>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-277E3152-D742-4085-9958-40EBB3A393EE"></a>
<h4 id="DFSIG-GUID-277E3152-D742-4085-9958-40EBB3A393EE" class="sect4">SQLLIB Calls</h4>
<div>
<p>If you want to program explicit COBOL calls to <code>SQLLIB</code> functions, then call <code>SQ0</code><span class="italic"><code>XXX</code></span> instead of <code>SQL</code><span class="italic"><code>XXX</code></span><span class="italic">.</span> For example, call <code>SQOADR</code> instead of <code>SQLADR</code>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-309F0147-54A4-4B0B-989B-50530048C314"></a>
<h4 id="DFSIG-GUID-309F0147-54A4-4B0B-989B-50530048C314" class="sect4">Linking Pro*COBOL Programs</h4>
<div>
<div class="section">
<p>To link a Pro*COBOL program, you need:</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>The common runtime environment, <code>CRTE</code>.</p>
</li>
<li>
<p>The Pro* Library <code>$ORACINST.PRO.LIB</code>, which contains the stub module, <code>PROSTUB</code>.</p>
</li>
<li>
<p>Unicode, which is only supported with COBOL2000. This might generate calls to the BS2000-Macro <code>NLSCNV</code>. To resolve the <code>GNLCNV</code> entry, use the BS2000 XHCS library.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-309F0147-54A4-4B0B-989B-50530048C314__GUID-C714C753-B543-4D3E-A298-E22045A975DB">
<p class="notep1">See Also:</p>
Fujitsu BS2000 manual <a href="http://manuals.ts.fujitsu.com/file/3085/xhcs.pdf" target="_blank"><span class="italic">XHCS</span></a> for more information about the <code>GNLCNV</code> entry</div>
<div class="infobox-note" id="GUID-309F0147-54A4-4B0B-989B-50530048C314__GUID-3EA71B89-B817-4312-A37A-F6D564033147">
<p class="notep1">Note:</p>
<p>You must use the BS2000 <code>BINDER</code> instead of <code>TSOSLNK</code>.</p>
</div>
<p>To link your program, you must create your own user-specific link procedure. An example of such a link procedure is included in your Oracle Database software with the name, <code>$ORACINST.P.PROLNK</code>.</p>
</div>
<!-- class="section" --></div>
</div>
<div class="props_rev_3"><a id="GUID-C7CEC089-6E83-48F5-B0EA-6A8657B86619"></a>
<h4 id="DFSIG-GUID-C7CEC089-6E83-48F5-B0EA-6A8657B86619" class="sect4">openUTM Applications</h4>
<div>
<p>You can use Pro*COBOL to write openUTM (Universal Transaction Monitor) program units. Pro*C and Pro*COBOL program units can be combined in an openUTM application.</p>
<div class="infoboxnotealso" id="GUID-C7CEC089-6E83-48F5-B0EA-6A8657B86619__GUID-1991487B-3DAB-47B9-A90F-5F86037CA6C4">
<p class="notep1">See Also:</p>
<a href="database-applications.htm#GUID-035E1C1C-DAE0-48B7-81FF-C69823DCD83C" title="This section describes the responsibilities of the DBA or the administrator of the openUTM application.">openUTM Database Applications</a> for more information</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-6BF6BB1D-387F-4C12-912D-C36B97A96920"></a>
<h2 id="DFSIG-GUID-6BF6BB1D-387F-4C12-912D-C36B97A96920" class="sect2">Oracle Call Interface Applications</h2>
<div>
<p>On Fujitsu BS2000/OSD, the Oracle Call Interface (OCI) supports the programming languages, C and COBOL.</p>
<p>When you use the set of host language calls that comprise the Oracle Call Interface, you can access the data in an Oracle database by programs written in the C and COBOL programming languages.</p>
<div class="infobox-note" id="GUID-6BF6BB1D-387F-4C12-912D-C36B97A96920__GUID-237E0191-430A-4BEF-BA67-102940944817">
<p class="notep1">Note:</p>
<p>The precompiler products from Oracle offer a higher level interface to the Oracle Database. A single precompiler call is translated to several OCI calls. As the precompilers are easy to use, and in a few cases offer more or different functionality than OCI, you may prefer to use the precompilers for some applications.</p>
</div>
<div class="infoboxnotealso" id="GUID-6BF6BB1D-387F-4C12-912D-C36B97A96920__GUID-A541A654-8F6B-4825-9C08-3FD499B1C3C7">
<p class="notep1">See Also:</p>
<a class="olink LNOCI010" target="_blank" href="../LNOCI/oci01int.htm#LNOCI010"><span><cite>Oracle Call Interface Programmer&#39;s Guide</cite></span></a> for more information about OCI calls</div>
</div>
<div class="props_rev_3"><a id="GUID-DBE63A5C-9DB1-4411-BE27-410D209EAB73"></a>
<h3 id="DFSIG-GUID-DBE63A5C-9DB1-4411-BE27-410D209EAB73" class="sect3">Linking OCI Applications</h3>
<div>
<p>To link OCI programs, you need:</p>
<ul style="list-style-type: disc;">
<li>
<p>The common runtime environment, <span class="italic">CRTE</span>.</p>
</li>
<li>
<p>The Pro* Library <code>$ORACINST.PRO.LIB</code>, which contains the stub modules <code>OCI$COB</code> and <code>PROSTUB</code>.</p>
</li>
</ul>
<p>When linking OCI COBOL programs, <code>OCI$COB</code> must always be included <span class="bold">before</span> <code>PROSTUB</code>.</p>
<div class="infobox-note" id="GUID-DBE63A5C-9DB1-4411-BE27-410D209EAB73__GUID-300866EF-EEE5-4932-BBC0-926B56B082E2">
<p class="notep1">Note:</p>
<p>You must use the BS2000 <code>BINDER</code> instead of <code>TSOSLNK</code>.</p>
</div>
<p>To link your program, you must create your own user-specific link procedure. An example of such a link procedure is included in your Oracle Database software with the name <code>$ORACINST.P.PROLNK</code>.</p>
<p>For example, to link your program, call the BS2000 procedure as follows:</p>
<p><code>/CALL-PROCEDURE $ORACINST.P.PROLNK,<span class="codeinlineitalic">dir</span>,<span class="codeinlineitalic">module</span>,TYPE=OCIC</code></p>
<p>or:</p>
<p><code>/CALL-PROCEDURE $ORACINST.P.PROLNK,<span class="codeinlineitalic">dir</span>,<span class="codeinlineitalic">module</span>,TYPE=OCICOB</code></p>
<p>where, the module to be linked is stored in <span class="italic"><code>dir</code></span><code>.LIB</code>.</p>
<p>The OCI include files and demo files are shipped under:</p>
<pre dir="ltr">$ORACINST.RDBMS.DEMO.OCI.LIB
$ORACINST.RDBMS.DEMO.*.C 
$ORACINST.RDBMS.DEMO.*.COB
</pre></div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-458B8008-57EC-45E1-AD2B-72D0F3320735"></a>
<h2 id="DFSIG-GUID-458B8008-57EC-45E1-AD2B-72D0F3320735" class="sect2">The Object Type Translator</h2>
<div>
<p>This section describes how to use the Object Type Translator (OTT) on BS2000. It includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-B2E31B32-391C-4A29-B86F-6179208EAF1F">Starting Object Type Translator</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-E167C98F-EA84-4206-9556-CE5C4B6E77B5">OTT System Configuration File</a></p>
</li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-B2E31B32-391C-4A29-B86F-6179208EAF1F"></a>
<h3 id="DFSIG-GUID-B2E31B32-391C-4A29-B86F-6179208EAF1F" class="sect3">Starting Object Type Translator</h3>
<div>
<p>The Object Type Translator (OTT) is based on Java and can only be started in the POSIX environment. You must use the JDBC thin driver to connect to the database. The connect string is specified in the <code>url</code> option, as follows:</p>
<pre dir="ltr">url=jdbc:oracle:thin:@<span class="italic">hostname</span>:<span class="italic">port</span>:<span class="italic">sid</span>
</pre>
<p>In the following example, OTT will connect to the database with the service identifier <code>orcl</code>, on the host <code>myhost</code>, that has a TCP/IP listener on port 1521.</p>
<p>For example:</p>
<pre dir="ltr">ott userid=scott/tiger url=jdbc:oracle:thin:@myhost:1521:orcl intype=demoin.typ outtype=demoout.typ code=c hfile=demo.h
</pre>
<div class="infoboxnotealso" id="GUID-B2E31B32-391C-4A29-B86F-6179208EAF1F__GUID-BF6ACFB6-A7F3-445C-B000-B37636836B83">
<p class="notep1">See Also:</p>
<a class="olink LNPCC019" target="_blank" href="../LNPCC/pc_19ott.htm#LNPCC019"><span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></a> for more information about Object Type Translator</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-E167C98F-EA84-4206-9556-CE5C4B6E77B5"></a>
<h3 id="DFSIG-GUID-E167C98F-EA84-4206-9556-CE5C4B6E77B5" class="sect3">OTT System Configuration File</h3>
<div>
<p>The OTT system configuration file is installed with the Oracle Database software, with the following name:</p>
<pre dir="ltr">$ORACLE_HOME/precomp/admin/ottcfg.cfg
</pre></div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-3DA92F58-3E81-4B47-806B-BC888706F7B3"></a>
<h2 id="DFSIG-GUID-3DA92F58-3E81-4B47-806B-BC888706F7B3" class="sect2">Oracle Database Applications in POSIX Program Environment</h2>
<div>
<p>You can run application programs either in the BS2000 program environment or in the POSIX program environment. This section describes how you can build Oracle database applications that can run in the POSIX program environment.</p>
<p>You must precompile and compile the Pro* application or OCI application as described in the previous chapters.</p>
<p>When linking the application, you must include the stub module <code>PROSTUBX</code> instead of <code>PROSTUB</code> and you must add the following lines in the BS2000 procedure for linking:</p>
<pre dir="ltr">/SET-FILE-LINK BLSLIB01,$.SYSLNK.CRTE.POSIX
/SET-FILE-LINK BLSLIB02,$.SYSLIB.POSIX-SOCKETS.<span class="italic">version_number</span>
</pre>
<div class="infobox-note" id="GUID-3DA92F58-3E81-4B47-806B-BC888706F7B3__GUID-AB9AD554-6213-4C14-BCDF-D285B76ED222">
<p class="notep1">Note:</p>
<p>These two libraries must be the first libraries in the search order for the resolution of unresolved external references.</p>
</div>
<p>To start an Oracle Database application in the POSIX environment by using BS2000 SDF commands, set the BS2000 SDF-P variable <code>SYSPOSIX.PROGRAM-ENVIRONMENT</code> to <code>SHELL</code>.</p>
<p>You can set additional POSIX environment variables by using the BS2000 SDF-P variable <code>SYSPOSIX</code>.</p>
<p>The following example shows how to set the SDF-P variable <code>SYSPOSIX</code> to run an application in the POSIX environment:</p>
<pre dir="ltr">/DECL-VAR SYSPOSIX,TYPE=*STRUCT(DEF=*DYN),SCOPE=*TASK(STATE=*ANY)
/SET-VAR SYSPOSIX.PROGRAM-ENVIRONMENT=&#39;SHELL&#39;
/SET-VAR SYSPOSIX.ORACLE-HOME=&#39;<span class="italic">oracle_home_path</span>&#39;
/SET-VAR SYSPOSIX.ORACLE-SID=&#39;<span class="italic">oracle_sid</span>&#39;
</pre></div>
</div>
<div class="sect2"><a id="GUID-035E1C1C-DAE0-48B7-81FF-C69823DCD83C"></a>
<h2 id="DFSIG-GUID-035E1C1C-DAE0-48B7-81FF-C69823DCD83C" class="sect2">openUTM Database Applications</h2>
<div>
<p>This section describes how to use the BS2000 transaction monitor openUTM for coordinated interoperation with Oracle Database 12<span class="italic">c</span> Release 1 (12.1). The following topics are covered:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-30ECC902-082D-4170-9AA1-E93F45F9686E">Operation of Oracle Database Using openUTM Programs</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-CE51AE3C-5D10-47E4-BF31-F2E1DCB32B5E">Distributed openUTM Files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-1582EA62-1ABC-443E-ABF5-A9B5492D12DB" title="This section describes the responsibilities of the DBA or the administrator of the openUTM application.">DBA Responsibilities</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7">Developing an Oracle Database/openUTM Application</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-C762C9DD-5BFD-45F7-8FA0-015D007146B2">Troubleshooting</a></p>
</li>
</ul>
</div>
<a id="DFSIG229"></a>
<div class="props_rev_3"><a id="GUID-30ECC902-082D-4170-9AA1-E93F45F9686E"></a>
<h3 id="DFSIG-GUID-30ECC902-082D-4170-9AA1-E93F45F9686E" class="sect3">Operation of Oracle Database Using openUTM Programs</h3>
<div>
<p>Universal Transaction Monitor (openUTM) controls the execution of user programs that can be used from a large number of terminals at the same time.</p>
<p>An openUTM application consists of a structured sequence of processing stages that are supplied with access rights for the specific user. These stages, in turn, consist of openUTM transactions that are carried out either in their entirety, or not at all.</p>
<p>If several users use openUTM at the same time, then simultaneous access to the shared database is also usually required. The database/data communications system (DB/DC system), Oracle Database/openUTM, synchronizes access by openUTM applications to Oracle Database, and ensures that the database remains in a consistent state. In the event of a system failure, the DB/DC system performs an automatic recovery, which ensures that the database remains in a consistent state that is synchronized with openUTM.</p>
<p>Synchronization of Oracle Database and openUTM is done through the XA interface. The XA interface is an X/Open interface for the coordination between database systems and transaction monitors.</p>
<div class="infoboxnotealso" id="GUID-30ECC902-082D-4170-9AA1-E93F45F9686E__GUID-796502D5-6FBC-4160-8927-D0BD0E875559">
<p class="notep1">See Also:</p>
<a class="olink ADFNS017" target="_blank" href="../ADFNS/adfns_xa.htm#ADFNS017"><span><cite>Oracle Database Development Guide</cite></span></a> for a description of the concepts of the XA interface</div>
</div>
</div>
<a id="DFSIG230"></a>
<div class="props_rev_3"><a id="GUID-CE51AE3C-5D10-47E4-BF31-F2E1DCB32B5E"></a>
<h3 id="DFSIG-GUID-CE51AE3C-5D10-47E4-BF31-F2E1DCB32B5E" class="sect3">Distributed openUTM Files</h3>
<div>
<p>When you install Oracle Database, as described in <a href="oracle-database-installation-and-deinstallation.htm#GUID-91029BA0-D848-4713-AD44-1D319AB77E56">Oracle Database Installation and Deinstallation</a>, openUTM related software and files are installed in the installation user ID. The distributed openUTM files include:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>XAO.LIB</code></p>
<p>This file contains the connection module for the XA interface.</p>
</li>
<li>
<p>The following files provide examples of procedures and programs:</p>
<pre dir="ltr">UTM.DEMO.P.COMPILE.C
UTM.DEMO.P.COMPILE.COBOL
UTM.DEMO.P.KDCDEF
UTM.DEMO.P.KDCROOT
UTM.DEMO.P.PROBIND
UTM.DEMO.P.PROSTRT
UTM.DEMO.CSELEMP.PC
UTM.DEMO.SELDEP.PCO
UTM.DEMO.SELEMP.PCO
UTM.DEMO.UPDEMP.PCO
UTM.DEMO.ERRSQL.C
UTM.DEMO.ERRTXT.C
</pre></li>
</ul>
</div>
</div>
<div class="sect3"><a id="GUID-1582EA62-1ABC-443E-ABF5-A9B5492D12DB"></a>
<h3 id="DFSIG-GUID-1582EA62-1ABC-443E-ABF5-A9B5492D12DB" class="sect3">DBA Responsibilities</h3>
<div>
<p>This section describes the responsibilities of the DBA or the administrator of the openUTM application.</p>
<p>The administrator of the openUTM application must define the open string for the XA interface with help from the application developer. This open string must be included in the openUTM start parameters.</p>
<p>The DBA must ensure that the static data dictionary view <code>DBA_PENDING_TRANSACTIONS</code> exists. The DBA must also grant the <code>SELECT</code> privilege to the static data dictionary view for all Oracle users specified in the XA open string. Use the following example to grant the <code>SELECT</code> privilege to user <code>scott</code>:</p>
<p><code>grant select on DBA_PENDING_TRANSACTIONS to scott;</code></p>
<p>The Oracle users are identified in the open string with the item <code>Acc</code>.</p>
<div class="infoboxnotealso" id="GUID-1582EA62-1ABC-443E-ABF5-A9B5492D12DB__GUID-E462FE01-9B2A-4905-9FD7-7D128F2BF2CE">
<p class="notep1">See Also:</p>
<span class="q">&#34;<a href="database-applications.htm#GUID-FEAA939C-FA9B-42CE-8E49-0F1BF469BF29">Defining an Open String</a>&#34;</span> for more information</div>
</div>
</div>
<a id="DFSIG232"></a>
<div class="props_rev_3"><a id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7"></a>
<h3 id="DFSIG-GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7" class="sect3">Developing an Oracle Database/openUTM Application</h3>
<div>
<div class="section">
<p>Oracle Database 12<span class="italic">c</span> on BS2000 supports openUTM V6.1 or higher. openUTM supports the XA interface. Oracle Database 12<span class="italic">c</span> on BS2000 coordinates with openUTM through this XA interface.</p>
<p>This section includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-FEAA939C-FA9B-42CE-8E49-0F1BF469BF29">Defining an Open String</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-7D7A57A2-7F00-44CB-9970-BFD0CBDFCEFA">Using Precompilers with openUTM</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-138FD555-3EBD-4966-AC04-15534AC67B31">SQL Operations</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-2251B00F-6A26-4786-9CBE-9176E34FF41E">openUTM Operations</a></p>
</li>
</ul>
<p>The main steps involved in developing an Oracle Database application for coordinated inter-operation with openUTM are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__BUILDINGTHEOPENUTMPROGRAMUNITS-5B26DBA0">Building the openUTM program units</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__DEFININGTHECONFIGURATION-5B26DFB8">Defining the configuration</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__TRANSLATINGTHEKDCROOTTABLEMODULEAND-5B26E4A0">Translating the KDCROOT table module and openUTM program units</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__LINKINGTHEOPENUTMAPPLICATIONPROGRAM-5B26E81E">Linking the openUTM application program</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__STARTINGTHEOPENUTMAPPLICATION-5B26EC0E">Starting the openUTM application</a></p>
</li>
</ul>
<p>In addition, this section also describes how to define the open string for the XA interface and how to use precompilers with the Oracle XA library</p>
</div>
<!-- class="section" -->
<div class="section" id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__BUILDINGTHEOPENUTMPROGRAMUNITS-5B26DBA0">
<p class="subhead3">Building the openUTM program units</p>
<p>Refer to the openUTM manual <a href="http://manuals.ts.fujitsu.com/file/12873/utm_prg.pdf" target="_blank"><span class="italic">Programming Applications with KDCS for COBOL, C, and C++</span></a>.</p>
</div>
<!-- class="section" -->
<div class="section" id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__DEFININGTHECONFIGURATION-5B26DFB8">
<p class="subhead3">Defining the configuration</p>
<p>Refer to the following openUTM manuals:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="http://manuals.ts.fujitsu.com/file/12870/utm_gen.pdf" target="_blank"><span class="italic">Generating Applications</span></a></p>
</li>
<li>
<p><a href="http://manuals.ts.fujitsu.com/file/12866/utm_adm.pdf" target="_blank"><span class="italic">Administering Applications</span></a></p>
</li>
</ul>
<p>An Oracle Database/openUTM application requires the following information for execution:</p>
<ul style="list-style-type: disc;">
<li>
<p>Information about the application</p>
</li>
<li>
<p>Username/password with access protection</p>
</li>
<li>
<p>Information about the terminal and communication partners</p>
</li>
<li>
<p>Information about the transaction codes (TAC&rsquo;s)</p>
</li>
</ul>
<p>These properties collectively form the configuration, which is stored in the <code>KDCFILE</code> file. The configuration definition is carried out by the <code>KDCDEF</code> utility.</p>
<p>This section gives the descriptions for openUTM <code>KDCDEF</code> control statements that are important for connecting to the Oracle database. They are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>DATABASE</code></p>
<p>When the Oracle Database/openUTM application is generated, you must specify that openUTM communicates with the Oracle Database. Enter the following command to specify openUTM communication with the database:</p>
<pre dir="ltr">DATABASE TYPE=XA,ENTRY=XAOSWD
</pre>
<p>where <code>TYPE=XA</code> specifies the use of the XA interface and <code>ENTRY=XAOSWD</code> specifies the name of the XA switch for the Oracle database (for dynamic registration).</p>
</li>
<li>
<p><code>OPTION</code></p>
<p>If you specify the corresponding <code>GEN</code> operand in the <code>OPTION</code> command, then the <code>KDCDEF</code> utility also produces the source-code for the <code>KDCROOT</code> table module. The syntax of <code>OPTION</code> is as follows:</p>
<pre dir="ltr">OPTION [DATA=<span class="italic">filename</span>][,GEN={KDCFILE|ROOTSRC|NO|ALL}]
[,ROOTSRC=<span class="italic">filename</span>][,SHARETAB=<span class="italic">filename</span>]
[,TEST={N[o]|Y[ES]}]
</pre></li>
<li>
<p><code>MAX</code></p>
<p>Another important operand is <code>APPLIMODE</code>, which is specified in the <code>MAX</code> command. This determines the restart behavior after a system failure. The syntax of <code>MAX</code> is as follows:</p>
<pre dir="ltr">MAX APPLINAME=<span class="italic">name</span>[,APPLIMODE={S[ECURE]|F[AST]}]
[,ASYNTASKS=<span class="italic">number</span>][...]
</pre>
<p><code>APPLIMODE</code>=<code>SECURE</code> means that openUTM continues after an application malfunction with a coordinated warm-start of the openUTM application and the Oracle database.</p>
<p>If you specify <code>APPLIMODE</code>=<code>FAST</code>, then openUTM application restart is not executed, as openUTM does not store the restart information. In the event of an error, the application starts from scratch. Transactions that are still open after an openUTM-application malfunction are rolled back automatically.</p>
</li>
</ul>
<p>See the <code>UTM.DEMO.P.KDCDEF</code> file for an example procedure for building the <code>KDCFILE</code> and the <code>KDCROOT</code> table module.</p>
</div>
<!-- class="section" -->
<div class="section" id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__TRANSLATINGTHEKDCROOTTABLEMODULEAND-5B26E4A0">
<p class="subhead3">Translating the <code id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__KDCROOT-5B2672C8">KDCROOT</code> table module and openUTM program units</p>
<p>The source of the <code>KDCROOT</code> table module msut be compiled with the BS2000 Assembler and the openUTM program units must be compiled with the corresponding programming language compilers. See the example procedure <code>UTM.DEMO.P.KDCROOT</code> for the compilation of the <code>KDCROOT</code> table module.</p>
</div>
<!-- class="section" -->
<div class="section" id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__LINKINGTHEOPENUTMAPPLICATIONPROGRAM-5B26E81E">
<p class="subhead3">Linking the openUTM application program</p>
<p>The openUTM application program is produced by linking the <code>KDCROOT</code> table module with the openUTM program units.</p>
<p>You must include the stub module <code>XAOSTUB</code>:</p>
<pre dir="ltr">INC-MOD LIB=$ORACINST.XAO.LIB,ELEM=XAOSTUB
</pre>
<div class="infobox-note" id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__GUID-B0B65DFE-CAC5-4F71-8FAE-A46603488BCC">
<p class="notep1">Note:</p>
<p>Instead of writing the linking procedure, you must use the example procedure <code>UTM.DEMO.P.PROBIND</code> and apply modifications as needed.</p>
<p>To write your own linking procedure, study the example carefully before writing.</p>
</div>
</div>
<!-- class="section" -->
<div class="section" id="GUID-4ADCED02-7B74-49C1-BCC3-7B2F5B01D9E7__STARTINGTHEOPENUTMAPPLICATION-5B26EC0E">
<p class="subhead3">Starting the openUTM application</p>
<p>An example procedure for starting the openUTM application is in the <code>UTM.DEMO.P.PROSTRT</code> file.</p>
<p>When starting the openUTM application, you must specify the start parameters for both openUTM and Oracle Database.</p>
<p>The openUTM start parameters are described in the openUTM manual <a href="http://manuals.ts.fujitsu.com/file/12871/utm_betr.pdf" target="_blank"><span class="italic">Using openUTM Applications on BS2000 Systems</span></a>.</p>
<p>The start parameter for using the XA interface for coordinated inter-operation with Oracle Database 12<span class="italic">c</span> is:</p>
<pre dir="ltr">.RMXA RM=&#34;Oracle_XA&#34;,OS=&#34;&lt;ORACLE open string&gt;&#34;
</pre></div>
<!-- class="section" --></div>
<a id="DFSIG233"></a>
<div class="props_rev_3"><a id="GUID-FEAA939C-FA9B-42CE-8E49-0F1BF469BF29"></a>
<h4 id="DFSIG-GUID-FEAA939C-FA9B-42CE-8E49-0F1BF469BF29" class="sect4">Defining an Open String</h4>
<div>
<p>This section describes how to construct an open string and includes the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-EF5544F2-4AB2-4EC3-A23B-4903D7515220">Required Fields</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062">Optional Fields</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-1A2328C7-5D6D-4ED6-A174-E3E9E88A341B">Examples</a></p>
</li>
</ul>
<p>The transaction monitor uses this string to connect to the database. The maximum number of characters in an open string is 256. Construct the string as follows:</p>
<pre dir="ltr">Oracle_XA{+<span class="italic">required_fields</span>...}[+<span class="italic">optional_fields</span>...]
</pre>
<p>where the <span class="italic"><code>required_fields</code></span> are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>Acc</code>=<span class="italic"><code>P/user/access_info</code></span></p>
</li>
<li>
<p><code>SesTm</code>=<span class="italic"><code>session_time_limit</code></span></p>
</li>
</ul>
<p>and the <span class="italic"><code>optional_fields</code></span> are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>DB</code>=<span class="italic"><code>db_name</code></span></p>
</li>
<li>
<p><code>MaxCur</code>=<span class="italic"><code>maximum_no_of_open_cursors</code></span></p>
</li>
<li>
<p><code>SqlNet</code>=<span class="italic"><code>connect_string</code></span></p>
</li>
<li>
<p><code>DbgFl</code>=<span class="italic"><code>value_from_1_to_15</code></span></p>
</li>
</ul>
<div class="infobox-note" id="GUID-FEAA939C-FA9B-42CE-8E49-0F1BF469BF29__GUID-487B2A55-86A5-40DF-9295-4FD532A40CC1">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>You can enter the required fields and optional fields in any order when constructing the open string.</p>
</li>
<li>
<p>All field names are case-insensitive, although their values may or may not be case-sensitive depending on the system.</p>
</li>
<li>
<p>You cannot use the &#34;+&#34; character as part of the actual information string.</p>
</li>
</ul>
</div>
</div>
<a id="DFSIG234"></a>
<div class="props_rev_3"><a id="GUID-EF5544F2-4AB2-4EC3-A23B-4903D7515220"></a>
<h5 id="DFSIG-GUID-EF5544F2-4AB2-4EC3-A23B-4903D7515220" class="sect5">Required Fields</h5>
<div>
<div class="section">
<p>The required fields for the open string are:</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EF5544F2-4AB2-4EC3-A23B-4903D7515220__GUID-3AB392C1-D599-4761-B7FB-834C96BBA766">
<table class="cellalignment4274" summary="This table lists the required fields for the open string.">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4275" id="d27339e2332">Item</th>
<th class="cellalignment4276" id="d27339e2335">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2340" headers="d27339e2332">
<p><code>Acc</code></p>
</td>
<td class="cellalignment4278" headers="d27339e2340 d27339e2335">
<p>Specifies user access information.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2348" headers="d27339e2332">
<p><code>P</code></p>
</td>
<td class="cellalignment4278" headers="d27339e2348 d27339e2335">
<p>Indicates that explicit user and password information is provided.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2356" headers="d27339e2332">
<p><span class="italic"><code>user</code></span></p>
</td>
<td class="cellalignment4278" headers="d27339e2356 d27339e2335">
<p>Specifies the Oracle Database user name.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2365" headers="d27339e2332">
<p><span class="italic"><code>access_info</code></span></p>
</td>
<td class="cellalignment4278" headers="d27339e2365 d27339e2335">
<p>Specifies the Oracle Database password.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>For example, <code>Acc</code>=<code>P/scott/tiger</code> indicates that the user and password information is provided. In this case, the user name is <code>scott</code> and the password is <code>tiger</code>.</p>
<p>Ensure that the user <code>scott</code> has the <code>SELECT</code> privilege on the <code>DBA_PENDING_TRANSACTIONS</code> table in the previous example.</p>
<div class="infobox-note" id="GUID-EF5544F2-4AB2-4EC3-A23B-4903D7515220__GUID-89398023-E98A-4860-8ABD-F23733CC98A3">
<p class="notep1">Note:</p>
<p>For security reasons, starting with version V6.3, openUTM supports the placeholders <code>*UTMUSER</code> and <code>*UTMPASS</code> for <code><span class="codeinlineitalic">user</span></code> and <code><span class="codeinlineitalic">access_info</span></code>. The values for these openUTM placeholders are specified through the openUTM <code>KDCDEF</code> generation. When the <code>xa_open</code> call is executed, openUTM replaces these placeholders with the generated values. Using these placeholders is optional in openUTM V6.3, but it is mandatory in openUTM V6.4</p>
</div>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-EF5544F2-4AB2-4EC3-A23B-4903D7515220__GUID-21967695-FD2C-4815-88C8-3D3910481EBD">
<table class="cellalignment4274" summary="This table lists the required fields for the open string.">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4297" id="d27339e2431">Item</th>
<th class="cellalignment4298" id="d27339e2434">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4299" id="d27339e2439" headers="d27339e2431">
<p><code>SesTm</code></p>
</td>
<td class="cellalignment4300" headers="d27339e2439 d27339e2434">
<p>Specifies the maximum amount of time a transaction can be inactive before it is automatically deleted by the system.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4299" id="d27339e2447" headers="d27339e2431">
<p><span class="italic"><code>session_time_limit</code></span></p>
</td>
<td class="cellalignment4300" headers="d27339e2447 d27339e2434">
<p>Specifies the maximum time limit in seconds between the start of a global transaction and the commit or roll back of this transaction.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="DFSIG235"></a>
<div class="props_rev_3"><a id="GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062"></a>
<h5 id="DFSIG-GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062" class="sect5">Optional Fields</h5>
<div>
<div class="section">
<p>Optional fields for the open string are described in the following table:</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062__GUID-6CE6405F-FDB9-442A-B807-0ABB3B91658B">
<table class="cellalignment4274" summary="This table describes the optional fields for the open string.">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4275" id="d27339e2486">Item</th>
<th class="cellalignment4276" id="d27339e2489">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2494" headers="d27339e2486">
<p><code>DB</code></p>
</td>
<td class="cellalignment4278" headers="d27339e2494 d27339e2489">
<p>Specifies the database name.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2502" headers="d27339e2486">
<p><span class="italic"><code>db_name</code></span></p>
</td>
<td class="cellalignment4278" headers="d27339e2502 d27339e2489">
<p>Indicates the name used in Oracle Database precompilers to identify the database.</p>
<p>Application programs that use only the default database for the Oracle Database precompiler, that is, application programs that do not use the AT clause in their SQL statements, must omit the <code>DB</code>=<span class="italic"><code>db_name</code></span> clause in the open string.</p>
<p><span class="bold">Note:</span> This default database is specified in the <code>ORAENV</code> file by the environment variable <code>ORASID</code>.</p>
<p>Applications that use explicitly&ndash;named databases should indicate that database name in their <code>DB</code>=<span class="italic"><code>db_name</code></span> field.</p>
<p>For example, <code>DB</code>=<code>payroll</code> indicates that the database name is payroll and that the application program uses that name in AT clauses.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>For more information about precompilers, refer to the section <span class="q">&#34;<a href="database-applications.htm#GUID-7D7A57A2-7F00-44CB-9970-BFD0CBDFCEFA">Using Precompilers with openUTM</a>&#34;</span> later in this chapter.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062__GUID-16771E7C-5CE1-4C21-9967-7D4EDD2AA085">
<table class="cellalignment4274" summary="This table describes the optional fields for the open string.">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4301" id="d27339e2561">Item</th>
<th class="cellalignment4302" id="d27339e2564">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4303" id="d27339e2569" headers="d27339e2561">
<p><code>MaxCur</code></p>
</td>
<td class="cellalignment4304" headers="d27339e2569 d27339e2564">
<p>Specifies the number of cursors to be allocated when the database is opened. It serves the same purpose as the precompiler option <code>maxopencursors</code>.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4303" id="d27339e2580" headers="d27339e2561">
<p><span class="italic"><code>maximum_no_of_open_cursors</code></span></p>
</td>
<td class="cellalignment4304" headers="d27339e2580 d27339e2564">
<p>Specifies the number of open cursors.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>For example, <code>MaxCur</code>=<code>5</code> indicates that the process should try to keep five open cursors cached.</p>
<div class="infoboxnotealso" id="GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062__GUID-E82F2883-8F31-4CC7-A1A7-A113EBC6F7B7">
<p class="notep1">See Also:</p>
<a class="olink ZZPRE570" target="_blank" href="../ZZPRE/ch_six.htm#ZZPRE570"><span><cite>Oracle Database Programmer&#39;s Guide to the Oracle Precompilers</cite></span></a> for more information about <code>maxopencursors</code></div>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062__GUID-A872B477-DF6F-4A8F-AD1F-BB092DC1C38A">
<table class="cellalignment4274" summary="This table describes the optional fields for the open string.">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4275" id="d27339e2614">Item</th>
<th class="cellalignment4276" id="d27339e2617">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2622" headers="d27339e2614">
<p><code>SqlNet</code></p>
</td>
<td class="cellalignment4278" headers="d27339e2622 d27339e2617">
<p>Specifies the SQL*Net connect string.</p>
</td>
</tr>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2630" headers="d27339e2614">
<p><span class="italic"><code>connect_string</code></span></p>
</td>
<td class="cellalignment4278" headers="d27339e2630 d27339e2617">
<p>Specifies the string that is used to open a connection to the database. This can be any supported Oracle Net Services connect string.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>For example:</p>
<p><code>SqlNet</code>=<code>MADRID_FINANCE</code> indicates an entry in <code>TNSNAMES.ORA</code> referencing a protocol, a host, and a port number. For more information, refer to <a href="oracle-net-services.htm#GUID-EA525D25-3899-4FCD-9B94-91DE2DECF391">Oracle Net Services</a> in this guide.</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-BA2F9C4A-3E01-40B9-A657-E58D409A5062__GUID-328C1D56-7483-4EA1-8EF3-5CD7F869D528">
<table class="cellalignment4274" summary="This table describes the optional fields for the open string.">
<thead>
<tr class="cellalignment4265">
<th class="cellalignment4275" id="d27339e2662">Item</th>
<th class="cellalignment4276" id="d27339e2665">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment4265">
<td class="cellalignment4277" id="d27339e2670" headers="d27339e2662">
<p><code>DbgFl</code></p>
</td>
<td class="cellalignment4278" headers="d27339e2670 d27339e2665">
<p>Specifies if debugging should be enabled (debug flag). For more information refer to <a href="database-applications.htm#GUID-E474CEBC-1337-461E-BAC8-F6A53CE82B0B">&ldquo;About Debugging&rdquo;</a> section in this chapter.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="DFSIG236"></a>
<div class="props_rev_3"><a id="GUID-1A2328C7-5D6D-4ED6-A174-E3E9E88A341B"></a>
<h5 id="DFSIG-GUID-1A2328C7-5D6D-4ED6-A174-E3E9E88A341B" class="sect5">Examples</h5>
<div>
<div class="section">
<p>This section contains examples of open strings for the XA interface.</p>
<div class="infobox-note" id="GUID-1A2328C7-5D6D-4ED6-A174-E3E9E88A341B__GUID-07DE685E-0744-4C46-BAF7-B60814AFB009">
<p class="notep1">Note:</p>
<p>If the string is longer than one line, then refer to the openUTM documentation for information about how to split the string information.</p>
</div>
<p>For the bequeath protocol of Oracle Net Services:</p>
<pre dir="ltr">Oracle_XA+Acc=P/scott/tiger+SesTm=0+DbgFl=15
</pre>
<p>For other protocols of Oracle Net Services:</p>
<pre dir="ltr">Oracle_XA+SqlNet=MADRID_FINANCE+Acc=P/scott/tiger+SesTm=0
Oracle_XA+DB=finance+SqlNet=MADRID_FINANCE+Acc=P/scott/tiger
+SesTM=0
</pre>
<p>The optional fields <code>LogDir</code>, <code>Loose_Coupling</code>, <code>SesWT</code>, and <code>Threads</code> are not supported.</p>
<div class="infoboxnotealso" id="GUID-1A2328C7-5D6D-4ED6-A174-E3E9E88A341B__GUID-263100A6-2576-467D-8A57-2B4D1084E8C6">
<p class="notep1">See Also:</p>
<a class="olink ADFNS017" target="_blank" href="../ADFNS/adfns_xa.htm#ADFNS017"><span><cite>Oracle Database Development Guide</cite></span></a> for more information about the fields in the open string</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="DFSIG237"></a>
<div class="props_rev_3"><a id="GUID-7D7A57A2-7F00-44CB-9970-BFD0CBDFCEFA"></a>
<h4 id="DFSIG-GUID-7D7A57A2-7F00-44CB-9970-BFD0CBDFCEFA" class="sect4">Using Precompilers with openUTM</h4>
<div>
<p>You can choose from the following options when interfacing with precompilers:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-E9F29A46-A1D4-4B96-8369-685F07E4E876">Using Pro*C with the Default Database</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-D70789AC-8212-4DAD-88B9-CA9A6C64D5FA">Using Pro*C with a Named Database</a></p>
</li>
</ul>
<p>Run all the precompiler programs with the option <code>release_cursor</code> set to <code>no</code>. Precompiler programs may be written in C or COBOL. The precompiler Pro*C is used in the examples.</p>
</div>
<a id="DFSIG238"></a>
<div class="props_rev_3"><a id="GUID-E9F29A46-A1D4-4B96-8369-685F07E4E876"></a>
<h5 id="DFSIG-GUID-E9F29A46-A1D4-4B96-8369-685F07E4E876" class="sect5">Using Pro*C with the Default Database</h5>
<div>
<p>If Pro*C applications access the default database, then ensure that the <code>DB</code>=<span class="italic"><code>db_name</code></span> field used in the open string is not present. The absence of this field indicates the default connection as defined in the <code>ORAENV</code> file, and only one default connection is allowed for each process.</p>
<p>The following is an example of an open string identifying a default Pro*C connection:</p>
<pre dir="ltr">Oracle_XA+SqlNet=MADRID_FINANCE+Acc=P/scott/tiger+SesTm=0
</pre>
<p>Here, <code>DB</code>=<span class="italic"><code>db_name</code></span> is absent, indicating an empty database identifier string.</p>
<p>The following is the syntax of a select statement:</p>
<pre dir="ltr">EXEC SQL SELECT ENAME FROM EMP;
</pre></div>
</div>
<a id="DFSIG239"></a>
<div class="props_rev_3"><a id="GUID-D70789AC-8212-4DAD-88B9-CA9A6C64D5FA"></a>
<h5 id="DFSIG-GUID-D70789AC-8212-4DAD-88B9-CA9A6C64D5FA" class="sect5">Using Pro*C with a Named Database</h5>
<div>
<p>If Pro*C applications access a named database, then include the <code>DB</code>=<span class="italic"><code>db_name</code></span> field in the open string. Any database you refer to must reference the same <span class="italic"><code>db_name</code></span> specified in the corresponding open string.</p>
<p>An application may access the default database, as well as one or more named databases, as shown in the following examples.</p>
<p>For example, if you want to update an employee&#39;s salary in one database, the department number <code>deptno</code> in another, and the manager information in a third database, then you must configure the following open strings in the transaction manager:</p>
<p><code>Oracle_XA+SqlNet=MADRID_FINANCE1+Acc=P/scott/tiger+SesTm=0</code></p>
<p><code>Oracle_XA+DB=MANAGERS+SqlNet=MADRID_FINANCE2+Acc=P/scott/tiger+SesTm=0</code></p>
<p><code>Oracle_XA+DB=PAYROLL+SqlNet=MADRID_FINANCE3+Acc=P/scott/tiger+SesTm=0</code></p>
<p>There is no <code>DB</code>=<span class="italic"><code>db_name</code></span> field in the first open string.</p>
<p>In the application program, enter declarations such as:</p>
<pre dir="ltr">EXEC SQL DECLARE PAYROLL DATABASE; 
EXEC SQL DECLARE MANAGERS DATABASE;
</pre>
<p>Again, the default connection corresponding to the first open string that does not contain the <span class="italic"><code>db_name</code></span> field, does not require a declaration.</p>
<p>When performing the update, enter statements similar to the following:</p>
<pre dir="ltr">EXEC SQL AT PAYROLL update emp set sal=4500 where empno=7788;
EXEC SQL AT MANAGERS update emp set mgr=7566 where empno=7788;
EXEC SQL update emp set deptno=30 where empno=7788;
</pre>
<p>There is no AT clause in the last statement because it refers to the default database.</p>
<p>You can use a character host variable in the AT clause, as shown in the following example:</p>
<pre dir="ltr">EXEC SQL BEGIN DECLARE SECTION;
db_name1 CHARACTER(10);
db_name2 CHARACTER(10)
EXEC SQL END DECLARE SECTION;
.
.
set db_name1 = &#39;PAYROLL&#39; 
set db_name2 = &#39;MANAGERS&#39;
.
.
EXEC SQL AT :db_name1 UPDATE...
EXEC SQL AT :db_name2 UPDATE...
</pre>
<div class="infoboxnotealso" id="GUID-D70789AC-8212-4DAD-88B9-CA9A6C64D5FA__GUID-EBBC48C7-8224-4295-818A-520611D36731">
<p class="notep1">See Also:</p>
<a class="olink LNPCB204" target="_blank" href="../LNPCB/pco03dbc.htm#LNPCB204"><span><cite>Pro*COBOL Programmer&#39;s Guide</cite></span></a> and <a class="olink LNPCC3121" target="_blank" href="../LNPCC/pc_03dbc.htm#LNPCC3121"><span><cite>Pro*C/C++ Programmer&#39;s Guide</cite></span></a> that discusses concurrent logons</div>
<div class="infobox-note" id="GUID-D70789AC-8212-4DAD-88B9-CA9A6C64D5FA__GUID-41380AD8-968E-4CE1-967A-5B4E4119D010">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>openUTM applications must not create Oracle database connections of their own. Therefore, an openUTM user is not allowed to issue <code>CONNECT</code> statements within an openUTM program. Any work performed by them would be outside the global transaction, and may confuse the connection information given by openUTM.</p>
</li>
<li>
<p>SQL calls must not occur in the openUTM start exit routine, however may occur in the conversation exit routine &ldquo;Vorgangs-Exit&rdquo;.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-138FD555-3EBD-4966-AC04-15534AC67B31"></a>
<h4 id="DFSIG-GUID-138FD555-3EBD-4966-AC04-15534AC67B31" class="sect4">SQL Operations</h4>
<div>
<p>UTM application program units must use embedded SQL. Calls to the Oracle Call Interface (OCI) are not allowed.</p>
<p>The following SQL operations are discussed:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-3E134658-61C8-4340-A70B-1D55EA872129">CONNECT</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-A845B443-2960-485D-93E6-81BFF2ED6CD9">COMMIT</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-83800522-CBF7-4B97-BDE6-14503D97DE31">ROLLBACK</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-3609C8C8-FAEA-4C04-892A-535CE5907F9B">SAVEPOINT</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-D5BF89C1-DD25-4BDC-8CA6-995A5A2977EF">Cursor Operations</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-3D3ED7F2-F645-4A40-8BD4-382140740B4B">Dynamic SQL</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-51F6306C-372A-4084-8F79-4216455046F1">PL/SQL</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-380EF3D2-F4A4-4C29-84B6-58FFFF7BA674">Autocommit</a></p>
</li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-3E134658-61C8-4340-A70B-1D55EA872129"></a>
<h5 id="DFSIG-GUID-3E134658-61C8-4340-A70B-1D55EA872129" class="sect5">CONNECT</h5>
<div>
<p>A connection is implicitly established when the UTM task is started. This connection uses the data specified in the open string. Further, explicit <code>CONNECT</code> operations issued by the program units are not allowed.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-A845B443-2960-485D-93E6-81BFF2ED6CD9"></a>
<h5 id="DFSIG-GUID-A845B443-2960-485D-93E6-81BFF2ED6CD9" class="sect5">COMMIT</h5>
<div>
<p>An explicit <code>COMMIT</code> statement is not allowed in UTM program units. The openUTM automatically issues a <code>COMMIT</code> statement at <code>PEND RE</code>, <code>PEND FI</code>, <code>PEND SP</code>, or <code>PEND FC</code> operation.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-83800522-CBF7-4B97-BDE6-14503D97DE31"></a>
<h5 id="DFSIG-GUID-83800522-CBF7-4B97-BDE6-14503D97DE31" class="sect5">ROLLBACK</h5>
<div>
<p>An explicit <code>ROLLBACK</code> statement is not allowed in UTM program units. The openUTM automatically issues a <code>ROLLBACK</code> statement on encountering a <code>PEND ER</code>, <code>PEND RS</code>, <code>PEND FR,</code> or <code>RSET</code> operation.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-3609C8C8-FAEA-4C04-892A-535CE5907F9B"></a>
<h5 id="DFSIG-GUID-3609C8C8-FAEA-4C04-892A-535CE5907F9B" class="sect5">SAVEPOINT</h5>
<div>
<p>The <code>SAVEPOINT</code> statement is not allowed in UTM program units.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-D5BF89C1-DD25-4BDC-8CA6-995A5A2977EF"></a>
<h5 id="DFSIG-GUID-D5BF89C1-DD25-4BDC-8CA6-995A5A2977EF" class="sect5">Cursor Operations</h5>
<div>
<p>A cursor is valid only until a <code>PEND</code> is executed. Because of a possible task change during a <code>PEND KP</code>, <code>PEND PA</code>, or <code>PEND PR</code>, you cannot perform operations on a previously filled cursor such as <code>OPEN</code> or <code>FETCH</code> after a <code>PEND KP</code>, <code>PEND PA,</code> or <code>PEND PR</code>.</p>
<p>However, you can open and fetch a new cursor after <code>PEND KP</code>. The alternative to using <code>PEND KP</code> is to use the <span class="italic">PGWT</span>-call, which waits until it receives an input from the terminal, to assign the same <code>TACCLASS</code> to subsequent programs after a <code>PEND PA</code> or <code>PR</code> operation.</p>
<div class="infoboxnotealso" id="GUID-D5BF89C1-DD25-4BDC-8CA6-995A5A2977EF__GUID-04B58C06-948C-4B1D-9D12-19FC06F570D1">
<p class="notep1">See Also:</p>
The openUTM manual, <a href="http://manuals.ts.fujitsu.com/file/12873/utm_prg.pdf" target="_blank"><span class="italic">Programming Applications with KDCS for COBOL, C and C++</span></a></div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-3D3ED7F2-F645-4A40-8BD4-382140740B4B"></a>
<h5 id="DFSIG-GUID-3D3ED7F2-F645-4A40-8BD4-382140740B4B" class="sect5">Dynamic SQL</h5>
<div>
<p>You may use dynamic SQL as described in <a class="olink ZZPRE869" target="_blank" href="../ZZPRE/ch_ten.htm#ZZPRE869"><span class="italic">Oracle Database Programmer&#39;s Guide to the Oracle Precompilers</span></a>.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-51F6306C-372A-4084-8F79-4216455046F1"></a>
<h5 id="DFSIG-GUID-51F6306C-372A-4084-8F79-4216455046F1" class="sect5">PL/SQL</h5>
<div>
<p><code>COMMIT</code>, <code>ROLLBACK</code>, <code>CONNECT</code>, and <code>SAVEPOINT</code> statements are not allowed in PL/SQL programs running under UTM.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-380EF3D2-F4A4-4C29-84B6-58FFFF7BA674"></a>
<h5 id="DFSIG-GUID-380EF3D2-F4A4-4C29-84B6-58FFFF7BA674" class="sect5">Autocommit</h5>
<div>
<p>Avoid autocommit operations as they violate the synchronization between Oracle Database and UTM transactions. Take precautions when using the DDL operations, as these often contain implicit autocommits.</p>
<p>For example, DDL statements such as, <code>CREATE TABLE</code>, <code>DROP TABLE</code>, and <code>CREATE INDEX</code> are not allowed in a global transaction because they force the pending work to be committed.</p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-2251B00F-6A26-4786-9CBE-9176E34FF41E"></a>
<h4 id="DFSIG-GUID-2251B00F-6A26-4786-9CBE-9176E34FF41E" class="sect4">openUTM Operations</h4>
<div>
<p>This section describes the Oracle Database-specific points that you must consider when using UTM operations. It describes the effect of the <code>PEND</code> (Program Unit End), and <code>RSET</code> (Reset) operations of openUTM. These operations represent the common synchronization points between openUTM and the Oracle Database.</p>
<p>The following openUTM operations are discussed:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-0E45610E-CFD9-482A-A3DB-8FB68B595A1D">RSET and PEND RS</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-C6470B2F-9DC8-4356-B161-BC418FB94401">PEND ER and PEND FR</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-48EC3231-D12C-442B-A3BB-3529A7D58884">PEND KP, PEND PR, and PEND PA</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-1B81D381-6B2A-4E97-BA86-C7D969D9C251">PEND RE, PEND FI, PEND SP, and PEND FC</a></p>
</li>
</ul>
<p>When you issue a <code>PEND</code> call, UTM calls the Oracle Database internally through the XA interface for synchronization. When the <code>PEND</code> takes place:</p>
<ul style="list-style-type: disc;">
<li>
<p>The user dialog/transaction is detached from the executing task.</p>
</li>
<li>
<p>Any resource that is still attached to the user is released.</p>
</li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-0E45610E-CFD9-482A-A3DB-8FB68B595A1D"></a>
<h5 id="DFSIG-GUID-0E45610E-CFD9-482A-A3DB-8FB68B595A1D" class="sect5">RSET and PEND RS</h5>
<div>
<p>Resetting a UTM transaction implies rolling back the Oracle Database transaction.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-C6470B2F-9DC8-4356-B161-BC418FB94401"></a>
<h5 id="DFSIG-GUID-C6470B2F-9DC8-4356-B161-BC418FB94401" class="sect5">PEND ER and PEND FR</h5>
<div>
<p>When using these calls to terminate a UTM transaction, the Oracle Database transaction is also rolled back.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-48EC3231-D12C-442B-A3BB-3529A7D58884"></a>
<h5 id="DFSIG-GUID-48EC3231-D12C-442B-A3BB-3529A7D58884" class="sect5">PEND KP, PEND PR, and PEND PA</h5>
<div>
<p>These operations only end a UTM dialog step without affecting the corresponding Oracle Database transaction.</p>
</div>
</div>
<div class="props_rev_3"><a id="GUID-1B81D381-6B2A-4E97-BA86-C7D969D9C251"></a>
<h5 id="DFSIG-GUID-1B81D381-6B2A-4E97-BA86-C7D969D9C251" class="sect5">PEND RE, PEND FI, PEND SP, and PEND FC</h5>
<div>
<p>These <code>PEND</code> calls cause an implicit <code>COMMIT</code> to be executed. All cursors that are not explicitly closed, are closed.</p>
</div>
</div>
</div>
</div>
<a id="DFSIG240"></a>
<div class="props_rev_3"><a id="GUID-C762C9DD-5BFD-45F7-8FA0-015D007146B2"></a>
<h3 id="DFSIG-GUID-C762C9DD-5BFD-45F7-8FA0-015D007146B2" class="sect3">Troubleshooting</h3>
<div>
<p>This section discusses how to recover data if there are problems or a system failure. Both trace files and recovering pending transactions are discussed in the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="database-applications.htm#GUID-87C8C4CC-4D8D-4969-A685-FDA9D91C8DA1">Trace Files</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-E474CEBC-1337-461E-BAC8-F6A53CE82B0B">About Debugging</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-2E3673EA-20B2-4BE5-BEA4-25B6FB96232B">In-Doubt or Pending Transactions</a></p>
</li>
<li>
<p><a href="database-applications.htm#GUID-B42BF312-C872-4515-A6CE-9725AE0427FE">Oracle Database SYS Account Tables</a></p>
</li>
</ul>
</div>
<a id="DFSIG241"></a>
<div class="props_rev_3"><a id="GUID-87C8C4CC-4D8D-4969-A685-FDA9D91C8DA1"></a>
<h4 id="DFSIG-GUID-87C8C4CC-4D8D-4969-A685-FDA9D91C8DA1" class="sect4">Trace Files</h4>
<div>
<div class="section">
<p>The Oracle XA library logs any error and tracing information to its trace file. This information is useful in supplementing the XA error codes. For example, it can indicate whether an open failure is caused by an incorrect open string, failure to find the Oracle Database instance, or a login authorization failure. The trace file is created in the BS2000 user ID, where the openUTM application runs. The name of the trace file is:</p>
<pre dir="ltr">ORAXALOG.<span class="italic">pid-db_name-date</span>.TRC
</pre>
<p>where</p>
<p><span class="italic"><code>pid</code></span> is the process identifier (TSN).</p>
<p><span class="italic"><code>db_name</code></span> is the database name you specified in the open string field <code>DB</code>=<span class="italic"><code>db_name</code></span>.</p>
<p><span class="italic"><code>date</code></span> is the date when the trace file is created.</p>
</div>
<!-- class="section" --></div>
<a id="DFSIG242"></a>
<div class="props_rev_3"><a id="GUID-9CD151E2-E8F7-42CB-923D-469C6D7ABBB8"></a>
<h5 id="DFSIG-GUID-9CD151E2-E8F7-42CB-923D-469C6D7ABBB8" class="sect5">Trace File Examples</h5>
<div>
<div class="section">
<p>Examples of trace files are discussed in this section.</p>
<p>The following example shows a trace file for an application&#39;s task with the TSN 1234 that was opened on April 2nd 1999. The <code>DB</code> field for this application was not specified in the open string when the resource manager was opened</p>
<pre dir="ltr">ORAXALOG.1234-NULL-990402.TRC
</pre>
<p>The following example shows a trace file that was created on December 15th 1998 by the BS2000 task with the TSN 5678. The <code>DB</code> field was specified as <code>FINANCE</code> in the open string when the resource manager was opened.</p>
<pre dir="ltr">ORAXALOG.5678-FINANCE-981215.TRC
</pre>
<p>Each entry in the trace file contains information that looks similar to:</p>
<pre dir="ltr">1032.2: xa_switch rtn ORA-22
</pre>
<p>where <code>1032</code> is the time when the information is logged, <code>2</code> is the resource manager identifier, <code>xa_switch</code> is an internal identifier of the Oracle XA library, and <code>ORA-22</code> is the returned Oracle database information.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="DFSIG243"></a>
<div class="props_rev_3"><a id="GUID-E474CEBC-1337-461E-BAC8-F6A53CE82B0B"></a>
<h4 id="DFSIG-GUID-E474CEBC-1337-461E-BAC8-F6A53CE82B0B" class="sect4">About Debugging</h4>
<div>
<p>You can specify the <code>DbgFl</code> (debug flag) in the open string.</p>
<p>Depending on the debugging level (low:<code>DbgFl=1</code>, high:<code>DbgFl=15</code>), you can get more or less debug entries in the trace file <code>ORAXALOG</code>.<span class="italic"><code>pid-db_name-date</code></span>.<code>TRC</code>.</p>
<div class="infoboxnotealso" id="GUID-E474CEBC-1337-461E-BAC8-F6A53CE82B0B__GUID-4200E64F-82C0-4561-8446-90827CC20753">
<p class="notep1">See Also:</p>
<a class="olink ADFNS017" target="_blank" href="../ADFNS/adfns_xa.htm#ADFNS017"><span><cite>Oracle Database Development Guide</cite></span></a> for more information</div>
</div>
</div>
<a id="DFSIG244"></a>
<div class="props_rev_3"><a id="GUID-2E3673EA-20B2-4BE5-BEA4-25B6FB96232B"></a>
<h4 id="DFSIG-GUID-2E3673EA-20B2-4BE5-BEA4-25B6FB96232B" class="sect4">In-Doubt or Pending Transactions</h4>
<div>
<p>In-doubt or pending transactions are transactions that have been prepared but not yet committed in the database. Generally, openUTM resolves any in-doubt or pending transaction. However, the Database Administrator may have to override an in-doubt transaction when working with UTM-F, that is, <code>APPLIMODE</code>=<code>FAST</code>. For example, when the in-doubt transaction is:</p>
<ul style="list-style-type: disc;">
<li>
<p>Locking data that is required by other transactions.</p>
</li>
<li>
<p>Not resolved in a reasonable amount of time.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-2E3673EA-20B2-4BE5-BEA4-25B6FB96232B__GUID-A285D594-852C-482C-8E26-BF4DB061F100">
<p class="notep1">Note:</p>
<p>Overriding in-doubt transactions can cause inconsistency between openUTM and the database. For example, if the DB transaction is committed by the Database Administrator and the openUTM application rolls back the transaction in the warm-start phase, then the Oracle Database cannot roll this committed transaction back, therefore, causing an inconsistency.</p>
</div>
</div>
</div>
<a id="DFSIG245"></a>
<div class="props_rev_3"><a id="GUID-B42BF312-C872-4515-A6CE-9725AE0427FE"></a>
<h4 id="DFSIG-GUID-B42BF312-C872-4515-A6CE-9725AE0427FE" class="sect4">Oracle Database SYS Account Tables</h4>
<div>
<div class="section">
<p>The tables under the Oracle Database <code>SYS</code> account that contain transactions generated by regular Oracle Database applications and Oracle Database/openUTM applications are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><code>DBA_2PC_PENDING</code></p>
</li>
<li>
<p><code>DBA_2PC_NEIGHBORS</code></p>
</li>
<li>
<p><code>DBA_PENDING_TRANSACTIONS</code></p>
</li>
<li>
<p><code>V$GLOBAL_TRANSACTION</code></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-B42BF312-C872-4515-A6CE-9725AE0427FE__GUID-748CD533-987C-4CBD-A5D6-6830DFDD3165">
<p class="notep1">See Also:</p>
<p>For detailed information about how to use these tables, refer to the sections in the <a class="olink ADMIN032" target="_blank" href="../ADMIN/ds_txnman.htm#ADMIN032"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> that discuss failures during two-phase commit and manually overriding in-doubt transactions</p>
</div>
<p>For transactions generated by Oracle Database/openUTM applications, the following column information applies specifically to the <code>DBA_2PC_NEIGHBORS</code> table:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code>DBID</code> column is always <code>xa_orcl</code>.</p>
</li>
<li>
<p>The <code>DBUSER_OWNER</code> column is always <span class="italic"><code>db_namexa.oracle.com</code></span>.</p>
</li>
</ul>
<p>Remember that the <span class="italic"><code>db_name</code></span> is always specified as <code>DB</code>=<span class="italic"><code>db_name</code></span> in the open string. If you do not specify this field in the open string, then the value of this column is <code>NULLxa.oracle.com</code> for transactions that are generated by Oracle Database/openUTM applications.</p>
<p>For example, use the following sample SQL statement to find out more information about in-doubt transactions that are generated by Oracle Database/openUTM applications.</p>
<pre dir="ltr">SELECT * FROM DBA_2PC_PENDING p, DBA_2PC_NEIGHBORS n 
WHERE p.LOCAL_TRAN_ID = n.LOCAL_TRAN_ID AND n.DBID = &#39;xa_orcl&#39;; 
</pre></div>
<!-- class="section" --></div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment4264">
<tr>
<td class="cellalignment4271">
<table class="cellalignment4269">
<tr>
<td class="cellalignment4268"><a href="application-development.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment4268"><a href="external-procedures.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2007, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment4273">
<table class="cellalignment4267">
<tr>
<td class="cellalignment4268"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment4268"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment4268"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment4268"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment4268"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment4268"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>