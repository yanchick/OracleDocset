<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-106204"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20Triggers"></a><title>Using Triggers</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-07-01T1:46:13Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database 2 Day Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53088-01"/>
<meta name="dcterms.isVersionOf" content="TDDDG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="tdddg_subprograms.htm" title="Previous" type="text/html"/>
<link rel="Next" href="tdddg_globalization.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53088-01.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/17</span> <!-- End Header -->
<div id="TDDDG50000" class="chapter"><a id="BABIEDEF"></a>
<h1 class="chapter"><span class="secnum">6</span> Using Triggers</h1>
<p>This chapter contains:</p>
<ul>
<li>
<p><a href="#BABIHIHH">About Triggers</a></p>
</li>
<li>
<p><a href="#BABDAGJJ">Creating Triggers</a></p>
</li>
<li>
<p><a href="#CHDBBCAJ">Changing Triggers</a></p>
</li>
<li>
<p><a href="#CHDHIADD">Disabling and Enabling Triggers</a></p>
</li>
<li>
<p><a href="#CHDFGJDF">About Trigger Compilation and Dependencies</a></p>
</li>
<li>
<p><a href="#CHDHAGAE">Dropping Triggers</a></p>
</li>
</ul>
<a id="BABIHIHH"></a>
<div id="TDDDG51000" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About Triggers</h2>
<p>A <a id="sthref507"></a><span class="bold">trigger</span> is a PL/SQL unit that is stored in the database and (if it is in the enabled state) automatically executes (&#34;fires&#34;) in response to a specified event.</p>
<p>A trigger has this structure:</p>
<pre>TRIGGER <span class="italic">trigger_name</span>
  <span class="italic">triggering_event</span>
  [ <span class="italic">trigger_restriction</span> ]
BEGIN
  <span class="italic">triggered_action</span>;
END;
</pre>
<p>The <code><span class="codeinlineitalic">trigger_name</span></code> must be unique for triggers in the schema. A trigger can have the same name as another kind of object in the schema (for example, a table); however, Oracle recommends using a naming convention that avoids confusion.</p>
<p>If the trigger is in the <a id="sthref508"></a><a id="sthref509"></a><span class="bold">enabled</span> state, the <code><span class="codeinlineitalic">triggering_event</span></code> causes the database to execute the <code><span class="codeinlineitalic">triggered_action</span></code> if the <code><span class="codeinlineitalic">trigger_restriction</span></code> is either <code>TRUE</code> or omitted. The <code><span class="codeinlineitalic">triggering_event</span></code> is associated with either a table, a view, a schema, or the database, and it is one of these:</p>
<ul>
<li>
<p><a id="sthref510"></a>DML statement (described in <a href="tdddg_dml.htm#BCGBGBIE">&#34;About Data Manipulation Language (DML) Statements&#34;</a>)</p>
</li>
<li>
<p><a id="sthref511"></a>DDL statement (described in <a href="tdddg_objects.htm#CIHGAJDJ">&#34;About Data Definition Language (DDL) Statements&#34;</a>)</p>
</li>
<li>
<p>Database operation (<code>SERVERERROR</code>, <code>LOGON</code>, <code>LOGOFF</code>, <code>STARTUP</code>, or <code>SHUTDOWN</code>)</p>
</li>
</ul>
<p>If the trigger is in the <a id="sthref512"></a><a id="sthref513"></a><span class="bold">disabled</span> state, the <code><span class="codeinlineitalic">triggering_event</span></code> does not cause the database to execute the <code><span class="codeinlineitalic">triggered_action</span></code>, even if the <code><span class="codeinlineitalic">trigger_restriction</span></code> is <code>TRUE</code> or omitted.</p>
<p>By default, a trigger is created in the enabled state. You can disable an enabled trigger, and enable a disabled trigger.</p>
<p>Unlike a subprogram, a trigger cannot be invoked directly. A trigger is invoked only by its triggering event, which can be caused by any user or application. You might be unaware that a trigger is executing unless it causes an error that is not handled properly.</p>
<p>A <a id="sthref514"></a><a id="sthref515"></a><span class="bold">simple trigger</span> can fire at exactly one of these <a id="sthref516"></a><a id="sthref517"></a><span class="bold">timing points</span>:</p>
<ul>
<li>
<p>Before the triggering event executes (<a id="sthref518"></a><a id="sthref519"></a>statement-level <a id="sthref520"></a><a id="sthref521"></a><code>BEFORE</code> trigger)</p>
</li>
<li>
<p>After the triggering event executes (statement-level <a id="sthref522"></a><a id="sthref523"></a><code>AFTER</code> trigger)</p>
</li>
<li>
<p>Before each row that the event affects (<a id="sthref524"></a><a id="sthref525"></a>row-level <code>BEFORE</code> trigger)</p>
</li>
<li>
<p>After each row that the event affects (row-level <code>AFTER</code> trigger)</p>
</li>
</ul>
<p>A <a id="sthref526"></a><a id="sthref527"></a><span class="bold">compound trigger</span> can fire at multiple timing points. For information about compound triggers, see <a class="olink LNPLS2005" href="../LNPLS/triggers.htm#LNPLS2005"><span class="italic">Oracle Database PL/SQL Language Reference</span></a>.</p>
<p>An <a id="sthref528"></a><a id="sthref529"></a><code><span class="codeinlinebold">INSTEAD</span></code> <code><span class="codeinlinebold">OF</span></code> <span class="bold">trigger</span> is defined on a view, and its triggering event is a DML statement. Instead of executing the DML statement, Oracle Database executes the <code>INSTEAD</code> <code>OF</code> trigger. For more information, see <a href="#BABECIAE">&#34;Creating an INSTEAD OF Trigger&#34;</a>.</p>
<p>A <a id="sthref530"></a><a id="sthref531"></a><span class="bold">system trigger</span> is defined on a schema or the database. A trigger defined on a schema fires for each event associated with the owner of the schema (the current user). A trigger defined on a database fires for each event associated with all users.</p>
<p>One use of triggers is to enforce business rules that apply to all client applications. For example, suppose that data added to the <code>EMPLOYEES</code> table must have a certain format, and that many client applications can add data to this table. A trigger on the table can ensure the proper format of all data added to it. Because the trigger executes whenever any client adds data to the table, no client can circumvent the rules, and the code that enforces the rules can be stored and maintained only in the trigger, rather than in every client application. For other uses of triggers, see <a class="olink LNPLS723" href="../LNPLS/triggers.htm#LNPLS723"><span class="italic">Oracle Database PL/SQL Language Reference</span></a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS020" href="../LNPLS/overview.htm#LNPLS020"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for complete information about triggers</div>
</div>
<!-- class="sect1" -->
<a id="BABDAGJJ"></a>
<div id="TDDDG52000" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating Triggers</h2>
<p><a id="sthref532"></a>To create triggers, use either the SQL&nbsp;Developer tool <a id="sthref533"></a>Create Trigger or the DDL statement <a id="sthref534"></a><code>CREATE</code> <code>TRIGGER</code>. This section shows how to use both of these ways to create triggers.</p>
<p>By default, a trigger is created in the enabled state. To create a trigger in disabled state, use the <code>CREATE</code> <code>TRIGGER</code> statement with the <code>DISABLE</code> clause.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To create triggers, you must have appropriate privileges; however, for this discussion, you do not need this additional information.</div>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCFIGJAE">About OLD and NEW Pseudorecords</a></p>
</li>
<li>
<p><a href="#BABGEAIA">Tutorial: Creating a Trigger that Logs Table Changes</a></p>
</li>
<li>
<p><a href="#BABCGBBD">Tutorial: Creating a Trigger that Generates a Primary Key for a Row Before It Is Inserted</a></p>
</li>
<li>
<p><a href="#BABECIAE">Creating an INSTEAD OF Trigger</a></p>
</li>
<li>
<p><a href="#BABFBEJH">Tutorial: Creating Triggers that Log LOGON and LOGOFF Events</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
To do the tutorials in this document, you must be connected to Oracle Database as the user <code>HR</code> from SQL&nbsp;Developer.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink RPTUG30000" href="../RPTUG/dialogs.htm#RPTUG30000"><span class="italic">Oracle SQL Developer User&#39;s Guide</span></a> for information about SQL&nbsp;Developer dialog boxes for creating objects</p>
</li>
<li>
<p><a class="olink LNPLS01374" href="../LNPLS/create_trigger.htm#LNPLS01374"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about the <code>CREATE</code> <code>TRIGGER</code> statement</p>
</li>
<li>
<p><a href="tdddg_deploying.htm#BABJCJIJ">&#34;Editing Installation Scripts that Create Triggers&#34;</a></p>
</li>
</ul>
</div>
<a id="BCFIGJAE"></a>
<div id="TDDDG99934" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About OLD and NEW Pseudorecords</h3>
<p>When a <a id="sthref535"></a><a id="sthref536"></a>row-level trigger fires, the PL/SQL runtime system creates and populates the two <a id="sthref537"></a>pseudorecords <a id="sthref538"></a><code>OLD</code> and <a id="sthref539"></a><code>NEW</code>. They are called pseudorecords because they have some, but not all, of the properties of records.</p>
<p>For the row that the trigger is processing:</p>
<ul>
<li>
<p>For an <code>INSERT</code> trigger, <code>OLD</code> contains no values, and <code>NEW</code> contains the new values.</p>
</li>
<li>
<p>For an <code>UPDATE</code> trigger, <code>OLD</code> contains the old values, and <code>NEW</code> contains the new values.</p>
</li>
<li>
<p>For a <code>DELETE</code> trigger, <code>OLD</code> contains the old values, and <code>NEW</code> contains no values.</p>
</li>
</ul>
<p>To reference a pseudorecord, put a colon before its name&mdash;:<code>OLD</code> or :<code>NEW</code>&mdash;as in <a href="#BABBFAGD">Example 6-1</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS99955" href="../LNPLS/triggers.htm#LNPLS99955"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about <code>OLD</code> and <code>NEW</code> pseudorecords</div>
</div>
<!-- class="sect2" -->
<a id="BABGEAIA"></a>
<div id="TDDDG52100" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Creating a Trigger that Logs Table Changes</h3>
<p>This tutorial shows how to use the <code>CREATE</code> <code>TRIGGER</code> statement to create a trigger, <code>EVAL_CHANGE_TRIGGER</code>, which adds a row to the table <code>EVALUATIONS_LOG</code> whenever an <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code> statement changes the <code>EVALUATIONS</code> table.</p>
<p>The trigger adds the row <span class="italic">after</span> the triggering statement executes, and uses the <a id="sthref540"></a><span class="bold">conditional predicates</span> <a id="sthref541"></a><code>INSERTING</code>, <a id="sthref542"></a><code>UPDATING</code>, and <a id="sthref543"></a><code>DELETING</code> to determine which of the three possible DML statements fired the trigger.</p>
<p><code>EVAL_CHANGE_TRIGGER</code> is a <a id="sthref544"></a><a id="sthref545"></a><span class="bold">statement-level trigger</span> and an <a id="sthref546"></a><a id="sthref547"></a><span class="bold">AFTER trigger</span>.</p>
<p class="subhead2"><a id="TDDDG249"></a>To create EVALUATIONS_LOG and EVAL_CHANGE_TRIGGER:</p>
<ol>
<li>
<p>Create the <code>EVALUATIONS_LOG</code> table:</p>
<pre>CREATE TABLE EVALUATIONS_LOG ( log_date DATE
                             , action VARCHAR2(50));
</pre></li>
<li>
<p>Create <code>EVAL_CHANGE_TRIGGER</code>:</p>
<pre>CREATE OR REPLACE TRIGGER EVAL_CHANGE_TRIGGER
  <span class="bold">AFTER</span> INSERT OR UPDATE OR DELETE
  ON EVALUATIONS
DECLARE
  log_action  EVALUATIONS_LOG.action%TYPE;
BEGIN
  IF <span class="bold">INSERTING</span> THEN
    log_action := &#39;Insert&#39;;
  ELSIF <span class="bold">UPDATING</span> THEN
    log_action := &#39;Update&#39;;
  ELSIF <span class="bold">DELETING</span> THEN
    log_action := &#39;Delete&#39;;
  ELSE
    DBMS_OUTPUT.PUT_LINE(&#39;This code is not reachable.&#39;);
  END IF;

  INSERT INTO EVALUATIONS_LOG (log_date, action)
    VALUES (SYSDATE, log_action);
END;
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS750" href="../LNPLS/triggers.htm#LNPLS750"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about conditional predicates</div>
</div>
<!-- class="sect2" -->
<a id="BABCGBBD"></a>
<div id="TDDDG52700" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Creating a Trigger that Generates a Primary Key for a Row Before It Is Inserted</h3>
<p>The sequence <code>EVALUATIONS_SEQUENCE</code> (created in <a href="tdddg_objects.htm#BABJIDEG">&#34;Tutorial: Creating a Sequence&#34;</a>) generates primary keys for the <code>EVALUATIONS</code> table (created in <a href="tdddg_objects.htm#BABFEIDE">&#34;Creating Tables&#34;</a>). However, these primary keys are not inserted into the table automatically.</p>
<p>This tutorial shows how to use the SQL&nbsp;Developer Create Trigger tool to create a trigger named <code>NEW_EVALUATION_TRIGGER</code>, which fires <span class="italic">before</span> a row is inserted into the <code>EVALUATIONS</code> table, and generates the unique number for the primary key of that row, using <code>EVALUATIONS_SEQUENCE</code>. The trigger fires once <span class="italic">for each row</span> affected by the triggering <code>INSERT</code> statement.</p>
<p><code>NEW_EVALUATION_TRIGGER</code> is a <a id="sthref548"></a><a id="sthref549"></a><span class="bold">row-level trigger</span> and a <a id="sthref550"></a><a id="sthref551"></a><span class="bold">BEFORE trigger</span>.</p>
<p class="subhead2"><a id="TDDDG250"></a>To create the NEW_EVALUATION trigger:</p>
<ol>
<li>
<p>In the Connections frame, expand <span class="bold">hr_conn</span>.</p>
</li>
<li>
<p>In the list of schema object types, right-click <span class="bold">Triggers</span>.</p>
</li>
<li>
<p>In the list of choices, click <span class="bold">New Trigger</span>.</p>
</li>
<li>
<p>In the Create Trigger window:</p>
<ol>
<li>
<p>In the Name field, type <code>NEW_EVALUATION_TRIGGER</code> over the default value <code>TRIGGER1</code>.</p>
</li>
<li>
<p>For Base Object, select <code><span class="codeinlinebold">EVALUATIONS</span></code> from the menu.</p>
</li>
<li>
<p>Move <code><span class="codeinlinebold">INSERT</span></code> from Available Events to Selected Events.</p>
<p>(Select <code><span class="codeinlinebold">INSERT</span></code> and click <span class="bold">&gt;</span>.)</p>
</li>
<li>
<p>Deselect the option <span class="bold">Statement Level</span>.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
<p>The <code>NEW_EVALUATION_TRIGGER</code> pane opens, showing the <code>CREATE</code> <code>TRIGGER</code> statement that created the trigger:</p>
<pre><span class="bold">CREATE OR REPLACE</span>
<span class="bold">TRIGGER</span> NEW_EVALUATION_TRIGGER
<span class="bold">BEFORE INSERT ON</span> EVALUATIONS
<span class="bold">FOR EACH ROW</span>
<span class="bold">BEGIN</span>
  <span class="bold">NULL</span>;
<span class="bold">END</span>;
</pre>
<p>The title of the <code>NEW_EVALUATION_TRIGGER</code> pane is in italic font, indicating that the trigger is not yet saved in the database.</p>
</li>
</ol>
</li>
<li>
<p>In the <code>CREATE</code> <code>TRIGGER</code> statement, replace <code>NULL</code> with this:</p>
<pre>:NEW.evaluation_id := evaluations_sequence.NEXTVAL
</pre></li>
<li>
<p>From the File menu, select <span class="bold">Save</span>.</p>
<p>Oracle Database compiles the procedure and saves it. The title of the <code>NEW_EVALUATION_TRIGGER</code> pane is no longer in italic font.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABECIAE"></a>
<div id="TDDDG52800" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an INSTEAD OF Trigger</h3>
<p>A view presents the output of a query as a table. If you want to change a view as you would change a table, then you must create <a id="sthref552"></a><a id="sthref553"></a><a id="sthref554"></a><a id="sthref555"></a><code>INSTEAD</code> <code>OF</code> triggers. Instead of changing the view, they change the underlying tables.</p>
<p>For example, consider the view <code>EMP_LOCATIONS</code>, whose <code>NAME</code> column is created from the <code>LAST_NAME</code> and <code>FIRST_NAME</code> columns of the <code>EMPLOYEES</code> table:</p>
<pre>CREATE VIEW EMP_LOCATIONS AS
SELECT e.EMPLOYEE_ID,
  <span class="bold">e.LAST_NAME || &#39;, &#39; || e.FIRST_NAME NAME</span>,
  d.DEPARTMENT_NAME DEPARTMENT,
  l.CITY CITY,
  c.COUNTRY_NAME COUNTRY
FROM <span class="bold">EMPLOYEES e</span>, DEPARTMENTS d, LOCATIONS l, COUNTRIES c
WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID AND
 d.LOCATION_ID = l.LOCATION_ID AND
 l.COUNTRY_ID = c.COUNTRY_ID
ORDER BY LAST_NAME;
</pre>
<p>To update the view <code>EMP_LOCATIONS</code>.<code>NAME</code> (created in <a href="tdddg_objects.htm#BABFHHIA">&#34;Creating Views with the CREATE VIEW Statement&#34;</a>), you must update <code>EMPLOYEES</code>.<code>LAST_NAME</code> and <code>EMPLOYEES</code>.<code>FIRST_NAME</code>. This is what the <code>INSTEAD</code> <code>OF</code> trigger in <a href="#BABBFAGD">Example 6-1</a> does.</p>
<p><code>NEW</code> and <code>OLD</code> are <span class="bold">pseudorecords</span> that the PL/SQL runtime engine creates and populates whenever a row-level trigger fires. <code>OLD</code> and <code>NEW</code> store the original and new values, respectively, of the record being processed by the trigger. They are called pseudorecords because they do not have all properties of PL/SQL records.</p>
<div id="TDDDG251" class="example">
<p class="titleinexample"><a id="BABBFAGD"></a>Example 6-1 Creating an INSTEAD OF Trigger</p>
<pre>CREATE OR REPLACE TRIGGER update_name_view_trigger
<span class="bold">INSTEAD OF UPDATE ON emp_locations</span>
BEGIN
  <span class="bold">UPDATE employees SET</span>
    <span class="bold">first_name = substr( :NEW.name, instr( :new.name, &#39;,&#39; )+2),</span>
    <span class="bold">last_name = substr( :NEW.name, 1, instr( :new.name, &#39;,&#39;)-1)</span>
  <span class="bold">WHERE employee_id = :OLD.employee_id;</span>
END;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPLS20041" href="../LNPLS/triggers.htm#LNPLS20041"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about <code>INSTEAD</code> <code>OF</code> triggers</p>
</li>
<li>
<p><a class="olink LNPLS99955" href="../LNPLS/triggers.htm#LNPLS99955"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about <code>OLD</code> and <code>NEW</code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABFBEJH"></a>
<div id="TDDDG52900" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Creating Triggers that Log LOGON and LOGOFF Events</h3>
<p>This tutorial shows how to use the <code>CREATE</code> <code>TRIGGER</code> statement to create two triggers, <code>HR_LOGON_TRIGGER</code> and <code>HR_LOGOFF_TRIGGER</code>. <span class="italic">After</span> someone logs on as user <code>HR</code>, <code>HR_LOGON_TRIGGER</code> adds a row to the table <code>HR_USERS_LOG</code>. <span class="italic">Before</span> someone logs off as user <code>HR</code>, <code>HR_LOGOFF_TRIGGER</code> adds a row to the table <code>HR_USERS_LOG</code>.</p>
<p><code>HR_LOGON_TRIGGER</code> and <code>HR_LOGOFF_TRIGGER</code> are <a id="sthref556"></a><a id="sthref557"></a><span class="bold">system triggers</span>. <code>HR_LOGON_TRIGGER</code> is an <a id="sthref558"></a><a id="sthref559"></a><span class="bold">AFTER trigger</span> and <code>HR_LOGOFF_TRIGGER</code> is a <a id="sthref560"></a><a id="sthref561"></a><span class="bold">BEFORE trigger</span>.</p>
<p class="subhead2"><a id="TDDDG252"></a>To create HR_USERS_LOG, HR_LOGON_TRIGGER, and HR_LOGOFF_TRIGGER:</p>
<ol>
<li>
<p>Create the <code>HR_USERS_LOG</code> table:</p>
<pre>CREATE TABLE hr_users_log (
  user_name VARCHAR2(30),
  activity VARCHAR2(20),
  event_date DATE
);
</pre></li>
<li>
<p>Create <code>hr_logon_trigger</code>:</p>
<pre>CREATE OR REPLACE TRIGGER hr_logon_trigger
  <span class="bold">AFTER LOGON</span>
  <span class="bold">ON HR.SCHEMA</span>
BEGIN
  INSERT INTO hr_users_log (user_name, activity, event_date)
  VALUES (USER, &#39;LOGON&#39;, SYSDATE);
END;
</pre></li>
<li>
<p>Create <code>hr_logoff_trigger</code>:</p>
<pre>CREATE OR REPLACE TRIGGER hr_logoff_trigger
  <span class="bold">BEFORE LOGOFF</span>
  <span class="bold">ON HR.SCHEMA</span>
BEGIN
  INSERT INTO hr_users_log (user_name, activity, event_date)
  VALUES (USER, &#39;LOGOFF&#39;, SYSDATE);
END;
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS99887" href="../LNPLS/triggers.htm#LNPLS99887"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about system triggers</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDBBCAJ"></a>
<div id="TDDDG52200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Changing Triggers</h2>
<p><a id="sthref562"></a>To change a trigger, use either the SQL&nbsp;Developer tool <a id="sthref563"></a>Edit or the DDL statement <a id="sthref564"></a><code>CREATE</code> <code>TRIGGER</code> with the <code>OR</code> <code>REPLACE</code> clause.</p>
<p class="subhead2"><a id="TDDDG253"></a>To change a trigger using the Edit tool:</p>
<ol>
<li>
<p>In the Connections frame, expand <span class="bold">hr_conn</span>.</p>
</li>
<li>
<p>In the list of schema object types, expand <span class="bold">Triggers</span>.</p>
</li>
<li>
<p>In the list of triggers, click the trigger to change.</p>
</li>
<li>
<p>In the frame to the right of the Connections frame, the Code pane appears, showing the code that created the trigger.</p>
<p>The Code pane is in write mode. (Clicking the pencil icon switches the mode from write mode to read only, or the reverse.)</p>
</li>
<li>
<p>In the Code pane, change the code.</p>
<p>The title of the pane is in italic font, indicating that the change is not yet saved in the database.</p>
</li>
<li>
<p>From the File menu, select <span class="bold">Save</span>.</p>
<p>Oracle Database compiles the trigger and saves it. The title of the pane is no longer in italic font.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="tdddg_objects.htm#CIHGAJDJ">&#34;About Data Definition Language (DDL) Statements&#34;</a> for general information that applies to the <code>CREATE</code> <code>OR</code> <code>REPLACE</code> <code>TRIGGER</code> statement</p>
</li>
<li>
<p><a class="olink LNPLS01374" href="../LNPLS/create_trigger.htm#LNPLS01374"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about the <code>CREATE</code> <code>OR</code> <code>REPLACE</code> <code>TRIGGER</code> statement</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CHDHIADD"></a>
<div id="TDDDG52400" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Disabling and Enabling Triggers</h2>
<p><a id="sthref565"></a><a id="sthref566"></a><a id="sthref567"></a><a id="sthref568"></a>You might need to temporarily disable triggers if they reference objects that are unavailable, or if you must upload a large amount of data without the delay that triggers cause (as in a recovery operation). After the referenced objects become available, or you have finished uploading the data, you can re-enable the triggers.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABIJDCB">Disabling or Enabling a Single Trigger</a></p>
</li>
<li>
<p><a href="#BABEHHFH">Disabling or Enabling All Triggers on a Single Table</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPLS99996" href="../LNPLS/alter_trigger.htm#LNPLS99996"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about the <code>ALTER</code> <code>TRIGGER</code> statement</p>
</li>
<li>
<p><a class="olink SQLRF01001" href="../SQLRF/statements_3001.htm#SQLRF01001"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code>ALTER</code> <code>TABLE</code> statement</p>
</li>
</ul>
</div>
<a id="BABIJDCB"></a>
<div id="TDDDG332" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Disabling or Enabling a Single Trigger</h3>
<p>To disable or enable a single trigger, use either the Disable Trigger or Enable Trigger tool or the <a id="sthref569"></a><code>ALTER</code> <code>TRIGGER</code> statement with the <code>DISABLE</code> or <code>ENABLE</code> clause.</p>
<p>For example, these statements disable and enable the <code>eval_change_trigger</code>:</p>
<pre>ALTER TRIGGER eval_change_trigger <span class="bold">DISABLE</span>;
ALTER TRIGGER eval_change_trigger <span class="bold">ENABLE</span>;
</pre>
<p class="subhead2"><a id="TDDDG333"></a>To use the Disable Trigger or Enable Trigger tool:</p>
<ol>
<li>
<p>In the Connections frame, expand <span class="bold">hr_conn</span>.</p>
</li>
<li>
<p>In the list of schema object types, expand <span class="bold">Triggers</span>.</p>
</li>
<li>
<p>In the list of triggers, right-click the desired trigger.</p>
</li>
<li>
<p>In the list of choices, select <span class="bold">Disable</span> or <span class="bold">Enable</span>.</p>
</li>
<li>
<p>In the Disable or Enable window, click <span class="bold">Apply</span>.</p>
</li>
<li>
<p>In the Confirmation window, click <span class="bold">OK</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABEHHFH"></a>
<div id="TDDDG334" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Disabling or Enabling All Triggers on a Single Table</h3>
<p>To disable or enable all triggers on a specific table, use either the Disable All Triggers or Enable All Triggers tool or the <a id="sthref570"></a><code>ALTER</code> <code>TABLE</code> statement with the <a id="sthref571"></a><code>DISABLE</code> <code>ALL</code> <code>TRIGGERS</code> or <a id="sthref572"></a><code>ENABLE</code> <code>ALL</code> <code>TRIGGERS</code> clause.</p>
<p>For example, these statements disable and enable all triggers on the <code>evaluations</code> table:</p>
<pre>ALTER TABLE evaluations <span class="bold">DISABLE ALL TRIGGERS</span>;
ALTER TABLE evaluations <span class="bold">ENABLE ALL TRIGGERS</span>;
</pre>
<p class="subhead2"><a id="TDDDG335"></a>To use the Disable All Triggers or Enable All Triggers tool:</p>
<ol>
<li>
<p>In the Connections frame, expand <span class="bold">hr_conn</span>.</p>
</li>
<li>
<p>In the list of schema object types, expand <span class="bold">Tables</span>.</p>
</li>
<li>
<p>In the list of tables, right-click the desired table.</p>
</li>
<li>
<p>In the list of choices, select <span class="bold">Triggers</span>.</p>
</li>
<li>
<p>In the list of choices, select <span class="bold">Disable All</span> or <span class="bold">Enable All</span>.</p>
</li>
<li>
<p>In the Disable All or Enable All window, click <span class="bold">Apply</span>.</p>
</li>
<li>
<p>In the Confirmation window, click <span class="bold">OK</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDFGJDF"></a>
<div id="TDDDG52500" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About Trigger Compilation and Dependencies</h2>
<p><a id="sthref573"></a><a id="sthref574"></a><a id="sthref575"></a>Running a <code>CREATE</code> <code>TRIGGER</code> statement compiles the trigger being created. If this compilation causes an error, then the <code>CREATE</code> <code>TRIGGER</code> statement fails. To see the compilation errors, use this statement:</p>
<pre>SELECT * FROM USER_ERRORS WHERE TYPE = &#39;TRIGGER&#39;;
</pre>
<p>Compiled triggers depend on the schema objects on which they are defined. For example, <code>NEW_EVALUATION_TRIGGER</code> depends on the <code>EVALUATIONS</code> table:</p>
<pre>CREATE OR REPLACE
<span class="bold">TRIGGER NEW_EVALUATION_TRIGGER</span>
BEFORE INSERT <span class="bold">ON EVALUATIONS</span>
FOR EACH ROW
BEGIN
  :NEW.evaluation_id := evaluations_seq.NEXTVAL;
END;
</pre>
<p>To see the schema objects on which triggers depend, use this statement:</p>
<pre>SELECT * FROM ALL_DEPENDENCIES WHERE TYPE = &#39;TRIGGER&#39;;
</pre>
<p>If an object on which a trigger depends is dropped, or changed such that there is a mismatch between the trigger and the object, then the <a id="sthref576"></a><a id="sthref577"></a>trigger is invalidated. The next time the trigger is invoked, it is <a id="sthref578"></a>recompiled. To recompile a trigger immediately, use the <a id="sthref579"></a><code>ALTER</code> <code>TRIGGER</code> statement with the <code>COMPILE</code> clause. For example:</p>
<pre>ALTER TRIGGER NEW_EVALUATION_TRIGGER <span class="bold">COMPILE</span>;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS2007" href="../LNPLS/triggers.htm#LNPLS2007"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about trigger compilation and dependencies</div>
</div>
<!-- class="sect1" -->
<a id="CHDHAGAE"></a>
<div id="TDDDG52600" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Dropping Triggers</h2>
<p>You must drop a trigger before dropping the objects on which it depends.</p>
<p><a id="sthref580"></a>To drop a trigger, use either the SQL&nbsp;Developer Connections frame and <a id="sthref581"></a>Drop tool, or the DDL statement <a id="sthref582"></a><code>DROP</code> <code>TRIGGER</code>.</p>
<p>This statement drops the trigger <code>EVAL_CHANGE_TRIGGER</code>:</p>
<pre>DROP TRIGGER EVAL_CHANGE_TRIGGER;
</pre>
<p class="subhead2"><a id="TDDDG254"></a>To drop a trigger using the Drop tool:</p>
<ol>
<li>
<p>In the Connections frame, expand <span class="bold">hr_conn</span>.</p>
</li>
<li>
<p>In the list of schema object types, expand <span class="bold">Triggers</span>.</p>
</li>
<li>
<p>In the list of triggers, right-click the name of the trigger to drop.</p>
</li>
<li>
<p>In the list of choices, click <span class="bold">Drop Trigger</span>.</p>
</li>
<li>
<p>In the Drop window, click <span class="bold">Apply</span>.</p>
</li>
<li>
<p>In the Confirmation window, click <span class="bold">OK</span>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="tdddg_objects.htm#CIHGAJDJ">&#34;About Data Definition Language (DDL) Statements&#34;</a> for general information that applies to the <code>DROP</code> <code>TRIGGER</code> statement</p>
</li>
<li>
<p><a class="olink LNPLS99990" href="../LNPLS/drop_trigger.htm#LNPLS99990"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about the <code>DROP</code> <code>TRIGGER</code> statement</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5832">
<tr>
<td class="cellalignment5839">
<table class="cellalignment5837">
<tr>
<td class="cellalignment5836"><a href="tdddg_subprograms.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5836"><a href="tdddg_globalization.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5841">
<table class="cellalignment5835">
<tr>
<td class="cellalignment5836"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5836"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5836"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5836"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5836"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5836"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>