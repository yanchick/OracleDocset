<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104105"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/SET%20System%20Variable%20Summary"></a><title>SET System Variable Summary</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737"/>
<meta name="dcterms.created" content="2013-07-17T10:55:22Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="SQL*Plus&reg; User&#39;s Guide and Reference"/>
<meta name="dcterms.identifier" content="E18404-12"/>
<meta name="dcterms.isVersionOf" content="SQPUG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ch_twelve039.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_twelve041.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18404-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">62/82</span> <!-- End Header --><a id="BACGAJIC"></a>
<hr/>
<div id="SQPUG060" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h1 class="refsect1">SET System Variable Summary<a id="sthref1858"></a><a id="sthref1859"></a></h1>
<div class="inftblinformalwidemax">
<table class="cellalignment1443" title="SET System Variable Summary" summary="2 column table showing the SET System Variable Commands and their syntax cross referenced to the SET System Variable command page, and a description of the SET System Variable." dir="ltr">
<thead>
<tr class="cellalignment1437">
<th class="cellalignment1448" id="r1c1-t79">System Variable</th>
<th class="cellalignment1448" id="r1c2-t79">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r2c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698573"><span class="xreftitlebold">SET APPI[NFO]{ON | <span class="underline">OFF</span> | <span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r2c1-t79 r1c2-t79">Sets automatic <a id="sthref1860"></a>registering of scripts through the <a id="sthref1861"></a>DBMS_APPLICATION_INFO package.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r3c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698625"><span class="xreftitlebold">SET ARRAY[SIZE] {<span class="underline">15</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r3c1-t79 r1c2-t79"><a id="sthref1862"></a><a id="sthref1863"></a>Sets the number of<a id="sthref1864"></a> rows, called a <span class="italic">batch</span>, that SQL*Plus will fetch from the database at one time.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r4c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698639"><span class="xreftitlebold">SET AUTO[COMMIT]{ON | <span class="underline">OFF</span> | IMM[EDIATE] | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r4c1-t79 r1c2-t79"><a id="sthref1865"></a><a id="sthref1866"></a>Controls when Oracle Database commits pending changes to the database<a id="sthref1867"></a>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r5c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698656"><span class="xreftitlebold">SET AUTOP[RINT] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r5c1-t79 r1c2-t79"><a id="sthref1868"></a><a id="sthref1869"></a>Sets the automatic printing of bind variables.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r6c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698666"><span class="xreftitlebold">SET AUTORECOVERY [ON | <span class="underline">OFF</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r6c1-t79 r1c2-t79"><a id="sthref1870"></a><a id="sthref1871"></a>ON sets the RECOVER command to automatically apply the default filenames of archived redo log files needed during recovery.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r7c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698680"><span class="xreftitlebold">SET AUTOT[RACE] {ON | <span class="underline">OFF</span> | TRACE[ONLY]} [EXP[LAIN]] [STAT[ISTICS]]</span></a></p>
</td>
<td class="cellalignment1444" headers="r7c1-t79 r1c2-t79"><code><span class="codeinlinebold"><a id="sthref1872"></a><a id="sthref1873"></a></span></code>Displays a<a id="sthref1874"></a> report on the execution of successful SQL<a id="sthref1875"></a> DML statements (SELECT, INSERT, UPDATE, DELETE or MERGE).</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r8c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698691"><span class="xreftitlebold">SET BLO[CKTERMINATOR] {. | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r8c1-t79 r1c2-t79"><a id="sthref1876"></a><a id="sthref1877"></a><a id="sthref1878"></a>Sets the non-alphanumeric character used to end PL/SQL blocks<a id="sthref1879"></a> to <span class="italic">c</span>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r9c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698702"><span class="xreftitlebold">SET CMDS[EP] {; | <span class="italic">c</span> | ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r9c1-t79 r1c2-t79"><a id="sthref1880"></a><a id="sthref1881"></a>Sets the non-alphanumeric character used to separate multiple SQL*Plus commands entered on one line to <span class="italic">c</span>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r10c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#CACFCHHA"><span class="xreftitlebold">SET COLINVI[SIBLE] [ON | <span class="underline">OFF</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r10c1-t79 r1c2-t79"><a id="sthref1882"></a><a id="sthref1883"></a>ON sets the DESCRIBE command to display column information for an invisible column..</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r11c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698758"><span class="xreftitlebold">SET COLSEP { | <span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r11c1-t79 r1c2-t79"><a id="sthref1884"></a><a id="sthref1885"></a>Sets the text to be printed between selected<a id="sthref1886"></a> columns.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r12c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698818"><span class="xreftitlebold">SET CON[CAT] {. | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r12c1-t79 r1c2-t79"><a id="sthref1887"></a><a id="sthref1888"></a><a id="sthref1889"></a>Sets the character you can use to terminate a substitution variable<a id="sthref1890"></a> reference if you wish to immediately follow the variable with a character that SQL*Plus would otherwise interpret as a part of the substitution variable name.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r13c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698834"><span class="xreftitlebold">SET COPYC[OMMIT] {<span class="underline">0</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r13c1-t79 r1c2-t79"><a id="sthref1891"></a><a id="sthref1892"></a>Controls the number of batches after which the COPY command commits changes to the database.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r14c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698844"><span class="xreftitlebold">SET COPYTYPECHECK {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r14c1-t79 r1c2-t79"><a id="sthref1893"></a><a id="sthref1894"></a>Sets the suppression of the comparison of datatypes while inserting or appending to tables with the COPY command.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r15c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698854"><span class="xreftitlebold">SET DEF[INE] {<span class="underline">&amp;</span> | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r15c1-t79 r1c2-t79"><a id="sthref1895"></a><a id="sthref1896"></a><a id="sthref1897"></a>Sets the character used to prefix variables to <span class="italic">c</span>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r16c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698865"><span class="xreftitlebold">SET DESCRIBE [DEPTH {<span class="underline">1</span> | <span class="italic">n</span> | ALL}] [LINENUM {ON | <span class="underline">OFF</span>}] [INDENT {ON | <span class="underline">OFF</span>}]</span></a></p>
</td>
<td class="cellalignment1444" headers="r16c1-t79 r1c2-t79"><a id="sthref1898"></a>Sets the depth of the level to which you can recursively describe an object.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r17c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698923"><span class="xreftitlebold">SET ECHO {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r17c1-t79 r1c2-t79"><a id="sthref1899"></a><a id="sthref1900"></a>Controls whether the START command lists each command in a script as the command is executed.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r18c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678328"><span class="xreftitlebold">SET EDITF[ILE] <span class="italic">file_name</span>[.<span class="italic">ext</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r18c1-t79 r1c2-t79"><a id="sthref1901"></a><a id="sthref1902"></a>Sets the default filename for the<a id="sthref1903"></a> EDIT command.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r19c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698935"><span class="xreftitlebold">SET EMB[EDDED] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r19c1-t79 r1c2-t79"><a id="sthref1904"></a><a id="sthref1905"></a>Controls where on a page each report begins.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r20c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698945"><span class="xreftitlebold">SET ERRORL[OGGING] {ON | <span class="underline">OFF</span>} [TABLE [<span class="italic">schema.</span>]<span class="italic">tablename</span>] [TRUNCATE] [IDENTIFIER <span class="italic">identifier</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r20c1-t79 r1c2-t79"><a id="sthref1906"></a><a id="sthref1907"></a>Enables recording of SQL, PL/SQL and SQL*Plus errors to an error log table which you can query later.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r21c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BGBFAHDB"><span class="xreftitlebold">SET ESC[APE] {<span class="underline">\</span> | <span class="italic">c</span> | ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r21c1-t79 r1c2-t79"><a id="sthref1908"></a><a id="sthref1909"></a>Defines the character you enter as the escape<a id="sthref1910"></a> character.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r22c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BGBHDADJ"><span class="xreftitlebold">SET ESCCHAR {@ | ? | % | $ | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r22c1-t79 r1c2-t79"><a id="sthref1911"></a><a id="sthref1912"></a>Specifies a special character to escape in a filename. Prevents character translation causing an error.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r23c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BABEGEGC"><span class="xreftitlebold">SET EXITC[OMMIT] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r23c1-t79 r1c2-t79"><a id="sthref1913"></a><a id="sthref1914"></a>Specifies whether the default EXIT behavior is COMMIT or ROLLBACK.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r24c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698970"><span class="xreftitlebold">SET FEED[BACK] {<span class="underline">6</span> | <span class="italic">n</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r24c1-t79 r1c2-t79"><a id="sthref1915"></a><a id="sthref1916"></a>Displays the number of <a id="sthref1917"></a>records returned by a query when a query selects at least <span class="italic">n</span> records.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r25c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2698986"><span class="xreftitlebold">SET FLAGGER {<span class="underline">OFF</span> | ENTRY | INTERMED[IATE] | FULL}</span></a></p>
</td>
<td class="cellalignment1444" headers="r25c1-t79 r1c2-t79"><a id="sthref1918"></a><a id="sthref1919"></a>Checks to make sure that SQL statements conform to the ANSI/ISO SQL92 standard.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r26c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678409"><span class="xreftitlebold">SET FLU[SH] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r26c1-t79 r1c2-t79"><a id="sthref1920"></a><a id="sthref1921"></a>Controls when output is sent to the user&#39;s display device.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r27c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699001"><span class="xreftitlebold">SET HEA[DING] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r27c1-t79 r1c2-t79">Controls printing of column headings<a id="sthref1922"></a> in reports.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r28c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699036"><span class="xreftitlebold">SET HEADS[EP] { | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r28c1-t79 r1c2-t79"><a id="sthref1923"></a><a id="sthref1924"></a>Defines the character you enter as the heading separator character.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r29c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699050"><span class="xreftitlebold">SET INSTANCE [<span class="italic">instance_path</span> | <span class="underline">LOCAL</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r29c1-t79 r1c2-t79"><a id="sthref1925"></a>Changes<a id="sthref1926"></a> the default instance for your session to the specified instance path.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r30c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678481"><span class="xreftitlebold">SET LIN[ESIZE] {<span class="underline">80</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r30c1-t79 r1c2-t79"><a id="sthref1927"></a><a id="sthref1928"></a>Sets the total number of <a id="sthref1929"></a>characters that SQL*Plus displays on one line before beginning a new line.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r31c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699091"><span class="xreftitlebold">SET LOBOF[FSET] {<span class="underline">1</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r31c1-t79 r1c2-t79"><a id="sthref1930"></a><a id="sthref1931"></a>Sets the starting position from which BLOB<a id="sthref1932"></a>, BFILE, CLOB<a id="sthref1933"></a> and NCLOB<a id="sthref1934"></a> data is retrieved and displayed.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r32c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699109"><span class="xreftitlebold">SET LOGSOURCE [<span class="italic">pathname</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r32c1-t79 r1c2-t79"><a id="sthref1935"></a>Specifies the location from which archive logs are retrieved during recovery.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r33c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699121"><span class="xreftitlebold">SET LONG {<span class="underline">80</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r33c1-t79 r1c2-t79"><a id="sthref1936"></a><a id="sthref1937"></a>Sets <a id="sthref1938"></a>maximum width (in bytes) for displaying LONG, BLOB<a id="sthref1939"></a>, BFILE, CLOB<a id="sthref1940"></a>, NCLOB<a id="sthref1941"></a> and XMLType values; and for copying LONG values.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r34c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699146"><span class="xreftitlebold">SET LONGC[HUNKSIZE] {<span class="underline">80</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r34c1-t79 r1c2-t79"><a id="sthref1942"></a><a id="sthref1943"></a>Sets<a id="sthref1944"></a> the size (in bytes) of the increments in which SQL*Plus retrieves a LONG, BLOB<a id="sthref1945"></a>, BFILE, CLOB<a id="sthref1946"></a>, NCLOB<a id="sthref1947"></a> or XMLType value.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r35c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699173"><span class="xreftitlebold">SET MARK[UP] HTML [ON | <span class="underline">OFF</span>] [HEAD <span class="italic">text</span>] [BODY <span class="italic">text</span>] [TABLE <span class="italic">text</span>] [ENTMAP {<span class="underline">ON</span> | OFF}] [SPOOL {ON | <span class="underline">OFF</span>}] [PRE[FORMAT] {ON | <span class="underline">OFF</span>}]</span></a></p>
</td>
<td class="cellalignment1444" headers="r35c1-t79 r1c2-t79">Outputs HTML marked up text.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r36c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678637"><span class="xreftitlebold">SET NEWP[AGE] {<span class="underline">1</span> | <span class="italic">n</span> | NONE}</span></a></p>
</td>
<td class="cellalignment1444" headers="r36c1-t79 r1c2-t79"><a id="sthref1948"></a><a id="sthref1949"></a>Sets the number of blank lines to be printed from the top of each page to the top title<a id="sthref1950"></a>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r37c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699184"><span class="xreftitlebold">SET NULL <span class="italic">text</span></span></a></p>
</td>
<td class="cellalignment1444" headers="r37c1-t79 r1c2-t79"><a id="sthref1951"></a><a id="sthref1952"></a>Sets the text<a id="sthref1953"></a> that represents a null value in the result of a SQL SELECT command.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r38c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699195"><span class="xreftitlebold">SET NUMF[ORMAT] <span class="italic">format</span></span></a></p>
</td>
<td class="cellalignment1444" headers="r38c1-t79 r1c2-t79"><a id="sthref1954"></a><a id="sthref1955"></a>Sets the default format for displaying<a id="sthref1956"></a> numbers.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r39c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699209"><span class="xreftitlebold">SET NUM[WIDTH] {<span class="underline">10</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r39c1-t79 r1c2-t79"><a id="sthref1957"></a><a id="sthref1958"></a>Sets the default width for displaying numbers.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r40c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699247"><span class="xreftitlebold">SET PAGES[IZE] {<span class="underline">14</span> | <span class="italic">n</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r40c1-t79 r1c2-t79"><a id="sthref1959"></a><a id="sthref1960"></a>Sets<a id="sthref1961"></a> the number of lines in each page<a id="sthref1962"></a>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r41c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699261"><span class="xreftitlebold">SET PAU[SE] {ON | <span class="underline">OFF</span> | <span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r41c1-t79 r1c2-t79"><a id="sthref1963"></a><a id="sthref1964"></a>Enables you to control scrolling of your terminal when running reports.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r42c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699269"><span class="xreftitlebold">SET RECSEP {<span class="underline">WR[APPED]</span> | EA[CH] | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r42c1-t79 r1c2-t79">RECSEP tells SQL*Plus where to make the record separation.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r43c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699283"><span class="xreftitlebold">SET RECSEPCHAR { | <span class="italic">c</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r43c1-t79 r1c2-t79"><a id="sthref1965"></a><a id="sthref1966"></a><a id="sthref1967"></a><a id="sthref1968"></a>Display<a id="sthref1969"></a> or print record <a id="sthref1970"></a>separators.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r44c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BABDAGBI"><span class="xreftitlebold">SET SECUREDCOL {<span class="underline">OFF</span> | ON} [UNAUTH[ORIZED] <span class="italic">text</span>] [UNK[NOWN] <span class="italic">text</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r44c1-t79 r1c2-t79"><a id="sthref1971"></a>Sets how secure column values are displayed for users without permission to view a column and for columns with unknown security.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r45c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699298"><span class="xreftitlebold">SET SERVEROUT[PUT] {ON | OFF} [SIZE {<span class="italic">n</span> | <span class="underline">UNL[IMITED]</span>}] [FOR[MAT] {WRA[PPED] | WOR[D_WRAPPED] | TRU[NCATED]}]</span></a></p>
</td>
<td class="cellalignment1444" headers="r45c1-t79 r1c2-t79">Controls whether to display the output (that is, DBMS_OUTPUT PUT_LINE) of stored procedures or PL/SQL blocks in SQL*Plus.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r46c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678863"><span class="xreftitlebold">SET SHIFT[INOUT] {VIS[IBLE] | <span class="underline">INV[ISIBLE]</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r46c1-t79 r1c2-t79"><a id="sthref1972"></a><a id="sthref1973"></a>Enables correct alignment for terminals that display shift characters.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r47c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678887"><span class="xreftitlebold">SET SHOW[MODE] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r47c1-t79 r1c2-t79"><a id="sthref1974"></a>Controls whether SQL*Plus lists the old and new settings of a SQL*Plus system variable<a id="sthref1975"></a> when you change the setting with SET.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r48c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678904"><span class="xreftitlebold">SET SQLBL[ANKLINES] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r48c1-t79 r1c2-t79"><a id="sthref1976"></a>Controls whether SQL*Plus puts <a id="sthref1977"></a>blank lines within a SQL command or script.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r49c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699335"><span class="xreftitlebold">SET SQLC[ASE] {<span class="underline">MIX[ED]</span> | LO[WER] | UP[PER]}</span></a></p>
</td>
<td class="cellalignment1444" headers="r49c1-t79 r1c2-t79"><a id="sthref1978"></a><a id="sthref1979"></a>Converts the case of SQL commands and PL/SQL blocks just prior to execution.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r50c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678950"><span class="xreftitlebold">SET SQLCO[NTINUE] {<span class="underline">&gt;</span> | <span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r50c1-t79 r1c2-t79"><a id="sthref1980"></a><a id="sthref1981"></a>Sets the character sequence SQL*Plus displays as a prompt after you continue a SQL*Plus command on an additional line using a hyphen (&ndash;).</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r51c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2678981"><span class="xreftitlebold">SET SQLN[UMBER] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r51c1-t79 r1c2-t79"><a id="sthref1982"></a><a id="sthref1983"></a>Sets the prompt for the second and subsequent lines of a SQL command or PL/SQL block.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r52c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699351"><span class="xreftitlebold">SET SQLPLUSCOMPAT[IBILITY] {<span class="italic">x</span>.<span class="italic">y</span>[.<span class="italic">z</span>]}</span></a></p>
</td>
<td class="cellalignment1444" headers="r52c1-t79 r1c2-t79"><a id="sthref1984"></a><a id="sthref1985"></a>Sets the behavior or output format of VARIABLE to that of the release or version specified by <span class="italic">x</span>.<span class="italic">y</span>[.<span class="italic">z</span>].</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r53c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2679105"><span class="xreftitlebold">SET SQLPRE[FIX] {<span class="underline">#</span> | <span class="italic">c</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r53c1-t79 r1c2-t79"><a id="sthref1986"></a><a id="sthref1987"></a>Sets the SQL*Plus prefix character.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r54c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2679128"><span class="xreftitlebold">SET SQLP[ROMPT] {<span class="underline">SQL&gt;</span> | <span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r54c1-t79 r1c2-t79"><a id="sthref1988"></a><a id="sthref1989"></a><a id="sthref1990"></a><a id="sthref1991"></a>Sets the SQL*Plus command prompt.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r55c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2498515"><span class="xreftitlebold">SET SQLT[ERMINATOR] {<span class="underline">;</span> | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r55c1-t79 r1c2-t79"><a id="sthref1992"></a><a id="sthref1993"></a>Sets the character used to end and execute SQL commands<a id="sthref1994"></a> to <span class="italic">c</span>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r56c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2683419"><span class="xreftitlebold">SET SUF[FIX] {<span class="underline">SQL</span> | <span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r56c1-t79 r1c2-t79"><a id="sthref1995"></a><a id="sthref1996"></a>Sets the default file that SQL*Plus uses in commands that refer to scripts.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r57c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2683445"><span class="xreftitlebold">SET TAB {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r57c1-t79 r1c2-t79"><a id="sthref1997"></a><a id="sthref1998"></a>Determines how SQL*Plus formats white space in terminal output.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r58c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2683459"><span class="xreftitlebold">SET TERM[OUT] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r58c1-t79 r1c2-t79"><a id="sthref1999"></a><a id="sthref2000"></a>Controls the display of output generated by commands executed from a script.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r59c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2700163"><span class="xreftitlebold">SET TI[ME] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r59c1-t79 r1c2-t79"><a id="sthref2001"></a><a id="sthref2002"></a>Controls the display of the current time.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r60c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699400"><span class="xreftitlebold">SET TIMI[NG] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r60c1-t79 r1c2-t79"><a id="sthref2003"></a><a id="sthref2004"></a>Controls the display of timing statistics.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r61c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2683480"><span class="xreftitlebold">SET TRIM[OUT] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r61c1-t79 r1c2-t79"><a id="sthref2005"></a><a id="sthref2006"></a>Determines whether SQL*Plus puts trailing blanks at the end of each displayed line.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r62c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2683501"><span class="xreftitlebold">SET TRIMS[POOL] {ON | <span class="underline">OFF</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r62c1-t79 r1c2-t79"><a id="sthref2007"></a><a id="sthref2008"></a>Determines whether SQL*Plus puts trailing blanks at the end of each spooled line.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r63c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699420"><span class="xreftitlebold">SET UND[ERLINE] {<span class="underline">-</span> | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r63c1-t79 r1c2-t79"><a id="sthref2009"></a><a id="sthref2010"></a>Sets the character used to underline column headings<a id="sthref2011"></a> in SQL*Plus reports to <span class="italic">c</span>.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r64c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699432"><span class="xreftitlebold">SET VER[IFY] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r64c1-t79 r1c2-t79"><a id="sthref2012"></a><a id="sthref2013"></a>Controls whether SQL*Plus lists the text of a SQL statement or PL/SQL command before and after SQL*Plus replaces substitution variables with values.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r65c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#i2699438"><span class="xreftitlebold">SET WRA[P] {<span class="underline">ON</span> | OFF}</span></a></p>
</td>
<td class="cellalignment1444" headers="r65c1-t79 r1c2-t79"><a id="sthref2014"></a><a id="sthref2015"></a>Controls whether SQL*Plus truncates the display of a SELECTed row if it is too long for the current line width.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r66c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#CACFBBCI"><span class="xreftitlebold">SET XMLOPT[IMIZATIONCHECK] [ON|<span class="underline">OFF</span>]</span></a></p>
</td>
<td class="cellalignment1444" headers="r66c1-t79 r1c2-t79"><a id="sthref2016"></a><a id="sthref2017"></a>Specifies that only fully optimized XML queries and DML operations are executed. Only to assist in developing and debugging, not for production.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r67c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BGBBGDGE"><span class="xreftitlebold">SET XQUERY BASEURI {<span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r67c1-t79 r1c2-t79"><a id="sthref2018"></a><a id="sthref2019"></a>Defines the base URI to use. This is useful to change the prefix of the file to access when writing generic XQuery expressions.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r68c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BGBBHHGH"><span class="xreftitlebold">SET XQUERY ORDERING {UNORDERED | ORDERED | DEFAULT}</span></a></p>
</td>
<td class="cellalignment1444" headers="r68c1-t79 r1c2-t79"><a id="sthref2020"></a><a id="sthref2021"></a>Controls the ordering of results from an XQuery.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r69c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BGBIIGDC"><span class="xreftitlebold">SET XQUERY NODE {BYVALUE | BYREFERENCE | DEFAULT}</span></a></p>
</td>
<td class="cellalignment1444" headers="r69c1-t79 r1c2-t79"><a id="sthref2022"></a><a id="sthref2023"></a>Sets the preservation mode for notes created or returned.</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r70c1-t79" headers="r1c1-t79">
<p class="synopsis"><a href="#BGBJDFBC"><span class="xreftitlebold">SET XQUERY CONTEXT {<span class="italic">text</span>}</span></a></p>
</td>
<td class="cellalignment1444" headers="r70c1-t79 r1c2-t79"><a id="sthref2024"></a><a id="sthref2025"></a>Specifies an XQuery context item which can be either a node or a value.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformalwidemax" -->
<div id="SQPUG061" class="refsect2"><a id="i2698573"></a>
<hr/>
<h2 class="refsect2">SET APPI[NFO]{ON | <span class="underline">OFF</span> | <span class="italic">text</span>}</h2>
<p><a id="sthref2026"></a><a id="sthref2027"></a>Sets automatic <a id="sthref2028"></a>registering of scripts through the <a id="sthref2029"></a>DBMS_APPLICATION_INFO package.</p>
<p>This enables the performance and resource usage of each script to be monitored by your DBA. The registered name appears in the MODULE column of the <a id="sthref2030"></a>V$SESSION and <a id="sthref2031"></a>V$SQLAREA virtual tables. You can also read the registered name using the DBMS_APPLICATION_INFO.READ_MODULE procedure.</p>
<p>ON registers scripts invoked by the @, @@ or START commands. OFF disables registering of scripts. Instead, the current value of text is registered. <span class="italic">text</span> specifies the text to register when no script is being run or when APPINFO is OFF, which is the default. The default for <span class="italic">text</span> is &#34;SQL*Plus&#34;. If you enter multiple words for <span class="italic">text</span>, you must enclose them in quotes. The maximum length for <span class="italic">text</span> is limited by the DBMS_APPLICATION_INFO package.</p>
<p>The registered name has the format <span class="italic">nn</span>@<span class="italic">xfilename</span> where: <span class="italic">nn</span> is the depth level of script; <span class="italic">x</span> is &#39;&lt;&#39; when the script name is truncated, otherwise, it is blank; and <span class="italic">filename</span> is the script name, possibly truncated to the length allowed by the DBMS_APPLICATION_INFO package interface.</p>
<p>For more information on the DBMS_APPLICATION_INFO package, see the <a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2032"></a>Example</p>
<p>To display the value of APPINFO, as it is SET OFF by default, enter</p>
<pre>SET APPINFO ON
SHOW APPINFO
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET APPINFO" summary="Shows the current setting for APPINFO." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t80">
<pre>APPINFO is ON and set to &#34;SQL*Plus&#34;
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To change the default text, enter</p>
<pre>SET APPINFO &#39;This is SQL*Plus&#39;
</pre>
<p>To make sure that registration has taken place, enter</p>
<pre>VARIABLE MOD VARCHAR2(50)
VARIABLE ACT VARCHAR2(40)
EXECUTE DBMS_APPLICATION_INFO.READ_MODULE(:MOD, :ACT);
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET APPINFO" summary="Shows the output message after executing a PL/SQL procedure." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t81">
<pre>PL/SQL procedure successfully completed.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<pre>PRINT MOD
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET APPINFO" summary="Shows the output from PRINT MOD." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t82">
<pre>MOD
---------------------------------------------------
This is SQL*Plus
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To change APPINFO back to its default setting, enter</p>
<pre>SET APPINFO OFF
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG062" class="refsect2"><a id="i2698625"></a>
<hr/>
<h2 class="refsect2">SET ARRAY[SIZE] {<span class="underline">15</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2033"></a><a id="sthref2034"></a>Sets the number of<a id="sthref2035"></a> rows that SQL*Plus will fetch from the database at one time.</p>
<p>Valid values are 1 to 5000. A large value increases the efficiency of queries and subqueries that fetch many rows, but requires more memory. Values over approximately 100 provide little added performance. ARRAYSIZE has no effect on the results of SQL*Plus operations other than increasing efficiency.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG063" class="refsect2"><a id="i2698639"></a>
<hr/>
<h2 class="refsect2">SET AUTO[COMMIT]{ON | <span class="underline">OFF</span> | IMM[EDIATE] | <span class="italic">n</span>}</h2>
<p><a id="sthref2036"></a><a id="sthref2037"></a>Controls when Oracle Database commits pending changes to the database after SQL or PL/SQL commands<a id="sthref2038"></a>.</p>
<p>ON commits pending changes to the database after Oracle Database executes each successful INSERT, UPDATE, or DELETE, or PL/SQL block. OFF suppresses automatic committing so that you must commit changes manually (for example, with the SQL command COMMIT). IMMEDIATE functions in the same manner as ON. <span class="italic">n</span> commits pending changes to the database after Oracle Database executes <span class="italic">n</span> successful SQL INSERT, UPDATE, or DELETE commands, or PL/SQL blocks. <span class="italic">n</span> cannot be less than zero or greater than 2,000,000,000. The statement counter is reset to zero after successful completion of <span class="italic">n</span> INSERT, UPDATE or DELETE commands or PL/SQL blocks, a commit, a rollback, or a SET AUTOCOMMIT command.</p>
<p>SET AUTOCOMMIT does not alter the commit behavior when SQL*Plus exits. Any uncommitted data is committed by default.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For this feature, a PL/SQL block is considered one transaction, regardless of the actual number of SQL commands contained within it.</div>
</div>
<!-- class="refsect2" -->
<div id="SQPUG064" class="refsect2"><a id="i2698656"></a>
<hr/>
<h2 class="refsect2">SET AUTOP[RINT] {ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2039"></a><a id="sthref2040"></a>Sets the automatic printing of bind variables.</p>
<p>ON or OFF controls whether SQL*Plus automatically displays <a id="sthref2041"></a>bind <a id="sthref2042"></a>variables (referenced in a successful PL/SQL block or used in an EXECUTE command).</p>
<p>See <a href="ch_twelve031.htm#i2698143">PRINT</a> for more information about displaying bind variables.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG065" class="refsect2"><a id="i2698666"></a>
<hr/>
<h2 class="refsect2">SET AUTORECOVERY [ON | <span class="underline">OFF</span>]</h2>
<p><a id="sthref2043"></a><a id="sthref2044"></a>ON sets the RECOVER command to automatically apply the default filenames of archived redo log files needed during recovery.</p>
<p>No interaction is needed, provided the necessary files are in the expected locations with the expected names. The filenames used are derived from the values of the initialization parameters LOG_ARCHIVE_DEST and LOG_ARCHIVE_FORMAT.</p>
<p>OFF, the default option, requires that you enter the filenames manually or accept the suggested default filename given. See <a href="ch_twelve033.htm#i2698238">RECOVER</a> for more information about database recovery.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2045"></a>Example</p>
<p>To set the recovery mode to AUTOMATIC, enter</p>
<pre>SET AUTORECOVERY ON
RECOVER DATABASE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG066" class="refsect2"><a id="i2698680"></a>
<hr/>
<h2 class="refsect2">SET AUTOT[RACE] {ON | <span class="underline">OFF</span> | TRACE[ONLY]} [EXP[LAIN]] [STAT[ISTICS]]</h2>
<p><a id="sthref2046"></a><a id="sthref2047"></a>Displays a <a id="sthref2048"></a>report on the execution of successful SQL <a id="sthref2049"></a>DML statements (such as SELECT, INSERT, UPDATE, DELETE or MERGE).</p>
<p>The report can include<a id="sthref2050"></a> execution statistics and the <a id="sthref2051"></a>query execution path.</p>
<p>SQL*Plus report output may differ for DML if dynamic sampling is in effect.</p>
<p>OFF does not display a trace report. ON displays a trace report. TRACEONLY displays a trace report, but does not print query data, if any. EXPLAIN shows the query execution path by performing an EXPLAIN PLAN. STATISTICS displays SQL statement statistics. Information about EXPLAIN PLAN is documented in the <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
<p>Using ON or TRACEONLY with no explicit options defaults to EXPLAIN STATISTICS.</p>
<p>The TRACEONLY option may be useful to suppress the query data of large queries. If STATISTICS is specified, SQL*Plus still fetches the query data from the server, however, the data is not displayed.</p>
<p>The AUTOTRACE report is printed after the statement has successfully completed.</p>
<p>Information about Execution Plans and the statistics is documented in the <a class="olink TGDBA" href="../TGDBA/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a>.</p>
<p>When SQL*Plus produces a STATISTICS report, a second connection to the database is automatically created. This connection is closed when the STATISTICS option is set to OFF, or you log out of SQL*Plus.</p>
<p>The formatting of your AUTOTRACE report may vary depending on the version of the server to which you are connected and the configuration of the server. The additional information and tabular output of AUTOTRACE PLAN is supported when connecting to Oracle Database 10<span class="italic">g</span> (Release 10.1) or later. When you connect to an earlier database, the older form or AUTOTRACE reporting is used.</p>
<p>AUTOTRACE is not available when FIPS flagging is enabled.</p>
<p>See <a href="ch_eight.htm#i1037226">Tracing Statements</a> for more information on AUTOTRACE.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG067" class="refsect2"><a id="i2698691"></a>
<hr/>
<h2 class="refsect2">SET BLO[CKTERMINATOR] {. | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2052"></a><a id="sthref2053"></a><a id="sthref2054"></a>Sets the character used to end PL/SQL blocks<a id="sthref2055"></a> to <span class="italic">c</span>.</p>
<p>It cannot be an alphanumeric character or a whitespace. To execute the block, you must issue a RUN or / (slash) command.</p>
<p>OFF means that SQL*Plus recognizes no PL/SQL block terminator. ON changes the value of <span class="italic">c</span> back to the default period (.), not the most recently used character.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG068" class="refsect2"><a id="i2698702"></a>
<hr/>
<h2 class="refsect2">SET CMDS[EP] {; | <span class="italic">c</span> | ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2056"></a><a id="sthref2057"></a>Sets the non-alphanumeric character used to separate multiple SQL*Plus commands entered on one line to <span class="italic">c</span>.</p>
<p>ON or OFF controls whether you can enter multiple commands on a line. ON automatically sets the command separator character to a semicolon (;).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2058"></a>Example</p>
<p>To specify a title with TTITLE and format a column with COLUMN, both on the same line, enter</p>
<pre>SET CMDSEP +
TTITLE LEFT &#39;SALARIES&#39; + COLUMN SALARY FORMAT $99,999
SELECT LAST_NAME, SALARY FROM EMP_DETAILS_VIEW
WHERE JOB_ID = &#39;SH_CLERK&#39;;
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET CMDSEP" summary="Shows output from a script displaying combined use of TTITLE and COLUMN to set column headings and format." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t84">
<pre>SALARIES
LAST_NAME                   SALARY
------------------------- --------
Taylor                      $3,200
Fleaur                      $3,100
Sullivan                    $2,500
Geoni                       $2,800
Sarchand                    $4,200
Bull                        $4,100
Dellinger                   $3,400
Cabrio                      $3,000
Chung                       $3,800
Dilly                       $3,600
Gates                       $2,900
Perkins                     $2,500
Bell                        $4,000
Everett                     $3,900
McCain                      $3,200
Jones                       $2,800

SALARIES
LAST_NAME                   SALARY
------------------------- --------
Walsh                       $3,100
Feeney                      $3,000
OConnell                    $2,600
Grant                       $2,600

20 rows selected.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG303" class="refsect2"><a id="CACFCHHA"></a>
<hr/>
<h2 class="refsect2">SET COLINVI[SIBLE] [ON | <span class="underline">OFF</span>]</h2>
<p><a id="sthref2059"></a><a id="sthref2060"></a>ON sets the DESCRIBE command to enable the display of information about an invisible column.</p>
<p>SET COLINVISIBLE has no effect on query statments that contain invisible columns. To retrieve data in an invisible column, explicitly specify the column in your query. For more detailed information, see the <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2061"></a>Example</p>
<p>To view information about an invisible column with the DESCRIBE command.</p>
<p>Create a table with an invisible column.</p>
<pre>create table test_invisible_cols (emp_id number, emp_info char(20),
                                  emp_acc_no number invisible);
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET COLSEP" summary="Shows the output from a script with the column separator &#34;|&#34;." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t85">
<pre>Table created.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>Use the DESCRIBE command to list the table columns.</p>
<pre>describe test_invisible_cols
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET COLSEP" summary="Shows the output from a script with the column separator &#34;|&#34;." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t86">
<pre>Name                                      Null?    Type
----------------------------------------- -------- -----------------------
EMP_ID                                             NUMBER
EMP_INFO                                           CHAR(20)
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>Note that with the default SET COLINVISIBLE OFF, the invisible column does not appear in the result. Change the default setting of SET COLINVISIBLE to ON.</p>
<pre>SET COLINVISIBLE ON
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET COLSEP" summary="Shows the output from a script with the column separator &#34;|&#34;." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t87">
<pre>colinvisible ON
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>Now use the DESCRIBE command again to list the table columns. The invisible column now appears in the output.</p>
<pre>describe test_invisible_cols
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET COLSEP" summary="Shows the output from a script with the column separator &#34;|&#34;." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t88">
<pre>Name                                      Null?    Type
----------------------------------------- -------- -----------------------
EMP_ID                                             NUMBER
EMP_INFO                                           CHAR(20)
EMP_ACC_NO(INVISIBLE)                              NUMBER
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG069" class="refsect2"><a id="i2698758"></a>
<hr/>
<h2 class="refsect2">SET COLSEP { | <span class="italic">text</span>}</h2>
<p>S<a id="sthref2062"></a><a id="sthref2063"></a>ets the column separator character printed between <a id="sthref2064"></a>columns in output.</p>
<p>If the COLSEP variable contains blanks or punctuation characters, you must enclose it with single quotes. The default value for <span class="italic">text</span> is a single space.</p>
<p>In multi-line rows, the column separator does not print between columns that begin on different lines. The column separator does not appear on blank lines produced by <a id="sthref2065"></a>BREAK ... SKIP <span class="italic">n</span> and does not overwrite the record separator. See <a href="#i2699269">SET RECSEP {<span class="underline">WR[APPED]</span> | EA[CH] | OFF}</a> for more information.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2066"></a>Example</p>
<p>To set the column separator to &#34;|&#34; enter</p>
<pre>SET MARKUP HTML PREFORMAT ON
SET COLSEP &#39;|&#39;
SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID
FROM EMP_DETAILS_VIEW
WHERE DEPARTMENT_ID = 20;
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET COLSEP" summary="Shows the output from a script with the column separator &#34;|&#34;." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t89">
<pre>LAST_NAME                |JOB_ID    |DEPARTMENT_ID
-------------------------|----------|-------------
Hartstein                |MK_MAN    |           20
Fay                      |MK_REP    |           20
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG070" class="refsect2"><a id="i2698818"></a>
<hr/>
<h2 class="refsect2">SET CON[CAT] {. | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2067"></a><a id="sthref2068"></a><a id="sthref2069"></a>Sets the character used to terminate a substitution variable<a id="sthref2070"></a> reference when SQL*Plus would otherwise interpret the next character as a part of the variable name.</p>
<p>SQL*Plus resets the value of CONCAT to a period when you switch CONCAT on.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG071" class="refsect2"><a id="i2698834"></a>
<hr/>
<h2 class="refsect2">SET COPYC[OMMIT] {<span class="underline">0</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2071"></a><a id="sthref2072"></a>Controls the number of rows after which the COPY command commits changes to the database.</p>
<p>COPY commits<a id="sthref2073"></a> rows to the destination database each time it copies <span class="italic">n</span> row batches. Valid values are zero to 5000. You can set the size of a batch with the ARRAYSIZE variable. If you set COPYCOMMIT to zero, COPY performs a commit only at the end of a copy operation.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG072" class="refsect2"><a id="i2698844"></a>
<hr/>
<h2 class="refsect2">SET COPYTYPECHECK {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2074"></a><a id="sthref2075"></a>Sets the suppression of the comparison of datatypes while inserting or appending to tables with the COPY command.</p>
<p>This is to facilitate copying to DB2, which requires that a <a id="sthref2076"></a>CHAR be copied to a <a id="sthref2077"></a>DB2 DATE.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG073" class="refsect2"><a id="i2698854"></a>
<hr/>
<h2 class="refsect2">SET DEF[INE] {<span class="underline">&amp;</span> | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2078"></a><a id="sthref2079"></a><a id="sthref2080"></a>Sets the character used to prefix <a id="sthref2081"></a>substitution variables to <span class="italic">c</span>.</p>
<p>ON or OFF controls whether SQL*Plus will scan commands for substitution variables and replace them with their values. ON changes the value of <span class="italic">c</span> back to the default &#39;&amp;&#39;, not the most recently used character. The setting of DEFINE to OFF overrides the setting of the SCAN variable.</p>
<p>See <a href="apc.htm#i656840">SET SCAN {ON|OFF} (obsolete)</a> for more information on the SCAN variable.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG074" class="refsect2"><a id="i2698865"></a>
<hr/>
<h2 class="refsect2">SET DESCRIBE [DEPTH {<span class="underline">1</span> | <span class="italic">n</span> | ALL}] [LINENUM {ON | <span class="underline">OFF</span>}] [INDENT {ON | <span class="underline">OFF</span>}]</h2>
<p><a id="sthref2082"></a>Sets the depth of the level to which you can recursively describe an object.</p>
<p><a id="sthref2083"></a>The valid range of the DEPTH clause is from 1 to 50. If you SET DESCRIBE DEPTH ALL, then the depth will be set to 50, which is the maximum level allowed. You can also display the line number and indentation of the attribute or column name when an object contains multiple object types. Use the SET LINESIZE command to control the width of the data displayed.</p>
<p>See <a href="ch_twelve019.htm#i2697562">&nbsp;DESCRIBE</a> for more information about describing objects.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2084"></a>Example</p>
<p>To create an object type ADDRESS, enter</p>
<pre>CREATE TYPE ADDRESS AS OBJECT
  ( STREET  VARCHAR2(20),
    CITY    VARCHAR2(20)
  );
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET DESCRIBE" summary="Shows the output message after creating a type address." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t90">
<pre>Type created
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To create the table EMPLOYEE that contains a nested object, EMPADDR, of type ADDRESS, enter</p>
<pre>CREATE TABLE EMPLOYEE
  (LAST_NAME VARCHAR2(30),
   EMPADDR ADDRESS,
   JOB_ID VARCHAR2(20),
   SALARY NUMBER(7,2)
  );
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET DESCRIBE" summary="Shows the output message after creating the table employee." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t91">
<pre>Table created
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To describe the table EMPLOYEE to a depth of two levels, and to indent the output and display line numbers, enter:</p>
<pre>SET DESCRIBE DEPTH 2 LINENUM ON INDENT ON
DESCRIBE employee
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET DESCRIBE" summary="Shows the numbered and indented columns and types of the table employee." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t92">
<pre>       Name                            Null?    Type
       ------------------------------- -------- --------------------------
1      LAST_NAME                                VARCHAR2(30)
2      EMPADDR                                  ADDRESS
3    2   STREET                                 VARCHAR2(20)
4    2   CITY                                   VARCHAR2(20)
5      JOB_ID                                   VARCHAR2(20)
6      SALARY                                   NUMBER(7,2)
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG075" class="refsect2"><a id="i2698923"></a>
<hr/>
<h2 class="refsect2">SET ECHO {ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2085"></a><a id="sthref2086"></a><a id="sthref2087"></a>Controls whether or not to echo commands in a script that is executed with @, @@ or START. ON displays the <a id="sthref2088"></a>commands on screen. OFF suppresses the display. ECHO does not affect the display of commands you enter interactively or redirect to SQL*Plus from the operating system.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG076" class="refsect2"><a id="i2678328"></a>
<hr/>
<h2 class="refsect2">SET EDITF[ILE] <span class="italic">file_name</span>[.<span class="italic">ext</span>]</h2>
<p><a id="sthref2089"></a><a id="sthref2090"></a>Sets the default filename for the <a id="sthref2091"></a>EDIT command. See <a href="ch_twelve021.htm#i2675783">EDIT</a> for more information about the EDIT command. The default filename for the EDIT command is afiedt.buf which is the SQL buffer.<a id="sthref2092"></a> The buffer has no command history list and does not record SQL*Plus commands.</p>
<p>You can include a path and/or file extension. See <a href="#i2683419">SET SUF[FIX] {<span class="underline">SQL</span> | <span class="italic">text</span>}</a> for information on changing the default extension. The default filename and maximum filename length are operating system specific.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG077" class="refsect2"><a id="i2698935"></a>
<hr/>
<h2 class="refsect2">SET EMB[EDDED] {ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2093"></a><a id="sthref2094"></a>Controls where on a page each report begins.</p>
<p>OFF forces each <a id="sthref2095"></a>report to start at the top of a new page. ON enables a report to begin anywhere on a page. Set EMBEDDED to ON when you want a report to begin printing immediately following the end of the previously run report.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG160" class="refsect2"><a id="i2698945"></a>
<hr/>
<h2 class="refsect2">SET ERRORL[OGGING] {ON | <span class="underline">OFF</span>} [TABLE [<span class="italic">schema.</span>]<span class="italic">tablename</span>] [TRUNCATE] [IDENTIFIER <span class="italic">identifier</span>]</h2>
<p><a id="sthref2096"></a><a id="sthref2097"></a>Turns SQL*Plus error logging ON or OFF. Error logging records SQL, PL/SQL and SQL*Plus errors and associated parameters in an error log table. You can then query the log table to review errors resulting from a query. When error logging is ON, errors are recorded whether the query is run interactively or from a script. This is particularly useful for capturing errors generated from long running queries and avoids capturing all output using the SPOOL command, or having to remain present during the run.</p>
<p>By default, errors are written to a the table SPERRORLOG in your schema. If this table does not exist, it is created automatically. You can also use the TABLE <span class="italic">schema.tablename</span> option to specify other tables to use. When using a table other than SPERRORLOG, it must already exist, and you must have access to it. See <a href="#BGBHCGEB">Creating a User Defined Error Log Table</a>.</p>
<p>If an internal error occurs, to avoid recursion errors caused by the errorlog calling itself, errorlogging is automatically set OFF.</p>
<p>Error logging is set OFF by default.</p>
<p class="synopsis">ON</p>
<p>Writes ORA, PLS and SP2 errors to the default table, SPERRORLOG.</p>
<p class="synopsis">OFF</p>
<p>Disables error .</p>
<p class="synopsis">TABLE [<span class="italic">schema.</span>]<span class="italic">tablename</span></p>
<p>Specifies a user defined table to use instead of the default, SPERRORLOG. If you omit <span class="italic">schema.</span> the table is created in the current schema. The table you specify must exist, and you must have access permissions.</p>
<p>If the table specified does not exist, or you do not have access, an error message is displayed and the default table, SPERRORLOG, is used.</p>
<p class="synopsis">TRUNCATE</p>
<p>Clears all existing rows in the error log table and begins recording errors from the current session.</p>
<p class="synopsis">IDENTIFIER <span class="italic">identifier</span></p>
<p>A user defined string to identify errors. You can use it to identify errors from a particular session or from a particular version of a query.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BGBHCGEB"></a>Creating a User Defined Error Log Table</p>
<p>You can create one or more error log tables to use other than the default. Before specifying a user defined error log table with the TABLE <span class="italic">schema.tablename</span> option, you must create it and ensure that you have permissions to access it. The error log table has the following column definitions:</p>
<div id="SQPUG604" class="tblformal">
<p class="titleintable"><a id="sthref2098"></a><a id="BGBDDDGA"></a>Table 12-4 SQL*Plus Error Log Column Definitions</p>
<table class="cellalignment1447" title="SQL*Plus Error Log Column Definitions " summary="Table 12-4 tabulates column definitions for a SQL*Plus Error Log table. It has 7 rows of data in 3 columns and 1 header row. The columns are titled Column, Type and Description." dir="ltr">
<thead>
<tr class="cellalignment1437">
<th class="cellalignment1448" id="r1c1-t93">Column</th>
<th class="cellalignment1448" id="r1c2-t93">Type</th>
<th class="cellalignment1448" id="r1c3-t93">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r2c1-t93" headers="r1c1-t93">
<p>username</p>
</td>
<td class="cellalignment1444" headers="r2c1-t93 r1c2-t93">
<p>VARCHAR(256)</p>
</td>
<td class="cellalignment1444" headers="r2c1-t93 r1c3-t93">
<p>Oracle account name.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r3c1-t93" headers="r1c1-t93">
<p>timestamp</p>
</td>
<td class="cellalignment1444" headers="r3c1-t93 r1c2-t93">
<p>TIMESTAMP</p>
</td>
<td class="cellalignment1444" headers="r3c1-t93 r1c3-t93">
<p>Time when the error occurred.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r4c1-t93" headers="r1c1-t93">
<p>script</p>
</td>
<td class="cellalignment1444" headers="r4c1-t93 r1c2-t93">
<p>VARCHAR(1024)</p>
</td>
<td class="cellalignment1444" headers="r4c1-t93 r1c3-t93">
<p>Name of the originating script if applicable.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r5c1-t93" headers="r1c1-t93">
<p>identifier</p>
</td>
<td class="cellalignment1444" headers="r5c1-t93 r1c2-t93">
<p>VARCHAR(256)</p>
</td>
<td class="cellalignment1444" headers="r5c1-t93 r1c3-t93">
<p>User defined identifier string.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r6c1-t93" headers="r1c1-t93">
<p>message</p>
</td>
<td class="cellalignment1444" headers="r6c1-t93 r1c2-t93">
<p>CLOB</p>
</td>
<td class="cellalignment1444" headers="r6c1-t93 r1c3-t93">
<p>ORA, PLA or SP2 error message. No feed back messages are included. For example, &#34;PL/SQL Block Created&#34; is not recorded.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r7c1-t93" headers="r1c1-t93">
<p>statement</p>
</td>
<td class="cellalignment1444" headers="r7c1-t93 r1c2-t93">
<p>CLOB</p>
</td>
<td class="cellalignment1444" headers="r7c1-t93 r1c3-t93">
<p>The statement causing the error.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2099"></a>Using User Defined Error Log Tables</p>
<p>To use a user defined log table, you must have permission to access the table, and you must issue the SET ERRORLOGGING command with the TABLE <span class="italic">schema.tablename</span> option to identify the error log table and the schema if applicable.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2100"></a>Querying Error Log Tables</p>
<p>To view the records recorded in an error log table, you query the columns you want to view as for any table. The columns available are shown in <a href="#BGBDDDGA">Table 12-4, &#34;SQL*Plus Error Log Column Definitions&#34;</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2101"></a>Example</p>
<p>To use the default error log table to record query errors from a script, <span class="italic">myfile.sql</span>, which contains the following:</p>
<pre>VARIABLE U REFCURSOR
BEGIN
  OPEN :U FOR SELECT * FROM DEPT;
END;
/

SHOW ERRORS PROCEDURE &#39;SSS&#39;

SET GARBAGE

SELECT * 
FROM
GARBAGE
;
</pre>
<p>Enter the following:</p>
<pre>SET ERRORLOGGING ON
@myfile
</pre>
<p>which produces the following output:</p>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from myfile script" summary="Example output from myfile script using SET ERRORLOGGING ON." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t94">
<pre>open :u for select * from dept;
                          *
ERROR at line 2:
ORA-6550: line 2, column 29:
PLS-00201: ORA-00942: table or view does not exist
ORA-6550: line 2, column 16:
PL/SQL: SQL Statement ignored

ERROR:
ORA-00907: missing right parenthesis

SP2-0158: unknown SET option &#34;garbage&#34;

garbage
*
ERROR at line 3:
ORA-00942: table or view does not exist
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To view the errror log written to the default error log table, SPERRORLOG, enter:</p>
<pre>SELECT TIMESTAMP, USERNAME, SCRIPT, IDENTIFIER, STATEMENT, MESSAGE
FROM SPERRORLOG;
</pre>
<p>which produces the following output:</p>
<div class="inftblinformalwide">
<table class="cellalignment1443" title="SQL*Plus Error Log Contents" summary="Displays the error log content from the example query. It has 7 rows of data in 6 columns and 1 heading row. The column headings are: timestamp, username, script, identifier, statement and message." dir="ltr">
<thead>
<tr class="cellalignment1437">
<th class="cellalignment1448" id="r1c1-t95">TIMESTAMP</th>
<th class="cellalignment1448" id="r1c2-t95">USERNAME</th>
<th class="cellalignment1448" id="r1c3-t95">SCRIPT</th>
<th class="cellalignment1448" id="r1c4-t95">IDENTIFIER</th>
<th class="cellalignment1448" id="r1c5-t95">STATEMENT</th>
<th class="cellalignment1448" id="r1c6-t95">MESSAGE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r2c1-t95" headers="r1c1-t95">Mon May 08 21:30:03 2006</td>
<td class="cellalignment1444" headers="r2c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r2c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r2c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r2c1-t95 r1c5-t95">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r2c1-t95 r1c6-t95">ORA-06550: line 2, column 27:</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r3c1-t95" headers="r1c1-t95">Mon May 08 21:30:05 2006</td>
<td class="cellalignment1444" headers="r3c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r3c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r3c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r3c1-t95 r1c5-t95">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r3c1-t95 r1c6-t95">PL/SQL: ORA-00942: table or view does not exist</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r4c1-t95" headers="r1c1-t95">Mon May 08 21:30:05 2006</td>
<td class="cellalignment1444" headers="r4c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r4c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r4c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r4c1-t95 r1c5-t95">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r4c1-t95 r1c6-t95">ORA-06550: line 2, column 13:</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r5c1-t95" headers="r1c1-t95">Mon May 08 21:30:05 2006</td>
<td class="cellalignment1444" headers="r5c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r5c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r5c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r5c1-t95 r1c5-t95">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r5c1-t95 r1c6-t95">PL/SQL: SQL Statement ignored</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r6c1-t95" headers="r1c1-t95">Mon May 08 21:30:06 2006</td>
<td class="cellalignment1444" headers="r6c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r6c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r6c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r6c1-t95 r1c5-t95">show errors procedure &#34;sss&#34;</td>
<td class="cellalignment1444" headers="r6c1-t95 r1c6-t95">ORA-00907: missing right parenthesis</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r7c1-t95" headers="r1c1-t95">Mon May 08 21:30:09 2006</td>
<td class="cellalignment1444" headers="r7c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r7c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r7c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r7c1-t95 r1c5-t95">set garbage</td>
<td class="cellalignment1444" headers="r7c1-t95 r1c6-t95">SP2-0158: unknown SET option &#34;garbage&#34;</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r8c1-t95" headers="r1c1-t95">Mon May 08 21:30:10 2006</td>
<td class="cellalignment1444" headers="r8c1-t95 r1c2-t95">SYSTEM</td>
<td class="cellalignment1444" headers="r8c1-t95 r1c3-t95">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r8c1-t95 r1c4-t95">&nbsp;</td>
<td class="cellalignment1444" headers="r8c1-t95 r1c5-t95">garbage</td>
<td class="cellalignment1444" headers="r8c1-t95 r1c6-t95">ORA-00942: table or view does not exist</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2102"></a>Example 2</p>
<p>To use a user defined error log table to record query errors from a script, <span class="italic">myfile.sql</span>, which contains the following:</p>
<pre>VARIABLE U REFCURSOR
BEGIN
  OPEN :U FOR SELECT * FROM DEPT;
END;
/

SHOW ERRORS PROCEDURE &#39;SSS&#39;

SET GARBAGE

SELECT * 
FROM
GARBAGE
;
</pre>
<p>Enter the following:</p>
<pre>SET ERRORLOGGING ON
@MYFILE
</pre>
<p>which produces the following output:</p>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from myfile script" summary="Example output from myfile script using SET ERRORLOGGING ON." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t96">
<pre>open :u for select * from dept;
                          *
ERROR at line 2:
ORA-6550: line 2, column 29:
PLS-00201: ORA-00942: table or view does not exist
ORA-6550: line 2, column 16:
PL/SQL: SQL Statement ignored

ERROR:
ORA-00907: missing right parenthesis

SP2-0158: unknown SET option &#34;garbage&#34;

garbage
*
ERROR at line 3:
ORA-00942: table or view does not exist
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To view the errror log written to the default error log table, SPERRORLOG, enter:</p>
<pre>SELECT TIMESTAMP, USERNAME, SCRIPT, IDENTIFIER, STATEMENT, MESSAGE
FROM SPERRORLOG;
</pre>
<p>which produces the following output:</p>
<div class="inftblinformalwide">
<table class="cellalignment1443" title="SQL*Plus Error Log Contents" summary="Displays the error log content from the example query. It has 7 rows of data in 6 columns and 1 heading row. The column headings are: timestamp, username, script, identifier, statement and message." dir="ltr">
<thead>
<tr class="cellalignment1437">
<th class="cellalignment1448" id="r1c1-t97">TIMESTAMP</th>
<th class="cellalignment1448" id="r1c2-t97">USERNAME</th>
<th class="cellalignment1448" id="r1c3-t97">SCRIPT</th>
<th class="cellalignment1448" id="r1c4-t97">IDENTIFIER</th>
<th class="cellalignment1448" id="r1c5-t97">STATEMENT</th>
<th class="cellalignment1448" id="r1c6-t97">MESSAGE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r2c1-t97" headers="r1c1-t97">Mon May 08 21:30:03 2006</td>
<td class="cellalignment1444" headers="r2c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r2c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r2c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r2c1-t97 r1c5-t97">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r2c1-t97 r1c6-t97">ORA-06550: line 2, column 27:</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r3c1-t97" headers="r1c1-t97">Mon May 08 21:30:05 2006</td>
<td class="cellalignment1444" headers="r3c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r3c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r3c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r3c1-t97 r1c5-t97">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r3c1-t97 r1c6-t97">PL/SQL: ORA-00942: table or view does not exist</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r4c1-t97" headers="r1c1-t97">Mon May 08 21:30:05 2006</td>
<td class="cellalignment1444" headers="r4c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r4c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r4c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r4c1-t97 r1c5-t97">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r4c1-t97 r1c6-t97">ORA-06550: line 2, column 13:</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r5c1-t97" headers="r1c1-t97">Mon May 08 21:30:05 2006</td>
<td class="cellalignment1444" headers="r5c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r5c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r5c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r5c1-t97 r1c5-t97">open :u for select * from dept;</td>
<td class="cellalignment1444" headers="r5c1-t97 r1c6-t97">PL/SQL: SQL Statement ignored</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r6c1-t97" headers="r1c1-t97">Mon May 08 21:30:06 2006</td>
<td class="cellalignment1444" headers="r6c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r6c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r6c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r6c1-t97 r1c5-t97">show errors procedure &#34;sss&#34;</td>
<td class="cellalignment1444" headers="r6c1-t97 r1c6-t97">ORA-00907: missing right parenthesis</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r7c1-t97" headers="r1c1-t97">Mon May 08 21:30:09 2006</td>
<td class="cellalignment1444" headers="r7c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r7c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r7c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r7c1-t97 r1c5-t97">set garbage</td>
<td class="cellalignment1444" headers="r7c1-t97 r1c6-t97">SP2-0158: unknown SET option &#34;garbage&#34;</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r8c1-t97" headers="r1c1-t97">Mon May 08 21:30:10 2006</td>
<td class="cellalignment1444" headers="r8c1-t97 r1c2-t97">SYSTEM</td>
<td class="cellalignment1444" headers="r8c1-t97 r1c3-t97">d:\myfile.sql</td>
<td class="cellalignment1444" headers="r8c1-t97 r1c4-t97">&nbsp;</td>
<td class="cellalignment1444" headers="r8c1-t97 r1c5-t97">garbage</td>
<td class="cellalignment1444" headers="r8c1-t97 r1c6-t97">ORA-00942: table or view does not exist</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformalwide" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2103"></a>Example 3</p>
<p>To use an error log table other than the default:</p>
<ul>
<li>
<p>Create the error log table you want to use</p>
</li>
<li>
<p>Specify the table you want to use with the TABLE option of the SET ERRORLOGGING ON command.</p>
</li>
</ul>
<p>The error log table must have the column definitions defined in <a href="#BGBDDDGA">Table 12-4, &#34;SQL*Plus Error Log Column Definitions&#34;</a>.</p>
<p>John wants to use an error log table named <span class="italic">john_sperrorlog</span>. John would run the following SQL statements to create the new error log table:</p>
<pre>DROP TABLE john_sperrorlog;   
CREATE TABLE john_sperrorlog(username   VARCHAR(256), 
timestamp  TIMESTAMP,
script     VARCHAR(1024),
identifier VARCHAR(256),
message    CLOB,
statement  CLOB);
</pre>
<p>John then issues the following SET command to enable error logging using the newly created error log table</p>
<pre>SET ERRORLOGGING ON TABLE john_sperrorlog
</pre>
<p>All error logging for John is now recorded to <span class="italic">john_sperrorlog</span>, and not to the default error log table, SPERRORLOG.</p>
<p>Access privileges for the error log table are handled in the same way as for any user table. See the <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about granting access to tables.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG078" class="refsect2"><a id="BGBFAHDB"></a>
<hr/>
<h2 class="refsect2">SET ESC[APE] {<span class="underline">\</span> | <span class="italic">c</span> | ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2104"></a><a id="sthref2105"></a>Defines the character used as the escape <a id="sthref2106"></a>character.</p>
<p>OFF undefines the escape character. ON enables the escape character. ON changes the value of <span class="italic">c</span> back to the default &#34;\&#34;.</p>
<p>You can use the escape character before the substitution character (set through SET DEFINE) to indicate that SQL*Plus should treat the substitution character as an ordinary character rather than as a request for variable substitution.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2107"></a>Example</p>
<p>If you define the escape character as an exclamation point (!), then</p>
<pre>SET ESCAPE !
ACCEPT v1 PROMPT &#39;Enter !&amp;1:&#39;
</pre>
<p>displays this prompt:</p>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET ESCAPE" summary="Shows the prompt from the ACCEPT statement." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t98">
<pre>Enter &amp;1:
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To set the escape character back to the default value of \ (backslash), enter</p>
<pre>SET ESCAPE ON
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG301" class="refsect2"><a id="BGBHDADJ"></a>
<hr/>
<h2 class="refsect2">SET ESCCHAR {@ | ? | % | $ | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2108"></a><a id="sthref2109"></a>Specifies a character to be escaped and not interpreted when used in a file name for the SPOOL, START, @, RUN and EDIT commands. These special characters are translated to the following:</p>
<p>While it is not recommended that these characters are used in filenames, if you have legacy files that do use them, it might be useful to include a SET ESCCHAR command in your GLogin file to implement it across your site.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2110"></a>Example</p>
<p>If you include the character &#39;$&#39; in your filename, then</p>
<pre>SET ESCCHAR $
RUN MYFILE$ 
</pre>
<p>behaves normally.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG302" class="refsect2"><a id="BABEGEGC"></a>
<hr/>
<h2 class="refsect2">SET EXITC[OMMIT] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2111"></a><a id="sthref2112"></a>Specifies whether the default EXIT behavior is COMMIT or ROLLBACK.</p>
<p>The default setting is ON, which means that work is committed on exit, whether you expected it to be committed or not. Set EXITCOMMIT OFF to rollback work on exit.</p>
<p><a href="#BABDFJHH">Table 12-5</a> shows the exit action associated with combinations of SET commands (AUTOCOMMIT &amp; EXITCOMMIT) and the EXIT command.</p>
<div id="SQPUG605" class="tblhruleformal">
<p class="titleintable"><a id="sthref2113"></a><a id="BABDFJHH"></a>Table 12-5 Exit Behavior: AUTOCOMMIT, EXITCOMMIT, EXIT</p>
<table class="cellalignment1443" title="Exit Behavior: AUTOCOMMIT, EXITCOMMIT, EXIT " summary="Exit Behavior: AUTOCOMMIT, EXITCOMMIT, EXIT. A 4 column by 12 row table. Column headings are AUTOCOMMIT, XITCOMMIT, EXIT, and Exit Behavior." dir="ltr">
<thead>
<tr class="cellalignment1437">
<th class="cellalignment1448" id="r1c1-t99">AUTOCOMMIT</th>
<th class="cellalignment1448" id="r1c2-t99">EXITCOMMIT</th>
<th class="cellalignment1448" id="r1c3-t99">EXIT</th>
<th class="cellalignment1448" id="r1c4-t99">Exit Behavior</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r2c1-t99" headers="r1c1-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r2c1-t99 r1c2-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r2c1-t99 r1c3-t99">
<p>-</p>
</td>
<td class="cellalignment1444" headers="r2c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r3c1-t99" headers="r1c1-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r3c1-t99 r1c2-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r3c1-t99 r1c3-t99">
<p>-</p>
</td>
<td class="cellalignment1444" headers="r3c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r4c1-t99" headers="r1c1-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r4c1-t99 r1c2-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r4c1-t99 r1c3-t99">
<p>-</p>
</td>
<td class="cellalignment1444" headers="r4c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r5c1-t99" headers="r1c1-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r5c1-t99 r1c2-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r5c1-t99 r1c3-t99">
<p>-</p>
</td>
<td class="cellalignment1444" headers="r5c1-t99 r1c4-t99">
<p>ROLLBACK</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r6c1-t99" headers="r1c1-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r6c1-t99 r1c2-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r6c1-t99 r1c3-t99">
<p>COMMIT</p>
</td>
<td class="cellalignment1444" headers="r6c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r7c1-t99" headers="r1c1-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r7c1-t99 r1c2-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r7c1-t99 r1c3-t99">
<p>ROLLBACK</p>
</td>
<td class="cellalignment1444" headers="r7c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r8c1-t99" headers="r1c1-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r8c1-t99 r1c2-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r8c1-t99 r1c3-t99">
<p>COMMIT</p>
</td>
<td class="cellalignment1444" headers="r8c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r9c1-t99" headers="r1c1-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r9c1-t99 r1c2-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r9c1-t99 r1c3-t99">
<p>ROLLBACK</p>
</td>
<td class="cellalignment1444" headers="r9c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r10c1-t99" headers="r1c1-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r10c1-t99 r1c2-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r10c1-t99 r1c3-t99">
<p>COMMIT</p>
</td>
<td class="cellalignment1444" headers="r10c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r11c1-t99" headers="r1c1-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r11c1-t99 r1c2-t99">
<p>ON</p>
</td>
<td class="cellalignment1444" headers="r11c1-t99 r1c3-t99">
<p>ROLLBACK</p>
</td>
<td class="cellalignment1444" headers="r11c1-t99 r1c4-t99">
<p>ROLLBACK</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r12c1-t99" headers="r1c1-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r12c1-t99 r1c2-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r12c1-t99 r1c3-t99">
<p>COMMIT</p>
</td>
<td class="cellalignment1444" headers="r12c1-t99 r1c4-t99">
<p>COMMIT</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r13c1-t99" headers="r1c1-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r13c1-t99 r1c2-t99">
<p>OFF</p>
</td>
<td class="cellalignment1444" headers="r13c1-t99 r1c3-t99">
<p>ROLLBACK</p>
</td>
<td class="cellalignment1444" headers="r13c1-t99 r1c4-t99">
<p>ROLLBACK</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect2" -->
<div id="SQPUG079" class="refsect2"><a id="i2698970"></a>
<hr/>
<h2 class="refsect2">SET FEED[BACK] {<span class="underline">6</span> | <span class="italic">n</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2114"></a><a id="sthref2115"></a>Displays the number of <a id="sthref2116"></a>records returned by a script when a script selects at least <span class="italic">n</span> records.</p>
<p>ON or OFF turns this display on or off. Turning feedback ON sets <span class="italic">n</span> to 1. Setting feedback to zero is equivalent to turning it OFF.</p>
<p>SET FEEDBACK OFF also turns off the statement confirmation messages such as &#39;Table created&#39; and &#39;PL/SQL procedure successfully completed&#39; that are displayed after successful SQL or PL/SQL statements.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG080" class="refsect2"><a id="i2698986"></a>
<hr/>
<h2 class="refsect2">SET FLAGGER {<span class="underline">OFF</span> | ENTRY | INTERMED[IATE] | FULL}</h2>
<p><a id="sthref2117"></a><a id="sthref2118"></a>Checks to make sure that SQL statements conform to the ANSI/ISO SQL92 standard.</p>
<p>If any non-standard constructs are found, the Oracle Database Server flags them as errors and displays the violating syntax. This is the equivalent of the SQL language ALTER SESSION SET FLAGGER command.</p>
<p>You may execute SET FLAGGER even if you are not connected to a database. FIPS flagging will remain in effect across SQL*Plus sessions until a SET FLAGGER OFF (or ALTER SESSION SET FLAGGER = OFF) command is successful or you exit SQL*Plus.</p>
<p>When FIPS flagging is enabled, SQL*Plus displays a warning for the CONNECT, DISCONNECT, and ALTER SESSION SET FLAGGER commands, even if they are successful.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG081" class="refsect2"><a id="i2678409"></a>
<hr/>
<h2 class="refsect2">SET FLU[SH] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2119"></a><a id="sthref2120"></a>Controls when output is sent to the user&#39;s display device. OFF enables the operating system to buffer output. ON disables buffering. FLUSH only affects display output, it does not affect spooled output.</p>
<p>Use OFF only when you run a script non-interactively (that is, when you do not need to see output and/or prompts until the script finishes running). The use of FLUSH OFF may improve performance by reducing the amount of program I/O.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG082" class="refsect2"><a id="i2699001"></a>
<hr/>
<h2 class="refsect2">SET HEA[DING] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2121"></a><a id="sthref2122"></a>Controls printing of column headings<a id="sthref2123"></a> in reports.</p>
<p>ON prints column headings<a id="sthref2124"></a> in reports; OFF suppresses column headings.</p>
<p>The SET HEADING OFF command does not affect the column width displayed, it only suppresses the printing of the column header itself.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2125"></a>Example</p>
<p>To suppress the display of column headings in a report, enter</p>
<pre>SET HEADING OFF
</pre>
<p>If you then run a SQL SELECT command</p>
<pre>SELECT LAST_NAME, SALARY
FROM EMP_DETAILS_VIEW
WHERE JOB_ID = &#39;AC_MGR&#39;;
</pre>
<p>the following output results:</p>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET HEADING" summary="Shows the output from a script without column headings." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t100">
<pre>Higgins 12000
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To turn the display of column headings back on, enter</p>
<pre>SET HEADING ON
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG083" class="refsect2"><a id="i2699036"></a>
<hr/>
<h2 class="refsect2">SET HEADS[EP] { | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2126"></a><a id="sthref2127"></a>Defines the character used as a line break in column headings.</p>
<p>The heading separator character cannot be alphanumeric or white space. You can use the heading separator character in the COLUMN command and in the old forms of BTITLE and TTITLE to divide a column heading or title onto more than one line. ON or OFF turns heading separation on or off. When heading separation is OFF, SQL*Plus prints a heading separator character like any other character. ON changes the value of <span class="italic">c</span> back to the default &#34;|&#34;.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG084" class="refsect2"><a id="i2699050"></a>
<hr/>
<h2 class="refsect2">SET INSTANCE [<span class="italic">instance_path</span> | <span class="underline">LOCAL</span>]</h2>
<p>Changes<a id="sthref2128"></a><a id="sthref2129"></a> the default instance for your session to the specified instance path.</p>
<p>Using the SET INSTANCE command does not connect to a database. The default instance is used for commands when no instance is specified. Any commands preceding the first use of SET INSTANCE communicate with the default instance.</p>
<p>To reset the instance to the default value for your operating system, you can either enter SET INSTANCE with no <span class="italic">instance_path</span> or SET INSTANCE LOCAL.</p>
<p>Note, you can only change the instance when you are not currently connected to any instance. That is, you must first make sure that you have disconnected from the current instance, then set or change the instance, and reconnect to an instance in order for the new setting to be enabled.</p>
<p>This command may only be issued when Oracle Net is running. You can use any valid Oracle Net connect identifier as the specified instance path. See your operating system-specific Oracle Database documentation for a complete description of how your operating system specifies Oracle Net connect identifiers. The maximum length of the instance path is 64 characters.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2130"></a>Example</p>
<p>To set the default instance to &#34;PROD1&#34; enter</p>
<pre>DISCONNECT
SET INSTANCE PROD1
</pre>
<p>To set the instance back to the default of local, enter</p>
<pre>SET INSTANCE local
</pre>
<p>You must disconnect from any connected instances to change the instance.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG085" class="refsect2"><a id="i2678481"></a>
<hr/>
<h2 class="refsect2">SET LIN[ESIZE] {<span class="underline">80</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2131"></a><a id="sthref2132"></a>Sets the total number of <a id="sthref2133"></a>characters that SQL*Plus displays on one line before beginning a new line.</p>
<p>It also controls the position of centered and right-aligned text in TTITLE, BTITLE, REPHEADER and REPFOOTER. Changing the linesize setting can affect text wrapping in output from the DESCRIBE command. DESCRIBE output columns are typically allocated a proportion of the linesize. Decreasing or increasing the linesize may give unexpected text wrapping in your display. You can define LINESIZE as a value from 1 to a maximum that is system dependent.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG086" class="refsect2"><a id="i2699091"></a>
<hr/>
<h2 class="refsect2">SET LOBOF[FSET] {<span class="underline">1</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2134"></a><a id="sthref2135"></a>Sets the starting position from which BLOB<a id="sthref2136"></a>, BFILE, CLOB<a id="sthref2137"></a> and NCLOB<a id="sthref2138"></a> data is retrieved and displayed.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2139"></a>Example</p>
<p>To set the starting position from which a CLOB column&#39;s data is retrieved to the 22nd position, enter</p>
<pre>SET LOBOFFSET 22
</pre>
<p>The CLOB data will wrap on your screen; SQL*Plus will not truncate until the 23rd character.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG087" class="refsect2"><a id="i2699109"></a>
<hr/>
<h2 class="refsect2">SET LOGSOURCE [<span class="italic">pathname</span>]</h2>
<p><a id="sthref2140"></a>Specifies the location from which archive logs are retrieved during recovery.</p>
<p>The default value is set by the LOG_ARCHIVE_DEST initialization parameter in the Oracle Database initialization file, init.ora. Using the SET LOGSOURCE command without a <span class="italic">pathname</span> restores the default location.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2141"></a>Example</p>
<p>To set the default location of log files for recovery to the directory &#34;/usr/oracle10/dbs/arch&#34; enter</p>
<pre>SET LOGSOURCE &#34;/usr/oracle10/dbs/arch&#34;
RECOVER DATABASE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG088" class="refsect2"><a id="i2699121"></a>
<hr/>
<h2 class="refsect2">SET LONG {<span class="underline">80</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2142"></a><a id="sthref2143"></a>Sets <a id="sthref2144"></a>maximum width (in bytes) for displaying BLOB<a id="sthref2145"></a>, BFILE, CLOB<a id="sthref2146"></a>, LONG<a id="sthref2147"></a>, NCLOB<a id="sthref2148"></a> and XMLType<a id="sthref2149"></a> values; and for copying LONG values.</p>
<p>Querying LONG columns requires enough local memory to store the amount of data specified by SET LONG, irrespective of the value of the SET LONGCHUNKSIZE command. This requirement does not apply when querying LOBs.</p>
<p>It is recommended that you do not create tables with LONG columns. LONG columns are supported only for backward compatibility. Use LOB columns (BLOB, BFILE, CLOB, NCLOB) instead. LOB columns have fewer restrictions than LONG columns and are still being enhanced.</p>
<p>The maximum value of <span class="italic">n</span> is 2,000,000,000 bytes. It is important to check that the memory required by your SET LONG command is available on your machine, for example:</p>
<pre>SET LONG 2000000000
</pre>
<p>assumes that available RAM (random access memory) on the machine exceeds 2 gigabytes.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2150"></a>Example</p>
<p>To set the maximum number of bytes to fetch for displaying and copying LONG values, to 500, enter</p>
<pre>SET LONG 500
</pre>
<p>The LONG data will wrap on your screen; SQL*Plus will not truncate until the 501st byte. The default for LONG is 80 bytes.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG089" class="refsect2"><a id="i2699146"></a>
<hr/>
<h2 class="refsect2">SET LONGC[HUNKSIZE] {<span class="underline">80</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2151"></a><a id="sthref2152"></a>Sets <a id="sthref2153"></a>the size (in bytes) of the increments SQL*Plus uses to retrieve a BLOB<a id="sthref2154"></a>, BFILE, CLOB<a id="sthref2155"></a>, LONG<a id="sthref2156"></a>, NCLOB<a id="sthref2157"></a> or XMLType<a id="sthref2158"></a> value.</p>
<p>LONGCHUNKSIZE is not used for object relational queries such as CLOB<a id="sthref2159"></a>, or NCLOB<a id="sthref2160"></a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2161"></a>Example</p>
<p>To set the size of the increments in which SQL*Plus retrieves LONG values to 100 bytes, enter</p>
<pre>SET LONGCHUNKSIZE 100
</pre>
<p>The LONG data will be retrieved in increments of 100 bytes until the entire value is retrieved or the value of SET LONG is reached, whichever is the smaller.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG090" class="refsect2"><a id="i2699173"></a>
<hr/>
<h2 class="refsect2">SET MARK[UP] HTML [ON | <span class="underline">OFF</span>] [HEAD <span class="italic">text</span>] [BODY <span class="italic">text</span>] [TABLE <span class="italic">text</span>] [ENTMAP {<span class="underline">ON</span> | OFF}] [SPOOL {ON | <span class="underline">OFF</span>}] [PRE[FORMAT] {ON | <span class="underline">OFF</span>}]</h2>
<p>Outputs HTML marked up text.</p>
<p>To be effective, SET MARKUP commands that change values in dynamic report output must occur before statements that produce query output. The first statement that produces query output triggers the output of information affected by SET MARKUP such as HEAD and TABLE settings. Subsequent SET MARKUP commands have no effect on the information already sent to the report.</p>
<p><a id="sthref2162"></a><a id="sthref2163"></a><a id="sthref2164"></a>SET MARKUP only specifies that SQL*Plus output will be HTML encoded. You must use SET MARKUP HTML ON SPOOL ON and the SQL*Plus SPOOL command to create and name a spool file, and to begin writing HMTL output to it. SET MARKUP has the same options and behavior as SQLPLUS -MARKUP.</p>
<p>See <a href="ch_three.htm#i1169539">MARKUP Options</a> for detailed information. For examples of usage, see <a href="#i2699173">SET MARK[UP] HTML [ON | <span class="underline">OFF</span>] [HEAD <span class="italic">text</span>] [BODY <span class="italic">text</span>] [TABLE <span class="italic">text</span>] [ENTMAP {<span class="underline">ON</span> | OFF}] [SPOOL {ON | <span class="underline">OFF</span>}] [PRE[FORMAT] {ON | <span class="underline">OFF</span>}]</a>, and <a href="ch_seven.htm#CHDCECJG">Generating HTML Reports from SQL*Plus</a>.</p>
<p>Use the SHOW MARKUP command to view the status of MARKUP options.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2165"></a>Example</p>
<p>The following is a script which uses the SET MARKUP HTML command to enable HTML marked up text to be spooled to a specified file:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The SET MARKUP example command is laid out for readability using line continuation characters &#34;&ndash;&#34; and spacing. Command options are concatenated in normal entry.</div>
<p>Use your favorite text editor to enter the commands necessary to set up the HTML options and the query you want for your report.</p>
<pre>SET MARKUP HTML ON SPOOL ON HEAD &#34;&lt;TITLE&gt;SQL*Plus Report&lt;/title&gt; -
&lt;STYLE TYPE=&#39;TEXT/CSS&#39;&gt;&lt;!--BODY {background: ffffc6} --&gt;&lt;/STYLE&gt;&#34;
SET ECHO OFF
SPOOL employee.htm
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMP_DETAILS_VIEW
WHERE SALARY&gt;12000;
SPOOL OFF
SET MARKUP HTML OFF
SET ECHO ON
</pre>
<p>As this script contains SQL*Plus commands, do not attempt to run it with / (slash) from the buffer because it will fail. Save the script in your text editor and use START to execute it:</p>
<pre>START employee.sql
</pre>
<p>As well as writing the HTML spool file, employee.htm, the output is also displayed on screen because SET TERMOUT defaults to ON. You can view the spool file, employee.htm, in your web browser. It should appear something like the following:</p>
<img width="567" height="194" src="img/markup.gif" alt="Description of markup.gif follows"/><br/>
<a id="sthref2166" href="img_text/markup.htm">Description of the illustration markup.gif</a><br/>
<br/></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG091" class="refsect2"><a id="i2678637"></a>
<hr/>
<h2 class="refsect2">SET NEWP[AGE] {<span class="underline">1</span> | <span class="italic">n</span> | NONE}</h2>
<p><a id="sthref2167"></a><a id="sthref2168"></a>Sets the number of blank lines to be printed from the top of each page to the top title<a id="sthref2169"></a>. A value of zero places a formfeed<a id="sthref2170"></a> at the beginning of each page (including the first page) and clears the screen on most terminals. If you set NEWPAGE to NONE, SQL*Plus does not print a blank line or formfeed between the report pages.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG092" class="refsect2"><a id="i2699184"></a>
<hr/>
<h2 class="refsect2">SET NULL <span class="italic">text</span></h2>
<p><a id="sthref2171"></a><a id="sthref2172"></a>Sets the text<a id="sthref2173"></a> displayed whenever a null value occurs in the result of a SQL SELECT command.</p>
<p>Use the NULL clause of the COLUMN command to override the setting of the NULL variable for a given column. The default output for a null is blank (&#34;&#34;).</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG093" class="refsect2"><a id="i2699195"></a>
<hr/>
<h2 class="refsect2">SET NUMF[ORMAT] <span class="italic">format</span></h2>
<p><a id="sthref2174"></a><a id="sthref2175"></a>Sets the default format for displaying<a id="sthref2176"></a> numbers. See the FORMAT clause of the <a href="ch_twelve013.htm#i2697128">COLUMN</a> command for number format descriptions. Enter a number format for <span class="italic">format</span>. To use the default field width and formatting model specified by SET NUMWIDTH, enter</p>
<pre>SET NUMFORMAT &#34;&#34; 
</pre></div>
<!-- class="refsect2" -->
<div id="SQPUG094" class="refsect2"><a id="i2699209"></a>
<hr/>
<h2 class="refsect2">SET NUM[WIDTH] {<span class="underline">10</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2177"></a><a id="sthref2178"></a>Sets the default width for displaying numbers. See the FORMAT clause of the <a href="ch_twelve013.htm#i2697128">COLUMN</a> command for number format descriptions.</p>
<p>COLUMN FORMAT settings take precedence over SET NUMFORMAT settings, which take precedence over SET NUMWIDTH settings.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG095" class="refsect2"><a id="i2699247"></a>
<hr/>
<h2 class="refsect2">SET PAGES[IZE] {<span class="underline">14</span> | <span class="italic">n</span>}</h2>
<p><a id="sthref2179"></a><a id="sthref2180"></a>Sets<a id="sthref2181"></a> the number of lines on each page<a id="sthref2182"></a> of output. You can set PAGESIZE to zero to suppress all headings, page breaks, titles, the initial blank line, and other formatting information.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG096" class="refsect2"><a id="i2699261"></a>
<hr/>
<h2 class="refsect2">SET PAU[SE] {ON | <span class="underline">OFF</span> | <span class="italic">text</span>}</h2>
<p><a id="sthref2183"></a><a id="sthref2184"></a>Enables you to control scrolling of your terminal when running reports. You need to first, SET PAUSE <span class="italic">text</span>, and then SET PAUSE ON if you want text to appear each time SQL*Plus pauses.</p>
<p>SET PAUSE ON pauses output at the beginning of each PAGESIZE number of lines of report output<a id="sthref2185"></a>. Press Return to view more output. SET PAUSE <span class="italic">text</span> specifies the text to be displayed each time SQL*Plus pauses. Multiple words in <span class="italic">text</span> must be enclosed in single quotes.</p>
<p>You can embed terminal-dependent escape sequences in the PAUSE command. These sequences allow you to create inverse video messages or other effects on terminals that support such characteristics.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG097" class="refsect2"><a id="i2699269"></a>
<hr/>
<h2 class="refsect2">SET RECSEP {<span class="underline">WR[APPED]</span> | EA[CH] | OFF}</h2>
<p>RECSEP tells SQL*Plus where to make the record separation.</p>
<p>For example, if you set RECSEP to WRAPPED, SQL*Plus prints a record separator only after wrapped lines. If you set RECSEP to EACH, SQL*Plus prints a record separator following every row. If you set RECSEP to OFF, SQL*Plus does not print a record separator.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG098" class="refsect2"><a id="i2699283"></a>
<hr/>
<h2 class="refsect2">SET RECSEPCHAR { | <span class="italic">c</span>}</h2>
<p><a id="sthref2186"></a><a id="sthref2187"></a><a id="sthref2188"></a><a id="sthref2189"></a>Defines the character to display<a id="sthref2190"></a> or print to separate <a id="sthref2191"></a>records.</p>
<p>A record separator consists of a single line of the RECSEPCHAR (record separating character) repeated LINESIZE times. The default is a single space.</p>
</div>
<!-- class="refsect2" -->
<div class="refsect2"><a id="BABDAGBI"></a>
<hr/>
<h2 class="refsect2">SET SECUREDCOL {<span class="underline">OFF</span> | ON} [UNAUTH[ORIZED] <span class="italic">text</span>] [UNK[NOWN] <span class="italic">text</span>]</h2>
<p><a id="sthref2192"></a><a id="sthref2193"></a>Sets how secure column values are displayed in SQLPLUS output for users without permission to view a column and for columns with unknown security. You can choose either the default text or specify the text that is displayed. The default is OFF.</p>
<p>When column level security is enabled, and SET SECUREDCOL is set ON, output from SQLPLUS for secured columns or columns of unknown security level is replaced with either your customized text or the default indicators. This only applies to scalar data types. Complex Object data output is not affected.</p>
<p>ON displays the default indicator &#34;*****&#34; in place of column values for users without authorisation, and displays &#34;?????&#34; in place of column values where the security level is unknown. The indicators &#34;*&#34; and &#34;?&#34; are filled to the defined column length or the column length defined by a current COLUMN command.</p>
<p>OFF displays null values in place of column values for users without authorization, and in place of column values where the security level is unknown.</p>
<p>UNAUTH[ORIZED] <span class="italic">text</span> enables you to specify the text to be displayed in a secured column for users without authorization. This text appears instead of the default &#34;*****&#34;</p>
<p>You can specify any alpha numeric text up to the column length or a maximum of 30 characters. Longer text is truncated. Text containing spaces must be quoted.</p>
<p>UNK[NOWN] <span class="italic">text</span> enables you to specify the text to be displayed in a column of unknown security level. This text appears instead of the default &#34;??????&#34;</p>
<p>You can specify any alpha numeric text up to the column length or a maximum of 30 characters. Longer text is truncated. Text containing spaces must be quoted.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2194"></a>Example</p>
<pre>SET SECUREDCOL ON
SELECT empno, ename, sal FROM emp ORDER BY deptno;
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SECUREDCOL" summary="Shows output from SELECT cmd with SET SECUREDCOL ON." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t102">
<pre>EMPNO ENAME  DEPTNO SAL
 7539 KING   10     ********
 7369 SMITH  20          800
 7566 JONES  20         2975
 7788 SCOTT  20         3000
 7521 WARD   30     ********
 7499 ALLEN  30     ********
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<pre>SET SECUREDCOL ON UNAUTH notallow
SELECT empno, ename, sal FROM emp ORDER BY deptno;
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SECUREDCOL" summary="Shows output from SELECT cmd with SET SECUREDCOL ON UNAUTH notallow." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t103">
<pre>EMPNO ENAME  DEPTNO SAL
 7539 KING   10    notallow
 7369 SMITH  20          800
 7566 JONES  20         2975
 7788 SCOTT  20         3000
 7521 WARD   30     notallow
 7499 ALLEN  30     notallow
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG099" class="refsect2"><a id="i2699298"></a>
<hr/>
<h2 class="refsect2">SET SERVEROUT[PUT] {ON | OFF} [SIZE {<span class="italic">n</span> | <span class="underline">UNL[IMITED]</span>}] [FOR[MAT] {WRA[PPED] | WOR[D_WRAPPED] | TRU[NCATED]}]</h2>
<p>Controls whether to display output (that is, <a id="sthref2195"></a>DBMS_OUTPUT.PUT_LINE) of stored procedures or PL/SQL blocks in SQL*Plus. The DBMS_OUTPUT line length limit is 32767 bytes.</p>
<p>OFF suppresses the output of DBMS_OUTPUT.PUT_LINE. ON displays the output.</p>
<p>ON uses the SIZE and FORMAT of the previous SET SERVEROUTPUT ON SIZE <span class="italic">n</span> FORMAT <span class="italic">f</span>, or uses default values if no SET SERVEROUTPUT command was previously issued in the current connection.</p>
<p>SIZE sets the number of bytes of the output that can be buffered within the Oracle Database server. The default is UNLIMITED. <span class="italic">n</span> cannot be less than 2000 or greater than 1,000,000.</p>
<p>Resources are not pre-allocated when SERVEROUTPUT is set. As there is no performance penalty, use UNLIMITED unless you want to conserve physical memory.</p>
<p>Every server output line begins on a new output line.</p>
<p><a id="sthref2196"></a><a id="sthref2197"></a>When WRAPPED is enabled SQL*Plus wraps the server output within the line size specified by SET LINESIZE, beginning new lines when required.</p>
<p>When WORD_WRAPPED is enabled, each line of server output is wrapped within the line size specified by SET LINESIZE. Lines are broken on word boundaries. SQL*Plus left justifies each line, skipping all leading whitespace.</p>
<p>When TRUNCATED is enabled, each line of server output is truncated to the line size specified by SET LINESIZE.</p>
<p>For detailed information about using UTL_FILE and associated utilities, see the <a class="olink ARPLS" href="../ARPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> .</p>
<p>For more information on DBMS_OUTPUT.PUT_LINE, see your <a class="olink ADFNS" href="../ADFNS/toc.htm"><span class="italic">Oracle Database Advanced Application Developer&#39;s Guide</span></a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2198"></a>Example</p>
<p>To enable text display in a PL/SQL block using DBMS_OUTPUT.PUT_LINE, enter</p>
<pre>SET SERVEROUTPUT ON
</pre>
<p>The following example shows what happens when you execute an anonymous procedure with SET SERVEROUTPUT ON:</p>
<pre>BEGIN
  DBMS_OUTPUT.PUT_LINE(&#39;Task is complete&#39;);
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SERVEROUTPUT" summary="Shows output from PL/SQL block." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t104">
<pre>Task is complete.
PL/SQL procedure successfully completed.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>The following example shows what happens when you create a trigger with SET SERVEROUTPUT ON:</p>
<pre>CREATE TABLE SERVER_TAB (Letter CHAR);
CREATE TRIGGER SERVER_TRIG BEFORE INSERT OR UPDATE -
OR DELETE
ON SERVER_TAB
BEGIN
DBMS_OUTPUT.PUT_LINE(&#39;Task is complete.&#39;);
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SERVEROUTPUT" summary="Shows output message after creating a trigger." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t105">
<pre>Trigger Created.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<pre>INSERT INTO SERVER_TAB VALUES (&#39;M&#39;);
DROP TABLE SERVER_TAB; 
/* Remove SERVER_TAB from database */
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SERVEROUTPUT" summary="Shows output from script." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t106">
<pre>Task is complete.
1 row created.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To set the output to WORD_WRAPPED, enter</p>
<pre>SET SERVEROUTPUT ON FORMAT WORD_WRAPPED
SET LINESIZE 20
BEGIN
  DBMS_OUTPUT.PUT_LINE(&#39;If there is nothing left to do&#39;);
  DBMS_OUTPUT.PUT_LINE(&#39;shall we continue with plan B?&#39;);
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SERVEROUTPUT" summary="Shows word wrapped output from script." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t107">
<pre>If there is nothing
left to do
shall we continue
with plan B?
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To set the output to TRUNCATED, enter</p>
<pre>SET SERVEROUTPUT ON FORMAT TRUNCATED
SET LINESIZE 20
BEGIN
  DBMS_OUTPUT.PUT_LINE(&#39;If there is nothing left to do&#39;);
  DBMS_OUTPUT.PUT_LINE(&#39;shall we continue with plan B?&#39;);
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SERVEROUTPUT" summary="Shows truncated output from script." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t108">
<pre>If there is nothing
shall we continue wi
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG100" class="refsect2"><a id="i2678863"></a>
<hr/>
<h2 class="refsect2">SET SHIFT[INOUT] {VIS[IBLE] | <span class="underline">INV[ISIBLE]</span>}</h2>
<p><a id="sthref2199"></a><a id="sthref2200"></a>Enables correct alignment for terminals that display shift characters. The SET SHIFTINOUT command is useful for terminals which display shift characters together with data (for example, IBM 3270 terminals). You can only use this command with shift sensitive character sets (for example, JA16DBCS).</p>
<p>Use VISIBLE for terminals that display shift characters as a visible character (for example, a space or a colon). INVISIBLE is the opposite and does not display any shift characters.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2201"></a>Example</p>
<p>To enable the display of shift characters on a terminal that supports them, enter</p>
<pre>SET SHIFTINOUT VISIBLE
SELECT LAST_NAME, JOB_ID FROM EMP_DETAILS_VIEW
WHERE SALARY &gt; 12000;
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SHIFTINOUT" summary="Shows output from SELECT statement containing shift characters." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t109">
<pre>LAST_NAME      JOB_ID
---------- ----------
:JJOO:       :AABBCC:
:AA:abc       :DDEE:e
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>where &#34;:&#34; = visible shift character uppercase represents multibyte characters</p>
<p>lowercase represents singlebyte characters</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG101" class="refsect2"><a id="i2678887"></a>
<hr/>
<h2 class="refsect2">SET SHOW[MODE] {ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2202"></a>Controls whether SQL*Plus lists the old and new settings of a SQL*Plus system variable<a id="sthref2203"></a> when you change the setting with SET. ON lists the settings; OFF suppresses the listing. SHOWMODE ON has the same behavior as the obsolete SHOWMODE BOTH.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG102" class="refsect2"><a id="i2678904"></a>
<hr/>
<h2 class="refsect2">SET SQLBL[ANKLINES] {ON | <span class="underline">OFF</span>}<a id="sthref2204"></a></h2>
<p><a id="sthref2205"></a>Controls whether SQL*Plus puts <a id="sthref2206"></a>blank lines within a SQL command or script. ON interprets blank lines and new lines as part of a SQL command or script. OFF, the default value, does not allow blank lines or new lines in a SQL command or script or script.</p>
<p>Enter the <a id="sthref2207"></a>BLOCKTERMINATOR to stop SQL command entry without running the SQL command. Enter the <a id="sthref2208"></a>SQLTERMINATOR character to stop SQL command entry and run the SQL statement.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2209"></a>Example</p>
<p>To allow blank lines in a SQL statement, enter</p>
<pre>SET SQLBLANKLINES ON
REM Using the SQLTERMINATOR (default is &#34;;&#34;) 
REM Could have used the BLOCKTERMINATOR (default is &#34;.&#34;)
SELECT *

FROM

DUAL

;
</pre>
<p>The following output results:</p>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SQLBLANKLINES" summary="Shows output from a script containing blank lines." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t110">
<pre>D
-
X
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG103" class="refsect2"><a id="i2699335"></a>
<hr/>
<h2 class="refsect2">SET SQLC[ASE] {<span class="underline">MIX[ED]</span> | LO[WER] | UP[PER]}</h2>
<p><a id="sthref2210"></a><a id="sthref2211"></a>Converts the case of SQL commands and PL/SQL blocks just prior to execution.</p>
<p>SQL*Plus converts all text within the command, including quoted literals and identifiers, to uppercase if SQLCASE equals UPPER, to lowercase if SQLCASE equals LOWER, and makes no changes if SQLCASE equals MIXED.</p>
<p>SQLCASE does not change the SQL buffer itself.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG104" class="refsect2"><a id="i2678950"></a>
<hr/>
<h2 class="refsect2">SET SQLCO[NTINUE] {<span class="underline">&gt;</span> | <span class="italic">text</span>}</h2>
<p><a id="sthref2212"></a><a id="sthref2213"></a>Sets the character sequence SQL*Plus displays as a prompt after you continue a SQL*Plus command on an additional line using a hyphen (&ndash;).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2214"></a>Example</p>
<p>To set the SQL*Plus command continuation prompt to an exclamation point followed by a space, enter</p>
<pre>SET SQLCONTINUE &#39;! &#39;
</pre>
<p>SQL*Plus will prompt for continuation as follows:</p>
<pre>TTITLE &#39;MONTHLY INCOME&#39; -
! RIGHT SQL.PNO SKIP 2 -
! CENTER &#39;PC DIVISION&#39;
</pre>
<p>The default continuation prompt is &#34;&gt; &#34;.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG105" class="refsect2"><a id="i2678981"></a>
<hr/>
<h2 class="refsect2">SET SQLN[UMBER] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2215"></a><a id="sthref2216"></a>Sets the prompt for the second and subsequent lines of a SQL command or PL/SQL block. ON sets the prompt to be the line number. OFF sets the prompt to the value of SQLPROMPT.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG106" class="refsect2"><a id="i2699351"></a>
<hr/>
<h2 class="refsect2">SET SQLPLUSCOMPAT[IBILITY] {<span class="italic">x</span>.<span class="italic">y</span>[.<span class="italic">z</span>]}</h2>
<p><a id="sthref2217"></a><a id="sthref2218"></a>Sets the behavior to that of the release or version specified by <span class="italic">x</span>.<span class="italic">y</span>[.<span class="italic">z</span>].</p>
<p>Where <span class="italic">x</span> is the version number, <span class="italic">y</span> is the release number, and <span class="italic">z</span> is the update number. For example, 8.1.7, 9.0.1 or 10.2. The features affected by SQLPLUSCOMPATIBILITY are tabulated in the SQL*Plus Compatibility Matrix shown. You can also set the value of SQLPLUSCOMPATIBILITY using the -C[OMPATIBILITY] argument of the SQLPLUS command when starting SQL*Plus from the command line.</p>
<p>The default setting for SQLPLUSCOMPATIBILITY is the value of the SQL*Plus client.</p>
<p>It is recommended that you add SET SQLPLUSCOMPATIBILITY 12.1 to your scripts to maximize their compatibility with future versions of SQL*Plus.</p>
<div id="SQPUG606" class="refsect3"><a id="i2689297"></a>
<h3 class="refsect3">SQL*Plus Compatibility Matrix</h3>
<p>The SQL*Plus Compatibility Matrix tabulates behavior affected by each SQL*Plus compatibility setting. SQL*Plus compatibility modes can be set in three ways:</p>
<ul>
<li>
<p>You can include a SET SQLPLUSCOMPATIBILITY command in your site or user profile. On installation, there is no SET SQLPLUSCOMPATIBILITY setting in <a id="sthref2219"></a><a id="sthref2220"></a>glogin.sql. Therefore the default compatibility is 12.1.</p>
</li>
<li>
<p>You can use the SQLPLUS -C[OMPATIBILITY] {<span class="italic">x</span>.<span class="italic">y</span>[.<span class="italic">z</span>]} command argument at startup to set the compatibility mode of that session.</p>
</li>
<li>
<p>You can use the SET SQLPLUSCOMPATIBILITY {<span class="italic">x</span>.<span class="italic">y</span>[.<span class="italic">z</span>]} command during a session to set the SQL*Plus behavior you want for that session.</p>
</li>
</ul>
<p>The following table shows the release of SQL*Plus which introduced the behavior change, and hence the minimum value of SQLPLUSCOMPATIBILITY to obtain that behavior. For example, to obtain the earlier behavior of the VARIABLE command, you must either use a version of SQL*Plus earlier than 9.0.1, or you must use a SQLPLUSCOMPATIBILITY value of less than 9.0.1. The lowest value that can be set for SQLPLUSCOMPATIBILITY is 7.3.4</p>
<div id="SQPUG607" class="tblformal">
<p class="titleintable"><a id="sthref2221"></a><a id="sthref2222"></a>Table 12-6 Compatibility Matrix</p>
<table class="cellalignment1447" title="Compatibility Matrix" summary="Shows the SQLPLUSCOMPATIBILITY values, associated behavior, and the version when this behavior was first available." dir="ltr">
<thead>
<tr class="cellalignment1437">
<th class="cellalignment1448" id="r1c1-t111">Value</th>
<th class="cellalignment1448" id="r1c2-t111">Consequence</th>
<th class="cellalignment1448" id="r1c3-t111">When available</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r2c1-t111" headers="r1c1-t111">
<p>&gt;=10.1</p>
</td>
<td class="cellalignment1444" headers="r2c1-t111 r1c2-t111">
<p>SHOW ERRORS sorts PL/SQL error messages using new columns only available in Oracle Database 10<span class="italic">g</span>.</p>
</td>
<td class="cellalignment1444" headers="r2c1-t111 r1c3-t111">
<p>10.1</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r3c1-t111" headers="r1c1-t111">
<p>&gt;=10.1</p>
</td>
<td class="cellalignment1444" headers="r3c1-t111 r1c2-t111">
<p>SPOOL Options CREATE, REPLACE, SAVE were added which may affect filename parsing on some platforms.</p>
</td>
<td class="cellalignment1444" headers="r3c1-t111 r1c3-t111">
<p>10.1</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r4c1-t111" headers="r1c1-t111">
<p>&gt;=10.1</p>
</td>
<td class="cellalignment1444" headers="r4c1-t111 r1c2-t111">
<p>SET SQLPROMPT</p>
</td>
<td class="cellalignment1444" headers="r4c1-t111 r1c3-t111">
<p>10.1</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r5c1-t111" headers="r1c1-t111">
<p>&gt;=10.1</p>
</td>
<td class="cellalignment1444" headers="r5c1-t111 r1c2-t111">
<p>Whitespace characters are allowed in Windows file names that are enclosed in quotes. Some other special punctuation characters are now disallowed in Windows.</p>
</td>
<td class="cellalignment1444" headers="r5c1-t111 r1c3-t111">
<p>10.1</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r6c1-t111" headers="r1c1-t111">
<p>&gt;=10.1</p>
</td>
<td class="cellalignment1444" headers="r6c1-t111 r1c2-t111">
<p><a id="sthref2223"></a><a id="sthref2224"></a>Glogin/login files are called for each reconnect.</p>
</td>
<td class="cellalignment1444" headers="r6c1-t111 r1c3-t111">
<p>10.1</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r7c1-t111" headers="r1c1-t111">
<p>&nbsp;&nbsp;&lt;10.1</p>
</td>
<td class="cellalignment1444" headers="r7c1-t111 r1c2-t111">
<p>Uses the obsolete DOC&gt; prompt when echoing /* comments.</p>
</td>
<td class="cellalignment1444" headers="r7c1-t111 r1c3-t111">
<p>10.1</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r8c1-t111" headers="r1c1-t111">
<p>&gt;= 9.2</p>
</td>
<td class="cellalignment1444" headers="r8c1-t111 r1c2-t111">
<p>A wide column defined FOLD_AFTER may be displayed at the start of a new line. Otherwise it is incorrectly put at the end of the preceding line with a smaller width than expected.</p>
</td>
<td class="cellalignment1444" headers="r8c1-t111 r1c3-t111">
<p>9.2.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r9c1-t111" headers="r1c1-t111">
<p>&gt;= 9.0</p>
</td>
<td class="cellalignment1444" headers="r9c1-t111 r1c2-t111">
<p>Whitespace before a slash (&#34;/&#34;) in a SQL statement is ignored and the slash is taken to mean execute the statement. Otherwise the slash is treated as part of the statement, for example, as a division sign.</p>
</td>
<td class="cellalignment1444" headers="r9c1-t111 r1c3-t111">
<p>9.0.1.4.</p>
</td>
</tr>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r10c1-t111" headers="r1c1-t111">
<p>&gt;= 9.0</p>
</td>
<td class="cellalignment1444" headers="r10c1-t111 r1c2-t111">
<p>The length specified for NCHAR and NVARCHAR2 types is characters. Otherwise the length may represent bytes or characters depending on the character set.</p>
</td>
<td class="cellalignment1444" headers="r10c1-t111 r1c3-t111">
<p>9.0.1</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="SQPUG107" class="refsect2"><a id="i2679105"></a>
<hr/>
<h2 class="refsect2">SET SQLPRE[FIX] {<span class="underline">#</span> | <span class="italic">c</span>}</h2>
<p><a id="sthref2225"></a><a id="sthref2226"></a><a id="sthref2227"></a>Sets the SQL*Plus prefix character. While you are entering<a id="sthref2228"></a> a SQL command or PL/SQL block, you can enter a SQL*Plus command on a separate line, prefixed by the SQL*Plus prefix character. SQL*Plus will execute the command immediately without affecting the SQL command or PL/SQL block that you are entering. The prefix character must be a non-alphanumeric character.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG108" class="refsect2"><a id="i2679128"></a>
<hr/>
<h2 class="refsect2">SET SQLP[ROMPT] {<span class="underline">SQL&gt;</span> | <span class="italic">text</span>}</h2>
<p><a id="sthref2229"></a><a id="sthref2230"></a><a id="sthref2231"></a><a id="sthref2232"></a>Sets the SQL*Plus command prompt. SET SQLPROMPT substitute variables dynamically. This enables the inclusion of runtime variables such as the current connection identifier. Substitution variables used in SQLPROMPT do not have to be prefixed with &#39;&amp;&#39;, and they can be used and accessed like any other substitution variable. Variable substitution is not attempted for the default prompt, &#34;SQL&gt; &#34;.</p>
<p>Variable substitution occurs each time SQLPROMPT is SET. If SQLPROMPT is included in glogin.sql, then substitution variables in SQLPROMPT are refreshed with each login or connect.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2233"></a>Example</p>
<p>To change your SQL*Plus prompt to display your connection identifier, enter:</p>
<pre>SET SQLPROMPT &#34;_CONNECT_IDENTIFIER &gt; &#34;
</pre>
<p>To set the SQL*Plus command prompt to show the current user, enter</p>
<pre>SET SQLPROMPT &#34;_USER &gt; &#34;
</pre>
<p>To change your SQL*Plus prompt to display your the current date, the current user and the users privilege level, enter:</p>
<pre>SET SQLPROMPT &#34;_DATE _USER _PRIVILEGE&gt; &#34;
</pre>
<p>To change your SQL*Plus prompt to display a variable you have defined, enter:</p>
<pre>DEFINE mycon = Prod1
SET SQLPROMPT &#34;mycon&gt; &#34;
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from SET SQLPROMPT" summary="Shows the new SQL*Plus prompt." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t112">
<pre>Prod1&gt; 
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>Text in nested quotes is not parsed for substitution. To have a SQL*Plus prompt of your username, followed by &#34;@&#34;, and then your connection identifier, enter:</p>
<pre>SET SQLPROMPT &#34;_USER&#39;@&#39;_CONNECT_IDENTIFIER &gt; &#34;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG109" class="refsect2"><a id="i2498515"></a>
<hr/>
<h2 class="refsect2">SET SQLT[ERMINATOR] {<span class="underline">;</span> | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2234"></a><a id="sthref2235"></a>Sets the character used to end script or data entry for PL/SQL blocks or SQL statements, to execute the script, and to load it into the buffer.</p>
<p>It cannot be an alphanumeric character or a whitespace. OFF means that SQL*Plus recognizes no command terminator; you terminate a SQL command by entering an empty line or a slash (/). If SQLBLANKLINES is set ON, you must use the <a id="sthref2236"></a>BLOCKTERMINATOR to terminate a SQL command. ON resets the terminator to the default semicolon (;).</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG110" class="refsect2"><a id="i2683419"></a>
<hr/>
<h2 class="refsect2">SET SUF[FIX] {<span class="underline">SQL</span> | <span class="italic">text</span>}</h2>
<p><a id="sthref2237"></a><a id="sthref2238"></a>Sets the default file <a id="sthref2239"></a><a id="sthref2240"></a><a id="sthref2241"></a>extension that SQL*Plus uses in commands that refer to scripts. SUFFIX does not control extensions for spool files.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2242"></a>Example</p>
<p>To change the default command-file extension from the default, .SQL to .TXT, enter</p>
<pre>SET SUFFIX TXT
</pre>
<p>If you then enter</p>
<pre>GET EXAMPLE
</pre>
<p>SQL*Plus will look for a file named EXAMPLE.TXT instead of EXAMPLE.SQL.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG111" class="refsect2"><a id="i2683445"></a>
<hr/>
<h2 class="refsect2">SET TAB {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2243"></a><a id="sthref2244"></a>Determines how SQL*Plus formats white space in terminal output.<a id="sthref2245"></a> OFF uses spaces to format white space in the output. ON uses the TAB character. TAB settings are every eight characters. The default value for TAB is system dependent.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG112" class="refsect2"><a id="i2683459"></a>
<hr/>
<h2 class="refsect2">SET TERM[OUT] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2246"></a><a id="sthref2247"></a>Controls the display of output generated by commands in a script that is executed with @, @@ or START. OFF suppresses the display so that you can spool output to a file without displaying the output on screen. ON displays the output on screen. TERMOUT OFF does not affect output from commands you enter interactively or redirect to SQL*Plus from the operating system.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG113" class="refsect2"><a id="i2700163"></a>
<hr/>
<h2 class="refsect2">SET TI[ME] {ON | <span class="underline">OFF</span>}</h2>
<p><span class="bold"><a id="sthref2248"></a><a id="sthref2249"></a></span>Controls the display of the current time. ON displays the current time before each command prompt. OFF suppresses the time display.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG114" class="refsect2"><a id="i2699400"></a>
<hr/>
<h2 class="refsect2">SET TIMI[NG] {ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2250"></a><a id="sthref2251"></a>Controls the display of timing statistics.</p>
<p>ON displays timing statistics on each SQL command or PL/SQL block<a id="sthref2252"></a> run. OFF suppresses timing of each command.</p>
<p>See <a href="ch_twelve047.htm#i2699704">TIMING</a> for information on timing multiple commands.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2253"></a>Example</p>
<p>The format of timing statistics is dependent on the operating system. In Linux and Windows, the timing statistics are in 24 hour format displaying hours, minutes, seconds and hundredths of seconds</p>
<pre>SET SUFFIX TXT
</pre>
<p>If you enter</p>
<pre>GET EXAMPLE
</pre>
<p>SQL*Plus displays output like</p>
<pre>GET EXAMPLE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG115" class="refsect2"><a id="i2683480"></a>
<hr/>
<h2 class="refsect2">SET TRIM[OUT] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2254"></a><a id="sthref2255"></a>Determines whether SQL*Plus puts trailing blanks at the end of each displayed line. ON <a id="sthref2256"></a>removes blanks at the end of each line, improving <a id="sthref2257"></a>performance especially when you access SQL*Plus from a slow communications device. OFF enables SQL*Plus to display trailing blanks. TRIMOUT ON does not affect spooled output.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG116" class="refsect2"><a id="i2683501"></a>
<hr/>
<h2 class="refsect2">SET TRIMS[POOL] {ON | <span class="underline">OFF</span>}</h2>
<p><a id="sthref2258"></a><a id="sthref2259"></a>Determines whether SQL*Plus puts trailing blanks at the end of each spooled line. ON removes blanks at the end of each line. OFF enables SQL*Plus to include trailing blanks. TRIMSPOOL ON does not affect terminal output.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG159" class="refsect2"><a id="i2699420"></a>
<hr/>
<h2 class="refsect2">SET UND[ERLINE] {<span class="underline">-</span> | <span class="italic">c</span> | <span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2260"></a><a id="sthref2261"></a>Sets the character used to underline column headings<a id="sthref2262"></a> in reports. The underline character cannot be an alphanumeric character or a white space. ON or OFF turns underlining on or off. ON changes the value of <span class="italic">c</span> back to the default &#34;-&#34;.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG117" class="refsect2"><a id="i2699432"></a>
<hr/>
<h2 class="refsect2">SET VER[IFY] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2263"></a><a id="sthref2264"></a>Controls whether to list the text of a SQL statement or PL/SQL command before and after replacing substitution variables with values. ON lists the text; OFF suppresses the listing.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG118" class="refsect2"><a id="i2699438"></a>
<hr/>
<h2 class="refsect2">SET WRA[P] {<span class="underline">ON</span> | OFF}</h2>
<p><a id="sthref2265"></a><a id="sthref2266"></a>Controls whether to truncate the display of a selected row if it is too long for the current line width. OFF truncates<a id="sthref2267"></a> the selected row; ON enables the selected row to wrap<a id="sthref2268"></a> to the next line.</p>
<p>Use the WRAPPED and TRUNCATED clauses of the COLUMN command to override the setting of WRAP for specific columns.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG119" class="refsect2"><a id="CACFBBCI"></a>
<hr/>
<h2 class="refsect2">SET XMLOPT[IMIZATIONCHECK] [ON|<span class="underline">OFF</span>]</h2>
<p>Controls whether only XML<a id="sthref2269"></a><a id="sthref2270"></a> queries and DML operations that are fully optimized are executed. ON prevents the execution of any XML query or DML operation that cannot be fully optimized and writes the reason in the trace file. OFF does not prevent the execution of such queries and operations. OFF is the default.</p>
<p>SET XMLOPT[IMIZATIONCHECK] ON is only to assist during development and debugging an XML query or DML operation.</p>
</div>
<!-- class="refsect2" -->
<div id="SQPUG120" class="refsect2"><a id="BGBBGDGE"></a>
<hr/>
<h2 class="refsect2">SET XQUERY BASEURI {<span class="italic">text</span>}</h2>
<p>Specifies the base URI<a id="sthref2271"></a><a id="sthref2272"></a><a id="sthref2273"></a> used to resolve relative URIs in functions. It enables the prefix of the file accessed by an XQuery to be changed.</p>
<p>To unset the BASEURI, set an empty string, for example:</p>
<pre>SET XQUERY BASEURI &#39;&#39;
</pre>
<p>Take care to enter valid values as values are checked only when an XQUERY command is issued.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2274"></a>Example</p>
<pre>SET XQUERY BASEURI &#39;/public/scott&#39;
XQUERY for $i in doc(&#34;foo.xml&#34;) return $i
/
</pre>
<p>This is equivalent to:</p>
<pre>XQuery declare base-uri &#34;/public/hr&#34;; 
for $i in doc(&#34;foo.xml&#34;) return $i
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG121" class="refsect2"><a id="BGBBHHGH"></a>
<hr/>
<h2 class="refsect2">SET XQUERY ORDERING {UNORDERED | ORDERED | DEFAULT}</h2>
<p>Sets the ordering of output<a id="sthref2275"></a><a id="sthref2276"></a><a id="sthref2277"></a> from an XQuery. There are three values:</p>
<p><span class="keyword">UNORDERED</span> specifies that results are sorted in the order they are retrieved from the database.</p>
<p><span class="keyword">ORDERED</span> specifies that results are sorted as defined by the XQuery.</p>
<p><span class="keyword">DEFAULT</span> specifies the database default. In Oracle Database 10<span class="italic">g</span> the default is UNORDERED.</p>
<p>When SET XQUERY ORDERING is not set, the default is DEFAULT (UNORDERED).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2278"></a>Example</p>
<pre>SET XQUERY ORDERING ORDERED
XQUERY for $i in doc(&#34;foo.xml&#34;) return $i
/
</pre>
<p>This is equivalent to:</p>
<pre>XQuery declare ordering ordered; 
for $i in doc(&#34;foo.xml&#34;) return $i
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG122" class="refsect2"><a id="BGBIIGDC"></a>
<hr/>
<h2 class="refsect2">SET XQUERY NODE {BYVALUE | BYREFERENCE | DEFAULT}</h2>
<p>Sets the node identity<a id="sthref2279"></a><a id="sthref2280"></a><a id="sthref2281"></a> preservation mode. The preservation mode applies to all expressions that either create a new node (such as element constructors) or return an item or sequence containing nodes (such as path expressions). There are three values:</p>
<p><span class="keyword">BYVALUE</span> specifies that the node identity need not be preserved. This means that any node operation such as creation, or that is returned as a result of an expression is deep copied and loses its context from the original tree. Subsequent operations on this node that test for node identity, parent or sibling axes or ordering will be undefined.</p>
<p><span class="keyword">BYREFERENCE</span> specifies that node identities are to be preserved. Subsequent operations on this node preserve the node&#39;s context and definition.</p>
<p><span class="keyword">DEFAULT</span> specifies the database default. In Oracle Database 10<span class="italic">g</span> the default is BYVALUE.</p>
<p>When SET XQUERY NODE is not set, the default is DEFAULT (BYVALUE).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2282"></a>Example</p>
<pre>SET XQUERY NODE BYREFERENCE
XQUERY for $i in doc(&#34;foo.xml&#34;) return $i
/
</pre>
<p>This is equivalent to:</p>
<pre>XQuery declare node byreference; 
for $i in doc(&#34;foo.xml&#34;) return $i
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="SQPUG123" class="refsect2"><a id="BGBJDFBC"></a>
<hr/>
<h2 class="refsect2">SET XQUERY CONTEXT {<span class="italic">text</span>}</h2>
<p>Specifies an XQuery context<a id="sthref2283"></a><a id="sthref2284"></a><a id="sthref2285"></a> item expression. A context item expression evaluates to the context item, which may be either a node (as in the expression fn:doc(&#34;bib.xml&#34;)//book[fn:count(./author)&gt;1]), or an atomic value (as in the expression (1 to 100)[. mod 5 eq 0]).</p>
<p>To unset the XQUERY CONTEXT, set an empty string, for example:</p>
<pre>SET XQUERY CONTEXT &#39;&#39;
</pre>
<p>Take care to enter valid values as values are checked only when an XQUERY command is issued.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2286"></a>Example</p>
<pre>SET XQUERY CONTEXT &#39;doc(&#34;foo.xml&#34;)&#39;
XQUERY for $i in /a return $i
/
</pre>
<p>This is equivalent to:</p>
<pre>XQuery for $i in /a return $i 
passing XMLQuery(&#34;doc(&#39;foo.xml&#39;)&#34;)
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1436">
<tr>
<td class="cellalignment1444">
<table class="cellalignment1441">
<tr>
<td class="cellalignment1440"><a href="ch_twelve039.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1440"><a href="ch_twelve041.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1446">
<table class="cellalignment1439">
<tr>
<td class="cellalignment1440"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1440"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1440"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1440"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1440"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1440"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>