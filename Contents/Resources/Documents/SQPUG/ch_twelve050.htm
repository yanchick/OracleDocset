<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-104115"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/VARIABLE"></a><title>VARIABLE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737"/>
<meta name="dcterms.created" content="2013-07-17T10:55:23Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="SQL*Plus&reg; User&#39;s Guide and Reference"/>
<meta name="dcterms.identifier" content="E18404-12"/>
<meta name="dcterms.isVersionOf" content="SQPUG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="ch_twelve049.htm" title="Previous" type="text/html"/>
<link rel="Next" href="ch_twelve051.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18404-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">72/82</span> <!-- End Header --><a id="BACGHCJE"></a>
<hr/>
<div id="SQPUG133" class="refsect1"><!-- infolevel="all" infotype="General" --><a id="i2699801"></a>
<h1 class="refsect1">VARIABLE</h1>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2510"></a>Syntax</p>
<p class="synopsis">VAR[IABLE] [<span class="italic">variable</span> [<span class="italic">type</span>] ]</p>
<p>where <span class="italic">type</span> represents one of the following:</p>
<p class="synopsis">NUMBER</p>
<p class="synopsis">CHAR</p>
<p class="synopsis">CHAR (<span class="italic">n</span> [CHAR | BYTE])</p>
<p class="synopsis">NCHAR</p>
<p class="synopsis">NCHAR (<span class="italic">n</span>)</p>
<p class="synopsis">VARCHAR2 (<span class="italic">n</span> [CHAR | BYTE])</p>
<p class="synopsis">NVARCHAR2 (<span class="italic">n</span>)</p>
<p class="synopsis">BLOB</p>
<p class="synopsis">BFILE</p>
<p class="synopsis">CLOB</p>
<p class="synopsis">NCLOB</p>
<p class="synopsis">REFCURSOR</p>
<p class="synopsis">BINARY_FLOAT</p>
<p class="synopsis">BINARY_DOUBLE</p>
<p>Declares<a id="sthref2511"></a><a id="sthref2512"></a> a bind variable that can be referenced in PL/SQL.</p>
<p>VARIABLE without arguments displays a list of all the variables declared in the session. VARIABLE followed only by a variable name lists that variable.</p>
<p>To free resources used by BLOB, BFILE, CLOB and NCLOB bind variables, you may need to manually free temporary LOBs with:</p>
<pre>EXECUTE DBMS_LOB.FREETEMPORARY(:cv)
</pre>
<p>See <a href="ch_five.htm#i1211850">Using Bind Variables</a> for more information on bind variables. See your <a class="olink LNPLS" href="../LNPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about PL/SQL.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2513"></a>Terms</p>
<p class="synopsis"><span class="italic">variable</span></p>
<p><a id="sthref2514"></a>Represents the name of the bind variable you wish to create.</p>
<p class="synopsis">NUMBER</p>
<p><a id="sthref2515"></a><a id="sthref2516"></a>Creates a variable of type NUMBER with fixed length.</p>
<p class="synopsis">CHAR</p>
<p><a id="sthref2517"></a><a id="sthref2518"></a>Creates a variable of type CHAR (character) with length one.</p>
<p class="synopsis">CHAR (<span class="italic">n</span>[CHAR | BYTE])</p>
<p>Creates a variable of type CHAR with length <span class="italic">n</span> bytes or <span class="italic">n</span> characters. The maximum that <span class="italic">n</span> can be is 2000 bytes, and the minimum is 1 byte or 1 character. The maximum <span class="italic">n</span> for a CHAR variable with character semantics is determined by the number of bytes required to store each character for the chosen character set, with an upper limit of 2000 bytes. The length semantics are determined by the length qualifiers CHAR or BYTE, and if not explicitly stated, the value of the NLS_LENGTH_SEMANTICS environment variable is applied to the bind variable. Explicitly stating the length semantics at variable definition stage will always take precedence over the NLS_LENGTH_SEMANTICS setting.</p>
<p class="synopsis">NCHAR</p>
<p><a id="sthref2519"></a><a id="sthref2520"></a>Creates a variable of type NCHAR (national character) with length one.</p>
<p class="synopsis">NCHAR (<span class="italic">n</span>)</p>
<p>Creates a variable of type NCHAR with length <span class="italic">n</span> characters. The maximum that <span class="italic">n</span> can be is determined by the number of bytes required to store each character for the chosen national character set, with an upper limit of 2000 bytes. The only exception to this is when a SQL*Plus session is connected to a pre Oracle9<span class="italic">i</span> server, or the SQLPLUSCOMPATIBILITY system variable is set to a version less than 9.0.0. In this case the length <span class="italic">n</span> can be in bytes or characters depending on the chosen national character set, with the upper limit of 2000 bytes still retained.</p>
<p class="synopsis">VARCHAR2 (<span class="italic">n</span>[CHAR | BYTE])</p>
<p><a id="sthref2521"></a><a id="sthref2522"></a>Creates a variable of type VARCHAR2 with length of up to <span class="italic">n</span> bytes or <span class="italic">n</span> characters. The maximum that <span class="italic">n</span> can be is 32k bytes (see note), and the minimum is 1 byte or 1 character. The maximum <span class="italic">n</span> for a VARCHAR2 variable with character semantics is determined by the number of bytes required to store each character for the chosen character set, with an upper limit of 32k bytes. The length semantics are determined by the length qualifiers CHAR or BYTE, and if not explicitly stated, the value of the NLS_LENGTH_SEMANTICS environment variable is applied to the bind variable. Explicitly stating the length semantics at variable definition stage will always take precedence over the NLS_LENGTH_SEMANTICS setting.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
By default, the maximum VARCHAR2 length is 4000 bytes. Attempting to use a maximum length greater than 4000 bytes raises <span class="italic">ORA-01460 : unimplemented or unreasonable conversion requested</span>
<p>To enable 32k maximum length, you must add the MAX_STRING_SIZE=extended parameter to your <code>init.ora</code> file.</p>
</div>
<p class="synopsis">NVARCHAR2 (<span class="italic">n</span>)</p>
<p>Creates a variable of type NVARCHAR2 with length of up to <span class="italic">n</span> characters. The maximum that <span class="italic">n</span> can be is determined by the number of bytes required to store each character for the chosen national character set, with an upper limit of 32k bytes (see note). The only exception to this is when a SQL*Plus session is connected to a pre Oracle9<span class="italic">i</span> server, or the SQLPLUSCOMPATIBILITY system variable is set to a version less than 9.0.0. In this case the length <span class="italic">n</span> can be in bytes or characters depending on the chosen national character set, with the upper limit of 32k bytes still retained.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
By default, , the maximum NVARCHAR2 length is 4000 bytes. Attempting to use a maximum length greater than 4000 bytes raises <span class="italic">ORA-01460 : unimplemented or unreasonable conversion requested</span>
<p>To enable 32k maximum length, you must add the MAX_STRING_SIZE=extended parameter to your <code>init.ora</code> file.</p>
</div>
<p class="synopsis">BLOB</p>
<p><a id="sthref2523"></a><a id="sthref2524"></a>Creates a variable of type BLOB.</p>
<p class="synopsis">BFILE</p>
<p><a id="sthref2525"></a><a id="sthref2526"></a>Creates a variable of type BFILE.</p>
<p class="synopsis">CLOB</p>
<p><a id="sthref2527"></a><a id="sthref2528"></a>Creates a variable of type CLOB.</p>
<p class="synopsis">NCLOB</p>
<p><a id="sthref2529"></a><a id="sthref2530"></a>Creates a variable of type NCLOB.</p>
<p class="synopsis">REFCURSOR</p>
<p><a id="sthref2531"></a><a id="sthref2532"></a>Creates a variable of type REF CURSOR.</p>
<p class="synopsis">BINARY_FLOAT</p>
<p><a id="sthref2533"></a><a id="sthref2534"></a>Creates a variable of type BINARY_FLOAT. <a id="sthref2535"></a><a id="sthref2536"></a>BINARY_FLOAT is a floating-point number that conforms substantially with the Institute for Electrical and Electronics Engineers (IEEE) Standard for Binary Floating-Point Arithmetic, IEEE Standard 754-1985.</p>
<p class="synopsis">BINARY_DOUBLE</p>
<p><a id="sthref2537"></a><a id="sthref2538"></a>Creates a variable of type BINARY_DOUBLE. <a id="sthref2539"></a><a id="sthref2540"></a>BINARY_DOUBLE is a floating-point number that conforms substantially with the Institute for Electrical and Electronics Engineers (IEEE) Standard for Binary Floating-Point Arithmetic, IEEE Standard 754-1985.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2541"></a>Usage</p>
<p>Bind variables may be used as parameters to stored procedures, or may be directly referenced in <a id="sthref2542"></a>anonymous PL/SQL blocks.</p>
<p>To display the value of a bind variable created with VARIABLE, use the PRINT command. See <a href="ch_twelve031.htm#i2698143">PRINT</a> for more information.</p>
<p>To automatically display the value of a <a id="sthref2543"></a>bind variable created with VARIABLE, use the <a id="sthref2544"></a>SET AUTOPRINT command. See <a href="ch_twelve040.htm#i2698656">SET AUTOP[RINT] {ON | <span class="underline">OFF</span>}</a> for more information.</p>
<p>Bind variables cannot be used in the <a id="sthref2545"></a>COPY command or <a id="sthref2546"></a>SQL statements, except in PL/SQL blocks. Instead, use substitution variables.</p>
<p>When you execute a VARIABLE ... BLOB, BFILE, CLOB or NCLOB command, SQL*Plus associates a LOB locator with the bind variable. The LOB locator is automatically populated when you execute a SELECT clob_column INTO :cv statement in a PL/SQL block. SQL*Plus closes the LOB locator when you exit SQL*Plus.</p>
<p>To free resources used by BLOB, BFILE, CLOB and NCLOB bind variables, you may need to manually free temporary LOBs with:</p>
<pre>EXECUTE DBMS_LOB.FREETEMPORARY(:cv)
</pre>
<p>All temporary LOBs are freed when you exit SQL*Plus.</p>
<p>SQL*Plus SET commands such as SET LONG and SET LONGCHUNKSIZE and SET LOBOFFSET may be used to control the size of the buffer while PRINTing BLOB, BFILE, CLOB or NCLOB bind variables.</p>
<p>SQL*Plus REFCURSOR bind variables may be used to reference <a id="sthref2547"></a>PL/SQL 2.3 or higher Cursor Variables, allowing <a id="sthref2548"></a>PL/SQL output to be formatted by SQL*Plus. For more information on PL/SQL Cursor Variables, see your <a class="olink LNPLS" href="../LNPLS/toc.htm"><span class="italic">Oracle Database PL/SQL Language Reference</span></a>.</p>
<p>When you execute a VARIABLE ... REFCURSOR command, SQL*Plus creates a cursor bind variable. The cursor is automatically opened by an OPEN ... FOR SELECT statement referencing the bind variable in a PL/SQL block. SQL*Plus closes the cursor after completing a PRINT statement for that bind variable, or on exit.</p>
<p>SQL*Plus formatting commands such as <a id="sthref2549"></a>BREAK, <a id="sthref2550"></a>COLUMN, <a id="sthref2551"></a>COMPUTE and <a id="sthref2552"></a>SET may be used to format the output from <a id="sthref2553"></a>PRINTing a REFCURSOR.</p>
<p>A REFCURSOR bind variable may not be PRINTed more than once without re-executing the PL/SQL OPEN&thinsp;...&thinsp;FOR statement.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2554"></a>Examples</p>
<p>The following example illustrates creating a bind variable, changing its value, and displaying its current value.</p>
<p>To create a bind variable, enter:</p>
<pre>VARIABLE ret_val NUMBER
</pre>
<p>To change this bind variable in SQL*Plus, you must use a PL/SQL block:</p>
<pre>BEGIN
 :ret_val:=4;
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output message after defining a bind variable." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t144">
<pre>PL/SQL procedure successfully completed.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To display the value of the bind variable in SQL*Plus, enter:</p>
<pre>PRINT ret_val
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output from printing the bind variable." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t145">
<pre>   RET_VAL
----------
         4
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>The following example illustrates creating a bind variable and then setting it to the value returned by a function:</p>
<pre>VARIABLE id NUMBER
BEGIN
  :id := EMP_MANAGEMENT.HIRE
  (&#39;BLAKE&#39;,&#39;MANAGER&#39;,&#39;KING&#39;,2990,&#39;SALES&#39;);
END;
/
</pre>
<p>The value returned by the stored procedure is being placed in the bind variable, :id. It can be displayed with the PRINT command or used in subsequent PL/SQL subprograms.</p>
<p>The following example illustrates automatically displaying a bind variable:</p>
<pre>SET AUTOPRINT ON
VARIABLE a REFCURSOR
BEGIN
  OPEN :a FOR SELECT LAST_NAME, CITY, DEPARTMENT_ID
  FROM EMP_DETAILS_VIEW
  WHERE SALARY &gt; 12000
  ORDER BY DEPARTMENT_ID;
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output from a variable automatically printed using SET AUTOPRINT ON." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t146">
<pre>PL/SQL procedure successfully completed.
LAST_NAME                  CITY                            DEPARTMENT_ID
-------------------------  ------------------------------  -------------
Hartstein                  Toronto                                    20
Russell                    Oxford                                     80
Partners                   Oxford                                     80
King                       Seattle                                    90
Kochhar                    Seattle                                    90
De Haan                    Seattle                                    90

6 rows selected.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>In the above example, there is no need to issue a PRINT command to display the variable.</p>
<p>The following example creates some variables:</p>
<pre>VARIABLE id NUMBER
VARIABLE txt CHAR (20)
VARIABLE myvar REFCURSOR
</pre>
<p>Enter VARIABLE with no arguments to list the defined variables:</p>
<pre>VARIABLE
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the details for currently defined variables." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t147">
<pre>variable id
datatype NUMBER

variable txt
datatype CHAR(20)

variable myvar
datatype REFCURSOR
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>The following example lists a single variable:</p>
<pre>VARIABLE txt
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the details for the specific variable, txt." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t148">
<pre>variable txt
datatype CHAR(20)
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>The following example illustrates producing a report listing individual salaries and computing the departmental salary cost for employees who earn more than $12,000 per month:</p>
<pre>VARIABLE rc REFCURSOR
BEGIN
  OPEN :rc FOR SELECT DEPARTMENT_NAME, LAST_NAME, SALARY
  FROM EMP_DETAILS_VIEW
  WHERE SALARY &gt; 12000
  ORDER BY DEPARTMENT_NAME, LAST_NAME;
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output message after creating bind variable :rc." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t149">
<pre>PL/SQL procedure successfully completed.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<pre>SET PAGESIZE 100 FEEDBACK OFF
TTITLE LEFT &#39;*** Departmental Salary Bill ***&#39; SKIP 2
COLUMN SALARY FORMAT $999,990.99 HEADING &#39;Salary&#39;
COLUMN DEPARTMENT_NAME HEADING &#39;Department&#39;
COLUMN LAST_NAME HEADING &#39;Employee&#39;
COMPUTE SUM LABEL &#39;Subtotal:&#39; OF SALARY ON DEPARTMENT_NAME
COMPUTE SUM LABEL &#39;Total:&#39; OF SALARY ON REPORT
BREAK ON DEPARTMENT_NAME SKIP 1 ON REPORT SKIP 1
PRINT rc
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output from printing the rc bind variable." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t150">
<pre>*** Departmental Salary Bill ***

DEPARTMENT_NAME                Employee                  Salary
------------------------------ ------------------------- ------------
Executive                      De Haan                     $17,000.00
                               King                        $24,000.00
                               Kochhar                     $17,000.00
******************************                           ------------
Subtotal:                                                  $58,000.00

Marketing                      Hartstein                   $13,000.00
******************************                           ------------
Subtotal:                                                  $13,000.00

Sales                          Partners                    $13,500.00
                               Russell                     $14,000.00
******************************                           ------------
Subtotal:                                                  $27,500.00

                                                         ------------
Total:                                                     $98,500.00
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>The following example illustrates producing a report containing a CLOB column, and then displaying it with the SET LOBOFFSET command.</p>
<p>Assume you have already created a table named clob_tab which contains a column named clob_col of type CLOB. The clob_col contains the following data:</p>
<pre>Remember to run the Departmental Salary Bill report each month. This report
contains confidential information.
</pre>
<p>To produce a report listing the data in the col_clob column, enter</p>
<pre>VARIABLE T CLOB
BEGIN
  SELECT CLOB_COL INTO :T FROM CLOB_TAB;
END;
/
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output message after creating a CLOB variable T." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t151">
<pre>PL/SQL PROCEDURE SUCCESSFULLY COMPLETED
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To print 200 characters from the column clob_col, enter</p>
<pre>SET LINESIZE 70
SET LONG 200
PRINT T
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output after printing the CLOB variable T." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t152">
<pre>T
----------------------------------------------------------------------
Remember to run the Departmental Salary Bill report each month This r
eport contains confidential information.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>To set the printing position to the 21st character, enter</p>
<pre>SET LOBOFFSET 21
PRINT T
</pre>
<div class="inftblruleinformal">
<table class="cellalignment1443" title="Example output from VARIABLE" summary="Shows the output after printing the CLOB variable T with a LOBOFFSET." dir="ltr">
<tbody>
<tr class="cellalignment1437">
<td class="cellalignment1444" id="r1c1-t153">
<pre>T
----------------------------------------------------------------------
Departmental Salary Bill report each month This report contains confi
dential information.
</pre></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblruleinformal" -->
<p>For more information on creating CLOB columns, see your <a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1436">
<tr>
<td class="cellalignment1444">
<table class="cellalignment1441">
<tr>
<td class="cellalignment1440"><a href="ch_twelve049.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1440"><a href="ch_twelve051.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1446">
<table class="cellalignment1439">
<tr>
<td class="cellalignment1440"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1440"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1440"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1440"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1440"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1440"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>