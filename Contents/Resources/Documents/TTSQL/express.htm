<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-114062"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Expressions"></a><title>Expressions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1040"/>
<meta name="dcterms.created" content="2015-03-12T19:51:43Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database SQL Reference"/>
<meta name="dcterms.identifier" content="E21642-12"/>
<meta name="dcterms.isVersionOf" content="TTSQL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2011, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="names.htm" title="Previous" type="text/html"/>
<link rel="Next" href="function.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21642-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/13</span> <!-- End Header -->
<div id="TTSQL194" class="chapter"><a id="i996218"></a>
<h1 class="chapter"><span class="secnum">3</span> Expressions</h1>
<p>Expressions are used for the following purposes:</p>
<ul>
<li>
<p>The select list of the <code dir="ltr"><a href="state.htm#g1513908">INSERT...SELECT</a></code> statement</p>
</li>
<li>
<p>A condition of the <code dir="ltr">WHERE</code> clause and the <code dir="ltr">HAVING</code> clause</p>
</li>
<li>
<p>The <code dir="ltr">GROUP BY</code> and <code dir="ltr">ORDER BY</code> clauses</p>
</li>
<li>
<p>The <code dir="ltr">VALUES</code> clause of the <code dir="ltr"><a href="state.htm#g1513888">INSERT</a></code> and <code dir="ltr"><a href="state.htm#g1513942">MERGE</a></code> statements</p>
</li>
<li>
<p>The <code dir="ltr">SET</code> clause of the <code dir="ltr"><a href="state.htm#i994046">UPDATE</a></code> and <code dir="ltr"><a href="state.htm#g1513942">MERGE</a></code> statements</p>
</li>
</ul>
<p>The following sections describe expressions in TimesTen:</p>
<ul>
<li>
<p><a href="#i1028917">Expression specification</a></p>
</li>
<li>
<p><a href="#i988350">Subqueries</a></p>
</li>
<li>
<p><a href="#i1043723">Constants</a></p>
</li>
<li>
<p><a href="#CIHBBIJB">Format models</a></p>
</li>
<li>
<p><a href="#i1040507">CASE expressions</a></p>
</li>
<li>
<p><a href="#i1052771">ROWID</a></p>
</li>
<li>
<p><a href="#CIHBDDFC">ROWNUM psuedocolumn</a></p>
</li>
</ul>
<div class="refentry"><a id="i1028917"></a>
<div id="TTSQL197" class="refsect1">
<h2 class="refsect1">Expression <a id="sthref278"></a>specification</h2>
<p>An <span class="italic">expression</span> specifies a <span class="italic">value</span> to be used in a SQL operation.</p>
<p>An expression can consist of a primary or several primaries connected by arithmetic operators, comparison operators, string or binary operators, bit operators or any of the functions described in <a href="function.htm#CACFCGCD">Chapter 4, &#34;Functions&#34;</a>. A <a id="sthref279"></a><a id="sthref280"></a><span class="italic">primary</span> is a signed or unsigned value derived from one of the items listed in the SQL syntax.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i988132"></a><a id="sthref281"></a>SQL syntax</p>
<pre dir="ltr">{<span class="codeinlineitalic">ColumnName</span> | ROWID | {? | :<span class="codeinlineitalic">DynamicParameter</span>} |
  <span class="codeinlineitalic">Function</span> | <span class="codeinlineitalic">Constant</span> | (<span class="codeinlineitalic">Expression</span>)}
</pre>
<p>Or:</p>
<pre dir="ltr">[[+ |-] {<span class="codeinlineitalic">ColumnName</span> | SYSDATE | TT_SYSDATE|GETDATE() |
{? | :<span class="codeinlineitalic">DynamicParameter</span>} | <span class="codeinlineitalic">Function</span> |
<span class="codeinlineitalic">Constant</span> | {~ | + | -} <span class="codeinlineitalic">Expression</span>}]
 [...]
</pre>
<p>Or:</p>
<pre dir="ltr"><span class="codeinlineitalic">Expression1</span> [&amp; | | | ^ | + | / | * | - ] <span class="codeinlineitalic">Expression2</span>
</pre>
<p>Or:</p>
<pre dir="ltr"><span class="codeinlineitalic">Expression1</span> | | <span class="codeinlineitalic">Expression2</span>
</pre>
<p>Or:</p>
<pre dir="ltr"><span class="codeinlineitalic">Expression</span>
</pre>
<div class="inftblhruleinformal">
<table class="cellalignment6330" title="Component descriptions" summary="This table contains descriptions of the components of an expression." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t2">Component</th>
<th class="cellalignment6331" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t2" headers="r1c1-t2"><code dir="ltr"><a id="sthref282"></a><a id="sthref283"></a>+, &ndash;</code></td>
<td class="cellalignment6332" headers="r2c1-t2 r1c2-t2">Unary plus and unary minus
<p>Unary minus changes the sign of the primary. The default is to leave the sign unchanged.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t2" headers="r1c1-t2"><code dir="ltr"><span class="codeinlineitalic"><a id="sthref284"></a>ColumnName</span></code></td>
<td class="cellalignment6332" headers="r3c1-t2 r1c2-t2">Name of a column from which a value is to be taken
<p>Column names are discussed in <a href="names.htm#g997409">Chapter 2, &#34;Names, Namespace and Parameters.&#34;</a></p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t2" headers="r1c1-t2"><code dir="ltr">ROWID</code></td>
<td class="cellalignment6332" headers="r4c1-t2 r1c2-t2">Unique ID for each row stored in a table
<p>The rowid value can be retrieved through the <code dir="ltr">ROWID</code> pseudocolumn.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t2" headers="r1c1-t2"><code dir="ltr"><a id="sthref285"></a><a id="sthref286"></a>?</code>
<p><code dir="ltr"><span class="codeinlineitalic">:DynamicParameter</span></code></p>
</td>
<td class="cellalignment6332" headers="r5c1-t2 r1c2-t2">A placeholder for a dynamic parameter
<p>The value of the dynamic parameter is supplied at runtime.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t2" headers="r1c1-t2"><code dir="ltr"><span class="codeinlineitalic"><a id="sthref287"></a><a id="sthref288"></a><a id="sthref289"></a>Function</span></code></td>
<td class="cellalignment6332" headers="r6c1-t2 r1c2-t2">A computed value
<p>See <a href="function.htm#CACFCGCD">Chapter 4, &#34;Functions&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r7c1-t2" headers="r1c1-t2"><code dir="ltr"><span class="codeinlineitalic"><a id="sthref290"></a><a id="sthref291"></a>Constant</span></code></td>
<td class="cellalignment6332" headers="r7c1-t2 r1c2-t2">A specific value
<p>See <a href="#i1043723">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r8c1-t2" headers="r1c1-t2"><code dir="ltr">(</code><code dir="ltr"><span class="codeinlineitalic">Expression</span></code><code dir="ltr">)</code></td>
<td class="cellalignment6332" headers="r8c1-t2 r1c2-t2">Any expression enclosed in parentheses</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r9c1-t2" headers="r1c1-t2"><code dir="ltr"><span class="codeinlineitalic">Expression1</span></code>
<p><code dir="ltr"><span class="codeinlineitalic">Expression2</span></code></p>
</td>
<td class="cellalignment6332" headers="r9c1-t2 r1c2-t2">The specified expressions
<p><code dir="ltr"><span class="codeinlineitalic">Expression1</span></code> and <code dir="ltr"><span class="codeinlineitalic">Expression2,</span></code> when used with the bitwise operators, can be of integer or binary types. The data types of the expressions must be compatible. See <a href="types.htm#i1008748">Chapter 1, &#34;Data Types.&#34;</a></p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r10c1-t2" headers="r1c1-t2"><a id="sthref292"></a><a id="sthref293"></a><code dir="ltr">*</code></td>
<td class="cellalignment6332" headers="r10c1-t2 r1c2-t2">Multiplies two <a id="sthref294"></a><a id="sthref295"></a>primaries</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r11c1-t2" headers="r1c1-t2"><code dir="ltr">/</code></td>
<td class="cellalignment6332" headers="r11c1-t2 r1c2-t2">Divides two primaries</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r12c1-t2" headers="r1c1-t2"><code dir="ltr">+</code></td>
<td class="cellalignment6332" headers="r12c1-t2 r1c2-t2">Adds two primaries</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r13c1-t2" headers="r1c1-t2"><code dir="ltr">&ndash;</code></td>
<td class="cellalignment6332" headers="r13c1-t2 r1c2-t2">Subtracts two primaries</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r14c1-t2" headers="r1c1-t2"><code dir="ltr"><a id="sthref296"></a><a id="sthref297"></a><a id="sthref298"></a>&amp;</code></td>
<td class="cellalignment6332" headers="r14c1-t2 r1c2-t2">Bitwise <code dir="ltr">AND</code> of the two operands
<p>Sets a bit to 1 if and only if both of the corresponding bits in <code dir="ltr"><span class="codeinlineitalic">Expression1</span></code> and <code dir="ltr"><span class="codeinlineitalic">Expression2</span></code> are 1. Sets a bit to 0 if the bits differ or both are 0.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r15c1-t2" headers="r1c1-t2"><a id="sthref299"></a><a id="sthref300"></a><code dir="ltr">|</code></td>
<td class="cellalignment6332" headers="r15c1-t2 r1c2-t2">Bitwise <code dir="ltr">OR</code> of the two operands
<p>Sets a bit to 1 if one or both of the corresponding bits in <code dir="ltr"><span class="codeinlineitalic">Expression1</span></code> and <code dir="ltr"><span class="codeinlineitalic">Expression2</span></code> are 1. Sets a bit to 0 if both of the corresponding bits are 0.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r16c1-t2" headers="r1c1-t2"><code dir="ltr"><a id="sthref301"></a><a id="sthref302"></a>~</code></td>
<td class="cellalignment6332" headers="r16c1-t2 r1c2-t2">Bitwise <code dir="ltr">NOT</code> of the operand
<p>Takes only one <code dir="ltr"><span class="codeinlineitalic">Expression</span></code> and inverts each bit in the operand, changing all the ones to zeros and zeros to ones.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r17c1-t2" headers="r1c1-t2"><code dir="ltr"><a id="sthref303"></a><a id="sthref304"></a>^</code></td>
<td class="cellalignment6332" headers="r17c1-t2 r1c2-t2">Exclusive <code dir="ltr">OR</code> of the two operands
<p>Sets the bit to 1 where the corresponding bits in its <code dir="ltr"><span class="codeinlineitalic">Expression1</span></code> and <code dir="ltr"><span class="codeinlineitalic">Expression2</span></code> are different and to 0 if they are the same. If one bit is 0 and the other bit is 1, the corresponding result bit is set to 1. Otherwise, the corresponding result bit is set to 0.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r18c1-t2" headers="r1c1-t2"><code dir="ltr"><a id="sthref305"></a><a id="sthref306"></a>||</code></td>
<td class="cellalignment6332" headers="r18c1-t2 r1c2-t2">Concatenate operator
<p>Concatenates <code dir="ltr"><span class="codeinlineitalic">Expression1</span></code> and <code dir="ltr"><span class="codeinlineitalic">Expression2</span></code>, where both expressions are character strings. Forms a new string value that contains the values of both expressions. See also <a href="function.htm#i1000740">&#34;CONCAT&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref307"></a>Description</p>
<ul>
<li>
<p><a id="sthref308"></a><a id="sthref309"></a>Arithmetic operators can be used between numeric values. See <a href="types.htm#i1029200">&#34;Numeric data types&#34;</a>.</p>
</li>
<li>
<p>Arithmetic operators can also be used between datetime values and interval types. The result of a datetime expression is either a datetime data type or an interval data type.</p>
</li>
<li>
<p>Arithmetic operators cannot be applied to string values.</p>
</li>
<li>
<p>Elements in an expression are evaluated in the following order:</p>
<ul>
<li>
<p>Functions and expressions in parentheses</p>
</li>
<li>
<p>Unary pluses and minuses</p>
</li>
<li>
<p>The <code dir="ltr">*</code> and <code dir="ltr">/</code> operations</p>
</li>
<li>
<p>The <code dir="ltr">+</code> and <code dir="ltr">&ndash;</code> operations</p>
</li>
<li>
<p>Elements of equal precedence are evaluated in left-to-right order</p>
</li>
</ul>
</li>
<li>
<p>You can enclose expressions in parentheses to control the order of their evaluation. An example follows.</p>
<pre dir="ltr">10 * 2 &ndash; 1 = 19 but 10 * (2 &ndash; 1) = 10
</pre></li>
<li>
<p>Type conversion, truncation, underflow, or overflow can occur when some expressions are evaluated. See <a href="types.htm#i1008748">Chapter 1, &#34;Data Types&#34;</a>.</p>
</li>
<li>
<p>If either operand in a numeric expression is <code dir="ltr">NULL</code>, the result is <code dir="ltr">NULL</code>.</p>
</li>
<li>
<p>Since <code dir="ltr">NVL</code> takes two parameters, both designated as an &#34;expression&#34;, TimesTen does not permit <code dir="ltr">NULL</code> in either position. If there is a <code dir="ltr">NULL</code> value in an expression, comparison operators and other predicates evaluate to <code dir="ltr">NULL</code>. See <a href="search.htm#i994763">Chapter 5, &#34;Search Conditions&#34;</a> for more information on evaluation of comparison operators and predicates containing <code dir="ltr">NULL</code> values. TimesTen permits inserting <code dir="ltr">NULL</code>, but in general <code dir="ltr">INSERT</code> takes only specific values, and not general expressions.</p>
</li>
<li>
<p>The query optimizer and execution engine permit multiple rowid lookups when a predicate specifies a disjunct of rowid equalities or uses <code dir="ltr">IN</code>. For example, multiple fast rowid lookups are executed for:</p>
<pre dir="ltr">WHERE ROWID = :v1 OR ROWID = :v2
</pre>
<p>Or equivalently:</p>
<pre dir="ltr">WHERE ROWID IN (:v1, :v2)
</pre></li>
<li>
<p>The <code dir="ltr">?</code> or <code dir="ltr">:</code><code dir="ltr"><span class="codeinlineitalic">DynamicParameter</span></code> can be used as a dynamic parameter in an expression.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref310"></a>Examples</p>
<p>This example shows a <a id="sthref311"></a><a id="sthref312"></a>dynamic parameter in the <code dir="ltr">WHERE</code> clause of any <code dir="ltr">SELECT</code> statement:</p>
<pre dir="ltr">SELECT * FROM purchasing.orders
  WHERE partnumber = ? AND ordernumber &gt; ?
  ORDER BY ordernumber;
</pre>
<p>This example shows a dynamic parameter in the <code dir="ltr">WHERE</code> and <code dir="ltr">SET</code> clauses of an <code dir="ltr">UPDATE</code> statement:</p>
<pre dir="ltr">UPDATE purchasing.parts
  SET salesprice = :dynamicparameter1
  WHERE partnumber = :dynamicparameter2;
</pre>
<p>This example shows a dynamic parameter in the <code dir="ltr">WHERE</code> clause of a <code dir="ltr">DELETE</code> statement:</p>
<pre dir="ltr">DELETE FROM purchasing.orderitems
  WHERE itemnumber BETWEEN ? AND ?;
</pre>
<p>This example shows a dynamic parameter in the <code dir="ltr">VALUES</code> clause of an <code dir="ltr"><a href="state.htm#g1513888">INSERT</a></code> statement. In this example, both <code dir="ltr">?</code> and <code dir="ltr">:</code><code dir="ltr"><span class="codeinlineitalic">dynamicparameter</span></code> are used where <code dir="ltr">:dynamicparameter1</code> corresponds to both the second and fourth columns of the <code dir="ltr">purchasing.orderitems</code> table. Therefore, only four distinct dynamic parameters need to be passed to this expression with the second parameter used for both the second and fourth columns.</p>
<pre dir="ltr">INSERT INTO purchasing.orderitems VALUES  
   (?,:dynamicparameter1,
      :dynamicparameter2,
      :dynamicparameter1,?);
</pre>
<p>This example demonstrates that both <code dir="ltr">?</code> and :<code dir="ltr"><span class="codeinlineitalic">dynamicparameter</span></code> can be used in the same SQL statement and shows the semantic difference between repeating both types of dynamic parameters.</p>
<p>Following are examples of bitwise operators.</p>
<pre dir="ltr">Command&gt; SELECT 0x183D &amp; 0x00FF FROM dual;
&lt; 003D &gt;
1 row found.
Command&gt; SELECT ~255 FROM dual;
&lt; -256 &gt;
1 row found.
Command&gt; SELECT 0x08 | 0x0F FROM dual;
&lt; 0F &gt;
1 row found.
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i988350"></a>
<div id="TTSQL198" class="refsect1">
<h2 class="refsect1"><a id="sthref313"></a><a id="sthref314"></a>Subqueries</h2>
<p>TimesTen supports subqueries in <code dir="ltr"><a href="state.htm#g1513908">INSERT...SELECT</a></code>, <code dir="ltr"><a href="state.htm#i992961">CREATE VIEW</a></code> or <code dir="ltr"><a href="state.htm#i994046">UPDATE</a></code> statements and in the <code dir="ltr">SET</code> clause of an <code dir="ltr"><a href="state.htm#i994046">UPDATE</a></code> statement, in a search condition and as a derived table. TimesTen supports table subqueries and scalar subqueries. TimesTen does not support row subqueries. A subquery can specify an aggregate with a <code dir="ltr">HAVING</code> clause or joined table. It can also be correlated.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref315"></a>SQL syntax</p>
<pre dir="ltr">[NOT] EXISTS | [NOT] IN (<span class="codeinlineitalic">Subquery</span>)
<span class="codeinlineitalic">Expression</span> {= | &lt;&gt; | &gt; | &gt;= | &lt; | &lt;= } [ANY | ALL] (<span class="codeinlineitalic">Subquery</span>)
<span class="codeinlineitalic">Expression</span> [NOT] IN (<span class="codeinlineitalic">ValueList</span> | <span class="codeinlineitalic">Subquery</span>)
</pre>
<p>Where <code dir="ltr"><span class="codeinlineitalic">ValueList</span></code> is a list of constant expressions. Each constant expression specifies a constant value or an expression that evaluates to a constant value (such as a number, character string, or date). This includes support for bound values (<code dir="ltr">?</code> or :<code dir="ltr"><span class="codeinlineitalic">DynamicParameter</span></code>), <code dir="ltr">NULL</code>, and calls to functions that return constant values.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref316"></a>Description</p>
<p>TimesTen supports queries with the characteristics listed in each section.</p>
<p class="subhead2"><a id="TTSQL199"></a>Table subqueries</p>
<ul>
<li>
<p>A subquery can appear in the <code dir="ltr">WHERE</code> clause or <code dir="ltr">HAVING</code> clause of any statement except one that creates a materialized view. Only one table subquery can be specified in a predicate. These predicates can be specified in a <code dir="ltr">WHERE</code> or <code dir="ltr">HAVING</code> clause, an <code dir="ltr">OR</code> expression within a <code dir="ltr">WHERE</code> or <code dir="ltr">HAVING</code> clause, or an <code dir="ltr">ON</code> clause of a joined table. They cannot be specified in a <code dir="ltr">CASE</code> expression, a materialized view, or a <code dir="ltr">HAVING</code> clause that uses the <code dir="ltr">+</code> operator for outer joins.</p>
</li>
<li>
<p>A subquery can be specified in an <code dir="ltr">EXISTS</code> or <code dir="ltr">NOT EXISTS</code> predicate, a quantified predicate with <code dir="ltr">ANY</code> or <code dir="ltr">ALL</code>, or a comparison predicate. The allowed operators for both comparison and quantified predicates are: <code dir="ltr">=</code>, <code dir="ltr">&lt;</code>, <code dir="ltr">&gt;</code>, <code dir="ltr">&lt;=</code>, <code dir="ltr">&gt;=</code>, <code dir="ltr">&lt;&gt;</code>. The subquery cannot be connected to the outer query through a <code dir="ltr">UNIQUE</code> or <code dir="ltr">NOT UNIQUE</code> operator.</p>
</li>
<li>
<p>Only one subquery can be specified in a quantified or comparison predicate. Specify the subquery as either the right operand or the left operand of the predicate, but not both.</p>
</li>
<li>
<p>The subquery should not have an <a id="sthref317"></a><a id="sthref318"></a><code dir="ltr">ORDER BY</code> clause.</p>
</li>
<li>
<p><code dir="ltr">FIRST</code> <code dir="ltr"><span class="codeinlineitalic">NumRows</span></code> is not supported in subquery statements.</p>
</li>
<li>
<p>In a query specified in a quantified or comparison predicate, the underlying <code dir="ltr">SELECT</code> must have a single expression in the select list. In a query specified in a comparison predicate, if the underlying select returns a single row, the return value is the select result. If the underlying select returns no row, the return value is <code dir="ltr">NULL</code>. It is an error if the subquery returns multiple rows.</p>
</li>
</ul>
<p class="subhead2"><a id="TTSQL200"></a>Scalar subqueries</p>
<p>A scalar subquery returns a single value.</p>
<ul>
<li>
<p>A nonverifiable scalar subquery has a predicate such that the optimizer cannot detect at compile time that the subquery returns at most one row for each row of the outer query. The subquery cannot be specified in an <code dir="ltr">OR</code> expression.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref319"></a>Examples</p>
<p>Examples of supported subqueries for a list of customers having at least one unshipped order:</p>
<pre dir="ltr">SELECT customers.name FROM customers
  WHERE EXISTS (SELECT 1 FROM orders
    WHERE customers.id = orders.custid
    AND orders.status = &#39;unshipped&#39;);

SELECT customers.name FROM customers
  WHERE customers.id = ANY 
    (SELECT orders.custid FROM orders
  WHERE orders.status = &#39;unshipped&#39;);

SELECT customers.name FROM customers 
  WHERE customers.id IN 
    (SELECT orders.custid FROM orders 
  WHERE orders.status = &#39;unshipped&#39;);
</pre>
<p>In this example, list items are shipped on the same date as when they are ordered:</p>
<pre dir="ltr">SELECT line_items.id FROM line_items 
  WHERE line_items.ship_date = 
    (SELECT orders.order_date FROM orders 
  WHERE orders.id = line_items.order_id);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i1043723"></a>
<div id="TTSQL202" class="refsect1">
<h2 class="refsect1">Con<a id="sthref320"></a><a id="sthref321"></a>stants</h2>
<p>A constant is a literal value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref322"></a>SQL syntax<a id="sthref323"></a></p>
<pre dir="ltr">{<span class="codeinlineitalic">IntegerValue</span> | <span class="codeinlineitalic">FloatValue</span> |<span class="codeinlineitalic">FloatingPointLiteral</span>|
    <span class="codeinlineitalic">FixedPointValue</span> | &#39;<span class="codeinlineitalic">CharacterString</span>&#39;|
    &#39;<span class="codeinlineitalic">NationalCharacterString</span>&#39; | <span class="codeinlineitalic">HexadecimalLiteral</span> |
    &#39;<span class="codeinlineitalic">DateString</span>&#39; | <span class="codeinlineitalic">DateLiteral</span> |&#39;<span class="codeinlineitalic">TimeString</span>&#39; | 
    <span class="codeinlineitalic">TimeLiteral</span> | &#39;<span class="codeinlineitalic">TimestampString</span>&#39; | TimestampLiteral |
    <span class="codeinlineitalic">IntervalLiteral</span> | BINARY_FLOAT_INFINITY |
    BINARY_DOUBLE_INFINITY | -BINARY_FLOAT_INFINITY |
    -BINARY_DOUBLE_INFINITY | BINARY_FLOAT_NAN |
     BINARY_DOUBLE_NAN
}
</pre>
<div class="inftblhruleinformal">
<table class="cellalignment6330" title="Constant descriptions" summary="This table contains descriptions of constants." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t3">Constant</th>
<th class="cellalignment6331" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t3" headers="r1c1-t3"><a id="sthref324"></a><a id="sthref325"></a><code dir="ltr"><span class="codeinlineitalic">IntegerValue</span></code></td>
<td class="cellalignment6332" headers="r2c1-t3 r1c2-t3">A whole number compatible with <code dir="ltr">TT_INTEGER</code>, <code dir="ltr">TT_BIGINT</code> or <code dir="ltr">TT_SMALLINT</code> data types or an unsigned whole number compatible with the <code dir="ltr">TT_TINYINT</code> data type
<p>For example:</p>
<pre dir="ltr">155, 5, -17
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t3" headers="r1c1-t3"><a id="sthref326"></a><a id="sthref327"></a><code dir="ltr"><span class="codeinlineitalic">FloatValue</span></code></td>
<td class="cellalignment6332" headers="r3c1-t3 r1c2-t3">A floating-point number compatible with the <code dir="ltr">BINARY</code><code dir="ltr">_FLOAT</code> or <code dir="ltr">BINARY_DOUBLE</code> data types
<p>Examples:</p>
<pre dir="ltr">.2E-4, 1.23e -4, 27.03, -13.1
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t3" headers="r1c1-t3"><code dir="ltr"><span class="codeinlineitalic">FloatingPointLiteral</span></code></td>
<td class="cellalignment6332" headers="r4c1-t3 r1c2-t3">Floating point literals
<p>These are compatible with the <code dir="ltr">BINARY_FLOAT</code> and <code dir="ltr">BINARY_DOUBLE</code> data types. <code dir="ltr">f</code> or <code dir="ltr">F</code> indicates that the number is a 32-bit floating point number (of type <code dir="ltr">BINARY_FLOAT</code>). <code dir="ltr">d</code> or <code dir="ltr">D</code> indicates that the number is a 64-bit floating point number (of type <code dir="ltr">BINARY_DOUBLE</code>). For example:</p>
<pre dir="ltr">123.23F, 0.5d
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t3" headers="r1c1-t3"><a id="sthref328"></a><a id="sthref329"></a><code dir="ltr"><span class="codeinlineitalic">FixedPointValue</span></code></td>
<td class="cellalignment6332" headers="r5c1-t3 r1c2-t3">A fixed-point number compatible with the <code dir="ltr">BINARY_FLOAT</code>, <code dir="ltr">BINARY_DOUBLE</code> or <code dir="ltr">NUMBER</code> data types
<p>For example:</p>
<pre dir="ltr">27.03
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t3" headers="r1c1-t3"><a id="sthref330"></a><a id="sthref331"></a><code dir="ltr"><span class="codeinlineitalic">CharacterString</span></code></td>
<td class="cellalignment6332" headers="r6c1-t3 r1c2-t3">A character string compatible with <code dir="ltr">CHAR</code> or <code dir="ltr">VARCHAR2</code> data types
<p>String constants are delimited by single quotation marks. For example:</p>
<pre dir="ltr">&#39;DON&#39;&#39;T JUMP!&#39;
</pre>
<p>Two single quotation marks in a row are interpreted as a single quotation mark, not as string delimiters or the empty string.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r7c1-t3" headers="r1c1-t3"><a id="sthref332"></a><a id="sthref333"></a><a id="sthref334"></a><code dir="ltr"><span class="codeinlineitalic">NationalCharacterString</span></code></td>
<td class="cellalignment6332" headers="r7c1-t3 r1c2-t3">A character string compatible with <code dir="ltr">NCHAR</code> or <code dir="ltr">NVARCHAR2</code> data types
<p>National string constants are preceded by an indicator consisting of either <code dir="ltr">N</code> or <code dir="ltr">n</code>, and delimited by single quotation marks. For example:</p>
<pre dir="ltr">N&#39;Here&#39;&#39;s how!&#39;
</pre>
<p>Two single quotation marks in a row are interpreted as a single quotation mark.</p>
<p>The contents of a national string constant may consist of any combination of:</p>
<ul>
<li>
<p>ASCII characters</p>
</li>
<li>
<p>UTF-8 encoded Unicode characters</p>
</li>
<li>
<p>Escaped Unicode characters</p>
</li>
</ul>
<p>ASCII characters and UTF-8 encoded characters are converted internally to their corresponding UTF-16 format Unicode equivalents.</p>
<p>Escaped Unicode characters are of the form <code dir="ltr"><span class="codeinlineitalic">\uxxxx</span></code>, where <code dir="ltr"><span class="codeinlineitalic">xxxx</span></code> is the four hexadecimal-digit representation of the Unicode character. For example:</p>
<pre dir="ltr">N&#39;This is an \u0061&#39;
</pre>
<p>Is equivalent to:</p>
<pre dir="ltr">N&#39;This is an a&#39;
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">\u</span></code> itself can be escaped with another <code dir="ltr">\</code>. The sequence <code dir="ltr"><span class="codeinlineitalic">\\u</span></code> is always converted to <code dir="ltr"><span class="codeinlineitalic">\u</span></code>. No other escapes are recognized.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r8c1-t3" headers="r1c1-t3"><a id="sthref335"></a><a id="sthref336"></a><code dir="ltr"><span class="codeinlineitalic">HexadecimalLiteral</span></code></td>
<td class="cellalignment6332" headers="r8c1-t3 r1c2-t3">Hexadecimal literals
<p>Hexadecimal literals containing digits 0 - 9 and A - F (or a - f) are compatible with the <code dir="ltr">BINARY</code>, <code dir="ltr">VARBINARY</code>, <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code> and <code dir="ltr">BLOB</code> data types. A <code dir="ltr"><span class="codeinlineitalic">HexadecimalLiteral</span></code> constant should be prefixed with the characters &#34;<code dir="ltr">0x</code>.&#34; For example:</p>
<pre dir="ltr">0xFFFAB0880088343330FFAA7
</pre>
<p>Or:</p>
<pre dir="ltr">0x000A001231
</pre>
<p>Hexadecimal digits provided with an odd length are pre-fixed with a zero to make it even. For example, the value <code dir="ltr">0x123</code> is converted to <code dir="ltr">0x0123</code>.</p>
<p>If you provide a character literal, the binary values of the characters are used. For example, the following demonstrates what is stored when inserting a hexadecimal literal and a character literal in a <code dir="ltr">VARBINARY</code> column <code dir="ltr">colbin</code> in table <code dir="ltr">tabvb</code>:</p>
<pre dir="ltr">Command&gt; insert into tabvb values (0x1234);
1 row inserted.
Command&gt; insert into tabvb values (&#39;1234&#39;);
1 row inserted.
Command&gt; select colbin from tabvb;
&lt; 1234 &gt;
&lt; 31323334 &gt;
2 rows found.
</pre>
<p>However, Oracle Database differs in that it only accepts character literals, such as &#39;1234&#39;, and translates the character literal as a binary literal of 0x1234. As a result, <code dir="ltr">insert into tabvb values (&#39;1234&#39;);</code> behaves differently between Oracle Database and TimesTen. Oracle Database does not accept 0x1234 as a hexadecimal literal.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r9c1-t3" headers="r1c1-t3">s<a id="sthref337"></a><a id="sthref338"></a><code dir="ltr"><span class="codeinlineitalic">DateString</span></code></td>
<td class="cellalignment6332" headers="r9c1-t3 r1c2-t3">A string of the format <code dir="ltr">YYYY-MM-DD</code> <code dir="ltr">HH:MI:SS</code> enclosed in single quotation marks (<code dir="ltr">&#39;</code>)
<p>For example:</p>
<pre dir="ltr">&#39;2007-01-27 12:00:00&#39;
</pre>
<p>The <code dir="ltr">YYYY</code> field must have a four-digit value. The <code dir="ltr">MM</code> and <code dir="ltr">DD</code> fields must have two-digit values. The only spaces allowed are trailing spaces (after the day field). The range is from <code dir="ltr">&#39;-4713-01-01&#39;</code> (January 1, 4712 BC) to <code dir="ltr">&#39;9999-12-31&#39;</code>, (December 31, 9999). The time component is not required. For example:</p>
<pre dir="ltr">&#39;2007-01-27&#39;
</pre>
<p>For <code dir="ltr">TT_DATE</code> data types, the string is of format <code dir="ltr">YYYY-MM-DD</code> and ranges from <code dir="ltr">&#39;1753-01-01&#39;</code> to <code dir="ltr">&#39;9999-12-31&#39;</code>.</p>
<p>If you are using TimesTen type mode, see Oracle TimesTen In-Memory Database Release 6.0.3 documentation for information about <code dir="ltr"><span class="codeinlineitalic">DateString</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r10c1-t3" headers="r1c1-t3"><a id="sthref339"></a><a id="sthref340"></a><code dir="ltr"><span class="codeinlineitalic">DateLiteral</span></code></td>
<td class="cellalignment6332" headers="r10c1-t3 r1c2-t3">Format: <code dir="ltr">DATE</code> <code dir="ltr"><span class="codeinlineitalic">DateString</span></code>
<p>For example:</p>
<pre dir="ltr">DATE &#39;2007-01-27&#39; or DATE &#39;2007-01-27 12:00:00&#39;
</pre>
<p>For <code dir="ltr">TT_DATE</code> data types, use the literal <code dir="ltr">TT_DATE</code>. For example:</p>
<pre dir="ltr">TT_DATE &#39;2007-01-27&#39;. 
</pre>
<p>Do not specify a time portion with the <code dir="ltr">TT_DATE</code> literal.</p>
<p>The <code dir="ltr">DATE</code> keyword is case-insensitive.</p>
<p>TimesTen also supports ODBC date-literal syntax. For example:</p>
<pre dir="ltr">{d &#39;2007-01-27&#39;}. 
</pre>
<p>See ODBC documentation for details.</p>
<p>If you are using TimesTen type mode, see Oracle TimesTen In-Memory Database Release 6.0.3 documentation for information about <code dir="ltr"><span class="codeinlineitalic">DateLiteral</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r11c1-t3" headers="r1c1-t3"><a id="sthref341"></a><a id="sthref342"></a><code dir="ltr"><span class="codeinlineitalic">TimeString</span></code></td>
<td class="cellalignment6332" headers="r11c1-t3 r1c2-t3">A string of the format <code dir="ltr">HH:MI:SS</code> enclosed in single quotation marks (<code dir="ltr">&#39;</code>)
<p>For example:</p>
<pre dir="ltr">&#39;20:25:30&#39;
</pre>
<p>The range is <code dir="ltr">&#39;00:00:00&#39;</code> to <code dir="ltr">&#39;23:59:59&#39;</code>, inclusive. Every component must be two digits. The only spaces allowed are trailing spaces (after the seconds field).</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r12c1-t3" headers="r1c1-t3"><code dir="ltr"><span class="codeinlineitalic"><a id="sthref343"></a><a id="sthref344"></a>TimeLiteral</span></code></td>
<td class="cellalignment6332" headers="r12c1-t3 r1c2-t3">Format: <code dir="ltr">TIME</code> <code dir="ltr"><span class="codeinlineitalic">TimeString</span></code>
<p>For example:</p>
<pre dir="ltr">TIME &#39;20:25:30&#39;
</pre>
<p>The <code dir="ltr">TIME</code> keyword is case-insensitive.</p>
<p>Usage examples:</p>
<pre dir="ltr">INSERT INTO timetable VALUES (TIME &#39;10:00:00&#39;);

SELECT * FROM timetable WHERE col1 &lt; TIME &#39;10:00:00&#39;;
</pre>
<p>TimesTen also supports <a id="sthref345"></a>ODBC time literal syntax. For example:</p>
<pre dir="ltr">{t &#39;12:00:00&#39;}
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r13c1-t3" headers="r1c1-t3"><a id="sthref346"></a><a id="sthref347"></a><code dir="ltr"><span class="codeinlineitalic">TimestampString</span></code></td>
<td class="cellalignment6332" headers="r13c1-t3 r1c2-t3">A string of the format <code dir="ltr">YYYY-MM-DD HH:MI:SS [.FFFFFFFFF]</code> -enclosed in single quotation marks (&#39;)
<p>The range is from <code dir="ltr">&#39;-4713-01-01&#39;</code> (January 1, 4712 BC) to <code dir="ltr">&#39;9999-12-31&#39;</code> (December 31, 9999). The year field must be a four-digit value. All other fields except for the fractional part must be two-digit values. The fractional field can consist of zero to nine digits. For <code dir="ltr">TT_TIMESTAMP</code> data types, a string of format <code dir="ltr">YYYY-MM-DD HH:MI:SS[.FFFFFF]</code> enclosed in single quotation marks(&#39;). The range is from &#39;<code dir="ltr">1753-01-01 00:00:00.000000&#39;</code> to <code dir="ltr">&#39;9999-12-31 23:59:59.999999&#39;</code>. The fractional field can consist of zero to six digits.</p>
<p>If you have a <code dir="ltr">CHAR</code> column called <code dir="ltr">C1</code>, and want to enforce the <code dir="ltr">TIME</code> comparison, you can do the following:</p>
<pre dir="ltr">SELECT * FROM testable WHERE C1 = TIME &#39;12:00:00&#39;
</pre>
<p>In this example, each <code dir="ltr">CHAR</code> value from <code dir="ltr">C1</code> is converted into a <code dir="ltr">TIME</code> value before comparison, provided that values in <code dir="ltr">C1</code> conform to the proper <code dir="ltr">TIME</code> syntax.</p>
<p>If you are using TimesTen type mode, see Oracle TimesTen In-Memory Database Release 6.0.3 documentation for information on <code dir="ltr"><span class="codeinlineitalic">TimestampString</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r14c1-t3" headers="r1c1-t3"><code dir="ltr"><span class="codeinlineitalic"><a id="sthref348"></a><a id="sthref349"></a>TimestampLiteral</span></code></td>
<td class="cellalignment6332" headers="r14c1-t3 r1c2-t3">Format: <code dir="ltr">TIMESTAMP</code> <code dir="ltr"><span class="codeinlineitalic">TimestampString</span></code>
<p>For example:</p>
<pre dir="ltr">TIMESTAMP &#39;2007-01-27 11:00:00.000000&#39;
</pre>
<p>For <code dir="ltr">TIMESTAMP</code> data types, the fraction field supports from zero to nine digits of fractional seconds. For <code dir="ltr">TT_TIMESTAMP</code> data types, the fraction field supports from zero to six digits of fractional seconds.</p>
<p>The <code dir="ltr">TIMESTAMP</code> keyword is case-insensitive.</p>
<p>Use literal syntax to enforce <code dir="ltr">DATE/TIME/TIMESTAMP</code> comparisons for <code dir="ltr">CHAR</code> and <code dir="ltr">VARCHAR2</code> data types.</p>
<p>TimesTen also supports <a id="sthref350"></a>ODBC timestamp literal syntax. For example:</p>
<pre dir="ltr">{ts &#39;9999-12-31 12:00:00&#39;}
</pre>
<p>If you are using TimesTen type mode, see Oracle TimesTen In-Memory Database Release 6.0.3 documentation for information about <code dir="ltr"><span class="codeinlineitalic">TimestampLiteral</span></code>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r15c1-t3" headers="r1c1-t3"><a id="sthref351"></a><a id="sthref352"></a><code dir="ltr"><span class="codeinlineitalic">IntervalLiteral</span></code></td>
<td class="cellalignment6332" headers="r15c1-t3 r1c2-t3">Format: <code dir="ltr">INTERVAL [+\-]</code> <code dir="ltr"><span class="codeinlineitalic">CharacterString</span></code> <code dir="ltr"><span class="codeinlineitalic">IntervalQualifier</span></code>
<p>For example:</p>
<pre dir="ltr">INTERVAL &#39;8&#39; DAY
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r16c1-t3" headers="r1c1-t3"><code dir="ltr"><a id="sthref353"></a><a id="sthref354"></a><a id="sthref355"></a>BINARY_FLOAT_INFINITY | BINARY_DOUBLE_INFINITY</code></td>
<td class="cellalignment6332" headers="r16c1-t3 r1c2-t3">Positive infinity
<p><code dir="ltr">INF</code> (positive infinity) is an IEEE floating-point value that is compatible with the <code dir="ltr">BINARY_FLOAT</code> and <code dir="ltr">BINARY_DOUBLE</code> data types. Use the constant values <code dir="ltr">BINARY_FLOAT_INFINITY</code> or <code dir="ltr">BINARY_DOUBLE_INFINITY</code> to represent positive infinity.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r17c1-t3" headers="r1c1-t3"><code dir="ltr">-<a id="sthref356"></a><a id="sthref357"></a><a id="sthref358"></a>BINARY_FLOAT_INFINITY | -BINARY_DOUBLE_INFINITY</code></td>
<td class="cellalignment6332" headers="r17c1-t3 r1c2-t3">Negative infinity
<p><code dir="ltr">-INF</code> (negative infinity) is an IEEE floating-point value that is compatible with the <code dir="ltr">BINARY_FLOAT</code> and <code dir="ltr">BINARY_DOUBLE</code> data types. Use the constant values -<code dir="ltr">BINARY_FLOAT_INFINITY</code> and -<code dir="ltr">BINARY_DOUBLE_INFINITY</code> to represent negative infinity.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r18c1-t3" headers="r1c1-t3"><code dir="ltr"><a id="sthref359"></a><a id="sthref360"></a><a id="sthref361"></a>BINARY_FLOAT_NAN</code> |
<p><code dir="ltr">BINARY_DOUBLE_NAN</code></p>
</td>
<td class="cellalignment6332" headers="r18c1-t3 r1c2-t3">Non-numbers
<p><code dir="ltr">NaN</code> (&#34;not a number&#34;) is an IEEE floating-point value that is compatible with the <code dir="ltr">BINARY_FLOAT</code> and <code dir="ltr">BINARY_DOUBLE</code> data types. Use the constant values <code dir="ltr">BINARY_FLOAT_NAN</code> or <code dir="ltr">BINARY_DOUBLE_NAN</code> to represent <code dir="ltr">NaN</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CIHBBIJB"></a>
<div id="TTSQL203" class="refsect1">
<h2 class="refsect1"><a id="sthref362"></a>Format models</h2>
<p>A format model is a character literal that describes the format of datetime and numeric data stored in a character string. When you convert a character string into a date or number, a format model determines how TimesTen interprets the string.</p>
<p>This section covers the following format models:</p>
<ul>
<li>
<p><a href="#i1055501">Number format models</a></p>
</li>
<li>
<p><a href="#i1057765">Datetime format models</a></p>
</li>
<li>
<p><a href="#i1094088">Format model for ROUND and TRUNC date functions</a></p>
</li>
<li>
<p><a href="#CIHBFEIJ">Format model for TO_CHAR of TimesTen datetime data types</a></p>
</li>
</ul>
<div id="TTSQL204" class="refsect2"><a id="i1055501"></a>
<h3 class="refsect2"><a id="sthref363"></a><a id="sthref364"></a>Number format models</h3>
<p>Use number format models in the following functions:</p>
<ul>
<li>
<p>In the <code dir="ltr">TO_CHAR</code> function to translate a value of <code dir="ltr">NUMBER</code>, <code dir="ltr">BINARY_FLOAT</code>, or <code dir="ltr">BINARY_DOUBLE</code> data type to <code dir="ltr">VARCHAR2</code> data type.</p>
</li>
<li>
<p>In the <code dir="ltr">TO_NUMBER</code> function to translate a value of <code dir="ltr">CHAR</code> or <code dir="ltr">VARCHAR2</code> data type to <code dir="ltr">NUMBER</code> data type.</p>
</li>
</ul>
<p>The default <code dir="ltr">american_america</code> NLS language and territory setting is used.</p>
<p>A number format model is composed of one or more number format elements. The table lists the elements of a number format model. Negative return values automatically contain a leading negative sign and positive values automatically contain a leading space unless the format model contains the <code dir="ltr">MI</code>, <code dir="ltr">S</code>, or <code dir="ltr">PR</code> format element.</p>
<div id="TTSQL206" class="tblhruleformal">
<p class="titleintable"><a id="sthref365"></a><a id="sthref366"></a>Table 3-1 <span class="italic">Number format elements</span></p>
<table class="cellalignment6330" title="Number format elements" summary="This table contains descriptions and examples of number format elements." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t4">Element</th>
<th class="cellalignment6331" id="r1c2-t4">Example</th>
<th class="cellalignment6331" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">,</code> (comma)</p>
</td>
<td class="cellalignment6332" headers="r2c1-t4 r1c2-t4">
<p><code dir="ltr">9,999</code></p>
</td>
<td class="cellalignment6332" headers="r2c1-t4 r1c3-t4">
<p>Returns a comma in the specified position. You can specify multiple commas in a number format model.</p>
<p><span class="bold">Restrictions</span>:</p>
<ul>
<li>
<p>A comma element cannot begin a number format model.</p>
</li>
<li>
<p>A comma cannot appear to the right of the decimal character or period in a number format model.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">.</code> (period)</p>
</td>
<td class="cellalignment6332" headers="r3c1-t4 r1c2-t4">
<p><code dir="ltr">99.99</code></p>
</td>
<td class="cellalignment6332" headers="r3c1-t4 r1c3-t4">
<p>Returns a decimal point, which is a period (.) in the specified position.</p>
<p><span class="bold">Restriction</span>:</p>
<p>You can specify only one period in a format model.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t4" headers="r1c1-t4">
<p>$</p>
</td>
<td class="cellalignment6332" headers="r4c1-t4 r1c2-t4">
<p><code dir="ltr">$9999</code></p>
</td>
<td class="cellalignment6332" headers="r4c1-t4 r1c3-t4">
<p>Returns value with leading dollar sign.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">0</code></p>
</td>
<td class="cellalignment6332" headers="r5c1-t4 r1c2-t4">
<p><code dir="ltr">0999</code></p>
<p><code dir="ltr">9990</code></p>
</td>
<td class="cellalignment6332" headers="r5c1-t4 r1c3-t4">
<p>Returns leading zeros.</p>
<p>Returns trailing zeros.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t4" headers="r1c1-t4">
<p><code dir="ltr">9</code></p>
</td>
<td class="cellalignment6332" headers="r6c1-t4 r1c2-t4">
<p><code dir="ltr">9999</code></p>
</td>
<td class="cellalignment6332" headers="r6c1-t4 r1c3-t4">
<p>Returns value with the specified number of digits with a leading space if positive or with a leading minus if negative.</p>
<p>Leading zeros are blank, except for a zero value, which returns a zero for the integer part of the fixed-point number.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r7c1-t4" headers="r1c1-t4">
<p><code dir="ltr">B</code></p>
</td>
<td class="cellalignment6332" headers="r7c1-t4 r1c2-t4">
<p><code dir="ltr">B9999</code></p>
</td>
<td class="cellalignment6332" headers="r7c1-t4 r1c3-t4">
<p>Returns blanks for the integer part of a fixed-point number when the integer part is zero (regardless of zeros in the format model).</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r8c1-t4" headers="r1c1-t4">
<p><code dir="ltr">C</code></p>
</td>
<td class="cellalignment6332" headers="r8c1-t4 r1c2-t4">
<p><code dir="ltr">C999</code></p>
</td>
<td class="cellalignment6332" headers="r8c1-t4 r1c3-t4">
<p>Returns in the specified position the ISO currency symbol.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r9c1-t4" headers="r1c1-t4">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment6332" headers="r9c1-t4 r1c2-t4">
<p><code dir="ltr">99D99</code></p>
</td>
<td class="cellalignment6332" headers="r9c1-t4 r1c3-t4">
<p>Returns the decimal character in the specified position. The default is a period (<code dir="ltr">.</code>).</p>
<p><span class="bold">Restriction:</span></p>
<p>You can specify only one decimal character in a number format model.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r10c1-t4" headers="r1c1-t4">
<p><code dir="ltr">EEEE</code></p>
</td>
<td class="cellalignment6332" headers="r10c1-t4 r1c2-t4">
<p><code dir="ltr">9.9EEEE</code></p>
</td>
<td class="cellalignment6332" headers="r10c1-t4 r1c3-t4">
<p>Returns a value in scientific notation.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r11c1-t4" headers="r1c1-t4">
<p><code dir="ltr">G</code></p>
</td>
<td class="cellalignment6332" headers="r11c1-t4 r1c2-t4">
<p><code dir="ltr">9G999</code></p>
</td>
<td class="cellalignment6332" headers="r11c1-t4 r1c3-t4">
<p>Returns the group separator in the specified position. You can specify multiple group separators in a number format model.</p>
<p><span class="bold">Restriction:</span></p>
<p>A group separator cannot appear to the right of a decimal character or period in a number format model.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r12c1-t4" headers="r1c1-t4">
<p><code dir="ltr">L</code></p>
</td>
<td class="cellalignment6332" headers="r12c1-t4 r1c2-t4">
<p><code dir="ltr">L999</code></p>
</td>
<td class="cellalignment6332" headers="r12c1-t4 r1c3-t4">
<p>Returns the local currency symbol in the specified position.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r13c1-t4" headers="r1c1-t4">
<p><code dir="ltr">MI</code></p>
</td>
<td class="cellalignment6332" headers="r13c1-t4 r1c2-t4">
<p><code dir="ltr">999MI</code></p>
</td>
<td class="cellalignment6332" headers="r13c1-t4 r1c3-t4">
<p>Returns negative value with a trailing minus sign (<code dir="ltr">-</code>).</p>
<p>Returns positive value with a trailing blank.</p>
<p><span class="bold">Restriction:</span></p>
<p>The <code dir="ltr">MI</code> format element can appear only in the last position of a number format model.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r14c1-t4" headers="r1c1-t4">
<p><code dir="ltr">PR</code></p>
</td>
<td class="cellalignment6332" headers="r14c1-t4 r1c2-t4">
<p><code dir="ltr">999PR</code></p>
</td>
<td class="cellalignment6332" headers="r14c1-t4 r1c3-t4">
<p>Returns negative value in angle brackets (<code dir="ltr">&lt; &gt;</code>).</p>
<p>Returns positive value with a leading and trailing blank.</p>
<p><span class="bold">Restriction:</span></p>
<p>The <code dir="ltr">PR</code> format element can appear only in the last position of a number format model.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r15c1-t4" headers="r1c1-t4">
<p><code dir="ltr">RN</code></p>
</td>
<td class="cellalignment6332" headers="r15c1-t4 r1c2-t4">
<p><code dir="ltr">RN</code></p>
</td>
<td class="cellalignment6332" headers="r15c1-t4 r1c3-t4">
<p>Returns a value as Roman numerals in uppercase.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r16c1-t4" headers="r1c1-t4">
<p><code dir="ltr">rn</code></p>
</td>
<td class="cellalignment6332" headers="r16c1-t4 r1c2-t4">
<p><code dir="ltr">rn</code></p>
</td>
<td class="cellalignment6332" headers="r16c1-t4 r1c3-t4">
<p>Returns a value as Roman numerals in lowercase.</p>
<p>Value can be an integer between 1 and 3999.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r17c1-t4" headers="r1c1-t4">
<p><code dir="ltr">S</code></p>
</td>
<td class="cellalignment6332" headers="r17c1-t4 r1c2-t4">
<p><code dir="ltr">S9999</code></p>
</td>
<td class="cellalignment6332" headers="r17c1-t4 r1c3-t4">
<p>Returns negative value with a leading minus sign (<code dir="ltr">-</code>).</p>
<p>Returns positive value with a leading plus sign (<code dir="ltr">+</code>).</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r18c1-t4" headers="r1c1-t4">
<p><code dir="ltr">S</code></p>
</td>
<td class="cellalignment6332" headers="r18c1-t4 r1c2-t4">
<p><code dir="ltr">9999S</code></p>
</td>
<td class="cellalignment6332" headers="r18c1-t4 r1c3-t4">
<p>Returns negative value with a trailing minus sign (<code dir="ltr">-</code>).</p>
<p>Returns positive value with a trailing plus sign (<code dir="ltr">+</code>).</p>
<p><span class="bold">Restriction:</span></p>
<p>The <code dir="ltr">S</code> format element can appear only in the first or last position of a number format model.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r19c1-t4" headers="r1c1-t4">
<p><code dir="ltr">TM</code></p>
</td>
<td class="cellalignment6332" headers="r19c1-t4 r1c2-t4">
<p><code dir="ltr">TM</code></p>
</td>
<td class="cellalignment6332" headers="r19c1-t4 r1c3-t4">
<p>The text minimum number format model returns (in decimal output) the smallest number of characters possible. This element is case insensitive.</p>
<p>The default is <code dir="ltr">TM9</code>, which returns the number in fixed notation unless the output exceeds 64 characters. If the output exceeds 64 characters, then TimesTen automatically returns the number in scientific notation.</p>
<p><span class="bold">Restrictions</span>:</p>
<ul>
<li>
<p>You cannot precede this element with any other element.</p>
</li>
<li>
<p>You can follow this element only with one 9 or one <code dir="ltr">E</code> or (<code dir="ltr">e</code>), but not with any combination of these. The following statement returns an error:</p>
<p><code dir="ltr">SELECT TO_NUMBER (1234, &#39;TM9e&#39;) FROM dual;</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r20c1-t4" headers="r1c1-t4">
<p><code dir="ltr">U</code></p>
</td>
<td class="cellalignment6332" headers="r20c1-t4 r1c2-t4">
<p><code dir="ltr">U9999</code></p>
</td>
<td class="cellalignment6332" headers="r20c1-t4 r1c3-t4">
<p>Returns the euro or other dual currency symbol in the specified position.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r21c1-t4" headers="r1c1-t4">
<p><code dir="ltr">V</code></p>
</td>
<td class="cellalignment6332" headers="r21c1-t4 r1c2-t4">
<p><code dir="ltr">999V99</code></p>
</td>
<td class="cellalignment6332" headers="r21c1-t4 r1c3-t4">
<p>Returns a value multiplied by 10<sup>n</sup> (and if necessary, rounds it up), where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the number of 9s after the <code dir="ltr">V</code>.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r22c1-t4" headers="r1c1-t4">
<p><code dir="ltr">X</code></p>
</td>
<td class="cellalignment6332" headers="r22c1-t4 r1c2-t4">
<p><code dir="ltr">XXXX</code></p>
</td>
<td class="cellalignment6332" headers="r22c1-t4 r1c3-t4">
<p>Returns the hexadecimal value of the specified number of digits. If the specified number is not an integer, then TimesTen rounds it to an integer.</p>
<p><span class="bold">Restrictions</span>:</p>
<ul>
<li>
<p>This element accepts only positive values or 0. Negative values return an error.</p>
</li>
<li>
<p>You can precede this element only with 0 (which returns leading zeros) or <code dir="ltr">FM</code>. Any other elements return an error. If you specify neither 0 nor <code dir="ltr">FM</code> with <code dir="ltr">X</code>, then the return always has a leading blank.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect2" -->
<div id="TTSQL207" class="refsect2"><a id="i1057765"></a>
<h3 class="refsect2"><a id="sthref367"></a><a id="sthref368"></a>Datetime format models</h3>
<p>Use datetime format models in the following functions:</p>
<ul>
<li>
<p>In the <code dir="ltr">TO_CHAR</code> or <code dir="ltr">TO_DATE</code> functions to translate a character value that is in a format other than the default format for a datetime value.</p>
</li>
<li>
<p>In the <code dir="ltr">TO_CHAR</code> function to translate a datetime value that is in a format other than the default format into a string.</p>
</li>
</ul>
<p>The total length of a datetime format model cannot exceed 22 characters.</p>
<p>The default <code dir="ltr">american_america</code> NLS language and territory setting is used.</p>
<p>A datetime format model is composed of one or more datetime format elements, which are shown in <a href="#CIHEADCH">Table 3-2</a>.</p>
<div id="TTSQL209" class="tblhruleformal">
<p class="titleintable"><a id="sthref369"></a><a id="CIHEADCH"></a>Table 3-2 Datetime format elements</p>
<table class="cellalignment6330" title="Datetime format elements" summary="This table contains descriptions of datetime format elements." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t5">Element</th>
<th class="cellalignment6331" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">-/,.;:&#34;text&#34;</code></p>
</td>
<td class="cellalignment6332" headers="r2c1-t5 r1c2-t5">
<p>Punctuation and quoted text, reproduced in the result</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">AD</code></p>
<p><code dir="ltr">A.D.</code></p>
</td>
<td class="cellalignment6332" headers="r3c1-t5 r1c2-t5">
<p>AD indicator with or without periods</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">AM</code></p>
<p><code dir="ltr">A.M.</code></p>
</td>
<td class="cellalignment6332" headers="r4c1-t5 r1c2-t5">
<p>Meridian indicator with or without periods</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">BC</code></p>
<p><code dir="ltr">B.C.</code></p>
</td>
<td class="cellalignment6332" headers="r5c1-t5 r1c2-t5">
<p>BC indicator with or without periods</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t5" headers="r1c1-t5">
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment6332" headers="r6c1-t5 r1c2-t5">
<p>Day of week (1-7)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r7c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DAY</code></p>
</td>
<td class="cellalignment6332" headers="r7c1-t5 r1c2-t5">
<p>Name of day, padded with blanks to display width of widest name of day</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r8c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DD</code></p>
</td>
<td class="cellalignment6332" headers="r8c1-t5 r1c2-t5">
<p>Day of month (1-31)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r9c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DDD</code></p>
</td>
<td class="cellalignment6332" headers="r9c1-t5 r1c2-t5">
<p>Day of year</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r10c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DL</code></p>
</td>
<td class="cellalignment6332" headers="r10c1-t5 r1c2-t5">
<p>Long date format</p>
<p>In the default <code dir="ltr">AMERICAN_AMERICA</code> locale, this is equivalent to specifying the format &#39;<code dir="ltr">fmDay, Month dd, yyyy</code>&#39;.</p>
<p><span class="bold">Restriction</span>:</p>
<p>Specify this format only with the <code dir="ltr">TS</code> element, separated by white space.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r11c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DS</code></p>
</td>
<td class="cellalignment6332" headers="r11c1-t5 r1c2-t5">
<p>Short date format</p>
<p>In the default <code dir="ltr">AMERICAN_AMERICA</code> locale, this is equivalent to specifying the format <code dir="ltr">&#39;MM/DD/RRRR&#39;</code>.</p>
<p><span class="bold">Restriction</span>:</p>
<p>Specify this format only with the <code dir="ltr">TS</code> element, separated by white space.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r12c1-t5" headers="r1c1-t5">
<p><code dir="ltr">DY</code></p>
</td>
<td class="cellalignment6332" headers="r12c1-t5 r1c2-t5">
<p>Abbreviated name of day</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r13c1-t5" headers="r1c1-t5">
<p><code dir="ltr">FM</code></p>
</td>
<td class="cellalignment6332" headers="r13c1-t5 r1c2-t5">
<p>No leading or trailing blanks</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r14c1-t5" headers="r1c1-t5">
<p><code dir="ltr">FX</code></p>
</td>
<td class="cellalignment6332" headers="r14c1-t5 r1c2-t5">
<p>Exact matching between the character data and the format model</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r15c1-t5" headers="r1c1-t5">
<p><code dir="ltr">HH</code></p>
</td>
<td class="cellalignment6332" headers="r15c1-t5 r1c2-t5">
<p>Hour of day (1-12)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r16c1-t5" headers="r1c1-t5">
<p><code dir="ltr">HH24</code></p>
</td>
<td class="cellalignment6332" headers="r16c1-t5 r1c2-t5">
<p>Hour of day (0-23)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r17c1-t5" headers="r1c1-t5">
<p><code dir="ltr">J</code></p>
</td>
<td class="cellalignment6332" headers="r17c1-t5 r1c2-t5">
<p>Julian day</p>
<p>This is the number of days since January 1, 4712 BC. Numbers specified with <code dir="ltr">J</code> must be integers.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r18c1-t5" headers="r1c1-t5">
<p><code dir="ltr">MI</code></p>
</td>
<td class="cellalignment6332" headers="r18c1-t5 r1c2-t5">
<p>Minute (0-59)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r19c1-t5" headers="r1c1-t5">
<p><code dir="ltr">MM</code></p>
</td>
<td class="cellalignment6332" headers="r19c1-t5 r1c2-t5">
<p>Month (01-12, where January = 01)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r20c1-t5" headers="r1c1-t5">
<p><code dir="ltr">MON</code></p>
</td>
<td class="cellalignment6332" headers="r20c1-t5 r1c2-t5">
<p>Abbreviated name of month</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r21c1-t5" headers="r1c1-t5">
<p><code dir="ltr">MONTH</code></p>
</td>
<td class="cellalignment6332" headers="r21c1-t5 r1c2-t5">
<p>Name of month padded with blanks to display width of the widest name of month</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r22c1-t5" headers="r1c1-t5">
<p><code dir="ltr">RM</code></p>
</td>
<td class="cellalignment6332" headers="r22c1-t5 r1c2-t5">
<p>Roman numeral month (I-XII. January = I)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r23c1-t5" headers="r1c1-t5">
<p><code dir="ltr">RR</code></p>
</td>
<td class="cellalignment6332" headers="r23c1-t5 r1c2-t5">
<p>For 20th century dates in the 21st century using only two digits</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r24c1-t5" headers="r1c1-t5">
<p><code dir="ltr">RRRR</code></p>
</td>
<td class="cellalignment6332" headers="r24c1-t5 r1c2-t5">
<p>Rounded year</p>
<p>Accepts either four-digit or two-digit input. If two-digit, provides the same return as <code dir="ltr">RR</code>. If you do not want this functionality, then enter the four-digit year.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r25c1-t5" headers="r1c1-t5">
<p><code dir="ltr">SS</code></p>
</td>
<td class="cellalignment6332" headers="r25c1-t5 r1c2-t5">
<p>Second (0-59)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r26c1-t5" headers="r1c1-t5">
<p><code dir="ltr">SSSSS</code></p>
</td>
<td class="cellalignment6332" headers="r26c1-t5 r1c2-t5">
<p>Seconds past midnight (0-86399)</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r27c1-t5" headers="r1c1-t5">
<p><code dir="ltr">TS</code></p>
</td>
<td class="cellalignment6332" headers="r27c1-t5 r1c2-t5">
<p>Short time format</p>
<p><span class="bold">Restriction</span>:</p>
<p>Specify this format only with the <code dir="ltr">DL</code> or <code dir="ltr">DS</code> element, separated by white space.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r28c1-t5" headers="r1c1-t5">
<p><code dir="ltr">X</code></p>
</td>
<td class="cellalignment6332" headers="r28c1-t5 r1c2-t5">
<p>Local radix character</p>
<p>For example:</p>
<pre dir="ltr">&#39;HH:MI:SSXFF&#39;
</pre></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r29c1-t5" headers="r1c1-t5">
<p><code dir="ltr">Y,YYY</code></p>
</td>
<td class="cellalignment6332" headers="r29c1-t5 r1c2-t5">
<p>Year with comma in this position</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r30c1-t5" headers="r1c1-t5">
<p><code dir="ltr">YYYY</code></p>
<p><code dir="ltr">SYYYY</code></p>
</td>
<td class="cellalignment6332" headers="r30c1-t5 r1c2-t5">
<p>Four-digit year</p>
<p><code dir="ltr">S</code> prefixes BC dates with a minus sign.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r31c1-t5" headers="r1c1-t5">
<p><code dir="ltr">YYY</code></p>
<p><code dir="ltr">YY</code></p>
<p><code dir="ltr">Y</code></p>
</td>
<td class="cellalignment6332" headers="r31c1-t5 r1c2-t5">
<p>Last 3, 2, or 1 digit(s) of year</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect2" -->
<div id="TTSQL210" class="refsect2"><a id="i1094088"></a>
<h3 class="refsect2"><a id="sthref370"></a><a id="sthref371"></a><a id="sthref372"></a>Format model for ROUND and TRUNC date functions</h3>
<p>The table lists the format models you can use with the <code dir="ltr">ROUND</code> and <code dir="ltr">TRUNC</code> date functions and the units to which they round and truncate dates. The default model <code dir="ltr">DD</code> returns the date rounded or truncated to the day with a time of midnight.</p>
<div class="inftblhruleinformal">
<table class="cellalignment6330" title="Rounding or truncating units for format models" summary="This table lists the format models and their truncating units that you can use with the TRUNC(date) function." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t6">Format model</th>
<th class="cellalignment6331" id="r1c2-t6">Rounding or truncating unit</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t6" headers="r1c1-t6"><code dir="ltr">CC</code>
<p><code dir="ltr">SCC</code></p>
</td>
<td class="cellalignment6332" headers="r2c1-t6 r1c2-t6">Century
<p>If the last two digits of a four-digit year are between 01 and 99 (inclusive), then the century is one greater than the first two digits of that year.</p>
<p>If the last two digits of a four-digit year are 00, then the century is the same as the first two digits of that year. For example, 2002 returns 21; 2000 returns 20.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t6" headers="r1c1-t6"><code dir="ltr">SYYYY</code>
<p><code dir="ltr">YYYY</code></p>
<p><code dir="ltr">YEAR</code></p>
<p><code dir="ltr">SYEAR</code></p>
<p><code dir="ltr">YYY</code></p>
<p><code dir="ltr">YY</code></p>
<p><code dir="ltr">Y</code></p>
</td>
<td class="cellalignment6332" headers="r3c1-t6 r1c2-t6">Year (rounds up on July 1)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t6" headers="r1c1-t6"><code dir="ltr">IYYY</code>
<p><code dir="ltr">IYY</code></p>
<p><code dir="ltr">IY</code></p>
<p><code dir="ltr">I</code></p>
</td>
<td class="cellalignment6332" headers="r4c1-t6 r1c2-t6">ISO year</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t6" headers="r1c1-t6"><code dir="ltr">Q</code></td>
<td class="cellalignment6332" headers="r5c1-t6 r1c2-t6">Quarter (rounds up on the sixteenth day of the second month of the quarter)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t6" headers="r1c1-t6"><code dir="ltr">MONTH</code>
<p><code dir="ltr">MON</code></p>
<p><code dir="ltr">MM</code></p>
<p><code dir="ltr">RM</code></p>
</td>
<td class="cellalignment6332" headers="r6c1-t6 r1c2-t6">Name of month (rounds up on the sixteenth day)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r7c1-t6" headers="r1c1-t6"><code dir="ltr">WW</code></td>
<td class="cellalignment6332" headers="r7c1-t6 r1c2-t6">Same day of the week as the first day of the year</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r8c1-t6" headers="r1c1-t6"><code dir="ltr">IW</code></td>
<td class="cellalignment6332" headers="r8c1-t6 r1c2-t6">Same day of the week as the first day of the ISO week, which is Monday</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r9c1-t6" headers="r1c1-t6"><code dir="ltr">W</code></td>
<td class="cellalignment6332" headers="r9c1-t6 r1c2-t6">Same day of the week as the first day of the month</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r10c1-t6" headers="r1c1-t6"><code dir="ltr">DDD</code>
<p><code dir="ltr">DD</code></p>
<p><code dir="ltr">J</code></p>
</td>
<td class="cellalignment6332" headers="r10c1-t6 r1c2-t6">Day of year</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r11c1-t6" headers="r1c1-t6"><code dir="ltr">DAY</code>
<p><code dir="ltr">DY</code></p>
<p><code dir="ltr">D</code></p>
</td>
<td class="cellalignment6332" headers="r11c1-t6 r1c2-t6">Starting day of the week</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r12c1-t6" headers="r1c1-t6"><code dir="ltr">HH</code>
<p><code dir="ltr">HH12</code></p>
<p><code dir="ltr">HH24</code></p>
</td>
<td class="cellalignment6332" headers="r12c1-t6 r1c2-t6">Hour</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r13c1-t6" headers="r1c1-t6"><code dir="ltr">MI</code></td>
<td class="cellalignment6332" headers="r13c1-t6 r1c2-t6">Minute</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsect2" -->
<div id="TTSQL211" class="refsect2"><a id="CIHBFEIJ"></a>
<h3 class="refsect2"><a id="sthref373"></a><a id="sthref374"></a>Format model for TO_CHAR of TimesTen datetime data types</h3>
<p>Use this format model when invoking the <code dir="ltr">TO_CHAR</code> function to convert a datetime value of <code dir="ltr">TT_TIMESTAMP</code> or <code dir="ltr">TT_DATE</code>. In addition, use this format model when invoking the <code dir="ltr">TO_CHAR</code> function to convert any numeric value other than <code dir="ltr">NUMBER</code> or <code dir="ltr">ORA_FLOAT</code>.</p>
<ul>
<li>
<p>If a numeric value does not fit in the specified format, TimesTen truncates the value.</p>
</li>
<li>
<p>The format string cannot exceed 50 characters.</p>
</li>
<li>
<p><code dir="ltr">D</code> always results in a decimal point. Its value cannot be changed with an NLS parameter.</p>
</li>
<li>
<p>If a float with an absolute value less than <code dir="ltr">1e-126</code> or greater than <code dir="ltr">1e126</code> is specified as input to the <code dir="ltr">TO_CHAR</code> function, TimesTen returns an error.</p>
</li>
</ul>
<div class="inftblhruleinformal">
<table class="cellalignment6330" title="Format descriptions" summary="This table contains descriptions of format elements to use when invoking the TO_CHAR function to convert datetime values of TT_TIMESTAMP or TT_DATE type or numeric values except for NUMBER and ORA_FLOAT." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t7">Format</th>
<th class="cellalignment6331" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t7" headers="r1c1-t7"><code dir="ltr">DD</code></td>
<td class="cellalignment6332" headers="r2c1-t7 r1c2-t7">Day of month (1-31)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t7" headers="r1c1-t7"><code dir="ltr">MM</code></td>
<td class="cellalignment6332" headers="r3c1-t7 r1c2-t7">Month (1-12)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t7" headers="r1c1-t7"><code dir="ltr">MON</code></td>
<td class="cellalignment6332" headers="r4c1-t7 r1c2-t7">Month (three character prefix)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t7" headers="r1c1-t7"><code dir="ltr">MONTH</code></td>
<td class="cellalignment6332" headers="r5c1-t7 r1c2-t7">Month (full name blank-padded to 9 characters)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t7" headers="r1c1-t7"><code dir="ltr">YYYY</code></td>
<td class="cellalignment6332" headers="r6c1-t7 r1c2-t7">Year (four digits)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r7c1-t7" headers="r1c1-t7"><code dir="ltr">Y</code><code dir="ltr">,</code><code dir="ltr">YYY</code></td>
<td class="cellalignment6332" headers="r7c1-t7 r1c2-t7">Year (with comma as shown)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r8c1-t7" headers="r1c1-t7"><code dir="ltr">YYY</code></td>
<td class="cellalignment6332" headers="r8c1-t7 r1c2-t7">Year (last three digits)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r9c1-t7" headers="r1c1-t7"><code dir="ltr">YY</code></td>
<td class="cellalignment6332" headers="r9c1-t7 r1c2-t7">Year (last two digits)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r10c1-t7" headers="r1c1-t7"><code dir="ltr">Y</code></td>
<td class="cellalignment6332" headers="r10c1-t7 r1c2-t7">Year (last digit)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r11c1-t7" headers="r1c1-t7"><code dir="ltr">Q</code></td>
<td class="cellalignment6332" headers="r11c1-t7 r1c2-t7">Quarter</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r12c1-t7" headers="r1c1-t7"><code dir="ltr">HH</code></td>
<td class="cellalignment6332" headers="r12c1-t7 r1c2-t7">Hour (1-12)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r13c1-t7" headers="r1c1-t7"><code dir="ltr">HH12</code></td>
<td class="cellalignment6332" headers="r13c1-t7 r1c2-t7">Hour (1-12)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r14c1-t7" headers="r1c1-t7"><code dir="ltr">HH24</code></td>
<td class="cellalignment6332" headers="r14c1-t7 r1c2-t7">Hour (0-23)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r15c1-t7" headers="r1c1-t7"><code dir="ltr">MI</code></td>
<td class="cellalignment6332" headers="r15c1-t7 r1c2-t7">Minute (0-59)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r16c1-t7" headers="r1c1-t7"><code dir="ltr">SS</code></td>
<td class="cellalignment6332" headers="r16c1-t7 r1c2-t7">Second (0-59)</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r17c1-t7" headers="r1c1-t7"><code dir="ltr">FF</code></td>
<td class="cellalignment6332" headers="r17c1-t7 r1c2-t7">Fractions of a second to a precision of six digits</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r18c1-t7" headers="r1c1-t7"><code dir="ltr">FFn</code></td>
<td class="cellalignment6332" headers="r18c1-t7 r1c2-t7">Fractions of a second to the precision specified by <code dir="ltr">n</code></td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r19c1-t7" headers="r1c1-t7"><code dir="ltr">AM</code></td>
<td class="cellalignment6332" headers="r19c1-t7 r1c2-t7">Meridian indicator</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r20c1-t7" headers="r1c1-t7"><code dir="ltr">A.M.</code></td>
<td class="cellalignment6332" headers="r20c1-t7 r1c2-t7">Meridian indicator</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r21c1-t7" headers="r1c1-t7"><code dir="ltr">PM</code></td>
<td class="cellalignment6332" headers="r21c1-t7 r1c2-t7">Meridian indicator</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r22c1-t7" headers="r1c1-t7"><code dir="ltr">P.M.</code></td>
<td class="cellalignment6332" headers="r22c1-t7 r1c2-t7">Meridian indicator</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r23c1-t7" headers="r1c1-t7"><code dir="ltr">- /&nbsp;&nbsp;,&nbsp;&nbsp;. ; :</code></td>
<td class="cellalignment6332" headers="r23c1-t7 r1c2-t7">Punctuation to be output</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r24c1-t7" headers="r1c1-t7">&#34;text&#34;</td>
<td class="cellalignment6332" headers="r24c1-t7 r1c2-t7">Text to be output</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r25c1-t7" headers="r1c1-t7"><code dir="ltr">9</code></td>
<td class="cellalignment6332" headers="r25c1-t7 r1c2-t7">Digit</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r26c1-t7" headers="r1c1-t7"><code dir="ltr">0</code></td>
<td class="cellalignment6332" headers="r26c1-t7 r1c2-t7">Leading or trailing zero</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r27c1-t7" headers="r1c1-t7"><code dir="ltr">.</code></td>
<td class="cellalignment6332" headers="r27c1-t7 r1c2-t7">Decimal point</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r28c1-t7" headers="r1c1-t7">,</td>
<td class="cellalignment6332" headers="r28c1-t7 r1c2-t7">Comma</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r29c1-t7" headers="r1c1-t7"><code dir="ltr">EEEE</code></td>
<td class="cellalignment6332" headers="r29c1-t7 r1c2-t7">Scientific notation</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r30c1-t7" headers="r1c1-t7"><code dir="ltr">S</code></td>
<td class="cellalignment6332" headers="r30c1-t7 r1c2-t7">Sign mode</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r31c1-t7" headers="r1c1-t7"><code dir="ltr">B</code></td>
<td class="cellalignment6332" headers="r31c1-t7 r1c2-t7">Blank mode
<p>If there are no digits, the string is filled with blanks.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r32c1-t7" headers="r1c1-t7"><code dir="ltr">FM</code></td>
<td class="cellalignment6332" headers="r32c1-t7 r1c2-t7">No-blank mode (fill mode)
<p>If this element is used, trailing and leading spaces are suppressed.</p>
</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r33c1-t7" headers="r1c1-t7"><code dir="ltr">$</code></td>
<td class="cellalignment6332" headers="r33c1-t7 r1c2-t7">Leading dollar sign</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="i1040507"></a>
<div id="TTSQL215" class="refsect1">
<h2 class="refsect1">CASE<a id="sthref375"></a> expressions</h2>
<p>Specifies a conditional value. Both simple and searched case expressions are supported. The <code dir="ltr">CASE</code> expression can be specified anywhere an expression can be specified and can be used as often as needed.</p>
<p>Instead of using a series of IF statements, the <code dir="ltr">CASE</code> expression enables you to use a series of conditions that return the appropriate values when the conditions are met. With <code dir="ltr">CASE</code>, you can simplify queries and write more efficient code.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref376"></a>SQL syntax</p>
<p>The syntax for a searched <code dir="ltr">CASE</code> expression is:</p>
<pre dir="ltr">CASE
  {WHEN <span class="codeinlineitalic">SearchCondition</span> THEN <span class="codeinlineitalic">Expression1</span>}[&hellip;] 
   [ELSE <span class="codeinlineitalic">Expression2</span>]
END
</pre>
<p>The syntax for a simple <code dir="ltr">CASE</code> expression is:</p>
<pre dir="ltr">CASE <span class="codeinlineitalic">Expression</span> 
  {WHEN <span class="codeinlineitalic">CompExpression</span> THEN <span class="codeinlineitalic">Expression1</span>}[&hellip;]
   [ELSE <span class="codeinlineitalic">Expression2</span>] 
END
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref377"></a>Parameters</p>
<p><code dir="ltr">CASE</code> has the parameters:</p>
<div class="inftblhruleinformal">
<table class="cellalignment6330" title="Parameter descriptions" summary="This table describes the function parameters." dir="ltr">
<thead>
<tr class="cellalignment6324">
<th class="cellalignment6331" id="r1c1-t8">Parameter</th>
<th class="cellalignment6331" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r2c1-t8" headers="r1c1-t8"><code dir="ltr">WHEN</code> <code dir="ltr"><span class="codeinlineitalic">SearchCondition</span></code></td>
<td class="cellalignment6332" headers="r2c1-t8 r1c2-t8">Specifies the search criteria. This clause cannot specify a subquery.</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r3c1-t8" headers="r1c1-t8"><code dir="ltr">WHEN</code> <code dir="ltr"><span class="codeinlineitalic">CompExpression</span></code></td>
<td class="cellalignment6332" headers="r3c1-t8 r1c2-t8">Specifies the operand to be compared.</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r4c1-t8" headers="r1c1-t8"><code dir="ltr"><span class="codeinlineitalic">Expression</span></code></td>
<td class="cellalignment6332" headers="r4c1-t8 r1c2-t8">Specifies the first operand to be compared with each <code dir="ltr"><span class="codeinlineitalic">CompExpression</span></code>.</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r5c1-t8" headers="r1c1-t8"><code dir="ltr">THEN</code> <code dir="ltr"><span class="codeinlineitalic">Expression1</span></code></td>
<td class="cellalignment6332" headers="r5c1-t8 r1c2-t8">Specifies the resulting expression.</td>
</tr>
<tr class="cellalignment6324">
<td class="cellalignment6332" id="r6c1-t8" headers="r1c1-t8"><code dir="ltr">ELSE</code> <code dir="ltr"><span class="codeinlineitalic">Expression2</span></code></td>
<td class="cellalignment6332" headers="r6c1-t8 r1c2-t8">If condition is not met, specifies the resulting expression. If no <code dir="ltr">ELSE</code> clause is specified, TimesTen adds an <code dir="ltr">ELSE</code> <code dir="ltr">NULL</code> clause to the expression.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref378"></a>Description</p>
<p>You cannot specify the <code dir="ltr">CASE</code> expression in the value clause of an <code dir="ltr">INSERT</code> statement.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref379"></a>Examples</p>
<p>To specify a searched <code dir="ltr">CASE</code> statement that specifies the value of a color, use:</p>
<pre dir="ltr">SELECT CASE 
  WHEN color=1 THEN &#39;red&#39; 
  WHEN color=2 THEN &#39;blue&#39; 
  ELSE &#39;yellow&#39; 
END FROM cars;
</pre>
<p>To specify a simple <code dir="ltr">CASE</code> statement that specifies the value of a color, use the following.</p>
<pre dir="ltr">SELECT CASE color 
  WHEN 1 THEN &#39;red&#39; 
  WHEN 2 THEN &#39;blue&#39; 
  ELSE &#39;yellow&#39; 
END FROM cars;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="i1052771"></a>
<div id="TTSQL195" class="refsect1">
<h2 class="refsect1">RO<a id="sthref380"></a>WID</h2>
<p>TimesTen assigns a unique ID called a <span class="italic">rowid</span> to each row stored in a table. The rowid has data type <code dir="ltr">ROWID</code>. You can examine a rowid by querying the <code dir="ltr">ROWID</code> pseudocolumn.</p>
<p>Because the <code dir="ltr">ROWID</code> pseudocolumn is not a real column, it does not require database space and cannot be updated, indexed or dropped.</p>
<p>The rowid value persists throughout the life of the table row, but the system can reassign the rowid to a different row after the original row is deleted. Zero is not a valid value for a rowid.</p>
<p>Rowids persists through recovery, backup and restore operations. They do not persist through replication, <code dir="ltr">ttMigrate</code> or <code dir="ltr">ttBulkCp</code> operations.</p>
<p>See <a href="#i1028917">&#34;Expression specification&#34;</a> for more information on rowids. See <a href="types.htm#BABBDGFE">&#34;ROWID data type&#34;</a> for more information about the <code dir="ltr">ROWID</code> data type.</p>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CIHBDDFC"></a>
<div id="TTSQL196" class="refsect1">
<h2 class="refsect1">ROW<a id="sthref381"></a>NUM psuedocolumn</h2>
<p>For each row returned by a query, the <code dir="ltr">ROWNUM</code> pseudocolumn returns a number indicating the order in which the row was selected. The first row selected has a <code dir="ltr">ROWNUM</code> of 1, the second a <code dir="ltr">ROWNUM</code> of 2, and so on.</p>
<p>Use <code dir="ltr">ROWNUM</code> to limit the number of rows returned by a query as in this example:</p>
<pre dir="ltr">SELECT * FROM employees WHERE ROWNUM &lt; 10;
</pre>
<p>The order in which rows are selected depends on the index used and the join order. If you specify an <code dir="ltr">ORDER BY</code> clause, <code dir="ltr">ROWNUM</code> is assigned before sorting. However, the presence of the <code dir="ltr">ORDER BY</code> clause may change the index used and the join order. If the order of selected rows changes, the <code dir="ltr">ROWNUM</code> value associated with each selected row could also change.</p>
<p>For example, the following query may return a different set of employees than the preceding query if a different index is used:</p>
<pre dir="ltr">SELECT * FROM employees WHERE ROWNUM &lt; 10 ORDER BY last_name;
</pre>
<p>Conditions testing for <code dir="ltr">ROWNUM</code> values greater than a positive integer are always false. For example, the following query returns no rows:</p>
<pre dir="ltr">SELECT * FROM employees WHERE ROWNUM &gt; 1;
</pre>
<p>Use <code dir="ltr">ROWNUM</code> to assign unique values to each row of a table. For example:</p>
<pre dir="ltr">UPDATE my_table SET column1 = ROWNUM;
</pre>
<p>If your query contains either <code dir="ltr">FIRST</code> <code dir="ltr"><span class="codeinlineitalic">NumRows</span></code> or <code dir="ltr">ROWS</code> <code dir="ltr"><span class="codeinlineitalic">m</span></code> <code dir="ltr">TO</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code>, do not use <code dir="ltr">ROWNUM</code> to restrict the number of rows returned. For example, the following query results in an error message:</p>
<pre dir="ltr">SELECT FIRST 2 * FROM employees WHERE ROWNUM &lt;1 ORDER BY employee_id;
2974: Using rownum to restrict number of rows returned cannot be combined with 
first N or rows M to N
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment6323">
<tr>
<td class="cellalignment6332">
<table class="cellalignment6328">
<tr>
<td class="cellalignment6327"><a href="names.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment6327"><a href="function.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2011, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment6334">
<table class="cellalignment6326">
<tr>
<td class="cellalignment6327"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment6327"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment6327"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment6327"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment6327"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment6327"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>