<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-107397"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Creating%20Other%20Cache%20Grid%20Members"></a><title>Creating Other Cache Grid Members</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 726"/>
<meta name="dcterms.created" content="2014-09-23T15:6:31Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen Application-Tier Database Cache User&#39;s Guide"/>
<meta name="dcterms.identifier" content="E21634-12"/>
<meta name="dcterms.isVersionOf" content="TTCAC"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2012, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="operations.htm" title="Previous" type="text/html"/>
<link rel="Next" href="manage.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21634-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/21</span> <!-- End Header -->
<div id="TTCAC295" class="chapter"><a id="CIHJJEDE"></a>
<h1 class="chapter"><span class="secnum">6</span> Creating Other Cache Grid Members</h1>
<p>The following sections describe the tasks for creating a second standalone TimesTen database and an active standby pair, and attaching these members to the cache grid that was created in <a href="prereqs.htm#CHDJBIAE">Chapter 3, &#34;Setting Up a Caching Infrastructure&#34;</a>.</p>
<ul>
<li>
<p><a href="#CIHFCFCH">Creating and configuring a subsequent standalone TimesTen database</a></p>
</li>
<li>
<p><a href="#CHDICFBF">Replicating cache tables</a></p>
</li>
<li>
<p><a href="#CHDFBEEH">Example of data sharing among the grid members</a></p>
</li>
<li>
<p><a href="#CIHGEDDI">Performing global queries on a cache grid</a></p>
</li>
<li>
<p><a href="#CHDJBGHI">Adding other elements to a cache grid or grid member</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are planning to use Oracle Clusterware to manage active standby pairs in a cache grid, see <a class="olink TTREP700" href="../TTREP/cluster.htm#TTREP700">&#34;Using Oracle Clusterware with a TimesTen cache grid&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>.
<p>Also see <a class="olink TTREP263" href="../TTREP/cluster.htm#TTREP263">&#34;Restricted commands and SQL statements&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span>. Use the <code>ttCWAdmin</code> utility to manage the active standby pair grid members instead of the built-in procedures discussed in this chapter.</p>
</div>
<a id="CIHFCFCH"></a>
<div id="TTCAC296" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating and configuring a subsequent standalone TimesTen database</h2>
<p>The following is the definition of the <code>cachealone2</code> DSN for the second standalone TimesTen database that becomes a member of the <code>ttGrid</code> cache grid:</p>
<pre>[cachealone2]
DataStore=/users/OracleCache/alone2
PermSize=64
OracleNetServiceName=orcl
DatabaseCharacterSet=WE8ISO8859P1
CacheGridEnable=1
</pre>
<p>Start the <code>ttIsql</code> utility and connect to the <code>cachealone2</code> DSN as the instance administrator to create the database. Then create the cache manager user <code>cacheuser</code> whose name needs to be the same as a companion Oracle Database user. In this example, the cache administration user is acting as the companion Oracle Database user to the cache manager user.</p>
<p>Then create a cache table user <code>oratt</code> whose name is the same as the Oracle Database schema user who owns the Oracle Database tables to be cached in the TimesTen database.</p>
<pre>% ttIsql cachealone2
Command&gt; CREATE USER cacheuser IDENTIFIED BY timesten;
Command&gt; CREATE USER oratt IDENTIFIED BY timesten;
</pre>
<p>As the instance administrator, use the <code>ttIsql</code> utility to grant the cache manager user <code>cacheuser</code> the privileges required to perform the operations listed in <a href="prereqs.htm#BCFJHCHA">Example 3-8</a>:</p>
<pre>Command&gt; GRANT CREATE SESSION, CACHE_MANAGER, CREATE ANY TABLE TO cacheuser;
Command&gt; exit
</pre>
<p>Start the <code>ttIsql</code> utility and connect to the <code>cachealone2</code> DSN as the cache manager user. Set the cache administration user name and password by calling the <code>ttCacheUidPwdSet</code> built-in procedure.</p>
<pre>% ttIsql &#34;DSN=cachealone2;UID=cacheuser;PWD=timesten;OraclePWD=oracle&#34;
Command&gt; CALL ttCacheUidPwdSet(&#39;cacheuser&#39;,&#39;oracle&#39;);
</pre>
<p>Associate the second standalone database to the <code>ttGrid</code> cache grid by calling the <code>ttGridNameSet</code> built-in procedure as the cache manager user:</p>
<pre>Command&gt; CALL ttGridNameSet(&#39;ttGrid&#39;);
</pre>
<p>The <code>ttGrid</code> cache grid was created from the first standalone TimesTen database. Since the grid already exists, it does not need to be created again.</p>
<p>If desired, you can test the connectivity between the second standalone TimesTen database and the Oracle database using the instructions stated in <a href="prereqs.htm#BCFJHFEI">&#34;Testing the connectivity between the TimesTen and Oracle databases&#34;</a>.</p>
<p>Start the cache agent on the second standalone database by calling the <code>ttCacheStart</code> built-in procedure as the cache manager user:</p>
<pre>Command&gt; CALL ttCacheStart;
</pre>
<p>Then, create cache groups in the database as the cache manager user. For example, the following statement creates a dynamic AWT global cache group <code>subscriber_accounts</code> that caches the <code>oratt.subscriber</code> table:</p>
<pre>CREATE DYNAMIC ASYNCHRONOUS WRITETHROUGH GLOBAL CACHE GROUP subscriber_accounts
FROM oratt.subscriber
 (subscriberid       NUMBER(10) NOT NULL PRIMARY KEY,
  name               VARCHAR2(100) NOT NULL,
  minutes_balance    NUMBER(5) NOT NULL,
  last_call_duration NUMBER(4) NOT NULL);
</pre>
<p>The definition of the <code>oratt.subscriber</code> cached Oracle Database table is shown in <a href="define.htm#CHDCJADE">&#34;Global cache groups&#34;</a>.</p>
<p>If any AWT cache groups were created, start the replication agent on the TimesTen database by calling the <code>ttRepStart</code> built-in procedure as the cache manager user:</p>
<pre>Command&gt; CALL ttRepStart;
</pre>
<p>If any global cache groups were created, the database must attach to the cache grid that it is associated with in order to update the cache tables of the global cache groups. Attaching the database to the grid allows the database to become a member of the grid so that cache instances in the cache tables of the global cache groups can maintain consistency among the databases within the grid.</p>
<p>As the cache manager user, attach the second standalone database to the <code>ttGrid</code> cache grid that it is associated with by calling the <code>ttGridAttach</code> built-in procedure. The node number for a standalone TimesTen database is 1.</p>
<p>In the following example, <code>alone2</code> is a name that uniquely identifies the grid member, <code>sys2</code> is the host name of the TimesTen system where the second standalone database resides, and <code>5002</code> is the TCP/IP port for the second standalone database&#39;s cache agent process:</p>
<pre>Command&gt; CALL ttGridAttach(1,&#39;alone2&#39;,&#39;sys2&#39;,5002);
Command&gt; exit
</pre></div>
<!-- class="sect1" -->
<a id="CHDICFBF"></a>
<div id="TTCAC297" class="sect1">
<h2 class="sect1">Replicating cache tables</h2>
<p>To achieve high availability, configure an active standby pair replication scheme for cache tables in a read-only cache group or an AWT cache group.</p>
<p>An <a id="sthref472"></a>active standby pair that replicates cache tables from one of these cache group types can automatically change the role of a TimesTen database as part of failover and recovery with minimal chance of data loss. Cache groups themselves provide resilience from Oracle database outages, further strengthening system availability. See <a class="olink TTREP231" href="../TTREP/standbycache.htm#TTREP231">&#34;Administering an Active Standby Pair with Cache Groups&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database Replication Guide</span> for more information.</p>
<p>An active standby pair replication scheme provides for high availability of a TimesTen database. Multiple grid members provide for high availability of a TimesTen cache grid. Oracle Real Application Clusters (Oracle RAC) provides for high availability of an Oracle database. For more information about using TimesTen Application-Tier Database Cache in an Oracle RAC environment, see <a href="rac.htm#BHCHFGCI">&#34;Using TimesTen Application-Tier Database Cache in an Oracle RAC Environment&#34;</a>.</p>
<p>Perform the following tasks to configure an active standby pair for TimesTen databases that cache Oracle Database tables:</p>
<ul>
<li>
<p><a href="#CIHEAEGJ">Create and configure the active database</a></p>
</li>
<li>
<p><a href="#CIHBJGBF">Create and configure the standby database</a></p>
</li>
<li>
<p><a href="#CIHBBBEB">Create and configure the read-only subscriber database</a></p>
</li>
</ul>
<a id="CIHEAEGJ"></a>
<div id="TTCAC298" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Create and configure the active database</h3>
<p>The following is the definition of the <code>cacheactive</code> DSN for the <a id="sthref473"></a>active database of the active standby pair that becomes a member of the <code>ttGrid</code> cache grid:</p>
<pre>[cacheactive]
DataStore=/users/OracleCache/cacheact
PermSize=64
OracleNetServiceName=orcl
DatabaseCharacterSet=WE8ISO8859P1
CacheGridEnable=1
</pre>
<p>Start the <code>ttIsql</code> utility and connect to the <code>cacheactive</code> DSN as the instance administrator to create the database. Then create the cache manager user <code>cacheuser</code> whose name is the same as a companion Oracle Database user. In this example, the cache administration user is acting as the companion Oracle Database user.</p>
<p>Then create a cache table user <code>oratt</code> whose name is the same as the Oracle Database schema user who owns the Oracle Database tables to be cached in the TimesTen database.</p>
<pre>% ttIsql cacheactive
Command&gt; CREATE USER cacheuser IDENTIFIED BY timesten;
Command&gt; CREATE USER oratt IDENTIFIED BY timesten;
</pre>
<p>As the instance administrator, use the <code>ttIsql</code> utility to grant the cache manager user <code>cacheuser</code> the privileges required to perform the operations listed in <a href="prereqs.htm#BCFJHCHA">Example 3-8</a> as well as create an active standby pair replication scheme which requires the <code>ADMIN</code> privilege:</p>
<pre>Command&gt; GRANT CREATE SESSION, CACHE_MANAGER,
       &gt; CREATE ANY TABLE, ADMIN TO cacheuser;
Command&gt; exit
</pre>
<p>Start the <code>ttIsql</code> utility and connect to the <code>cacheactive</code> DSN as the cache manager user. Set the cache administration user name and password by calling the <code>ttCacheUidPwdSet</code> built-in procedure.</p>
<pre>% ttIsql &#34;DSN=cacheactive;UID=cacheuser;PWD=timesten;OraclePWD=oracle&#34;
Command&gt; CALL ttCacheUidPwdSet(&#39;cacheuser&#39;,&#39;oracle&#39;);
</pre>
<p>Associate the active database to the <code>ttGrid</code> cache grid by calling the <code>ttGridNameSet</code> built-in procedure as the cache manager user:</p>
<pre>Command&gt; CALL ttGridNameSet(&#39;ttGrid&#39;);
</pre>
<p>The <code>ttGrid</code> cache grid was created from the first standalone TimesTen database. Since the grid already exists, it does not need to be created again.</p>
<p>If desired, you can test the connectivity between the active database and the Oracle database using the instructions stated in <a href="prereqs.htm#BCFJHFEI">&#34;Testing the connectivity between the TimesTen and Oracle databases&#34;</a>.</p>
<p>Start the cache agent on the active database by calling the <code>ttCacheStart</code> built-in procedure as the cache manager user:</p>
<pre>Command&gt; CALL ttCacheStart;
</pre>
<p>Then create cache groups in the database as the cache manager user. For example, the following statement creates a dynamic AWT global cache group <code>subscriber_accounts</code> that caches the <code>oratt.subscriber</code> table:</p>
<pre>CREATE DYNAMIC ASYNCHRONOUS WRITETHROUGH GLOBAL CACHE GROUP subscriber_accounts
FROM oratt.subscriber
 (subscriberid       NUMBER(10) NOT NULL PRIMARY KEY,
  name               VARCHAR2(100) NOT NULL,
  minutes_balance    NUMBER(5) NOT NULL,
  last_call_duration NUMBER(4) NOT NULL);
</pre>
<p>The definition of the <code>oratt.subscriber</code> cached Oracle Database table is shown in <a href="define.htm#CHDCJADE">&#34;Global cache groups&#34;</a>.</p>
<p>As the cache manager user, create an active standby pair replication scheme in the active database using a <code>CREATE ACTIVE STANDBY PAIR</code> statement.</p>
<p>In the following example, <code>cacheact</code>, <code>cachestand</code> and <code>subscr</code> are the file name prefixes of the checkpoint and transaction log files of the active database, standby database and read-only subscriber database. <code>sys3</code>, <code>sys4</code> and <code>sys5</code> are the host names of the TimesTen systems where the active database, standby database and read-only subscriber database reside, respectively.</p>
<pre>Command&gt; <a id="sthref474"></a><a id="sthref475"></a>CREATE ACTIVE STANDBY PAIR cacheact ON &#34;sys3&#34;, cachestand ON &#34;sys4&#34;
       &gt; SUBSCRIBER subscr ON &#34;sys5&#34;;
</pre>
<p>As the cache manager user, start the replication agent on the active database by calling the <code>ttRepStart</code> built-in procedure. Then declare the database as the active by calling the <a id="sthref476"></a><a id="sthref477"></a><code>ttRepStateSet</code> built-in procedure.</p>
<pre>Command&gt; CALL ttRepStart;
Command&gt; CALL ttRepStateSet(&#39;active&#39;);
</pre>
<p>If any global cache groups were created, the database must attach to the cache grid that it is associated with in order to update the cache tables of the global cache groups. Attaching the database to the grid allows the database to become a member of the grid so that cache instances in the cache tables of the global cache groups can maintain consistency among the databases within the grid.</p>
<p>As the cache manager user, attach the active database to the <code>ttGrid</code> cache grid that it is associated with by calling the <code>ttGridAttach</code> built-in procedure. The node number for an active database is 1.</p>
<p>In the following example:</p>
<ul>
<li>
<p><code>cacheact</code> is a name that uniquely identifies the active database grid node.</p>
</li>
<li>
<p><code>cachestand</code> is a name that uniquely identifies the standby database grid node.</p>
</li>
<li>
<p><code>sys3</code> is the host name of the TimesTen system where the active database resides.</p>
</li>
<li>
<p><code>sys4</code> is the host name of the TimesTen system where the standby database resides.</p>
</li>
<li>
<p><code>5003</code> is the TCP/IP port for the active database&#39;s cache agent process.</p>
</li>
<li>
<p><code>5004</code> is the TCP/IP port for the standby database&#39;s cache agent process.</p>
</li>
</ul>
<pre>Command&gt; CALL ttGridAttach(1,&#39;cacheact&#39;,&#39;sys3&#39;,5003,&#39;cachestand&#39;,&#39;sys4&#39;,5004);
Command&gt; exit
</pre></div>
<!-- class="sect2" -->
<a id="CIHBJGBF"></a>
<div id="TTCAC299" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Create and configure the standby database</h3>
<p>The following is the definition of the <code>cachestandby</code> DSN for the <a id="sthref478"></a>standby database of the active standby pair that becomes a member of the <code>ttGrid</code> cache grid:</p>
<pre>[cachestandby]
DataStore=/users/OracleCache/cachestand
PermSize=64
OracleNetServiceName=orcl
DatabaseCharacterSet=WE8ISO8859P1
CacheGridEnable=1
</pre>
<p>As the instance administrator, create the standby database as a duplicate of the active database by running a <a id="sthref479"></a><a id="sthref480"></a><a id="sthref481"></a><code>ttRepAdmin -duplicate</code> utility command from the standby database system. The instance administrator user name of the active database&#39;s and standby database&#39;s instances must be identical.</p>
<p>Use the <code>-keepCG</code> option so that cache tables in the active database are duplicated as cache tables in the standby database, because the standby database is connected with the Oracle database.</p>
<p>In the following example:</p>
<ul>
<li>
<p>The <code>-from</code> option specifies the file name prefix of the active database&#39;s checkpoint and transaction log files.</p>
</li>
<li>
<p>The <code>-host</code> option specifies the host name of the TimesTen system where the active database resides.</p>
</li>
<li>
<p>The <code>-uid</code> and <code>-pwd</code> options specify a user name and password of a TimesTen internal user defined in the active database that has been granted the <code>ADMIN</code> privilege.</p>
</li>
<li>
<p>The <code>-cacheuid</code> and <code>-cachepwd</code> options specify the cache administration user name and password.</p>
</li>
<li>
<p><code>cachestandby</code> is the DSN of the standby database.</p>
</li>
</ul>
<pre>% <a id="sthref482"></a>ttRepAdmin -duplicate -from cacheact -host &#34;sys3&#34; -uid cacheuser -pwd timesten
    -cacheuid cacheuser -cachepwd oracle -keepCG cachestandby
</pre>
<p>Start the <code>ttIsql</code> utility and connect to the <code>cachestandby</code> DSN as the cache manager user. Set the cache administration user name and password by calling the <code>ttCacheUidPwdSet</code> built-in procedure.</p>
<pre>% ttIsql &#34;DSN=cachestandby;UID=cacheuser;PWD=timesten;OraclePWD=oracle&#34;
Command&gt; CALL ttCacheUidPwdSet(&#39;cacheuser&#39;,&#39;oracle&#39;);
</pre>
<p>The <code>ttGrid</code> cache grid was created from the first standalone TimesTen database. Since the grid already exists, it does not need to be created again.</p>
<p>The <code>ttRepAdmin -duplicate -keepCG</code> utility command associated the standby database to the <code>ttGrid</code> cache grid so this association does not need to be done explicitly.</p>
<p>If desired, you can test the connectivity between the standby database and the Oracle database using the instructions stated in <a href="prereqs.htm#BCFJHFEI">&#34;Testing the connectivity between the TimesTen and Oracle databases&#34;</a>.</p>
<p>Start the cache agent on the standby database by calling the <code>ttCacheStart</code> built-in procedure as the cache manager user:</p>
<pre>Command&gt; CALL ttCacheStart;
</pre>
<p>As the cache manager user, start the replication agent on the standby database by calling the <code>ttRepStart</code> built-in procedure.</p>
<pre>Command&gt; CALL ttRepStart;
</pre>
<p>If any global cache groups were created, the database must attach to the cache grid that it is associated with in order to update the cache tables of the global cache groups. Attaching the database to the grid allows the database to become a member of the grid so that cache instances in the cache tables of the global cache groups can maintain consistency among the databases within the grid.</p>
<p>As the cache manager user, attach the standby database to the <code>ttGrid</code> cache grid that it is associated with by calling the <code>ttGridAttach</code> built-in procedure. The node number for a standby database is 2. Use the same TCP/IP ports specified for the cache agent of the active and standby databases that were specified when configuring the active database.</p>
<p>In the following example:</p>
<ul>
<li>
<p><code>cacheact</code> is a name that uniquely identifies the active database grid node.</p>
</li>
<li>
<p><code>cachestand</code> is a name that uniquely identifies the standby database grid node.</p>
</li>
<li>
<p><code>sys3</code> is the host name of the TimesTen system where the active database resides.</p>
</li>
<li>
<p><code>sys4</code> is the host name of the TimesTen system where the standby database resides.</p>
</li>
<li>
<p><code>5003</code> is the TCP/IP port for the active database&#39;s cache agent process.</p>
</li>
<li>
<p><code>5004</code> is the TCP/IP port for the standby database&#39;s cache agent process.</p>
</li>
</ul>
<pre>Command&gt; CALL ttGridAttach(2,&#39;cacheact&#39;,&#39;sys3&#39;,5003,&#39;cachestand&#39;,&#39;sys4&#39;,5004);
Command&gt; exit
</pre></div>
<!-- class="sect2" -->
<a id="CIHBBBEB"></a>
<div id="TTCAC300" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Create and configure the read-only subscriber database</h3>
<p>The following is the definition of the <code>rosubscriber</code> DSN for the <a id="sthref483"></a>read-only subscriber database of the active standby pair:</p>
<pre>[rosubscriber]
DataStore=/users/OracleCache/subscr
PermSize=64
DatabaseCharacterSet=WE8ISO8859P1
</pre>
<p>As the instance administrator, create the read-only subscriber database as a duplicate of the standby database by running a <code>ttRepAdmin -duplicate</code> utility command from the read-only subscriber database system. The instance administrator user name of the standby database instance and read-only subscriber database instance must be identical.</p>
<p>Use the <code>-noKeepCG</code> option so that cache tables in the standby database are duplicated as regular tables in the read-only subscriber database because the read-only subscriber database is not connected with the Oracle database. As a result, the read-only subscriber database is not associated with a cache grid.</p>
<p>In the following example:</p>
<ul>
<li>
<p>The <code>-from</code> option specifies the file name prefix of the standby database&#39;s checkpoint and transaction log files.</p>
</li>
<li>
<p>The <code>-host</code> option specifies the host name of the TimesTen system where the standby database resides.</p>
</li>
<li>
<p>The <code>-uid</code> and <code>-pwd</code> options specify a user name and password of a TimesTen internal user defined in the standby database that has been granted the <code>ADMIN</code> privilege.</p>
</li>
<li>
<p><code>rosubscriber</code> is the DSN of the read-only subscriber database.</p>
</li>
</ul>
<pre>% <a id="sthref484"></a>ttRepAdmin -duplicate -from cachestand -host &#34;sys4&#34; -uid cacheuser -pwd timesten
    -noKeepCG rosubscriber
</pre>
<p>As the cache manager user, start the replication agent on the read-only subscriber database by calling the <code>ttRepStart</code> built-in procedure.</p>
<pre>% ttIsql &#34;DSN=rosubscriber;UID=cacheuser;PWD=timesten&#34;
Command&gt; CALL ttRepStart;
Command&gt; exit
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDFBEEH"></a>
<div id="TTCAC301" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Example of data sharing among the grid members<a id="sthref485"></a><a id="sthref486"></a></h2>
<p>The definition of the <code>oratt.subscriber</code> cached Oracle Database table is shown in <a href="define.htm#CHDCJADE">&#34;Global cache groups&#34;</a>.</p>
<p>The following is the data in the <code>oratt.subscriber</code> cached Oracle Database table.</p>
<pre>SUBSCRIBERID  NAME              MINUTES_BALANCE   LAST_CALL_DURATION
------------  ----------------  ---------------   ------------------    
        1001  Jane Anderson                  75                   15
        1004  Robert Phillips                60                   20
        1005  William Ackerman               40                   10
        1009  Sandy Little                   90                   30
</pre>
<p>The <code>oratt.subscriber</code> TimesTen cache table in the <code>subscriber_accounts</code> global cache group is initially empty in all five TimesTen databases (<code>cachealone1</code>, <code>cachealone2</code>, <code>cacheactive</code>, <code>cachestandby</code>, <code>rosubscriber</code>):</p>
<pre>Command&gt; SELECT * FROM oratt.subscriber;
0 rows found.
</pre>
<p>Issue the following <code>SELECT</code> statement on the <code>cachealone1</code> TimesTen database to dynamically load one cache instance from the cached Oracle Database table into the TimesTen cache table:</p>
<pre>Command&gt; SELECT * FROM oratt.subscriber WHERE subscriberid = 1004;
&lt; 1004, Robert Phillips, 60, 20 &gt;
</pre>
<p>As a result, the <code>cachealone1</code> standalone database grid member has ownership of the cache instance with subscriber ID 1004. This cache instance does not exist in any of the other grid members.</p>
<p>Next, issue the following <code>SELECT</code> statement on the <code>cachealone2</code> TimesTen database to dynamically load one cache instance from the cached Oracle Database table into the TimesTen cache table:</p>
<pre>Command&gt; SELECT * FROM oratt.subscriber WHERE subscriberid = 1004;
&lt; 1004, Robert Phillips, 60, 20 &gt;
</pre>
<p>As a result, the <code>cachealone2</code> standalone database grid member has taken ownership of the cache instance with subscriber ID 1004 from the <code>cachealone1</code> grid member. This cache instance no longer exists in <code>cachealone1</code> and does not exist in any of the other grid members.</p>
<p>Next issue the following <code>INSERT</code> statement on the <code>cacheactive</code> TimesTen database to insert a new cache instance into the TimesTen cache table:</p>
<pre>Command&gt; INSERT INTO oratt.subscriber VALUES (1012, &#39;Charles Hill&#39;, 80, 16);
</pre>
<p>As a result, the <code>cacheactive</code> active database grid node has ownership of the cache instance with subscriber ID 1012. The cache instance is replicated to the <code>cachestandby</code> standby database and the <code>rosubscriber</code> read-only subscriber database. The cache instance does not exist in any of the other grid members. The insert operation is also automatically propagated to the <code>oratt.subscriber</code> cached Oracle Database table.</p>
<p>A standby database or a read-only subscriber database cannot directly take ownership of a cache instance. A dynamic or manual load operation is prohibited including <code>SELECT</code> statements that result in a dynamic load because these databases are read-only.</p>
<p>No data sharing occurs with cache tables in local cache groups among the grid members. Each grid member can have a different number of local cache groups. If two grid members have a local cache group with the same definition, the data in the cache table within one grid member can overlap with the data in the cache table within the other grid member. There is no concept of cache instance ownership for cache tables in local cache groups.</p>
</div>
<!-- class="sect1" -->
<a id="CIHGEDDI"></a>
<div id="TTCAC424" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Performing global queries on a cache grid<a id="sthref487"></a><a id="sthref488"></a><a id="sthref489"></a><a id="sthref490"></a><a id="sthref491"></a></h2>
<p>If you want to access data on all the nodes of a cache grid, perform a global query. For example, consider this statement:</p>
<pre>SELECT MAX(salary) FROM employees;
</pre>
<p>When global query processing is <span class="italic">not</span> enabled, the statement returns the maximum salary for the rows that exist on the local node. When global query processing is enabled, it returns the maximum salary across all employee records in the cache grid.</p>
<p>A global query can reference a cache table or a noncache table in all attached grid members. The referenced tables can be any combination of local tables, cache tables, views, materialized views and table synonyms. The tables must have the same definition for columns affected by the global query.</p>
<p>Enable global query processing by setting an optimizer flag. Before executing a global query, turn autocommit off<a id="sthref492"></a><a id="sthref493"></a> and call the <code>ttOptSetFlag</code> built-in procedure to set the <a id="sthref494"></a><code>GlobalProcessing</code> optimizer flag to 1:</p>
<pre>autocommit 0;
CALL ttOptSetFlag(&#39;GlobalProcessing&#39;, 1);
</pre>
<p>You can perform global queries with local joins by using the <code>GlobalLocalJoin</code> optimizer flag instead of the <code>GlobalProcessing</code> optimizer flag. See <a href="#CIHEHFAB">&#34;Performing global queries with local joins&#34;</a>.</p>
<p>Global queries that are enabled by the <code>GlobalProcessing</code> optimizer flag have these restrictions:</p>
<ul>
<li>
<p>The query must reference exactly one table.</p>
</li>
<li>
<p>The query cannot include a self join, a derived table or subqueries.</p>
</li>
<li>
<p>The query cannot reference a global temporary table.</p>
</li>
<li>
<p>The query cannot be performed on the standby database of an active standby grid member.</p>
</li>
<li>
<p><code>ROWNUM</code> and <code>GROUP BY</code> clauses cannot be used in the same query.</p>
</li>
<li>
<p>The query cannot be used with <code>GROUPING SETS</code>, <code>CUBE</code>, <code>ROLLUP</code>, <code>GROUPING</code>, <code>GROUPING_ID</code>, or <code>GROUP_ID</code>.</p>
</li>
<li>
<p>The query cannot include the <code>WITH</code> clause.</p>
</li>
<li>
<p>The query cannot include analytic SQL functions.</p>
</li>
<li>
<p>The <code>PassThrough</code> connection attribute must be set to 0.</p>
</li>
</ul>
<a id="CIHEHFAB"></a>
<div id="TTCAC450" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Performing global queries with local joins<a id="sthref495"></a><a id="sthref496"></a></h3>
<p>You can execute a global query with a local join. This means that the <code>SELECT</code> statement is global (selects across grid members), but the join result is local (the join resides on the local node). You may find it useful to join fact and dimension tables, to join tables that are a similar size and whose data are distributed based on the join key or to join tables of a global cache group based on a primary key or foreign key relationship. Use the <a id="sthref497"></a><code>GlobalLocalJoin</code> optimizer flag to enable a global query with local join.</p>
<p>Global queries with local joins can join cache tables, global cache tables, noncache tables with the same definition, views and materialized views. Global queries with local joins can include sequences.</p>
<p>A global query executed in serializable isolation belongs to the global transaction of the <code>SELECT</code> statement. A global query executed in read committed isolation is executed in its own transaction on the remote nodes.</p>
<p>These operations in a global query are executed locally in each grid member:</p>
<ul>
<li>
<p>Joins</p>
</li>
<li>
<p>Derived tables</p>
</li>
<li>
<p>Views</p>
</li>
<li>
<p><code>GROUP BY</code>, <code>HAVING</code>, <code>ORDER BY</code> and <code>DISTINCT</code> clauses in a subquery</p>
</li>
</ul>
<p>These operations in the main query of a global query are executed globally:</p>
<ul>
<li>
<p><code>GROUP BY</code> clause and aggregation.</p>
</li>
<li>
<p><code>ORDER BY</code> clause.</p>
</li>
<li>
<p><code>DISTINCT</code> clause.</p>
</li>
<li>
<p><code>HAVING</code> clause. This clause cannot contain a join.</p>
</li>
</ul>
<p>Synonyms are resolved on the node where the query originates.</p>
<p>Before executing a global query with local join, turn autocommit off<a id="sthref498"></a><a id="sthref499"></a> and call the <code>ttOptSetFlag</code> built-in procedure to set the <code>GlobalLocalJoin</code> optimizer flag to 1:</p>
<pre>autocommit off;
CALL ttOptSetFlag(&#39;GlobalLocalJoin&#39;, 1)
</pre>
<p>Global queries with local joins have these restrictions:</p>
<ul>
<li>
<p>The query cannot include the <code>ROWNUM</code> expression.</p>
</li>
<li>
<p>The query cannot include a set operator.</p>
</li>
<li>
<p>The query cannot include the <code>WITH</code> clause.</p>
</li>
<li>
<p>The query cannot be used with <code>GROUPING SETS</code>, <code>CUBE</code>, <code>ROLLUP</code>, <code>GROUPING</code>, <code>GROUPING_ID</code>, or <code>GROUP_ID</code>.</p>
</li>
<li>
<p>The query cannot include analytic SQL functions.</p>
</li>
<li>
<p>The <code>PassThrough</code> connection attribute must be set to 0.</p>
</li>
<li>
<p>The query cannot be performed on the standby database of an active standby grid member.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHBDEDD"></a>
<div id="TTCAC449" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Obtaining information about the location of data in the cache grid<a id="sthref500"></a></h3>
<p>You may wish to execute a global query without changing the location of the data.You can use SQL functions to determine which grid node contains the information and then execute a query for the information from that node.</p>
<p>Use these SQL functions in a global query to obtain information about the location of data in the cache grid:</p>
<ul>
<li>
<p><code><a id="sthref501"></a>TTGRIDMEMBERID()</code> - Returns the node ID of the node on which the query is executed.</p>
</li>
<li>
<p><code><a id="sthref502"></a>TTGRIDNODENAME()</code> - Returns the name of the node on which the query is executed.</p>
</li>
<li>
<p><code><a id="sthref503"></a>TTGRIDUSERASSIGNEDNAME()</code> - Returns the user-assigned name of the node on which the query is executed. The user assigns the name when the <code>ttGridAttach</code> built-in procedure is called. If you are using Oracle Clusterware, you do not call <code>ttGridAttach</code> directly and the user-assigned name is generated by TimesTen.</p>
</li>
</ul>
<p>These functions can be used in a <code>SELECT</code> statement and in these clauses of a <code>SELECT</code> statement:</p>
<ul>
<li>
<p><code>WHERE</code> clause</p>
</li>
<li>
<p><code>GROUP BY</code> clause</p>
</li>
<li>
<p><code>ORDER BY</code> clause</p>
</li>
</ul>
<p><a href="#CIHIFABA">Figure 6-1</a> shows a cache grid whose members have user-assigned names <code>alone1</code>, <code>alone2</code>, and an active standby pair on nodes <code>cacheact</code> and <code>cachestand</code>. Queries do not retrieve data from the standby database. The standby database has the same data as the active database.</p>
<div id="TTCAC451" class="figure">
<p class="titleinfigure"><a id="CIHIFABA"></a>Figure 6-1 Location of data in a cache grid</p>
<img width="374" height="275" src="img/globalquery.gif" alt="Description of Figure 6-1 follows"/><br/>
<a id="sthref504" href="img_text/globalquery.htm">Description of &#34;Figure 6-1 Location of data in a cache grid&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>The following example shows a global query that retrieves <code>employee_id</code>, the user-assigned node name, and the member ID from the <code>employee</code> table from the grid members.</p>
<pre>autocommit off;
CALL ttOptSetFlag(&#39;GlobalProcessing&#39;, 1);
SELECT employee_id, TTGRIDUSERASSIGNEDNAME(), TTGRIDMEMBERID() FROM employees;
COMMIT;
&lt; 100, alone1, 1&gt;
&lt; 101, alone2, 2&gt;
&lt; 102, cacheact, 3&gt;
&lt; 103, alone1, 1&gt;
&lt; 104, cacheact, 3&gt;
...
</pre>
<p>The rows that are returned show which grid node and member owns each row of the cache instance. Subsequent queries can access the appropriate node without changing the ownership of the data. For example, execute this query on grid member <code>cacheact</code>, including <code>TTGRIDUSERASSIGNEDNAME()</code> in the query to verify that <code>cacheact</code> is the grid where the query is executed:</p>
<pre>SELECT employee_id, last_name, hire_date , TTGRIDUSERASSIGNEDNAME() 
 FROM employees
 WHERE employee_id=104;
&lt; 104, Ernst, 1991-05-21 00:00:00, cacheact &gt;
</pre>
<p>For more information about <code>TTGRIDMEMBERID()</code>, <code>TTGRIDNODENAME()</code> and <code>TTGRIDUSERASSIGNEDNAME()</code>, see <a class="olink TTSQL472" href="../TTSQL/function.htm#TTSQL472">&#34;Cache grid functions&#34;</a> in <span class="italic">Oracle TimesTen In-Memory Database SQL Reference</span>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDJBGHI"></a>
<div id="TTCAC302" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding other elements to a cache grid or grid member</h2>
<p>If a database that contains a global cache group is attached to a cache grid, a subsequent database can attach to the same grid and become a grid member only if it contains a global cache group with the same definition as the global cache group in the database that is attached to the grid. The subsequent database cannot attach to the same grid if it contains more or fewer global cache groups than the database that is attached to the grid. Each database can contain a different number of local cache groups with non-matching definitions between the databases.</p>
<p>Before you can create a new dynamic AWT global cache group in a TimesTen database that is attached to a cache grid, stop the replication agent on the database. Then restart the replication agent after creating the global cache group. The new global cache group cannot be manually or dynamically loaded, and its cache tables cannot be updated until the cache group has been created with the same definition in all the grid members. In the standalone databases and the active database, create the new global cache group manually. For the standby database and the read-only subscriber databases, use the <code>ttDestroy</code> utility to drop the databases and a <code>ttRepAdmin -duplicate</code> utility command to re-create the databases so that they contain the new global cache group.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5343">
<tr>
<td class="cellalignment5350">
<table class="cellalignment5348">
<tr>
<td class="cellalignment5347"><a href="operations.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5347"><a href="manage.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2012, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5352">
<table class="cellalignment5346">
<tr>
<td class="cellalignment5347"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5347"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5347"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5347"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5347"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5347"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>