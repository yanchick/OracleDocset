<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1794"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/APEX_ERROR"></a><title>APEX_ERROR</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-05-22T14:53:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express API Reference"/>
<meta name="dcterms.identifier" content="E17963-07"/>
<meta name="dcterms.isVersionOf" content="AEAPI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="apex_debug.htm" title="Previous" type="text/html"/>
<link rel="Next" href="apex_escape.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17963-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/28</span> <!-- End Header -->
<div id="AEAPI2209" class="chapter"><a id="BGBEEGIB"></a>
<h1 class="chapter"><span class="secnum">8</span> APEX_ERRO<a id="sthref231"></a>R</h1>
<p>The APEX_ERROR package provides the interface declarations and some utility functions for an error handling function and includes procedures and functions to raise errors in an Application Express application.</p>
<p class="subhead2"><a id="AEAPI2210"></a>Topics:</p>
<ul>
<li>
<p><a href="#CABBJAGH">Data Types and Constants</a></p>
</li>
<li>
<p><a href="#CABDJBGJ">Example of an Error Handling Function</a></p>
</li>
<li>
<p><a href="#CABCGJFD">ADD_ERROR Procedure Signature 1</a></p>
</li>
<li>
<p><a href="#CABIFHGD">ADD_ERROR Procedure Signature 2</a></p>
</li>
<li>
<p><a href="#CABGDEDC">ADD_ERROR Procedure Signature 3</a></p>
</li>
<li>
<p><a href="#CABFHDJF">ADD_ERROR Procedure Signature 4</a></p>
</li>
<li>
<p><a href="#CABDEDDE">ADD_ERROR Procedure Signature 5</a></p>
</li>
<li>
<p><a href="#CABBEGDE">AUTO_SET_ASSOCIATED_ITEM Procedure</a></p>
</li>
<li>
<p><a href="#CABGCGGB">EXTRACT_CONSTRAINT_NAME Function</a></p>
</li>
<li>
<p><a href="#BGBICGJI">GET_ARIA_ERROR_ATTRIBUTES Function</a></p>
</li>
<li>
<p><a href="#CABIICCI">GET_FIRST_ORA_ERROR_TEXT Function</a></p>
</li>
<li>
<p><a href="#CABHCFBF">INIT_ERROR_RESULT Function</a></p>
</li>
</ul>
<div class="refentry"><a id="CABBJAGH"></a>
<div id="AEAPI2212" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref232"></a>Data Types and Constants</h2>
<p>This section describes the data types and constants used by the APEX_ERROR package.</p>
<ul>
<li>
<p><a href="#BGBDJHFH">Constants used for Result Types</a></p>
</li>
<li>
<p><a href="#BGBBAGCB">t_error</a></p>
</li>
<li>
<p><a href="#BGBBDADC">t_error_result</a></p>
</li>
</ul>
<div id="AEAPI2213" class="refsect2"><a id="BGBDJHFH"></a>
<h3 class="refsect2">Constants used for Result Types</h3>
<p>The following constants are used for the API parameter <code>p_display_location</code> and the attribute <code>display_location</code> in the <code>t_error</code> and <code>t_error_result</code> types.</p>
<pre>c_inline_with_field            constant varchar2(40):=&#39;INLINE_WITH_FIELD&#39;;
c_inline_with_field_and_notif  constant varchar2(40):=&#39;INLINE_WITH_FIELD_AND_NOTIFICATION&#39;;
c_inline_in_notification       constant varchar2(40):=&#39;INLINE_IN_NOTIFICATION&#39;;
c_on_error_page                constant varchar2(40):=&#39;ON_ERROR_PAGE&#39;;
</pre>
<p>The following constants are used for the API parameter <code>associated_type</code> in the <code>t_error</code> type.</p>
<pre>c_ass_type_page_item           constant varchar2(30):=&#39;PAGE_ITEM&#39;;
c_ass_type_region              constant varchar2(30):=&#39;REGION&#39;;
c_ass_type_region_column       constant varchar2(30):=&#39;REGION_COLUMN&#39;;
</pre></div>
<!-- class="refsect2" -->
<div id="AEAPI2214" class="refsect2"><a id="BGBBAGCB"></a>
<h3 class="refsect2">t_error</h3>
<p>The following type is passed into an error handling function and contains all of the relevant error information.</p>
<pre>type t_error is record (
    message           varchar2(32767),     /* Displayed error message */
    additional_info   varchar2(32767),     /* Only used for display_location ON_ERROR_PAGE to display additional error information */
    display_location  varchar2(40),        /* Use constants &#34;used for display_location&#34; below */
    association_type  varchar2(40),        /* Use constants &#34;used for asociation_type&#34; below */
    page_item_name    varchar2(255),       /* Associated page item name */
    region_id         number,              /* Associated tabular form region id of the primary application */
    column_alias      varchar2(255),       /* Associated tabular form column alias */
    row_num           pls_integer,         /* Associated tabular form row */
    is_internal_error boolean,             /* Set to TRUE if it&#39;s a critical error raised by the Application Express engine, like an invalid SQL/PLSQL statements, ... Internal Errors are always displayed on the Error Page */
    apex_error_code   varchar2(255),       /* Contains the system message code if it&#39;s an error raised by Application Express */
    ora_sqlcode       number,              /* SQLCODE on exception stack which triggered the error, NULL if the error was not raised by an ORA error */
    ora_sqlerrm       varchar2(32767),     /* SQLERRM which triggered the error, NULL if the error was not raised by an ORA error */
    error_backtrace   varchar2(32767),     /* Output of dbms_utility.format_error_backtrace or dbms_utility.format_call_stack */
    component         wwv_flow.t_component /* Component which has been processed when the error occurred */
    );
</pre></div>
<!-- class="refsect2" -->
<div id="AEAPI2215" class="refsect2"><a id="BGBBDADC"></a>
<h3 class="refsect2">t_error_result</h3>
<p>The following type is used as the result type for an error handling function.</p>
<pre>type t_error_result is record (
    message          varchar2(32767), /* Displayed error message */
    additional_info  varchar2(32767), /* Only used for display_location ON_ERROR_PAGE to display additional error information */
    display_location varchar2(40),    /* Use constants &#34;used for display_location&#34; below */
    page_item_name   varchar2(255),   /* Associated page item name */
    column_alias     varchar2(255)    /* Associated tabular form column alias */
    );
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CABDJBGJ"></a>
<div id="AEAPI2216" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Example of an <a id="sthref233"></a>Error Handling Function</h2>
<pre>create or replace function apex_error_handling_example (
    p_error in apex_error.t_error )
    return apex_error.t_error_result
is
    l_result          apex_error.t_error_result;
    l_reference_id    number;
    l_constraint_name varchar2(255);
begin
    l_result := apex_error.init_error_result (
                    p_error =&gt; p_error );
 
    -- If it&#39;s an internal error raised by APEX, like an invalid statement or
    -- code which cannot be executed, the error text might contain security sensitive
    -- information. To avoid this security problem rewrite the error to
    -- a generic error message and log the original error message for further
    -- investigation by the help desk.
    if p_error.is_internal_error then
        -- Access Denied errors raised by application or page authorization should
        -- still show up with the original error message
        if    p_error.apex_error_code &lt;&gt; &#39;APEX.AUTHORIZATION.ACCESS_DENIED&#39;              and p_error.apex_error_code not like &#39;APEX.SESSION_STATE.%&#39; then
            -- log error for example with an autonomous transaction and return
            -- l_reference_id as reference#
            -- l_reference_id := log_error (
            --                       p_error =&gt; p_error );
            --
            
            -- Change the message to the generic error message which is not exposed
            -- any sensitive information.
            l_result.message         := &#39;An unexpected internal application error has occurred. &#39;||
                                        &#39;Please get in contact with XXX and provide &#39;||
                                        &#39;reference# &#39;||to_char(l_reference_id, &#39;999G999G999G990&#39;)||
                                        &#39; for further investigation.&#39;;
            l_result.additional_info := null;
        end if;
    else
        -- Always show the error as inline error
        -- Note: If you have created manual tabular forms (using the package
        --       apex_item/htmldb_item in the SQL statement) you should still
        --       use &#34;On error page&#34; on that pages to avoid loosing entered data
        l_result.display_location := case
                                       when l_result.display_location = apex_error.c_on_error_page then apex_error.c_inline_in_notification
                                       else l_result.display_location
                                     end;
 
        -- If it&#39;s a constraint violation like
        --
        --   -) ORA-00001: unique constraint violated
        --   -) ORA-02091: transaction rolled back (-&gt; can hide a deferred constraint)
        --   -) ORA-02290: check constraint violated
        --   -) ORA-02291: integrity constraint violated - parent key not found
        --   -) ORA-02292: integrity constraint violated - child record found
        --
        -- try to get a friendly error message from our constraint lookup configuration.
        -- If the constraint in our lookup table is not found, fallback to
        -- the original ORA error message.
        if p_error.ora_sqlcode in (-1, -2091, -2290, -2291, -2292) then
            l_constraint_name := apex_error.extract_constraint_name (
                                     p_error =&gt; p_error );
        
            begin
                select message
                  into l_result.message
                  from constraint_lookup
                 where constraint_name = l_constraint_name;
            exception when no_data_found then null; -- not every constraint has to be in our lookup table
            end;
        end if;
        
        -- If an ORA error has been raised, for example a raise_application_error(-20xxx, &#39;...&#39;)
        -- in a table trigger or in a PL/SQL package called by a process and the 
        -- error has not been found in the lookup table, then display
        -- the actual error text and not the full error stack with all the ORA error numbers.
        if p_error.ora_sqlcode is not null and l_result.message = p_error.message then
            l_result.message := apex_error.get_first_ora_error_text (
                                    p_error =&gt; p_error );
        end if;
 
        -- If no associated page item/tabular form column has been set, use
        -- apex_error.auto_set_associated_item to automatically guess the affected
        -- error field by examine the ORA error for constraint names or column names.
        if l_result.page_item_name is null and l_result.column_alias is null then
            apex_error.auto_set_associated_item (
                p_error        =&gt; p_error,
                p_error_result =&gt; l_result );
        end if;
    end if;
 
    return l_result;
end apex_error_handling_example;
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CABCGJFD"></a>
<div id="AEAPI2217" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref234"></a>ADD_ERROR Procedure Signature 1</h2>
<p>This procedure adds an error message to the error stack that is used to display an error on an error page or inline in a notification. It can be called in a validation or process to add one or more errors to the error stack.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure must be called before the Application Express application has performed the last validation or process. Otherwise, the error is ignored if it does not have a display location of <code>apex_error.c_on_error_page</code>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" -->
<p class="subhead2"><a id="AEAPI2218"></a>Syntax</p>
<pre>APEX_ERROR.ADD_ERROR (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2 );
</pre>
<p class="subhead2"><a id="AEAPI2219"></a>Parameters</p>
<p><a href="#BGBJAAFJ">Table 8-1</a> describes the parameters available in the ADD_ERROR Procedure Signature 1.</p>
<div id="AEAPI2220" class="tblformal">
<p class="titleintable"><a id="sthref235"></a><a id="BGBJAAFJ"></a>Table 8-1 ADD_ERROR Procedure Signature 1 Parameters</p>
<table class="cellalignment3315" title="ADD_ERROR Procedure Signature 1 Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t3">Parameters</th>
<th class="cellalignment3316" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t3" headers="r1c1-t3">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t3 r1c2-t3">
<p>Displayed error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t3" headers="r1c1-t3">
<p><code>p_additional_info</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t3 r1c2-t3">
<p>Additional error information needed if the error is displayed on the error page.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t3" headers="r1c1-t3">
<p><code>p_display_location</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t3 r1c2-t3">
<p>Specifies where the error message is displayed. Use the constant <code>apex_error.inline_notification</code> or <code>apex_error.c_error_page</code>. See <a href="#BGBDJHFH">&#34;Constants used for Result Types&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2221"></a>Example</p>
<p>This example illustrates how to add a custom error message to the error stack. The error message is displayed inline in a notification. This example can be used in a validation or process.</p>
<pre>apex_error.add_error (
    p_message          =&gt; &#39;This custom account is not active!&#39;,
    p_display_location =&gt; apex_error.c_inline_in_notification );
</pre>
<div class="refentry"><a id="CABIFHGD"></a>
<div id="AEAPI2222" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ADD_ERROR Procedure Signature 2</h2>
<p>This procedure adds an error message to the error stack that is used to display an error for a page item inline in a notification. It can be called in a validation or process to add one or more errors to the error stack.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure must be called before the Application Express application has performed the last validation or process. Otherwise, the error is ignored if it does not have a display location of <code>apex_error.c_on_error_page</code>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<p class="subhead2"><a id="AEAPI2223"></a>Syntax</p>
<pre>APEX_ERROR.ADD_ERROR (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2,
    p_page_item_name   in varchar2);
</pre>
<p class="subhead2"><a id="AEAPI2224"></a>Parameters</p>
<p><a href="#BGBGJIIB">Table 8-2</a> describes the parameters available in the ADD_ERROR Procedure Signature 2.</p>
<div id="AEAPI2225" class="tblformal">
<p class="titleintable"><a id="sthref236"></a><a id="BGBGJIIB"></a>Table 8-2 ADD_ERROR Procedure Signature 2 Parameters</p>
<table class="cellalignment3315" title="ADD_ERROR Procedure Signature 2 Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t5">Parameters</th>
<th class="cellalignment3316" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t5" headers="r1c1-t5">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t5 r1c2-t5">
<p>Displayed error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t5" headers="r1c1-t5">
<p><code>p_additional_info</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t5 r1c2-t5">
<p>Additional error information needed if the error is displayed on the error page.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t5" headers="r1c1-t5">
<p><code>p_display_location</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t5 r1c2-t5">
<p>Specifies where the error message is displayed. Use the constant <code>apex_error.c_inline_with field</code> or <code>apex_error.c_inline_with_field_and_notif</code>. See <a href="#BGBDJHFH">&#34;Constants used for Result Types&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t5" headers="r1c1-t5">
<p><code>p_page_item_name</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t5 r1c2-t5">
<p>Name of the page item on the current page that is highlighted if <code>apex_error.c_inline_with_field</code> or <code>apex_error.c_inline_with_field_and_notif</code> are used as the display location.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2226"></a>Example</p>
<p>This example illustrates how to add a custom error message to the error stack. The P5_CUSTOMER_ID item is highlighted on the page. The error message is displayed inline in a notification. This example can be used in a validation or process.</p>
<pre>apex_error.add_error (
    p_message          =&gt; &#39;Invalid Customer ID!&#39;,
    p_display_location =&gt;  apex_error.c_inline_with_field_and_notif,
    p_page_item_name   =&gt; &#39;P5_CUSTOMER_ID&#39;);
</pre>
<div class="refentry"><a id="CABGDEDC"></a>
<div id="AEAPI2227" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref237"></a>ADD_ERROR Procedure Signature 3</h2>
<p>This procedure adds an error message to the error stack that is used to display text as defined by a shared component. This error message can be displayed to all display locations. It can be called in a validation or process to add one or more errors to the error stack.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure must be called before the Application Express application has performed the last validation or process. Otherwise, the error is ignored if it does not have a display location of <code>apex_error.c_on_error_page</code>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<p class="subhead2"><a id="AEAPI2228"></a>Syntax</p>
<pre>APEX_ERROR.ADD_ERROR (
    p_error_code          in varchar2,
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default true,
    p_additional_info     in varchar2 default null,
    p_display_location    in varchar2,
    p_page_item_name      in varchar2 );
</pre>
<p class="subhead2"><a id="AEAPI2229"></a>Parameters</p>
<p><a href="#BGBICGHB">Table 8-3</a> describes the parameters available in the ADD_ERROR Procedure Signature 3.</p>
<div id="AEAPI2230" class="tblformal">
<p class="titleintable"><a id="sthref238"></a><a id="BGBICGHB"></a>Table 8-3 ADD_ERROR Procedure Signature 3 Parameters</p>
<table class="cellalignment3315" title="ADD_ERROR Procedure Signature 3 Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t7">Parameters</th>
<th class="cellalignment3316" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t7" headers="r1c1-t7">
<p><code>p_error_code</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t7 r1c2-t7">
<p>Name of shared component text message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t7" headers="r1c1-t7">
<p><code>p_additional_info</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t7 r1c2-t7">
<p>Additional error information needed if the error is displayed on the error page.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t7" headers="r1c1-t7">
<p><code>p0</code> through <code>p9</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t7 r1c2-t7">
<p>Values for %0 through %9 placeholders defined in the text message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t7" headers="r1c1-t7">
<p><code>p_escape_placeholders</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t7 r1c2-t7">
<p>If set to <code>TRUE</code>, the values provided in <code>p0</code> through <code>p9</code> are escaped with <code>sys.htf.escape_sc</code> before replacing the placeholder in the text message. If set to <code>FALSE</code>, values are not escaped.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t7" headers="r1c1-t7">
<p><code>p_display_location</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t7 r1c2-t7">
<p>Specifies where the error message is displayed. Use the constants defined for <code>p_display_location</code>. See <a href="#BGBDJHFH">&#34;Constants used for Result Types&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t7" headers="r1c1-t7">
<p><code>p_page_item_name</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t7 r1c2-t7">
<p>Name of the page item on the current page that is highlighted if <code>apex_error.c_inline_with_field</code> or <code>apex_error.c_inline_with_field_and_notif</code> are used as the display location.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2231"></a>Example</p>
<p>This example illustrates how to add a custom error message, where the text is stored in a text message, to the error stack. The P5_CUSTOMER_ID item is highlighted on the page. The error message is displayed inline in a notification. This example can be used in a validation or process.</p>
<pre>apex_error.add_error (
    p_error_code       =&gt; &#39;INVALID_CUSTOMER_ID&#39;,
    p0                 =&gt; l_customer_id,
    p_display_location =&gt; apex_error.c_inline_with_field_and_notif,
    p_page_item_name   =&gt; &#39;P5_CUSTOMER_ID&#39; );
</pre>
<div class="refentry"><a id="CABFHDJF"></a>
<div id="AEAPI2232" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref239"></a>ADD_ERROR Procedure Signature 4</h2>
<p>This procedure adds an error message to the error stack that is used to display an error for a tabular form inline in a notification. It can be called in a validation or process to add one or more errors to the error stack.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure must be called before the Application Express application has performed the last validation or process. Otherwise, the error is ignored if it does not have a display location of <code>apex_error.c_on_error_page</code>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<p class="subhead2"><a id="AEAPI2233"></a>Syntax</p>
<pre>APEX_ERROR.ADD_ERROR (
    p_message          in varchar2,
    p_additional_info  in varchar2 default null,
    p_display_location in varchar2,
    p_region_id        in number,
    p_column_alias     in varchar2 default null,
    p_row_num          in number );
</pre>
<p class="subhead2"><a id="AEAPI2234"></a>Parameters</p>
<p><a href="#BGBJHIEI">Table 8-4</a> describes the parameters available in the ADD_ERROR Procedure Signature 4.</p>
<div id="AEAPI2235" class="tblformal">
<p class="titleintable"><a id="sthref240"></a><a id="BGBJHIEI"></a>Table 8-4 ADD_ERROR Procedure Signature 4 Parameters</p>
<table class="cellalignment3315" title="ADD_ERROR Procedure Signature 4 Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t9">Parameters</th>
<th class="cellalignment3316" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t9" headers="r1c1-t9">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t9 r1c2-t9">
<p>Displayed error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t9" headers="r1c1-t9">
<p><code>p_additional_info</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t9 r1c2-t9">
<p>Additional error information needed if the error is displayed on the error page.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t9" headers="r1c1-t9">
<p><code>p_display_location</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t9 r1c2-t9">
<p>Specifies where the error message is displayed. Use the constant <code>apex_error.c_inline_with field</code> or <code>apex_error.c_inline_with_field_and_notif</code>. See <a href="#BGBDJHFH">&#34;Constants used for Result Types&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t9" headers="r1c1-t9">
<p><code>p_region_id</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t9 r1c2-t9">
<p>The ID of a tabular form region on the current page. The ID can be read from the view <code>APEX_APPLICATION_PAGE_REGIONS</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t9" headers="r1c1-t9">
<p><code>p_column_alias</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t9 r1c2-t9">
<p>Name of a tabular form column alias defined for p_region_id that is highlighted if <code>apex_error.c_inline_with_field</code> or <code>apex_error.c_inline_with_field_and_notif</code> are used as a display location.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t9" headers="r1c1-t9">
<p><code>p_row_num</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t9 r1c2-t9">
<p>Number of the tabular form row where the error occurred.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2236"></a>Example</p>
<p>This example illustrates how to add a custom error message for a tabular form, where the column <code>CUSTOMER_ID</code> is highlighted, to the error stack. The error message is displayed inline in a notification. This example can be used in a validation or process.</p>
<pre>apex_error.add_error (
    p_message          =&gt; &#39;Invalid Customer ID!&#39;,
    p_display_location =&gt; apex_error.c_inline_with_field_and_notif,
    p_region_id        =&gt; l_region_id,
    p_column_alias     =&gt; &#39;CUSTOMER_ID&#39;,
    p_row_num          =&gt; l_row_num );
</pre>
<div class="refentry"><a id="CABDEDDE"></a>
<div id="AEAPI2237" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref241"></a>ADD_ERROR Procedure Signature 5</h2>
<p>This procedure adds an error message to the error stack of a tabular form that is used to display text as defined by a shared component. This error message can be displayed to all display locations. It can be called in a validation or process to add one or more errors to the error stack.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure must be called before the Application Express application has performed the last validation or process. Otherwise, the error is ignored if it does not have a display location of <code>apex_error.c_on_error_page</code>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<p class="subhead2"><a id="AEAPI2238"></a>Syntax</p>
<pre>APEX_ERROR.ADD_ERROR (
    p_error_code          in varchar2,
    p0                    in varchar2 default null,
    p1                    in varchar2 default null,
    p2                    in varchar2 default null,
    p3                    in varchar2 default null,
    p4                    in varchar2 default null,
    p5                    in varchar2 default null,
    p6                    in varchar2 default null,
    p7                    in varchar2 default null,
    p8                    in varchar2 default null,
    p9                    in varchar2 default null,
    p_escape_placeholders in boolean  default true,
    p_additional_info     in varchar2 default null,
    p_display_location    in varchar2,
    p_region_id           in number,
    p_column_alias        in varchar2 default null,
    p_row_num             in number );
</pre>
<p class="subhead2"><a id="AEAPI2239"></a>Parameters</p>
<p><a href="#BGBFDHJG">Table 8-5</a> describes the parameters available in the ADD_ERROR Procedure Signature 5.</p>
<div id="AEAPI2240" class="tblformal">
<p class="titleintable"><a id="sthref242"></a><a id="BGBFDHJG"></a>Table 8-5 ADD_ERROR Procedure Signature 5 Parameters</p>
<table class="cellalignment3315" title="ADD_ERROR Procedure Signature 5 Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t11">Parameters</th>
<th class="cellalignment3316" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t11" headers="r1c1-t11">
<p><code>p_error_code</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t11 r1c2-t11">
<p>Name of shared component text message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t11" headers="r1c1-t11">
<p><code>p0</code> through <code>p9</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t11 r1c2-t11">
<p>Values for %0 through %9 placeholders defined in the text message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t11" headers="r1c1-t11">
<p><code>p_escape_placeholders</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t11 r1c2-t11">
<p>If set to <code>TRUE</code>, the values provided in <code>p0</code> through <code>p9</code> are escaped with <code>sys.htf.escape_sc</code> before replacing the placeholder in the text message. If set to <code>FALSE</code>, values are not escaped.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t11" headers="r1c1-t11">
<p><code>p_additional_info</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t11 r1c2-t11">
<p>Additional error information needed if the error is displayed on the error page.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t11" headers="r1c1-t11">
<p><code>p_display_location</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t11 r1c2-t11">
<p>Specifies where the error message is displayed. Use the constants defined for <code>p_display_location</code>. See <a href="#BGBDJHFH">&#34;Constants used for Result Types&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t11" headers="r1c1-t11">
<p><code>p_region_id</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t11 r1c2-t11">
<p>The ID of the tabular form region on the current page. The ID can be read from the view <code>APEX_APPLICATION_PAGE_REGIONS</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t11" headers="r1c1-t11">
<p><code>p_column_alias</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t11 r1c2-t11">
<p>The name of the tabular form column alias defined for <code>p_region_id</code> that is highlighted if <code>apex_error.c_inline_with_field</code> or <code>apex_error.c_inline_with_field_and_notif</code> are used as a display location.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t11" headers="r1c1-t11">
<p><code>p_row_num</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t11 r1c2-t11">
<p>Number of the tabular form row where the error occurred.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2241"></a>Example</p>
<p>This example illustrates how to add a custom error message, where the text is stored in a text message, to the error stack. The <code>CUSTOMER_ID</code> column on the tabular form is highlighted. The error message is displayed inline in a notification. This example can be used in a validation or process.</p>
<pre>apex_error.add_error (
    p_error_code       =&gt; &#39;INVALID_CUSTOMER_ID&#39;,
    p0                 =&gt; l_customer_id,
    p_display_location =&gt; apex_error.c_inline_with_field_and_notif,
    p_region_id        =&gt; l_region_id,
    p_column_alias     =&gt; &#39;CUSTOMER_ID&#39;,
    p_row_num          =&gt; l_row_num );
</pre>
<div class="refentry"><a id="CABBEGDE"></a>
<div id="AEAPI2242" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref243"></a>AUTO_SET_ASSOCIATED_ITEM Procedure</h2>
<p>This procedure automatically sets the associated page item or tabular form column based on a constraint contained in <code>p_error.ora_sqlerrm</code>.This procedure performs the following:</p>
<ul>
<li>
<p>Identifies the constraint by searching for the <code>schema.constraint</code> pattern.</p>
</li>
<li>
<p>Only supports constraints of type P, U, R and C.</p>
</li>
<li>
<p>For constraints of type C (check constraints), the procedure parses the expression to identify those columns that are used in the constraints expression.</p>
</li>
<li>
<p>Using those columns, the procedure gets the first visible page item or tabular form column that is based on that column and set it as associated <code>p_error_result.page_item_name</code> or <code>p_error_result.column_alias</code>.</p>
</li>
<li>
<p>If a page item or tabular form column was found, <code>p_error_result.display_location</code> is set to <code>apex_error.c_inline_with_field_and_notif</code>.</p>
</li>
</ul>
<p class="subhead2"><a id="AEAPI2243"></a>Syntax</p>
<pre>APEX_ERROR.AUTO_SET_ASSOCIATED_ITEM (
    p_error_result in out nocopy t_error_result,
    p_error        in            t_error );
</pre>
<p class="subhead2"><a id="AEAPI2244"></a>Parameters</p>
<p><a href="#BGBCDGBD">Table 8-10</a> describes the parameters available in the AUTO_SET_ASSOCIATED_ITEM procedure.</p>
<div id="AEAPI2245" class="tblformal">
<p class="titleintable"><a id="sthref244"></a><a id="sthref245"></a>Table 8-6 AUTO_SET_ASSOCIATED_ITEM Procedure Parameters</p>
<table class="cellalignment3315" title="AUTO_SET_ASSOCIATED_ITEM Procedure Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t12">Parameters</th>
<th class="cellalignment3316" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t12" headers="r1c1-t12">
<p><code>p_error_result</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t12 r1c2-t12">
<p>The result variable of your error handling function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t12" headers="r1c1-t12">
<p><code>p_error</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t12 r1c2-t12">
<p>The <code>p_error</code> parameter of your error handling function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2246"></a>Example</p>
<p>See an example of how to use this procedure in <a href="#CABDJBGJ">&#34;Example of an Error Handling Function&#34;</a>.</p>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CABGCGGB"></a>
<div id="AEAPI2247" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref246"></a>EXTRACT_CONSTRAINT_NAME Function</h2>
<p>This function extracts a constraint name contained in <code>p_error.ora_sqlerrm</code>. The constraint must match the pattern <code>schema.constrain</code>t.</p>
<p class="subhead2"><a id="AEAPI2248"></a>Syntax</p>
<pre>APEX_ERROR.EXTRACT_CONSTRAINT_NAME (
    p_error          in t_error,
    p_include_schema in boolean default false )
    return varchar2;
</pre>
<p class="subhead2"><a id="AEAPI2249"></a>Parameters</p>
<p><a href="#BGBHJEAI">Table 8-7</a> describes the parameters available in the EXTRACT_CONSTRAINT_NAME function.</p>
<div id="AEAPI2250" class="tblformal">
<p class="titleintable"><a id="sthref247"></a><a id="BGBHJEAI"></a>Table 8-7 EXTRACT_CONSTRAINT_NAME Function Parameters</p>
<table class="cellalignment3315" title="EXTRACT_CONSTRAINT_NAME Function Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t13">Parameters</th>
<th class="cellalignment3316" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t13" headers="r1c1-t13">
<p><code>p_error</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t13 r1c2-t13">
<p>The <code>p_error</code> parameter of your error handling function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t13" headers="r1c1-t13">
<p><code>p_include_schema</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t13 r1c2-t13">
<p>If set to <code>TRUE</code>, the result is prefixed with the schema name. For example, <code>HR.DEMO_PRODUCT_INFO_PK</code>. If set to <code>FALSE</code>, only the constraint name is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2251"></a>Example</p>
<p>See an example of how to use this procedure in <a href="#CABDJBGJ">&#34;Example of an Error Handling Function&#34;</a>.</p>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="BGBICGJI"></a>
<div id="AEAPI2252" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref248"></a>GET_ARIA_ERROR_ATTRIBUTES Function</h2>
<p>This function is useful for item plug-in developers, to enhance screen reader usability of your item, specifically when that item is associated with an error on a page. This function is called as part of rendering of the item, where the main form element(s) are output. The returned WAI-ARIA attributes include:</p>
<ul>
<li>
<p><code>aria-invalid=&#34;true&#34;</code> - Indicates the page item&#39;s current value is invalid. When the user is focused on the page item, the screen reader announces &#39;Invalid Entry&#39; .</p>
</li>
<li>
<p><code>aria-describedby=&#34;[page_item_name]_error&#34;</code> - This attribute value matches up with the ID of a <code>&lt;div&gt;</code> tag containing the item&#39;s associated error message, enabling a screen reader to announce the actual error, when the user is focused on the page item.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Because these attributes only enhance screen reader usability, attributes are returned only if the current session is running in Screen Reader mode.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<p class="subhead2"><a id="AEAPI2253"></a>Syntax</p>
<pre>function get_aria_error_attributes (
    p_item_name     in varchar2 )
    return varchar2;
</pre>
<p class="subhead2"><a id="AEAPI2254"></a>Parameters</p>
<p><a href="#BGBCBEHH">Table 8-9</a> describes the parameters available in the <code>GET_ARIA_ERROR_ATTRIBUTES</code> function.</p>
<div id="AEAPI2255" class="tblformal">
<p class="titleintable"><a id="sthref249"></a><a id="sthref250"></a>Table 8-8 GET_ARIA_ERROR_ATTRIBUTES Function Parameters</p>
<table class="cellalignment3315" title="GET_ARIA_ERROR_ATTRIBUTES Function Parameters" summary="Describes parameters for this API." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t15">Parameter</th>
<th class="cellalignment3316" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t15" headers="r1c1-t15">
<p><code>p_item_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t15 r1c2-t15">
<p>The page item name. This value is available by using the name attribute of the <code>apex_plugin.t_page_item</code> record type, which is passed in as the 1st parameter to all item plug-in&#39;s Render Function Callback.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2256"></a>Example</p>
<p>This example shows how this function can be used, in rendering a SELECT element, during processing of the Render Function callback for an item plug-in. This function returns additional attributes, if the page item has errors associated with it and if the user is running in Screen Reader mode.</p>
<pre>...
        l_name := apex_plugin.get_input_name_for_page_item(false);
        sys.htp.prn(&#39;&lt;select name=&#34;&#39;&#34; id=&#34;&#39;||p_item.name||&#39;&#34; &#39;||
                    apex_error.get_aria_error_attributes(p_item.name)||&#39;&gt;&#39;); 
...
</pre>
<div class="refentry"><a id="CABIICCI"></a>
<div id="AEAPI2257" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref251"></a>GET_FIRST_ORA_ERROR_TEXT Function</h2>
<p>This function returns the first ORA error message text stored in <code>p_error.ora_sqlerrm</code>. If <code>p_error_ora_sqlerrm</code> does not contain a value, <code>NULL</code> is returned.</p>
<p class="subhead2"><a id="AEAPI2258"></a>Syntax</p>
<pre>APEX_ERROR.GET_FIRST_ORA_ERROR_TEXT (
    p_error            in t_error,
    p_include_error_no in boolean default false )
    return varchar2;
</pre>
<p class="subhead2"><a id="AEAPI2259"></a>Parameters</p>
<p><a href="#BGBCBEHH">Table 8-9</a> describes the parameters available in the GET_FIRST_ORA_TEXT function.</p>
<div id="AEAPI2260" class="tblformal">
<p class="titleintable"><a id="sthref252"></a><a id="BGBCBEHH"></a>Table 8-9 GET_FIRST_ORA_TEXT Function Parameters</p>
<table class="cellalignment3315" title="GET_FIRST_ORA_TEXT Function Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t16">Parameters</th>
<th class="cellalignment3316" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t16" headers="r1c1-t16">
<p><code>p_error</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t16 r1c2-t16">
<p>The <code>p_error</code> parameter of your error handling function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t16" headers="r1c1-t16">
<p><code>p_include_error_no</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t16 r1c2-t16">
<p>If set to <code>TRUE</code>, ORA-xxxx is included in the returned error message. If set to <code>FALSE</code>, only the error message text is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2261"></a>Example</p>
<p>See an example of how to use this procedure in <a href="#CABDJBGJ">&#34;Example of an Error Handling Function&#34;</a>.</p>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CABHCFBF"></a>
<div id="AEAPI2262" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref253"></a>INIT_ERROR_RESULT Function</h2>
<p>This function returns the t_error_result type initialized with the values stored in <code>p_error</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This function must be used to ensure initialization is compatible with future changes to <code>t_error_result</code>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<p class="subhead2"><a id="AEAPI2263"></a>Syntax</p>
<pre>APEX_ERROR.INIT_ERROR_RESULT (
    p_error  in t_error)
    return   t_error_result;
</pre>
<p class="subhead2"><a id="AEAPI2264"></a>Parameters</p>
<p><a href="#BGBCDGBD">Table 8-10</a> describes the parameters available in the INIT_ERROR_RESULT function.</p>
<div id="AEAPI2265" class="tblformal">
<p class="titleintable"><a id="sthref254"></a><a id="BGBCDGBD"></a>Table 8-10 INT_ERROR_RESULT Function Parameters</p>
<table class="cellalignment3315" title="INT_ERROR_RESULT Function Parameters" summary="Describes parameter." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t18">Parameters</th>
<th class="cellalignment3316" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t18" headers="r1c1-t18">
<p><code>p_error</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t18 r1c2-t18">
<p>The <code>p_error</code> parameter of your error handling function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2266"></a>Example</p>
<p>See an example of how to use this function in <a href="#CABDJBGJ">&#34;Example of an Error Handling Function&#34;</a>.</p>
</div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3308">
<tr>
<td class="cellalignment3317">
<table class="cellalignment3313">
<tr>
<td class="cellalignment3312"><a href="apex_debug.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3312"><a href="apex_escape.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3319">
<table class="cellalignment3311">
<tr>
<td class="cellalignment3312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>