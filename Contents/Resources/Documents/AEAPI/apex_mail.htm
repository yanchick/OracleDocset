<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1802"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/APEX_MAIL"></a><title>APEX_MAIL</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-05-22T14:53:20Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express API Reference"/>
<meta name="dcterms.identifier" content="E17963-07"/>
<meta name="dcterms.isVersionOf" content="AEAPI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="apex_ldap.htm" title="Previous" type="text/html"/>
<link rel="Next" href="apex_plsql_job.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17963-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">20/28</span> <!-- End Header -->
<div id="AEAPI341" class="chapter"><a id="CIHDIEJI"></a>
<h1 class="chapter"><span class="secnum">16</span> APEX_MAIL</h1>
<p>You can use the <a id="sthref478"></a><a id="sthref479"></a><code>APEX_MAIL</code> package to send an email from an Oracle Application Express application. This package is built on top of the Oracle supplied <code>UTL_SMTP</code> package. Because of this dependence, the <code>UTL_SMTP</code> package must be installed and functioning to use APEX_MAIL.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS074" href="../ARPLS/u_smtp.htm#ARPLS074"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the UTL_SMTP package</div>
</div>
<!-- class="chapter" -->
<p><code>APEX_MAIL</code> contains three procedures. Use <code>APEX_MAIL.SEND</code> to send an outbound email message from your application. Use <code>APEX_MAIL.PUSH_QUEUE</code> to deliver mail messages stored in <code>APEX_MAIL_QUEUE</code>. Use <code>APEX_MAIL.ADD_ATTACHMENT</code> to send an outbound email message from your application as an attachment.</p>
<p class="subhead2"><a id="AEAPI2278"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABHDEAF">About Configuring Oracle Application Express to Send Email</a></p>
</li>
<li>
<p><a href="#CHDHCEGF">ADD_ATTACHMENT Procedure</a></p>
</li>
<li>
<p><a href="#BABIJAAD">GET_IMAGES_URL Function</a></p>
</li>
<li>
<p><a href="#BABJJBBE">GET_INSTANCE_URL Function</a></p>
</li>
<li>
<p><a href="#CHDJGGHG">PUSH_QUEUE Procedure</a></p>
</li>
<li>
<p><a href="#CHDDAAJE">SEND Procedure</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The most efficient approach to sending email is to create a background job (using the DBMS_JOB or DBMS_SCHEDULER package) to periodically send all mail messages stored in the active mail queue. To call the APEX_MAIL package from outside the context of an Application Express application, you must call <code>apex_util.set_security_group_id</code> as in the following example:
<pre>for c1 in (
   select workspace_id
     from apex_applications
    where application_id = p_app_id )
loop
   apex_util.set_security_group_id(p_security_group_id =&gt;
c1.workspace_id);
end loop;
</pre></div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
&#34;<a class="olink HTMDB13006" href="../HTMDB/aadm_email.htm#HTMDB13006">Sending Email from an Application&#34;</a> in <a class="olink HTMDB" href="../HTMDB/toc.htm"><span class="italic">Oracle Application Express Application Builder User&#39;s Guide</span></a></div>
<div class="refentry"><a id="BABHDEAF"></a>
<div id="AEAPI1190" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">About Configuring Oracle Application Express to Send Email</h2>
<p>Before you can send email from an Application Builder application, you must:</p>
<ol>
<li>
<p>Log in to Oracle Application Express Administration Services and configure the email settings on the Instance Settings page. See in Oracle Application Express Administration Guide.</p>
</li>
<li>
<p>If you are running Oracle Application Express with Oracle Database 11<span class="italic">g</span> release 1 (11.1), you must enable outbound mail. In Oracle Database 11<span class="italic">g</span> release 1 (11.1), the ability to interact with network services is disabled by default. See <a class="olink HTMDB12006" href="../HTMDB/sec_admin_ssl.htm#HTMDB12006">&#34;Enabling Network Services in Oracle Database 11g&#34;</a> in <span class="italic">Oracle Application Express Application Builder User&#39;s Guide</span>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
You can configure Oracle Application Express to automatically email users their login credentials when a new workspace request has been approved. To learn more, see &#34;Specifying a Provisioning Mode&#34;in <a class="olink AEADM241" href="../AEADM/adm_create_wkspc.htm#AEADM241"><span class="italic">Oracle Application Express Administration Guide</span></a>.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<a id="CHDHCEGF"></a>
<div id="AEAPI343" class="refsect1">
<h2 class="refsect1">ADD_ATTACHMENT <a id="sthref480"></a><a id="sthref481"></a><a id="sthref482"></a>Procedure</h2>
<p>This procedure sends an outbound email message from an application as an attachment. To add multiple attachments to a single email, <code>APEX_MAIL.ADD_ATTACHMENT</code> can be called repeatedly for a single email message.</p>
<p class="subhead2"><a id="AEAPI1191"></a>Syntax</p>
<pre>APEX_MAIL.ADD_ATTACHMENT(
    p_mail_id                   IN    NUMBER,
    p_attachment                IN    BLOB,
    p_filename                  IN    VARCHAR2,
    p_mime_type                 IN    VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI1192"></a>Parameters</p>
<p><a href="#CHDCHEEH">Table 16-1</a> describes the parameters available in the <code>ADD_ATTACHMENT</code> procedure.</p>
<div id="AEAPI1193" class="tblformal">
<p class="titleintable"><a id="sthref483"></a><a id="CHDCHEEH"></a>Table 16-1 ADD_ATTACHMENT Parameters</p>
<table class="cellalignment3315" title="ADD_ATTACHMENT Parameters" summary="This table describes the parameters available in ADD_ATTACHMENT." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t6">Parameter</th>
<th class="cellalignment3316" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t6" headers="r1c1-t6">
<p><code>p_mail_id</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t6 r1c2-t6">
<p>The numeric ID associated with the email. This is the numeric identifier returned from the call to <code>APEX_MAIL.SEND</code> to compose the email body.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t6" headers="r1c1-t6">
<p><code>p_attachment</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t6 r1c2-t6">
<p>A <code>BLOB</code> variable containing the binary content to be attached to the email message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t6" headers="r1c1-t6">
<p><code>p_filename</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t6 r1c2-t6">
<p>The filename associated with the email attachment.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t6" headers="r1c1-t6">
<p><code>p_mime_type</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t6 r1c2-t6">
<p>A valid MIME type (or Internet media type) to associate with the email attachment.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1194"></a>Examples</p>
<p>The following example demonstrates how to access files stored in <code>APEX_APPLICATION_FILES</code> and add them to an outbound email message</p>
<pre>DECLARE
    l_id NUMBER;
BEGIN
    l_id := APEX_MAIL.SEND(
        p_to        =&gt; &#39;fred@flintstone.com&#39;,
        p_from      =&gt; &#39;barney@rubble.com&#39;,
        p_subj      =&gt; &#39;APEX_MAIL with attachment&#39;,
        p_body      =&gt; &#39;Please review the attachment.&#39;,
        p_body_html =&gt; &#39;&lt;b&gt;Please&lt;/b&gt; review the attachment&#39;);
    FOR c1 IN (SELECT filename, blob_content, mime_type 
        FROM APEX_APPLICATION_FILES
        WHERE ID IN (123,456)) LOOP

        APEX_MAIL.ADD_ATTACHMENT(
            p_mail_id    =&gt; l_id,
            p_attachment =&gt; c1.blob_content,
            p_filename   =&gt; c1.filename,
            p_mime_type  =&gt; c1.mime_type);
        END LOOP;
    COMMIT;
END;
/
</pre></div>
<!-- class="refsect1" -->
<a id="BABIJAAD"></a>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_IMAGES_URL Function</h2>
<p>Use this function to get the image prefixed URL, if the email includes Application Express instance images.</p>
<p class="subhead2"><a id="sthref484"></a>Syntax</p>
<pre>APEX_MAIL.GET_IMAGES_URL return VARCHAR2;
</pre>
<p class="subhead2"><a id="sthref485"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="sthref486"></a>Example</p>
<p>The following example sends an Order Confirmation email which includes the Oracle Logo image.</p>
<pre>declare
    l_body      clob;
    l_body_html clob;
begin
    l_body := &#39;To view the content of this message, please use an HTML enabled mail client.&#39; || utl_tcp.crlf;
 
    l_body_html := &#39;&lt;html&gt;&lt;body&gt;&#39; || utl_tcp.crlf ||
                   &#39;&lt;p&gt;Please confirm your order on the &lt;a href=&#34;&#39; ||
                   apex_mail.get_instance_url || &#39;f?p=100:10&#34;&gt;Order Confirmation&lt;/a&gt; page.&lt;/p&gt;&#39; || utl_tcp.crlf ||
                   &#39;&lt;p&gt;Sincerely,&lt;br /&gt;&#39; || utl_tcp.crlf ||
                   &#39;The Application Express Dev Team&lt;br /&gt;&#39; || utl_tcp.crlf ||
                   &#39;&lt;img src=&#34;&#39; || apex_mail.get_images_url || &#39;oracle.gif&#34; alt=&#34;Oracle Logo&#34;&gt;&lt;/p&gt;&#39; || utl_tcp.crlf ||
                   &#39;&lt;/body&gt;&lt;/html&gt;&#39;; 
    apex_mail.send (
        p_to        =&gt; &#39;some_user@somewhere.com&#39;,   -- change to your email address
        p_from      =&gt; &#39;some_sender@somewhere.com&#39;, -- change to a real senders email address
        p_body      =&gt; l_body,
        p_body_html =&gt; l_body_html,
        p_subj      =&gt; &#39;Order Confirmation&#39; );
end;
</pre></div>
<!-- class="refsect1" -->
<a id="BABJJBBE"></a>
<div id="AEAPI29399" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_INSTANCE_URL Function</h2>
<p>If an email includes a link to an Application Express instance, use this function to get the instance URL.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This function requires that the instance setting <code>Application Express Instance URL</code> for emails is set.</div>
</div>
<!-- class="refsect1" -->
<p class="subhead2"><a id="AEAPI29400"></a>Syntax</p>
<pre>APEX_MAIL.GET_IMAGES_URL return VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI29401"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI29402"></a>Example</p>
<p>The following example sends an Order Confirmation email which includes an absolute URL to page 10 of application 100.</p>
<pre>declare
    l_body      clob;
    l_body_html clob;
begin
    l_body := &#39;To view the content of this message, please use an HTML enabled mail client.&#39; || utl_tcp.crlf;
 
    l_body_html := &#39;&lt;html&gt;&lt;body&gt;&#39; || utl_tcp.crlf ||
                   &#39;&lt;p&gt;Please confirm your order on the &lt;a href=&#34;&#39; ||
                   apex_mail.get_instance_url || &#39;f?p=100:10&#34;&gt;Order Confirmation&lt;/a&gt; page.&lt;/p&gt;&#39; || utl_tcp.crlf ||
                   &#39;&lt;/body&gt;&lt;/html&gt;&#39;; 
    apex_mail.send (
        p_to        =&gt; &#39;some_user@somewhere.com&#39;,   -- change to your email address
        p_from      =&gt; &#39;some_sender@somewhere.com&#39;, -- change to a real senders email address
        p_body      =&gt; l_body,
        p_body_html =&gt; l_body_html,
        p_subj      =&gt; &#39;Order Confirmation&#39; );
end;
</pre>
<a id="CHDJGGHG"></a>
<div id="AEAPI344" class="refsect1">
<h2 class="refsect1">PUSH_QUEUE <a id="sthref487"></a><a id="sthref488"></a><a id="sthref489"></a><a id="sthref490"></a>Procedure</h2>
<p>Oracle Application Express stores unsent email messages in a table named <code>APEX_MAIL_QUEUE</code>. You can manually deliver mail messages stored in this queue to the specified SMTP gateway by invoking the <code>APEX_MAIL.PUSH_QUEUE</code> procedure.</p>
<p>Oracle Application Express logs successfully submitted message in the table <code>APEX_MAIL_LOG</code> with the timestamp reflecting your server&#39;s local time. Keep in mind, the most efficient approach to sending email is to create a background job (using a <code>DBMS_JOB</code> package) to periodically send all mail messages stored in the active mail queue.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB13006" href="../HTMDB/aadm_email.htm#HTMDB13006">&#34;Sending an Email from an Application&#34;</a> in <a class="olink HTMDB13006" href="../HTMDB/aadm_email.htm#HTMDB13006"><span class="italic">Oracle Application Express Application Builder User&#39;s Guide</span></a></div>
</div>
<!-- class="refsect1" -->
<p class="subhead2"><a id="AEAPI1195"></a>Syntax</p>
<pre>APEX_MAIL.PUSH_QUEUE(
    p_smtp_hostname             IN    VARCHAR2 DEFAULT NULL,
    p_smtp_portno               IN    NUMBER   DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI1196"></a>Parameters</p>
<p><a href="#CHDFCBBJ">Table 16-2</a> describes the parameters available in the <code>PUSH_QUEUE</code> procedure.</p>
<div id="AEAPI1197" class="tblformal">
<p class="titleintable"><a id="sthref491"></a><a id="CHDFCBBJ"></a>Table 16-2 PUSH_QUEUE Parameters</p>
<table class="cellalignment3315" title="PUSH_QUEUE Parameters" summary="This table describes the parameters available in PUSH_QUEUE." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t9">Parameters</th>
<th class="cellalignment3316" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t9" headers="r1c1-t9">
<p><code>p_smtp_hostname</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t9 r1c2-t9">
<p>SMTP gateway host name</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t9" headers="r1c1-t9">
<p><code>p_smtp_portno</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t9 r1c2-t9">
<p>SMTP gateway port number</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p>Note that these parameter values are provided for backward compatibility, but their respective values are ignored. The SMTP gateway hostname and SMTP gateway port number are exclusively derived from values entered on the Manage Environment Settings when sending email.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink AEADM210" href="../AEADM/adm_mg_service_set.htm#AEADM210">&#34;Configuring Email Settings&#34;</a> in <a class="olink AEADM" href="../AEADM/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a></div>
<p class="subhead2"><a id="AEAPI1198"></a>Example</p>
<p>The following example demonstrates the use of the <code>APEX_MAIL.PUSH_QUEUE</code> procedure using a shell script. This example only applies to UNIX/LINUX installations.</p>
<pre>SQLPLUS / &lt;&lt;EOF
APEX_MAIL.PUSH_QUEUE;
DISCONNECT
EXIT
EOF
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB13006" href="../HTMDB/aadm_email.htm#HTMDB13006">&#34;Sending Email from an Application&#34;</a> in <a class="olink HTMDB" href="../HTMDB/toc.htm"><span class="italic">Oracle Application Express Application Builder User&#39;s Guide</span></a></div>
<a id="CHDDAAJE"></a>
<div id="AEAPI342" class="refsect1">
<h2 class="refsect1">SEND <a id="sthref492"></a><a id="sthref493"></a><a id="sthref494"></a>Procedure</h2>
<p>This procedure sends an outbound email message from an application. Although you can use this procedure to pass in either a <code>VARCHAR2</code> or a <code>CLOB</code> to <code>p_body</code> and <code>p_body_html</code>, the data types must be the same. In other words, you cannot pass a <code>CLOB</code> to <code>P_BODY</code> and a <code>VARCHAR2</code> to <code>p_body_html</code>.</p>
<p>When using <code>APEX_MAIL.SEND</code>, remember the following:</p>
<ul>
<li>
<p><span class="bold">No single line may exceed 1000 characters.</span> The SMTP/MIME specification dictates that no single line shall exceed 1000 characters. To comply with this restriction, you must add a carriage return or line feed characters to break up your <code>p_body</code> or <code>p_body_html</code> parameters into chunks of 1000 characters or less. Failing to do so results in erroneous email messages, including partial messages or messages with extraneous exclamation points.</p>
</li>
<li>
<p><span class="bold">Plain text and HTML email content.</span> Passing a value to <code>p_body,</code> but not <code>p_body_html</code> results in a plain text message. Passing a value to <code>p_body</code> and <code>p_body_html</code> yields a multi-part message that includes both plain text and HTML content. The settings and capabilities of the recipient&#39;s email client determine what displays. Although most modern email clients can read an HTML formatted email, remember that some users disable this functionality to address security issues.</p>
</li>
<li>
<p><span class="bold">Avoid images.</span> When referencing images in <code>p_body_html</code> using the <code>&lt;img /&gt;</code> tag, remember that the images must be accessible to the recipient&#39;s email client in order for them to see the image.</p>
<p>For example, suppose you reference an image on your network called <code>hello.gif</code> as follows:</p>
<pre>&lt;img src=&#34;http://someserver.com/hello.gif&#34; alt=&#34;Hello&#34; /&gt;]
</pre>
<p>In this example, the image is not attached to the email, but is referenced by the email. For the recipient to see it, they must be able to access the image using a web browser. If the image is inside a firewall and the recipient is outside of the firewall, the image is not displayed. For this reason, avoid using images. If you must include images, be sure to include the ALT attribute to provide a textual description in the event the image is not accessible.</p>
</li>
</ul>
<p class="subhead2"><a id="AEAPI1199"></a>Syntax</p>
<pre>APEX_MAIL.SEND(
    p_to                        IN    VARCHAR2,
    p_from                      IN    VARCHAR2,
    p_body                      IN  [ VARCHAR2 | CLOB ],
    p_body_html                 IN  [ VARCHAR2 | CLOB ] DEFAULT NULL,
    p_subj                      IN    VARCHAR2 DEFAULT NULL,
    p_cc                        IN    VARCHAR2 DEFAULT NULL,
    p_bcc                       IN    VARCHAR2 DEFAULT NULL,
    p_replyto                   IN    VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI1200"></a>Parameters</p>
<p><a href="#CHDIIAFI">Table 16-3</a> describes the parameters available in the <code>SEND</code> procedure.</p>
<div id="AEAPI1201" class="tblformal">
<p class="titleintable"><a id="sthref495"></a><a id="CHDIIAFI"></a>Table 16-3 SEND Parameters</p>
<table class="cellalignment3315" title="SEND Parameters" summary="This table describes the parameters available in SEND." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t12">Parameter</th>
<th class="cellalignment3316" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t12" headers="r1c1-t12">
<p><code>p_to</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t12 r1c2-t12">
<p>Valid email address to which the email is sent (required). For multiple email addresses, use a comma-separated list</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t12" headers="r1c1-t12">
<p><code>p_from</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t12 r1c2-t12">
<p>Email address from which the email is sent (required). This email address must be a valid address. Otherwise, the message is not sent</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t12" headers="r1c1-t12">
<p><code>p_body</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t12 r1c2-t12">
<p>Body of the email in plain text, not HTML (required). If a value is passed to <code>p_body_html</code>, then this is the only text the recipient sees. If a value is not passed to <code>p_body_html</code>, then this text only displays for email clients that do not support HTML or have HTML disabled. A carriage return or line feed (CRLF) must be included every 1000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t12" headers="r1c1-t12">
<p><code>p_body_html</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t12 r1c2-t12">
<p>Body of the email in HTML format. This must be a full HTML document including the <code>&lt;html&gt;</code> and <code>&lt;body&gt;</code> tags. A single line cannot exceed 1000 characters without a carriage return or line feed (CRLF)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t12" headers="r1c1-t12">
<p><code>p_subj</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t12 r1c2-t12">
<p>Subject of the email</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t12" headers="r1c1-t12">
<p><code>p_cc</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t12 r1c2-t12">
<p>Valid email addresses to which the email is copied. For multiple email addresses, use a comma-separated list</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t12" headers="r1c1-t12">
<p><code>p_bcc</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t12 r1c2-t12">
<p>Valid email addresses to which the email is blind copied. For multiple email addresses, use a comma-separated list</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t12" headers="r1c1-t12">
<p><code>p_replyto</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t12 r1c2-t12">
<p>Address of the Reply-To mail header. You can use this parameter as follows:</p>
<ul>
<li>
<p>If you omit the <code>p_replyto</code> parameter, the Reply-To mail header is set to the value specified in the <code>p_from</code> parameter</p>
</li>
<li>
<p>If you include the <code>p_replyto</code> parameter, but provide a <code>NULL</code> value, the Reply-To mail header is set to NULL. This results in the suppression of automatic email replies</p>
</li>
<li>
<p>If you include <code>p_replyto</code> parameter, but provide a non-null value (for example, a valid email address), you send these messages, but the automatic replies go to the value specified (for example, the email address)</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1202"></a>Examples</p>
<p>The following example demonstrates how to use <code>APEX_MAIL.SEND</code> to send a plain text email message from an application.</p>
<pre>-- Example One: Plain Text only message
DECLARE
    l_body      CLOB;
BEGIN
    l_body := &#39;Thank you for your interest in the APEX_MAIL 
package.&#39;||utl_tcp.crlf||utl_tcp.crlf;
    l_body := l_body ||&#39;  Sincerely,&#39;||utl_tcp.crlf;
    l_body := l_body ||&#39;  The Application Express Dev Team&#39;||utl_tcp.crlf;
    apex_mail.send(
        p_to       =&gt; &#39;some_user@somewhere.com&#39;,   -- change to your email address
        p_from     =&gt; &#39;some_sender@somewhere.com&#39;, -- change to a real senders email address
        p_body     =&gt; l_body,
        p_subj     =&gt; &#39;APEX_MAIL Package - Plain Text message&#39;);
END;
/
</pre>
<p>The following example demonstrates how to use <code>APEX_MAIL.SEND</code> to send an HTML email message from an application. Remember, you must include a carriage return or line feed (CRLF) every 1000 characters. The example that follows uses <code>utl_tcp.crlf</code>.</p>
<pre>-- Example Two: Plain Text / HTML message
DECLARE
    l_body      CLOB;
    l_body_html CLOB;
BEGIN
    l_body := &#39;To view the content of this message, please use an HTML enabled mail client.&#39;||utl_tcp.crlf;

    l_body_html := &#39;&lt;html&gt;
        &lt;head&gt;
            &lt;style type=&#34;text/css&#34;&gt;
                body{font-family: Arial, Helvetica, sans-serif;
                    font-size:10pt;
                    margin:30px;
                    background-color:#ffffff;}

                span.sig{font-style:italic;
                    font-weight:bold;
                    color:#811919;}
             &lt;/style&gt;
         &lt;/head&gt;
         &lt;body&gt;&#39;||utl_tcp.crlf;
    l_body_html := l_body_html ||&#39;&lt;p&gt;Thank you for your interest in the &lt;strong&gt;APEX_MAIL&lt;/strong&gt; package.&lt;/p&gt;&#39;||utl_tcp.crlf;
    l_body_html := l_body_html ||&#39;  Sincerely,&lt;br /&gt;&#39;||utl_tcp.crlf;
    l_body_html := l_body_html ||&#39;  &lt;span class=&#34;sig&#34;&gt;The Application Express Dev Team&lt;/span&gt;&lt;br /&gt;&#39;||utl_tcp.crlf;
    l_body_html := l_body_html ||&#39;&lt;/body&gt;&lt;/html&gt;&#39;; 
    apex_mail.send(
    p_to   =&gt; &#39;some_user@somewhere.com&#39;,   -- change to your email address
    p_from =&gt; &#39;some_sender@somewhere.com&#39;, -- change to a real senders email address
    p_body      =&gt; l_body,
    p_body_html =&gt; l_body_html,
    p_subj      =&gt; &#39;APEX_MAIL Package - HTML formatted message&#39;);
END;
/
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3308">
<tr>
<td class="cellalignment3317">
<table class="cellalignment3313">
<tr>
<td class="cellalignment3312"><a href="apex_ldap.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3312"><a href="apex_plsql_job.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3319">
<table class="cellalignment3311">
<tr>
<td class="cellalignment3312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>