<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1793"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/APEX_DEBUG"></a><title>APEX_DEBUG</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-05-22T14:53:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express API Reference"/>
<meta name="dcterms.identifier" content="E17963-07"/>
<meta name="dcterms.isVersionOf" content="AEAPI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="apex_auth.htm" title="Previous" type="text/html"/>
<link rel="Next" href="apex_error.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17963-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/28</span> <!-- End Header -->
<div id="AEAPI29182" class="chapter"><a id="BCGIGEFJ"></a>
<h1 class="chapter"><span class="secnum">7</span> APEX_DEBUG</h1>
<p>The <a id="sthref196"></a><a id="sthref197"></a><code>APEX_DEBUG</code> package provides utility functions for managing the debug message log. Specifically, this package provides the necessary APIs to instrument and debug PL/SQL code contained within your Application Express application as well as PL/SQL code in database stored procedures and functions. Instrumenting your PL/SQL code makes it much easier to track down bugs and isolate unexpected behavior more quickly.</p>
<p>The package also provides the means to enable and disable debugging at different debug levels and utility procedures to clean up the message log.</p>
<p>You can view the message log either as described in the <a class="olink HTMDB10003" href="../HTMDB/debug_mode.htm#HTMDB10003">&#34;Accessing Debugging Mode&#34;</a> section of the <span class="italic">Oracle Application Express Application Builder User&#39;s Guide</span> or by querying the <code>APEX_DEBUG_MESSAGES</code> view.</p>
<p>Please see the individual API descriptions for further information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In Oracle Application Express 4.2, the APEX_DEBUG_MESSAGE package was renamed to APEX_DEBUG. The APEX_DEBUG_MESSAGE package name is still supported to provide backward compatibility. As a best practice, however, use the new APEX_DEBUG package for new applications unless you plan to run them in an earlier version of Oracle Application Express.</div>
</div>
<!-- class="chapter" -->
<p class="subhead2"><a id="AEAPI29183"></a>Topics:</p>
<ul>
<li>
<p><a href="#BCGIEHDD">Constants</a></p>
</li>
<li>
<p><a href="#BCGBCBDI">DISABLE Procedure</a></p>
</li>
<li>
<p><a href="#BCGFFDEJ">ENABLE Procedure</a></p>
</li>
<li>
<p><a href="#BCGBIGIC">ENTER Procedure</a></p>
</li>
<li>
<p><a href="#BCGDIJGI">ERROR Procedure</a></p>
</li>
<li>
<p><a href="#BCGIAEBC">INFO Procedure</a></p>
</li>
<li>
<p><a href="#BCGDICFE">LOG_DBMS_OUTPUT Procedure</a></p>
</li>
<li>
<p><a href="#BCGDAGHD">LOG_LONG_MESSAGE Procedure</a></p>
</li>
<li>
<p><a href="#BCGFBAHE">LOG_MESSAGE Procedure [Deprecated]</a></p>
</li>
<li>
<p><a href="#BCGJFJJE">LOG_PAGE_SESSION_STATE Procedure</a></p>
</li>
<li>
<p><a href="#BCGIFJIH">MESSAGE Procedure</a></p>
</li>
<li>
<p><a href="#BCGBEAEE">REMOVE_DEBUG_BY_AGE Procedure</a></p>
</li>
<li>
<p><a href="#BCGHJGBD">REMOVE_DEBUG_BY_APP Procedure</a></p>
</li>
<li>
<p><a href="#BCGCJEHB">REMOVE_DEBUG_BY_VIEW Procedure</a></p>
</li>
<li>
<p><a href="#BCGFFFBI">REMOVE_SESSION_MESSAGES Procedure</a></p>
</li>
<li>
<p><a href="#BCGGFDFB">TOCHAR Function</a></p>
</li>
<li>
<p><a href="#BCGFAJGE">TRACE Procedure</a></p>
</li>
<li>
<p><a href="#BCGEDFCJ">WARN Procedure</a></p>
</li>
</ul>
<div class="refentry"><a id="BCGIEHDD"></a>
<div id="AEAPI29184" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Consta<a id="sthref198"></a>nts</h2>
<p>The following constants are used by this package.</p>
<pre>subtype t_log_level is pls_integer; 
c_log_level_error constant t_log_level := 1; -- critical error 
c_log_level_warn constant t_log_level := 2; -- less critical error 
c_log_level_info constant t_log_level := 4; -- default level if debugging is enabled (for example, used by apex_application.debug) 
c_log_level_app_enter constant t_log_level := 5; -- application: messages when procedures/functions are entered 
c_log_level_app_trace constant t_log_level := 6; -- application: other messages within procedures/functions 
c_log_level_engine_enter constant t_log_level := 8; -- Application Express engine: messages when procedures/functions are entered 
c_log_level_engine_trace constant t_log_level := 9; -- Application Express engine: other messages within procedures/functions 
</pre></div>
<!-- class="refsect1" -->
<a id="BCGBCBDI"></a>
<div id="AEAPI29185" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DISABLE <a id="sthref199"></a>Procedure</h2>
<p>This procedure turns off debug messaging.</p>
<p class="subhead2"><a id="AEAPI29186"></a>Syntax</p>
<pre>APEX_DEBUG.DISABLE;
</pre>
<p class="subhead2"><a id="AEAPI29187"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI29188"></a>Example</p>
<p>This example shows how you can turn off debug messaging.</p>
<pre>BEGIN
    APEX_DEBUG.DISABLE();
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGFFDEJ">&#34;ENABLE Procedure&#34;</a></div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<a id="BCGFFDEJ"></a>
<div id="AEAPI29189" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ENABLE <a id="sthref200"></a>Procedure</h2>
<p>This procedure turns on debug messaging. You can specify, by level of importance, the types of debug messages that are monitored.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You only need to call <code>ENABLE</code> procedure once per page view or page accept.</div>
</div>
<!-- class="refsect1" -->
<p class="subhead2"><a id="AEAPI29190"></a>Syntax</p>
<pre>APEX_DEBUG.ENABLE (
    p_level    IN  T_LOG_LEVEL DEFAULT C_LOG_LEVEL_INFO );
</pre>
<p class="subhead2"><a id="AEAPI29191"></a>Parameters</p>
<p><a href="#BCGIIEDF">Table 7-1</a> describes the parameters available in the <code>APEX_DEBUG.ENABLE</code> procedure.</p>
<div id="AEAPI29192" class="tblformal">
<p class="titleintable"><a id="sthref201"></a><a id="BCGIIEDF"></a>Table 7-1 APEX_DEBUG.ENABLE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.ENABLE Procedure Parameters" summary="This table describes the parameters available in the ENABLE_DEBUG_MESSAGES procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t5">Parameter</th>
<th class="cellalignment3316" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t5" headers="r1c1-t5">
<p><code>p_level</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t5 r1c2-t5">
<p>Level or levels of messages to log. Must be an integer from 1 to 9, where level 1 is the most important messages and level 9 (the default) is the least important. Setting to a specific level logs messages both at that level and below that level. For example, setting <code>p_level</code> to 2 logs any message at level 1 and 2.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29193"></a>Example</p>
<p>This examples shows how to enable logging of messages for levels 1, 2 and 4. Messages at higher levels are not logged.</p>
<pre>BEGIN
    APEX_DEBUG.ENABLE(
        apex_debug.c_log_level_info);
END;
</pre>
<a id="BCGBIGIC"></a>
<div id="AEAPI29194" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ENTER <a id="sthref202"></a>Procedure</h2>
<p>This procedure logs messages at level <code>c_log_level_app_enter</code>. Use <code>APEX_DEBUG.ENTER()</code> to log the routine name and it&#39;s arguments at the beginning of a procedure or function.</p>
<p class="subhead2"><a id="AEAPI29195"></a>Syntax</p>
<pre>APEX_DEBUG.ENTER ( 
p_routine_name IN VARCHAR2, 
p_name01 IN VARCHAR2 DEFAULT NULL, 
p_value01 IN VARCHAR2 DEFAULT NULL, 
p_name02 IN VARCHAR2 DEFAULT NULL, 
p_value02 IN VARCHAR2 DEFAULT NULL, 
p_name03 IN VARCHAR2 DEFAULT NULL, 
p_value03 IN VARCHAR2 DEFAULT NULL, 
p_name04 IN VARCHAR2 DEFAULT NULL, 
p_value04 IN VARCHAR2 DEFAULT NULL, 
p_name05 IN VARCHAR2 DEFAULT NULL, 
p_value05 IN VARCHAR2 DEFAULT NULL, 
p_name06 IN VARCHAR2 DEFAULT NULL, 
p_value06 IN VARCHAR2 DEFAULT NULL, 
p_name07 IN VARCHAR2 DEFAULT NULL, 
p_value07 IN VARCHAR2 DEFAULT NULL, 
p_name08 IN VARCHAR2 DEFAULT NULL, 
p_value08 IN VARCHAR2 DEFAULT NULL, 
p_name09 IN VARCHAR2 DEFAULT NULL, 
p_value09 IN VARCHAR2 DEFAULT NULL, 
p_name10 IN VARCHAR2 DEFAULT NULL, 
p_value10 IN VARCHAR2 DEFAULT NULL, 
p_value_max_length IN PLS_INTEGER DEFAULT 1000 ); 
</pre>
<p class="subhead2"><a id="AEAPI29196"></a>Parameters</p>
<p><a href="#BCGFJCGA">Table 7-2</a> describes the parameters available for the <code>APEX_DEBUG.ENTER</code> procedure.</p>
<div id="AEAPI29197" class="tblformal">
<p class="titleintable"><a id="sthref203"></a><a id="BCGFJCGA"></a>Table 7-2 APEX_DEBUG.ENTER Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.ENTER Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t6">Parameter</th>
<th class="cellalignment3316" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t6" headers="r1c1-t6">
<p><code>p_routine_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t6 r1c2-t6">
<p>The name of the procedure or function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t6" headers="r1c1-t6">
<p><code>p_namexx</code>/<code>p_valuexx</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t6 r1c2-t6">
<p>The procedure or function parameter name and value.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t6" headers="r1c1-t6">
<p><code>p_value_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t6 r1c2-t6">
<p>The <code>p_valuexx</code> values is truncated to this length.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29198"></a>Example</p>
<p>This example shows how to use APEX_ENTER to add a debug message at the beginning of a procedure.</p>
<pre>procedure foo ( 
    p_widget_id in number, 
    p_additional_data in varchar2, 
    p_emp_rec in emp%rowtype ) 
is 
begin 
    apex_debug.enter(&#39;foo&#39;, 
        &#39;p_widget_id&#39; , p_widget_id, 
        &#39;p_additional_data&#39;, p_additional_data, 
        &#39;p_emp_rec.id&#39; , p_emp_rec.id ); 
....do something.... 
end foo; 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="BCGDIJGI"></a>
<div id="AEAPI29199" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ERROR <a id="sthref204"></a>Procedure</h2>
<p>This procedure logs messages at level <code>c_log_level_error</code>. This procedure always logs, even if debug mode is turned off.</p>
<p class="subhead2"><a id="AEAPI29200"></a>Syntax</p>
<pre>APEX_DEBUG.ERROR ( 
    p_message IN VARCHAR2, 
    p0 IN VARCHAR2 DEFAULT NULL, 
    p1 IN VARCHAR2 DEFAULT NULL, 
    p2 IN VARCHAR2 DEFAULT NULL, 
    p3 IN VARCHAR2 DEFAULT NULL, 
    p4 IN VARCHAR2 DEFAULT NULL, 
    p5 IN VARCHAR2 DEFAULT NULL, 
    p6 IN VARCHAR2 DEFAULT NULL, 
    p7 IN VARCHAR2 DEFAULT NULL, 
    p8 IN VARCHAR2 DEFAULT NULL, 
    p9 IN VARCHAR2 DEFAULT NULL, 
    p_max_length IN PLS_INTEGER DEFAULT 1000 ); 
</pre>
<p class="subhead2"><a id="AEAPI29201"></a>Parameters</p>
<p><a href="#BCGJFFCG">Table 7-3</a> describes parameters available for the <code>ERROR</code> procedure.</p>
<div id="AEAPI29202" class="tblformal">
<p class="titleintable"><a id="sthref205"></a><a id="BCGJFFCG"></a>Table 7-3 APEX_DEBUG.ERROR Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.ERROR Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t8">Parameter</th>
<th class="cellalignment3316" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t8" headers="r1c1-t8">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t8 r1c2-t8">
<p>The debug message. Occurrences of &#39;%s&#39; are replaced by <code>p0</code> to <code>p19</code>, as in <code>utl_lms.format_message</code> and C&#39;s sprintf. Occurrences of &#39;%%&#39; represent the special character &#39;%&#39;. Occurrences of &#39;%&lt;n&gt;&#39; are replaced by p&lt;n&gt;.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t8" headers="r1c1-t8">
<p><code>p0</code> through <code>p9</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t8 r1c2-t8">
<p>Substitution strings for &#39;%s&#39; placeholders.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t8" headers="r1c1-t8">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t8 r1c2-t8">
<p>The <code>p&lt;n&gt;</code> values are truncated to this length.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29203"></a>Example</p>
<p>This example shows how to use <code>APEX_ERROR</code> to log a critical error in the debug log.</p>
<pre>apex_debug.error(&#39;Critical error %s&#39;, sqlerrm);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="BCGIAEBC"></a>
<div id="AEAPI29204" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">INFO <a id="sthref206"></a>Procedure</h2>
<p>This procedure logs messages at level <code>c_log_level_info</code>. This procedure always logs, even if debug mode is turned off.</p>
<p class="subhead2"><a id="AEAPI29205"></a>Syntax</p>
<pre>APEX_DEBUG.INFO ( 
    p_message IN VARCHAR2, 
    p0 IN VARCHAR2 DEFAULT NULL, 
    p1 IN VARCHAR2 DEFAULT NULL, 
    p2 IN VARCHAR2 DEFAULT NULL, 
    p3 IN VARCHAR2 DEFAULT NULL, 
    p4 IN VARCHAR2 DEFAULT NULL, 
    p5 IN VARCHAR2 DEFAULT NULL, 
    p6 IN VARCHAR2 DEFAULT NULL, 
    p7 IN VARCHAR2 DEFAULT NULL, 
    p8 IN VARCHAR2 DEFAULT NULL, 
    p9 IN VARCHAR2 DEFAULT NULL, 
    p_max_length IN PLS_INTEGER DEFAULT 1000 ); 
</pre>
<p class="subhead2"><a id="AEAPI29206"></a>Parameters</p>
<p><a href="#BCGHDHBE">Table 7-4</a> describes parameters available for the <code>APEX_DEBUG.INFO</code> procedure.</p>
<div id="AEAPI29207" class="tblformal">
<p class="titleintable"><a id="sthref207"></a><a id="BCGHDHBE"></a>Table 7-4 APEX_DEBUG.INFO Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.INFO Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t10">Parameter</th>
<th class="cellalignment3316" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t10" headers="r1c1-t10">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t10 r1c2-t10">
<p>The debug message. Occurrences of &#39;%s&#39; are replaced by <code>p0</code> to <code>p19</code>, as in <code>utl_lms.format_message</code> and C&#39;s sprintf. Occurrences of &#39;%%&#39; represent the special character &#39;%&#39;. Occurrences of &#39;%&lt;n&gt;&#39; are replaced by p&lt;n&gt;.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t10" headers="r1c1-t10">
<p><code>p0</code> through <code>p9</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t10 r1c2-t10">
<p>Substitution strings for &#39;%s&#39; placeholders.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t10" headers="r1c1-t10">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t10 r1c2-t10">
<p>The <code>p&lt;n&gt;</code> values are truncated to this length.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29208"></a>Example</p>
<p>This example shows how to use <code>APEX_DEBUG.INFO</code> to log information in the debug log.</p>
<pre>apex_debug.info(&#39;Important: %s&#39;, &#39;fnord&#39;);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGBIGIC">&#34;ENTER Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="BCGDICFE"></a>
<div id="AEAPI29209" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref208"></a>LOG_DBMS_OUTPUT Procedure</h2>
<p>This procedure writes the contents of <code>dbms_output.get_lines</code> to the debug log. Messages of legacy applications which use <code>dbms_output</code> are copied into the debug log. In order to write to the debug log, <code>dbms_output.enable</code> must be performed.</p>
<p class="subhead2"><a id="AEAPI29210"></a>Syntax</p>
<pre>APEX_DEBUG.LOG_DBMS_OUTPUT;
</pre>
<p class="subhead2"><a id="AEAPI29211"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI29212"></a>Example</p>
<p>This example shows how to log the contents of the <code>DBMS_OUTPUT</code> buffer in the debug log.</p>
<pre>sys.dbms_output.enable;
sys.dbms_output.put_line(&#39;some data&#39;); 
sys.dbms_output.put_line(&#39;other data&#39;); 
apex_debug.log_dbms_output; 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="BCGDAGHD"></a>
<div id="AEAPI29213" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref209"></a>LOG_LONG_MESSAGE Procedure</h2>
<p>Use this procedure to emit debug messages from PLSQL components of Application Express, or PLSQL procedures and functions. This procedure is the same as LOG_MESSAGE, except it allows logging of much longer messages, which are subsequently split into 4,000 character chunks in the debugging output (because a single debug message is constrained to 4,000 characters).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Instead of this procedure, use <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a>, <a href="#BCGBIGIC">&#34;ENTER Procedure&#34;</a>, or <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<p class="subhead2"><a id="AEAPI29214"></a>Syntax</p>
<pre>APEX_DEBUG.LOG_LONG_MESSAGE (
    p_message    IN VARCHAR2  DEFAULT NULL,
    p_enabled    IN BOOLEAN   DEFAULT FALSE,
    p_level      IN T_LOG_LEVEL DEFAULT C_LOG_LEVEL_APP_TRACE);
</pre>
<p class="subhead2"><a id="AEAPI29215"></a>Parameters</p>
<p><a href="#BCGFIJAG">Table 7-5</a> describes parameters available for the <code>APEX_DEBUG.LOG_LONG_MESSAGE</code> procedure.</p>
<div id="AEAPI29216" class="tblformal">
<p class="titleintable"><a id="sthref210"></a><a id="BCGFIJAG"></a>Table 7-5 APEX_DEBUG.LOG_LONG_MESSAGE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.LOG_LONG_MESSAGE Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t14">Parameter</th>
<th class="cellalignment3316" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t14" headers="r1c1-t14">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t14 r1c2-t14">
<p>Log long message with maximum size of 32767 bytes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t14" headers="r1c1-t14">
<p><code>p_enabled</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t14 r1c2-t14">
<p>Set to <code>TRUE</code> to always log messages, irrespective of whether debugging is enabled. Set to <code>FALSE</code> to only log messages if debugging is enabled.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t14" headers="r1c1-t14">
<p>p_level</p>
</td>
<td class="cellalignment3317" headers="r4c1-t14 r1c2-t14">
<p>Identifies the level of the long log message. See <a href="#BCGIEHDD">&#34;Constants&#34;</a>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29217"></a>Example</p>
<p>This example shows how to enable debug message logging for 1 and 2 level messages and display a level 1 message that could contain anything up to 32767 characters. Note, the <code>p_enabled</code> parameter need not be specified, as debugging has been explicitly enabled and the default of false for this parameter respects this enabling.</p>
<pre>DECLARE
    l_msg VARCHAR2(32767) := &#39;Debug outputs anything up to varchar2 limit&#39;;
BEGIN
    APEX_DEBUG.ENABLE (p_level =&gt; 2);
    
    APEX_DEBUG.LOG_LONG_MESSAGE(
        p_message =&gt; l_msg,
        p_level =&gt; 1 );     
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
<a id="BCGFBAHE"></a>
<div id="AEAPI29218" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref211"></a>LOG_MESSAGE Procedure [Deprecated]</h2>
<p>This procedure logs a debug message.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Instead of this procedure, use <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a>, <a href="#BCGBIGIC">&#34;ENTER Procedure&#34;</a>, or <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<p class="subhead2"><a id="AEAPI29219"></a>Syntax</p>
<pre>APEX_DEBUG.LOG_MESSAGE ( 
    p_message IN VARCHAR2 DEFAULT NULL, 
    p_enabled IN BOOLEAN DEFAULT FALSE, 
    p_level IN T_LOG_LEVEL DEFAULT C_LOG_LEVEL_APP_TRACE );
</pre>
<p class="subhead2"><a id="AEAPI29220"></a>Parameters</p>
<p><a href="#BCGDHCGJ">Table 7-6</a> describes parameters available for the <code>APEX_DEBUG.LOG_MESSAGE</code> procedure.</p>
<div id="AEAPI29221" class="tblformal">
<p class="titleintable"><a id="sthref212"></a><a id="BCGDHCGJ"></a>Table 7-6 APEX_DEBUG.LOG_MESSAGE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.LOG_MESSAGE Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t17">Parameter</th>
<th class="cellalignment3316" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t17" headers="r1c1-t17">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t17 r1c2-t17">
<p>The debug message with a maximum length of 1000 bytes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t17" headers="r1c1-t17">
<p><code>p_enabled</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t17 r1c2-t17">
<p>Messages are logged when logging is enabled, setting a value of true enables logging.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t17" headers="r1c1-t17">
<p><code>p_level</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t17 r1c2-t17">
<p>Identifies the level of the log message where 1 is most important and 9 is least important. This is an integer value.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29222"></a>Example</p>
<p>This example shows how to enable debug message logging for 1 and 2 level messages and display a level 1 message showing a variable value. Note, the <code>p_enabled</code> parameter need not be specified, as debugging has been explicitly enabled and the default of false for this parameter respects this enabling.</p>
<pre>DECLARE
    l_value varchar2(100) := &#39;test value&#39;;
BEGIN
    APEX_DEBUG.ENABLE (p_level =&gt; 2);
 
APEX_DEBUG.LOG_MESSAGE(
    p_message =&gt; &#39;l_value = &#39; || l_value,
    p_level =&gt; 1 );
 
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
<a id="BCGJFJJE"></a>
<div id="AEAPI29223" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref213"></a>LOG_PAGE_SESSION_STATE Procedure</h2>
<p>This procedure logs the session&#39;s item values.</p>
<p class="subhead2"><a id="AEAPI29224"></a>Syntax</p>
<pre>APEX_DEBUG.LOG_PAGE_SESSION_STATE ( 
    p_page_id IN NUMBER DEFAULT NULL, 
    p_enabled IN BOOLEAN DEFAULT FALSE, 
    p_level IN T_LOG_LEVEL DEFAULT C_LOG_LEVEL_APP_TRACE ); 
</pre>
<p class="subhead2"><a id="AEAPI29225"></a>Parameters</p>
<p><a href="#BCGDACGE">Table 7-7</a> describes parameters available for the <code>APEX_DEBUG.LOG_SESSION_STATE</code> procedure.</p>
<div id="AEAPI29226" class="tblformal">
<p class="titleintable"><a id="sthref214"></a><a id="BCGDACGE"></a>Table 7-7 APEX_DEBUG.LOG_SESSION_STATE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.LOG_SESSION_STATE Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t19">Parameter</th>
<th class="cellalignment3316" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t19" headers="r1c1-t19">
<p><code>p_page_id</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t19 r1c2-t19">
<p>Identifies a page within the current applicaton and workspace context.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t19" headers="r1c1-t19">
<p><code>p_enabled</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t19 r1c2-t19">
<p>Messages are logged when logging is enabled, setting a value of true enables logging.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t19" headers="r1c1-t19">
<p><code>p_level</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t19 r1c2-t19">
<p>Identifies the level of the log message where 1 is most important, 9 is least important. Must be an integer value.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29227"></a>Example</p>
<p>This example shows how to enable debug message logging for 1 and 2 level messages and display a level 1 message containing all the session state for the application&#39;s current page. Note, the <code>p_enabled</code> parameter need not be specified, as debugging has been explicitly enabled and the default of false for this parameter respects this enabling. Also note the <code>p_page_id</code> has not been specified, as this example just shows session state information for the application&#39;s current page.</p>
<pre>BEGIN
    APEX_DEBUG.ENABLE (p_level =&gt; 2);
    
    APEX_DEBUG.LOG_PAGE_SESSION_STATE (p_level =&gt; 1);
    
END;
</pre>
<pre></pre></div>
<!-- class="refsect1" -->
<a id="BCGIFJIH"></a>
<div id="AEAPI29228" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref215"></a>MESSAGE Procedure</h2>
<p>This procedure logs a formatted debug message, general version.</p>
<p class="subhead2"><a id="AEAPI29229"></a>Syntax</p>
<pre>APEX_DEBUG.MESSAGE ( 
    p_message IN VARCHAR2, 
    p0 IN VARCHAR2 DEFAULT NULL, 
    p1 IN VARCHAR2 DEFAULT NULL, 
    p2 IN VARCHAR2 DEFAULT NULL, 
    p3 IN VARCHAR2 DEFAULT NULL, 
    p4 IN VARCHAR2 DEFAULT NULL, 
    p5 IN VARCHAR2 DEFAULT NULL, 
    p6 IN VARCHAR2 DEFAULT NULL, 
    p7 IN VARCHAR2 DEFAULT NULL, 
    p8 IN VARCHAR2 DEFAULT NULL, 
    p9 IN VARCHAR2 DEFAULT NULL, 
    p10 IN VARCHAR2 DEFAULT NULL, 
    p11 IN VARCHAR2 DEFAULT NULL, 
    p12 IN VARCHAR2 DEFAULT NULL, 
    p13 IN VARCHAR2 DEFAULT NULL, 
    p14 IN VARCHAR2 DEFAULT NULL, 
    p15 IN VARCHAR2 DEFAULT NULL, 
    p16 IN VARCHAR2 DEFAULT NULL, 
    p17 IN VARCHAR2 DEFAULT NULL, 
    p18 IN VARCHAR2 DEFAULT NULL, 
    p19 IN VARCHAR2 DEFAULT NULL, 
    p_max_length IN PLS_INTEGER DEFAULT 1000, 
    p_level IN T_LOG_LEVEL DEFAULT C_LOG_LEVEL_INFO, 
    p_force IN BOOLEAN DEFAULT FALSE ); 
</pre>
<p class="subhead2"><a id="AEAPI29230"></a>Parameters</p>
<p><a href="#BCGHEHIH">Table 7-8</a> describes parameters available for the <code>APEX_DEBUG.MESSAGE</code> procedure.</p>
<div id="AEAPI29231" class="tblformal">
<p class="titleintable"><a id="sthref216"></a><a id="BCGHEHIH"></a>Table 7-8 APEX_DEBUG.MESSAGE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.MESSAGE Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t20">Parameter</th>
<th class="cellalignment3316" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t20" headers="r1c1-t20">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t20 r1c2-t20">
<p>The debug message. Occurrences of &#39;%s&#39; is replaced by <code>p0</code> to <code>p19</code>, as in <code>utl_lms.format_message</code> and C&#39;s sprintf. Occurrences of &#39;%%&#39; represent the special character &#39;%&#39;. Occurrences of &#39;%&lt;n&gt;&#39; are replaced by <code>p&lt;n&gt;</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t20" headers="r1c1-t20">
<p><code>p0</code> through <code>p19</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t20 r1c2-t20">
<p>Substitution strings for &#39;%s&#39; placeholders.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t20" headers="r1c1-t20">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t20 r1c2-t20">
<p>The <code>p&lt;n&gt;</code> values is truncated to this length.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t20" headers="r1c1-t20">
<p><code>p_level</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t20 r1c2-t20">
<p>The log level for the message, default is <code>c_log_level_info</code>. See <a href="#BCGIEHDD">&#34;Constants&#34;</a>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t20" headers="r1c1-t20">
<p><code>p_force</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t20 r1c2-t20">
<p>If true, this generates a debug message even if the page is not rendered in debug mode or <code>p_level</code> is greater than the configured debug messaging (using the URL or using the enable procedure).</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29232"></a>Example</p>
<p>This example shows how to use the <code>APEX_DEBUG.MESSAGE</code> procedure to add text to the debug log.</p>
<pre>apex_debug.message(&#39;the value of %s + %s equals %s&#39;, 3, 5, &#39;eight&#39;);
</pre>
<pre></pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a>, <a href="#BCGBIGIC">&#34;ENTER Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="BCGBEAEE"></a>
<div id="AEAPI29233" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref217"></a>REMOVE_DEBUG_BY_AGE Procedure</h2>
<p>Use this procedure to delete from the debug message log all data older than the specified number of days.</p>
<p class="subhead2"><a id="AEAPI29234"></a>Syntax</p>
<pre>APEX_DEBUG.REMOVE_DEBUG_BY_AGE (
    p_application_id IN NUMBER,
    p_older_than_days IN NUMBER);  
</pre>
<p class="subhead2"><a id="AEAPI29235"></a>Parameters</p>
<p><a href="#BCGECDFJ">Table 7-9</a> describes parameters available for the <code>APEX_DEBUG.REMOVE_DEBUG_BY_AGE</code> procedure.</p>
<div id="AEAPI29236" class="tblformal">
<p class="titleintable"><a id="sthref218"></a><a id="BCGECDFJ"></a>Table 7-9 APEX_DEBUG.REMOVE_DEBUG_BY_AGE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.REMOVE_DEBUG_BY_AGE Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t22">Parameter</th>
<th class="cellalignment3316" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t22" headers="r1c1-t22">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t22 r1c2-t22">
<p>The application ID of the application.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t22" headers="r1c1-t22">
<p><code>p_older_than_days</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t22 r1c2-t22">
<p>The number of days data can exist in the debug message log before it is deleted.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29237"></a>Example</p>
<p>This example demonstrates removing debug messages relating to the current application, that are older than 3 days old.</p>
<pre>BEGIN
    APEX_DEBUG.REMOVE_DEBUG_BY_AGE (
        p_application_id  =&gt; TO_NUMBER(:APP_ID),
        p_older_than_days =&gt; 3 );
END;
</pre>
<pre></pre></div>
<!-- class="refsect1" -->
<a id="BCGHJGBD"></a>
<div id="AEAPI29238" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref219"></a>REMOVE_DEBUG_BY_APP Procedure</h2>
<p>Use this procedure to delete from the debug message log all data belonging to a specified application.</p>
<p class="subhead2"><a id="AEAPI29239"></a>Syntax</p>
<pre>APEX_DEBUG.REMOVE_DEBUG_BY_APP ( 
    p_application_id IN NUMBER); 
</pre>
<p class="subhead2"><a id="AEAPI29240"></a>Parameters</p>
<p><a href="#BCGHFCCD">Table 7-10</a> describes parameters available for the <code>APEX_DEBUG.REMOVE_DEBUG_BY_APP</code> procedure.</p>
<div id="AEAPI29241" class="tblformal">
<p class="titleintable"><a id="sthref220"></a><a id="BCGHFCCD"></a>Table 7-10 APEX_DEBUG.REMOVE_DEBUG_BY_APP Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.REMOVE_DEBUG_BY_APP Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t23">Parameter</th>
<th class="cellalignment3316" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t23" headers="r1c1-t23">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t23 r1c2-t23">
<p>The application ID of the application.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29242"></a>Example</p>
<p>This example demonstrates removing all debug messages logged for the current application.</p>
<pre>BEGIN
    APEX_DEBUG.REMOVE_DEBUG_BY_APP(
        p_application_id =&gt; TO_NUMBER(:APP_ID) );
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BCGCJEHB"></a>
<div id="AEAPI29243" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref221"></a>REMOVE_DEBUG_BY_VIEW Procedure</h2>
<p>Use this procedure to delete all data for a specified view from the message log.</p>
<p class="subhead2"><a id="AEAPI29244"></a>Syntax</p>
<pre>APEX_DEBUG.REMOVE_DEBUG_BY_VIEW ( 
    p_application_id IN NUMBER, 
    p_view_id IN NUMBER); 
</pre>
<p class="subhead2"><a id="AEAPI29245"></a>Parameters</p>
<p><a href="#BCGHHADB">Table 7-11</a> describes parameters available for the <code>APEX_DEBUG.REMOVE_DEBUG_BY_VIEW</code> procedure.</p>
<div id="AEAPI29246" class="tblformal">
<p class="titleintable"><a id="sthref222"></a><a id="BCGHHADB"></a>Table 7-11 APEX_DEBUG.REMOVE_DEBUG_BY_VIEW Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.REMOVE_DEBUG_BY_VIEW Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t24">Parameter</th>
<th class="cellalignment3316" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t24" headers="r1c1-t24">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t24 r1c2-t24">
<p>The application ID of the application.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t24" headers="r1c1-t24">
<p><code>p_view_id</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t24 r1c2-t24">
<p>The view ID of the view.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29247"></a>Example</p>
<p>This example demonstrates the removal of debug messages within the &#39;View Identifier&#39; of 12345, belonging to the current application.</p>
<pre>BEGIN
    APEX_DEBUG.REMOVE_DEBUG_BY_VIEW (
        p_application_id =&gt; TO_NUMBER(:APP_ID),
        p_view_id        =&gt; 12345 );
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BCGFFFBI"></a>
<div id="AEAPI29248" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref223"></a>REMOVE_SESSION_MESSAGES Procedure</h2>
<p>This procedure deletes from the debug message log all data for a given session in your workspace defaults to your current session.</p>
<p class="subhead2"><a id="AEAPI29249"></a>Syntax</p>
<pre>APEX_DEBUG.REMOVE_SESSION_MESSAGES (
    p_session    IN NUMBER  DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI29250"></a>Parameters</p>
<p><a href="#BCGJFAEG">Table 7-12</a> describes parameters available for the <code>APEX_DEBUG.REMOVE_SESSION_MESSAGES</code> procedure.</p>
<div id="AEAPI29251" class="tblformal">
<p class="titleintable"><a id="sthref224"></a><a id="BCGJFAEG"></a>Table 7-12 APEX_DEBUG.REMOVE_SESSION_MESSAGES Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.REMOVE_SESSION_MESSAGES Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t25">Parameter</th>
<th class="cellalignment3316" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t25" headers="r1c1-t25">
<p><code>p_session</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t25 r1c2-t25">
<p>The session ID. Defaults to your current session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29252"></a>Example</p>
<p>This example demonstrates the removal of all debug messages logged within the current session. Note: As no value is passed for the <code>p_session</code> parameter, the procedure defaults to the current session.</p>
<pre>BEGIN
    APEX_DEBUG.REMOVE_SESSION_MESSAGES();
END;
</pre>
<pre></pre></div>
<!-- class="refsect1" -->
<a id="BCGGFDFB"></a>
<div id="AEAPI29253" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref225"></a>TOCHAR Function</h2>
<p>This procedure converts a BOOLEAN to a VARCHAR2.</p>
<p class="subhead2"><a id="AEAPI29254"></a>Syntax</p>
<pre>APEX_DEBUG.TOCHAR ( 
    p_value IN BOOLEAN ) 
    return VARCHAR2; 
</pre>
<p class="subhead2"><a id="AEAPI29255"></a>Parameters</p>
<p><a href="#BCGHCAIB">Table 7-13</a> describes parameters available for the <code>APEX_DEBUG.TOCHAR</code> function.</p>
<div id="AEAPI29256" class="tblformal">
<p class="titleintable"><a id="sthref226"></a><a id="BCGHCAIB"></a>Table 7-13 APEX_DEBUG.TOCHAR Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.TOCHAR Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t26">Parameter</th>
<th class="cellalignment3316" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t26" headers="r1c1-t26">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t26 r1c2-t26">
<p>A BOOLEAN 0or 1 that is converted to FALSE or TRUE respectively.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29257"></a>Example</p>
<p>This example shows how to use the <code>APEX_DEBUG.TOCHAR</code> function to convert <code>boolean</code> values to <code>varchar2</code>, so they can be passed to the other debug procedures.</p>
<pre>declare
    l_state boolean;
begin
    ....
    apex_debug.info(&#39;Value of l_state is %s&#39;, apex_debug.tochar(l_state));
    ....
end;
</pre></div>
<!-- class="refsect1" -->
<a id="BCGFAJGE"></a>
<div id="AEAPI29258" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref227"></a>TRACE Procedure</h2>
<p>This procedure logs messages at level <code>c_log_level_app_trace</code>. This procedure always logs, even if debug mode is turned off.</p>
<p class="subhead2"><a id="AEAPI29259"></a>Syntax</p>
<pre>APEX_DEBUG.TRACE ( 
    p_message IN VARCHAR2, 
    p0 IN VARCHAR2 DEFAULT NULL, 
    p1 IN VARCHAR2 DEFAULT NULL, 
    p2 IN VARCHAR2 DEFAULT NULL, 
    p3 IN VARCHAR2 DEFAULT NULL, 
    p4 IN VARCHAR2 DEFAULT NULL, 
    p5 IN VARCHAR2 DEFAULT NULL, 
    p6 IN VARCHAR2 DEFAULT NULL, 
    p7 IN VARCHAR2 DEFAULT NULL, 
    p8 IN VARCHAR2 DEFAULT NULL, 
    p9 IN VARCHAR2 DEFAULT NULL, 
    p_max_length IN PLS_INTEGER DEFAULT 1000 ); 
</pre>
<p class="subhead2"><a id="AEAPI29260"></a>Parameters</p>
<p><a href="#BCGJGDFH">Table 7-14</a> describes parameters available for the <code>APEX_DEBUG.TRACE</code> procedure.</p>
<div id="AEAPI29261" class="tblformal">
<p class="titleintable"><a id="sthref228"></a><a id="BCGJGDFH"></a>Table 7-14 APEX_DEBUG.TRACE Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.TRACE Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t27">Parameter</th>
<th class="cellalignment3316" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t27" headers="r1c1-t27">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t27 r1c2-t27">
<p>The debug message. Occurrences of &#39;%s&#39; are replaced by <code>p0</code> to <code>p19</code>, as in <code>utl_lms.format_message</code> and C&#39;s sprintf. Occurrences of &#39;%%&#39; represent the special character &#39;%&#39;. Occurrences of &#39;%&lt;n&gt;&#39; are replaced by p&lt;n&gt;.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t27" headers="r1c1-t27">
<p><code>p0</code> through <code>p9</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t27 r1c2-t27">
<p>Substitution strings for &#39;%s&#39; placeholders.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t27" headers="r1c1-t27">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t27 r1c2-t27">
<p>The <code>p&lt;n&gt;</code> values are truncated to this length.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29262"></a>Example</p>
<p>This example shows how to use <code>APEX_DEBUG.TRACE</code> to log low-level debug information in the debug log.</p>
<pre>apex_debug.trace(&#39;Low-level information: %s+%s=%s&#39;, 1, 2, 3);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGEDFCJ">&#34;WARN Procedure&#34;</a>, <a href="#BCGBIGIC">&#34;ENTER Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="BCGEDFCJ"></a>
<div id="AEAPI29263" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref229"></a>WARN Procedure</h2>
<p>This procedure logs messages at level <code>c_log_level_warn</code>. This procedure always logs, even if debug mode is turned off.</p>
<p class="subhead2"><a id="AEAPI29264"></a>Syntax</p>
<pre>APEX_DEBUG.WARN ( 
    p_message IN VARCHAR2, 
    p0 IN VARCHAR2 DEFAULT NULL, 
    p1 IN VARCHAR2 DEFAULT NULL, 
    p2 IN VARCHAR2 DEFAULT NULL, 
    p3 IN VARCHAR2 DEFAULT NULL, 
    p4 IN VARCHAR2 DEFAULT NULL, 
    p5 IN VARCHAR2 DEFAULT NULL, 
    p6 IN VARCHAR2 DEFAULT NULL, 
    p7 IN VARCHAR2 DEFAULT NULL, 
    p8 IN VARCHAR2 DEFAULT NULL, 
    p9 IN VARCHAR2 DEFAULT NULL, 
    p_max_length IN PLS_INTEGER DEFAULT 1000 ); 
</pre>
<p class="subhead2"><a id="AEAPI29265"></a>Parameters</p>
<p><a href="#BCGDCEHE">Table 7-15</a> describes parameters available for the <code>APEX_DEBUG.WARN</code> procedure.</p>
<div id="AEAPI29266" class="tblformal">
<p class="titleintable"><a id="sthref230"></a><a id="BCGDCEHE"></a>Table 7-15 APEX_DEBUG.WARN Procedure Parameters</p>
<table class="cellalignment3315" title="APEX_DEBUG.WARN Procedure Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t29">Parameter</th>
<th class="cellalignment3316" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t29" headers="r1c1-t29">
<p><code>p_message</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t29 r1c2-t29">
<p>The debug message. Occurrences of &#39;%s&#39; are replaced by <code>p0</code> to <code>p19</code>, as in <code>utl_lms.format_message</code> and C&#39;s sprintf. Occurrences of &#39;%%&#39; represent the special character &#39;%&#39;. Occurrences of &#39;%&lt;n&gt;&#39; are replaced by p&lt;n&gt;.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t29" headers="r1c1-t29">
<p><code>p0</code> through <code>p9</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t29 r1c2-t29">
<p>Substitution strings for &#39;%s&#39; placeholders.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t29" headers="r1c1-t29">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t29 r1c2-t29">
<p>The <code>p&lt;n&gt;</code> values are truncated to this length.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29267"></a>Example</p>
<p>This example shows how to use <code>APEX_DEBUG.WARN</code> to log highly important data in the debug log.</p>
<pre>apex_debug.warn(&#39;Soft constraint %s violated: %s&#39;, 4711, sqlerrm);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGIFJIH">&#34;MESSAGE Procedure&#34;</a>, <a href="#BCGDIJGI">&#34;ERROR Procedure&#34;</a>, <a href="#BCGBIGIC">&#34;ENTER Procedure&#34;</a>, <a href="#BCGFAJGE">&#34;TRACE Procedure&#34;</a>, <a href="#BCGIAEBC">&#34;INFO Procedure&#34;</a></div>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3308">
<tr>
<td class="cellalignment3317">
<table class="cellalignment3313">
<tr>
<td class="cellalignment3312"><a href="apex_auth.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3312"><a href="apex_error.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3319">
<table class="cellalignment3311">
<tr>
<td class="cellalignment3312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>