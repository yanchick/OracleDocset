<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1791"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/APEX_COLLECTION"></a><title>APEX_COLLECTION</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-05-22T14:53:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express API Reference"/>
<meta name="dcterms.identifier" content="E17963-07"/>
<meta name="dcterms.isVersionOf" content="AEAPI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="apex_authentication.htm" title="Previous" type="text/html"/>
<link rel="Next" href="apex_css.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17963-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/28</span> <!-- End Header -->
<div id="AEAPI531" class="chapter"><a id="CACFAICJ"></a>
<h1 class="chapter"><span class="secnum">4</span> APEX_COLLECTION</h1>
<p>Collections enable you to temporarily capture one or more nonscalar values. You can use collections to store rows and columns currently in session state so they can be accessed, manipulated, or processed during a user&#39;s specific session. You can think of a collection as a bucket in which you temporarily store and name rows of information.</p>
<p class="subhead2"><a id="AEAPI2199"></a>Topics:</p>
<ul>
<li>
<p><a href="#CJAIDBIC">About the APEX_COLLECTION API</a></p>
</li>
<li>
<p><a href="#CJAHGGFH">ADD_MEMBER Procedure</a></p>
</li>
<li>
<p><a href="#CJABJFEC">ADD_MEMBER Function</a></p>
</li>
<li>
<p><a href="#CJAFADDF">ADD_MEMBERS Procedure</a></p>
</li>
<li>
<p><a href="#CJAEEGJA">COLLECTION_EXISTS Function</a></p>
</li>
<li>
<p><a href="#CJAIJBBI">COLLECTION_HAS_CHANGED Function</a></p>
</li>
<li>
<p><a href="#CJAFFEAH">COLLECTION_MEMBER_COUNT Function</a></p>
</li>
<li>
<p><a href="#CJADHJCJ">CREATE_COLLECTION Procedure</a></p>
</li>
<li>
<p><a href="#CJAGGCJD">CREATE_OR_TRUNCATE_COLLECTION Procedure</a></p>
</li>
<li>
<p><a href="#CJAGHAJD">CREATE_COLLECTION_FROM_QUERY Procedure</a></p>
</li>
<li>
<p><a href="#CJAEDIIB">CREATE_COLLECTION_FROM_QUERY2 Procedure</a></p>
</li>
<li>
<p><a href="#CJAHBBGD">CREATE_COLLECTION_FROM_QUERY_B Procedure</a></p>
</li>
<li>
<p><a href="#CJACABGE">CREATE_COLLECTION_FROM_QUERYB2 Procedure</a></p>
</li>
<li>
<p><a href="#CJAJAJBD">DELETE_ALL_COLLECTIONS Procedure</a></p>
</li>
<li>
<p><a href="#CJAIJBCI">DELETE_ALL_COLLECTIONS_SESSION Procedure</a></p>
</li>
<li>
<p><a href="#CJAHDJIE">DELETE_COLLECTION Procedure</a></p>
</li>
<li>
<p><a href="#CJAIIAAJ">DELETE_MEMBER Procedure</a></p>
</li>
<li>
<p><a href="#CJAIBDII">DELETE_MEMBERS Procedure</a></p>
</li>
<li>
<p><a href="#CJAIFADF">GET_MEMBER_MD5 Function</a></p>
</li>
<li>
<p><a href="#CJAJBDCF">MERGE_MEMBERS Procedure</a></p>
</li>
<li>
<p><a href="#CJAJGIBF">MOVE_MEMBER_DOWN Procedure</a></p>
</li>
<li>
<p><a href="#CJAHIDAJ">MOVE_MEMBER_UP Procedure</a></p>
</li>
<li>
<p><a href="#CJAFCEEA">RESEQUENCE_COLLECTION Procedure</a></p>
</li>
<li>
<p><a href="#CJADHAAJ">RESET_COLLECTION_CHANGED Procedure</a></p>
</li>
<li>
<p><a href="#CJAFIBJG">RESET_COLLECTION_CHANGED_ALL Procedure</a></p>
</li>
<li>
<p><a href="#CJAJGIAI">SORT_MEMBERS Procedure</a></p>
</li>
<li>
<p><a href="#CJADGFHA">TRUNCATE_COLLECTION Procedure</a></p>
</li>
<li>
<p><a href="#CJACBDDD">UPDATE_MEMBER Procedure</a></p>
</li>
<li>
<p><a href="#CJAJEJJC">UPDATE_MEMBERS Procedure</a></p>
</li>
<li>
<p><a href="#CJAEGAAH">UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1</a></p>
</li>
<li>
<p><a href="#CJAEIDHI">UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2</a></p>
</li>
<li>
<p><a href="#CJAHDJIC">UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3</a></p>
</li>
<li>
<p><a href="#CJAFHBEF">UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4</a></p>
</li>
<li>
<p><a href="#CJAJEDHH">UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5</a></p>
</li>
<li>
<p><a href="#CACFIHBG">UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6</a></p>
</li>
</ul>
<div class="refentry"><a id="CJAIDBIC"></a>
<div id="AEAPI651" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">About the APEX_COLLECTION <a id="sthref75"></a><a id="sthref76"></a><a id="sthref77"></a>API</h2>
<p>Every collection contains a named list of data elements (or members) which can have up to 50 character attributes (<code>VARCHAR2(4000)</code>), five number attributes, five date attributes, one XML Type attribute, one large binary attribute (<code>BLOB</code>), and one large character attribute (<code>CLOB</code>). You insert, update, and delete collection information using the PL/SQL API <code>APEX_COLLECTION</code>.</p>
<p>The following are examples of when you might use collections:</p>
<ul>
<li>
<p>When you are creating a data-entry wizard in which multiple rows of information first need to be collected within a logical transaction. You can use collections to temporarily store the contents of the multiple rows of information, before performing the final step in the wizard when both the physical and logical transactions are completed.</p>
</li>
<li>
<p>When your application includes an update page on which a user updates multiple detail rows on one page. The user can make many updates, apply these updates to a collection and then call a final process to apply the changes to the database.</p>
</li>
<li>
<p>When you are building a wizard where you are collecting an arbitrary number of attributes. At the end of the wizard, the user then performs a task that takes the information temporarily stored in the collection and applies it to the database.</p>
</li>
</ul>
<p>Beginning in Oracle Database 12<span class="italic">c</span>, database columns of data type <code>VARCHAR2</code> can be defined up to 32,767 bytes. This requires that the database initialization parameter <code>MAX_STRING_SIZE</code> has a value of <code>EXTENDED</code>. If Application Express was installed in Oracle Database 12<span class="italic">c</span> and with <code>MAX_STRING_SIZE</code> = <code>EXTENDED</code>, then the tables for the Application Express collections will be defined to support up 32,767 bytes for the character attributes of a collection. For the methods in the APEX_COLLECTION API, all references to character attributes (<code>c001</code> through <code>c050</code>) can support up to 32,767 bytes.</p>
<p class="subhead2"><a id="AEAPI2200"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABBCHID">Naming, Creating and Accessing Collections</a></p>
</li>
<li>
<p><a href="#BABGGIDG">Merging, Truncating and Deleting Collections</a></p>
</li>
<li>
<p><a href="#BABCHDBC">Adding, Updating and Deleting Collection Members</a></p>
</li>
<li>
<p><a href="#BABBFIAA">Managing Collections</a></p>
</li>
</ul>
<div id="AEAPI652" class="refsect2"><a id="BABBCHID"></a>
<h3 class="refsect2">Naming, Creating and Accessing Collections</h3>
<p class="subhead2"><a id="AEAPI2201"></a>Topics:</p>
<ul>
<li>
<p><a href="#BAGGIGJJ">Naming Collections</a></p>
</li>
<li>
<p><a href="#BAGJBDEH">Creating a Collection</a></p>
</li>
<li>
<p><a href="#BAGGAIFD">About the Parameter p_generate_md5</a></p>
</li>
</ul>
<div id="AEAPI654" class="refsect3"><a id="BAGGIGJJ"></a>
<h4 class="refsect3">Naming Collections</h4>
<p>When you create a collection, you must give it a name that cannot exceed 255 characters. Note that collection names are not case-sensitive and are converted to uppercase.</p>
<p>Once the collection is named, you can access the values in the collection by running a SQL query against the view <code>APEX_COLLECTIONS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGGECE">&#34;Accessing a Collection&#34;</a>, <a href="#CJAHBADG">&#34;CREATE_COLLECTION Procedure Parameters&#34;</a>, <a href="#CJADIJAI">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure Parameters&#34;</a></div>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" -->
<div id="AEAPI655" class="refsect3"><a id="BAGJBDEH"></a>
<h4 class="refsect3">Creating a <a id="sthref78"></a>Collection</h4>
<p>Every collection contains a named list of data elements (or members) which can have up to 50 character attributes (<code>VARCHAR2(4000)</code>), five number attributes, one XML Type attribute, one large binary attribute (<code>BLOB</code>), and one large character attribute (<code>CLOB</code>). You use the following methods to create a collection:</p>
<ul>
<li>
<p><code>CREATE_COLLECTION</code></p>
<p>This method creates an empty collection with the provided name. An exception is raised if the named collection exists.</p>
</li>
<li>
<p><code>CREATE_OR_TRUNCATE_COLLECTION</code></p>
<p>If the provided named collection does not exist, this method creates an empty collection with the given name. If the named collection exists, this method truncates it. Truncating a collection empties it, but leaves it in place.</p>
</li>
<li>
<p><code>CREATE_COLLECTION_FROM_QUERY</code></p>
<p>This method creates a collection and then populates it with the results of a specified query. An exception is raised if the named collection exists. This method can be used with a query with up to 50 columns in the <code>SELECT</code> clause. These columns in the <code>SELECT</code> clause populate the 50 character attributes of the collection (C001 through C050).</p>
</li>
<li>
<p><code>CREATE_COLLECTION_FOM_QUERY2</code></p>
<p>This method creates a collection and then populates it with the results of a specified query. An exception is raised if the named collection exists. It is identical to the <code>CREATE_COLLECTION_FROM_QUERY</code>, however, the first 5 columns of the <code>SELECT</code> clause must be numeric. After the numeric columns, there can be up to 50 character columns in the <code>SELECT</code> clause.</p>
</li>
<li>
<p><code>CREATE_COLLECTION_FROM_QUERY_B</code></p>
<p>This method offers significantly faster performance than the <code>CREATE_COLLECTION_FROM_QUERY</code> method by performing bulk SQL operations, but has the following limitations:</p>
<ul>
<li>
<p>No column value in the select list of the query can be more than 2,000 bytes. If a row is encountered that has a column value of more than 2,000 bytes, an error is raised during execution.</p>
</li>
<li>
<p>The MD5 checksum is not computed for any members in the collection.</p>
</li>
</ul>
</li>
<li>
<p><code>CREATE_COLLECTION_FROM_QUERYB2</code></p>
<p>This method also creates a collection and then populates it with the results of a specified query. An exception is raised if the named collection exists. It is identical to the <code>CREATE_COLLECTION_FROM_QUERY_B</code>, however, the first five columns of the <code>SELECT</code> clause must be numeric. After the numeric columns, there can be up to 50 character columns in the <code>SELECT</code> clause.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJADHJCJ">&#34;CREATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGHAJD">&#34;CREATE_COLLECTION_FROM_QUERY Procedure&#34;</a>, <a href="#CJAEDIIB">&#34;CREATE_COLLECTION_FROM_QUERY2 Procedure&#34;</a>, <a href="#CJAHBBGD">&#34;CREATE_COLLECTION_FROM_QUERY_B Procedure&#34;</a>, <a href="#CJACABGE">&#34;CREATE_COLLECTION_FROM_QUERYB2 Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI656" class="refsect3"><a id="BAGGAIFD"></a>
<h4 class="refsect3">About the Parameter p_generate_md5</h4>
<p>Use the <code>p_generate_md5</code> flag to specify if the message digest of the data of the collection member should be computed. By default, this flag is set to <code>NO</code>. Use this parameter to check the MD5 of the collection member (that is, compare it with another member or see if a member has changed).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIAEDH">&#34;Determining Collection Status&#34;</a> for information about using the <code>GET_MEMBER_MD5</code> function, <a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI657" class="refsect3"><a id="CHDGGECE"></a>
<h4 class="refsect3">Accessing a Collection<a id="sthref79"></a></h4>
<p>You can access the members of a collection by querying the database view <code>APEX_COLLECTIONS</code>. The <code>APEX_COLLECTIONS</code> view has the following definition:</p>
<pre>COLLECTION_NAME   NOT NULL VARCHAR2(255)
SEQ_ID            NOT NULL NUMBER 
C001              VARCHAR2(4000)
C002              VARCHAR2(4000)
C003              VARCHAR2(4000)   
C004              VARCHAR2(4000)   
C005              VARCHAR2(4000)  
...
C050              VARCHAR2(4000)
N001              NUMBER
N002              NUMBER
N003              NUMBER
N004              NUMBER
N005              NUMBER     
CLOB001           CLOB
BLOB001           BLOB  
XMLTYPE001        XMLTYPE
MD5_ORIGINAL      VARCHAR2(4000)  
</pre>
<p>Use the <code>APEX_COLLECTIONS</code> view in an application just as you would use any other table or view in an application, for example:</p>
<pre>SELECT c001, c002, c003, n001, clob001
   FROM APEX_collections
 WHERE collection_name = &#39;DEPARTMENTS&#39;
</pre></div>
<!-- class="refsect3" -->
<div id="AEAPI658" class="refsect2"><a id="BABGGIDG"></a>
<h3 class="refsect2">Merging, Truncating and Deleting Collections</h3>
<p class="subhead2"><a id="AEAPI2202"></a>Topics:</p>
<ul>
<li>
<p><a href="#BAGEIACA">Merging Collections</a></p>
</li>
<li>
<p><a href="#BAGHEIBA">Truncating a Collection</a></p>
</li>
<li>
<p><a href="#BAGEEGAB">Deleting a Collection</a></p>
</li>
<li>
<p><a href="#BAGGEECF">Deleting All Collections for the Current Application</a></p>
</li>
<li>
<p><a href="#BAGGAHEE">Deleting All Collections in the Current Session</a></p>
</li>
</ul>
<div id="AEAPI660" class="refsect3"><a id="BAGEIACA"></a>
<h4 class="refsect3">Merging <a id="sthref80"></a>Collections</h4>
<p>You can merge members of a collection with values passed in a set of arrays. By using the <code>p_init_query</code> argument, you can create a collection from the supplied query.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJBDCF">&#34;MERGE_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="AEAPI661" class="refsect3"><a id="BAGHEIBA"></a>
<h4 class="refsect3">Truncating a <a id="sthref81"></a>Collection</h4>
<p>If you truncate a collection, you remove all members from the specified collection, but the named collection remains in place.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJADGFHA">&#34;TRUNCATE_COLLECTION Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI662" class="refsect3"><a id="BAGEEGAB"></a>
<h4 class="refsect3">Deleting a Collection</h4>
<p>If you delete a collection, you delete the collection and all of its members. Be aware that if you do not delete a collection, it is eventually deleted when the session is purged.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAHDJIE">&#34;DELETE_COLLECTION Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI663" class="refsect3"><a id="BAGGEECF"></a>
<h4 class="refsect3">Deleting All Collections for the Current Application</h4>
<p>Use the <code>DELETE_ALL_COLLECTIONS</code> method to delete all collections defined in the current application.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJAJBD">&#34;DELETE_ALL_COLLECTIONS Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI664" class="refsect3"><a id="BAGGAHEE"></a>
<h4 class="refsect3">Deleting All Collections in the Current Session</h4>
<p>Use the <code>DELETE_ALL_COLLECTIONS_SESSION</code> method to delete all collections defined in the current session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIJBCI">&#34;DELETE_ALL_COLLECTIONS_SESSION Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI665" class="refsect2"><a id="BABCHDBC"></a>
<h3 class="refsect2">Adding, Updating and Deleting Collection Members</h3>
<p class="subhead2"><a id="AEAPI2203"></a>Topics:</p>
<ul>
<li>
<p><a href="#BAGGABAE">Adding Members to a Collection</a></p>
</li>
<li>
<p><a href="#BAGFGBBI">About the Parameters p_generate_md5, p_clob001, p_blob001, and p_xmltype001</a></p>
</li>
<li>
<p><a href="#BABJHCFB">Updating Collection Members</a></p>
</li>
<li>
<p><a href="#BABHHGJC">Deleting Collection Members</a></p>
</li>
</ul>
<div id="AEAPI667" class="refsect3"><a id="BAGGABAE"></a>
<h4 class="refsect3">Adding Members to a Collection</h4>
<p>When data elements (or members) are added to a collection, they are assigned a unique sequence ID. As you add members to a collection, the sequence ID is change in increments of 1, with the newest members having the largest ID.</p>
<p>You add new members to a collection using the <code>ADD_MEMBER function</code>. Calling this function returns the sequence ID of the newly added member.</p>
<p>You can also add new members (or an array of members) to a collection using the <code>ADD_MEMBERS</code> procedure. The number of members added is based on the number of elements in the first array.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAHGGFH">&#34;ADD_MEMBER Procedure&#34;</a>, <a href="#CJABJFEC">&#34;ADD_MEMBER Function&#34;</a>, <a href="#CJAFADDF">&#34;ADD_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="AEAPI668" class="refsect3"><a id="BAGFGBBI"></a>
<h4 class="refsect3">About the Parameters p_generate_md5, p_clob001, p_blob001, and p_xmltype001</h4>
<p>Use the <code>p_generate_md5</code> flag to specify if the message digest of the data of the collection member should be computed. By default, this flag is set to <code>NO</code>. Use this parameter to check the MD5 of the collection member (that is, compare it with another member or see if a member has changed).</p>
<p>Use <code>p_clob001</code> for collection member attributes which exceed 4,000 characters. Use <code>p_blob001</code> for binary collection member attributes. Use <code>p_xmltype001</code> to store well-formed XML.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIAEDH">&#34;Determining Collection Status&#34;</a> for information about using the function <code>GET_MEMBER_MD5</code></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI669" class="refsect3"><a id="BABJHCFB"></a>
<h4 class="refsect3">Updating Collection <a id="sthref82"></a>Members</h4>
<p>You can update collection members by calling the <code>UPDATE_MEMBER</code> procedure and referencing the desired collection member by its sequence ID. The <code>UPDATE_MEMBER</code> procedure replaces an entire collection member, not individual member attributes.</p>
<p>Use the <code>p_clob001</code> parameter for collection member attributes which exceed 4,000 characters.</p>
<p>To update a single attribute of a collection member, use the <code>UPDATE_MEMBER_ATTRIBUTE procedure</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJACBDDD">&#34;UPDATE_MEMBER Procedure&#34;</a>, <a href="#CJAJEJJC">&#34;UPDATE_MEMBERS Procedure&#34;</a>, <a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>, <a href="#CJAEIDHI">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2&#34;</a>, <a href="#CJAHDJIC">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3&#34;</a>, <a href="#CJAFHBEF">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4&#34;</a>, <a href="#CJAJEDHH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI670" class="refsect3"><a id="BABHHGJC"></a>
<h4 class="refsect3">Deleting Collection <a id="sthref83"></a>Members</h4>
<p>You can delete a collection member by calling the <code>DELETE_MEMBER</code> procedure and referencing the desired collection member by its sequence ID. Note that this procedure leaves a gap in the sequence IDs in the specified collection.</p>
<p>You can also delete all members from a collection by when an attribute matches a specific value. Note that the <code>DELETE_MEMBERS</code> procedure also leaves a gap in the sequence IDs in the specified collection. If the supplied attribute value is null, then all members of the named collection are deleted where the attribute (specified by <code>p_attr_number</code>) is null.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIIAAJ">&#34;DELETE_MEMBER Procedure&#34;</a>, <a href="#CJAIBDII">&#34;DELETE_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI671" class="refsect2"><a id="BABBFIAA"></a>
<h3 class="refsect2">Managing <a id="sthref84"></a>Collections</h3>
<p class="subhead2"><a id="AEAPI2204"></a>Topics:</p>
<ul>
<li>
<p><a href="#CHDBCGAA">Obtaining a Member Count</a></p>
</li>
<li>
<p><a href="#CHDBGHCD">Resequencing a Collection</a></p>
</li>
<li>
<p><a href="#CHDDHCIF">Verifying Whether a Collection Exists</a></p>
</li>
<li>
<p><a href="#CHDDADFF">Adjusting a Member Sequence ID</a></p>
</li>
<li>
<p><a href="#CHDFFJCE">Sorting Collection Members</a></p>
</li>
<li>
<p><a href="#BAGDGEJD">Clearing Collection Session State</a></p>
</li>
</ul>
<div id="AEAPI673" class="refsect3"><a id="CHDBCGAA"></a>
<h4 class="refsect3">Obtaining a Member Count</h4>
<p>Use <code>COLLECTION_MEMBER_COUNT</code> to return the total count of all members in a collection. Note that this count does not indicate the highest sequence in the collection.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAFFEAH">&#34;COLLECTION_MEMBER_COUNT Function&#34;</a></div>
</div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="AEAPI674" class="refsect3"><a id="CHDBGHCD"></a>
<h4 class="refsect3">Resequencing a Collection</h4>
<p>Use <code>RESEQUENCE_COLLECTION</code> to resequence a collection to remove any gaps in sequence IDs while maintaining the same element order.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAFCEEA">&#34;RESEQUENCE_COLLECTION Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI675" class="refsect3"><a id="CHDDHCIF"></a>
<h4 class="refsect3">Verifying Whether a Collection Exists</h4>
<p>Use <code>COLLECTION_EXISTS</code> to determine if a collection exists.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEEGJA">&#34;COLLECTION_EXISTS Function&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI676" class="refsect3"><a id="CHDDADFF"></a>
<h4 class="refsect3">Adjusting a Member Sequence ID</h4>
<p>You can adjust the sequence ID of a specific member within a collection by moving the ID up or down. When you adjust a sequence ID, the specified ID is exchanged with another ID. For example, if you were to move the ID 2 up, 2 becomes 3, and 3 would become 2.</p>
<p>Use <code>MOVE_MEMBER_UP</code> to adjust a member sequence ID up by one. Alternately, use <code>MOVE_MEMBER_DOWN</code> to adjust a member sequence ID down by one.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJGIBF">&#34;MOVE_MEMBER_DOWN Procedure&#34;</a>, <a href="#CJAHIDAJ">&#34;MOVE_MEMBER_UP Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI677" class="refsect3"><a id="CHDFFJCE"></a>
<h4 class="refsect3">Sorting Collection Members</h4>
<p>Use the <code>SORT_MEMBERS</code> method to reorder members of a collection by the column number. This method sorts the collection by a particular column number and also reassigns the sequence IDs for each member to remove gaps.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJGIAI">&#34;SORT_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI678" class="refsect3"><a id="BAGDGEJD"></a>
<h4 class="refsect3">Clearing Collection <a id="sthref85"></a>Session State</h4>
<p>Clearing the session state of a collection removes the collection members. A shopping cart is a good example of when you might need to clear collection session state. When a user requests to empty the shopping cart and start again, you must clear the session state for a collection. You can remove session state of a collection by calling the <code>TRUNCATE_COLLECTION</code> method or by using <code>f?p</code> syntax.</p>
<p>Calling the <code>TRUNCATE_COLLECTION</code> method deletes the existing collection and then recreates it, for example:</p>
<pre><a id="sthref86"></a>APEX_COLLECTION.TRUNCATE_COLLECTION(
    p_collection_name =&gt; collection name);
</pre>
<p>You can also use the sixth <code>f?p</code> syntax argument to clear session state, for example:</p>
<pre>f?p=App:Page:Session::NO:collection name
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJADGFHA">&#34;TRUNCATE_COLLECTION Procedure&#34;</a></div>
</div>
<!-- class="refsect3" -->
<div id="AEAPI679" class="refsect3"><a id="BABIAEDH"></a>
<h4 class="refsect3">Determining Collection <a id="sthref87"></a>Status</h4>
<p>The <code>p_generate_md5</code> parameter determines if the MD5 message digests are computed for each member of a collection. The collection status flag is set to <code>FALSE</code> immediately after you create a collection. If any operations are performed on the collection (such as add, update, truncate, and so on), this flag is set to <code>TRUE</code>.</p>
<p>You can reset this flag manually by calling <code>RESET_COLLECTION_CHANGED</code>.</p>
<p>Once this flag has been reset, you can determine if a collection has changed by calling <code>COLLECTION_HAS_CHANGED</code>.</p>
<p>When you add a new member to a collection, an MD5 message digest is computed against all 50 attributes and the CLOB attribute if the <code>p_generated_md5</code> parameter is set to <code>YES</code>. You can access this value from the <code>MD5_ORIGINAL</code> column of the view <code>APEX_COLLECTION</code>. You can access the MD5 message digest for the current value of a specified collection member by using the function <code>GET_MEMBER_MD5</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJADHAAJ">&#34;RESET_COLLECTION_CHANGED Procedure&#34;</a>, <a href="#CJAIJBBI">&#34;COLLECTION_HAS_CHANGED Function&#34;</a>, <a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a></div>
</div>
<!-- class="refsect3" -->
<a id="CJAHGGFH"></a>
<div id="AEAPI680" class="refsect1">
<h2 class="refsect1">ADD_MEMBER <a id="sthref88"></a>Procedure</h2>
<p>Use this procedure to add a new member to an existing collection. An error is raised if the specified collection does not exist for the current user in the same session for the current Application ID. Gaps are not used when adding a new member, so an existing collection with members of sequence IDs (1,2,5,8) adds the new member with a sequence ID of 9.</p>
<p class="subhead2"><a id="AEAPI681"></a>Syntax</p>
<pre>APEX_COLLECTION.ADD_MEMBER (
    p_collection_name IN VARCHAR2,
    p_c001 IN VARCHAR2 default null,
    ...
    p_c050 IN VARCHAR2 default null,
    p_n001 IN NUMBER default null,
    p_n002 IN NUMBER default null,
    p_n003 IN NUMBER default null,
    p_n004 IN NUMBER default null,
    p_n005 IN NUMBER default null,
    p_d001 IN DATE default null,
    p_d002 IN DATE default null,
    p_d003 IN DATE default null,
    p_d004 IN DATE default null,
    p_d005 IN DATE default null,
    p_clob001 IN CLOB default empty_clob(),
    p_blob001 IN BLOB default empty_blob(),
    p_xmltype001 IN XMLTYPE default null,
    p_generate_md5 IN VARCHAR2  default &#39;NO&#39;);
</pre>
<p class="subhead2"><a id="AEAPI682"></a>Parameters</p>
<p><a href="#CJAIDFDF">Table 4-1</a> describes the parameters available in the <code>ADD_MEMBER</code> procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI683" class="tblformal">
<p class="titleintable"><a id="sthref89"></a><a id="CJAIDFDF"></a>Table 4-1 ADD_MEMBER Procedure Parameters</p>
<table class="cellalignment3315" title="ADD_MEMBER Procedure Parameters" summary="This table describes the parameters available in the ADD_MEMBER procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t22">Parameter</th>
<th class="cellalignment3316" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t22" headers="r1c1-t22">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t22 r1c2-t22">
<p>The name of an existing collection. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t22" headers="r1c1-t22">
<p><code>p_c001 through p_c050</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t22 r1c2-t22">
<p>Attribute value of the member to be added. Maximum length is 4,000 bytes. Any character attribute exceeding 4,000 characters is truncated to 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t22" headers="r1c1-t22">
<p><code>p_n001 through p_n005</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t22 r1c2-t22">
<p>Attribute value of the numeric attributes to be added.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t22" headers="r1c1-t22">
<p><code>p_d001</code> through <code>p_d005</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t22 r1c2-t22">
<p>Attribute value of the date attribute.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t22" headers="r1c1-t22">
<p><code>p_clob001</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t22 r1c2-t22">
<p>Use p_clob001 for collection member attributes that exceed 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t22" headers="r1c1-t22">
<p><code>p_blob001</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t22 r1c2-t22">
<p>Use p_blob001 for binary collection member attributes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t22" headers="r1c1-t22">
<p><code>p_xmltype001</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t22 r1c2-t22">
<p>Use p_xmltype001 to store well-formed XML.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t22" headers="r1c1-t22">
<p><code>p_generate_md5</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t22 r1c2-t22">
<p>Valid values include <code>YES</code> and <code>NO</code>. <code>YES</code> to specify if the message digest of the data of the collection member should be computed. Use this parameter to compare the MD5 of the collection member with another member or to see if that member has changed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI684"></a>Example</p>
<p>The following is an example of the ADD_MEMBER procedure.</p>
<pre>APEX_COLLECTION.ADD_MEMBER(
        p_collection_name =&gt; &#39;GROCERIES&#39;
        p_c001            =&gt; &#39;Grapes&#39;,
        p_c002            =&gt; &#39;Imported&#39;,
        p_n001            =&gt; 125,
        p_d001            =&gt; sysdate );
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJABJFEC">&#34;ADD_MEMBER Function&#34;</a>, <a href="#CJAFADDF">&#34;ADD_MEMBERS Procedure&#34;</a></div>
<a id="CJABJFEC"></a>
<div id="AEAPI685" class="refsect1">
<h2 class="refsect1">ADD_MEMBER <a id="sthref90"></a>Function</h2>
<p>Use this function to add a new member to an existing collection. Calling this function returns the sequence ID of the newly added member. An error is raised if the specified collection does not exist for the current user in the same session for the current Application ID. Gaps are not used when adding a new member, so an existing collection with members of sequence IDs (1,2,5,8) adds the new member with a sequence ID of 9.</p>
<p class="subhead2"><a id="AEAPI686"></a>Syntax</p>
<pre>APEX_COLLECTION.ADD_MEMBER (
    p_collection_name IN VARCHAR2,
    p_c001 IN VARCHAR2 default null,
    ...
    p_c050 IN VARCHAR2 default null,
    p_n001 IN NUMBER default null,
    p_n002 IN NUMBER default null,
    p_n003 IN NUMBER default null,
    p_n004 IN NUMBER default null,
    p_n005 IN NUMBER default null,
    p_d001 IN DATE default null,
    p_d002 IN DATE default null,
    p_d003 IN DATE default null,
    p_d004 IN DATE default null,
    p_d005 IN DATE default null,
    p_clob001 IN CLOB default empty_clob(),
    p_blob001 IN BLOB default empty_blob(),
    p_xmltype001 IN XMLTYPE default null,
    p_generate_md5 IN VARCHAR2 default &#39;NO&#39;)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI687"></a>Parameters</p>
<p><a href="#CJAICDCH">Table 4-2</a> describes the parameters available in the <code>ADD_MEMBER</code> function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI688" class="tblformal">
<p class="titleintable"><a id="sthref91"></a><a id="CJAICDCH"></a>Table 4-2 ADD_MEMBER Function Parameters</p>
<table class="cellalignment3315" title="ADD_MEMBER Function Parameters" summary="This table describes the parameters available in the ADD_MEMBER function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t25">Parameter</th>
<th class="cellalignment3316" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t25" headers="r1c1-t25">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t25 r1c2-t25">
<p>The name of an existing collection. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t25" headers="r1c1-t25">
<p><code>p_c001 through p_c050</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t25 r1c2-t25">
<p>Attribute value of the member to be added. Maximum length is 4,000 bytes. Any character attribute exceeding 4,000 characters is truncated to 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t25" headers="r1c1-t25">
<p><code>p_n001 through p_n005</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t25 r1c2-t25">
<p>Attribute value of the numeric attributes to be added.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t25" headers="r1c1-t25">
<p><code>p_d001</code> through <code>p_d005</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t25 r1c2-t25">
<p>Attribute value of the date attribute to be added.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t25" headers="r1c1-t25">
<p><code>p_clob001</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t25 r1c2-t25">
<p>Use p_clob001 for collection member attributes that exceed 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t25" headers="r1c1-t25">
<p><code>p_blob001</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t25 r1c2-t25">
<p>Use p_blob001 for binary collection member attributes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t25" headers="r1c1-t25">
<p><code>p_xmltype001</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t25 r1c2-t25">
<p>Use p_xmltype001 to store well-formed XML.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t25" headers="r1c1-t25">
<p><code>p_generate_md5</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t25 r1c2-t25">
<p>Valid values include <code>YES</code> and <code>NO</code>. <code>YES</code> to specify if the message digest of the data of the collection member should be computed. Use this parameter to compare the MD5 of the collection member with another member or to see if that member has changed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI689"></a>Example</p>
<pre>DECLARE
    l_seq number;
BEGIN
    l_seq := APEX_COLLECTION.ADD_MEMBER(
                 p_collection_name =&gt; &#39;GROCERIES&#39;
                 p_c001            =&gt; &#39;Grapes&#39;,
                 p_c002            =&gt; &#39;Imported&#39;,
                 p_n001            =&gt; 125,
                 p_d001            =&gt; sysdate );
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJAHGGFH">&#34;ADD_MEMBER Procedure&#34;</a>, <a href="#CJAFADDF">&#34;ADD_MEMBERS Procedure&#34;</a></div>
<a id="CJAFADDF"></a>
<div id="AEAPI690" class="refsect1">
<h2 class="refsect1">ADD_MEMBERS <a id="sthref92"></a>Procedure</h2>
<p>Use this procedure to add an array of members to a collection. An error is raised if the specified collection does not exist for the current user in the same session for the current Application ID. Gaps are not used when adding a new member, so an existing collection with members of sequence IDs (1,2,5,8) adds the new member with a sequence ID of 9. The count of elements in the p_c001 PL/SQL table is used as the total number of items across all PL/SQL tables. For example, if p_c001.count is 2 and p_c002.count is 10, only 2 members are added. If p_c001 is null an application error is raised.</p>
<p class="subhead2"><a id="AEAPI691"></a>Syntax</p>
<pre>APEX_COLLECTION.ADD_MEMBERS (
    p_collection_name IN VARCHAR2,
    p_c001 IN APEX_APPLICATION_GLOBAL.VC_ARR2 default empty_vc_arr,
    p_c002 IN APEX_APPLICATION_GLOBAL.VC_ARR2 default empty_vc_arr,
    p_c003 IN APEX_APPLICATION_GLOBAL.VC_ARR2 default empty_vc_arr,
    ...
    p_c050 IN APEX_APPLICATION_GLOBAL.VC_ARR2 default empty_vc_arr,
    p_n001 IN APEX_APPLICATION_GLOBAL.N_ARR default empty_n_arr,
    p_n002 IN APEX_APPLICATION_GLOBAL.N_ARR default empty_n_arr,
    p_n003 IN APEX_APPLICATION_GLOBAL.N_ARR default empty_n_arr,
    p_n004 IN APEX_APPLICATION_GLOBAL.N_ARR default empty_n_arr,
    p_n005 IN APEX_APPLICATION_GLOBAL.N_ARR default empty_n_arr,
    p_d001 IN APEX_APPLICATION_GLOBAL.D_ARR default empty_d_arr,
    p_d002 IN APEX_APPLICATION_GLOBAL.D_ARR default empty_d_arr,
    p_d003 IN APEX_APPLICATION_GLOBAL.D_ARR default empty_d_arr,
    p_d004 IN APEX_APPLICATION_GLOBAL.D_ARR default empty_d_arr,
    p_d005 IN APEX_APPLICATION_GLOBAL.D_ARR default empty_d_arr,
    p_generate_md5 IN VARCHAR2 default &#39;NO&#39;);
</pre>
<p class="subhead2"><a id="AEAPI692"></a>Parameters</p>
<p><a href="#CJACECHD">Table 4-3</a> describes the parameters available in the <code>ADD_MEMBERS</code> procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI693" class="tblformal">
<p class="titleintable"><a id="sthref93"></a><a id="CJACECHD"></a>Table 4-3 ADD_MEMBERS Procedure Parameters</p>
<table class="cellalignment3315" title="ADD_MEMBERS Procedure Parameters" summary="This table describes the parameters available in the ADD_MEMBERS procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t28">Parameter</th>
<th class="cellalignment3316" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t28" headers="r1c1-t28">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t28 r1c2-t28">
<p>The name of an existing collection. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t28" headers="r1c1-t28">
<p><code>p_c001</code> through <code>p_c050</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t28 r1c2-t28">
<p>Array of character attribute values to be added.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t28" headers="r1c1-t28">
<p><code>p_n001</code> through <code>p_n005</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t28 r1c2-t28">
<p>Array of numeric attribute values to be added.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t28" headers="r1c1-t28">
<p><code>p_d001</code> through <code>p_d005</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t28 r1c2-t28">
<p>Array of date attribute values to be added.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t28" headers="r1c1-t28">
<p><code>p_generate_md5</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t28 r1c2-t28">
<p>Valid values include <code>YES</code> and <code>NO</code>. <code>YES</code> to specify if the message digest of the data of the collection member should be computed. Use this parameter to compare the MD5 of the collection member with another member or to see if that member has changed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI694"></a>Example</p>
<p>The following example shows how to add two new members to the <code>EMPLOYEE</code> table.</p>
<pre>Begin
    APEX_COLLECTION.ADD_MEMBERS(
        p_collection_name =&gt; &#39;EMPLOYEE&#39;,
        p_c001 =&gt; l_arr1,
        p_c002 =&gt; 1_arr2);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJAHGGFH">&#34;ADD_MEMBER Procedure&#34;</a>, <a href="#CJABJFEC">&#34;ADD_MEMBER Function&#34;</a></div>
<a id="CJAEEGJA"></a>
<div id="AEAPI695" class="refsect1">
<h2 class="refsect1">COLLECTION_EXISTS <a id="sthref94"></a>Function</h2>
<p>Use this function to determine if a collection exists. A <code>TRUE</code> is returned if the specified collection exists for the current user in the current session for the current Application ID, otherwise <code>FALSE</code> is returned.</p>
<p class="subhead2"><a id="AEAPI696"></a>Syntax</p>
<pre>APEX_COLLECTION.COLLECTION_EXISTS (
    p_collection_name IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI697"></a>Parameters</p>
<p><a href="#CJAEFIDC">Table 4-4</a> describes the parameters available in the <code>COLLECTION_EXISTS</code> function.</p>
<div id="AEAPI698" class="tblformal">
<p class="titleintable"><a id="sthref95"></a><a id="CJAEFIDC"></a>Table 4-4 COLLECTION_EXISTS Function Parameters</p>
<table class="cellalignment3315" title="COLLECTION_EXISTS Function Parameters" summary="This table describes the parameters available in the COLLECTION_EXISTS function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t30">Parameter</th>
<th class="cellalignment3316" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t30" headers="r1c1-t30">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t30 r1c2-t30">
<p>The name of the collection. Maximum length is 255 bytes. The collection name is not case sensitive and is converted to upper case.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI699"></a>Example</p>
<p>The following example shows how to use the <code>COLLECTION_EXISTS</code> function to determine if the collection named <code>EMPLOYEES</code> exists.</p>
<pre>Begin
    l_exists := APEX_COLLECTION.COLLECTION_EXISTS (
        p_collection_name =&gt; &#39;EMPLOYEES&#39;;
End;
</pre></div>
<!-- class="refsect1" -->
<a id="CJAIJBBI"></a>
<div id="AEAPI700" class="refsect1">
<h2 class="refsect1">COLLECTION_HAS_CHANGED <a id="sthref96"></a>Function</h2>
<p>Use this function to determine if a collection has changed since it was created or the collection changed flag was reset.</p>
<p class="subhead2"><a id="AEAPI701"></a>Syntax</p>
<pre>APEX_COLLECTION.COLLECTION_HAS_CHANGED (
    p_collection_name IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI702"></a>Parameters</p>
<p><a href="#CJAHHFBA">Table 4-5</a> describes the parameters available in the <code>COLLECTION_HAS_CHANGED</code> function.</p>
<div id="AEAPI703" class="tblformal">
<p class="titleintable"><a id="sthref97"></a><a id="CJAHHFBA"></a>Table 4-5 COLLECTION_HAS_CHANGED Function Parameters</p>
<table class="cellalignment3315" title="COLLECTION_HAS_CHANGED Function Parameters" summary="This table describes the parameters available in the COLLECTION_HAS_CHANGED function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t31">Parameter</th>
<th class="cellalignment3316" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t31" headers="r1c1-t31">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t31 r1c2-t31">
<p>The name of the collection. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI704"></a>Example</p>
<p>The following example shows how to use the <code>COLLECTION_HAS_CHANGED</code> function to determine if the <code>EMPLOYEES</code> collection has changed since it was created or last reset.</p>
<pre>Begin
    l_exists := APEX_COLLECTION.COLLECTION_HAS_CHANGED (
        p_collection_name =&gt; &#39;EMPLOYEES&#39;;
End;
</pre></div>
<!-- class="refsect1" -->
<a id="CJAFFEAH"></a>
<div id="AEAPI705" class="refsect1">
<h2 class="refsect1">COLLECTION_MEMBER_COUNT <a id="sthref98"></a>Function</h2>
<p>Use this function to get the total number of members for the named collection. If gaps exist, the total member count returned is not equal to the highest sequence ID in the collection. If the named collection does not exist for the current user in the current session, an error is raised.</p>
<p class="subhead2"><a id="AEAPI706"></a>Syntax</p>
<pre>APEX_COLLECTION.COLLECTION_MEMBER_COUNT (
    p_collection_name IN VARCHAR2)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI707"></a>Parameters</p>
<p><a href="#CJABIJCJ">Table 4-6</a> describes the parameters available in the <code>COLLECTION_MEMBER_COUNT</code> function.</p>
<div id="AEAPI708" class="tblformal">
<p class="titleintable"><a id="sthref99"></a><a id="CJABIJCJ"></a>Table 4-6 COLLECTION_MEMBER_COUNT Function Parameters</p>
<table class="cellalignment3315" title="COLLECTION_MEMBER_COUNT Function Parameters" summary="This table describes the parameters available in the COLLECTION_MEMBER_COUNT function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t32">Parameter</th>
<th class="cellalignment3316" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t32" headers="r1c1-t32">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t32 r1c2-t32">
<p>The name of the collection.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI709"></a>Example</p>
<p>This example shows how to use the <code>COLLECTION_MEMBER_COUNT</code> function to get the total number of members in the <code>DEPARTMENTS</code> collection.</p>
<pre>Begin
    l_count := APEX_COLLECTION.COLLECTION_MEMBER_COUNT( p_collection_name =&gt; &#39;DEPARTMENTS&#39;;
End;
</pre></div>
<!-- class="refsect1" -->
<a id="CJADHJCJ"></a>
<div id="AEAPI710" class="refsect1">
<h2 class="refsect1">CREATE_COLLECTION <a id="sthref100"></a>Procedure</h2>
<p>Use this procedure to create an empty collection that does not already exist. If a collection exists with the same name for the current user in the same session for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI711"></a>Syntax</p>
<pre>APEX_COLLECTION.CREATE_COLLECTION(
    p_collection_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI712"></a>Parameters</p>
<p><a href="#CJAHBADG">Table 4-7</a> describes the parameters available in the <code>CREATE_COLLECTION</code> procedure.</p>
<div id="AEAPI713" class="tblformal">
<p class="titleintable"><a id="sthref101"></a><a id="CJAHBADG"></a>Table 4-7 CREATE_COLLECTION Procedure Parameters</p>
<table class="cellalignment3315" title="CREATE_COLLECTION Procedure Parameters" summary="This table describes the parameters available in the CREATE_COLLECTION procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t33">Parameter</th>
<th class="cellalignment3316" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t33" headers="r1c1-t33">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t33 r1c2-t33">
<p>The name of the collection. The maximum length is 255 characters. An error is returned if this collection exists with the specified name of the current user and in the same session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI714"></a>Example</p>
<p>This example shows how to use the <code>CREATE_COLLECTION</code> procedure to create an empty collection named <code>EMPLOYEES</code>.</p>
<pre>Begin
    APEX_COLLECTION.CREATE_COLLECTION(
        p_collection_name =&gt; &#39;EMPLOYEES&#39;);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGHAJD">&#34;CREATE_COLLECTION_FROM_QUERY Procedure&#34;</a>, <a href="#CJAEDIIB">&#34;CREATE_COLLECTION_FROM_QUERY2 Procedure&#34;</a>, <a href="#CJAHBBGD">&#34;CREATE_COLLECTION_FROM_QUERY_B Procedure&#34;</a>, <a href="#CJACABGE">&#34;CREATE_COLLECTION_FROM_QUERYB2 Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAGGCJD"></a>
<div id="AEAPI715" class="refsect1">
<h2 class="refsect1"><a id="sthref102"></a>CREATE_OR_TRUNCATE_COLLECTION Procedure</h2>
<p>Use this procedure to create a collection. If a collection exists with the same name for the current user in the same session for the current Application ID, all members of the collection are removed. In other words, the named collection is truncated.</p>
<p class="subhead2"><a id="AEAPI716"></a>Syntax</p>
<pre>APEX_COLLECTION.CREATE_OR_TRUNCATE_COLLECTION(
    p_collection_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI717"></a>Parameters</p>
<p><a href="#CJADIJAI">Table 4-8</a> describes the parameters available in the <code>CREATE_OR_TRUNCATE_COLLECTION</code> procedure.</p>
<div id="AEAPI718" class="tblformal">
<p class="titleintable"><a id="sthref103"></a><a id="CJADIJAI"></a>Table 4-8 CREATE_OR_TRUNCATE_COLLECTION Procedure Parameters</p>
<table class="cellalignment3315" title="CREATE_OR_TRUNCATE_COLLECTION Procedure Parameters" summary="This table describes the parameters available in the CREATE_OR_TRUNCATE_COLLECTION procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t35">Parameter</th>
<th class="cellalignment3316" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t35" headers="r1c1-t35">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t35 r1c2-t35">
<p>The name of the collection. The maximum length is 255 characters. All members of the named collection are removed if the named collection exists for the current user in the current session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI719"></a>Example</p>
<p>This example shows how to use the <code>CREATE_OR_TRUNCATE_COLLECTION</code> procedure to remove all members in an existing collection named <code>EMPLOYEES</code>.</p>
<pre>Begin
    APEX_COLLECTION.CREATE_OR_TRUNCATE_COLLECTION(
        p_collection_name =&gt; &#39;EMPLOYEES&#39;);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJADHJCJ">&#34;CREATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGHAJD">&#34;CREATE_COLLECTION_FROM_QUERY Procedure&#34;</a>, <a href="#CJAEDIIB">&#34;CREATE_COLLECTION_FROM_QUERY2 Procedure&#34;</a>, <a href="#CJAHBBGD">&#34;CREATE_COLLECTION_FROM_QUERY_B Procedure&#34;</a>, <a href="#CJACABGE">&#34;CREATE_COLLECTION_FROM_QUERYB2 Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAGHAJD"></a>
<div id="AEAPI720" class="refsect1">
<h2 class="refsect1"><a id="sthref104"></a>CREATE_COLLECTION_FROM_QUERY Procedure</h2>
<p>Use this procedure to create a collection from a supplied query. The query is parsed as the application owner. This method can be used with a query with up to 50 columns in the <code>SELECT</code> clause. These columns in the <code>SELECT</code> clause populates the 50 character attributes of the collection (C001 through C050). If a collection exists with the same name for the current user in the same session for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI721"></a>Syntax</p>
<pre>APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY (
    p_collection_name IN VARCHAR2,
    p_query IN VARCHAR2,
    p_generate_md5 IN VARCHAR2 default &#39;NO&#39;);
</pre>
<p class="subhead2"><a id="AEAPI722"></a>Parameters</p>
<p><a href="#CJABHEJF">Table 4-9</a> describes the parameters available in the <code>CREATE_COLLECTION_FROM_QUERY</code> procedure.</p>
<div id="AEAPI723" class="tblformal">
<p class="titleintable"><a id="sthref105"></a><a id="CJABHEJF"></a>Table 4-9 CREATE_COLLECTION_FROM_QUERY Procedure Parameters</p>
<table class="cellalignment3315" title="CREATE_COLLECTION_FROM_QUERY Procedure Parameters" summary="This table describes the parameters available in the CREATE_COLLECTION_FROM_QUERY procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t37">Parameter</th>
<th class="cellalignment3316" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t37" headers="r1c1-t37">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t37 r1c2-t37">
<p>The name of the collection. The maximum length is 255 characters. An error is returned if this collection exists with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t37" headers="r1c1-t37">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t37 r1c2-t37">
<p>Query to execute to populate the members of the collection. If p_query is numeric, it is assumed to be a DBMS_SQL cursor.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t37" headers="r1c1-t37">
<p><code>p_generate_md5</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t37 r1c2-t37">
<p>Valid values include <code>YES</code> and <code>NO</code>. <code>YES</code> to specify if the message digest of the data of the collection member should be computed. Use this parameter to compare the MD5 of the collection member with another member or to see if that member has changed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI724"></a>Example</p>
<p>The following example shows how to use the <code>CREATE_COLLECTION_FROM_QUERY</code> procedure to create a collection named <code>AUTO</code> and populate it with data from the <code>AUTOS</code> table. Because <code>p_generate_md5</code> is &#39;<code>YES</code>&#39;, the <code>MD5</code> checksum is computed to allow comparisons to determine change status.</p>
<pre>Begin
    l_query := &#39;select make, model, year from AUTOS&#39;;
    APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY (
        p_collection_name =&gt; &#39;AUTO&#39;, 
        p_query =&gt; l_query,
        p_generate_md5 =&gt; &#39;YES&#39;);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJADHJCJ">&#34;CREATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a>, <a href="#CJAEDIIB">&#34;CREATE_COLLECTION_FROM_QUERY2 Procedure&#34;</a>, <a href="#CJAHBBGD">&#34;CREATE_COLLECTION_FROM_QUERY_B Procedure&#34;</a>, <a href="#CJACABGE">&#34;CREATE_COLLECTION_FROM_QUERYB2 Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAEDIIB"></a>
<div id="AEAPI725" class="refsect1">
<h2 class="refsect1"><a id="sthref106"></a>CREATE_COLLECTION_FROM_QUERY2 Procedure</h2>
<p>Use this procedure to create a collection from a supplied query. This method is identical to <code>CREATE_COLLECTION_FROM_QUERY</code>, however, the first 5 columns of the <code>SELECT</code> clause must be numeric and the next 5 must be date. After the numeric and date columns, there can be up to 50 character columns in the <code>SELECT</code> clause. The query is parsed as the application owner. If a collection exists with the same name for the current user in the same session for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI726"></a>Syntax</p>
<pre>APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY2 (
    p_collection_name IN VARCHAR2,
    p_query IN VARCHAR2,
    p_generate_md5 IN VARCHAR2 default &#39;NO&#39;);
</pre>
<p class="subhead2"><a id="AEAPI727"></a>Parameters</p>
<p><a href="#CJAFHADH">Table 4-10</a> describes the parameters available in the <code>CREATE_COLLECTION_FROM_QUERY2</code> procedure.</p>
<div id="AEAPI728" class="tblformal">
<p class="titleintable"><a id="sthref107"></a><a id="CJAFHADH"></a>Table 4-10 CREATE_COLLECTION_FROM_QUERY2 Procedure Parameters</p>
<table class="cellalignment3315" title="CREATE_COLLECTION_FROM_QUERY2 Procedure Parameters" summary="This table describes the parameters available in the CREATE_COLLECTION_FROM_QUERY2 procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t39">Parameter</th>
<th class="cellalignment3316" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t39" headers="r1c1-t39">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t39 r1c2-t39">
<p>The name of the collection. The maximum length is 255 characters. An error is returned if this collection exists with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t39" headers="r1c1-t39">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t39 r1c2-t39">
<p>Query to execute to populate the members of the collection. If p_query is numeric, it is assumed to be a DBMS_SQL cursor.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t39" headers="r1c1-t39">
<p><code>p_generate_md5</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t39 r1c2-t39">
<p>Valid values include <code>YES</code> and <code>NO</code>. <code>YES</code> to specify if the message digest of the data of the collection member should be computed. Use this parameter to compare the MD5 of the collection member with another member or to see if that member has changed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI729"></a>Example</p>
<p>The following example shows how to use the <code>CREATE_COLLECTION_FROM_QUERY2</code> procedure to create a collection named <code>EMPLOYEE</code> and populate it with data from the <code>EMP</code> table. The first five columns (mgr, sal, comm, deptno, and null) are all numeric. Because p_generate_md5 is &#39;<code>NO</code>&#39;, the <code>MD5</code> checksum is not computed.</p>
<pre>begin;
    APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY2 (
        p_collection_name =&gt; &#39;EMPLOYEE&#39;, 
        p_query =&gt; &#39;select empno, sal, comm, deptno, null, hiredate, null, null, null, null, ename, job, mgr from emp&#39;,
        p_generate_md5 =&gt; &#39;NO&#39;);
end;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJADHJCJ">&#34;CREATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGHAJD">&#34;CREATE_COLLECTION_FROM_QUERY Procedure&#34;</a>, <a href="#CJAHBBGD">&#34;CREATE_COLLECTION_FROM_QUERY_B Procedure&#34;</a>, <a href="#CJACABGE">&#34;CREATE_COLLECTION_FROM_QUERYB2 Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAHBBGD"></a>
<div id="AEAPI730" class="refsect1">
<h2 class="refsect1"><a id="sthref108"></a>CREATE_COLLECTION_FROM_QUERY_B Procedure</h2>
<p>Use this procedure to create a collection from a supplied query using bulk operations. This method offers significantly faster performance than the <code>CREATE_COLLECTION_FROM_QUERY</code> method. The query is parsed as the application owner. If a collection exists with the same name for the current user in the same session for the current Application ID, an application error is raised.</p>
<p>This procedure uses bulk dynamic SQL to perform the fetch and insert operations into the named collection. Two limitations are imposed by this procedure:</p>
<ol>
<li>
<p>The MD5 checksum for the member data is not computed.</p>
</li>
<li>
<p>No column value in query p_query can exceed 2,000 bytes. If a row is encountered that has a column value of more than 2,000 bytes, an error is raised during execution. In Oracle Database 11g Release 2 (11.2.0.1) or later, this column limit is 4,000 bytes.</p>
</li>
</ol>
<p class="subhead2"><a id="AEAPI731"></a>Syntax</p>
<pre>APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY_B (
    p_collection_name IN VARCHAR2,
    p_query IN VARCHAR2.
    p_names IN apex_application_global.vc_arr2 DEFAULT,
    p_values IN apex_applicatioN_globa.vc_arr2 DEFAULT,
    p_max_row_count IN NUMBER DEFAULT);
</pre>
<p class="subhead2"><a id="AEAPI732"></a>Parameters</p>
<p><a href="#CJAEHJFH">Table 4-11</a> describes the parameters available in the <code>CREATE_COLLECTION_FROM_QUERY</code>_B procedure.</p>
<div id="AEAPI733" class="tblformal">
<p class="titleintable"><a id="sthref109"></a><a id="CJAEHJFH"></a>Table 4-11 CREATE_COLLECTION_FROM_QUERY_B Procedure Parameters</p>
<table class="cellalignment3315" title="CREATE_COLLECTION_FROM_QUERY_B Procedure Parameters" summary="This table describes the parameters available in the CREATE_COLLECTION_FROM_QUERY_B procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t41">Parameter</th>
<th class="cellalignment3316" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t41" headers="r1c1-t41">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t41 r1c2-t41">
<p>The name of the collection. The maximum length is 255 characters. An error is returned if this collection exists with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t41" headers="r1c1-t41">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t41 r1c2-t41">
<p>Query to execute to populate the members of the collection. If p_query is numeric, it is assumed to be a DBMS_SQL cursor.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t41" headers="r1c1-t41">
<p><code>p_names</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t41 r1c2-t41">
<p>Array of bind variable names used in the query statement.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t41" headers="r1c1-t41">
<p><code>p_values</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t41 r1c2-t41">
<p>Array of bind variable values used in the bind variables in the query statement.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t41" headers="r1c1-t41">
<p><code>p_max_row_count</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t41 r1c2-t41">
<p>Maximum number of rows returned from the query in p_query which should be added to the collection.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI734"></a>Example</p>
<p>The following examples shows how to use the <code>CREATE_COLLECTION_FROM_QUERY_B</code> procedure to create a collection named <code>AUTO</code> and populate it with data from the <code>AUTOS</code> table.</p>
<pre>Begin
    l_query := &#39;select make, model, year from AUTOS&#39;;
    APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY_B (
        p_collection_name =&gt; &#39;AUTO&#39;, 
        p_query =&gt; l_query);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJADHJCJ">&#34;CREATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGHAJD">&#34;CREATE_COLLECTION_FROM_QUERY Procedure&#34;</a>, <a href="#CJAEDIIB">&#34;CREATE_COLLECTION_FROM_QUERY2 Procedure&#34;</a>, <a href="#CJACABGE">&#34;CREATE_COLLECTION_FROM_QUERYB2 Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJACABGE"></a>
<div id="AEAPI735" class="refsect1">
<h2 class="refsect1"><a id="sthref110"></a>CREATE_COLLECTION_FROM_QUERYB2 Procedure</h2>
<p>Use this procedure to create a collection from a supplied query using bulk operations. This method offers significantly faster performance than the <code>CREATE_COLLECTION_FROM_QUERY_2</code> method. The query is parsed as the application owner. If a collection exists with the same name for the current user in the same session for the current Application ID, an application error is raised. It is identical to the <code>CREATE_COLLECTION_FROM_QUERY_B</code>, however, the first five columns of the <code>SELECT</code> clause must be numeric and the next five columns must be date. After the date columns, there can be up to 50 character columns in the <code>SELECT</code> clause</p>
<p>This procedure uses bulk dynamic SQL to perform the fetch and insert operations into the named collection. Two limitations are imposed by this procedure:</p>
<ol>
<li>
<p>The MD5 checksum for the member data is not computed.</p>
</li>
<li>
<p>No column value in query p_query can exceed 2,000 bytes. If a row is encountered that has a column value of more than 2,000 bytes, an error is raised during execution. In Oracle Database 11g Release 2 (11.2.0.1) or later, this column limit is 4,000 bytes.</p>
</li>
</ol>
<p class="subhead2"><a id="AEAPI736"></a>Syntax</p>
<pre>APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERYB2 (
    p_collection_name IN VARCHAR2,
    p_query IN VARCHAR2.
    p_names IN apex_application_global.vc_arr2 DEFAULT,
    p_values IN apex_applicatioN_globa.vc_arr2 DEFAULT,
    p_max_row_count IN NUMBER DEFAULT);
</pre>
<p class="subhead2"><a id="AEAPI737"></a>Parameters</p>
<p><a href="#CACEJAJJ">Table 4-12</a> describes the parameters available in the <code>CREATE_COLLECTION_FROM_QUERY</code>B2 procedure.</p>
<div id="AEAPI2205" class="tblformal">
<p class="titleintable"><a id="sthref111"></a><a id="CACEJAJJ"></a>Table 4-12 CREATE_COLLECTION_FROM_QUERYB2 Procedure Parameters</p>
<table class="cellalignment3315" title="CREATE_COLLECTION_FROM_QUERYB2 Procedure Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t43">Parameter</th>
<th class="cellalignment3316" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t43" headers="r1c1-t43">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t43 r1c2-t43">
<p>The name of the collection. The maximum length is 255 characters. An error is returned if this collection exists with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t43" headers="r1c1-t43">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t43 r1c2-t43">
<p>Query to execute to populate the members of the collection. If p_query is numeric, it is assumed to be a DBMS_SQL cursor.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t43" headers="r1c1-t43">
<p><code>p_names</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t43 r1c2-t43">
<p>Array of bind variable names used in the query statement.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t43" headers="r1c1-t43">
<p><code>p_values</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t43 r1c2-t43">
<p>Array of bind variable values used in the bind variables in the query statement.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t43" headers="r1c1-t43">
<p><code>p_max_row_count</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t43 r1c2-t43">
<p>Maximum number of rows returned from the query in p_query which should be added to the collection.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI739"></a>Example</p>
<p>The following example shows how to use the <code>CREATE_COLLECTION_FROM_QUERYB2</code> procedure to create a collection named <code>EMPLOYEES</code> and populate it with data from the <code>EMP</code> table. The first five columns (mgr, sal, comm, deptno, and null) are all numeric and the next five are all date. Because p_generate_md5 is &#39;<code>NO</code>&#39;, the <code>MD5</code> checksum is not computed.</p>
<pre>Begin
    l_query := &#39;select empno, sal, comm, deptno, null, hiredate, null, null, null, null, ename, job, mgr from emp&#39;;
    APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERYB2 (
        p_collection_name =&gt; &#39;EMPLOYEES&#39;, 
        p_query =&gt; l_query,
        p_generate_md5 =&gt; &#39;NO&#39;);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIFADF">&#34;GET_MEMBER_MD5 Function&#34;</a>, <a href="#CJADHJCJ">&#34;CREATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a>, <a href="#CJAGHAJD">&#34;CREATE_COLLECTION_FROM_QUERY Procedure&#34;</a>, <a href="#CJAEDIIB">&#34;CREATE_COLLECTION_FROM_QUERY2 Procedure&#34;</a>, <a href="#CJAHBBGD">&#34;CREATE_COLLECTION_FROM_QUERY_B Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAJAJBD"></a>
<div id="AEAPI740" class="refsect1">
<h2 class="refsect1"><a id="sthref112"></a>DELETE_ALL_COLLECTIONS Procedure</h2>
<p>Use this procedure to delete all collections that belong to the current user in the current Application Express session for the current Application ID.</p>
<p class="subhead2"><a id="AEAPI741"></a>Syntax</p>
<pre>APEX_COLLECTION.DELETE_ALL_COLLECTIONS;
</pre>
<p class="subhead2"><a id="AEAPI742"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI743"></a>Example</p>
<p>This example shows how to use the <code>DELETE_ALL_COLLECTIONS</code> procedure to remove all collections that belong to the current user in the current session and Application ID.</p>
<pre>Begin
    APEX_COLLECTION.DELETE_ALL_COLLECTIONS;
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJAJBD">&#34;DELETE_ALL_COLLECTIONS Procedure&#34;</a>, <a href="#CJAHDJIE">&#34;DELETE_COLLECTION Procedure&#34;</a>, <a href="#CJAIIAAJ">&#34;DELETE_MEMBER Procedure&#34;</a>, <a href="#CJAIBDII">&#34;DELETE_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAIJBCI"></a>
<div id="AEAPI744" class="refsect1">
<h2 class="refsect1"><a id="sthref113"></a>DELETE_ALL_COLLECTIONS_SESSION Procedure</h2>
<p>Use this procedure to delete all collections that belong to the current user in the current Application Express session regardless of the Application ID.</p>
<p class="subhead2"><a id="AEAPI745"></a>Syntax</p>
<pre>APEX_COLLECTION.DELETE_ALL_COLLECTIONS_SESSION;
</pre>
<p class="subhead2"><a id="AEAPI746"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI747"></a>Example</p>
<p>This example shows how to use the <code>DELETE_ALL_COLLECTIONS_SESSION</code> procedure to remove all collections that belong to the current user in the current session regardless of Application ID.</p>
<pre>Begin
    APEX_COLLECTION.DELETE_ALL_COLLECTIONS_SESSION;
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJAJBD">&#34;DELETE_ALL_COLLECTIONS Procedure&#34;</a>, <a href="#CJAHDJIE">&#34;DELETE_COLLECTION Procedure&#34;</a>, <a href="#CJAIIAAJ">&#34;DELETE_MEMBER Procedure&#34;</a>, <a href="#CJAIBDII">&#34;DELETE_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAHDJIE"></a>
<div id="AEAPI748" class="refsect1">
<h2 class="refsect1"><a id="sthref114"></a>DELETE_COLLECTION Procedure</h2>
<p>Use this procedure to delete a named collection. All members that belong to the collection are removed and the named collection is dropped. If the named collection does not exist for the same user in the current session for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI749"></a>Syntax</p>
<pre>APEX_COLLECTION.DELETE_COLLECTION (
    p_collection_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI750"></a>Parameters</p>
<p><a href="#CJADACGH">Table 4-13</a> describes the parameters available in the <code>DELETE_COLLECTION</code> procedure.</p>
<div id="AEAPI751" class="tblformal">
<p class="titleintable"><a id="sthref115"></a><a id="CJADACGH"></a>Table 4-13 DELETE_COLLECTION Procedure Parameters</p>
<table class="cellalignment3315" title="DELETE_COLLECTION Procedure Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t47">Parameter</th>
<th class="cellalignment3316" id="r1c2-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t47" headers="r1c1-t47">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t47 r1c2-t47">
<p>The name of the collection to remove all members from and drop. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI752"></a>Example</p>
<p>This example shows how to use the <code>DELETE_COLLECTION</code> procedure to remove the &#39;<code>EMPLOYEE</code>&#39; collection.</p>
<pre>Begin
    APEX_COLLECTION.DELETE_COLLECTION(
        p_collection_name =&gt; &#39;EMPLOYEE&#39;);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIJBCI">&#34;DELETE_ALL_COLLECTIONS_SESSION Procedure&#34;</a>, <a href="#CJAJAJBD">&#34;DELETE_ALL_COLLECTIONS Procedure&#34;</a>, <a href="#CJAIIAAJ">&#34;DELETE_MEMBER Procedure&#34;</a>, <a href="#CJAIBDII">&#34;DELETE_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAIIAAJ"></a>
<div id="AEAPI753" class="refsect1">
<h2 class="refsect1"><a id="sthref116"></a>DELETE_MEMBER Procedure</h2>
<p>Use this procedure to delete a specified member from a given named collection. If the named collection does not exist for the same user in the current session for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI754"></a>Syntax</p>
<pre>APEX_COLLECTION.DELETE_MEMBER (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI755"></a>Parameters</p>
<p><a href="#CJAJCCCF">Table 4-14</a> describes the parameters available in the <code>DELETE_MEMBER</code> procedure.</p>
<div id="AEAPI756" class="tblformal">
<p class="titleintable"><a id="sthref117"></a><a id="CJAJCCCF"></a>Table 4-14 DELETE_MEMBER Parameters</p>
<table class="cellalignment3315" title="DELETE_MEMBER Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t49">Parameter</th>
<th class="cellalignment3316" id="r1c2-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t49" headers="r1c1-t49">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t49 r1c2-t49">
<p>The name of the collection to delete the specified member from. The maximum length is 255 characters. Collection names are not case sensitive and are converted to upper case. An error is returned if this collection does not exist for the current user in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t49" headers="r1c1-t49">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t49 r1c2-t49">
<p>This is the sequence ID of the collection member to be deleted.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI757"></a>Example</p>
<p>This example shows how to use the <code>DELETE_MEMBER</code> procedure to remove the member with a sequence ID of &#39;2&#39; from the collection named <code>EMPLOYEES</code>.</p>
<pre>Begin
    APEX_COLLECTION.DELETE_MEMBER(
        p_collection_name =&gt; &#39;EMPLOYEES&#39;,
        p_seq =&gt; &#39;2&#39;);
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIJBCI">&#34;DELETE_ALL_COLLECTIONS_SESSION Procedure&#34;</a>, <a href="#CJAJAJBD">&#34;DELETE_ALL_COLLECTIONS Procedure&#34;</a>, <a href="#CJAHDJIE">&#34;DELETE_COLLECTION Procedure&#34;</a>, <a href="#CJAIBDII">&#34;DELETE_MEMBERS Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAIBDII"></a>
<div id="AEAPI758" class="refsect1">
<h2 class="refsect1"><a id="sthref118"></a>DELETE_MEMBERS Procedure</h2>
<p>Use this procedure to delete all members from a given named collection where the attribute specified by the attribute number equals the supplied value. If the named collection does not exist for the same user in the current session for the current Application ID, an application error is raised. If the attribute number specified is invalid or outside the range of 1 to 50, an error is raised.</p>
<p>If the supplied attribute value is null, then all members of the named collection are deleted where the attribute, specified by <code>p_attr_number</code>, is null.</p>
<p class="subhead2"><a id="AEAPI759"></a>Syntax</p>
<pre>APEX_COLLECTION.DELETE_MEMBERS (
    p_collection_name IN VARCHAR2,
    p_attr_number IN VARCHAR2,
    p_attr_value IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI760"></a>Parameters</p>
<p><a href="#CJAJCCCF">Table 4-14</a> describes the parameters available in the <code>DELETE_MEMBERS</code> procedure.</p>
<div id="AEAPI761" class="tblformal">
<p class="titleintable"><a id="sthref119"></a><a id="sthref120"></a>Table 4-15 DELETE_MEMBERS Parameters</p>
<table class="cellalignment3315" title="DELETE_MEMBERS Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t51">Parameter</th>
<th class="cellalignment3316" id="r1c2-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t51" headers="r1c1-t51">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t51 r1c2-t51">
<p>The name of the collection to delete the specified members from. The maximum length is 255 characters. Collection names are not case sensitive and are converted to upper case. An error is returned if this collection does not exist for the current user in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t51" headers="r1c1-t51">
<p><code>p_attr_number</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t51 r1c2-t51">
<p>Attribute number of the member attribute used to match for the specified attribute value for deletion. Valid values are 1 through 50 and null.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t51" headers="r1c1-t51">
<p><code>p_attr_value</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t51 r1c2-t51">
<p>Attribute value of the member attribute used to match for deletion. Maximum length can be 4,000 bytes. The attribute value is truncated to 4,000 bytes if greater than this amount.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI762"></a>Example</p>
<p>The following example deletes all members of the collection named &#39;GROCERIES&#39; where the 5th character attribute is equal to &#39;APPLE&#39;.</p>
<pre>Begin
    apex_collection.delete_members( 
        p_collection_name =&gt; &#39;GROCERIES&#39;
        p_attr_number     =&gt; 5,
        p_attr_value      =&gt; &#39;APPLE&#39; );
    Commit;
End;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIJBCI">&#34;DELETE_ALL_COLLECTIONS_SESSION Procedure&#34;</a>, <a href="#CJAJAJBD">&#34;DELETE_ALL_COLLECTIONS Procedure&#34;</a>, <a href="#CJAHDJIE">&#34;DELETE_COLLECTION Procedure&#34;</a>, <a href="#CJAIIAAJ">&#34;DELETE_MEMBER Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAIFADF"></a>
<div id="AEAPI763" class="refsect1">
<h2 class="refsect1"><a id="sthref121"></a>GET_MEMBER_MD5 Function</h2>
<p>Use this function to compute and return the message digest of the attributes for the member specified by the sequence ID. This computation of message digest is equal to the computation performed natively by collections. Thus, the result of this function could be compared to the <code>MD5_ORIGINAL</code> column of the view wwv_flow_collections.</p>
<p>If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI764"></a>Syntax</p>
<pre>APEX_COLLECTION.GET_MEMBER_MD5 (
    p_collection_name IN VARCHAR2,
    p_seq IN NUMBER)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI765"></a>Parameters</p>
<p><a href="#CJADEHDF">Table 4-16</a> describes the parameters available in the <code>GET_MEMBER_MD5</code> function.</p>
<div id="AEAPI766" class="tblformal">
<p class="titleintable"><a id="sthref122"></a><a id="CJADEHDF"></a>Table 4-16 GET_MEMBER_MD5 Parameters</p>
<table class="cellalignment3315" title="GET_MEMBER_MD5 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t53">Parameter</th>
<th class="cellalignment3316" id="r1c2-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t53" headers="r1c1-t53">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t53 r1c2-t53">
<p>The name of the collection to add this array of members to. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t53" headers="r1c1-t53">
<p>p_seq</p>
</td>
<td class="cellalignment3317" headers="r3c1-t53 r1c2-t53">
<p>Sequence ID of the collection member.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI767"></a>Example</p>
<p>The following example computes the MD5 for the 5th member of the GROCERIES collection.</p>
<pre>declare
    l_md5 varchar2(4000);
begin
    l_md5 := apex_collection.get_member_md5( 
        p_collection_name =&gt; &#39;GROCERIES&#39;
        p_seq             =&gt; 10 );
end;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAIJBBI">&#34;COLLECTION_HAS_CHANGED Function&#34;</a>, <a href="#CJADHAAJ">&#34;RESET_COLLECTION_CHANGED Procedure&#34;</a>, <a href="#CJAFIBJG">&#34;RESET_COLLECTION_CHANGED_ALL Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAJBDCF"></a>
<div id="AEAPI768" class="refsect1">
<h2 class="refsect1"><a id="sthref123"></a>MERGE_MEMBERS Procedure</h2>
<p>Use this procedure to merge members of the given named collection with the values passed in the arrays. If the named collection does not exist one is created. If a p_init_query is provided, the collection is created from the supplied SQL query. If the named collection exists, the following occurs:</p>
<ol>
<li>
<p>Rows in the collection and not in the arrays are deleted.</p>
</li>
<li>
<p>Rows in the collections and in the arrays are updated.</p>
</li>
<li>
<p>Rows in the arrays and not in the collection are inserted.</p>
</li>
</ol>
<p>The count of elements in the p_c001 PL/SQL table is used as the total number of items across all PL/SQL tables. For example, if p_c001.count is 2 and p_c002.count is 10, only 2 members are merged. If p_c001 is null an application error is raised.</p>
<p class="subhead2"><a id="AEAPI769"></a>Syntax</p>
<pre>APEX_COLLECTION.MERGE_MEMBERS (
    p_collection_name IN VARCHAR2,
    p_seq  IN APEX_APPLICATION_GLOBAL.VC_ARR2 DEFAULT empty_vc_arr,
    p_c001 IN APEX_APPLICATION_GLOBAL.VC_ARR2 DEFAULT empty_vc_arr,
    p_c002 IN APEX_APPLICATION_GLOBAL.VC_ARR2 DEFAULT empty_vc_arr,
    p_c003 IN APEX_APPLICATION_GLOBAL.VC_ARR2 DEFAULT empty_vc_arr,
    ...
    p_c050 IN APEX_APPLICATION_GLOBAL.VC_ARR2 DEFAULT empty_vc_arr,
    p_null_index  IN NUMBER DEFAULT 1,
    p_null_value  IN VARCHAR2 DEFAULT null,
    p_init_query  IN VARCHAR2 DEFAULT null);
</pre>
<p class="subhead2"><a id="AEAPI770"></a>Parameters</p>
<p><a href="#CJAGACGH">Table 4-17</a> describes the parameters available in the <code>MERGE_MEMBERS</code> procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI771" class="tblformal">
<p class="titleintable"><a id="sthref124"></a><a id="CJAGACGH"></a>Table 4-17 MERGE_MEMBERS Procedure Parameters</p>
<table class="cellalignment3315" title="MERGE_MEMBERS Procedure Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t56">Parameter</th>
<th class="cellalignment3316" id="r1c2-t56">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t56" headers="r1c1-t56">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t56 r1c2-t56">
<p>The name of the collection. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t56" headers="r1c1-t56">
<p><code>p_c001 through p_c050</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t56 r1c2-t56">
<p>Array of attribute values to be merged. Maximum length is 4,000 bytes. Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. The count of the p_c001 array is used across all arrays. If no values are provided then no actions are performed.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t56" headers="r1c1-t56">
<p><code>p_c0xx</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t56 r1c2-t56">
<p>Attribute of NN attributes values to be merged. Maximum length can be 4,000 bytes. The attribute value is truncated to 4,000 bytes if greater than this amount.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t56" headers="r1c1-t56">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t56 r1c2-t56">
<p>Identifies the sequence number of the collection to be merged.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t56" headers="r1c1-t56">
<p><code>p_null_index</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t56 r1c2-t56">
<p>That is if the element identified by this value is null, then treat this row as a null row. For example, if p_null_index is 3, then p_c003 is treated as a null row. In other words, tell the merge function to ignore this row. This results in the null rows being removed from the collection. The null index works with the null value. If the value of the <code>p_cXXX</code> argument is equal to the p_null_value then the row is treated as null.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t56" headers="r1c1-t56">
<p>p_null_value</p>
</td>
<td class="cellalignment3317" headers="r7c1-t56 r1c2-t56">
<p>Used with the p_null_index argument. Identifies the null value. If used, this value must not be null. A typical value for this argument is &#34;0&#34;</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t56" headers="r1c1-t56">
<p>p_init_query</p>
</td>
<td class="cellalignment3317" headers="r8c1-t56 r1c2-t56">
<p>If the collection does not exist, the collection is created using this query.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI772"></a>Example</p>
<p>The following example creates a collection on the table of employees, and then merges the contents of the local arrays with the collection, updating the job of two employees.</p>
<pre>DECLARE
    l_seq   APEX_APPLICATION_GLOBAL.VC_ARR2;
    l_c001  APEX_APPLICATION_GLOBAL.VC_ARR2;
    l_c002  APEX_APPLICATION_GLOBAL.VC_ARR2;
    l_c003  APEX_APPLICATION_GLOBAL.VC_ARR2;
BEGIN
    l_seq(1)  := 1;
    l_c001(1) := 7369;
    l_c002(1) := &#39;SMITH&#39;;
    l_c003(1) := &#39;MANAGER&#39;;
    l_seq(2)  := 2;
    l_c001(2) := 7499;
    l_c002(2) := &#39;ALLEN&#39;;
    l_c003(2) := &#39;CLERK&#39;;
 
    APEX_COLLECTION.MERGE_MEMBERS(
        p_collection_name =&gt; &#39;EMPLOYEES&#39;,
        p_seq =&gt; l_seq,
        p_c001 =&gt; l_c001,
        p_c002 =&gt; l_c002,
        p_c003 =&gt; l_c003,
        p_init_query =&gt; &#39;select empno, ename, job from emp order by empno&#39;);
END;
</pre>
<a id="CJAJGIBF"></a>
<div id="AEAPI773" class="refsect1">
<h2 class="refsect1"><a id="sthref125"></a>MOVE_MEMBER_DOWN Procedure</h2>
<p>Use this procedure to adjust the sequence ID of specified member in the given named collection down by one (subtract one), swapping sequence ID with the one it is replacing. For example, 3 becomes 2 and 2 becomes 3. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the member specified by sequence ID p_seq is the lowest sequence in the collection, an application error is NOT returned.</p>
<p class="subhead2"><a id="AEAPI774"></a>Syntax</p>
<pre>APEX_COLLECTION.MOVE_MEMBER_DOWN (
    p_collection_name IN VARCHAR2,
    p_seq IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI775"></a>Parameters</p>
<p><a href="#CJADCJJB">Table 4-19</a> describes the parameters available in the <code>MOVE_MEMBER_DOWN</code> procedure.</p>
<div id="AEAPI776" class="tblformal">
<p class="titleintable"><a id="sthref126"></a><a id="sthref127"></a>Table 4-18 MOVE_MEMBER_DOWN Parameters</p>
<table class="cellalignment3315" title="MOVE_MEMBER_DOWN Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t57">Parameter</th>
<th class="cellalignment3316" id="r1c2-t57">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t57" headers="r1c1-t57">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t57 r1c2-t57">
<p>The name of the collection. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case. An error is returned if this collection does not exist with the specified name of the current user in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t57" headers="r1c1-t57">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t57 r1c2-t57">
<p>Identifies the sequence number of the collection member to be moved down by one.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI777"></a>Example</p>
<p>This example shows how to a member of the <code>EMPLOYEES</code> collection down one position. After executing this example, sequence ID &#39;5&#39; becomes sequence ID &#39;4&#39; and sequence ID &#39;4&#39; becomes sequence ID &#39;5&#39;.</p>
<pre>BEGIN;
    APEX_COLLECTION.MOVE_MEMBER_DOWN( 
        p_collection_name =&gt; &#39;EMPLOYEES&#39;,
        p_seq =&gt; &#39;5&#39; );
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAHIDAJ">&#34;MOVE_MEMBER_UP Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAHIDAJ"></a>
<div id="AEAPI778" class="refsect1">
<h2 class="refsect1"><a id="sthref128"></a>MOVE_MEMBER_UP Procedure</h2>
<p>Use this procedure to adjust the sequence ID of specified member in the given named collection up by one (add one), swapping sequence ID with the one it is replacing. For example, 2 becomes 3 and 3 becomes 2. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the member specified by sequence ID p_seq is the highest sequence in the collection, an application error is not returned.</p>
<p class="subhead2"><a id="AEAPI779"></a>Syntax</p>
<pre>APEX_COLLECTION.MOVE_MEMBER_UP (
    p_collection_name IN VARCHAR2,
    p_seq IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI780"></a>Parameters</p>
<p><a href="#CJADCJJB">Table 4-19</a> describes the parameters available in the <code>MOVE_MEMBER_UP</code> procedure.</p>
<div id="AEAPI781" class="tblformal">
<p class="titleintable"><a id="sthref129"></a><a id="CJADCJJB"></a>Table 4-19 MOVE_MEMBER_UP Parameters</p>
<table class="cellalignment3315" title="MOVE_MEMBER_UP Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t59">Parameter</th>
<th class="cellalignment3316" id="r1c2-t59">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t59" headers="r1c1-t59">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t59 r1c2-t59">
<p>The name of the collection. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case. An error is returned if this collection does not exist with the specified name of the current user in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t59" headers="r1c1-t59">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t59 r1c2-t59">
<p>Identifies the sequence number of the collection member to be moved up by one.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI782"></a>Example</p>
<p>This example shows how to a member of the <code>EMPLOYEES</code> collection down one position. After executing this example, sequence ID &#39;5&#39; becomes sequence ID &#39;6&#39; and sequence ID &#39;6&#39; becomes sequence ID &#39;5&#39;.</p>
<pre>BEGIN;
    APEX_COLLECTION.MOVE_MEMBER_UP( 
        p_collection_name =&gt; &#39;EMPLOYEES&#39;,
        p_seq =&gt; &#39;5&#39; );
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJGIBF">&#34;MOVE_MEMBER_DOWN Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAFCEEA"></a>
<div id="AEAPI783" class="refsect1">
<h2 class="refsect1"><a id="sthref130"></a>RESEQUENCE_COLLECTION Procedure</h2>
<p>For a named collection, use this procedure to update the <code>seq_id</code> value of each member so that no gaps exist in the sequencing. For example, a collection with the following set of sequence IDs (1,2,3,5,8,9) becomes (1,2,3,4,5,6). If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI784"></a>Syntax</p>
<pre>APEX_COLLECTION.RESEQUENCE_COLLECTION (
    p_collection_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI785"></a>Parameters</p>
<p><a href="#CJAEJIIG">Table 4-20</a> describes the parameters available in the <code>RESEQUENCE_COLLECTION</code> procedure.</p>
<div id="AEAPI786" class="tblformal">
<p class="titleintable"><a id="sthref131"></a><a id="CJAEJIIG"></a>Table 4-20 RESEQUENCE_COLLECTION Parameters</p>
<table class="cellalignment3315" title="RESEQUENCE_COLLECTION Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t61">Parameter</th>
<th class="cellalignment3316" id="r1c2-t61">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t61" headers="r1c1-t61">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t61 r1c2-t61">
<p>The name of the collection to resequence. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI787"></a>Example</p>
<p>This example shows how to resequence the <code>DEPARTMENTS</code> collection to remove gaps in the sequence IDs.</p>
<pre>BEGIN;
    APEX_COLLECTION.RESEQUENCE_COLLECTION (
        p_collection_name =&gt; &#39;DEPARTMENTS&#39;);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJGIBF">&#34;MOVE_MEMBER_DOWN Procedure&#34;</a>, <a href="#CJAHIDAJ">&#34;MOVE_MEMBER_UP Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJADHAAJ"></a>
<div id="AEAPI788" class="refsect1">
<h2 class="refsect1"><a id="sthref132"></a>RESET_COLLECTION_CHANGED Procedure</h2>
<p>Use this procedure to reset the collection changed flag (mark as not changed) for a given collection. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI789"></a>Syntax</p>
<pre>APEX_COLLECTION.RESET_COLLECTION_CHANGED (
    p_collection_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI790"></a>Parameters</p>
<p><a href="#CJAGIAEA">Table 4-21</a> describes the parameters available in the <code>RESET_COLLECTION_CHANGED</code> procedure.</p>
<div id="AEAPI791" class="tblformal">
<p class="titleintable"><a id="sthref133"></a><a id="CJAGIAEA"></a>Table 4-21 RESET_COLLECTION_CHANGED Parameters</p>
<table class="cellalignment3315" title="RESET_COLLECTION_CHANGED Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t63">Parameter</th>
<th class="cellalignment3316" id="r1c2-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t63" headers="r1c1-t63">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t63 r1c2-t63">
<p>The name of the collection to reset the collection changed flag. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI792"></a>Example</p>
<p>This example shows how to reset the changed flag for the <code>DEPARTMENTS</code> collection.</p>
<pre>BEGIN;
    APEX_COLLECTION.RESET_COLLECTION_CHANGED (
        p_collection_name =&gt; &#39;DEPARTMENTS&#39;);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAFIBJG">&#34;RESET_COLLECTION_CHANGED_ALL Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJAFIBJG"></a>
<div id="AEAPI793" class="refsect1">
<h2 class="refsect1"><a id="sthref134"></a>RESET_COLLECTION_CHANGED_ALL Procedure</h2>
<p>Use this procedure to reset the collection changed flag (mark as not changed) for all collections in the user&#39;s current session.</p>
<p class="subhead2"><a id="AEAPI794"></a>Syntax</p>
<pre>APEX_COLLECTION.RESET_COLLECTION_CHANGED_ALL; (
</pre>
<p class="subhead2"><a id="AEAPI795"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI796"></a>Example</p>
<p>This example shows how to reset the changed flag for all collections in the user&#39;s current session.</p>
<pre>BEGIN;
    APEX_COLLECTION.RESET_COLLECTION_CHANGED_ALL;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJADHAAJ">&#34;RESET_COLLECTION_CHANGED Procedure&#34;</a>.</div>
</div>
<!-- class="refsect1" -->
<a id="CJAJGIAI"></a>
<div id="AEAPI797" class="refsect1">
<h2 class="refsect1"><a id="sthref135"></a>SORT_MEMBERS Procedure</h2>
<p>Use this procedure to reorder the members of a given collection by the column number specified by p_sort_on_column_number. This sorts the collection by a particular column/attribute in the collection and reassigns the sequence IDs of each number such that no gaps exist. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI798"></a>Syntax</p>
<pre>APEX_COLLECTION.SORT_MEMBERS (
    p_collection_name IN VARCHAR2,
    p_sort_on_column_number IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI799"></a>Parameters</p>
<p><a href="#CJAJAHIC">Table 4-22</a> describes the parameters available in the <code>SORT_MEMBERS</code> procedure.</p>
<div id="AEAPI800" class="tblformal">
<p class="titleintable"><a id="sthref136"></a><a id="CJAJAHIC"></a>Table 4-22 SORT_MEMBERS Parameters</p>
<table class="cellalignment3315" title="SORT_MEMBERS Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t66">Parameter</th>
<th class="cellalignment3316" id="r1c2-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t66" headers="r1c1-t66">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t66 r1c2-t66">
<p>The name of the collection to sort. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t66" headers="r1c1-t66">
<p><code>p_sort_on_column_number</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t66 r1c2-t66">
<p>The column number used to sort the collection.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI801"></a>Example</p>
<p>In this example, column 2 of the <code>DEPARTMENTS</code> collection is the department location. The collection is reorder according to the department location.</p>
<pre>BEGIN;
    APEX_COLLECTION.SORT_MEMBERS (
        p_collection_name =&gt; &#39;DEPARTMENTS&#39;,
        p_sort_on_column_number =&gt; &#39;2&#39;;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CJADGFHA"></a>
<div id="AEAPI802" class="refsect1">
<h2 class="refsect1"><a id="sthref137"></a>TRUNCATE_COLLECTION Procedure</h2>
<p>Use this procedure to remove all members from a named collection. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI803"></a>Syntax</p>
<pre>APEX_COLLECTION.TRUNCATE_COLLECTION (
    p_collection_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI804"></a>Parameters</p>
<p><a href="#CJAJCGBF">Table 4-23</a> describes the parameters available in the <code>TRUNCATE_COLLECTION</code> procedure.</p>
<div id="AEAPI805" class="tblformal">
<p class="titleintable"><a id="sthref138"></a><a id="CJAJCGBF"></a>Table 4-23 TRUNCATE_COLLECTION Parameters</p>
<table class="cellalignment3315" title="TRUNCATE_COLLECTION Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t67">Parameter</th>
<th class="cellalignment3316" id="r1c2-t67">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t67" headers="r1c1-t67">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t67 r1c2-t67">
<p>The name of the collection to truncate. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI806"></a>Example</p>
<p>This example shows how to remove all members from the DEPARTMENTS collection.</p>
<pre>BEGIN;
    APEX_COLLECTION.TRUNCATE_COLLECTION(
        p_collection_name =&gt; &#39;DEPARTMENTS&#39;);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAGGCJD">&#34;CREATE_OR_TRUNCATE_COLLECTION Procedure&#34;</a></div>
</div>
<!-- class="refsect1" -->
<a id="CJACBDDD"></a>
<div id="AEAPI807" class="refsect1">
<h2 class="refsect1"><a id="sthref139"></a>UPDATE_MEMBER Procedure</h2>
<p>Use this procedure to update the specified member in the given named collection. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Using this procedure sets the columns identified and nullifies any columns not identified. To update specific columns, without affecting the values of other columns, use <a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>.</div>
</div>
<!-- class="refsect1" -->
<p class="subhead2"><a id="AEAPI808"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER (
    p_collection_name IN VARCHAR2,
    p_seq  IN VARCHAR2 DEFAULT NULL,
    p_c001 IN VARCHAR2 DEFAULT NULL,
    p_c002 IN VARCHAR2 DEFAULT NULL,
    p_c003 IN VARCHAR2 DEFAULT NULL,
    ...
    p_c050 IN VARCHAR DEFAULT NULL,
    p_n001 IN NUMBER DEFAULT NULL,
    p_n002 IN NUMBER DEFAULT NULL,
    p_n003 IN NUMBER DEFAULT NULL,
    p_n004 IN NUMBER DEFAULT NULL,
    p_n005 IN NUMBER DEFAULT NULL,
    p_d001 IN DATE DEFAULT NULL,
    p_d002 IN DATE DEFAULT NULL,
    p_d003 IN DATE DEFAULT NULL,
    p_d004 IN DATE DEFAULT NULL,
    p_d005 IN DATE DEFAULT NULL,   
    p_clob001 IN CLOB DEFAULT empty_clob(),
    p_blob001 IN BLOB DEFAULT empty-blob(),
    p_xmltype001 IN XMLTYPE DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI809"></a>Parameters</p>
<p><a href="#CJAJIAAE">Table 4-24</a> describes the parameters available in the <code>UPDATE_MEMBER</code> procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
<div id="AEAPI810" class="tblformal">
<p class="titleintable"><a id="sthref140"></a><a id="CJAJIAAE"></a>Table 4-24 UPDATE_MEMBER Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t71">Parameter</th>
<th class="cellalignment3316" id="r1c2-t71">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t71" headers="r1c1-t71">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t71 r1c2-t71">
<p>The name of the collection to update. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t71" headers="r1c1-t71">
<p><code>p_c001 through p_c050</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t71 r1c2-t71">
<p>Attribute value of the member to be added. Maximum length is 4,000 bytes. Any character attribute exceeding 4,000 characters is truncated to 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t71" headers="r1c1-t71">
<p><code>p_n001 through p_n005</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t71 r1c2-t71">
<p>Attribute value of the numeric attributes to be added or updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t71" headers="r1c1-t71">
<p><code>p_d001</code> through <code>p_d005</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t71 r1c2-t71">
<p>Attribute value of the date attributes to be added or updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t71" headers="r1c1-t71">
<p><code>p_clob001</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t71 r1c2-t71">
<p>Use p_clob001 for collection member attributes that exceed 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t71" headers="r1c1-t71">
<p><code>p_blob001</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t71 r1c2-t71">
<p>Use p_blob001 for binary collection member attributes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t71" headers="r1c1-t71">
<p><code>p_xmltype001</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t71 r1c2-t71">
<p>Use p_xmltype001 to store well-formed XML.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI811"></a>Example</p>
<p>Update the second member of the collection named &#39;Departments&#39;, updating the first member attribute to &#39;Engineering&#39; and the second member attribute to &#39;Sales&#39;.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_c001 =&gt; &#39;Engineering&#39;,
        p_c002 =&gt; &#39;Sales&#39;);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAJEJJC">&#34;UPDATE_MEMBERS Procedure&#34;</a></div>
<a id="CJAJEJJC"></a>
<div id="AEAPI812" class="refsect1">
<h2 class="refsect1"><a id="sthref141"></a>UPDATE_MEMBERS Procedure</h2>
<p>Use this procedure to update the array of members for the given named collection. If a collection does not exist with the specified name for the current user in the same session and for the current Application ID, an application error is raised. The count of elements in the p_seq PL/SQL table is used as the total number of items across all PL/SQL tables. That is, if p_seq.count = 2 and p_c001.count = 10, only 2 members are updated. If p_seq is null, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised.</p>
<p class="subhead2"><a id="AEAPI813"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBERS (
    p_collection_name IN VARCHAR2,
    p_seq  IN apex_application_global.VC_ARR2 DEFAULT empty_vc_arr,
    p_c001 IN apex_application_global.VC_ARR2 DEFAULT empty_vc_arr,
    p_c002 IN apex_application_global.VC_ARR2 DEFAULT empty_vc_arr,
    p_c003 IN apex_application_global.VC_ARR2 DEFAULT empty_vc_arr,
    ...
    p_c050 IN apex_application_global.VC_ARR2 DEFAULT empty_vc_arr,
    p_n001 IN apex_application_global.N_ARR DEFAULT empty_n_arr,
    p_n002 IN apex_application_global.N_ARR DEFAULT empty_n_arr,
    p_n003 IN apex_application_global.N_ARR DEFAULT empty_n_arr,
    p_n004 IN apex_application_global.N_ARR DEFAULT empty_n_arr,
    p_n005 IN apex_application_global.N_ARR DEFAULT empty_n_arr,
    p_d001 IN apex_application_global.D_ARR DEFAULT empty_d_arr,
    p_d002 IN apex_application_global.D_ARR DEFAULT empty_d_arr,
    p_d003 IN apex_application_global.D_ARR DEFAULT empty_d_arr,
    p_d004 IN apex_application_global.D_ARR DEFAULT empty_d_arr,
    p_d005 IN apex_application_global.D_ARR DEFAULT empty_d_arr)
</pre>
<p class="subhead2"><a id="AEAPI814"></a>Parameters</p>
<p><a href="#CJAIECGG">Table 4-25</a> describes the parameters available in the <code>UPDATE_MEMBERS</code> procedure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI815" class="tblformal">
<p class="titleintable"><a id="sthref142"></a><a id="CJAIECGG"></a>Table 4-25 UPDATE_MEMBERS Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBERS Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t74">Parameter</th>
<th class="cellalignment3316" id="r1c2-t74">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t74" headers="r1c1-t74">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t74 r1c2-t74">
<p>The name of the collection to update. Maximum length is 255 bytes. Collection names are not case sensitive and are converted to upper case.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t74" headers="r1c1-t74">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t74 r1c2-t74">
<p>Array of member sequence IDs to be updated. The count of the p_seq array is used across all arrays.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t74" headers="r1c1-t74">
<p><code>p_c001 through p_c050</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t74 r1c2-t74">
<p>Array of attribute values to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t74" headers="r1c1-t74">
<p><code>p_n001 through p_n005</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t74 r1c2-t74">
<p>Attribute value of numeric</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t74" headers="r1c1-t74">
<p><code>p_d001</code> through <code>p_d005</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t74 r1c2-t74">
<p>Array of date attribute values to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI816"></a>Example</p>
<pre>DECLARE
    l_seq   apex_application_global.vc_arr2;
    l_carr  apex_application_global.vc_arr2;
    l_narr  apex_application_global.n_arr;
    l_darr  apex_application_global.d_arr;
BEGIN
    l_seq(1)  := 10;
    l_seq(2)  := 15;
    l_carr(1) := &#39;Apples&#39;;
    l_carr(2) := &#39;Grapes&#39;;
    l_narr(1) := 100;
    l_narr(2) := 150;
    l_darr(1) := sysdate;
    l_darr(2) := sysdate;
 
    APEX_COLLECTION.UPDATE_MEMBERS (
        p_collection_name =&gt; &#39;Groceries&#39;,
        p_seq  =&gt; l_seq,
        p_c001 =&gt; l_carr,
        p_n001 =&gt; l_narr,
        p_d001 =&gt; l_darr);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJACBDDD">&#34;UPDATE_MEMBER Procedure&#34;</a></div>
<a id="CJAEGAAH"></a>
<div id="AEAPI817" class="refsect1">
<h2 class="refsect1"><a id="sthref143"></a>UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1</h2>
<p>Update the specified member attribute in the given named collection. If a collection does not exist with the specified name for the current user in the same session for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the attribute number specified is invalid or outside the range 1-50, an error is raised. Any attribute value exceeding 4,000 bytes are truncated to 4,000 bytes.</p>
<p class="subhead2"><a id="AEAPI818"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2,
    p_attr_number IN VARCHAR2,
    p_attr_value  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI819"></a>Parameters</p>
<p><a href="#CJABIIAD">Table 4-26</a> describes the parameters available in the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure signature 1.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI820" class="tblformal">
<p class="titleintable"><a id="sthref144"></a><a id="CJABIIAD"></a>Table 4-26 UPDATE_MEMBER_ATTRIBUTE Signature 1 Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER_ATTRIBUTE Signature 1 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t77">Parameter</th>
<th class="cellalignment3316" id="r1c2-t77">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t77" headers="r1c1-t77">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t77 r1c2-t77">
<p>The name of the collection. Maximum length can be 255 bytes. Collection_names are case-insensitive, as the collection name is converted to upper case. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t77" headers="r1c1-t77">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t77 r1c2-t77">
<p>Sequence ID of the collection member to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t77" headers="r1c1-t77">
<p><code>p_attr_number</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t77 r1c2-t77">
<p>Attribute number of the member attribute to be updated. Valid values are 1 through 50. Any number outside of this range is ignored.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t77" headers="r1c1-t77">
<p><code>p_attr_value</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t77 r1c2-t77">
<p>Attribute value of the member attribute to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI821"></a>Example</p>
<p>Update the second member of the collection named <code>&#39;Departments&#39;</code>, updating the first member attribute to <code>&#39;Engineering&#39;</code> and the second member attribute to <code>&#39;Sales&#39;</code>.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_attr_number =&gt; &#39;1&#39;,
        p_attr_value =&gt; &#39;Engineering&#39;);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEIDHI">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2&#34;</a>, <a href="#CJAHDJIC">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3&#34;</a>, <a href="#CJAFHBEF">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4&#34;</a>, <a href="#CJAJEDHH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5&#34;</a>, <a href="#CACFIHBG">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6&#34;</a></div>
<a id="CJAEIDHI"></a>
<div id="AEAPI822" class="refsect1">
<h2 class="refsect1"><a id="sthref145"></a>UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2</h2>
<p>Update the specified CLOB member attribute in the given named collection. If a collection does not exist with the specified name for the current user in the same session for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the attribute number specified is invalid or outside the valid range (currently only 1 for CLOB), an error is raised.</p>
<p class="subhead2"><a id="AEAPI823"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2,
    p_clob_number IN NUMBER,
    p_clob_value  IN CLOB);
</pre>
<p class="subhead2"><a id="AEAPI824"></a>Parameters</p>
<p><a href="#CJACEEJA">Table 4-27</a> describes the parameters available in the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure signature 2.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI825" class="tblformal">
<p class="titleintable"><a id="sthref146"></a><a id="CJACEEJA"></a>Table 4-27 UPDATE_MEMBER_ATTRIBUTE Signature 2 Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER_ATTRIBUTE Signature 2 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t80">Parameter</th>
<th class="cellalignment3316" id="r1c2-t80">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t80" headers="r1c1-t80">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t80 r1c2-t80">
<p>The name of the collection. Maximum length can be 255 bytes. Collection_names are case-insensitive, as the collection name is converted to upper case. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t80" headers="r1c1-t80">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t80 r1c2-t80">
<p>Sequence ID of the collection member to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t80" headers="r1c1-t80">
<p><code>p_clob_number</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t80 r1c2-t80">
<p>Attribute number of the CLOB member attribute to be updated. Valid value is 1. Any number outside of this range is ignored.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t80" headers="r1c1-t80">
<p><code>p_clob_value</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t80 r1c2-t80">
<p>Attribute value of the CLOB member attribute to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI826"></a>Example</p>
<p>The following example sets the first and only CLOB attribute of collection sequence number 2 in the collection named <code>&#39;Departments&#39;</code> to a value of <code>&#39;Engineering&#39;</code>.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_clob_number =&gt; &#39;1&#39;,
        p_clob_value =&gt; &#39;Engineering&#39;);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>, <a href="#CJAHDJIC">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3&#34;</a>, <a href="#CJAFHBEF">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4&#34;</a>, <a href="#CJAJEDHH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5&#34;</a>, <a href="#CACFIHBG">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6&#34;</a></div>
<a id="CJAHDJIC"></a>
<div id="AEAPI827" class="refsect1">
<h2 class="refsect1"><a id="sthref147"></a>UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3</h2>
<p>Update the specified BLOB member attribute in the given named collection. If a collection does not exist with the specified name for the current user in the same session for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the attribute number specified is invalid or outside the valid range (currently only 1 for BLOB), an error is raised.</p>
<p class="subhead2"><a id="AEAPI828"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2,
    p_blob_number IN NUMBER,
    p_blob_value  IN BLOB);
</pre>
<p class="subhead2"><a id="AEAPI829"></a>Parameters</p>
<p><a href="#CJAHJHDJ">Table 4-28</a> describes the parameters available in the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure signature 3.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI830" class="tblformal">
<p class="titleintable"><a id="sthref148"></a><a id="CJAHJHDJ"></a>Table 4-28 UPDATE_MEMBER_ATTRIBUTE Signature 3 Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER_ATTRIBUTE Signature 3 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t83">Parameter</th>
<th class="cellalignment3316" id="r1c2-t83">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t83" headers="r1c1-t83">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t83 r1c2-t83">
<p>The name of the collection. Maximum length can be 255 bytes. Collection_names are case-insensitive, as the collection name is converted to upper case. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t83" headers="r1c1-t83">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t83 r1c2-t83">
<p>Sequence ID of the collection member to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t83" headers="r1c1-t83">
<p><code>p_blob_number</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t83 r1c2-t83">
<p>Attribute number of the BLOB member attribute to be updated. Valid value is 1. Any number outside of this range is ignored.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t83" headers="r1c1-t83">
<p><code>p_blob_value</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t83 r1c2-t83">
<p>Attribute value of the BLOB member attribute to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI831"></a>Example</p>
<p>The following example sets the first and only BLOB attribute of collection sequence number 2 in the collection named <code>&#39;Departments&#39;</code> to a value of the BLOB variable <code>l_blob_content</code>.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_blob_number =&gt; &#39;1&#39;,
        p_blob_value =&gt; l_blob_content);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>, <a href="#CJAEIDHI">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2&#34;</a>, <a href="#CJAFHBEF">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4&#34;</a>, <a href="#CJAJEDHH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5&#34;</a>, <a href="#CACFIHBG">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6&#34;</a></div>
<a id="CJAFHBEF"></a>
<div id="AEAPI832" class="refsect1">
<h2 class="refsect1"><a id="sthref149"></a>UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4</h2>
<p>Update the specified XMLTYPE member attribute in the given named collection. If a collection does not exist with the specified name for the current user in the same session for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the attribute number specified is invalid or outside the valid range (currently only 1 for XMLTYPE), an error is raised.</p>
<p class="subhead2"><a id="AEAPI833"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2,
    p_xmltype_number IN NUMBER,
    p_xmltype_value  IN BLOB);
</pre>
<p class="subhead2"><a id="AEAPI834"></a>Parameters</p>
<p><a href="#CJAEHDEI">Table 4-29</a> describes the parameters available in the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure signature 4.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI835" class="tblformal">
<p class="titleintable"><a id="sthref150"></a><a id="CJAEHDEI"></a>Table 4-29 UPDATE_MEMBER_ATTRIBUTE Signature 4 Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER_ATTRIBUTE Signature 4 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t86">Parameter</th>
<th class="cellalignment3316" id="r1c2-t86">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t86" headers="r1c1-t86">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t86 r1c2-t86">
<p>The name of the collection. Maximum length can be 255 bytes. Collection_names are case-insensitive, as the collection name is converted to upper case. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t86" headers="r1c1-t86">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t86 r1c2-t86">
<p>Sequence ID of the collection member to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t86" headers="r1c1-t86">
<p><code>p_xmltype_number</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t86 r1c2-t86">
<p>Attribute number of the XMLTYPE member attribute to be updated. Valid value is 1. Any number outside of this range is ignored.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t86" headers="r1c1-t86">
<p><code>p_xmltype_value</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t86 r1c2-t86">
<p>Attribute value of the XMLTYPE member attribute to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI836"></a>Example</p>
<p>The following example sets the first and only XML attribute of collection sequence number 2 in the collection named <code>&#39;Departments&#39;</code> to a value of the XMLType variable <code>l_xmltype_content</code>.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_xmltype_number =&gt; &#39;1&#39;,
        p_xmltype_value =&gt; l_xmltype_content);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>, <a href="#CJAEIDHI">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2&#34;</a>, <a href="#CJAHDJIC">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3&#34;</a>, <a href="#CJAJEDHH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5&#34;</a>, <a href="#CACFIHBG">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6&#34;</a></div>
<a id="CJAJEDHH"></a>
<div id="AEAPI837" class="refsect1">
<h2 class="refsect1"><a id="sthref151"></a>UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5</h2>
<p>Update the specified NUMBER member attribute in the given named collection. If a collection does not exist with the specified name for the current user in the same session for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the attribute number specified is invalid or outside the valid range (currently only 1 through 5 for NUMBER), an error is raised.</p>
<p class="subhead2"><a id="AEAPI838"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2,
    p_attr_number IN NUMBER,
    p_number_value  IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI839"></a>Parameters</p>
<p><a href="#CJABIJAF">Table 4-30</a> describes the parameters available in the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure signature 5.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI840" class="tblformal">
<p class="titleintable"><a id="sthref152"></a><a id="CJABIJAF"></a>Table 4-30 UPDATE_MEMBER_ATTRIBUTE Signature 5 Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER_ATTRIBUTE Signature 5 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t89">Parameter</th>
<th class="cellalignment3316" id="r1c2-t89">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t89" headers="r1c1-t89">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t89 r1c2-t89">
<p>The name of the collection. Maximum length can be 255 bytes. Collection_names are case-insensitive, as the collection name is converted to upper case. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t89" headers="r1c1-t89">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t89 r1c2-t89">
<p>Sequence ID of the collection member to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t89" headers="r1c1-t89">
<p><code>p_attr_number</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t89 r1c2-t89">
<p>Attribute number of the NUMBER member attribute to be updated. Valid value is 1 through 5. Any number outside of this range is ignored.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t89" headers="r1c1-t89">
<p><code>p_number_value</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t89 r1c2-t89">
<p>Attribute value of the NUMBER member attribute to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI841"></a>Example</p>
<p>The following example sets the first numeric attribute of collection sequence number 2 in the collection named <code>&#39;Departments&#39;</code> to a value of 3000.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_attr_number =&gt; &#39;1&#39;,
        p_number_value =&gt; 3000);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>, <a href="#CJAEIDHI">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2&#34;</a>, <a href="#CJAHDJIC">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3&#34;</a>, <a href="#CJAFHBEF">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4&#34;</a>, <a href="#CACFIHBG">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6&#34;</a>, <a href="#CACFIHBG">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6&#34;</a></div>
<a id="CACFIHBG"></a>
<div id="AEAPI842" class="refsect1">
<h2 class="refsect1"><a id="sthref153"></a>UPDATE_MEMBER_ATTRIBUTE Procedure Signature 6</h2>
<p>Update the specified DATE member attribute in the given named collection. If a collection does not exist with the specified name for the current user in the same session for the current Application ID, an application error is raised. If the member specified by sequence ID p_seq does not exist, an application error is raised. If the attribute number specified is invalid or outside the valid range (currently only 1 through 5 for DATE), an error is raised.</p>
<p class="subhead2"><a id="AEAPI843"></a>Syntax</p>
<pre>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
    p_collection_name IN VARCHAR2,
    p_seq IN VARCHAR2,
    p_attr_number IN NUMBER,
    p_number_value  IN DATE);
</pre>
<p class="subhead2"><a id="AEAPI844"></a>Parameters</p>
<p><a href="#CJABIJAF">Table 4-30</a> describes the parameters available in the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure signature 6.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any character attribute exceeding 4,000 characters is truncated to 4,000 characters. Also, the number of members added is based on the number of elements in the first array.</div>
</div>
<!-- class="refsect1" -->
<div id="AEAPI845" class="tblformal">
<p class="titleintable"><a id="sthref154"></a><a id="sthref155"></a>Table 4-31 UPDATE_MEMBER_ATTRIBUTE Signature 6 Parameters</p>
<table class="cellalignment3315" title="UPDATE_MEMBER_ATTRIBUTE Signature 6 Parameters" summary="This table describes the available parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t92">Parameter</th>
<th class="cellalignment3316" id="r1c2-t92">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t92" headers="r1c1-t92">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t92 r1c2-t92">
<p>The name of the collection. Maximum length can be 255 bytes. Collection_names are case-insensitive, as the collection name is converted to upper case. An error is returned if this collection does not exist with the specified name of the current user and in the same session.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t92" headers="r1c1-t92">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t92 r1c2-t92">
<p>Sequence ID of the collection member to be updated.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t92" headers="r1c1-t92">
<p><code>p_attr_number</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t92 r1c2-t92">
<p>Attribute number of the DATE member attribute to be updated. Valid value is 1 through 5. Any number outside of this range is ignored.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t92" headers="r1c1-t92">
<p><code>p_number_value</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t92 r1c2-t92">
<p>Attribute value of the DATE member attribute to be updated.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI846"></a>Example</p>
<p>Update the first attribute of the second collection member in collection named <code>&#39;Departments&#39;</code>, and set it to a value of 100.</p>
<pre>BEGIN;
    APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE (
        p_collection_name =&gt; &#39;Departments&#39;,
        p_seq =&gt; &#39;2&#39;,
        p_attr_number =&gt; &#39;1&#39;,
        p_number_value =&gt; 100 );
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CJAEGAAH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 1&#34;</a>, <a href="#CJAEIDHI">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 2&#34;</a>, <a href="#CJAHDJIC">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 3&#34;</a>, <a href="#CJAFHBEF">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 4&#34;</a>, <a href="#CJAJEDHH">&#34;UPDATE_MEMBER_ATTRIBUTE Procedure Signature 5&#34;</a></div>
</div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3308">
<tr>
<td class="cellalignment3317">
<table class="cellalignment3313">
<tr>
<td class="cellalignment3312"><a href="apex_authentication.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3312"><a href="apex_css.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3319">
<table class="cellalignment3311">
<tr>
<td class="cellalignment3312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>