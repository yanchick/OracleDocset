<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1805"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/APEX_PLUGIN_UTIL"></a><title>APEX_PLUGIN_UTIL</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-05-22T14:53:20Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express API Reference"/>
<meta name="dcterms.identifier" content="E17963-07"/>
<meta name="dcterms.isVersionOf" content="AEAPI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="apex_plugin.htm" title="Previous" type="text/html"/>
<link rel="Next" href="apex_ui_default.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17963-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">23/28</span> <!-- End Header -->
<div id="AEAPI536" class="chapter"><a id="BABIBACF"></a>
<h1 class="chapter"><span class="secnum">19</span> APEX_PLUGIN_UTIL</h1>
<p>The <a id="sthref514"></a><a id="sthref515"></a><code>APEX_PLUGIN_UTIL</code> package provides utility functions that solve common problems when writing a plug-in.</p>
<p class="subhead2"><a id="AEAPI2287"></a>Topics:</p>
<ul>
<li>
<p><a href="#BABHIGEI">DEBUG_DYNAMIC _ACTION Procedure</a></p>
</li>
<li>
<p><a href="#BABJFIEE">DEBUG_PAGE_ITEM Procedure Signature 1</a></p>
</li>
<li>
<p><a href="#BABDDEHD">DEBUG_PAGE_ITEM Procedure Signature 2</a></p>
</li>
<li>
<p><a href="#BABJGJHJ">DEBUG_PROCESS Procedure</a></p>
</li>
<li>
<p><a href="#BABDFDCI">DEBUG_REGION Procedure Signature 1</a></p>
</li>
<li>
<p><a href="#BABFABDB">DEBUG_REGION Procedure Signature 2</a></p>
</li>
<li>
<p><a href="#BABIJBFI">ESCAPE Function</a></p>
</li>
<li>
<p><a href="#BABEFGFE">EXECUTE_PLSQL_CODE Procedure</a></p>
</li>
<li>
<p><a href="#BABFBIJD">GET_DATA Function Signature 1</a></p>
</li>
<li>
<p><a href="#CHDGDDGH">GET_DATA Function Signature 2</a></p>
</li>
<li>
<p><a href="#BABFJHAI">GET_DATA2 Function Signature 1</a></p>
</li>
<li>
<p><a href="#CHDCJDID">GET_DATA2 Function Signature 2</a></p>
</li>
<li>
<p><a href="#BABCJEBF">GET_DISPLAY_DATA Function Signature 1</a></p>
</li>
<li>
<p><a href="#BABEFGFF">GET_DISPLAY_DATA Function Signature 2</a></p>
</li>
<li>
<p><a href="#CHDGCBBA">GET_ELEMENT_ATTRIBUTES Function</a></p>
</li>
<li>
<p><a href="#BABDFAID">GET_PLSQL_EXPRESSION_RESULT Function</a></p>
</li>
<li>
<p><a href="#BABIAHIB">GET_PLSQL_FUNCTION_RESULT Function</a></p>
</li>
<li>
<p><a href="#BABCBEJA">GET_POSITION_IN_LIST Function</a></p>
</li>
<li>
<p><a href="#BABJIHCA">GET_SEARCH_STRING Function</a></p>
</li>
<li>
<p><a href="#BABFHCAB">IS_EQUAL Function</a></p>
</li>
<li>
<p><a href="#BABGAJFD">PAGE_ITEM_NAMES_TO_JQUERY Function</a></p>
</li>
<li>
<p><a href="#BABCIFHG">PRINT_DISPLAY_ONLY Procedure</a></p>
</li>
<li>
<p><a href="#BABIIIFB">PRINT_ESCAPED_VALUE Procedure</a></p>
</li>
<li>
<p><a href="#BABBCEEF">PRINT_HIDDEN_IF_READONLY Procedure</a></p>
</li>
<li>
<p><a href="#BABDFDDJ">PRINT_JSON_HTTP_HEADER Procedure</a></p>
</li>
<li>
<p><a href="#BABIIHDG">PRINT_LOV_AS_JSON Procedure</a></p>
</li>
<li>
<p><a href="#BABEEIAG">PRINT_OPTION Procedure</a></p>
</li>
<li>
<p><a href="#BABGHCCE">REPLACE_SUBSTITUTIONS Function</a></p>
</li>
</ul>
<div class="refentry"><a id="BABHIGEI"></a>
<div id="AEAPI1259" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DEBUG_DYNAMIC _ACTION <a id="sthref516"></a>Procedure</h2>
<p>This procedure writes the data of the dynamic action meta data to the debug output if debugging is enabled.</p>
<p class="subhead2"><a id="AEAPI1260"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.DEBUG_DYNAMIC_ACTION (
    p_plugin         IN apex_plugin.t_plugin,
    p_dynamic_action IN apex_plugin.t_dynamic_action);
</pre>
<p class="subhead2"><a id="AEAPI1261"></a>Parameters</p>
<p><a href="#BABCFHIH">Table 19-2</a> describes the parameters available in the <code>DEBUG_DYNAMIC_ACTION</code> procedure.</p>
<div id="AEAPI1262" class="tblformal">
<p class="titleintable"><a id="sthref517"></a><a id="sthref518"></a>Table 19-1 DEBUG_DYNAMIC_ACTION Parameters</p>
<table class="cellalignment3315" title="DEBUG_DYNAMIC_ACTION Parameters" summary="This table describes the parameters available in the DEBUG_DYNAMIC_ACTION procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t2">Parameter</th>
<th class="cellalignment3316" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t2" headers="r1c1-t2">
<p><code>p_plugin</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t2 r1c2-t2">
<p>This is the <code>p_plugin</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t2" headers="r1c1-t2">
<p><code>p_dynamic_action</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t2 r1c2-t2">
<p>This is the <code>p_dynamic_action</code> parameter of your plug-in function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1263"></a>Example</p>
<p>This example shows how to collect helpful debug information during the plug-in development cycle to see what values are actually passed into the rendered function or AJAX callback function of the plug-in.</p>
<pre>apex_plugin_util.debug_dynamic_action (
    p_plugin         =&gt; p_plugin,
    p_dynamic_action =&gt; p_dynamic_action );
</pre></div>
<!-- class="refsect1" -->
<a id="BABJFIEE"></a>
<div id="AEAPI1264" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DEBUG_PAGE_ITEM <a id="sthref519"></a>Procedure Signature 1</h2>
<p>This procedure writes the data of the page item meta data to the debug output if debugging is enabled.</p>
<p class="subhead2"><a id="AEAPI1265"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.DEBUG_PAGE_ITEM (
    p_plugin    IN apex_plugin.t_plugin,
    p_page_item IN apex_plugin.t_page_item);
</pre>
<p class="subhead2"><a id="AEAPI1266"></a>Parameters</p>
<p><a href="#BABCFHIH">Table 19-2</a> describes the parameters available in the <code>DEBUG_PAGE_ITEM</code> procedure.</p>
<div id="AEAPI1267" class="tblformal">
<p class="titleintable"><a id="sthref520"></a><a id="BABCFHIH"></a>Table 19-2 DEBUG_PAGE_ITEM Parameters</p>
<table class="cellalignment3315" title="DEBUG_PAGE_ITEM Parameters" summary="This table describes the parameters available in the DEBUG_PAGE_ITEM procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t3">Parameter</th>
<th class="cellalignment3316" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t3" headers="r1c1-t3">
<p><code>p_plugin</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t3 r1c2-t3">
<p>This is the <code>p_plugin</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t3" headers="r1c1-t3">
<p>p_page_item</p>
</td>
<td class="cellalignment3317" headers="r3c1-t3 r1c2-t3">
<p>This is the <code>p_page_item</code> parameter of your plug-in function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1268"></a>Example</p>
<p>This example shows how to collect helpful debug information during the plug-in development cycle to see what values are actually passed into the renderer, AJAX callback or validation function.</p>
<pre>apex_plugin_util.debug_page_item (
    p_plugin    =&gt; p_plugin,
    p_page_item =&gt; p_page_item );
</pre></div>
<!-- class="refsect1" -->
<a id="BABDDEHD"></a>
<div id="AEAPI1269" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DEBUG_PAGE_ITEM <a id="sthref521"></a>Procedure Signature 2</h2>
<p>This procedure writes the data of the page item meta data to the debug output if debugging is enabled.</p>
<p class="subhead2"><a id="AEAPI1270"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.DEBUG_PAGE_ITEM (
    p_plugin              IN apex_plugin.t_plugin,
    p_page_item           IN apex_plugin.t_page_item,
    p_value               IN VARCHAR2,
    p_is_readonly         IN BOOLEAN,
    p_is_printer_friendly IN BOOLEAN);
</pre>
<p class="subhead2"><a id="AEAPI1271"></a>Parameters</p>
<p><a href="#BABGIEJE">Table 19-3</a> describes the parameters available in the <code>DEBUG_PAGE_ITEM</code> procedure.</p>
<div id="AEAPI1272" class="tblformal">
<p class="titleintable"><a id="sthref522"></a><a id="BABGIEJE"></a>Table 19-3 DEBUG_PAGE_ITEM Parameters</p>
<table class="cellalignment3315" title="DEBUG_PAGE_ITEM Parameters" summary="This table describes the parameters available in the DEBUG_PAGE_ITEM procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t4">Parameter</th>
<th class="cellalignment3316" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t4" headers="r1c1-t4">
<p><code>p_plugin</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t4 r1c2-t4">
<p>This is the <code>p_plugin</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t4" headers="r1c1-t4">
<p><code>p_page_item</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t4 r1c2-t4">
<p>This is the <code>p_page_item</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t4" headers="r1c1-t4">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t4 r1c2-t4">
<p>This is the <code>p_value</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t4" headers="r1c1-t4">
<p><code>p_is_readonly</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t4 r1c2-t4">
<p>This is the <code>p_is_readonly</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t4" headers="r1c1-t4">
<p><code>p_is_printer_friendly</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t4 r1c2-t4">
<p>This is the <code>p_is_printer_friendly</code> parameter of your plug-in function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1273"></a>Example</p>
<p>This example shows how to collect helpful debug information during the plug-in development cycle to see what values are actually passed into the renderer, AJAX callback or validation function.</p>
<pre>apex_plugin_util.debug_page_item (
    p_plugin         =&gt; p_plugin,
    p_page_item      =&gt; p_page_item, 
    p_value          =&gt; p_value,
    p_is_readonly    =&gt; p_is_readonly,
    p_is_printer_friendly =&gt; p_is_printer_friendly);
</pre></div>
<!-- class="refsect1" -->
<a id="BABJGJHJ"></a>
<div id="AEAPI1274" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DEBUG_PROCESS <a id="sthref523"></a>Procedure</h2>
<p>This procedure writes the data of the process meta data to the debug output if debugging is enabled.</p>
<p class="subhead2"><a id="AEAPI1275"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.DEBUG_PROCESS (
    p_plugin         IN apex_plugin.t_plugin,
    p_process        IN apex_plugin.t_process);
</pre>
<p class="subhead2"><a id="AEAPI1276"></a>Parameters</p>
<p><a href="#BABGEJIE">Table 19-4</a> describes the parameters available in the <code>DEBUG_PROCESS</code> procedure.</p>
<div id="AEAPI1277" class="tblformal">
<p class="titleintable"><a id="sthref524"></a><a id="BABGEJIE"></a>Table 19-4 DEBUG_PROCESS Parameters</p>
<table class="cellalignment3315" title="DEBUG_PROCESS Parameters" summary="This table describes the parameters available in the DEBUG_PROCESS procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t5">Parameter</th>
<th class="cellalignment3316" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t5" headers="r1c1-t5">
<p><code>p_plugin</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t5 r1c2-t5">
<p>This is the <code>p_plugin</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t5" headers="r1c1-t5">
<p><code>p_process</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t5 r1c2-t5">
<p>This is the <code>p_process</code> parameter of your plug-in function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1278"></a>Example</p>
<p>This example shows how to collect helpful debug information during the plug-in development cycle to see what values are actually passed into the execution function of the plug-in.</p>
<pre>apex_plugin_util.debug_process (
    p_plugin         =&gt; p_plugin,
    p_process        =&gt; p_process);
</pre></div>
<!-- class="refsect1" -->
<a id="BABDFDCI"></a>
<div id="AEAPI1279" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DEBUG_REGION <a id="sthref525"></a>Procedure Signature 1</h2>
<p>This procedure writes the data of the region meta data to the debug output if debugging is enabled.</p>
<p class="subhead2"><a id="AEAPI1280"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.DEBUG_REGION (
    p_plugin              IN apex_plugin.t_plugin,
    p_region              IN apex_plugin.t_region);
</pre>
<p class="subhead2"><a id="AEAPI1281"></a>Parameters</p>
<p><a href="#BABBJJDG">Table 19-5</a> describes the parameters available in the <code>DEBUG_REGION</code> procedure.</p>
<div id="AEAPI1282" class="tblformal">
<p class="titleintable"><a id="sthref526"></a><a id="BABBJJDG"></a>Table 19-5 DEBUG_REGION Signature 1 Parameters</p>
<table class="cellalignment3315" title="DEBUG_REGION Signature 1 Parameters" summary="This table describes the parameters available in the DEBUG_REGION procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t6">Parameter</th>
<th class="cellalignment3316" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t6" headers="r1c1-t6">
<p><code>p_plugin</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t6 r1c2-t6">
<p>This is the <code>p_plugin</code> parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t6" headers="r1c1-t6">
<p><code>p_region</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t6 r1c2-t6">
<p>This is the <code>p_region</code> parameter of your plug-in function.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1283"></a>Example</p>
<p>This example shows how to collect helpful debug information during the plug-in development cycle to see what values are actually passed into the render function or AJAX callback function of the plug-in.</p>
<pre>apex_plugin_util.debug_process (
    p_plugin         =&gt; p_plugin,
    p_region        =&gt; p_region);
</pre></div>
<!-- class="refsect1" -->
<a id="BABFABDB"></a>
<div id="AEAPI1284" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">DEBUG_REGION <a id="sthref527"></a>Procedure Signature 2</h2>
<p>This procedure writes the data of the region meta data to the debug output if debugging is enabled. This is the advanced version of the debugging procedure which is used for the rendering function of a region plug-in.</p>
<p class="subhead2"><a id="AEAPI1285"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.DEBUG_REGION (
    p_plugin              IN apex_plugin.t_plugin,
    p_region              IN apex_plugin.t_region,
    p_is_printer_friendly IN BOOLEAN);
</pre>
<p class="subhead2"><a id="AEAPI1286"></a>Parameters</p>
<p><a href="#BABJAGHF">Table 19-6</a> describes the parameters available in the <code>DEBUG_REGION</code> procedure.</p>
<div id="AEAPI1287" class="tblformal">
<p class="titleintable"><a id="sthref528"></a><a id="BABJAGHF"></a>Table 19-6 DEBUG_REGION Signature 2 Parameters</p>
<table class="cellalignment3315" title="DEBUG_REGION Signature 2 Parameters" summary="This table describes the parameters available in the DEBUG_REGION procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t7">Parameter</th>
<th class="cellalignment3316" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t7" headers="r1c1-t7">
<p><code>p_plugin</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t7 r1c2-t7">
<p>This is the <code>p_plugin</code> parameter of your plug-in function</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t7" headers="r1c1-t7">
<p><code>p_region</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t7 r1c2-t7">
<p>This is the <code>p_region</code> parameter of your plug-in function</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t7" headers="r1c1-t7">
<p><code>p_is_printer_friendly</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t7 r1c2-t7">
<p>This is the <code>p_is_printer_friendly</code> parameter of your plug-in function</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1288"></a>Example</p>
<p>This example shows how to collect helpful debug information during the plug-in development cycle to see what values are actually passed into the render function or AJAX callback function of the plug-in.</p>
<pre>apex_plugin_util.debug_process (
    p_plugin              =&gt; p_plugin,
    p_region              =&gt; p_region,
    p_is_printer_friendly =&gt; p_is_printer_friendly);
</pre></div>
<!-- class="refsect1" -->
<a id="BABIJBFI"></a>
<div id="AEAPI1289" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ESCAPE <a id="sthref529"></a>Function</h2>
<p>This function is used if you have checked the standard attribute &#34;Has Escape Output Attribute&#34; option for your item type plug-in which allows a developer to decide if the output should be escaped or not.</p>
<p class="subhead2"><a id="AEAPI1290"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.ESCAPE (
    p_value  IN VARCHAR2,
    p_escape IN BOOLEAN)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1291"></a>Parameters</p>
<p><a href="#BABJIFED">Table 19-7</a> describes the parameters available in the ESCAPE function.</p>
<div id="AEAPI1292" class="tblformal">
<p class="titleintable"><a id="sthref530"></a><a id="BABJIFED"></a>Table 19-7 ESCAPE Parameters</p>
<table class="cellalignment3315" title="ESCAPE Parameters" summary="This table describes the parameters available in the ESCAPE procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t8">Parameter</th>
<th class="cellalignment3316" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t8" headers="r1c1-t8">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t8 r1c2-t8">
<p>This is the value you want to escape depending on the <code>p_escape</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t8" headers="r1c1-t8">
<p><code>p_escape</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t8 r1c2-t8">
<p>If set to <code>TRUE</code>, the return value is escaped. If set to <code>FALSE</code>, the value is not escaped.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1293"></a>Example</p>
<p>This example outputs all values of the array <code>l_display_value_list</code> as a HTML list and escapes the value of the array depending on the setting the developer as picked when using the plug-in.</p>
<pre>for i in 1 .. l_display_value_list.count
loop
    sys.htp.prn (
        &#39;&lt;li&gt;&#39;||
        apex_plugin_util.escape (
            p_value  =&gt; l_display_value_list(i),
            p_escape =&gt; p_item.escape_output )||
        &#39;&lt;/li&gt;&#39; );
end loop;
</pre></div>
<!-- class="refsect1" -->
<a id="BABEFGFE"></a>
<div id="AEAPI1294" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">EXECUTE_PLSQL_CODE <a id="sthref531"></a>Procedure</h2>
<p>This procedure executes a PL/SQL code block and performs binding of bind variables in the provided PL/SQL code. This procedure is usually used for plug-in attributes of type PL/SQL Code.</p>
<p class="subhead2"><a id="AEAPI1295"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.EXECUTE_PLSQL_CODE (
    p_plsql_code  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI1296"></a>Parameters</p>
<p><a href="#BABBBHHC">Table 19-8</a> describes the parameters available in the <code>EXECUTE_PLSQL_CODE</code> procedure.</p>
<div id="AEAPI1297" class="tblformal">
<p class="titleintable"><a id="sthref532"></a><a id="BABBBHHC"></a>Table 19-8 EXECUTE_PLSQL_CODE Parameters</p>
<table class="cellalignment3315" title="EXECUTE_PLSQL_CODE Parameters" summary="This table describes the parameters available in the EXECUTE_PLSQL_CODE procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t9">Parameter</th>
<th class="cellalignment3316" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t9" headers="r1c1-t9">
<p><code>p_plsql_code</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t9 r1c2-t9">
<p>PL/SQL code to be executed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1298"></a>Example</p>
<p>Text which should be escaped and then printed to the HTTP buffer.</p>
<pre>declare
    l_plsql_code VARCHAR(32767) := p_process.attribute_01;
begin
    apex_plugin_util.execute_plsql_code (
        p_plsql_code =&gt; l_plsql_code );
end;
</pre></div>
<!-- class="refsect1" -->
<a id="BABFBIJD"></a>
<div id="AEAPI2163" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_DATA <a id="sthref533"></a>Function Signature 1</h2>
<p>Executes the specified SQL query restricted by the provided search string (optional) and returns the values for each column. All column values are returned as a string, independent of their data types. The search column is identified by providing a column number in the <code>p_search_column_no</code> parameter.</p>
<p class="subhead2"><a id="AEAPI2164"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_DATA (
    p_sql_statement    IN VARCHAR2,
    p_min_columns      IN NUMBER,
    p_max_columns      IN NUMBER,
    p_component_name   IN VARCHAR2,
    p_search_type      IN VARCHAR2 DEFAULT 2,
    p_search_column_no IN VARCHAR2 DEFAULT 2,
    p_search_string    IN VARCHAR2 DEFAULT NULL,
    p_first_row        IN NUMBER DEFAULT NULL,
    p_max_rows         IN NUMBER DEFAULT NULL)
RETURN t_column_value_list;
</pre>
<p class="subhead2"><a id="AEAPI2165"></a>Parameters</p>
<p><a href="#BABGBDFD">Table 19-9</a> describes the parameters available in the <code>GET_DATA</code> function signature 1.</p>
<div id="AEAPI2166" class="tblformal">
<p class="titleintable"><a id="sthref534"></a><a id="BABGBDFD"></a>Table 19-9 GET_DATA Function Signature 1Parameters</p>
<table class="cellalignment3315" title="GET_DATA Function Signature 1Parameters" summary="Table for GET_DATA parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t10">Parameters</th>
<th class="cellalignment3316" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t10" headers="r1c1-t10">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t10 r1c2-t10">
<p>SQL statement used for the lookup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t10" headers="r1c1-t10">
<p><code>p_min_columns</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t10 r1c2-t10">
<p>Minimum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t10" headers="r1c1-t10">
<p><code>p_max_columns</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t10 r1c2-t10">
<p>Maximum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t10" headers="r1c1-t10">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t10 r1c2-t10">
<p>In case an error is returned, this is the name of the page item or report column used to display the error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t10" headers="r1c1-t10">
<p><code>p_search_type</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t10 r1c2-t10">
<p>Must be one of the c_search_* constants. They are as follows: <code>c_search_contains_case</code>, <code>c_search_contains_ignore</code>, <code>c_search_exact_case</code>, <code>c_search_exact_ignore</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t10" headers="r1c1-t10">
<p><code>p_search_column_no</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t10 r1c2-t10">
<p>Number of the column used to restrict the SQL statement. Must be within the <code>p_min_columns</code> though <code>p_max_columns</code> range.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t10" headers="r1c1-t10">
<p><code>p_search_string</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t10 r1c2-t10">
<p>Value used to restrict the query.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t10" headers="r1c1-t10">
<p><code>p_first_row</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t10 r1c2-t10">
<p>Start query at the specified row. All rows before the specified row are skipped.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t10" headers="r1c1-t10">
<p><code>p_max_rows</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t10 r1c2-t10">
<p>Maximum number of return rows allowed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1303"></a>Return</p>
<p><a href="#CHDJCDCE">Table 19-10</a> describes the return value by the <code>GET_DATA</code> function signature 1.</p>
<div id="AEAPI2288" class="tblformal">
<p class="titleintable"><a id="sthref535"></a><a id="CHDJCDCE"></a>Table 19-10 GET_DATA Function Signature 1 Return</p>
<table class="cellalignment3315" title="GET_DATA Function Signature 1 Return" summary="GET_DATA Return" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t11">Return</th>
<th class="cellalignment3316" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t11" headers="r1c1-t11">
<p><code>t_column_value_list</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t11 r1c2-t11">
<p>Table of <code>apex_application_global.vc_arr2</code> indexed by column number.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1305"></a>Example</p>
<p>The following example shows a simple item type plug-in rendering function which executes the LOV defined for the page item and does a case sensitive LIKE filtering with the current value of the page item. The result is then generated as a HTML list.</p>
<pre>function render_list (
    p_item                in apex_plugin.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return apex_plugin.t_page_item_render_result
is
    l_column_value_list   apex_plugin_util.t_column_value_list;
begin
    l_column_value_list :=
        apex_plugin_util.get_data (
            p_sql_statement    =&gt; p_item.lov_definition,
            p_min_columns      =&gt; 2,
            p_max_columns      =&gt; 2,
            p_component_name   =&gt; p_item.name,
            p_search_type      =&gt; apex_plugin_util.c_search_contains_case,
            p_search_column_no =&gt; 1,
            p_search_string    =&gt; p_value );
 
    sys.htp.p(&#39;&lt;ul&gt;&#39;);
    for i in 1 .. l_column_value_list(1).count
    loop
        sys.htp.p(
            &#39;&lt;li&gt;&#39;||
            sys.htf.escape_sc(l_column_value_list(1)(i))|| -- display column
            &#39;-&#39;||
            sys.htf.escape_sc(l_column_value_list(2)(i))|| -- return column
            &#39;&lt;/li&gt;&#39;);
    end loop;
    sys.htp.p(&#39;&lt;/ul&gt;&#39;);
end render_list;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGDDGH"></a>
<div id="AEAPI29403" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_DATA Function Signature 2</h2>
<p>Executes the specified SQL query restricted by the provided search string (optional) and returns the values for each column. All column values are returned as a string, independent of their data types. The search column is identified by providing a column name in the <code>p_search_column_name</code> parameter.</p>
<p class="subhead2"><a id="AEAPI29404"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_DATA (
    p_sql_statement      IN VARCHAR2,
    p_min_columns        IN NUMBER,
    p_max_columns        IN NUMBER,
    p_component_name     IN VARCHAR2,
    p_search_type        IN VARCHAR2 DEFAULT NULL,
    p_search_column_name IN VARCHAR2 DEFAULT NULL,
    p_search_string      IN VARCHAR2 DEFAULT NULL,
    p_first_row          IN NUMBER DEFAULT NULL,
    p_max_rows           IN NUMBER DEFAULT NULL)
RETURN t_column_value_list;
</pre>
<p class="subhead2"><a id="AEAPI29405"></a>Parameters</p>
<p><a href="#CHDEEJHE">Table 19-11</a> describes the parameters available for GET_DATA function signature 2.</p>
<div id="AEAPI29406" class="tblformal">
<p class="titleintable"><a id="sthref536"></a><a id="CHDEEJHE"></a>Table 19-11 GET_DATA Function Signature 2 Parameters</p>
<table class="cellalignment3315" title="GET_DATA Function Signature 2 Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t12">Parameters</th>
<th class="cellalignment3316" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t12" headers="r1c1-t12">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t12 r1c2-t12">
<p>SQL statement used for the lookup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t12" headers="r1c1-t12">
<p><code>p_min_columns</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t12 r1c2-t12">
<p>Minimum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t12" headers="r1c1-t12">
<p><code>p_max_columns</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t12 r1c2-t12">
<p>Maximum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t12" headers="r1c1-t12">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t12 r1c2-t12">
<p>In case an error is returned, this is the name of the page item or report column used to display the error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t12" headers="r1c1-t12">
<p><code>p_search_type</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t12 r1c2-t12">
<p>Must be one of the c_search_* constants. They are as follows: <code>c_search_contains_case</code>, <code>c_search_contains_ignore</code>, <code>c_search_exact_case</code>, <code>c_search_exact_ignore</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t12" headers="r1c1-t12">
<p><code>p_search_column_name</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t12 r1c2-t12">
<p>This is the column name used to restrict the SQL statement.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t12" headers="r1c1-t12">
<p><code>p_search_string</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t12 r1c2-t12">
<p>Value used to restrict the query.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t12" headers="r1c1-t12">
<p><code>p_first_row</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t12 r1c2-t12">
<p>Start query at the specified row. All rows before the specified row are skipped.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t12" headers="r1c1-t12">
<p><code>p_max_rows</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t12 r1c2-t12">
<p>Maximum number of return rows allowed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29407"></a>Return</p>
<p><a href="#CHDHJJFB">Table 19-12</a> describes the return value by the <code>GET_DATA</code> function signature 2.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref537"></a><a id="CHDHJJFB"></a>Table 19-12 GET_TABLE Function Signature 2</p>
<table class="cellalignment3315" title="GET_TABLE Function Signature 2" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t13">Parameter</th>
<th class="cellalignment3316" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t13" headers="r1c1-t13">
<p><code>t_column_value_list</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t13 r1c2-t13">
<p>Table of <code>apex_application_global.vc_arr2</code> indexed by column number.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29409"></a>Example</p>
<p>The following example shows a simple item type plug-in rendering function which executes the LOV defined for the page item and does a case sensitive LIKE filtering with the current value of the page item. The result is then generated as a HTML list.</p>
<pre>function render_list (
    p_item                in apex_plugin.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return apex_plugin.t_page_item_render_result
is
    l_column_value_list   apex_plugin_util.t_column_value_list;
begin
    l_column_value_list :=
        apex_plugin_util.get_data (
            p_sql_statement    =&gt; p_item.lov_definition,
            p_min_columns      =&gt; 2,
            p_max_columns      =&gt; 2,
            p_component_name   =&gt; p_item.name,
            p_search_type      =&gt; apex_plugin_util.c_search_contains_case,
            p_search_column_name =&gt; &#39;ENAME&#39;,
            p_search_string    =&gt; p_value );
 
    sys.htp.p(&#39;&lt;ul&gt;&#39;);
    for i in 1 .. l_column_value_list(1).count
    loop
        sys.htp.p(
            &#39;&lt;li&gt;&#39;||
            sys.htf.escape_sc(l_column_value_list(1)(i))|| -- display column
            &#39;-&#39;||
            sys.htf.escape_sc(l_column_value_list(2)(i))|| -- return column
            &#39;&lt;/li&gt;&#39;);
    end loop;
    sys.htp.p(&#39;&lt;/ul&gt;&#39;);
end render_list;
</pre></div>
<!-- class="refsect1" -->
<a id="BABFJHAI"></a>
<div id="AEAPI2168" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_DATA2<a id="sthref538"></a> Function Signature 1</h2>
<p>Executes the specified SQL query restricted by the provided search string (optional) and returns the values for each column. All column values are returned along with their original data types. The search column is identified by providing a column number in the <code>p_search_column_no</code> parameter.</p>
<p class="subhead2"><a id="AEAPI2169"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_DATA2 (
    p_sql_statement    IN VARCHAR2,
    p_min_columns      IN NUMBER,
    p_max_columns      IN NUMBER,
    p_data_type_list   IN WWV_GLOBAL.VC_ARR2 DEFAULT C_EMPTY_DATA_TYPE_LIST,
    p_component_name   IN VARCHAR2,
    p_search_type      IN VARCHAR2 DEFAULT 2,
    p_search_column_no IN VARCHAR2 DEFAULT 2,
    p_search_string    IN VARCHAR2 DEFAULT NULL,
    p_first_row        IN NUMBER DEFAULT NULL,
    p_max_rows         IN NUMBER DEFAULT NULL)
RETURN t_column_value_list2;
</pre>
<p class="subhead2"><a id="AEAPI2170"></a>Parameters</p>
<p><a href="#BABDGFGG">Table 19-13</a> describes the parameters available in the <code>GET_DATA2</code> function.</p>
<div id="AEAPI2171" class="tblformal">
<p class="titleintable"><a id="sthref539"></a><a id="BABDGFGG"></a>Table 19-13 GET_DATA2 Parameters</p>
<table class="cellalignment3315" title="GET_DATA2 Parameters" summary="Table of GET_DATA2 parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t14">Parameter</th>
<th class="cellalignment3316" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t14" headers="r1c1-t14">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t14 r1c2-t14">
<p>SQL statement used for the lookup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t14" headers="r1c1-t14">
<p><code>p_min_columns</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t14 r1c2-t14">
<p>Minimum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t14" headers="r1c1-t14">
<p><code>p_max_columns</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t14 r1c2-t14">
<p>Maximum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t14" headers="r1c1-t14">
<p><code>p_data_type_list</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t14 r1c2-t14">
<p>If provided, checks to make sure the data type for each column matches the specified data type in the array. Use the constants <code>c_data_type_*</code> for available data types.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t14" headers="r1c1-t14">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t14 r1c2-t14">
<p>In case an error is returned, this is the name of the page item or report column used to display the error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t14" headers="r1c1-t14">
<p><code>p_search_type</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t14 r1c2-t14">
<p>Must be one of the c_search_* constants. They are as follows: <code>c_search_contains_case</code>, <code>c_search_contains_ignore</code>, <code>c_search_exact_case</code>, <code>c_search_exact_ignore</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t14" headers="r1c1-t14">
<p><code>p_search_column_no</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t14 r1c2-t14">
<p>Number of the column used to restrict the SQL statement. Must be within the <code>p_min_columns</code> though <code>p_max_columns</code> range.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t14" headers="r1c1-t14">
<p><code>p_search_string</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t14 r1c2-t14">
<p>Value used to restrict the query.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t14" headers="r1c1-t14">
<p><code>p_first_row</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t14 r1c2-t14">
<p>Start query at the specified row. All rows before the specified row are skipped.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t14" headers="r1c1-t14">
<p><code>p_max_rows</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t14 r1c2-t14">
<p>Maximum number of return rows allowed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2172"></a>Return</p>
<p><a href="#BABHCIGC">Table 19-14</a> describes the return value by the <code>GET_DATA2</code> function.</p>
<div id="AEAPI2173" class="tblformal">
<p class="titleintable"><a id="sthref540"></a><a id="BABHCIGC"></a>Table 19-14 GET_DATA2 Return</p>
<table class="cellalignment3315" title="GET_DATA2 Return" summary="Table of the GET_DATA2 return value." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t15">Return</th>
<th class="cellalignment3316" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t15" headers="r1c1-t15">
<p><code>t_column_value_list2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t15 r1c2-t15">
<p>Table of <code>t_column_values</code> indexed by column number.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2174"></a>Example</p>
<p>The following example is a simple item type plug-in rendering function which executes the LOV defined for the page item and does a case sensitive LIKE filtering with the current value of the page item. The result is then generated as a HTML list. This time, the first column of the LOV SQL statement is checked if it is of type VARCHAR2 and the second is of type number.</p>
<pre>function render_list (
    p_item                in apex_plugin.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return apex_plugin.t_page_item_render_result
is
    l_data_type_list    apex_application_global.vc_arr2;
    l_column_value_list apex_plugin_util.t_column_value_list2;
begin
    -- The first LOV column has to be a string and the second a number
    l_data_type_list(1) := apex_plugin_util.c_data_type_varchar2;
    l_data_type_list(2) := apex_plugin_util.c_data_type_number;
    --
    l_column_value_list :=
        apex_plugin_util.get_data2 (
            p_sql_statement    =&gt; p_item.lov_definition,
            p_min_columns      =&gt; 2,
            p_max_columns      =&gt; 2,
            p_data_type_list   =&gt; l_data_type_list,
            p_component_name   =&gt; p_item.name,
            p_search_type      =&gt; apex_plugin_util.c_search_contains_case,
            p_search_column_no =&gt; 1,
            p_search_string    =&gt; p_value );
    --
    sys.htp.p(&#39;&lt;ul&gt;&#39;);
    for i in 1 .. l_column_value_list.count(1)
    loop
        sys.htp.p(
            &#39;&lt;li&gt;&#39;||
            sys.htf.escape_sc(l_column_value_list(1).value_list(i).varchar2_value)|| -- display column
            &#39;-&#39;||
            sys.htf.escape_sc(l_column_value_list(2).value_list(i).number_value)|| -- return column
            &#39;&lt;/li&gt;&#39;);
    end loop;
    sys.htp.p(&#39;&lt;/ul&gt;&#39;);
end render_list;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDCJDID"></a>
<div id="AEAPI29410" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_DATA2 Function Signature 2</h2>
<p>Executes the specified SQL query restricted by the provided search string (optional) and returns the values for each column. All column values are returned along with their original data types. The search column is identified by providing a column number in the <code>p_search_column_no</code> parameter.</p>
<p class="subhead2"><a id="AEAPI29411"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_DATA2 (
    p_sql_statement      IN VARCHAR2,
    p_min_columns        IN NUMBER,
    p_max_columns        IN NUMBER,
    p_data_type_list     IN WWV_GLOBAL.VC_ARR2 DEFAULT C_EMPTY_DATA_TYPE_LIST,
    p_component_name     IN VARCHAR2,
    p_search_type        IN VARCHAR2 DEFAULT 2,
    p_search_column_name IN VARCHAR2 DEFAULT 2,
    p_search_string      IN VARCHAR2 DEFAULT NULL,
    p_first_row          IN NUMBER DEFAULT NULL,
    p_max_rows           IN NUMBER DEFAULT NULL)
RETURN t_column_value_list2;
</pre>
<p class="subhead2"><a id="AEAPI29412"></a>Parameters</p>
<p><a href="#CHDEBIDB">Table 19-15</a> describes the parameters available in the <code>GET_DATA2</code> function signature 2.</p>
<div id="AEAPI29413" class="tblformal">
<p class="titleintable"><a id="sthref541"></a><a id="CHDEBIDB"></a>Table 19-15 GET_DATA2 Function Signature 2</p>
<table class="cellalignment3315" title="GET_DATA2 Function Signature 2" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t16">Parameter</th>
<th class="cellalignment3316" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t16" headers="r1c1-t16">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t16 r1c2-t16">
<p>SQL statement used for the lookup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t16" headers="r1c1-t16">
<p><code>p_min_columns</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t16 r1c2-t16">
<p>Minimum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t16" headers="r1c1-t16">
<p><code>p_max_columns</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t16 r1c2-t16">
<p>Maximum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t16" headers="r1c1-t16">
<p><code>p_data_type_list</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t16 r1c2-t16">
<p>If provided, checks to make sure the data type for each column matches the specified data type in the array. Use the constants <code>c_data_type_*</code> for available data types.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t16" headers="r1c1-t16">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t16 r1c2-t16">
<p>In case an error is returned, this is the name of the page item or report column used to display the error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t16" headers="r1c1-t16">
<p><code>p_search_type</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t16 r1c2-t16">
<p>Must be one of the c_search_* constants. They are as follows: <code>c_search_contains_case</code>, <code>c_search_contains_ignore</code>, <code>c_search_exact_case</code>, <code>c_search_exact_ignore</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t16" headers="r1c1-t16">
<p><code>p_search_column_name</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t16 r1c2-t16">
<p>The column name used to restrict the SQL statement.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t16" headers="r1c1-t16">
<p><code>p_search_string</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t16 r1c2-t16">
<p>Value used to restrict the query.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t16" headers="r1c1-t16">
<p><code>p_first_row</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t16 r1c2-t16">
<p>Start query at the specified row. All rows before the specified row are skipped.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t16" headers="r1c1-t16">
<p><code>p_max_rows</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t16 r1c2-t16">
<p>Maximum number of return rows allowed.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29414"></a>Return</p>
<p><a href="#CHDDIIGC">Table 19-16</a> describes the return value by the <code>GET_DATA2</code> function signature 2.</p>
<div id="AEAPI29415" class="tblformal">
<p class="titleintable"><a id="sthref542"></a><a id="CHDDIIGC"></a>Table 19-16 GET_DATA2 Function Signature 2 Return</p>
<table class="cellalignment3315" title="GET_DATA2 Function Signature 2 Return" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t17">Parameter</th>
<th class="cellalignment3316" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t17" headers="r1c1-t17">
<p><code>t_column_value_list2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t17 r1c2-t17">
<p>Table of <code>t_column_values</code> indexed by column number.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29416"></a>Example</p>
<p>The following example is a simple item type plug-in rendering function which executes the LOV defined for the page item and does a case sensitive LIKE filtering with the current value of the page item. The result is then generated as a HTML list. This time, the first column of the LOV SQL statement is checked if it is of type VARCHAR2 and the second is of type number.</p>
<pre>function render_list (
    p_item                in apex_plugin.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return apex_plugin.t_page_item_render_result
is
    l_data_type_list    apex_application_global.vc_arr2;
    l_column_value_list apex_plugin_util.t_column_value_list2;
begin
    -- The first LOV column has to be a string and the second a number
    l_data_type_list(1) := apex_plugin_util.c_data_type_varchar2;
    l_data_type_list(2) := apex_plugin_util.c_data_type_number;
    --
    l_column_value_list :=
        apex_plugin_util.get_data2 (
            p_sql_statement    =&gt; p_item.lov_definition,
            p_min_columns      =&gt; 2,
            p_max_columns      =&gt; 2,
            p_data_type_list   =&gt; l_data_type_list,
            p_component_name   =&gt; p_item.name,
            p_search_type      =&gt; apex_plugin_util.c_search_contains_case,
            p_search_column_name =&gt; &#39;ENAME&#39;,
            p_search_string    =&gt; p_value );
    --
    sys.htp.p(&#39;&lt;ul&gt;&#39;);
    for i in 1 .. l_column_value_list.count(1)
    loop
        sys.htp.p(
            &#39;&lt;li&gt;&#39;||
            sys.htf.escape_sc(l_column_value_list(1).value_list(i).varchar2_value)|| -- display column
            &#39;-&#39;||
            sys.htf.escape_sc(l_column_value_list(2).value_list(i).number_value)|| -- return column
            &#39;&lt;/li&gt;&#39;);
    end loop;
    sys.htp.p(&#39;&lt;/ul&gt;&#39;);
end render_list;
</pre></div>
<!-- class="refsect1" -->
<a id="BABCJEBF"></a>
<div id="AEAPI1299" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_DISPLAY_DATA <a id="sthref543"></a>Function Signature 1</h2>
<p>This function gets the display lookup value for the value specified in <code>p_search_string</code>.</p>
<p class="subhead2"><a id="AEAPI1300"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_DISPLAY_DATA (
    p_sql_statement    IN VARCHAR2,
    p_min_columns      IN NUMBER,
    p_max_columns      IN NUMBER,
    p_component_name   IN VARCHAR2,
    p_display_column_no IN BINARY_INTEGER DEFAULT 1,
    p_search_column_no  IN BINARY_INTEGER DEFAULT 2,
    p_search_string    IN VARCHAR2 DEFAULT NULL,
    p_display_extra    IN BOOLEAN DEFAULT TRUE)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1301"></a>Parameters</p>
<p><a href="#BABJCBCH">Table 19-17</a> describes the parameters available in the <code>GET_DISPLAY_DATA</code> function signature 1.</p>
<div id="AEAPI1302" class="tblformal">
<p class="titleintable"><a id="sthref544"></a><a id="BABJCBCH"></a>Table 19-17 GET_DISPLAY_DATA Signature 1 Parameters</p>
<table class="cellalignment3315" title="GET_DISPLAY_DATA Signature 1 Parameters" summary="This table describes the parameters available in the GET_DISPLAY_DATA function signature 1." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t18">Parameter</th>
<th class="cellalignment3316" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t18" headers="r1c1-t18">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t18 r1c2-t18">
<p>SQL statement used for the lookup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t18" headers="r1c1-t18">
<p><code>p_min_columns</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t18 r1c2-t18">
<p>Minimum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t18" headers="r1c1-t18">
<p><code>p_max_columns</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t18 r1c2-t18">
<p>Maximum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t18" headers="r1c1-t18">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t18 r1c2-t18">
<p>In case an error is returned, this is the name of the page item or report column used to display the error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t18" headers="r1c1-t18">
<p><code>p_display_column_no</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t18 r1c2-t18">
<p>Number of the column returned from the SQL statement. Must be within the <code>p_min_columns</code> though <code>p_max_columns</code> range</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t18" headers="r1c1-t18">
<p><code>p_search_column_no</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t18 r1c2-t18">
<p>Number of the column used to restrict the SQL statement. Must be within the <code>p_min_columns</code> though <code>p_max_columns</code> range.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t18" headers="r1c1-t18">
<p><code>p_search_string</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t18 r1c2-t18">
<p>Value used to restrict the query.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t18" headers="r1c1-t18">
<p><code>p_display_extra</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t18 r1c2-t18">
<p>If set to <code>TRUE</code>, and a value is not found, the search value is added to the result instead.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2175"></a>Return</p>
<p><a href="#BABEEBIB">Table 19-18</a> describes the return value by the <code>GET_DISPLAY_DATA</code> function signature 1.</p>
<div id="AEAPI1304" class="tblformal">
<p class="titleintable"><a id="sthref545"></a><a id="BABEEBIB"></a>Table 19-18 GET_DISPLAY_DATA Signature 1 Return</p>
<table class="cellalignment3315" title="GET_DISPLAY_DATA Signature 1 Return" summary="This table describes the return values for the GET_DISPLAY_DATA function signature 1." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t19">Return</th>
<th class="cellalignment3316" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t19" headers="r1c1-t19">
<p>VARCHAR2</p>
</td>
<td class="cellalignment3317" headers="r2c1-t19 r1c2-t19">
<p>Value of the first record of the column specified by <code>p_display_column_no</code>. If no record was found it contains the value of <code>p_search_string</code> if the parameter <code>p_display_extra</code> is set to TRUE. Otherwise NULL is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2176"></a>Example</p>
<p>The following example does a lookup with the value provided in p_value and returns the display column of the LOV query.</p>
<pre>function render_value (
    p_item                in apex_plugin.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return apex_plugin.t_page_item_render_result
is
begin
    sys.htp.p(sys.htf.escape_sc(
        apex_plugin_util.get_display_data (
            p_sql_statement     =&gt; p_item.lov_definition,
            p_min_columns       =&gt; 2,
            p_max_columns       =&gt; 2,
            p_component_name    =&gt; p_item.name,
            p_display_column_no =&gt; 1,
            p_search_column_no  =&gt; 2,
            p_search_string     =&gt; p_value )));
end render_value;
</pre></div>
<!-- class="refsect1" -->
<a id="BABEFGFF"></a>
<div id="AEAPI1306" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_DISPLAY_DATA <a id="sthref546"></a>Function Signature 2</h2>
<p>This function looks up all the values provided in the <code>p_search_value_list</code> instead of just a single value lookup.</p>
<p class="subhead2"><a id="AEAPI1307"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_DISPLAY_DATA (
    p_sql_statement    IN VARCHAR2,
    p_min_columns      IN NUMBER,
    p_max_columns      IN NUMBER,
    p_component_name   IN VARCHAR2,
    p_display_column_no IN BINARY_INTEGER DEFAULT 1,
    p_search_column_no  IN BINARY_INTEGER DEFAULT 2,
    p_search_value_list IN ww_flow_global.vc_arr2,
    p_display_extra     IN BOOLEAN DEFAULT TRUE)
RETURN apex_application_global.vc_arr2;
</pre>
<p class="subhead2"><a id="AEAPI1308"></a>Parameters</p>
<p><a href="#BABDBIBJ">Table 19-19</a> describes the parameters available in the <code>GET_DISPLAY_DATA</code> function signature 2.</p>
<div id="AEAPI1309" class="tblformal">
<p class="titleintable"><a id="sthref547"></a><a id="BABDBIBJ"></a>Table 19-19 GET_DISPLAY_DATA Signature 2 Parameters</p>
<table class="cellalignment3315" title="GET_DISPLAY_DATA Signature 2 Parameters" summary="This table describes the parameters available in the GET_DISPLAY_DATA function signature 2." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t20">Parameter</th>
<th class="cellalignment3316" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t20" headers="r1c1-t20">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t20 r1c2-t20">
<p>SQL statement used for the lookup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t20" headers="r1c1-t20">
<p><code>p_min_columns</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t20 r1c2-t20">
<p>Minimum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t20" headers="r1c1-t20">
<p><code>p_max_columns</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t20 r1c2-t20">
<p>Maximum number of return columns.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t20" headers="r1c1-t20">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t20 r1c2-t20">
<p>In case an error is returned, this is the name of the page item or report column used to display the error message.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t20" headers="r1c1-t20">
<p><code>p_display_column_no</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t20 r1c2-t20">
<p>Number of the column returned from the SQL statement. Must be within the <code>p_min_columns</code> though <code>p_max_columns</code> range.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t20" headers="r1c1-t20">
<p><code>p_search_column_no</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t20 r1c2-t20">
<p>Number of the column used to restrict the SQL statement. Must be within the <code>p_min_columns</code> though <code>p_max_columns</code> range.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t20" headers="r1c1-t20">
<p><code>p_search_value_list</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t20 r1c2-t20">
<p>Array of values to look up.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t20" headers="r1c1-t20">
<p><code>p_display_extra</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t20 r1c2-t20">
<p>If set to <code>TRUE</code>, and a value is not found, the search value is added to the result instead.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1310"></a>Return</p>
<p><a href="#BABEAFDH">Table 19-20</a> describes the return value by the <code>GET_DISPLAY_DATA</code> function signature 2.</p>
<div id="AEAPI1311" class="tblformal">
<p class="titleintable"><a id="sthref548"></a><a id="BABEAFDH"></a>Table 19-20 GET_DISPLAY_DATA Signature 2 Return</p>
<table class="cellalignment3315" title="GET_DISPLAY_DATA Signature 2 Return" summary="This table describes the return values for the GET_DISPLAY_DATA function signature 2." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t21">Return</th>
<th class="cellalignment3316" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t21" headers="r1c1-t21">
<p><code>apex_application_global.vc_arr2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t21 r1c2-t21">
<p>List of VARCHAR2 indexed by pls_integer. For each entry in <code>p_search_value_list</code> the resulting array contains the value of the first record of the column specified by <code>p_display_column_no</code> in the same order as in <code>p_search_value_list</code>. If no record is found it contains the value of <code>p_search_string</code> if the parameter <code>p_display_extra</code> is set to TRUE. Otherwise the value is skipped.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1312"></a>Example</p>
<p>Looks up the values 7863, 7911 and 7988 and generates a HTML list with the value of the corresponding display column in the LOV query.</p>
<pre>function render_list (
    p_plugin              in apex_plugin.t_plugin,
    p_item                in apex_plugin.t_page_item,
    p_value               in varchar2,
    p_is_readonly         in boolean,
    p_is_printer_friendly in boolean )
    return apex_plugin.t_page_item_render_result
is
    l_search_list apex_application_global.vc_arr2;
    l_result_list apex_application_global.vc_arr2;
begin
    l_search_list(1) := &#39;7863&#39;;
    l_search_list(2) := &#39;7911&#39;;
    l_search_list(3) := &#39;7988&#39;;
    --
    l_result_list :=
        apex_plugin_util.get_display_data (
            p_sql_statement     =&gt; p_item.lov_definition,
            p_min_columns       =&gt; 2,
            p_max_columns       =&gt; 2,
            p_component_name    =&gt; p_item.name,
            p_search_column_no  =&gt; 1,
            p_search_value_list =&gt; l_search_list );
    --
    sys.htp.p(&#39;&lt;ul&gt;&#39;);
    for i in 1 .. l_result_list.count
    loop
        sys.htp.p(
            &#39;&lt;li&gt;&#39;||
            sys.htf.escape_sc(l_result_list(i))||
            &#39;&lt;/li&gt;&#39;);
    end loop;
    sys.htp.p(&#39;&lt;/ul&gt;&#39;);
end render_list;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGCBBA"></a>
<div id="AEAPI29417" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_ELEMENT_ATTRIBUTES Function</h2>
<p>This function returns some of the standard attributes of an HTML element (for example, id, name, required, placeholder, aria-error-attributes, class) which is used if a HTML input/select/textarea/... tag is generated to get a consistent set of attributes.</p>
<p class="subhead2"><a id="AEAPI29418"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_ELEMENT_ATTRIBUTES (
    p_item           IN APEX_PLUGIN.T_PAGE_ITEM,
    p_name           IN VARCHAR2 DEFAULT NULL,
    p_default_class  IN VARCHAR2 DEFAULT NULL,
    p_add_id         in boolean  default true )
    return varchar2;
</pre>
<p class="subhead2"><a id="AEAPI29419"></a>Parameters</p>
<p><a href="#CHDJHBEE">Table 19-21</a> describes the available parameters for <code>GET_ELEMENT_ATTRIBUTES</code> function.</p>
<div id="AEAPI29420" class="tblformal">
<p class="titleintable"><a id="sthref549"></a><a id="CHDJHBEE"></a>Table 19-21 GET_ELEMENT_ATTRIBUTES Function Parameters</p>
<table class="cellalignment3315" title="GET_ELEMENT_ATTRIBUTES Function Parameters" summary="parameter table" dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t22">Parameters</th>
<th class="cellalignment3316" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t22" headers="r1c1-t22">
<p><code>p_item</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t22 r1c2-t22">
<p>This is the p_item parameter of your plug-in function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t22" headers="r1c1-t22">
<p><code>p_name</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t22 r1c2-t22">
<p>This is the value which has been return by apex_plugin.get_input_name_or_page_item</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t22" headers="r1c1-t22">
<p><code>p_default_class</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t22 r1c2-t22">
<p>Default CSS class which which should be contained in the result string.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t22" headers="r1c1-t22">
<p><code>p_add_id</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t22 r1c2-t22">
<p>If set to TRUE then the id attribute is also contained in the result string.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI29421"></a>Example</p>
<p>This example emits an INPUT tag of type text which uses <code>apex_plugin_util</code>.<code>get_element_attributes</code> to automatically include the most common attributes.</p>
<pre>sys.htp.prn (
        &#39;&lt;input type=&#34;text&#34; &#39; ||
        apex_plugin_util.get_element_attributes(p_item, l_name, &#39;text_field&#39;) ||
        &#39;value=&#34;&#39;||l_escaped_value||&#39;&#34; &#39;||
        &#39;size=&#34;&#39;||p_item.element_width||&#39;&#34; &#39;||
        &#39;maxlength=&#34;&#39;||p_item.element_max_length||&#39;&#34; &#39;||
        &#39; /&gt;&#39;);
</pre></div>
<!-- class="refsect1" -->
<a id="BABDFAID"></a>
<div id="AEAPI1313" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_PLSQL_EXPRESSION_RESULT <a id="sthref550"></a>Function</h2>
<p>This function executes a PL/SQL expression and returns a result. This function also performs the binding of any bind variables in the provided PL/SQL expression. This function is usually used for plug-in attributes of type PL/SQL Expression.</p>
<p class="subhead2"><a id="AEAPI1314"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_PLSQL_EXPRESSION_RESULT (
    p_plsql_expression IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1315"></a>Parameters</p>
<p><a href="#BABEGFIJ">Table 19-22</a> describes the parameters available in the <code>GET_PLSQL_EXPRESSION_RESULT</code> function.</p>
<div id="AEAPI1316" class="tblformal">
<p class="titleintable"><a id="sthref551"></a><a id="BABEGFIJ"></a>Table 19-22 GET_PLSQL_EXPRESSION_RESULT Parameters</p>
<table class="cellalignment3315" title="GET_PLSQL_EXPRESSION_RESULT Parameters" summary="This table describes the parameters available in the GET_PLSQL_EXPRESSION_RESULT function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t23">Parameter</th>
<th class="cellalignment3316" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t23" headers="r1c1-t23">
<p><code>p_plsql_expression_result</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t23 r1c2-t23">
<p>A PL/SQL expression that returns a string.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1317"></a>Return</p>
<p><a href="#BABCGHHH">Table 19-23</a> describes the return value by the function GET_PLSQL_EXPRESSION_RESULT.</p>
<div id="AEAPI1318" class="tblformal">
<p class="titleintable"><a id="sthref552"></a><a id="BABCGHHH"></a>Table 19-23 GET_PLSQL_EXPRESSION_RESULT Return</p>
<table class="cellalignment3315" title="GET_PLSQL_EXPRESSION_RESULT Return" summary="This table describes the returns for the GET_PLSQL_EXPRESSION_RESULT function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t24">Return</th>
<th class="cellalignment3316" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t24" headers="r1c1-t24">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t24 r1c2-t24">
<p>String result value returned by the PL/SQL Expression.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1319"></a>Example</p>
<p>This example executes and returns the result of the PL/SQL expression which is specified in <code>attribute_03</code> of an item type plug-in attribute of type &#34;PL/SQL Expression&#34;.</p>
<pre>l_result := apex_plugin_util.get_plsql_expression_result (
    p_plsql_expression =&gt; p_item.attribute_03 );
</pre></div>
<!-- class="refsect1" -->
<a id="BABIAHIB"></a>
<div id="AEAPI1320" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_PLSQL_FUNCTION_RESULT <a id="sthref553"></a>Function</h2>
<p>This function executes a PL/SQL function block and returns the result. This function also performs binding of bind variables in the provided PL/SQL Function Body. This function is usually used for plug-in attributes of type PL/SQL Function Body.</p>
<p class="subhead2"><a id="AEAPI1321"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_PLSQL_FUNCTION_RESULT (
    p_plsql_function IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1322"></a>Parameters</p>
<p><a href="#BABFJAIE">Table 19-24</a> describes the parameters available in the <code>GET_PLSQL_FUNCTION_RESULT</code> function.</p>
<div id="AEAPI1323" class="tblformal">
<p class="titleintable"><a id="sthref554"></a><a id="BABFJAIE"></a>Table 19-24 GET_PLSQL_FUNCTION_RESULT Parameters</p>
<table class="cellalignment3315" title="GET_PLSQL_FUNCTION_RESULT Parameters" summary="This table describes the parameters available in the GET_PLSQL_FUNCTION_RESULT function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t25">Parameter</th>
<th class="cellalignment3316" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t25" headers="r1c1-t25">
<p><code>p_plsql_function</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t25 r1c2-t25">
<p>A PL/SQL function block that returns a result of type string.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1324"></a>Return</p>
<p><a href="#BABFEEHJ">Table 19-25</a> describes the return value by the function GET_PLSQL_FUNCTION_RESULT.</p>
<div id="AEAPI1325" class="tblformal">
<p class="titleintable"><a id="sthref555"></a><a id="BABFEEHJ"></a>Table 19-25 GET_PLSQL_FUNCTION_RESULT Return</p>
<table class="cellalignment3315" title="GET_PLSQL_FUNCTION_RESULT Return" summary="This table describes the returns for the GET_PLSQL_FUNCTION_RESULT function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t26">Return</th>
<th class="cellalignment3316" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t26" headers="r1c1-t26">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t26 r1c2-t26">
<p>String result value returned by the PL/SQL function block.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1326"></a>Example</p>
<p>The following example executes and returns the result of the PL/SQL function body that is specified in <code>attribute_03</code> of an item type plug-in attribute of type PL/SQL Function Body.</p>
<pre>l_result := apex_plugin_util.get_plsql_function_result (
    p_plsql_function =&gt; p_item.attribute_03 );
</pre></div>
<!-- class="refsect1" -->
<a id="BABCBEJA"></a>
<div id="AEAPI1327" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_POSITION_IN_LIST <a id="sthref556"></a>Function</h2>
<p>This function returns the position in the list where p_value is stored. If it is not found, null is returned.</p>
<p class="subhead2"><a id="AEAPI1328"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_POSITION_IN_LIST(
    p_list IN apex_application_global.vc_arr2,
    p_value IN VARCHAR2)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI1329"></a>Parameters</p>
<p><a href="#BABGEHFA">Table 19-26</a> describes the parameters available in the <code>GET_POSITION_IN_LIST</code> function.</p>
<div id="AEAPI1330" class="tblformal">
<p class="titleintable"><a id="sthref557"></a><a id="BABGEHFA"></a>Table 19-26 GET_POSITION_IN_LIST Parameters</p>
<table class="cellalignment3315" title="GET_POSITION_IN_LIST Parameters" summary="This table describes the parameters available in the GET_POSITION_IN_LIST function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t27">Parameter</th>
<th class="cellalignment3316" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t27" headers="r1c1-t27">
<p><code>p_list</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t27 r1c2-t27">
<p>Array of type <code>apex_application_global.vc_arr2</code> that contains entries of type VARCHAR2.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t27" headers="r1c1-t27">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t27 r1c2-t27">
<p>Value located in the <code>p_list</code> array.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1331"></a>Return</p>
<p><a href="#BABBEAJD">Table 19-27</a> describes the return value by the GET_POISTION_IN_LIST function.</p>
<div id="AEAPI1332" class="tblformal">
<p class="titleintable"><a id="sthref558"></a><a id="BABBEAJD"></a>Table 19-27 GET_POSITION_IN_LIST Return</p>
<table class="cellalignment3315" title="GET_POSITION_IN_LIST Return" summary="This table describes the returns for the GET_POSITION_IN_LIST function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t28">Return</th>
<th class="cellalignment3316" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t28" headers="r1c1-t28">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t28 r1c2-t28">
<p>Returns the position of <code>p_value</code> in the array <code>p_list</code>. If it is not found <code>NULL</code> is returned.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1333"></a>Example</p>
<p>The following example searchs for &#34;New York&#34; in the provided list and returns <code>2</code> into <code>l_position</code>.</p>
<pre>declare
    l_list     apex_application_global.vc_arr2;
    l_position number;
begin
    l_list(1) := &#39;Rome&#39;;
    l_list(2) := &#39;New York&#39;;
    l_list(3) := &#39;Vienna&#39;;
    
    l_position := apex_plugin_util.get_position_in_list (
                      p_list  =&gt; l_list,
                      p_value =&gt; &#39;New York&#39; );
end;
</pre></div>
<!-- class="refsect1" -->
<a id="BABJIHCA"></a>
<div id="AEAPI1334" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">GET_SEARCH_STRING <a id="sthref559"></a>Function</h2>
<p>Based on the provided value in <code>p_search_type</code> the passed in value of <code>p_search_string</code> is returned unchanged or is converted to uppercase. Use this function with the <code>p_search_string</code> parameter of <code>get_data</code> and <code>get_data2</code>.</p>
<p class="subhead2"><a id="AEAPI1335"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.GET_SEARCH_STRING(
    p_search_type IN VARCHAR2,
    p_search_string IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1336"></a>Parameters</p>
<p><a href="#BABEDBHB">Table 19-28</a> describes the parameters available in the <code>GET_SEARCH_STRING</code> function.</p>
<div id="AEAPI1337" class="tblformal">
<p class="titleintable"><a id="sthref560"></a><a id="BABEDBHB"></a>Table 19-28 GET_SEARCH_STRING Parameters</p>
<table class="cellalignment3315" title="GET_SEARCH_STRING Parameters" summary="This table describes the parameters available in the GET_SEARCH_STRING function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t29">Parameter</th>
<th class="cellalignment3316" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t29" headers="r1c1-t29">
<p><code>p_search_type</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t29 r1c2-t29">
<p>Type of search when used with <code>get_data</code> and <code>get_data2</code>. Use one of the <code>c_search_*</code> constants.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t29" headers="r1c1-t29">
<p><code>p_search_string</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t29 r1c2-t29">
<p>Search string used for the search with <code>get_data</code> and <code>get_data2</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1338"></a>Return</p>
<p><a href="#BABCHFEI">Table 19-29</a> describes the return value by the function <code>GET_SEARCH_STRING</code>.</p>
<div id="AEAPI1339" class="tblformal">
<p class="titleintable"><a id="sthref561"></a><a id="BABCHFEI"></a>Table 19-29 GET_SEARCH_STRING Return</p>
<table class="cellalignment3315" title="GET_SEARCH_STRING Return" summary="This table describes the return values for the GET_SEARCH_STRING function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t30">Return</th>
<th class="cellalignment3316" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t30" headers="r1c1-t30">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t30 r1c2-t30">
<p>Returns <code>p_search_string</code> unchanged or in uppercase if <code>p_search_type</code> is of type <code>c_search_contains_ignore</code> or <code>c_search_exact_ignore</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1340"></a>Example</p>
<p>This example uses a call to <code>get_data</code> or <code>get_data2</code> to make sure the search string is using the correct case.</p>
<pre>l_column_value_list :=
    apex_plugin_util.get_data (
        p_sql_statement    =&gt; p_item.lov_definition,
        p_min_columns      =&gt; 2,
        p_max_columns      =&gt; 2,
        p_component_name   =&gt; p_item.name,
        p_search_type      =&gt; apex_plugin_util.c_search_contains_ignore,
        p_search_column_no =&gt; 1,
        p_search_string    =&gt; apex_plugin_util.get_search_string (
            p_search_type   =&gt; apex_plugin_util.c_search_contains_ignore,
            p_search_string =&gt; p_value ) );
</pre></div>
<!-- class="refsect1" -->
<a id="BABFHCAB"></a>
<div id="AEAPI1341" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">IS_EQUAL <a id="sthref562"></a>Function</h2>
<p>This function returns <code>TRUE</code> if both values are equal and <code>FALSE</code> if not. If both values are <code>NULL</code>, <code>TRUE</code> is returned.</p>
<p class="subhead2"><a id="AEAPI1342"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.IS_EQUAL (
    p_value1 IN VARCHAR2
    p_value2 IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI1343"></a>Parameters</p>
<p><a href="#BABDIGCD">Table 19-30</a> describes the parameters available in the <code>IS_EQUAL</code> function.</p>
<div id="AEAPI1344" class="tblformal">
<p class="titleintable"><a id="sthref563"></a><a id="BABDIGCD"></a>Table 19-30 IS_EQUAL Parameters</p>
<table class="cellalignment3315" title="IS_EQUAL Parameters" summary="This table describes the parameters available in the IS_EQUAL function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t31">Parameter</th>
<th class="cellalignment3316" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t31" headers="r1c1-t31">
<p><code>p_value1</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t31 r1c2-t31">
<p>First value to compare.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t31" headers="r1c1-t31">
<p><code>p_value2</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t31 r1c2-t31">
<p>Second value to compare.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1345"></a>Return</p>
<p><a href="#BABFBDGI">Table 19-31</a> describes the return value by the function IS_EQUAL.</p>
<div id="AEAPI1346" class="tblformal">
<p class="titleintable"><a id="sthref564"></a><a id="BABFBDGI"></a>Table 19-31 IS_EQUAL Return</p>
<table class="cellalignment3315" title="IS_EQUAL Return" summary="This table describes the return values for the IS_EQUAL function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t32">Return</th>
<th class="cellalignment3316" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t32" headers="r1c1-t32">
<p><code>BOOLEAN</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t32 r1c2-t32">
<p>Returns <code>TRUE</code> if both values are equal or both values are <code>NULL</code>, otherwise it returns <code>FALSE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1347"></a>Example</p>
<p>In the following example, if the value in the database is different from what is entered, the code in the if statement is executed.</p>
<pre>if NOT apex_plugin_util.is_equal(l_database_value, l_current_value) then
    -- value has changed, do something
    null;
end if;
</pre></div>
<!-- class="refsect1" -->
<a id="BABGAJFD"></a>
<div id="AEAPI1348" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PAGE_ITEM_NAMES_TO_JQUERY <a id="sthref565"></a>Function</h2>
<p>This function returns a jQuery selector based on a comma delimited string of page item names. For example, you could use this function for a plug-in attribute called &#34;Page Items to Submit&#34; where the JavaScript code has to read the values of the specified page items.</p>
<p class="subhead2"><a id="AEAPI1349"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PAGE_ITEM_NAMES_TO_JQUERY (
    p_page_item_names IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1350"></a>Parameters</p>
<p><a href="#BABCIGCF">Table 19-32</a> describes the parameters available in the PAGE_ITEM_NAMES_TO_JQUERY function.</p>
<div id="AEAPI1351" class="tblformal">
<p class="titleintable"><a id="sthref566"></a><a id="BABCIGCF"></a>Table 19-32 PAGE_ITEM_NAMES_TO_JQUERY Parameters</p>
<table class="cellalignment3315" title="PAGE_ITEM_NAMES_TO_JQUERY Parameters" summary="This table describes the parameters available in the PAGE_ITEM_NAMES_TO_JQUERY function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t33">Parameter</th>
<th class="cellalignment3316" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t33" headers="r1c1-t33">
<p><code>p_page_item_names</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t33 r1c2-t33">
<p>Comma delimited list of page item names.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1352"></a>Return</p>
<p><a href="#BABFBDGI">Table 19-31</a> describes the return value by the PAGE_ITEM_NAMES_TO_JQUERY function.</p>
<div id="AEAPI1353" class="tblformal">
<p class="titleintable"><a id="sthref567"></a><a id="sthref568"></a>Table 19-33 PAGE_ITEM_NAMES_TO_JQUERY Return</p>
<table class="cellalignment3315" title="PAGE_ITEM_NAMES_TO_JQUERY Return" summary="This table describes the returns for the PAGE_ITEM_NAMES_TO_JQUERY function." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t34">Return</th>
<th class="cellalignment3316" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t34" headers="r1c1-t34">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t34 r1c2-t34">
<p>Transforms the page items specified in <code>p_page_item_names</code> into a jQuery selector.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1354"></a>Example</p>
<p>The following example shows the code to construct the initialization call for a JavaScript function called <code>myOwnWidget.</code> This function gets an object with several attributes where one attribute is <code>pageItemsToSubmit</code> which is expected to be a jQuery selector.</p>
<pre>apex_javascript.add_onload_code (
    p_code =&gt; &#39;myOwnWidget(&#39;||
                  &#39;&#34;#&#39;||p_item.name||&#39;&#34;,&#39;||
                  &#39;{&#39;||
                  apex_javascript.add_attribute(&#39;ajaxIdentifier&#39;,      apex_plugin.get_ajax_identifier)||
                  apex_javascript.add_attribute(&#39;dependingOnSelector&#39;, apex_plugin_util.page_item_names_to_jquery(p_item.lov_cascade_parent_items))||
                  apex_javascript.add_attribute(&#39;optimizeRefresh&#39;,     p_item.ajax_optimize_refresh)||
                  apex_javascript.add_attribute(&#39;pageItemsToSubmit&#39;,   apex_plugin_util.page_item_names_to_jquery(p_item.ajax_items_to_submit))||
                  apex_javascript.add_attribute(&#39;nullValue&#39;,           p_item.lov_null_value, false, false)||
                  &#39;});&#39; );
</pre></div>
<!-- class="refsect1" -->
<a id="BABCIFHG"></a>
<div id="AEAPI1355" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PRINT_DISPLAY_ONLY<a id="sthref569"></a> Procedure</h2>
<p>This procedure outputs a SPAN tag for a display only field.</p>
<p class="subhead2"><a id="AEAPI1356"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PRINT_DISPLAY_ONLY (
    p_item_name        IN VARCHAR2,
    p_display_value    IN VARCHAR2,
    p_show_line_breaks IN BOOLEAN,
    p_attributes       IN VARCHAR2,
    p_id_postfix       IN VARCHAR2 DEFAULT &#39;_DISPLAY&#39;);
</pre>
<p class="subhead2"><a id="AEAPI1357"></a>Parameters</p>
<p><a href="#BABJGDFH">Table 19-34</a> describes the parameters available in the PRINT_DISPLAY_ONLY procedure.</p>
<div id="AEAPI1358" class="tblformal">
<p class="titleintable"><a id="sthref570"></a><a id="BABJGDFH"></a>Table 19-34 PRINT_DISPLAY_ONLY Parameter</p>
<table class="cellalignment3315" title="PRINT_DISPLAY_ONLY Parameter" summary="This table describes the parameters available in the PRINT_DISPLAY_ONLY procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t35">Parameter</th>
<th class="cellalignment3316" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t35" headers="r1c1-t35">
<p><code>p_item_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t35 r1c2-t35">
<p>Name of the page item. This parameter should be called with <code>p_item.name</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t35" headers="r1c1-t35">
<p><code>p_display_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t35 r1c2-t35">
<p>Text to be displayed.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t35" headers="r1c1-t35">
<p><code>p_show_line_breaks</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t35 r1c2-t35">
<p>If set to TRUE line breaks in <code>p_display_value</code> are changed to &lt;br /&gt; so that the browser renders them as line breaks.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t35" headers="r1c1-t35">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t35 r1c2-t35">
<p>Additional attributes added to the SPAN tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t35" headers="r1c1-t35">
<p><code>p_id_postfix</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t35 r1c2-t35">
<p>Postfix which is getting added to the value in <code>p_item_name</code> to get the ID for the SPAN tag. Default is _DISPLAY.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1359"></a>Example</p>
<p>The following code could be used in an item type plug-in to render a display only page item.</p>
<pre>apex_plugin_util.print_display_only (
    p_item_name        =&gt; p_item.name,
    p_display_value    =&gt; p_value,
    p_show_line_breaks =&gt; false,
    p_escape           =&gt; true,
    p_attributes       =&gt; p_item.element_attributes );
</pre></div>
<!-- class="refsect1" -->
<a id="BABIIIFB"></a>
<div id="AEAPI1360" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PRINT_ESCAPED_VALUE <a id="sthref571"></a>Procedure</h2>
<p>This procedure outputs the value in an escaped form and chunks big strings into smaller outputs.</p>
<p class="subhead2"><a id="AEAPI1361"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PRINT_ESCAPED_VALUE (
    p_value   IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI1362"></a>Parameters</p>
<p><a href="#BABDJGHJ">Table 19-35</a> describes the parameters available in the PRINT_ESCAPED_VALUE procedure.</p>
<div id="AEAPI1363" class="tblformal">
<p class="titleintable"><a id="sthref572"></a><a id="BABDJGHJ"></a>Table 19-35 PRINT_ESCAPED_VALUE Parameter</p>
<table class="cellalignment3315" title="PRINT_ESCAPED_VALUE Parameter" summary="This table describes the parameters available in the PRINT_ESCAPED_VALUE procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t36">Parameter</th>
<th class="cellalignment3316" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t36" headers="r1c1-t36">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t36 r1c2-t36">
<p>Text which should be escaped and then printed to the HTTP buffer.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1364"></a>Example</p>
<p>Prints a hidden field with the current value of the page item.</p>
<pre>sys.htp.prn(&#39;&lt;input type=&#34;hidden&#34; name=&#34;&#39;&#34; id=&#34;&#39;||p_item_name||&#39;&#34; value=&#34;&#39;);
print_escaped_value(p_value);
sys.htp.prn(&#39;&#34;&gt;&#39;);
</pre></div>
<!-- class="refsect1" -->
<a id="BABBCEEF"></a>
<div id="AEAPI1365" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PRINT_HIDDEN_IF_READONLY <a id="sthref573"></a>Procedure</h2>
<p>This procedure outputs a hidden field to store the page item value if the page item is rendered as readonly and is not printer friendly. If this procedure is called in an item type plug-in, the parameters of the plug-in interface should directly be passed in.</p>
<p class="subhead2"><a id="AEAPI1366"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PRINT_HIDDEN_IF_READ_ONLY (
    p_item_name   IN VARCHAR2,
    p_value       IN VARCHAR2,
    p_is_readonly IN BOOLEAN,
    p_is_printer_friendly IN BOOLEAN,
    p_id_postfix  IN VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI1367"></a>Parameters</p>
<p><a href="#BABCJIDF">Table 19-36</a> describes the parameters available in the PRINT_HIDDEN_IF_READONLY procedure.</p>
<div id="AEAPI1368" class="tblformal">
<p class="titleintable"><a id="sthref574"></a><a id="BABCJIDF"></a>Table 19-36 PRINT_HIDDEN_IF_READONLY Parameters</p>
<table class="cellalignment3315" title="PRINT_HIDDEN_IF_READONLY Parameters" summary="This table describes the parameters available in the PRINT_HIDDEN_IF_READONLY procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t37">Parameter</th>
<th class="cellalignment3316" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t37" headers="r1c1-t37">
<p><code>p_item_name</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t37 r1c2-t37">
<p>Name of the page item. For this parameter the <code>p_item.name</code> should be passed in.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t37" headers="r1c1-t37">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t37 r1c2-t37">
<p>Current value of the page item. For this parameter <code>p_value</code> should be passed in.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t37" headers="r1c1-t37">
<p><code>p_is_readonly</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t37 r1c2-t37">
<p>Is the item rendered readonly. For this parameter <code>p_is_readonly</code> should be passed in.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t37" headers="r1c1-t37">
<p><code>p_is_printer_friendly</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t37 r1c2-t37">
<p>Is the item rendered in printer friendly mode. For this parameter <code>p_is_printer_friendly</code> should be passed in.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t37" headers="r1c1-t37">
<p><code>p_id_postfix</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t37 r1c2-t37">
<p>Used to generate the ID attribute of the hidden field. It is build based on <code>p_item_name</code> and the value in <code>p_id_postfix</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1369"></a>Example</p>
<p>Writes a hidden field with the current value to the HTTP output if <code>p_is_readonly</code> is TRUE and <code>p_printer_friendly</code> is FALSE.</p>
<pre>apex_plugin_util.print_hidden_if_readonly (
    p_item_name           =&gt; p_item.name,
    p_value               =&gt; p_value,
    p_is_readonly         =&gt; p_is_readonly,
    p_is_printer_friendly =&gt; p_is_printer_friendly );
</pre></div>
<!-- class="refsect1" -->
<a id="BABDFDDJ"></a>
<div id="AEAPI1370" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PRINT_JSON_HTTP_HEADER <a id="sthref575"></a>Procedure</h2>
<p>This procedure outputs a standard HTTP header for a JSON output.</p>
<p class="subhead2"><a id="AEAPI1371"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PRINT_JSON_HTTP_HEADER;
</pre>
<p class="subhead2"><a id="AEAPI1372"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI1373"></a>Example</p>
<p>This example shows how to use this procedure in the AJAX callback function of a plugin. This code outputs a JSON structure in the following format<code>:</code> <code>[{&#34;d&#34;:&#34;Display 1&#34;,&#34;r&#34;:&#34;Return 1&#34;},{&#34;d&#34;:&#34;Display 2&#34;,&#34;r&#34;:&#34;Return 2&#34;}]</code></p>
<pre>-- Write header for the JSON stream.
apex_plugin_util.print_json_http_header;
-- initialize the JSON structure
sys.htp.p(&#39;[&#39;);
-- loop through the value array
for i in 1 .. l_values.count
loop
    -- add array entry
    sys.htp.p (
        case when i &gt; 1 then &#39;,&#39; end||
        &#39;{&#39;||
        apex_javascript.add_attribute(&#39;d&#39;, sys.htf.escape_sc(l_values(i).display_value), false, true)||
        apex_javascript.add_attribute(&#39;r&#39;, sys.htf.escape_sc(l_values(i).return_value), false, false)||
        &#39;}&#39; );
end loop;
-- close the JSON structure
sys.htp.p(&#39;]&#39;);
</pre></div>
<!-- class="refsect1" -->
<a id="BABIIHDG"></a>
<div id="AEAPI1374" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PRINT_LOV_AS_JSON <a id="sthref576"></a>Procedure</h2>
<p>This procedure outputs a JSON response based on the result of a two column LOV in the format:</p>
<pre>[{&#34;d:&#34;display&#34;,&#34;r&#34;:&#34;return&#34;},{&#34;d&#34;:....,&#34;r&#34;:....},....]
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The HTTP header is initialized with MIME type &#34;application/json&#34; as well.</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" -->
<p class="subhead2"><a id="AEAPI1375"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PRINT_LOV_AS_JSON (
    p_sql_statement         IN VARCHAR2,
    p_component_name        IN VARCHAR2,
    p_escape                IN BOOLEAN,
    p_replace_substitutions IN BOOLEAN DEFAULT FALSE);
</pre>
<p class="subhead2"><a id="AEAPI1376"></a>Parameters</p>
<p><a href="#BABECCIF">Table 19-37</a> describes the parameters available in the PRINT_LOV_AS_JSON procedure.</p>
<div id="AEAPI1377" class="tblformal">
<p class="titleintable"><a id="sthref577"></a><a id="BABECCIF"></a>Table 19-37 PRINT_LOV_AS_JSON Parameters</p>
<table class="cellalignment3315" title="PRINT_LOV_AS_JSON Parameters" summary="This table describes the parameters available in the PRINT_LOV_AS_JSON procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t39">Parameter</th>
<th class="cellalignment3316" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t39" headers="r1c1-t39">
<p><code>p_sql_statement</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t39 r1c2-t39">
<p>A SQL statement which returns two columns from the SELECT.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t39" headers="r1c1-t39">
<p><code>p_component_name</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t39 r1c2-t39">
<p>The name of the page item or report column that is used in case an error is displayed.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t39" headers="r1c1-t39">
<p><code>p_escape</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t39 r1c2-t39">
<p>If set to <code>TRUE</code> the value of the display column is escaped, otherwise it is output as is.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t39" headers="r1c1-t39">
<p><code>p_replace_substitutions</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t39 r1c2-t39">
<p>If set to TRUE, <code>apex_plugin_util.replace_substitutions</code> is called for the value of the display column, otherwise, it is output as is.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1378"></a>Example</p>
<p>This example shows how to use the procedure in an AJAX callback function of an item type plug-in. The following call writes the LOV result as a JSON array to the HTTP output.</p>
<pre>apex_plugin_util.print_lov_as_json (
    p_sql_statement  =&gt; p_item.lov_definition,
    p_component_name =&gt; p_item.name,
    p_escape         =&gt; true );
</pre>
<a id="BABEEIAG"></a>
<div id="AEAPI1379" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">PRINT_OPTION <a id="sthref578"></a>Procedure</h2>
<p>This procedure outputs an OPTION tag.</p>
<p class="subhead2"><a id="AEAPI1380"></a>Syntax</p>
<pre>APEX_PLUGIN_UTIL.PRINT_OPTION (
    p_display_value       IN VARCHAR2,
    p_return_value        IN VARCHAR2,
    p_is_selected         IN BOOLEAN,
    p_attributes          IN VARCHAR2,
    p_escape              IN BOOLEAN DEFAULT TRUE);
</pre>
<p class="subhead2"><a id="AEAPI1381"></a>Parameters</p>
<p><a href="#BABDFBFF">Table 19-38</a> describes the parameters available in the PRINT_OPTION procedure.</p>
<div id="AEAPI1382" class="tblformal">
<p class="titleintable"><a id="sthref579"></a><a id="BABDFBFF"></a>Table 19-38 PRINT_OPTION Parameters</p>
<table class="cellalignment3315" title="PRINT_OPTION Parameters" summary="This table describes the parameters available in the PRINT_OPTION procedure." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t40">Parameter</th>
<th class="cellalignment3316" id="r1c2-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t40" headers="r1c1-t40">
<p><code>p_display_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t40 r1c2-t40">
<p>Text which is displayed by the option.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t40" headers="r1c1-t40">
<p><code>p_return_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t40 r1c2-t40">
<p>Value which is set when the option is picked.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t40" headers="r1c1-t40">
<p><code>p_is_selected</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t40 r1c2-t40">
<p>Set to TRUE if the selected attribute should be set for this option.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t40" headers="r1c1-t40">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t40 r1c2-t40">
<p>Additional HTML attributes which should be set for the OPTION tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t40" headers="r1c1-t40">
<p><code>p_escape</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t40 r1c2-t40">
<p>Set to TRUE if special characters in <code>p_display_value</code> should be escaped.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1383"></a>Example</p>
<p>The following example could be used in an item type plug-in to create a SELECT list. Use <code>apex_plugin_util.is_equal</code> to find out which list entry should be marked as current.</p>
<pre>sys.htp.p(&#39;&lt;select id=&#34;&#39;||p_item.name||&#39;&#34; size=&#34;&#39;||nvl(p_item.element_height, 5)||&#39;&#34; &#39;||coalesce(p_item.element_attributes, &#39;class=&#34;new_select_list&#34;&#39;)||&#39;&gt;&#39;);
-- loop through the result and add list entries
for i in 1 .. l_values.count
loop
    apex_plugin_util.print_option (
        p_display_value =&gt; l_values(i).display_value,
        p_return_value  =&gt; l_values(i).return_value,
        p_is_selected   =&gt; apex_plugin_util.is_equal(l_values(i).return_value, p_value),
        p_attributes    =&gt; p_item.element_option_attributes,
        p_escape        =&gt; true );
end loop;
sys.htp.p(&#39;&lt;/select&gt;&#39;);
</pre></div>
<!-- class="refsect1" -->
<a id="BABGHCCE"></a>
<div id="AEAPI2289" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref580"></a>REPLACE_SUBSTITUTIONS Function</h2>
<p>This function replaces any <code>&amp;ITEM</code>. substitution references with their actual value. If <code>p_escape</code> is set to <code>TRUE</code>, any special characters contained in the value of the referenced item are escaped to prevent Cross-site scripting (XSS) attacks.</p>
<p class="subhead2"><a id="AEAPI2290"></a>Syntax</p>
<pre>apex_plugin_util.replace_substitutions (
    p_value    in varchar2,
    p_escape   in boolean default true )
    return varchar2;
</pre>
<p class="subhead2"><a id="AEAPI2291"></a>Parameters</p>
<p><a href="#BABJCGIA">Table 19-39</a> describes the parameters available in the REPLACE_SUBSTITUTION function.</p>
<div id="AEAPI2292" class="tblformal">
<p class="titleintable"><a id="sthref581"></a><a id="BABJCGIA"></a>Table 19-39 REPLACE_SUBSTITUTION Parameters</p>
<table class="cellalignment3315" title="REPLACE_SUBSTITUTION Parameters" summary="Describes API parameters." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t41">Parameter</th>
<th class="cellalignment3316" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t41" headers="r1c1-t41">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t41 r1c2-t41">
<p>This value is a string which can contain several <code>&amp;ITEM.</code> references which are replaced by their actual page item values.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t41" headers="r1c1-t41">
<p><code>p_escape</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t41 r1c2-t41">
<p>If set to <code>TRUE</code> any special characters contained in the value of the referenced item are escaped to prevent Cross-site scripting (XSS) attacks. If set to <code>FALSE</code>, the referenced items are not escaped.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI2293"></a>Example</p>
<p>The following example replaces any substitution syntax references in the region plug-in <code>attribute 05</code> with their actual values. Any special characters in the values are escaped.</p>
<pre>l_advanced_formatting  := apex_plugin_util.replace_substitutions (
                              p_value =&gt; p_region.attribute_05,
                              p_escape =&gt; true );
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3308">
<tr>
<td class="cellalignment3317">
<table class="cellalignment3313">
<tr>
<td class="cellalignment3312"><a href="apex_plugin.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3312"><a href="apex_ui_default.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3319">
<table class="cellalignment3311">
<tr>
<td class="cellalignment3312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>