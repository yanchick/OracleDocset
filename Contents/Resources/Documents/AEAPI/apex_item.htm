<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-1798"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/APEX_ITEM"></a><title>APEX_ITEM</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748"/>
<meta name="dcterms.created" content="2014-05-22T14:53:19Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Application Express API Reference"/>
<meta name="dcterms.identifier" content="E17963-07"/>
<meta name="dcterms.isVersionOf" content="AEAPI"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="apex_ir.htm" title="Previous" type="text/html"/>
<link rel="Next" href="apex_javascript.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17963-07.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">16/28</span> <!-- End Header -->
<div id="AEAPI192" class="chapter"><a id="CACEEEJE"></a>
<h1 class="chapter"><span class="secnum">12</span> APEX_ITEM</h1>
<p>You can use the <a id="sthref342"></a><a id="sthref343"></a><code>APEX_ITEM</code> package to create form elements dynamically based on a SQL query instead of creating individual items page by page.</p>
<p class="subhead2"><a id="AEAPI2273"></a>Topics:</p>
<ul>
<li>
<p><a href="#CHDDCHAF">CHECKBOX2 Function</a></p>
</li>
<li>
<p><a href="#CHDFDDEI">DATE_POPUP Function</a></p>
</li>
<li>
<p><a href="#CHDJHBCG">DATE_POPUP2 Function</a></p>
</li>
<li>
<p><a href="#CHDFCFAG">DISPLAY_AND_SAVE Function</a></p>
</li>
<li>
<p><a href="#CHDBFHGA">HIDDEN Function</a></p>
</li>
<li>
<p><a href="#CHDHHGIG">MD5_CHECKSUM Function</a></p>
</li>
<li>
<p><a href="#CHDHJDBE">MD5_HIDDEN Function</a></p>
</li>
<li>
<p><a href="#CHDIJCBD">POPUP_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDEBCCI">POPUP_FROM_QUERY Function</a></p>
</li>
<li>
<p><a href="#CHDHJICI">POPUPKEY_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDEHBAC">POPUPKEY_FROM_QUERY Function</a></p>
</li>
<li>
<p><a href="#CHDGCJCG">RADIOGROUP Function</a></p>
</li>
<li>
<p><a href="#CHDHJJAB">SELECT_LIST Function</a></p>
</li>
<li>
<p><a href="#CHDFGAEC">SELECT_LIST_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDCAEAB">SELECT_LIST_FROM_LOV_XL Function</a></p>
</li>
<li>
<p><a href="#CHDIDGDA">SELECT_LIST_FROM_QUERY Function</a></p>
</li>
<li>
<p><a href="#CHDGBFBE">SELECT_LIST_FROM_QUERY_XL Function</a></p>
</li>
<li>
<p><a href="#CHDCDHJI">TEXT Function</a></p>
</li>
<li>
<p><a href="#CHDJJFGG">TEXTAREA Function</a></p>
</li>
<li>
<p><a href="#CHDEBBHH">TEXT_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDJBFFI">TEXT_FROM_LOV_QUERY Function</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDDCHAF"></a>
<div id="AEAPI193" class="refsect1">
<h2 class="refsect1">CHECKBOX2 <a id="sthref344"></a><a id="sthref345"></a>Function</h2>
<p>This function creates check boxes.</p>
<p class="subhead2"><a id="AEAPI1006"></a>Syntax</p>
<pre>APEX_ITEM.CHECKBOX2(
    p_idx                       IN    NUMBER,
    p_value                     IN    VARCHAR2 DEFAULT NULL,
    p_attributes                IN    VARCHAR2 DEFAULT NULL,
    p_checked_values            IN    VARCHAR2 DEFAULT NULL,
    p_checked_values_delimiter  IN    VARCHAR2 DEFAULT &#39;:&#39;,
    p_item_id                   IN    VARCHAR2 DEFAULT NULL,
    p_item_label                IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1007"></a>Parameters</p>
<p><a href="#CHDBHBBJ">Table 12-1</a> describes the parameters available in the <code>CHECKBOX2</code> function.</p>
<div id="AEAPI1008" class="tblformal">
<p class="titleintable"><a id="sthref346"></a><a id="CHDBHBBJ"></a>Table 12-1 CHECKBOX2 Parameters</p>
<table class="cellalignment3315" title="CHECKBOX2 Parameters" summary="This table describes the parameters available in CHECKBOX." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t2">Parameter</th>
<th class="cellalignment3316" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t2" headers="r1c1-t2">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t2 r1c2-t2">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable is used. Valid range of values is 1 to 50. For example 1 creates <code>F01</code> and 2 creates <code>F02</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t2" headers="r1c1-t2">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t2 r1c2-t2">
<p>Value of a check box, hidden field, or input form item</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t2" headers="r1c1-t2">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t2 r1c2-t2">
<p>Controls HTML tag attributes (such as disabled)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t2" headers="r1c1-t2">
<p><code>p_checked_values</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t2 r1c2-t2">
<p>Values to be checked by default</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t2" headers="r1c1-t2">
<p><code>p_checked_values_delimiter</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t2 r1c2-t2">
<p>Delimits the values in the previous parameter, <code>p_checked_values</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t2" headers="r1c1-t2">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t2 r1c2-t2">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t2" headers="r1c1-t2">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t2 r1c2-t2">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1009"></a>Examples of Default Check Box Behavior</p>
<p>The following example demonstrates how to create a selected check box for each employee in the <code>emp</code> table.</p>
<pre>SELECT APEX_ITEM.CHECKBOX2(1,empno,&#39;CHECKED&#39;) &#34;Select&#34;,
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p>The following example demonstrates how to have all check boxes for employees display without being selected.</p>
<pre>SELECT APEX_ITEM.CHECKBOX2(1,empno) &#34;Select&#34;,
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p>The following example demonstrates how to select the check boxes for employees who work in department 10.</p>
<pre>SELECT APEX_ITEM.CHECKBOX2(1,empno,DECODE(deptno,10,&#39;CHECKED&#39;,NULL)) &#34;Select&#34;,
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p>The next example demonstrates how to select the check boxes for employees who work in department 10 or department 20.</p>
<pre>SELECT APEX_ITEM.CHECKBOX2(1,deptno,NULL,&#39;10:20&#39;,&#39;:&#39;) &#34;Select&#34;,
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p class="subhead2"><a id="AEAPI1010"></a>Creating an On-Submit Process</p>
<p>If you are using check boxes in your application, you might need to create an On Submit process to perform a specific type of action on the selected rows. For example, you could have a Delete button that uses the following logic:</p>
<pre>SELECT APEX_ITEM.CHECKBOX2(1,empno) &#34;Select&#34;,
    ename, job
FROM   emp
ORDER  by 1
</pre>
<p>Consider the following sample on-submit process:</p>
<pre>FOR I in 1..APEX_APPLICATION.G_F01.COUNT LOOP
    DELETE FROM emp WHERE empno = to_number(APEX_APPLICATION.G_F01(i));
END LOOP;
</pre>
<p>The following example demonstrates how to create unselected checkboxes for each employee in the emp table, with a unique ID. This is useful for referencing records from within JavaScript code:</p>
<pre>SELECT APEX_ITEM.CHECKBOX2(1,empno,NULL,NULL,NULL,&#39;f01_#ROWNUM#&#39;) &#34;Select&#34;,
    ename, job
FROM   emp
ORDER BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDFDDEI"></a>
<div id="AEAPI194" class="refsect1">
<h2 class="refsect1">DATE_POPUP <a id="sthref347"></a>Function</h2>
<p>Use this function with forms that include date fields. The <code>DATE_POPUP</code> function dynamically generates a date field that has a popup calendar button.</p>
<p class="subhead2"><a id="AEAPI1011"></a>Syntax</p>
<pre>APEX_ITEM.DATE_POPUP(
    p_idx                       IN    NUMBER,
    p_row                       IN    NUMBER,
    p_value                     IN    VARCHAR2 DEFAULT NULL,
    p_date_format               IN    DATE DEFAULT &#39;DD-MON-YYYY&#39;,
    p_size                      IN    NUMBER DEFAULT 20,
    p_maxlength                 IN    NUMBER DEFAULT 2000,
    p_attributes                IN    VARCHAR2 DEFAULT NULL,
    p_item_id                   IN    VARCHAR2 DEFAULT NULL,
    p_item_label                IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1012"></a>Parameters</p>
<p><a href="#CHDEHIBC">Table 12-2</a> describes the parameters available in the <code>DATE_POPUP</code> function.</p>
<div id="AEAPI1013" class="tblformal">
<p class="titleintable"><a id="sthref348"></a><a id="CHDEHIBC"></a>Table 12-2 DATE_POPUP Parameters</p>
<table class="cellalignment3315" title="DATE_POPUP Parameters" summary="This table describes the parameters available in DATE_POPUP." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t3">Parameter</th>
<th class="cellalignment3316" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t3" headers="r1c1-t3">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t3 r1c2-t3">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable is used.Valid range of values is 1 to 50. For example, 1 creates <code>F01</code> and 2 creates <code>F02</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t3" headers="r1c1-t3">
<p><code>p_row</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t3 r1c2-t3">
<p>This parameter is deprecated. Anything specified for this value is ignored</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t3" headers="r1c1-t3">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t3 r1c2-t3">
<p>Value of a field item</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t3" headers="r1c1-t3">
<p><code>p_date_format</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t3 r1c2-t3">
<p>Valid database date format</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t3" headers="r1c1-t3">
<p><code>p_size</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t3 r1c2-t3">
<p>Controls HTML tag attributes (such as disabled)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t3" headers="r1c1-t3">
<p><code>p_maxlength</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t3 r1c2-t3">
<p>Determines the maximum number of enterable characters. Becomes the maxlength attribute of the <code>&lt;input&gt;</code> HTML tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t3" headers="r1c1-t3">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t3 r1c2-t3">
<p>Extra HTML parameters you want to add</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t3" headers="r1c1-t3">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t3 r1c2-t3">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t3" headers="r1c1-t3">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t3 r1c2-t3">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code>TO_CHAR</code> or <code>TO_DATE</code> functions</div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" -->
<p class="subhead2"><a id="AEAPI1014"></a>Example</p>
<p>The following example demonstrates how to use <code>APEX_ITEM.DATE_POPUP</code> to create popup calendar buttons for the <code>hiredate</code> column.</p>
<pre>SELECT 
    empno, 
    APEX_ITEM.HIDDEN(1,empno)||
    APEX_ITEM.TEXT(2,ename) ename, 
    APEX_ITEM.TEXT(3,job) job, 
    mgr, 
    APEX_ITEM.DATE_POPUP(4,rownum,hiredate,&#39;dd-mon-yyyy&#39;) hd,
    APEX_ITEM.TEXT(5,sal) sal, 
    APEX_ITEM.TEXT(6,comm) comm,
    deptno
FROM emp
ORDER BY 1
</pre>
<a id="CHDJHBCG"></a>
<div id="AEAPI199" class="refsect1">
<h2 class="refsect1">DATE_POPUP2 <a id="sthref349"></a>Function</h2>
<p>Use this function with forms that include date fields. The DATE_POPUP2 function dynamically generates a date field that has a jQuery based popup calendar with button.</p>
<p class="subhead2"><a id="AEAPI1015"></a>Syntax</p>
<pre>APEX_ITEM.DATE_POPUP2(
    p_idx                   in number,
    p_value                 in date     default null,
    p_date_format           in varchar2 default null,
    p_size                  in number   default 20,
    p_maxLength             in number   default 2000,
    p_attributes            in varchar2 default null,
    p_item_id               in varchar2 default null,
    p_item_label            in varchar2 default null,
    p_default_value         in varchar2 default null,
    p_max_value             in varchar2 default null,
    p_min_value             in varchar2 default null,
    p_show_on               in varchar2 default &#39;button&#39;,
    p_number_of_months      in varchar2 default null,
    p_navigation_list_for   in varchar2 default &#39;NONE&#39;,
    p_year_range            in varchar2 default null,
    p_validation_date       in varchar2 default null)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1016"></a>Parameters</p>
<p><a href="#CHDGJHDF">Table 12-3</a> describes the parameters available in the <code>DATE_POPUP2</code> function.</p>
<div id="AEAPI1017" class="tblformal">
<p class="titleintable"><a id="sthref350"></a><a id="CHDGJHDF"></a>Table 12-3 DATE_POPUP2 Parameters</p>
<table class="cellalignment3315" title="DATE_POPUP2 Parameters" summary="This table describes the parameters available in DATE_POPUP2." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t5">Parameter</th>
<th class="cellalignment3316" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t5" headers="r1c1-t5">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t5 r1c2-t5">
<p>Number that determines which APEX_APPLICATION global variable is used.Valid range of values is 1 to 50. For example, 1 creates F01 and 2 creates F02.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t5" headers="r1c1-t5">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t5 r1c2-t5">
<p>Value of a field item</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t5" headers="r1c1-t5">
<p><code>p_date_format</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t5 r1c2-t5">
<p>Valid database date format</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t5" headers="r1c1-t5">
<p><code>p_size</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t5 r1c2-t5">
<p>Controls HTML tag attributes (such as disabled)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t5" headers="r1c1-t5">
<p><code>p_maxlength</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t5 r1c2-t5">
<p>Determines the maximum number of enterable characters. Becomes the maxlength attribute of the <code>&lt;input&gt;</code> HTML tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t5" headers="r1c1-t5">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t5 r1c2-t5">
<p>Extra HTML parameters you want to add</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t5" headers="r1c1-t5">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t5 r1c2-t5">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t5" headers="r1c1-t5">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t5 r1c2-t5">
<p>Invisible label created for the item</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t5" headers="r1c1-t5">
<p><code>p_default_value</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t5 r1c2-t5">
<p>The default date which should be selected in DatePicker calendar popup</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t5" headers="r1c1-t5">
<p><code>p_max_value</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t5 r1c2-t5">
<p>The Maximum date that can be selected from the datepicker</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r12c1-t5" headers="r1c1-t5">
<p>p_min_value</p>
</td>
<td class="cellalignment3317" headers="r12c1-t5 r1c2-t5">
<p>The Minimum date that can be selected from the datepicker.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r13c1-t5" headers="r1c1-t5">
<p>p_show_on</p>
</td>
<td class="cellalignment3317" headers="r13c1-t5 r1c2-t5">
<p>Determines when the datepicker displays, on button click or on focus of the item or both.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r14c1-t5" headers="r1c1-t5">
<p>p_number_of_months</p>
</td>
<td class="cellalignment3317" headers="r14c1-t5 r1c2-t5">
<p>Determines number of months displayed. Value should be in array formats follows: [row,column]</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r15c1-t5" headers="r1c1-t5">
<p>p_navigation_list_for</p>
</td>
<td class="cellalignment3317" headers="r15c1-t5 r1c2-t5">
<p>Determines if a select list is displayed for Changing Month, Year or Both. Possible values include: MONTH,YEAR,MONTH_AND_YEAR and default is null.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r16c1-t5" headers="r1c1-t5">
<p>p_year_range</p>
</td>
<td class="cellalignment3317" headers="r16c1-t5 r1c2-t5">
<p>The range of years displayed in the year selection list.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r17c1-t5" headers="r1c1-t5">
<p>p_validation_date</p>
</td>
<td class="cellalignment3317" headers="r17c1-t5 r1c2-t5">
<p>Used to store the Date value for the which date validation failed</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code>TO_CHAR</code> or <code>TO_DATE</code> functions</div>
</div>
<!-- class="refsect1" -->
<a id="CHDFCFAG"></a>
<div id="AEAPI195" class="refsect1">
<h2 class="refsect1"><a id="sthref351"></a>DISPLAY_AND_SAVE Function</h2>
<p>Use this function to display an item as text, but save its value to session state.</p>
<p class="subhead2"><a id="AEAPI1018"></a>Syntax</p>
<pre>APEX_ITEM.DISPLAY_AND_SAVE(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1019"></a>Parameters</p>
<p><a href="#CHDFBJEH">Table 12-4</a> describes the parameters available in the <code>DISPLAY_AND_SAVE</code> function.</p>
<div id="AEAPI1020" class="tblformal">
<p class="titleintable"><a id="sthref352"></a><a id="CHDFBJEH"></a>Table 12-4 DISPLAY_AND_SAVE Parameters</p>
<table class="cellalignment3315" title="DISPLAY_AND_SAVE Parameters" summary="This table describes the parameters available in DISPLAY_AND_SAVE." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t7">Parameter</th>
<th class="cellalignment3316" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t7" headers="r1c1-t7">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t7 r1c2-t7">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable is used.Valid range of values is 1 to 50. For example, 1 creates <code>F01</code> and 2 creates <code>F02</code></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t7" headers="r1c1-t7">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t7 r1c2-t7">
<p>Current value</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t7" headers="r1c1-t7">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t7 r1c2-t7">
<p>HTML attribute ID for the <code>&lt;span&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t7" headers="r1c1-t7">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t7 r1c2-t7">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1021"></a>Example</p>
<p>The following example demonstrates how to use the <code>APEX_ITEM.DISPLAY_AND_SAVE</code> function.</p>
<pre>SELECT APEX_ITEM.DISPLAY_AND_SAVE(10,empno) c FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDBFHGA"></a>
<div id="AEAPI196" class="refsect1">
<h2 class="refsect1">HIDDEN <a id="sthref353"></a>Function</h2>
<p>This function dynamically generates hidden form items.</p>
<p class="subhead2"><a id="AEAPI1022"></a>Syntax</p>
<pre>APEX_ITEM.HIDDEN(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT
    p_attributes  IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL
) RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1023"></a>Parameters</p>
<p><a href="#CHDHFHHI">Table 12-5</a> describes the parameters available in the <code>HIDDEN</code> function.</p>
<div id="AEAPI1024" class="tblformal">
<p class="titleintable"><a id="sthref354"></a><a id="CHDHFHHI"></a>Table 12-5 HIDDEN Parameters</p>
<table class="cellalignment3315" title="HIDDEN Parameters" summary="This table describes the parameters available in HIDDEN." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t8">Parameter</th>
<th class="cellalignment3316" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t8" headers="r1c1-t8">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t8 r1c2-t8">
<p>Number to identify the item you want to generate. The number determines which <code>G_FXX</code> global is populated</p>
<p><span class="bold">See Also:</span> <a href="apex_app.htm#CHDDADIE">&#34;APEX_APPLICATION&#34;</a></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t8" headers="r1c1-t8">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t8 r1c2-t8">
<p>Value of the hidden input form item</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t8" headers="r1c1-t8">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t8 r1c2-t8">
<p>Extra HTML parameters you want to add</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t8" headers="r1c1-t8">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t8 r1c2-t8">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t8" headers="r1c1-t8">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t8 r1c2-t8">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1025"></a>Example</p>
<p>Typically, the primary key of a table is stored as a hidden column and used for subsequent update processing, for example:</p>
<pre>SELECT
    empno, 
    APEX_ITEM.HIDDEN(1,empno)||
    APEX_ITEM.TEXT(2,ename) ename,
    APEX_ITEM.TEXT(3,job) job, 
    mgr, 
    APEX_ITEM.DATE_POPUP(4,rownum,hiredate,&#39;dd-mon-yyyy&#39;) hiredate,
    APEX_ITEM.TEXT(5,sal) sal, 
    APEX_ITEM.TEXT(6,comm) comm, 
    deptno
FROM emp
ORDER BY 1
</pre>
<p>The previous query could use the following page process to process the results:</p>
<pre>BEGIN 
    FOR i IN 1..APEX_APPLICATION.G_F01.COUNT LOOP
        UPDATE emp
            SET
                ename=APEX_APPLICATION.G_F02(i),
                job=APEX_APPLICATION.G_F03(i),
                    hiredate=to_date(APEX_APPLICATION.G_F04(i),&#39;dd-mon-yyyy&#39;),
                    sal=APEX_APPLICATION.G_F05(i),
                    comm=APEX_APPLICATION.G_F06(i)
        WHERE empno=to_number(APEX_APPLICATION.G_F01(i));
    END LOOP;
END;
</pre>
<p>Note that the <code>G_F01</code> column (which corresponds to the hidden <code>EMPNO</code>) is used as the key to update each row.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDHHGIG"></a>
<div id="AEAPI197" class="refsect1">
<h2 class="refsect1">MD5_CHECKSUM <a id="sthref355"></a>Function</h2>
<p>Use this function for lost update detection. Lost update detection ensures data integrity in applications where data can be accessed concurrently.</p>
<p>This function produces hidden form field(s) with a name attribute equal to &#39;fcs&#39; and includes 50 inputs. APEX_ITEM.MD5_CHECKSUM also produces an MD5 checksum using Oracle database DBMS_CRYPTO:</p>
<pre>UTL_RAW.CAST_TO_RAW(DBMS_CRYPTO.MD5())
</pre>
<p>An MD5 checksum provides data integrity through hashing and sequencing to ensure that data is not altered or stolen as it is transmitted over a network.</p>
<p class="subhead2"><a id="AEAPI1026"></a>Syntax</p>
<pre>APEX_ITEM.MD5_CHECKSUM(
    p_value01   IN    VARCHAR2 DEFAULT NULL,
    p_value02   IN    VARCHAR2 DEFAULT NULL,
    p_value03   IN    VARCHAR2 DEFAULT NULL,
    ...
    p_value50   IN    VARCHAR2 DEFAULT NULL,
    p_col_sep   IN    VARCHAR2 DEFAULT &#39;|&#39;,
    p_item_id   IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1027"></a>Parameters</p>
<p><a href="#BABBAICB">Table 12-6</a> describes the parameters available in the <code>MD5_CHECKSUM</code> function.</p>
<div id="AEAPI1028" class="tblformal">
<p class="titleintable"><a id="sthref356"></a><a id="BABBAICB"></a>Table 12-6 MD5_CHECKSUM Parameters</p>
<table class="cellalignment3315" title="MD5_CHECKSUM Parameters" summary="This table describes the parameters available in MD5_CHECKSUM." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t9">Parameter</th>
<th class="cellalignment3316" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t9" headers="r1c1-t9">
<p><code>p_value01</code></p>
<p>...</p>
<p><code>p_value50</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t9 r1c2-t9">
<p>Fifty available inputs. If no parameters are supplied, the default to NULL</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t9" headers="r1c1-t9">
<p><code>p_col_sep</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t9 r1c2-t9">
<p>String used to separate <code>p_value</code> inputs. Defaults to the pipe symbol (|)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t9" headers="r1c1-t9">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t9 r1c2-t9">
<p>ID of the HTML form item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1029"></a>Example</p>
<p>This function generates hidden form elements with the name &#39;<code>fcs</code>&#39;. The values can subsequently be accessed by using the <code>APEX_APPLICATION.G_FCS array</code>.</p>
<pre>SELECT APEX_ITEM.MD5_CHECKSUM(ename,job,sal) md5_cks,
       ename, job, sal
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHJDBE"></a>
<div id="AEAPI198" class="refsect1">
<h2 class="refsect1">MD5_HIDDEN <a id="sthref357"></a>Function</h2>
<p>Use this function for lost update detection. Lost update detection ensures data integrity in applications where data can be accessed concurrently.</p>
<p>This function produces a hidden form field and includes 50 inputs. <code>APEX_ITEM</code>.<code>MD5_HIDDEN</code> also produces an MD5 checksum using Oracle database <code>DBMS_CRYPTO</code>:</p>
<pre>UTL_RAW.CAST_TO_RAW(DBMS_CRYPTO.MD5())
</pre>
<p>An MD5 checksum provides data integrity through hashing and sequencing to ensure that data is not altered or stolen as it is transmitted over a network</p>
<p class="subhead2"><a id="AEAPI1030"></a>Syntax</p>
<pre>APEX_ITEM.MD5_HIDDEN(
    p_idx       IN    NUMBER,
    p_value01   IN    VARCHAR2 DEFAULT NULL,
    p_value02   IN    VARCHAR2 DEFAULT NULL,
    p_value03   IN    VARCHAR2 DEFAULT NULL,
    ...
    p_value50   IN    VARCHAR2 DEFAULT NULL,
    p_col_sep   IN    VARCHAR2 DEFAULT &#39;|&#39;,
    p_item_id   IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1031"></a>Parameters</p>
<p><a href="#CHDBFDEB">Table 12-7</a> describes the parameters available in the <code>MD5_HIDDEN</code> function.</p>
<div id="AEAPI1032" class="tblformal">
<p class="titleintable"><a id="sthref358"></a><a id="CHDBFDEB"></a>Table 12-7 MD5_HIDDEN Parameters</p>
<table class="cellalignment3315" title="MD5_HIDDEN Parameters" summary="This table describes the parameters available in MD5_HIDDEN." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t10">Parameter</th>
<th class="cellalignment3316" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t10" headers="r1c1-t10">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t10 r1c2-t10">
<p>Indicates the form element to be generated. For example, 1 equals <code>F01</code> and 2 equals <code>F02</code>. Typically the <code>p_idx</code> parameter is constant for a given column</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t10" headers="r1c1-t10">
<p><code>p_value</code><code>01</code></p>
<p>...</p>
<p><code>p_value</code><code>50</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t10 r1c2-t10">
<p>Fifty available inputs. Parameters not supplied default to NULL</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t10" headers="r1c1-t10">
<p><code>p_col_sep</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t10 r1c2-t10">
<p>String used to separate <code>p_value</code> inputs. Defaults to the pipe symbol (|)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t10" headers="r1c1-t10">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t10 r1c2-t10">
<p>ID of the HTML form item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1033"></a>Example</p>
<p>The <code>p_idx</code> parameter specifies the FXX form element to be generated. In the following example, 7 generates <code>F07</code>. Also note that an HTML hidden form element is generated.</p>
<pre>SELECT APEX_ITEM.MD5_HIDDEN(7,ename,job,sal)md5_h, ename, job, sal 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIJCBD"></a>
<div id="AEAPI200" class="refsect1">
<h2 class="refsect1">POPUP_FROM_LOV <a id="sthref359"></a>Function</h2>
<p>This function generates an HTML popup select list from an application shared list of values (LOV). Like other available functions in the <code>APEX_ITEM</code> package, <code>POPUP_FROM_LOV</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1034"></a>Syntax</p>
<pre>APEX_ITEM.POPUP_FROM_LOV(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_name         IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT &#39;0&#39;,
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT &#39;YES&#39;,
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1035"></a>Parameters</p>
<p><a href="#CHDJGHEF">Table 12-8</a> describes the available parameters in the <code>POPUP_FROM_LOV</code> function.</p>
<div id="AEAPI1036" class="tblformal">
<p class="titleintable"><a id="sthref360"></a><a id="CHDJGHEF"></a>Table 12-8 POPUP_FROM_LOV Parameters</p>
<table class="cellalignment3315" title="POPUP_FROM_LOV Parameters" summary="This table describes the parameters available in POPUP_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t11">Parameter</th>
<th class="cellalignment3316" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t11" headers="r1c1-t11">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t11 r1c2-t11">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t11" headers="r1c1-t11">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t11 r1c2-t11">
<p>Form element current value. This value should be one of the values in the <code>p_lov_name</code> parameter</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t11" headers="r1c1-t11">
<p><code>p_lov_name</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t11 r1c2-t11">
<p>Named LOV used for this popup</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t11" headers="r1c1-t11">
<p><code>p_width</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t11 r1c2-t11">
<p>Width of the text box</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t11" headers="r1c1-t11">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t11 r1c2-t11">
<p>Maximum number of characters that can be entered in the text box</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t11" headers="r1c1-t11">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t11 r1c2-t11">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different website). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t11" headers="r1c1-t11">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t11 r1c2-t11">
<p>Replacements for special characters that require an escaped equivalent:</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, special characters are escaped. This parameter is useful if you know your query returns illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t11" headers="r1c1-t11">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t11 r1c2-t11">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t11" headers="r1c1-t11">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t11 r1c2-t11">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t11" headers="r1c1-t11">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t11 r1c2-t11">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r12c1-t11" headers="r1c1-t11">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r12c1-t11 r1c2-t11">
<p>ID attribute of the form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r13c1-t11" headers="r1c1-t11">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r13c1-t11 r1c2-t11">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1037"></a>Example</p>
<p>The following example demonstrates a sample query the generates a popup from an LOV named <code>DEPT_LOV</code>.</p>
<pre>SELECT APEX_ITEM.POPUP_FROM_LOV (1,deptno,&#39;DEPT_LOV&#39;) dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEBCCI"></a>
<div id="AEAPI201" class="refsect1">
<h2 class="refsect1">POPUP_FROM_QUERY <a id="sthref361"></a>Function</h2>
<p>This function generates an HTML popup select list from a query. Like other available functions in the <code>APEX_ITEM</code> package, the <code>POPUP_FROM_QUERY</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1038"></a>Syntax</p>
<pre>APEX_ITEM.POPUP_FROM_QUERY(

    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_query        IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT &#39;0&#39;,
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT &#39;YES&#39;,
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1039"></a>Parameters</p>
<p><a href="#CHDCIFFG">Table 12-9</a> describes the available parameters in the <code>POPUP_FROM_QUERY</code> function.</p>
<div id="AEAPI1040" class="tblformal">
<p class="titleintable"><a id="sthref362"></a><a id="CHDCIFFG"></a>Table 12-9 POPUP_FROM_QUERY Parameters</p>
<table class="cellalignment3315" title="POPUP_FROM_QUERY Parameters" summary="This table describes the parameters available in POPUP_FROM_QUERY." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t12">Parameter</th>
<th class="cellalignment3316" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t12" headers="r1c1-t12">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t12 r1c2-t12">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t12" headers="r1c1-t12">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t12 r1c2-t12">
<p>Form element current value. This value should be one of the values in the <code>p_lov_query</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t12" headers="r1c1-t12">
<p><code>p_lov_query</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t12 r1c2-t12">
<p>SQL query that is expected to select two columns (a display column and a return column). For example:</p>
<pre>SELECT dname, deptno FROM dept
</pre></td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t12" headers="r1c1-t12">
<p><code>p_width</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t12 r1c2-t12">
<p>Width of the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t12" headers="r1c1-t12">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t12 r1c2-t12">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t12" headers="r1c1-t12">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t12 r1c2-t12">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different website). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t12" headers="r1c1-t12">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t12 r1c2-t12">
<p>Replacements for special characters that require an escaped equivalent.</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, special characters are escaped. This parameter is useful if you know your query returns illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t12" headers="r1c1-t12">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t12 r1c2-t12">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t12" headers="r1c1-t12">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t12 r1c2-t12">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t12" headers="r1c1-t12">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t12 r1c2-t12">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns the first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r12c1-t12" headers="r1c1-t12">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r12c1-t12 r1c2-t12">
<p>ID attribute of the form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r13c1-t12" headers="r1c1-t12">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r13c1-t12 r1c2-t12">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1041"></a>Example</p>
<p>The following example demonstrates a sample query the generates a popup select list from the <code>emp</code> table.</p>
<pre>SELECT APEX_ITEM.POPUP_FROM_QUERY (1,deptno,&#39;SELECT dname, deptno FROM dept&#39;) dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHJICI"></a>
<div id="AEAPI202" class="refsect1">
<h2 class="refsect1">POPUPKEY_FROM_LOV <a id="sthref363"></a>Function</h2>
<p>This function generates a popup key select list from a shared list of values (LOV). Similar to other available functions in the <code>APEX_ITEM</code> package, the <code>POPUPKEY_FROM_LOV</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1042"></a>Syntax</p>
<pre>APEX_ITEM.POPUPKEY_FROM_LOV(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_name         IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT &#39;0&#39;,
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT &#39;YES&#39;,
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p>Although the text field associated with the popup displays in the first column in the LOV query, the actual value is specified in the second column in the query.</p>
<p class="subhead2"><a id="AEAPI1043"></a>Parameters</p>
<p><a href="#CHDFJBBI">Table 12-10</a> describes the available parameters in the <code>POPUPKEY_FROM_LOV</code> function.</p>
<div id="AEAPI1044" class="tblformal">
<p class="titleintable"><a id="sthref364"></a><a id="CHDFJBBI"></a>Table 12-10 POPUPKEY_FROM_LOV Parameters</p>
<table class="cellalignment3315" title="POPUPKEY_FROM_LOV Parameters" summary="This table describes the parameters available in the POPUPKEY_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t13">Parameter</th>
<th class="cellalignment3316" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t13" headers="r1c1-t13">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t13 r1c2-t13">
<p>Identifies a form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column</p>
<p>Because of the behavior of <code>POPUPKEY_FROM_QUERY</code>, the next index value should be <code>p_idx + 1</code>. For example:</p>
<pre>SELECT APEX_ITEM.POPUPKEY_FROM_LOV (1,deptno,&#39;DEPT&#39;) dt,
APEX_ITEM.HIDDEN(3,empno) eno
</pre></td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t13" headers="r1c1-t13">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t13 r1c2-t13">
<p>Indicates the current value. This value should be one of the values in the <code>P_LOV_NAME</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t13" headers="r1c1-t13">
<p><code>p_lov_name</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t13 r1c2-t13">
<p>Identifies a named LOV used for this popup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t13" headers="r1c1-t13">
<p><code>p_width</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t13 r1c2-t13">
<p>Width of the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t13" headers="r1c1-t13">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t13 r1c2-t13">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t13" headers="r1c1-t13">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t13 r1c2-t13">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different website). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t13" headers="r1c1-t13">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t13 r1c2-t13">
<p>Replacements for special characters that require an escaped equivalent.</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>This parameter is useful if you know your query returns illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t13" headers="r1c1-t13">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t13 r1c2-t13">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t13" headers="r1c1-t13">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t13 r1c2-t13">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t13" headers="r1c1-t13">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t13 r1c2-t13">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns the first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r12c1-t13" headers="r1c1-t13">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r12c1-t13 r1c2-t13">
<p>HTML attribute ID for the &lt;input&gt; tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r13c1-t13" headers="r1c1-t13">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r13c1-t13 r1c2-t13">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1045"></a>Example</p>
<p>The following example demonstrates how to generate a popup key select list from a shared list of values (LOV).</p>
<pre>SELECT APEX_ITEM.POPUPKEY_FROM_LOV (1,deptno,&#39;DEPT&#39;) dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEHBAC"></a>
<div id="AEAPI203" class="refsect1">
<h2 class="refsect1">POPUPKEY_FROM_QUERY <a id="sthref365"></a>Function</h2>
<p>This function generates a popup key select list from a SQL query. Similar to other available functions in the <code>APEX_ITEM</code> package, the <code>POPUPKEY_FROM_QUERY</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1046"></a>Syntax</p>
<pre>APEX_ITEM.POPUPKEY_FROM_QUERY(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_query        IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT &#39;0&#39;,
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT &#39;YES&#39;,
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1047"></a>Parameters</p>
<p><a href="#CHDDDHEI">Table 12-11</a> describes the available parameters in the <code>POPUPKEY_FROM_QUERY</code> function.</p>
<div id="AEAPI1048" class="tblformal">
<p class="titleintable"><a id="sthref366"></a><a id="CHDDDHEI"></a>Table 12-11 POPUPKEY_FROM_QUERY Parameters</p>
<table class="cellalignment3315" title="POPUPKEY_FROM_QUERY Parameters" summary="This table describes the parameters available in POPUPKEY_FROM_QUERY." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t14">Parameter</th>
<th class="cellalignment3316" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t14" headers="r1c1-t14">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t14 r1c2-t14">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column.</p>
<p>Because of the behavior of <code>POPUPKEY_FROM_QUERY</code>, the next index value should be <code>p_idx + 1</code>. For example:</p>
<pre>SELECT APEX_ITEM.POPUPKEY_FROM_QUERY (1,deptno,&#39;SELECT dname, deptno FROM dept&#39;) dt,
APEX_ITEM.HIDDEN(3,empno) eno
</pre></td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t14" headers="r1c1-t14">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t14 r1c2-t14">
<p>Form element current value. This value should be one of the values in the <code>P_LOV_QUERY</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t14" headers="r1c1-t14">
<p><code>p_lov_query</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t14 r1c2-t14">
<p>LOV query used for this popup.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t14" headers="r1c1-t14">
<p><code>p_width</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t14 r1c2-t14">
<p>Width of the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t14" headers="r1c1-t14">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t14 r1c2-t14">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t14" headers="r1c1-t14">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t14 r1c2-t14">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different website). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t14" headers="r1c1-t14">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t14 r1c2-t14">
<p>Replacements for special characters that require an escaped equivalent.</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>This parameter is useful if you know your query returns illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t14" headers="r1c1-t14">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t14 r1c2-t14">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t14" headers="r1c1-t14">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t14 r1c2-t14">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t14" headers="r1c1-t14">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t14 r1c2-t14">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r12c1-t14" headers="r1c1-t14">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r12c1-t14 r1c2-t14">
<p>ID attribute of the form element.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r13c1-t14" headers="r1c1-t14">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r13c1-t14 r1c2-t14">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1049"></a>Example</p>
<p>The following example demonstrates how to generate a popup select list from a SQL query.</p>
<pre>SELECT APEX_ITEM.POPUPKEY_FROM_QUERY (1,deptno,&#39;SELECT dname, deptno FROM dept&#39;) dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGCJCG"></a>
<div id="AEAPI204" class="refsect1">
<h2 class="refsect1">RADIOGROUP <a id="sthref367"></a><a id="sthref368"></a>Function</h2>
<p>This function generates a radio group from a SQL query.</p>
<p class="subhead2"><a id="AEAPI1050"></a>Syntax</p>
<pre>APEX_ITEM.RADIOGROUP(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_selected_value   IN    VARCHAR2 DEFAULT NULL,
    p_display          IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_onblur           IN    VARCHAR2 DEFAULT NULL,
    p_onchange         IN    VARCHAR2 DEFAULT NULL,
    p_onfocus          IN    VARCHAR2 DEFAULT NULL,
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1051"></a>Parameters</p>
<p><a href="#CHDCAEFH">Table 12-12</a> describes the parameters available in the <code>RADIOGROUP</code> function.</p>
<div id="AEAPI1052" class="tblformal">
<p class="titleintable"><a id="sthref369"></a><a id="CHDCAEFH"></a>Table 12-12 RADIOGROUP Parameters</p>
<table class="cellalignment3315" title="RADIOGROUP Parameters" summary="This table describes the parameters available in RADIOGROUP." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t15">Parameter</th>
<th class="cellalignment3316" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t15" headers="r1c1-t15">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t15 r1c2-t15">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable is used. Valid range of values is <code>1</code> to <code>50</code>.For example <code>1</code> creates <code>F01</code> and <code>2</code> creates <code>F02</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t15" headers="r1c1-t15">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t15 r1c2-t15">
<p>Value of the radio group.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t15" headers="r1c1-t15">
<p><code>p_selected_value</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t15 r1c2-t15">
<p>Value that should be selected.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t15" headers="r1c1-t15">
<p><code>p_display</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t15 r1c2-t15">
<p>Text to display next to the radio option.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t15" headers="r1c1-t15">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t15 r1c2-t15">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t15" headers="r1c1-t15">
<p><code>p_onblur</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t15 r1c2-t15">
<p>JavaScript to execute in the <code>onBlur</code> event.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t15" headers="r1c1-t15">
<p><code>p_onchange</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t15 r1c2-t15">
<p>JavaScript to execute in the <code>onChange</code> event.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t15" headers="r1c1-t15">
<p><code>p_onfocus</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t15 r1c2-t15">
<p>JavaScript to execute in the <code>onFocus</code> event.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t15" headers="r1c1-t15">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t15 r1c2-t15">
<p>HTML attribute ID for the &lt;input&gt; tag</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t15" headers="r1c1-t15">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t15 r1c2-t15">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1053"></a>Example</p>
<p>The following example demonstrates how to select department 20 from the <code>emp</code> table as a default in a radio group.</p>
<pre>SELECT APEX_ITEM.RADIOGROUP (1,deptno,&#39;20&#39;,dname) dt
FROM   dept
ORDER  BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHJJAB"></a>
<div id="AEAPI205" class="refsect1">
<h2 class="refsect1">SELECT_LIST <a id="sthref370"></a>Function</h2>
<p>This function dynamically generates a static select list. Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1054"></a>Syntax</p>
<pre>APEX_ITEM.SELECT_LIST(
    p_idx           IN   NUMBER,
    p_value         IN   VARCHAR2 DEFAULT NULL,
    p_list_values   IN   VARCHAR2 DEFAULT NULL,
    p_attributes    IN   VARCHAR2 DEFAULT NULL,
    p_show_null     IN   VARCHAR2 DEFAULT &#39;NO&#39;,
    p_null_value    IN   VARCHAR2 DEFAULT &#39;%NULL%&#39;,
    p_null_text     IN   VARCHAR2 DEFAULT &#39;%&#39;,
    p_item_id       IN   VARCHAR2 DEFAULT NULL,
    p_item_label    IN   VARCHAR2 DEFAULT NULL,
    p_show_extra    IN   VARCHAR2 DEFAULT &#39;YES&#39;)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1055"></a>Parameters</p>
<p><a href="#CHDCBBHG">Table 12-13</a> describes the parameters available in the <code>SELECT_LIST</code> function.</p>
<div id="AEAPI1056" class="tblformal">
<p class="titleintable"><a id="sthref371"></a><a id="CHDCBBHG"></a>Table 12-13 SELECT_LIST Parameters</p>
<table class="cellalignment3315" title="SELECT_LIST Parameters" summary="This table describes the parameters available in SELECT_LIST." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t16">Parameter</th>
<th class="cellalignment3316" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t16" headers="r1c1-t16">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t16 r1c2-t16">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically the <code>P_IDX</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t16" headers="r1c1-t16">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t16 r1c2-t16">
<p>Current value. This value should be a value in the <code>P_LIST_VALUES</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t16" headers="r1c1-t16">
<p><code>p_list_values</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t16 r1c2-t16">
<p>List of static values separated by commas. Displays values and returns values that are separated by semicolons.</p>
<p>Note that this is only available in the <code>SELECT_LIST</code> function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t16" headers="r1c1-t16">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t16 r1c2-t16">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t16" headers="r1c1-t16">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t16 r1c2-t16">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t16" headers="r1c1-t16">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t16 r1c2-t16">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t16" headers="r1c1-t16">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t16 r1c2-t16">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals YES.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t16" headers="r1c1-t16">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t16 r1c2-t16">
<p>HTML attribute ID for the &lt;<code>input</code>&gt; tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t16" headers="r1c1-t16">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t16 r1c2-t16">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t16" headers="r1c1-t16">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t16 r1c2-t16">
<p>Shows the current value even if the value of p_value is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1057"></a>Example</p>
<p>The following example demonstrates a static select list that displays <code>Yes</code>, returns <code>Y</code>, defaults to <code>Y</code>, and generates a <code>F01</code> form item.</p>
<pre>SELECT APEX_ITEM.SELECT_LIST(1,&#39;Y&#39;,&#39;Yes;Y,No;N&#39;)yn 
FROM emp
</pre>
<p>The following example demonstrates the use of <code>APEX_ITEM.SELECT_LIST</code> to generate a static select list where:</p>
<ul>
<li>
<p>A form array element <code>F03</code> is generated (<code>p_idx</code> parameter).</p>
</li>
<li>
<p>The initial value for each element is equal to the value for <code>deptno</code> for the row from <code>emp</code> (<code>p_value</code> parameter).</p>
</li>
<li>
<p>The select list contains 4 options (<code>p_list_values</code> parameter).</p>
</li>
<li>
<p>The text within the select list displays in red (<code>p_attributes</code> parameter).</p>
</li>
<li>
<p>A null option is displayed (<code>p_show_null</code>) and this option displays <code>-Select-</code> as the text (<code>p_null_text</code> parameter).</p>
</li>
<li>
<p>An HTML ID attribute is generated for each row, where <code>#ROWNUM#</code> is substituted for the current row <code>rownum</code> (<code>p_item_id</code> parameter). (So an ID of &#39;<code>f03_4</code>&#39; is generated for row 4.)</p>
</li>
<li>
<p>A HTML label element is generated for each row (<code>p_item_label</code> parameter).</p>
</li>
<li>
<p>The current value for <code>deptno</code> is displayed, even if it is not contained with the list of values passed in the <code>p_list_values</code> parameter (<code>p_show_extra</code> parameter).</p>
</li>
</ul>
<pre>SELECT  empno &#34;Employee #&#34;, 
    ename &#34;Name&#34;,
    APEX_ITEM.SELECT_LIST(
        p_idx           =&gt;   3,
        p_value         =&gt;   deptno,
        p_list_values   =&gt;   &#39;ACCOUNTING;10,RESEARCH;20,SALES;30,OPERATIONS;40&#39;,
        p_attributes    =&gt;   &#39;style=&#34;color:red;&#34;&#39;,
        p_show_null     =&gt;   &#39;YES&#39;,
        p_null_value    =&gt;   NULL,
        p_null_text     =&gt;   &#39;-Select-&#39;,
        p_item_id       =&gt;   &#39;f03_#ROWNUM#&#39;,
        p_item_label    =&gt;   &#39;Label for f03_#ROWNUM#&#39;,
        p_show_extra    =&gt;   &#39;YES&#39;) &#34;Department&#34;
  FROM  emp;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDFGAEC"></a>
<div id="AEAPI206" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_LOV <a id="sthref372"></a>Function</h2>
<p>This function dynamically generates select lists from a shared list of values (LOV). Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1058"></a>Syntax</p>
<pre>APEX_ITEM.SELECT_LIST_FROM_LOV(
    p_idx           IN   NUMBER,
    p_value         IN   VARCHAR2 DEFAULT NULL,
    p_lov           IN   VARCHAR2,
    p_attributes    IN   VARCHAR2 DEFAULT NULL,
    p_show_null     IN   VARCHAR2 DEFAULT &#39;YES&#39;,
    p_null_value    IN   VARCHAR2 DEFAULT &#39;%NULL%&#39;,
    p_null_text     IN   VARCHAR2 DEFAULT &#39;%&#39;,
    p_item_id       IN   VARCHAR2 DEFAULT NULL,
    p_item_label    IN   VARCHAR2 DEFAULT NULL,
    p_show_extra    IN   VARCHAR2 DEFAULT &#39;YES&#39;)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1059"></a>Parameters</p>
<p><a href="#CHDHHDAH">Table 12-14</a> describes the parameters available in the <code>SELECT_LIST_FROM_LOV</code> function.</p>
<div id="AEAPI1060" class="tblformal">
<p class="titleintable"><a id="sthref373"></a><a id="CHDHHDAH"></a>Table 12-14 SELECT_LIST_FROM_LOV Parameters</p>
<table class="cellalignment3315" title="SELECT_LIST_FROM_LOV Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t17">Parameter</th>
<th class="cellalignment3316" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t17" headers="r1c1-t17">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t17 r1c2-t17">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t17" headers="r1c1-t17">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t17 r1c2-t17">
<p>Current value. This value should be a value in the <code>p_lov</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t17" headers="r1c1-t17">
<p><code>p_lov</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t17 r1c2-t17">
<p>Text name of an application list of values. This list of values must be defined in your application. This parameter is used only by the <code>select_list_from_lov</code> function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t17" headers="r1c1-t17">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t17 r1c2-t17">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t17" headers="r1c1-t17">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t17 r1c2-t17">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t17" headers="r1c1-t17">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t17 r1c2-t17">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t17" headers="r1c1-t17">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t17 r1c2-t17">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t17" headers="r1c1-t17">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t17 r1c2-t17">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t17" headers="r1c1-t17">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t17 r1c2-t17">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t17" headers="r1c1-t17">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t17 r1c2-t17">
<p>Shows the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1061"></a>Example</p>
<p>The following example demonstrates a select list based on an LOV defined in the application.</p>
<pre>SELECT APEX_ITEM.SELECT_LIST_FROM_LOV(2,job,&#39;JOB_FLOW_LOV&#39;)job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDCAEAB"></a>
<div id="AEAPI207" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_LOV_XL <a id="sthref374"></a>Function</h2>
<p>This function dynamically generates very large select lists (greater than 32K) from a shared list of values (LOV). Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements. This function is the same as <code>SELECT_LIST_FROM_LOV</code>, but its return value is CLOB. Use this function in SQL queries where you need to handle a column value longer than 4000 characters.</p>
<p class="subhead2"><a id="AEAPI1062"></a>Syntax</p>
<pre>APEX_ITEM.SELECT_LIST_FROM_LOV_XL(
    p_idx           IN   NUMBER,
    p_value         IN   VARCHAR2 DEFAULT NULL,
    p_lov           IN   VARCHAR2,
    p_attributes    IN   VARCHAR2 DEFAULT NULL,
    p_show_null     IN   VARCHAR2 DEFAULT &#39;YES&#39;,
    p_null_value    IN   VARCHAR2 DEFAULT &#39;%NULL%&#39;,
    p_null_text     IN   VARCHAR2 DEFAULT &#39;%&#39;,
    p_item_id       IN   VARCHAR2 DEFAULT NULL,
    p_item_label    IN   VARCHAR2 DEFAULT NULL,
    p_show_extra    IN   VARCHAR2 DEFAULT &#39;YES&#39;)
    RETURN CLOB;
</pre>
<p class="subhead2"><a id="AEAPI1063"></a>Parameters</p>
<p><a href="#CHDHGEBA">Table 12-15</a> describes the parameters available in the <code>SELECT_LIST_FROM_LOV_XL</code> function.</p>
<div id="AEAPI1064" class="tblformal">
<p class="titleintable"><a id="sthref375"></a><a id="CHDHGEBA"></a>Table 12-15 SELECT_LIST_FROM_LOV_XL Parameters</p>
<table class="cellalignment3315" title="SELECT_LIST_FROM_LOV_XL Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_LOV_XL." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t18">Parameter</th>
<th class="cellalignment3316" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t18" headers="r1c1-t18">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t18 r1c2-t18">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t18" headers="r1c1-t18">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t18 r1c2-t18">
<p>Current value. This value should be a value in the <code>p_lov</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t18" headers="r1c1-t18">
<p><code>p_lov</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t18 r1c2-t18">
<p>Text name of a list of values. This list of values must be defined in your application. This parameter is used only by the <code>select_list_from_lov</code> function.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t18" headers="r1c1-t18">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t18 r1c2-t18">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t18" headers="r1c1-t18">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t18 r1c2-t18">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t18" headers="r1c1-t18">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t18 r1c2-t18">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t18" headers="r1c1-t18">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t18 r1c2-t18">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t18" headers="r1c1-t18">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t18 r1c2-t18">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t18" headers="r1c1-t18">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t18 r1c2-t18">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t18" headers="r1c1-t18">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t18 r1c2-t18">
<p>Shows the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1065"></a>Example</p>
<p>The following example demonstrates how to create a select list based on an LOV defined in the application.</p>
<pre>SELECT APEX_ITEM.SELECT_LIST_FROM_LOV_XL(2,job,&#39;JOB_FLOW_LOV&#39;)job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIDGDA"></a>
<div id="AEAPI208" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_QUERY <a id="sthref376"></a>Function</h2>
<p>This function dynamically generates a select list from a query. Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1066"></a>Syntax</p>
<pre>APEX_ITEM.SELECT_LIST_FROM_QUERY(
    p_idx           IN    NUMBER,
    p_value         IN    VARCHAR2 DEFAULT NULL,
    p_query         IN    VARCHAR2,
    p_attributes    IN    VARCHAR2 DEFAULT NULL,
    p_show_null     IN    VARCHAR2 DEFAULT &#39;YES&#39;,
    p_null_value    IN    VARCHAR2 DEFAULT &#39;%NULL%&#39;,
    p_null_text     IN    VARCHAR2 DEFAULT &#39;%&#39;,
    p_item_id       IN    VARCHAR2 DEFAULT NULL,
    p_item_label    IN    VARCHAR2 DEFAULT NULL,
    p_show_extra    IN    VARCHAR2 DEFAULT &#39;YES&#39;)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1067"></a>Parameters</p>
<p><a href="#CHDJEBJD">Table 12-16</a> describes the parameters available in the <code>SELECT_LIST_FROM_QUERY</code> function.</p>
<div id="AEAPI1068" class="tblformal">
<p class="titleintable"><a id="sthref377"></a><a id="CHDJEBJD"></a>Table 12-16 SELECT_LIST_FROM_QUERY Parameters</p>
<table class="cellalignment3315" title="SELECT_LIST_FROM_QUERY Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_QUERY." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t19">Parameter</th>
<th class="cellalignment3316" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t19" headers="r1c1-t19">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t19 r1c2-t19">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t19" headers="r1c1-t19">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t19 r1c2-t19">
<p>Current value. This value should be a value in the <code>p_query</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t19" headers="r1c1-t19">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t19 r1c2-t19">
<p>SQL query that is expected to select two columns, a display column, and a return column. For example:</p>
<pre>SELECT dname, deptno FROM dept
</pre>
<p>Note that this is used only by the <code>SELECT_LIST_FROM_QUERY</code> function.</p>
<p>Also note, if only one column is specified in the select clause of this query, the value for this column is used for both display and return purposes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t19" headers="r1c1-t19">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t19 r1c2-t19">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t19" headers="r1c1-t19">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t19 r1c2-t19">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t19" headers="r1c1-t19">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t19 r1c2-t19">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t19" headers="r1c1-t19">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t19 r1c2-t19">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t19" headers="r1c1-t19">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t19 r1c2-t19">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t19" headers="r1c1-t19">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t19 r1c2-t19">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t19" headers="r1c1-t19">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t19 r1c2-t19">
<p>Show the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1069"></a>Example</p>
<p>The following example demonstrates a select list based on a SQL query.</p>
<pre>SELECT APEX_ITEM.SELECT_LIST_FROM_QUERY(3,job,&#39;SELECT DISTINCT job FROM emp&#39;)job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGBFBE"></a>
<div id="AEAPI209" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_QUERY_XL <a id="sthref378"></a>Function</h2>
<p>This function is the same as <code>SELECT_LIST_FROM_QUERY</code>, but its return value is a CLOB. This allows its use in SQL queries where you need to handle a column value longer than 4000 characters. Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI1070"></a>Syntax</p>
<pre>APEX_ITEM.SELECT_LIST_FROM_QUERY_XL(
    p_idx           IN    NUMBER,
    p_value         IN    VARCHAR2 DEFAULT NULL,
    p_query         IN    VARCHAR2,
    p_attributes    IN    VARCHAR2 DEFAULT NULL,
    p_show_null     IN    VARCHAR2 DEFAULT &#39;YES&#39;,
    p_null_value    IN    VARCHAR2 DEFAULT &#39;%NULL%&#39;,
    p_null_text     IN    VARCHAR2 DEFAULT &#39;%&#39;,
    p_item_id       IN    VARCHAR2 DEFAULT NULL,
    p_item_label    IN    VARCHAR2 DEFAULT NULL,
    p_show_extra    IN    VARCHAR2 DEFAULT &#39;YES&#39;)
    RETURN CLOB;
</pre>
<p class="subhead2"><a id="AEAPI1071"></a>Parameters</p>
<p><a href="#CHDFGCEB">Table 12-17</a> describes the parameters available in the <code>SELECT_LIST_FROM_QUERY_XL</code> function.</p>
<div id="AEAPI1072" class="tblformal">
<p class="titleintable"><a id="sthref379"></a><a id="CHDFGCEB"></a>Table 12-17 SELECT_LIST_FROM_QUERY_XL Parameters</p>
<table class="cellalignment3315" title="SELECT_LIST_FROM_QUERY_XL Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_QUERY_XL." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t20">Parameter</th>
<th class="cellalignment3316" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t20" headers="r1c1-t20">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t20 r1c2-t20">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t20" headers="r1c1-t20">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t20 r1c2-t20">
<p>Current value. This value should be a value in the <code>p_query</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t20" headers="r1c1-t20">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t20 r1c2-t20">
<p>SQL query that is expected to select two columns, a display column, and a return column. For example:</p>
<pre>SELECT dname, deptno FROM dept
</pre>
<p>Note that this is used only by the <code>SELECT_LIST_FROM_QUERY_XL</code> function.</p>
<p>Also note, if only one column is specified in the select clause of this query, the value for this column is used for both display and return purposes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t20" headers="r1c1-t20">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t20 r1c2-t20">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t20" headers="r1c1-t20">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t20 r1c2-t20">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t20" headers="r1c1-t20">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t20 r1c2-t20">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t20" headers="r1c1-t20">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t20 r1c2-t20">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r9c1-t20" headers="r1c1-t20">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r9c1-t20 r1c2-t20">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r10c1-t20" headers="r1c1-t20">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r10c1-t20 r1c2-t20">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r11c1-t20" headers="r1c1-t20">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment3317" headers="r11c1-t20 r1c2-t20">
<p>Show the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1073"></a>Example</p>
<p>The following example demonstrates a select list based on a SQL query.</p>
<pre>SELECT APEX_ITEM.SELECT_LIST_FROM_QUERY_XL(3,job,&#39;SELECT DISTINCT job FROM emp&#39;)job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDCDHJI"></a>
<div id="AEAPI211" class="refsect1">
<h2 class="refsect1">TEXT <a id="sthref380"></a>Function</h2>
<p>This function generates text fields (or text input form items) from a SQL query.</p>
<p class="subhead2"><a id="AEAPI1074"></a>Syntax</p>
<pre>APEX_ITEM.TEXT(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_size        IN    NUMBER DEFAULT NULL,
    p_maxlength   IN    NUMBER DEFAULT NULL,
    p_attributes  IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1075"></a>Parameters</p>
<p><a href="#CHDEHCGE">Table 12-18</a> describes the parameters available in the <code>TEXT</code> function.</p>
<div id="AEAPI1076" class="tblformal">
<p class="titleintable"><a id="sthref381"></a><a id="CHDEHCGE"></a>Table 12-18 TEXT Parameters</p>
<table class="cellalignment3315" title="TEXT Parameters" summary="This table describes the parameters available in TEXT." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t21">Parameter</th>
<th class="cellalignment3316" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t21" headers="r1c1-t21">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t21 r1c2-t21">
<p>Number to identify the item you want to generate. The number determines which <code>G_FXX</code> global is populated.</p>
<p><span class="bold">See Also:</span> <a href="apex_app.htm#CHDDADIE">&#34;APEX_APPLICATION&#34;</a></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t21" headers="r1c1-t21">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t21 r1c2-t21">
<p>Value of a text field item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t21" headers="r1c1-t21">
<p><code>p_size</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t21 r1c2-t21">
<p>Controls HTML tag attributes (such as disabled).</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t21" headers="r1c1-t21">
<p><code>p_maxlength</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t21 r1c2-t21">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t21" headers="r1c1-t21">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t21 r1c2-t21">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t21" headers="r1c1-t21">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t21 r1c2-t21">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t21" headers="r1c1-t21">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t21 r1c2-t21">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1077"></a>Example</p>
<p>The following sample query demonstrates how to generate one update field for each row. Note that the <code>ename</code>, <code>sal</code>, and <code>comm</code> columns use the <code>APEX_ITEM</code>.<code>TEXT</code> function to generate an HTML text field for each row. Also, notice that each item in the query is passed a unique <code>p_idx</code> parameter to ensure that each column is stored in its own array.</p>
<pre>SELECT 
  empno, 
  APEX_ITEM.HIDDEN(1,empno)||
  APEX_ITEM.TEXT(2,ename) ename, 
  APEX_ITEM.TEXT(3,job) job, 
  mgr, 
  APEX_ITEM.DATE_POPUP(4,rownum,hiredate,&#39;dd-mon-yyyy&#39;) hiredate,
  APEX_ITEM.TEXT(5,sal) sal, 
  APEX_ITEM.TEXT(6,comm) comm,
  deptno
FROM emp
ORDER BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDJJFGG"></a>
<div id="AEAPI210" class="refsect1">
<h2 class="refsect1">TEXTAREA <a id="sthref382"></a>Function</h2>
<p>This function creates text areas.</p>
<p class="subhead2"><a id="AEAPI1078"></a>Syntax</p>
<pre>APEX_ITEM.TEXTAREA(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_rows        IN    NUMBER DEAULT 40,
    p_cols        IN    NUMBER DEFAULT 4,
    p_attributes  IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1079"></a>Parameters</p>
<p><a href="#BABGHDEF">Table 12-19</a> describes the parameters available in the <code>TEXTAREA</code> function.</p>
<div id="AEAPI1080" class="tblformal">
<p class="titleintable"><a id="sthref383"></a><a id="BABGHDEF"></a>Table 12-19 TEXTAREA Parameters</p>
<table class="cellalignment3315" title="TEXTAREA Parameters" summary="This table describes the parameters available in TEXTAREA." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t22">Parameter</th>
<th class="cellalignment3316" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t22" headers="r1c1-t22">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t22 r1c2-t22">
<p>Number to identify the item you want to generate. The number determines which <code>G_FXX</code> global is populated.</p>
<p><span class="bold">See Also:</span> <a href="apex_app.htm#CHDDADIE">&#34;APEX_APPLICATION&#34;</a></p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t22" headers="r1c1-t22">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t22 r1c2-t22">
<p>Value of the text area item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t22" headers="r1c1-t22">
<p><code>p_rows</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t22 r1c2-t22">
<p>Height of the text area (HTML rows attribute)</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r5c1-t22" headers="r1c1-t22">
<p><code>p_cols</code></p>
</td>
<td class="cellalignment3317" headers="r5c1-t22 r1c2-t22">
<p>Width of the text area (HTML column attribute).</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r6c1-t22" headers="r1c1-t22">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment3317" headers="r6c1-t22 r1c2-t22">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r7c1-t22" headers="r1c1-t22">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment3317" headers="r7c1-t22 r1c2-t22">
<p>HTML attribute ID for the <code>&lt;textarea&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r8c1-t22" headers="r1c1-t22">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment3317" headers="r8c1-t22 r1c2-t22">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1081"></a>Example</p>
<p>The following example demonstrates how to create a text area based on a SQL query.</p>
<pre>SELECT APEX_ITEM.TEXTAREA(3,ename,5,80) a
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEBBHH"></a>
<div id="AEAPI212" class="refsect1">
<h2 class="refsect1">TEXT_FROM_LOV <a id="sthref384"></a>Function</h2>
<p>Use this function to display an item as text, deriving the display value of the named LOV.</p>
<p class="subhead2"><a id="AEAPI1082"></a>Syntax</p>
<pre>APEX_ITEM.TEXT_FROM_LOV (
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_lov         IN    VARCHAR2,
    p_null_text   IN    VARCHAR2 DEFAULT &#39;%&#39;)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1083"></a>Parameters</p>
<p><a href="#CHDHHHCC">Table 12-20</a> describes the parameters available in the <code>TEXT_FROM_LOV</code> function.</p>
<div id="AEAPI1084" class="tblformal">
<p class="titleintable"><a id="sthref385"></a><a id="CHDHHHCC"></a>Table 12-20 TEXT_FROM_LOV Parameters</p>
<table class="cellalignment3315" title="TEXT_FROM_LOV Parameters" summary="This table describes the parameters available in TEXT_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t23">Parameter</th>
<th class="cellalignment3316" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t23" headers="r1c1-t23">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t23 r1c2-t23">
<p>Value of a field item.</p>
<p>Note that if <code>p_value</code> is not located in the list of values, <code>p_null_text</code> is value displayed.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t23" headers="r1c1-t23">
<p><code>p_lov</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t23 r1c2-t23">
<p>Text name of a shared list of values. This list of values must be defined in your application.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t23" headers="r1c1-t23">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t23 r1c2-t23">
<p>Value displayed when the value of the field item is NULL.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1085"></a>Example</p>
<p>The following example demonstrates how to derive the display value from a named LOV (<code>EMPNO_ENAME_LOV</code>).</p>
<pre>SELECT APEX_ITEM.TEXT_FROM_LOV(empno,&#39;EMPNO_ENAME_LOV&#39;) c FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDJBFFI"></a>
<div id="AEAPI213" class="refsect1">
<h2 class="refsect1">TEXT_FROM_LOV_QUERY <a id="sthref386"></a>Function</h2>
<p>Use this function to display an item as text, deriving the display value from a list of values query.</p>
<p class="subhead2"><a id="AEAPI1086"></a>Syntax</p>
<pre>APEX_ITEM.TEXT_FROM_LOV_QUERY (
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_query       IN    VARCHAR2,
    p_null_text   IN    VARCHAR2 DEFAULT &#39;%&#39;)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI1087"></a>Parameters</p>
<p><a href="#BABIFEEC">Table 12-21</a> describes the parameters available in the <code>TEXT_FROM_LOV_QUERY</code> function.</p>
<div id="AEAPI1088" class="tblformal">
<p class="titleintable"><a id="sthref387"></a><a id="BABIFEEC"></a>Table 12-21 TEXT_FROM_LOV_QUERY Parameters</p>
<table class="cellalignment3315" title="TEXT_FROM_LOV_QUERY Parameters" summary="This table describes the parameters available in TEXT_FROM_LOV_QUERY." dir="ltr">
<thead>
<tr class="cellalignment3309">
<th class="cellalignment3316" id="r1c1-t24">Parameter</th>
<th class="cellalignment3316" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r2c1-t24" headers="r1c1-t24">
<p><code>p_value</code></p>
</td>
<td class="cellalignment3317" headers="r2c1-t24 r1c2-t24">
<p>Value of a field item.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r3c1-t24" headers="r1c1-t24">
<p><code>p_query</code></p>
</td>
<td class="cellalignment3317" headers="r3c1-t24 r1c2-t24">
<p>SQL query that is expected to select two columns, a display column and a return column. For example:</p>
<pre>SELECT dname, deptno FROM dept
</pre>
<p>Note if only one column is specified in the select clause of this query, the value for this column is used for both display and return purposes.</p>
</td>
</tr>
<tr class="cellalignment3309">
<td class="cellalignment3317" id="r4c1-t24" headers="r1c1-t24">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment3317" headers="r4c1-t24 r1c2-t24">
<p>Value to be displayed when the value of the field item is NULL or a corresponding entry is not located for the value <code>p_value</code> in the list of values query.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI1089"></a>Example</p>
<p>The following example demonstrates how to derive the display value from a query.</p>
<pre>SELECT APEX_ITEM.TEXT_FROM_LOV_QUERY(empno,&#39;SELECT ename, empno FROM emp&#39;) c from emp
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3308">
<tr>
<td class="cellalignment3317">
<table class="cellalignment3313">
<tr>
<td class="cellalignment3312"><a href="apex_ir.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3312"><a href="apex_javascript.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3319">
<table class="cellalignment3311">
<tr>
<td class="cellalignment3312"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3312"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3312"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3312"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3312"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3312"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>