<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-91885"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/User-Defined%20Conflict%20Resolution%20Methods"></a><title>User-Defined Conflict Resolution Methods</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1042"/>
<meta name="dcterms.created" content="2015-02-06T10:45:48Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Replication Management API Reference"/>
<meta name="dcterms.identifier" content="E18896-09"/>
<meta name="dcterms.isVersionOf" content="REPMA"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="rarsec.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18896-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">37/38</span> <!-- End Header -->
<div id="REPMA029" class="appendix"><a id="i9602"></a> <a id="CJAEDCDB"></a>
<h1 class="appendix"><span class="secnum">B</span> User-Defined Conflict Resolution Methods</h1>
<p>This appendix describes how to build user-defined conflict resolution methods and user-defined conflict notification methods.</p>
<p>This appendix contains these topics:</p>
<ul>
<li>
<p><a href="#i8526">User-Defined Conflict Resolution Methods</a></p>
</li>
<li>
<p><a href="#i8348">User-Defined Conflict Notification Methods</a></p>
</li>
<li>
<p><a href="#i8467">Viewing Conflict Resolution Information</a></p>
</li>
</ul>
<a id="i8526"></a>
<div id="REPMA1063" class="sect1">
<h2 class="sect1">User-Defined Conflict Resolution Methods<a id="sthref2626"></a></h2>
<p>Oracle enables you to write your own conflict resolution or notification methods. A user-defined conflict resolution method is a PL/SQL function that returns either <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>. <code dir="ltr">TRUE</code> indicates that the method has successfully resolved all conflicting modifications for a column group. If the method cannot successfully resolve a conflict, then it should return <code dir="ltr">FALSE</code>. Oracle continues to evaluate available conflict resolution methods, in sequence order, until either a method returns <code dir="ltr">TRUE</code> or there are no more methods available.</p>
<p>If the conflict resolution method raises an exception, then Oracle stops evaluation of the method, and, if any other methods were provided to resolve the conflict with a later sequence number, then Oracle does not evaluate them.</p>
<div id="REPMA1064" class="sect2"><a id="sthref2627"></a>
<h3 class="sect2">Conflict Resolution Method Parameters<a id="sthref2628"></a></h3>
<p>The parameters needed by a user-defined conflict resolution method are determined by the type of conflict being resolved (uniqueness, update, or delete) and the columns of the table being replicated. All conflict resolution methods take some combination of old, new, and current column values for the table.</p>
<ul>
<li>
<p>The old value represents the value of the row at the initiating site before you made the change.</p>
</li>
<li>
<p>The new value represents the value of the row at the initiating site after you made the change.</p>
</li>
<li>
<p>The current value represents the value of the equivalent row at the receiving site.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
Recall that Oracle uses the primary key, or the key specified by <code dir="ltr">SET_COLUMNS</code>, to determine which rows to compare.</div>
<p>The conflict resolution function should accept as parameters the values for the columns specified in the <code dir="ltr">PARAMETER_COLUMN_NAME</code> argument to the <code dir="ltr">DBMS_REPCAT.ADD_</code><code dir="ltr"><span class="codeinlineitalic">conflicttype</span></code><code dir="ltr">_RESOLUTION</code> procedures. The column parameters are passed to the conflict resolution method in the order listed in the <code dir="ltr">PARAMETER_COLUMN_NAME</code> argument, or in ascending alphabetical order if you specified &#39;*&#39; for this argument. When both old and new column values are passed as parameters (for update conflicts), the old value of the column immediately precedes the new value.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Type checking of parameter columns in user-defined conflict resolution methods is not performed until you regenerate replication support for the associated replicated table.</p>
</li>
<li>
<p><a id="sthref2629"></a><a id="sthref2630"></a>Attributes of column objects cannot be defined as column parameters for user-defined conflict resolution methods.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REPMA1065" class="sect2"><a id="sthref2631"></a>
<h3 class="sect2">Resolving <a id="sthref2632"></a>Update Conflicts</h3>
<p>For update conflicts, a user-defined function should accept the following values for each column in the column group:</p>
<ul>
<li>
<p>Old column value from the initiating site. The mode for this parameter is <code dir="ltr">IN</code>. This value should not be changed.</p>
</li>
<li>
<p>New column value from the initiating site. The mode for this parameter is <code dir="ltr">IN</code> <code dir="ltr">OUT</code>. If the function can resolve the conflict successfully, then it should modify the new column value as needed.</p>
</li>
<li>
<p>Current column value from the receiving site. The mode for this parameter is&nbsp;<code dir="ltr">IN</code>.</p>
</li>
</ul>
<p>The old, new, and current values for a column are received consecutively. The final argument to the conflict resolution method should be a Boolean flag. If this flag is <code dir="ltr">FALSE</code>, then it indicates that you have updated the value of the <code dir="ltr">IN</code> <code dir="ltr">OUT</code> parameter (new) and that you should update the current column value with this new value. If this flag is <code dir="ltr">TRUE</code>, then it indicates that the current column value should not be changed.</p>
</div>
<!-- class="sect2" -->
<div id="REPMA1066" class="sect2"><a id="sthref2633"></a>
<h3 class="sect2">Resolving Uniqueness Conflicts<a id="sthref2634"></a></h3>
<p>Uniqueness conflicts can occur as the result of an <code dir="ltr">INSERT</code> or <code dir="ltr">UPDATE</code>. Your uniqueness conflict resolution method should accept the new column value from the initiating site in <code dir="ltr">IN</code> <code dir="ltr">OUT</code> mode for each column in the column group. The final parameter to the conflict resolution method should be a Boolean flag.</p>
<p>If the method can resolve the conflict, then it should modify the new column values so that Oracle can insert or update the current row with the new column values. Your function should set the Boolean flag to <code dir="ltr">TRUE</code> if it wants to discard the new column values, and <code dir="ltr">FALSE</code> otherwise.</p>
<p>Because a conflict resolution method cannot guarantee convergence for uniqueness conflicts, a user-defined uniqueness resolution method should include a notification mechanism.</p>
</div>
<!-- class="sect2" -->
<div id="REPMA1067" class="sect2"><a id="sthref2635"></a>
<h3 class="sect2">Resolving Delete Conflicts<a id="sthref2636"></a></h3>
<p>Delete conflicts occur when you successfully delete from the local site, but the associated row cannot be found at the remote site (for example, because it had been updated). For delete conflicts, the function should accept old column values in <code dir="ltr">IN</code> <code dir="ltr">OUT</code> mode for the entire row. The final parameter to the conflict resolution method should be a Boolean flag.</p>
<p>If the conflict resolution method can resolve the conflict, then it modifies the old column values so that Oracle can delete the current row that matches all old column values. Your function should set the Boolean flag to <code dir="ltr">TRUE</code> if it wants to discard these column values, and <code dir="ltr">FALSE</code> otherwise.</p>
<p>If you perform a delete at the local site and an update at the remote site, then the remote site detects the delete conflict, but the local site detects an unresolvable update conflict. This type of conflict cannot be handled automatically. The conflict raises a <code dir="ltr">NO_DATA_FOUND</code> exception and Oracle logs the transaction as an error transaction.</p>
<p>Designing a mechanism to properly handle these types of update/delete conflicts is difficult. It is far easier to avoid these types of conflicts entirely, by simply &#34;marking&#34; deleted rows, and then purging them using procedural replication.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="rarconflictres.htm#i14792">&#34;Creating Conflict Avoidance Methods for Delete Conflicts&#34;</a></div>
</div>
<!-- class="sect2" -->
<div id="REPMA1068" class="sect2"><a id="sthref2637"></a>
<h3 class="sect2">Multitier Materialized Views and User-Defined Conflict Resolution Methods<a id="sthref2638"></a><a id="sthref2639"></a></h3>
<p>When you use user-defined conflict resolution methods with multitier materialized views, the information about these methods is pulled down to the master materialized view sites automatically. This information is stored in the data dictionary at the master materialized view site. However, the user-defined conflict resolution methods themselves cannot be pulled down from the master site. Therefore, you must re-create these methods at the master materialized view site.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i8467">&#34;Viewing Conflict Resolution Information&#34;</a> for information about the data dictionary views that store information about user-defined conflict resolution methods</p>
</li>
<li>
<p><a class="olink REPLN115" href="../REPLN/repconflicts.htm#REPLN115"><span class="italic">Oracle Database Advanced Replication</span></a> for more information about conflict resolution and multitier materialized views</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REPMA1069" class="sect2"><a id="sthref2640"></a>
<h3 class="sect2">Restrictions for User-Defined Conflict Resolution Methods<a id="sthref2641"></a></h3>
<p>The following sections describe restrictions for user-defined conflict resolution methods.</p>
<div id="REPMA1070" class="sect3"><a id="sthref2642"></a>
<h4 class="sect3">SQL Statement Restrictions for User-Defined Conflict Resolution Methods</h4>
<p>Avoid the following types of SQL statements in user-defined conflict resolution methods. Use of such statements can result in unpredictable results.</p>
<ul>
<li>
<p>Data definition language (DDL) statements (such as <code dir="ltr">CREATE</code>, <code dir="ltr">ALTER</code>, <code dir="ltr">DROP</code>)</p>
</li>
<li>
<p>Transaction control statements (such as <code dir="ltr">COMMIT</code>, <code dir="ltr">ROLLBACK</code>)</p>
</li>
<li>
<p>Session control (such as <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code>)</p>
</li>
<li>
<p>System control (such as <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code>)</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="REPMA1071" class="sect3"><a id="sthref2643"></a>
<h4 class="sect3">Column Subsetting Restrictions for User-Defined Conflict Resolution Methods<a id="sthref2644"></a><a id="sthref2645"></a></h4>
<p>Avoid subsetting the columns in a column group when you create updatable multitier materialized views. Column subsetting excludes columns that are in master tables or master materialized views from a materialized view based on these masters. You do this by specifying certain select columns in the <code dir="ltr">SELECT</code> statement during materialized view creation.</p>
<p>When you use conflict resolution with multitier materialized views, you cannot define the conflict resolution methods at the materialized view site. Conflict resolution methods are always pulled down from the master site. Therefore, if you subset the columns in a column group that has a user-defined conflict resolution applied to it, the conflict resolution method will not be able to find all of the columns in the column group at a master materialized view site. When this happens, the conflict resolution method returns the following error:</p>
<pre dir="ltr">ORA-23460 missing value for column in resolution method
</pre>
<p>For example, consider a case where the <code dir="ltr">job_id</code>, <code dir="ltr">salary</code>, and <code dir="ltr">commission_pct</code> columns in the <code dir="ltr">hr.employees</code> table are part of a column group name <code dir="ltr">employees_cg1</code> that has a user-defined conflict resolution method applied to it at the master site <code dir="ltr">hq.example.com</code>. To protect the privacy of your sales staff, you create a level 1 updatable materialized view that uses column subsetting to exclude the <code dir="ltr">salary</code> and <code dir="ltr">commission_pct</code> columns at the <code dir="ltr">ca.us</code> office. When you create this materialized view at the <code dir="ltr">ca.us</code> office, the conflict resolution method is pulled down from <code dir="ltr">hq.example.com</code>. You then create an updatable multitier materialized view at the <code dir="ltr">sf.ca</code> office based on the level 1 materialized view at the <code dir="ltr">ca.us</code> office.</p>
<p>Given this replication environment, if a conflict arises for a <code dir="ltr">job_id</code> value at the level&nbsp;1 materialized view at the <code dir="ltr">ca.us</code> office, then the conflict resolution method fails to find the <code dir="ltr">salary</code> and <code dir="ltr">commission_pct</code> columns and returns the <code dir="ltr">ORA-23460</code> error mentioned previously.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN116" href="../REPLN/repdt.htm#REPLN116"><span class="italic">Oracle Database Advanced Replication</span></a> for more information about column subsetting</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="REPMA1072" class="sect2"><a id="sthref2646"></a>
<h3 class="sect2">Examples of User-Defined Conflict Resolution Method<a id="sthref2647"></a></h3>
<p>The following examples show user-defined methods that are variations on the standard maximum and additive prebuilt conflict resolution methods. Unlike the standard methods, these custom functions can handle nulls in the columns used to resolve the conflict.</p>
<div id="REPMA1073" class="sect3"><a id="sthref2648"></a>
<h4 class="sect3">Maximum User Function</h4>
<pre dir="ltr">-- User function similar to MAXIMUM method.
-- If curr is null or curr &lt; new, then use new values.
-- If new is null or new &lt; curr, then use current values.
-- If both are null, then no resolution.
-- Does not converge with &gt; 2 masters, unless 
-- always increasing.

CREATE OR REPLACE FUNCTION max_null_loses(old  IN       NUMBER,
                        new                    IN  OUT  NUMBER,
                        cur                    IN       NUMBER,
                        ignore_discard_flag    OUT      BOOLEAN)
  RETURN BOOLEAN IS
BEGIN
   IF (new IS NULL AND cur IS NULL) OR new = cur THEN
       RETURN FALSE;
   END IF;
   IF new IS NULL THEN
       ignore_discard_flag := TRUE;
   ELSIF cur IS NULL THEN
       ignore_discard_flag := FALSE;
   ELSIF new &lt; cur THEN
       ignore_discard_flag := TRUE;
   ELSE
       ignore_discard_flag := FALSE;
   END IF;
   RETURN TRUE;
END max_null_loses;
/
</pre></div>
<!-- class="sect3" -->
<div id="REPMA1074" class="sect3"><a id="sthref2649"></a>
<h4 class="sect3">Additive User Function</h4>
<pre dir="ltr">-- User function similar to ADDITIVE method.
-- If old is null, then old = 0.
-- If new is null, then new = 0.
-- If curr is null, then curr = 0.
-- new = curr + (new - old) -&gt; just like ADDITIVE method.

CREATE OR REPLACE FUNCTION additive_nulls(old  IN       NUMBER,
                        new                    IN  OUT  NUMBER,
                        cur                    IN       NUMBER,
                        ignore_discard_flag    OUT      BOOLEAN)
   RETURN BOOLEAN IS
   old_val NUMBER := 0.0;
   new_val NUMBER := 0.0;
   cur_val NUMBER := 0.0;
BEGIN
   IF old IS NOT NULL THEN
      old_val := old;
   END IF;
   IF new IS NOT NULL THEN
      new_val := new;
   END IF;
   IF cur IS NOT NULL THEN
      cur_val := cur;
   END IF;
   new := cur_val + (new_val - old_val);
   ignore_discard_flag := FALSE;
   RETURN TRUE;
END additive_nulls;
/
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i8348"></a>
<div id="REPMA1075" class="sect1">
<h2 class="sect1">User-Defined Conflict Notification Methods<a id="sthref2650"></a><a id="sthref2651"></a></h2>
<p>A conflict notification method is a user-defined function that provides conflict notification rather than or in addition to conflict resolution. For example, you can write your own conflict notification methods to log conflict information in a database table, send an email message, or page an administrator. After you write a conflict notification method, you can assign it to a column group (or constraint) in a specific order so that Oracle notifies you when a conflict happens, before attempting subsequent conflict resolution methods, or after Oracle attempts to resolve a conflict but cannot do so.</p>
<p>To configure a replicated table with a user-defined conflict notification mechanism, you must complete the following steps:</p>
<ol>
<li>
<p>Create a conflict notification log.</p>
</li>
<li>
<p>Create the user-defined conflict notification method in a package.</p>
</li>
</ol>
<p>The following sections explain each step.</p>
<div id="REPMA1076" class="sect2"><a id="sthref2652"></a>
<h3 class="sect2">Creating a <a id="sthref2653"></a>Conflict<a id="sthref2654"></a> Notification Log</h3>
<p>When configuring a replicated table to use a user-defined conflict notification method, the first step is to create a database table that can record conflict notifications. You can create a table to log conflict notifications for one or many tables in a master group.</p>
<p>To create a conflict notification log table at all master sites, use the replication execute DDL facility. For more information, see <a href="rarrcatpac.htm#i97906">&#34;EXECUTE_DDL Procedure&#34;</a>. Do <span class="italic">not</span> generate replication support for the conflict notification tables because their entries are specific to the site that detects a conflict.</p>
<div id="REPMA1077" class="sect3"><a id="sthref2655"></a>
<h4 class="sect3">Sample <a id="sthref2656"></a>Conflict<a id="sthref2657"></a> Notification Log Table</h4>
<p>The following <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statement creates a table that you can use to log conflict notifications from several tables in a master group.</p>
<pre dir="ltr">CREATE TABLE sales.conf_report (
 line          NUMBER(2),    --- used to order message text
 txt           VARCHAR2(80), --- conflict notification message
 timestamp     DATE,         --- time of conflict
 table_name    VARCHAR2(30), --- table in which the 
                             --- conflict occurred
 table_owner   VARCHAR2(30), --- owner of the table
 conflict_type VARCHAR2(6)   --- INSERT, DELETE or UNIQUE
);
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="REPMA1078" class="sect2"><a id="sthref2658"></a>
<h3 class="sect2">Creating a <a id="sthref2659"></a>Conflict<a id="sthref2660"></a> Notification Package</h3>
<p>To create a conflict notification method, you must define the method in a PL/SQL package and then replicate the package as part of a master group along with the associated replicated table.</p>
<p>A conflict notification method can perform conflict notification only, or both conflict notification and resolution. If possible, always use one of Oracle&#39;s prebuilt conflict resolution methods to resolve conflicts. When a user-defined conflict notification method performs only conflict notification, assign the user-defined method to a column group (or constraint) along with conflict resolution methods that can resolve conflicts.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
If Oracle cannot ultimately resolve a replication conflict, then Oracle rolls back the entire transaction, including any updates to a notification table. If notification is necessary independent of transactions, then you can design a notification mechanism to use the Oracle <code dir="ltr">DBMS_PIPES</code> package.</div>
<div id="REPMA1079" class="sect3"><a id="sthref2661"></a>
<h4 class="sect3">Sample Conflict Notification Package<a id="sthref2662"></a></h4>
<p>The following package and package body perform a simple form of <span class="italic">conflict notification</span> by logging uniqueness conflicts for a <code dir="ltr">CUSTOMERS</code> table into the previously defined <code dir="ltr">CONF_REPORT</code> table.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
This example of <span class="italic">conflict notification</span> does not resolve any conflicts. You should either provide a method to resolve conflicts (such as <span class="italic">discard</span> or <span class="italic">overwrite</span>), or provide a notification mechanism that will succeed (for example, using e-mail) even if the error is not resolved and the transaction is rolled back. With simple modifications, the following user-defined conflict notification method can take more active steps. For example, instead of just recording the notification message, the package can use the <code dir="ltr">DBMS_OFFICE</code> utility package to send an Oracle Office email message to an administrator.</div>
<pre dir="ltr">CREATE OR REPLACE PACKAGE notify AS
 -- Report uniqueness constraint violations on CUSTOMERS table
 FUNCTION customers_unique_violation (
   first_name         IN OUT VARCHAR2,
   last_name          IN OUT VARCHAR2,
   discard_new_values IN OUT BOOLEAN) 
 RETURN BOOLEAN;
END notify;
/

CREATE OR REPLACE PACKAGE BODY notify AS
 -- Define a PL/SQL associative array to hold the notification message
 TYPE message_table IS TABLE OF VARCHAR2(80) INDEX BY BINARY_INTEGER;
 PROCEDURE report_conflict (
   conflict_report IN MESSAGE_TABLE,
   report_length   IN NUMBER,
   conflict_time   IN DATE,
   conflict_table  IN VARCHAR2,
   table_owner     IN VARCHAR2,
   conflict_type   IN VARCHAR2) IS
 BEGIN
   FOR idx IN 1..report_length LOOP
     BEGIN
       INSERT INTO sales.conf_report 
         (line, txt, timestamp, table_name, table_owner, conflict_type)
         VALUES (idx, SUBSTR(conflict_report(idx),1,80), conflict_time,
                 conflict_table, table_owner, conflict_type);
     EXCEPTION WHEN others THEN NULL;
     END;
   END LOOP;
 END report_conflict;
 -- This is the conflict resolution method that is called first when
 -- a uniqueness constraint violated is detected in the CUSTOMERS table.
 FUNCTION customers_unique_violation (
   first_name  IN OUT VARCHAR2,
   last_name  IN OUT VARCHAR2,
   discard_new_values  IN OUT BOOLEAN) 
  RETURN BOOLEAN IS
   local_node  VARCHAR2(128);
   conf_report MESSAGE_TABLE;
   conf_time   DATE := SYSDATE;
  BEGIN
  -- Get the global name of the local site
    BEGIN
      SELECT global_name INTO local_node FROM global_name;
    EXCEPTION WHEN others THEN local_node := &#39;?&#39;;
    END;
  -- Generate a message for the DBA
  conf_report(1) := &#39;UNIQUENESS CONFLICT DETECTED IN TABLE CUSTOMERS ON &#39; ||
                    TO_CHAR(conf_time, &#39;MM-DD-YYYY HH24:MI:SS&#39;);
  conf_report(2) := &#39;  AT NODE &#39; || local_node;
  conf_report(3) := &#39;ATTEMPTING TO RESOLVE CONFLICT USING &#39; ||
                    &#39;APPEND SEQUENCE METHOD&#39;;
  conf_report(4) := &#39;FIRST NAME: &#39; || first_name;
  conf_report(5) := &#39;LAST NAME:  &#39; || last_name;
  conf_report(6) := NULL;
  --- Report the conflict
  report_conflict(conf_report, 5, conf_time, &#39;CUSTOMERS&#39;,  
                &#39;OFF_SHORE_ACCOUNTS&#39;, &#39;UNIQUE&#39;);
  --- Do not discard the new column values. They are still needed by
  --- other conflict resolution methods.
  discard_new_values := FALSE;
  --- Indicate that the conflict was not resolved.
    RETURN FALSE;
  END customers_unique_violation;
END notify;
/
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i8467"></a>
<div id="REPMA1080" class="sect1">
<h2 class="sect1">Viewing Conflict Resolution Information<a id="sthref2663"></a><a id="sthref2664"></a></h2>
<p>Oracle provides replication catalog (REPCAT) views that you can use to determine what conflict resolution methods are being used by each of the tables and column groups in your replication environment. Each view has three versions: <code dir="ltr">USER_*</code>, <code dir="ltr">ALL_*</code>, <code dir="ltr">SYS.DBA_*</code>. The available views are shown in the following table.</p>
<div class="inftblinformal">
<table class="cellalignment866" title="Conflict Resolution Views" summary="This table lists the conflict resolution views and a description of each view." dir="ltr">
<thead>
<tr class="cellalignment855">
<th class="cellalignment862" id="r1c1-t9">View</th>
<th class="cellalignment862" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment855">
<td class="cellalignment863" id="r2c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i37553">ALL_REPRESOLUTION_METHOD</a></td>
<td class="cellalignment863" headers="r2c1-t9 r1c2-t9">Lists all of the available conflict resolution methods.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r3c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i36363">ALL_REPCOLUMN_GROUP</a></td>
<td class="cellalignment863" headers="r3c1-t9 r1c2-t9">Lists all of the column groups defined for the database.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r4c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i36783">ALL_REPGROUPED_COLUMN</a></td>
<td class="cellalignment863" headers="r4c1-t9 r1c2-t9">Lists all of the columns in each column group in the database.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r5c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i37238">ALL_REPPRIORITY_GROUP</a></td>
<td class="cellalignment863" headers="r5c1-t9 r1c2-t9">Lists all of the priority groups and site priority groups defined for the database.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r6c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i37104">ALL_REPPRIORITY</a></td>
<td class="cellalignment863" headers="r6c1-t9 r1c2-t9">Lists the values and corresponding priority levels for each priority or site priority group.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r7c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i36417">ALL_REPCONFLICT</a></td>
<td class="cellalignment863" headers="r7c1-t9 r1c2-t9">Lists the types of conflicts (delete, update, or uniqueness) for which you have specified a resolution method, for the tables, column groups, and unique constraints in the database.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r8c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i37459">ALL_REPRESOLUTION</a></td>
<td class="cellalignment863" headers="r8c1-t9 r1c2-t9">Shows more specific information about the conflict resolution method used to resolve conflicts on each object.</td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r9c1-t9" headers="r1c1-t9"><a href="rarrcatviews.htm#i36994">ALL_REPPARAMETER_COLUMN</a></td>
<td class="cellalignment863" headers="r9c1-t9 r1c2-t9">Shows which columns are used by the conflict resolution methods to resolve a conflict.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="rarrcatviews.htm#g94406">Chapter 23, &#34;Replication Catalog Views&#34;</a></div>
</div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment854">
<tr>
<td class="cellalignment863">
<table class="cellalignment859">
<tr>
<td class="cellalignment858"><a href="rarsec.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment858"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment865">
<table class="cellalignment857">
<tr>
<td class="cellalignment858"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment858"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment858"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment858"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment858"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment858"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>