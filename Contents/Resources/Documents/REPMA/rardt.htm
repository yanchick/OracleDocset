<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-91772"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Creating%20a%20Deployment%20Template"></a><title>Creating a Deployment Template</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1042"/>
<meta name="dcterms.created" content="2015-02-06T10:45:42Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Replication Management API Reference"/>
<meta name="dcterms.identifier" content="E18896-09"/>
<meta name="dcterms.isVersionOf" content="REPMA"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="rarmastergroup.htm" title="Previous" type="text/html"/>
<link rel="Next" href="rarmviewgroup.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E18896-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/38</span> <!-- End Header -->
<div id="REPMA004" class="chapter"><a id="g31074"></a> <a id="i15536"></a>
<h1 class="chapter"><span class="secnum">4</span> Creating a Deployment Template</h1>
<p>This chapter illustrates how to build a deployment template using the replication management API.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i17234">Oracle Deployment Templates Concepts</a></p>
</li>
<li>
<p><a href="#i19255">Before Creating the Deployment Template</a></p>
</li>
<li>
<p><a href="#i12254">Creating a Deployment Template</a></p>
</li>
<li>
<p><a href="#i15655">Packaging a Deployment Template for Instantiation</a></p>
</li>
<li>
<p><a href="#i14295">Distributing Instantiation Files</a></p>
</li>
<li>
<p><a href="#i7843">Instantiating a Deployment Template</a></p>
</li>
<li>
<p><a href="#i14333">Refreshing a Refresh Group After Instantiation</a></p>
</li>
</ul>
<p>Before you build materialized view environments, you must set up your master site, create a master group, and set up your intended materialized view sites. Also, if conflicts are possible at the master site due to activity at the materialized view sites you are creating, then configure conflict resolution for the master tables of the materialized views before you create the materialized view group.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="rarrepsite.htm#i10539">&#34;Setting Up Master Sites&#34;</a></p>
</li>
<li>
<p><a href="rarmastergroup.htm#i1004580">&#34;Overview of Creating a Master Group&#34;</a></p>
</li>
<li>
<p><a href="rarrepsite.htm#i18551">&#34;Setting Up Materialized View Sites&#34;</a></p>
</li>
<li>
<p><a href="rarconflictres.htm#i21416">Chapter 6, &#34;Configuring Conflict Resolution&#34;</a></p>
</li>
</ul>
</div>
<a id="i17234"></a>
<div id="REPMA338" class="sect1">
<h2 class="sect1"><a id="sthref179"></a>Oracle Deployment Templates Concepts</h2>
<p>Oracle offers deployment templates to allow the database administrator to package a materialized view environment for easy, custom, and secure distribution and installation. A deployment template can be simple (for example, it can contain a single materialized view with a fixed data set), or complex (for example, it can contain hundreds of materialized views with a dynamic data set based on one or more variables). The goal is to define the environment once and deploy the deployment template as often as necessary. Oracle deployment templates feature:</p>
<ul>
<li>
<p>Central control</p>
</li>
<li>
<p>Repeated deployment of a materialized view environment</p>
</li>
<li>
<p>Data subsetting at remote sites using template parameters</p>
</li>
<li>
<p>Authorized user list to control template instantiation and data access</p>
</li>
</ul>
<p>To prepare a materialized view environment for deployment, the DBA creates a deployment template at the master site. This template stores all of the information needed to deploy a materialized view environment, including the DDL to create the objects at the remote site and the target refresh group. This template also maintains links to user security information and template parameters for custom materialized view creation.</p>
<p><span class="bold"><a id="sthref180"></a><a id="sthref181"></a><a id="sthref182"></a></span>You cannot use deployment templates to instantiate the following types of objects:</p>
<ul>
<li>
<p>User-defined types</p>
</li>
<li>
<p>User-defined type bodies</p>
</li>
<li>
<p>User-defined operators</p>
</li>
<li>
<p>Indextypes</p>
</li>
</ul>
<p>Nor can you use deployment templates to instantiate any objects based on these types of objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN004" href="../REPLN/repdt.htm#REPLN004"><span class="italic">Oracle Database Advanced Replication</span></a> for more conceptual information about deployment templates</div>
</div>
<!-- class="sect1" -->
<a id="i19255"></a>
<div id="REPMA339" class="sect1">
<h2 class="sect1">Before Creating the Deployment Template</h2>
<p><a id="i19212"></a>If you want one of your master sites to support a materialized views that can be fast refreshed, then you must create materialized view logs for each master table that is replicated to a materialized view.</p>
<p>The example in this chapter uses the <code dir="ltr">hr</code> sample schema. Enter the following to create materialized view logs for the tables in the <code dir="ltr">hr</code> schema:</p>
<pre dir="ltr">CONNECT hr@orc3.example.com
Enter password: <span class="italic">password</span>

CREATE MATERIALIZED VIEW LOG ON hr.countries;
CREATE MATERIALIZED VIEW LOG ON hr.departments;
CREATE MATERIALIZED VIEW LOG ON hr.employees;
CREATE MATERIALIZED VIEW LOG ON hr.jobs;
CREATE MATERIALIZED VIEW LOG ON hr.job_history;
CREATE MATERIALIZED VIEW LOG ON hr.locations;
CREATE MATERIALIZED VIEW LOG ON hr.regions;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code> <code dir="ltr">LOG</code> statement in the <a class="olink SQLRF01303" href="../SQLRF/statements_6003.htm#SQLRF01303"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about this SQL statement</div>
</div>
<!-- class="sect1" -->
<a id="i12254"></a>
<div id="REPMA340" class="sect1">
<h2 class="sect1">Creating a Deployment Template<a id="sthref183"></a><a id="sthref184"></a></h2>
<p>This section contains a complete script example of how to construct a deployment template using the replication management API.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN004" href="../REPLN/repdt.htm#REPLN004"><span class="italic">Oracle Database Advanced Replication</span></a> for conceptual and architectural information about deployment templates</div>
<div id="REPMA341" class="figure">
<p class="titleinfigure"><a id="i8111"></a>Figure 4-1 Creating a Deployment Template<a id="sthref185"></a></p>
<img width="600" height="614" src="img/repma026.gif" alt="Description of Figure 4-1 follows"/><br/>
<a id="sthref186" href="img_text/repma026.htm">Description of &#34;Figure 4-1 Creating a Deployment Template&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>Be sure to read the comments contained within the scripts, as they contain important and useful information about building templates with the replication management API.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>You must use the Advanced Replication interface in Oracle Enterprise Manager Cloud Control to create materialized views with a subset of the columns in their master tables. See <a class="olink REPLN004" href="../REPLN/repdt.htm#REPLN004"><span class="variable">Oracle Database Advanced Replication</span></a> and the Advanced Replication interface online Help for more information about column subsetting.</p>
</li>
<li>
<p>If you are viewing this document online, then you can copy the text from the &#34;BEGINNING OF SCRIPT&#34; line after this note to the &#34;END OF SCRIPT&#34; line into a text editor and then edit the text to create a script for your environment.</p>
</li>
</ul>
</div>
<pre dir="ltr">/************************* BEGINNING OF SCRIPT ******************************
</pre>
<p>This script creates a private deployment template that contains four template objects, two template parameters, a set of user parameter values, and an authorized user. Complete the following steps to build a template:</p>
<a id="i17687"></a>
<dl>
<dd><a id="REPMA1126"></a><a id="CIHFADGI"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Create the deployment template<a class="dashingAutolink" name="autolink-91762"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref187"></a>.</dt>
<dd>
<p>Before assembling the components of your deployment template, use the <code dir="ltr">CREATE_RERESH_TEMPLATE</code> procedure to define the name of your deployment template, along with several other template characteristics (Public/Private status, target refresh group, and owner).</p>
<pre dir="ltr">*/

SET ECHO ON

SPOOL create_dt.out

CONNECT repadmin@orc3.example.com

DECLARE
   a NUMBER;
BEGIN
   a := <a href="rarrcatrgtpac.htm#i94870">DBMS_REPCAT_RGT.CREATE_REFRESH_TEMPLATE (</a><a id="sthref188"></a><a id="sthref189"></a>
           owner =&gt; &#39;hr&#39;,
           refresh_group_name =&gt; &#39;hr_refg&#39;,
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           template_comment =&gt; &#39;Human Resources Deployment Template&#39;,
           public_template =&gt; &#39;N&#39;);
END;
/

/*
</pre></dd>
<dd><a id="REPMA1127"></a><a id="sthref190"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Add objects to template.</dt>
<dd>
<p>Create <code dir="ltr">countries_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.countries_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      country_id, country_name, region_id 
      FROM hr.countries@:dblink&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;countries_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
END;
/

/*
</pre>
<p>Whenever you create a materialized view, always specify the schema name of the table owner in the query for the materialized view. In the example previously, <code dir="ltr">hr</code> is specified as the owner of the <code dir="ltr">countries</code> table.</p>
<p><a id="i19002"></a>Create <code dir="ltr">departments_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.departments_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      department_id, department_name, manager_id, location_id
      FROM hr.departments@:dblink&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;departments_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
END;
/

/*
</pre>
<p><a id="i18988"></a>Create <code dir="ltr">employees_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.employees_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      employee_id, first_name, last_name, email, phone_number, 
      hire_date, job_id, salary, commission_pct, manager_id, 
      department_id
      FROM hr.employees@:dblink WHERE department_id = :dept&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a><a id="sthref191"></a><a id="sthref192"></a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;employees_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
END;
/

/*
</pre>
<p>Create <code dir="ltr">jobs_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.jobs_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      job_id, job_title, min_salary, max_salary 
      FROM hr.jobs@:dblink&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;jobs_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
END;
/

/*
</pre>
<p>Create <code dir="ltr">job_history_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.job_history_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      employee_id, start_date, end_date, job_id, department_id 
      FROM hr.job_history@:dblink&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;job_history_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
 END;
/

/*
</pre>
<p>Create <code dir="ltr">locations_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.locations_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      location_id, street_address, postal_code, city, 
      state_province, country_id 
      FROM hr.locations@:dblink&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;locations_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
END;
/

/*
</pre>
<p>Create <code dir="ltr">regions_mv</code> materialized view.</p>
<pre dir="ltr">*/

DECLARE
   tempstring VARCHAR2(3000);
   a NUMBER;
BEGIN
   tempstring := &#39;CREATE MATERIALIZED VIEW hr.regions_mv 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT 
      region_id, region_name 
      FROM hr.regions@:dblink&#39;;
   a := <a href="rarrcatrgtpac.htm#i94970">DBMS_REPCAT_RGT.CREATE_TEMPLATE_OBJECT (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           object_name =&gt; &#39;regions_mv&#39;,
           object_type =&gt; &#39;MATERIALIZED VIEW&#39;,
           ddl_text =&gt; tempstring,
           master_rollback_seg =&gt; &#39;rbs&#39;);
END;
/

/*
</pre></dd>
<dd><a id="REPMA1128"></a><a id="sthref193"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Define parameter defaults<a class="dashingAutolink" name="autolink-91763"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref194"></a><a class="dashingAutolink" name="autolink-91764"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref195"></a>.</dt>
<dd>
<p>Rather than using the <code dir="ltr">CREATE_*</code> functions and procedures as in the other steps, use the <code dir="ltr">ALTER_TEMPLATE_PARM</code> procedure to define a template parameter value and prompt string. You use the <code dir="ltr">ALTER_*</code> procedure because the actual parameter was created in Step <a href="#CIHFADGI">1</a>. Recall that you defined the <code dir="ltr">:dblink</code> and <code dir="ltr">:dept</code> template parameters in the <code dir="ltr">ddl_text</code> parameter. Oracle detects these parameters in the DDL and automatically creates the template parameter. Use the <code dir="ltr">ALTER_TEMPLATE_PARM</code> procedure to define the remainder of the template parameter information (that is, default parameter value and prompt string).</p>
<p>Complete the following tasks to define parameter defaults.</p>
<p>Define the default value for the <code dir="ltr">dept</code> parameter.</p>
<pre dir="ltr">*/

BEGIN 
   <a href="rarrcatrgtpac.htm#i94356">DBMS_REPCAT_RGT.ALTER_TEMPLATE_PARM (</a> 
      refresh_template_name =&gt; &#39;hr_refg_dt&#39;, 
      parameter_name =&gt; &#39;dept&#39;, 
      new_default_parm_value =&gt; &#39;30&#39;, 
      new_prompt_string =&gt; &#39;Enter your department number:&#39;, 
      new_user_override =&gt; &#39;Y&#39;); 
END; 
/ 

/*
</pre>
<p>Define the default value for the <code dir="ltr">dblink</code> parameter.</p>
<pre dir="ltr">*/

BEGIN 
   <a href="rarrcatrgtpac.htm#i94356">DBMS_REPCAT_RGT.ALTER_TEMPLATE_PARM (</a> 
      refresh_template_name =&gt; &#39;hr_refg_dt&#39;, 
      parameter_name =&gt; &#39;dblink&#39;, 
      new_default_parm_value =&gt; &#39;orc3.example.com&#39;, 
      new_prompt_string =&gt; &#39;Enter your master site:&#39;, 
      new_user_override =&gt; &#39;Y&#39;); 
END; 
/  

/*
</pre></dd>
<dd><a id="REPMA1129"></a><a id="sthref196"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Define user parameter values<a class="dashingAutolink" name="autolink-91765"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref197"></a><a class="dashingAutolink" name="autolink-91766"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref198"></a>.</dt>
<dd>
<p>To automate the instantiation of custom data sets at individual remote materialized view sites, you can define user parameter values that will be used automatically when the specified user instantiates the target template. The <code dir="ltr">CREATE_USER_PARM_VALUE</code> procedure enables you to assign a value to a parameter for a user.</p>
<p>Complete the following tasks to define user parameter values.</p>
<p>Define <code dir="ltr">dept</code> user parameter value for user <code dir="ltr">hr</code>.</p>
<pre dir="ltr">*/

DECLARE
   a NUMBER;
BEGIN
   a := <a href="rarrcatrgtpac.htm#i95270">DBMS_REPCAT_RGT.CREATE_USER_PARM_VALUE (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           parameter_name =&gt; &#39;dept&#39;,
           user_name =&gt; &#39;hr&#39;,
           parm_value =&gt; &#39;20&#39;);
END;
/

/*
</pre>
<p>Define <code dir="ltr">dblink</code> user parameter value for user <code dir="ltr">hr</code>.</p>
<pre dir="ltr">*/

DECLARE
   a NUMBER;
BEGIN
   a := <a href="rarrcatrgtpac.htm#i95270">DBMS_REPCAT_RGT.CREATE_USER_PARM_VALUE (</a>
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
           parameter_name =&gt; &#39;dblink&#39;,
           user_name =&gt; &#39;hr&#39;,
           parm_value =&gt; &#39;orc3.example.com&#39;);
END;
/

/*
</pre></dd>
<dd><a id="REPMA1130"></a><a id="sthref199"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Authorize users for private template.<a class="dashingAutolink" name="autolink-91767"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref200"></a><a class="dashingAutolink" name="autolink-91768"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref201"></a><a class="dashingAutolink" name="autolink-91769"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref202"></a></dt>
<dd>
<p>Because this is a private template (<code dir="ltr">public_template =&gt; &#39;N&#39;</code> in the <code dir="ltr">DBMS_REPCAT_RGT.CREATE_REFRESH_TEMPLATE</code> function defined in Step&nbsp;<a href="#CIHFADGI">1</a>), you must authorize users to instantiate the <code dir="ltr">dt_personnel</code> deployment template. Use the <code dir="ltr">CREATE_USER_AUTHORIZATION</code> function in the <code dir="ltr">DBMS_REPCAT_RGT</code> package to create authorized users.</p>
<pre dir="ltr">*/

DECLARE
   a NUMBER;
BEGIN
   a := <a href="rarrcatrgtpac.htm#i95200">DBMS_REPCAT_RGT.CREATE_USER_AUTHORIZATION (</a><a id="sthref203"></a><a id="sthref204"></a>
           user_name =&gt; &#39;hr&#39;,
           refresh_template_name =&gt; &#39;hr_refg_dt&#39;);
END;
/

COMMIT;

SET ECHO OFF

SPOOL OFF

<a id="i15663"></a>/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i15655"></a>
<div id="REPMA107" class="sect1">
<h2 class="sect1">Packaging a Deployment Template for Instantiation<a id="sthref205"></a><a id="sthref206"></a><a id="sthref207"></a><a id="sthref208"></a><a id="sthref209"></a></h2>
<p>After building your deployment template, you must package the template for instantiation. This example illustrates how to use both the online and offline instantiation procedures. Notice that the instantiation procedures are very similar: you simply use either the <code dir="ltr">INSTANTIATE_ONLINE</code> function or <code dir="ltr">INSTANTIATE_OFFLINE</code> function according to your needs. This section describes two tasks: create the instantiation script and save the instantiation script to a file.</p>
<div id="REPMA342" class="figure">
<p class="titleinfigure"><a id="i14356"></a>Figure 4-2 Packaging and Instantiating a Deployment Template</p>
<img width="227" height="528" src="img/repma024.gif" alt="Description of Figure 4-2 follows"/><br/>
<a id="sthref210" href="img_text/repma024.htm">Description of &#34;Figure 4-2 Packaging and Instantiating a Deployment Template&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<a id="i7498"></a>
<div id="REPMA343" class="sect2">
<h3 class="sect2">Packaging a Deployment Template<a id="sthref211"></a><a id="sthref212"></a></h3>
<p>When you execute either the <code dir="ltr">INSTANTIATE_OFFLINE</code> or the <code dir="ltr">INSTANTIATE_ONLINE</code> function, Oracle populates the <code dir="ltr">USER_REPCAT_TEMP_OUTPUT</code> data dictionary view with the script to create the remote materialized view environment. Both online and offline scripts contain the SQL statements to create the objects specified in the deployment template. The difference is that an offline instantiation script also contains the data to populate the objects. The online instantiation script does not contain the data. Rather, during online instantiation, the materialized view site connects to the master site to download the data.</p>
<p>Complete the steps in either the <a href="#i7868">&#34;Packaging a Deployment Template for Offline Instantiation&#34;</a> or <a href="#i7912">&#34;Packaging a Deployment Template for Online Instantiation&#34;</a> according to your needs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you must execute either the <code dir="ltr">INSTANTIATE_OFFLINE</code> or the <code dir="ltr">INSTANTIATE_ONLINE</code> function more than once for a particular materialized view site, then run the <code dir="ltr">DROP_SITE_INSTANTIATION</code> procedure in the <code dir="ltr">DBMS_REPCAT_RGT</code> package before you attempt to repackage a template for the site. Otherwise, Oracle returns an error stating that there is a duplicate template site.</div>
<a id="i7868"></a>
<div id="REPMA344" class="sect3">
<h4 class="sect3">Packaging a Deployment Template for Offline Instantiation<a id="sthref213"></a></h4>
<p>The <code dir="ltr">INSTANTIATE_OFFLINE</code> function creates a script that creates the materialized view environment according to the contents of a specified deployment template. In addition to containing the DDL (<code dir="ltr">CREATE</code> statements) to create the materialized view environment, this script also contains the DML (<code dir="ltr">INSERT</code> statements) to populate the materialized view environment with the appropriate data set.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
If you are packaging your template at the same master site that contains the target master objects for your deployment template, then you must create a loopback database link.</div>
<pre dir="ltr">--Use the INSTANTIATE_OFFLINE function to package the 
--template for offline instantiation by a remote materialized view 
--site. Executing this procedure both creates a script that 
--creates that materialized view environment and populates the
--environment with the proper data set. This script is stored
--in the temporary USER_REPCAT_TEMP_OUTPUT view.

CONNECT repadmin@orc3.example.com
Enter password: <span class="italic">password</span>

SET SERVEROUTPUT ON
DECLARE
   dt_num NUMBER;
BEGIN
   dt_num := <a href="rarrcatrgtpac.htm#i96158">DBMS_REPCAT_RGT.INSTANTIATE_OFFLINE(</a><a id="sthref214"></a><a id="sthref215"></a>
               refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
               user_name =&gt; &#39;hr&#39;,
               site_name =&gt; &#39;mv4.example.com&#39;,
               next_date =&gt; SYSDATE,
               interval =&gt; &#39;SYSDATE + (1/144)&#39;);
   DBMS_OUTPUT.PUT_LINE(&#39;Template ID = &#39; || dt_num);
END;
/
COMMIT;
/
</pre>
<p>Make a note of the number that is returned for the <code dir="ltr">dt_num</code> variable. You must use this number when you select from the <code dir="ltr">USER_REPCAT_TEMP_OUTPUT</code> data dictionary view to retrieve the generated script. Ensure that you complete the steps in <a href="#i7959">&#34;Saving an Instantiation Script to File&#34;</a> after you complete this section. This script is unique to an individual materialized view site and cannot be used for other materialized view sites.</p>
</div>
<!-- class="sect3" -->
<a id="i7912"></a>
<div id="REPMA123" class="sect3">
<h4 class="sect3">Packaging a Deployment Template for Online Instantiation<a id="sthref216"></a></h4>
<p>The <code dir="ltr">INSTANTIATE_ONLINE</code> function creates a script that creates the materialized view environment according to the contents of a specified deployment template. When this script is executed at the remote materialized view site, Oracle creates the materialized view site according to the DDL (<code dir="ltr">CREATE</code> statements) in the script and populates the environment with the appropriate data set from the master site. This requires that the remote materialized view site has a &#34;live&#34; connection to the master site.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN102" href="../REPLN/repplan.htm#REPLN102"><span class="italic">Oracle Database Advanced Replication</span></a> for additional materialized view site requirements</div>
<pre dir="ltr">--Use the INSTANTIATE_ONLINE function to &#34;package&#34; the 
--template for online instantiation by a remote materialized view 
--site. Executing this procedure creates a script which can
--then be used to create a materialized view environment. This script 
--is stored in the temporary USER_REPCAT_TEMP_OUTPUT view.

CONNECT repadmin@orc3.example.com
Enter password: <span class="italic">password</span>

SET SERVEROUTPUT ON
DECLARE
   dt_num NUMBER;
BEGIN
   dt_num := <a href="rarrcatrgtpac.htm#i96392">DBMS_REPCAT_RGT.INSTANTIATE_ONLINE(</a><a id="sthref217"></a><a id="sthref218"></a>
               refresh_template_name =&gt; &#39;hr_refg_dt&#39;,
               user_name =&gt; &#39;hr&#39;,
               site_name =&gt; &#39;mv4.example.com&#39;,
               next_date =&gt; SYSDATE,
               interval =&gt; &#39;SYSDATE + (1/144)&#39;);
   DBMS_OUTPUT.PUT_LINE(&#39;Template ID = &#39; || dt_num);
END;
/
COMMIT;
/
</pre>
<p>Make a note of the number that is returned for the <code dir="ltr">dt_num</code> variable. You must use this number when you select from the <code dir="ltr">USER_REPCAT_TEMP_OUTPUT</code> data dictionary view to retrieve the generated script. Ensure that you complete the steps in <a href="#i7959">&#34;Saving an Instantiation Script to File&#34;</a> after you complete this task.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i7959"></a>
<div id="REPMA345" class="sect2">
<h3 class="sect2">Saving an Instantiation Script to File<a id="sthref219"></a><a id="sthref220"></a></h3>
<p>The best way to save the contents of the <code dir="ltr">USER_REPCAT_TEMP_OUTPUT</code> data dictionary view is to use the <code dir="ltr">UTL_FILE</code> package to save the contents of the <code dir="ltr">TEXT</code> column in the <code dir="ltr">USER_REPCAT_TEMP_OUTPUT</code> view to a file.</p>
<p>These contents are saved to a directory that corresponds to a directory object. To create a directory object, the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">DIRECTORY</code> privilege is required. If the replication administrator does not have this privilege, then connect as an administrative user who can grant privileges. For example:</p>
<pre dir="ltr">GRANT CREATE ANY DIRECTORY TO repadmin;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following action must be performed immediately after you have called either the <code dir="ltr">INSTANTIATE_OFFLINE</code> or <code dir="ltr">INSTANTIATE_ONLINE</code> functions, because the contents of the <code dir="ltr">USER_REPCAT_TEMP_OUTPUT</code> data dictionary view are temporary. If you have not completed the steps in <a href="#i7498">&#34;Packaging a Deployment Template&#34;</a>, then do so now and then complete the following action.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS069" href="../ARPLS/u_file.htm#ARPLS069"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">UTL_FILE</code> package</div>
<p>Enter the following to save the deployment template script to a file.</p>
<pre dir="ltr">DECLARE 
  fh UTL_FILE.FILE_TYPE; 
  CURSOR ddlcursor(myid NUMBER) IS 
  SELECT TEXT FROM USER_REPCAT_TEMP_OUTPUT WHERE OUTPUT_ID = myid ORDER BY LINE; 
BEGIN 
  fh := UTL_FILE.FOPEN (&#39;<span class="italic">file_location</span>&#39;, &#39;<span class="italic">file_name</span>&#39;, &#39;w&#39;); 
  UTL_FILE.PUT_LINE (fh, &#39;SET ECHO OFF;&#39;); 
  FOR myrec IN ddlcursor(<span class="italic">template_id</span>) LOOP
    UTL_FILE.PUT_LINE(fh, myrec.text); 
  END LOOP; 
  UTL_FILE.PUT_LINE (fh, &#39;SET ECHO ON;&#39;); 
  UTL_FILE.FFLUSH(fh); 
  UTL_FILE.FCLOSE(fh); 
END; 
/ 
</pre>
<p>Notice that <code dir="ltr"><span class="codeinlineitalic">file_location</span></code>, <code dir="ltr"><span class="codeinlineitalic">file_name</span></code>, and <code dir="ltr"><span class="codeinlineitalic">template_id</span></code> are placeholders. Substitute the correct values for your environment:</p>
<ul>
<li>
<p>Replace the <code dir="ltr"><span class="codeinlineitalic">file_location</span></code> placeholder with the name of a directory object that represents the directory where you want to save the template script.</p>
</li>
<li>
<p>Replace the <code dir="ltr"><span class="codeinlineitalic">file_name</span></code> placeholder with name you want to use for the template script.</p>
</li>
<li>
<p>Replace the <code dir="ltr"><span class="codeinlineitalic">template_id</span></code> placeholder with the number returned by the <code dir="ltr">INSTANTIATE_OFFLINE</code> or <code dir="ltr">INSTANTIATE_ONLINE</code> function when you packaged the template previously.</p>
</li>
</ul>
<p>For example, suppose you have the following values:</p>
<div class="inftblinformal">
<table class="cellalignment866" title="Values for placeholders in UTL_FILE.OPEN" summary="This table shows example values for each placeholder in UTL_FILE.FOPEN." dir="ltr">
<thead>
<tr class="cellalignment855">
<th class="cellalignment862" id="r1c1-t12">Placeholder</th>
<th class="cellalignment862" id="r1c2-t12">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment855">
<td class="cellalignment863" id="r2c1-t12" headers="r1c1-t12"><code dir="ltr"><span class="codeinlineitalic">file_location</span></code></td>
<td class="cellalignment863" headers="r2c1-t12 r1c2-t12"><code dir="ltr">/home/gen_files/</code></td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r3c1-t12" headers="r1c1-t12"><code dir="ltr"><span class="codeinlineitalic">file_name</span></code></td>
<td class="cellalignment863" headers="r3c1-t12 r1c2-t12"><code dir="ltr">sf.sql</code></td>
</tr>
<tr class="cellalignment855">
<td class="cellalignment863" id="r4c1-t12" headers="r1c1-t12"><code dir="ltr"><span class="codeinlineitalic">template_id</span></code></td>
<td class="cellalignment863" headers="r4c1-t12 r1c2-t12"><code dir="ltr">18</code></td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>Given these values, connect to the master site as the replication administrator and run the following procedure to save the template script to a file:</p>
<pre dir="ltr">CONNECT repadmin@orc3.example.com
Enter password: <span class="italic">password</span>

CREATE DIRECTORY GFILES AS &#39;/home/gen_files&#39;;

DECLARE 
  fh UTL_FILE.FILE_TYPE; 
  CURSOR ddlcursor(myid NUMBER) IS 
  SELECT TEXT FROM USER_REPCAT_TEMP_OUTPUT WHERE OUTPUT_ID = myid 
  ORDER BY LINE; 
BEGIN 
  fh := UTL_FILE.FOPEN (&#39;GFILES&#39;, &#39;sf.sql&#39;, &#39;w&#39;); 
  UTL_FILE.PUT_LINE (fh, &#39;SET ECHO OFF;&#39;); 
  FOR myrec IN ddlcursor(18) LOOP
    UTL_FILE.PUT_LINE(fh, myrec.text); 
  END LOOP; 
  UTL_FILE.PUT_LINE (fh, &#39;SET ECHO ON;&#39;); 
  UTL_FILE.FFLUSH(fh); 
  UTL_FILE.FCLOSE(fh); 
END; 
/ 
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i14295"></a>
<div id="REPMA346" class="sect1">
<h2 class="sect1">Distributing Instantiation Files<a id="sthref221"></a></h2>
<p>After creating the instantiation script and saving it to a file, you must distribute this file to the remote materialized view sites that must instantiate the template. You can distribute this file by posting the file on an FTP site or saving the file to a CD-ROM, floppy disk, or other distribution medium. You can also transfer the file using the <code dir="ltr">DBMS_FILE_TRANSFER</code> package.</p>
</div>
<!-- class="sect1" -->
<a id="i7843"></a>
<div id="REPMA108" class="sect1">
<h2 class="sect1">Instantiating a Deployment Template<a id="sthref222"></a><a id="sthref223"></a><a id="sthref224"></a></h2>
<p>After the instantiation script has been distributed to the remote materialized view sites, you are ready to instantiate the deployment template at the remote materialized view site. Ensure that you have set up the materialized view site before you instantiate the deployment template. The following script demonstrates how to complete the instantiation process at a remote materialized view site.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REPLN102" href="../REPLN/repplan.htm#REPLN102"><span class="variable">Oracle Database Advanced Replication</span></a> for materialized view site requirements that must be met before instantiating your deployment template</p>
</li>
<li>
<p><a href="rarrepsite.htm#i18551">&#34;Setting Up Materialized View Sites&#34;</a></p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are viewing this document online, then you can copy the text from the &#34;BEGINNING OF SCRIPT&#34; line after this note to the &#34;END OF SCRIPT&#34; line into a text editor and then edit the text to create a script for your environment.</div>
<pre dir="ltr">/************************* BEGINNING OF SCRIPT ******************************
</pre>
<dl>
<dd><a id="REPMA1131"></a><a id="sthref225"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;If it does not exist, then create the schema at materialized view site.</dt>
<dd>
<p>Before executing the instantiation script at the remote materialized view site, you must create the schema that contains the replicated objects.</p>
<p>The following illustrates creating the <code dir="ltr">hr</code> schema. This schema might exist in your database. In this case, the schema might need additional privileges, such as <code dir="ltr">CREATE</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code>, <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">MATERIALIZED</code> <code dir="ltr">VIEW</code>, and <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> <code dir="ltr">LINK</code>.</p>
<pre dir="ltr">*/

SET ECHO ON

SPOOL instant_mv.out

CONNECT system@mv4.example.com

CREATE TABLESPACE demo_mv
 DATAFILE &#39;demo_mv.dbf&#39; SIZE 10M AUTOEXTEND ON
 EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TEMPORARY TABLESPACE temp_mv
 TEMPFILE &#39;temp_mv.dbf&#39; SIZE 5M AUTOEXTEND ON;
ACCEPT password PROMPT &#39;Enter password for user: &#39; HIDE

CREATE USER hr IDENTIFIED BY &amp;password;

ALTER USER hr DEFAULT TABLESPACE demo_mv
              QUOTA UNLIMITED ON demo_mv;

ALTER USER hr TEMPORARY TABLESPACE temp_mv;

GRANT 
  CREATE SESSION, 
  CREATE TABLE, 
  CREATE PROCEDURE, 
  CREATE SEQUENCE, 
  CREATE TRIGGER, 
  CREATE VIEW, 
  CREATE SYNONYM, 
  ALTER SESSION,
  CREATE MATERIALIZED VIEW,
  ALTER ANY MATERIALIZED VIEW,
  CREATE DATABASE LINK
 TO hr;

/*
</pre></dd>
<dd><a id="REPMA1132"></a><a id="sthref226"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;If they do not exist, then create database links for the schema.<a class="dashingAutolink" name="autolink-91770"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref227"></a><a class="dashingAutolink" name="autolink-91771"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="sthref228"></a></dt>
<dd>
<p>Before instantiating the deployment template, you must ensure that the necessary database links exist for the replicated schema. The owner of the materialized views needs a database link pointing to the <code dir="ltr">proxy_refresher</code> that was created when the master site was set up.</p>
<pre dir="ltr">*/

CREATE PUBLIC DATABASE LINK orc3.example.com USING &#39;orc3.example.com&#39;;

CONNECT hr@mv4.example.com

CREATE DATABASE LINK orc3.example.com 
   CONNECT TO proxy_refresher IDENTIFIED BY &amp;password;

/*
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Step <a href="rarrepsite.htm#CIAGHHGJ">7</a> for more information about creating proxy master site users</div>
</dd>
<dd><a id="REPMA1133"></a><a id="sthref229"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Execute the instantiation script.</dt>
<dd>
<pre dir="ltr">*/
</pre>
<pre dir="ltr">CONNECT mviewadmin@mv4.example.com

@d:\sf.sql

SET ECHO OFF

SPOOL OFF

/*
</pre>
<p>Depending on the size of the materialized view environment created and the amount of data loaded, the instantiation procedure might take a substantial amount of time.</p>
<pre dir="ltr"><a id="i17585"></a>
************************** END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i14333"></a>
<div id="REPMA347" class="sect1">
<h2 class="sect1">Refreshing a Refresh Group After Instantiation<a id="sthref230"></a><a id="sthref231"></a></h2>
<p>If you have just instantiated a deployment template using the offline instantiation method, then you should perform a refresh of the refresh group as soon as possible by issuing the following execute statement:</p>
<pre dir="ltr">CONNECT hr@mv4.example.com
Enter password: <span class="italic">password</span>

EXECUTE <a href="rarrefreshpac.htm#i94192">DBMS_REFRESH.REFRESH (</a>&#39;hr_refg&#39;);
</pre></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment854">
<tr>
<td class="cellalignment863">
<table class="cellalignment859">
<tr>
<td class="cellalignment858"><a href="rarmastergroup.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment858"><a href="rarmviewgroup.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment865">
<table class="cellalignment857">
<tr>
<td class="cellalignment858"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment858"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment858"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment858"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment858"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment858"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>