<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-113947"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/DBMS_OUTPUT"></a><title>DBMS_OUTPUT</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 704"/>
<meta name="dcterms.created" content="2014-10-02T17:47:27Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database PL/SQL Packages Reference"/>
<meta name="dcterms.identifier" content="E21645-06"/>
<meta name="dcterms.isVersionOf" content="TTPLP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="d_lock.htm" title="Previous" type="text/html"/>
<link rel="Next" href="d_preproc.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21645-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/19</span> <!-- End Header --><a id="BABJCAJA"></a><a id="TTPLP036"></a>
<h1 class="chapter"><span class="secnum">4</span> DBMS_OUTPUT</h1>
<p>The <code>DBMS_OUTPUT</code> package enables you to send messages from stored procedures and packages. The package is especially useful for displaying PL/SQL debugging information.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABEHIEG">Using DBMS_OUTPUT</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Operational notes</p>
</li>
<li>
<p>Rules and limits</p>
</li>
<li>
<p>Exceptions</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#CIHIDIFA">Data structures</a></p>
<ul>
<li>
<p>Table types</p>
</li>
</ul>
</li>
<li>
<p><a href="#i999346">Summary of DBMS_OUTPUT subprograms</a></p>
</li>
</ul>
<a id="BABEHIEG"></a><a id="TTPLP71191"></a>
<hr/>
<div class="refsect1">
<h2 class="refsect1">Us<a id="sthref202"></a>ing DBMS_OUTPUT</h2>
<p>This section contains topics which relate to using the <code>DBMS_OUTPUT</code> package.</p>
<ul>
<li>
<p><a href="#CIHBFFDB">Overview</a></p>
</li>
<li>
<p><a href="#i1000634">Operational notes</a></p>
</li>
<li>
<p><a href="#i1000750">Exceptions</a></p>
</li>
<li>
<p><a href="#CIHEGBBF">Rules and limits</a></p>
</li>
<li>
<p><a href="#BABHEAFF">Examples</a></p>
</li>
</ul>
<a id="CIHBFFDB"></a><a id="TTPLP71192"></a>
<hr/>
<h3 class="refsect2">Overview</h3>
<p>The <a href="#BABGHBIA">PUT procedure</a> and <a href="#i1000105">PUT_LINE procedure</a> in this package enable you to place information in a buffer that can be read by another procedure or package. In a separate PL/SQL procedure or anonymous block, you can display the buffered information by calling the <a href="#BABGBACJ">GET_LINE procedure</a> and <a href="#i1000253">GET_LINES procedure</a>.</p>
<p>If the package is disabled, all calls to subprograms are ignored. In this way, you can design your application so that subprograms are available only when a client can process the information.</p>
<a id="i1000634"></a><a id="TTPLP71193"></a>
<hr/>
<h3 class="refsect2">Operational notes</h3>
<ul>
<li>
<p>If you do not call <code>GET_LINE</code>, or if you do not display the messages on your screen in <code>ttIsql</code>, the buffered messages are ignored.</p>
</li>
<li>
<p>The <code>ttIsql</code> utility calls <code>GET_LINES</code> after issuing a SQL statement or anonymous PL/SQL calls.</p>
</li>
<li>
<p>Typing <code>SET</code> <code>SERVEROUTPUT</code> <code>ON</code> in <code>ttIsql</code> has the same effect as the following:</p>
<pre>DBMS_OUTPUT.ENABLE (buffer_size =&gt; NULL);
</pre>
<p>There is no limit on the output.</p>
</li>
<li>
<p>You should generally avoid having application code invoke either the <a href="#i999434">DISABLE procedure</a> or <a href="#i999293">ENABLE procedure</a> because this could subvert the attempt by an external tool like <code>ttIsql</code> to control whether to display output.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
Messages sent using <code>DBMS_OUTPUT</code> are not actually sent until the sending subprogram completes. There is no mechanism to flush output during the execution of a procedure.</div>
<a id="CIHEGBBF"></a><a id="TTPLP71196"></a>
<hr/>
<h3 class="refsect2">Rules and limits</h3>
<ul>
<li>
<p>The maximum line size is 32767 bytes.</p>
</li>
<li>
<p>The default buffer size is 20000 bytes. The minimum size is 2000 bytes and the maximum is unlimited.</p>
</li>
</ul>
<a id="i1000750"></a><a id="TTPLP71194"></a>
<hr/>
<h3 class="refsect2">Exceptions</h3>
<p><code>DBMS_OUTPUT</code> subprograms raise the application error <code>ORA-20000</code>, and the output procedures can return the following errors:</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71195"></a><a id="sthref203"></a><a id="sthref204"></a>Table 4-1 DBMS_OUTPUT exceptions</p>
<table class="cellalignment1016" title="DBMS_OUTPUT exceptions " summary="This table describes the Exceptions raised by DBMS_OUTPUT subprograms." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t3">Exception</th>
<th class="cellalignment1017" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t3" headers="r1c1-t3">
<p><code>ORU-10027</code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t3 r1c2-t3">
<p>Buffer overflow</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t3" headers="r1c1-t3">
<p><code>ORU-10028</code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t3 r1c2-t3">
<p>Line length overflow</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<a id="BABHEAFF"></a><a id="TTPLP71197"></a>
<hr/>
<h3 class="refsect2">Exa<a id="sthref205"></a><a id="sthref206"></a>mples</h3>
<p>The <code>DBMS_OUTPUT</code> package is commonly used to debug stored procedures or functions.</p>
<p>This function queries the <code>employees</code> table of the <code>HR</code> schema and returns the total salary for a specified department. The function includes calls to the <code>PUT_LINE</code> procedure:</p>
<pre>CREATE OR REPLACE FUNCTION dept_salary (dnum NUMBER) RETURN NUMBER IS
   CURSOR emp_cursor IS
   select salary, commission_pct from employees where department_id = dnum;
   total_wages NUMBER(11, 2) := 0;
   counter NUMBER(10) := 1;
BEGIN
   FOR emp_record IN emp_cursor LOOP
       emp_record.commission_pct := NVL(emp_record.commission_pct, 0);
       total_wages := total_wages + emp_record.salary
                   + emp_record.commission_pct;
       DBMS_OUTPUT.PUT_LINE(&#39;Loop number = &#39; || counter ||
          &#39;; Wages = &#39;|| TO_CHAR(total_wages)); /* Debug line */
       counter := counter + 1; /* Increment debug counter */
   END LOOP;
   /* Debug line */
   DBMS_OUTPUT.PUT_LINE(&#39;Total wages = &#39; ||
   TO_CHAR(total_wages));
   RETURN total_wages;
END;
</pre>
<p>Assume the user executes the following statements in <code>ttIsql</code>:</p>
<pre>Command&gt; SET SERVEROUTPUT ON
Command&gt; VARIABLE salary NUMBER;
Command&gt; EXECUTE :salary := dept_salary(20); 
</pre>
<p>The user would then see output such as the following:</p>
<pre>Loop number = 1; Wages = 13000
Loop number = 2; Wages = 19000
Total wages = 19000 

PL/SQL procedure successfully executed.
</pre></div>
<!-- class="refsect1" -->
<a id="CIHIDIFA"></a><a id="TTPLP71199"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Da<a id="sthref207"></a>ta structures</h2>
<p>The <code>DBMS_OUTPUT</code> package declares two table types for use with the <a href="#i1000253">GET_LINES procedure</a>.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>The <code>PLS_INTEGER</code> and <code>BINARY_INTEGER</code> data types are identical. This document uses <code>BINARY_INTEGER</code> to indicate data types in reference information (such as for table types, record types, subprogram parameters, or subprogram return values), but may use either in discussion and examples.</p>
</li>
<li>
<p>The <code>INTEGER</code> and <code>NUMBER(38)</code> data types are also identical. This document uses <code>INTEGER</code> throughout.</p>
</li>
</ul>
</div>
<p class="titleinrefsubsect"><a id="CIHDBEBC"></a>Table types</p>
<p><a href="#CIHJJJJF">CHARARR table type</a></p>
<p><a href="#CIHCIDHG">DBMSOUTPUT_LINESARRAY table type</a></p>
<a id="CIHJJJJF"></a><a id="TTPLP71200"></a>
<hr/>
<h3 class="refsect2"><a id="sthref208"></a>CHARARR table type</h3>
<p>This package type is to be used with the <a href="#i1000253">GET_LINES procedure</a> to obtain text submitted through the <a href="#BABGHBIA">PUT procedure</a> and <a href="#i1000105">PUT_LINE procedure</a>.</p>
<p class="titleinrefsubsect"><a id="sthref209"></a>Syntax</p>
<pre>TYPE CHARARR IS TABLE OF VARCHAR2(32767) INDEX BY BINARY_INTEGER;
</pre>
<a id="CIHCIDHG"></a><a id="TTPLP71201"></a>
<hr/>
<h3 class="refsect2"><a id="sthref210"></a>DBMSOUTPUT_LINESARRAY table type</h3>
<p>This package type is to be used with the <a href="#i1000253">GET_LINES procedure</a> to obtain text submitted through the <a href="#BABGHBIA">PUT procedure</a> and <a href="#i1000105">PUT_LINE procedure</a>.</p>
<p class="titleinrefsubsect"><a id="sthref211"></a>Syntax</p>
<pre>TYPE DBMSOUTPUT_LINESARRAY IS
     VARRAY(2147483647) OF VARCHAR2(32767);
</pre></div>
<!-- class="refsect1" -->
<a id="i999346"></a><a id="TTPLP71202"></a>
<hr/>
<div class="refsect1">
<h2 class="refsect1">Summary of DBMS_OUTPUT s<a id="sthref212"></a>ubprograms</h2>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71203"></a><a id="sthref213"></a><a id="sthref214"></a>Table 4-2 DBMS_OUTPUT package subprograms</p>
<table class="cellalignment1016" title="DBMS_OUTPUT package subprograms" summary="This table lists the DBMS_OUTPUT subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t5">Subprogram</th>
<th class="cellalignment1017" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t5" headers="r1c1-t5">
<p><a href="#i999434">DISABLE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r2c1-t5 r1c2-t5">
<p>Disables message output.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t5" headers="r1c1-t5">
<p><a href="#i999293">ENABLE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r3c1-t5 r1c2-t5">
<p>Enables message output.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t5" headers="r1c1-t5">
<p><a href="#BABGBACJ">GET_LINE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r4c1-t5 r1c2-t5">
<p>Retrieves one line from buffer.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t5" headers="r1c1-t5">
<p><a href="#i1000253">GET_LINES procedure</a></p>
</td>
<td class="cellalignment1018" headers="r5c1-t5 r1c2-t5">
<p>Retrieves an array of lines from buffer.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r6c1-t5" headers="r1c1-t5">
<p><a href="#i1000062">NEW_LINE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r6c1-t5 r1c2-t5">
<p>Terminates a line created with <code>PUT</code>.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r7c1-t5" headers="r1c1-t5">
<p><a href="#BABGHBIA">PUT procedure</a></p>
</td>
<td class="cellalignment1018" headers="r7c1-t5 r1c2-t5">
<p>Places a line in the buffer.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r8c1-t5" headers="r1c1-t5">
<p><a href="#i1000105">PUT_LINE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r8c1-t5 r1c2-t5">
<p>Places partial line in buffer.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<a id="i999434"></a><a id="TTPLP71204"></a>
<hr/>
<h3 class="refsect2"><a id="sthref215"></a>DISABLE procedure</h3>
<p>This procedure disables calls to <code>PUT</code>, <code>PUT_LINE</code>, <code>NEW_LINE</code>, <code>GET_LINE</code>, and <code>GET_LINES</code>, and purges the buffer of any remaining information.</p>
<p>As with the <a href="#i999293">ENABLE procedure</a>, you do not need to call this procedure if you are using the <code>SET SERVEROUTPUT ON</code> setting from <code>ttIsql</code>.</p>
<p class="titleinrefsubsect"><a id="sthref216"></a>Syntax</p>
<pre>DBMS_OUTPUT.DISABLE;
</pre>
<a id="i999293"></a><a id="TTPLP71205"></a>
<hr/>
<h3 class="refsect2"><a id="sthref217"></a>ENABLE procedure</h3>
<p>This procedure enables calls to <code>PUT</code>, <code>PUT_LINE</code>, <code>NEW_LINE</code>, <code>GET_LINE</code>, and <code>GET_LINES</code>. Calls to these procedures are ignored if the <code>DBMS_OUTPUT</code> package is not activated.</p>
<p class="titleinrefsubsect"><a id="sthref218"></a>Syntax</p>
<pre>DBMS_OUTPUT.ENABLE (
   <span class="italic">buffer_size</span> IN INTEGER DEFAULT 20000);
</pre>
<p class="titleinrefsubsect"><a id="sthref219"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71206"></a><a id="sthref220"></a><a id="sthref221"></a>Table 4-3 ENABLE procedure parameters</p>
<table class="cellalignment1016" title="ENABLE procedure parameters " summary="This table describes Parameters used by the DBMS_OUTPUT.ENABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t6">Parameter</th>
<th class="cellalignment1017" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t6" headers="r1c1-t6">
<p><code><span class="codeinlineitalic">buffer_size</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t6 r1c2-t6">
<p>Upper limit, in bytes, for the amount of buffered information</p>
<p>Setting <code><span class="codeinlineitalic">buffer_size</span></code> to <code>NULL</code> specifies that there should be no limit.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref222"></a>Usage notes</p>
<ul>
<li>
<p>It is not necessary to call this procedure when you use <code>SET SERVEROUTPUT ON</code> from <code>ttIsql</code>. It is called automatically (with <code>NULL</code> value for <code><span class="codeinlineitalic">buffer_size</span></code> in the current release).</p>
</li>
<li>
<p>If there are multiple calls to <code>ENABLE</code>, then <code><span class="codeinlineitalic">buffer_size</span></code> is the last of the values specified. The maximum size is 1,000,000 and the minimum is 2000 when the user specifies <code><span class="codeinlineitalic">buffer_size</span></code> (<code>NOT</code> <code>NULL</code>).</p>
</li>
<li>
<p><code>NULL</code> is expected to be the usual choice. The default is 20000 for backward compatibility with earlier database versions that did not support unlimited buffering.</p>
</li>
</ul>
<a id="BABGBACJ"></a><a id="TTPLP71207"></a>
<hr/>
<h3 class="refsect2"><a id="sthref223"></a>GET_LINE procedure</h3>
<p>This procedure retrieves a single line of buffered information.</p>
<p class="titleinrefsubsect"><a id="sthref224"></a>Syntax</p>
<pre>DBMS_OUTPUT.GET_LINE (
   <span class="italic">line</span>    OUT VARCHAR2,
   <span class="italic">status</span>  OUT INTEGER);
</pre>
<p class="titleinrefsubsect"><a id="sthref225"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71208"></a><a id="sthref226"></a><a id="sthref227"></a>Table 4-4 GET_LINE procedure parameters</p>
<table class="cellalignment1016" title="GET_LINE procedure parameters " summary="This table describes Parameters used by the DBMS_OUTPUT.GET_LINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t7">Parameter</th>
<th class="cellalignment1017" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t7" headers="r1c1-t7">
<p><code><span class="codeinlineitalic">line</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t7 r1c2-t7">
<p>A single line of buffered information, excluding a final newline character</p>
<p>You should declare this parameter as <code>VARCHAR2(32767)</code> to avoid the risk of &#34;<code>ORA-06502: PL/SQL: numeric or value error: character string buffer too small</code>&#34;.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t7" headers="r1c1-t7">
<p><code><span class="codeinlineitalic">status</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t7 r1c2-t7">
<p>Call status</p>
<p>If the call completes successfully, then the status returns as 0. If there are no more lines in the buffer, then the status is 1.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref228"></a>Usage notes</p>
<ul>
<li>
<p>You can choose to retrieve from the buffer a single line or an array of lines. Call <code>GET_LINE</code> to retrieve a single line of buffered information. To reduce the number of calls to the server, call <code>GET_LINES</code> to retrieve an array of lines from the buffer.</p>
</li>
<li>
<p>You can choose to automatically display this information if you are using <code>ttIsql</code> by using the special <code>SET</code> <code>SERVEROUTPUT</code> <code>ON</code> command.</p>
</li>
<li>
<p>After calling <code>GET_LINE</code> or <code>GET_LINES</code>, any lines not retrieved before the next call to <code>PUT</code>, <code>PUT_LINE</code>, or <code>NEW_LINE</code> are discarded to avoid confusing them with the next message.</p>
</li>
</ul>
<a id="i1000253"></a><a id="TTPLP71209"></a>
<hr/>
<h3 class="refsect2"><a id="sthref229"></a>GET_LINES procedure</h3>
<p>This procedure retrieves an array of lines from the buffer.</p>
<p class="titleinrefsubsect"><a id="sthref230"></a>Syntax</p>
<pre>DBMS_OUTPUT.GET_LINES (
   <span class="italic">lines</span>       OUT     DBMS_OUTPUT.CHARARR,
   <span class="italic">numlines</span>    IN OUT  INTEGER);

DBMS_OUTPUT.GET_LINES (
   <span class="italic">lines</span>       OUT     DBMS_OUTPUT.DBMSOUTPUT_LINESARRAY,
   <span class="italic">numlines</span>    IN OUT INTEGER);
</pre>
<p class="titleinrefsubsect"><a id="sthref231"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71210"></a><a id="sthref232"></a><a id="sthref233"></a>Table 4-5 GET_LINES procedure parameters</p>
<table class="cellalignment1016" title="GET_LINES procedure parameters " summary="This table describes Parameters used by the DBMS_OUTPUT.GET_LINES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t8">Parameter</th>
<th class="cellalignment1017" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t8" headers="r1c1-t8">
<p><code><span class="codeinlineitalic">lines</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t8 r1c2-t8">
<p>Array of lines of buffered information</p>
<p>The maximum length of each line in the array is 32767 bytes. It is recommended that you use the varray overload version in a 3GL host program to execute the procedure from a PL/SQL anonymous block.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t8" headers="r1c1-t8">
<p><code><span class="codeinlineitalic">numlines</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t8 r1c2-t8">
<p>Number of lines you want to retrieve from the buffer</p>
<p>After retrieving the specified number of lines, the procedure returns the number of lines actually retrieved. If this number is less than the number of lines requested, then there are no more lines in the buffer.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref234"></a>Usage notes</p>
<ul>
<li>
<p>You can choose to retrieve from the buffer a single line or an array of lines. Call <code>GET_LINE</code> to retrieve a single line of buffered information. To reduce the number of trips to the server, call <code>GET_LINES</code> to retrieve an array of lines from the buffer.</p>
</li>
<li>
<p>You can choose to automatically display this information if you are using <code>ttIsql</code> by using the special <code>SET</code> <code>SERVEROUTPUT</code> <code>ON</code> command.</p>
</li>
<li>
<p>After <code>GET_LINE</code> or <code>GET_LINES</code> is called, any lines not retrieved before the next call to <code>PUT</code>, <code>PUT_LINE</code>, or <code>NEW_LINE</code> are discarded to avoid confusing them with the next message.</p>
</li>
</ul>
<a id="i1000062"></a><a id="TTPLP71211"></a>
<hr/>
<h3 class="refsect2"><a id="sthref235"></a>NEW_LINE procedure</h3>
<p>This procedure puts an end-of-line marker. The <a href="#BABGBACJ">GET_LINE procedure</a> and the <a href="#i1000253">GET_LINES procedure</a> return &#34;lines&#34; as delimited by &#34;newlines&#34;. Every call to the <a href="#i1000105">PUT_LINE procedure</a> or to <code>NEW_LINE</code> generates a line that is returned by <code>GET_LINE</code> or <code>GET_LINES</code>.</p>
<p class="titleinrefsubsect"><a id="sthref236"></a>Syntax</p>
<pre>DBMS_OUTPUT.NEW_LINE;
</pre>
<a id="BABGHBIA"></a><a id="TTPLP71212"></a>
<hr/>
<h3 class="refsect2"><a id="sthref237"></a>PUT procedure</h3>
<p>This procedure places a partial line in the buffer.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>PUT</code> version that takes a <code>NUMBER</code> input is obsolete. It is supported for legacy reasons only.</div>
<p class="titleinrefsubsect"><a id="sthref238"></a>Syntax</p>
<pre>DBMS_OUTPUT.PUT (
    <span class="italic">a</span> IN VARCHAR2);
</pre>
<p class="titleinrefsubsect"><a id="sthref239"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71213"></a><a id="sthref240"></a><a id="sthref241"></a>Table 4-6 PUT procedure parameters</p>
<table class="cellalignment1016" title="PUT procedure parameters " summary="This table describes Parameters used by the DBMS_OUTPUT.PUT and PUT_LINE subprograms." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t10">Parameter</th>
<th class="cellalignment1017" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">a</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t10 r1c2-t10">
<p>Item to buffer</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref242"></a>Usage notes</p>
<ul>
<li>
<p>You can build a line of information piece by piece by making multiple calls to <code>PUT</code>, or place an entire line of information into the buffer by calling <code>PUT_LINE</code>.</p>
</li>
<li>
<p>When you call <code>PUT_LINE</code>, the item you specify is automatically followed by an end-of-line marker. If you make calls to <code>PUT</code> to build a line, you must add your own end-of-line marker by calling <code>NEW_LINE</code>. <code>GET_LINE</code> and <code>GET_LINES</code> do not return lines that have not been terminated with a newline character.</p>
</li>
<li>
<p>If your lines exceed the line limit, you receive an error message.</p>
</li>
<li>
<p>Output that you create using <code>PUT</code> or <code>PUT_LINE</code> is buffered. The output cannot be retrieved until the PL/SQL program unit from which it was buffered returns to its caller.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref243"></a>Exceptions</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71214"></a><a id="sthref244"></a><a id="sthref245"></a>Table 4-7 PUT procedure exceptions</p>
<table class="cellalignment1016" title="PUT procedure exceptions " summary="This table describes the Exceptions raised by the PUT and PUT_LINE subprograms." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t11">Exception</th>
<th class="cellalignment1017" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t11" headers="r1c1-t11">
<p><code>ORA-20000</code>, <code>ORU-10027</code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t11 r1c2-t11">
<p>Buffer overflow, according to the <code><span class="codeinlineitalic">buffer_size</span></code> limit specified in the <a href="#i999293">ENABLE procedure</a> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t11" headers="r1c1-t11">
<p><code>ORA-20000</code>, <code>ORU-10028</code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t11 r1c2-t11">
<p>Line length overflow, limit of 32767 bytes for each line</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<a id="i1000105"></a><a id="TTPLP71215"></a>
<hr/>
<h3 class="refsect2"><a id="sthref246"></a>PUT_LINE procedure</h3>
<p>This procedure places a line in the buffer.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>PUT_LINE</code> version that takes a <code>NUMBER</code> input is obsolete. It is supported for legacy reasons only.</div>
<p class="titleinrefsubsect"><a id="sthref247"></a>Syntax</p>
<pre>DBMS_OUTPUT.PUT_LINE (
   <span class="italic">a</span> IN VARCHAR2);
</pre>
<p class="titleinrefsubsect"><a id="sthref248"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71216"></a><a id="sthref249"></a><a id="sthref250"></a>Table 4-8 PUT_LINE procedure parameters</p>
<table class="cellalignment1016" title="PUT_LINE procedure parameters " summary="This table describes Parameters used by the DBMS_OUTPUT.PUT and PUT_LINE subprograms." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t13">Parameter</th>
<th class="cellalignment1017" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t13" headers="r1c1-t13">
<p><code><span class="codeinlineitalic">a</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t13 r1c2-t13">
<p>Item to buffer</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref251"></a>Usage notes</p>
<ul>
<li>
<p>You can build a line of information piece by piece by making multiple calls to <code>PUT</code>, or place an entire line of information into the buffer by calling <code>PUT_LINE</code>.</p>
</li>
<li>
<p>When you call <code>PUT_LINE</code>, the item you specify is automatically followed by an end-of-line marker. If you make calls to <code>PUT</code> to build a line, then you must add your own end-of-line marker by calling <code>NEW_LINE</code>. <code>GET_LINE</code> and <code>GET_LINES</code> do not return lines that have not been terminated with a newline character.</p>
</li>
<li>
<p>If your lines exceeds the line limit, you receive an error message.</p>
</li>
<li>
<p>Output that you create using <code>PUT</code> or <code>PUT_LINE</code> is buffered. The output cannot be retrieved until the PL/SQL program unit from which it was buffered returns to its caller.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref252"></a>Exceptions</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71217"></a><a id="sthref253"></a><a id="sthref254"></a>Table 4-9 PUT_LINE procedure exceptions</p>
<table class="cellalignment1016" title="PUT_LINE procedure exceptions " summary="This table describes the Exceptions raised by the PUT and PUT_LINE subprograms." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t14">Exception</th>
<th class="cellalignment1017" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t14" headers="r1c1-t14">
<p><code>ORA-20000</code>, <code>ORU-10027</code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t14 r1c2-t14">
<p>Buffer overflow, according to the <code><span class="codeinlineitalic">buffer_size</span></code> limit specified in the <a href="#i999293">ENABLE procedure</a> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t14" headers="r1c1-t14">
<p><code>ORA-20000</code>, <code>ORU-10028</code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t14 r1c2-t14">
<p>Line length overflow, limit of 32767 bytes for each line</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1009">
<tr>
<td class="cellalignment1018">
<table class="cellalignment1014">
<tr>
<td class="cellalignment1013"><a href="d_lock.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1013"><a href="d_preproc.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1020">
<table class="cellalignment1012">
<tr>
<td class="cellalignment1013"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1013"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1013"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1013"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1013"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1013"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>