<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-113961"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/UTL_FILE"></a><title>UTL_FILE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 704"/>
<meta name="dcterms.created" content="2014-10-02T17:47:28Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="TimesTen In-Memory Database PL/SQL Packages Reference"/>
<meta name="dcterms.identifier" content="E21645-06"/>
<meta name="dcterms.isVersionOf" content="TTPLP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="t_stats.htm" title="Previous" type="text/html"/>
<link rel="Next" href="u_ident.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E21645-06.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/19</span> <!-- End Header --><a id="BABGGEDF"></a><a id="TTPLP069"></a>
<h1 class="chapter"><span class="secnum">11</span> UTL_FILE</h1>
<p>With the <code>UTL_FILE</code> package, PL/SQL programs can read and write operating system text files. <code>UTL_FILE</code> provides a restricted version of operating system stream file I/O.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CIABFCFB">Using UTL_FILE</a></p>
<ul>
<li>
<p>Security model</p>
</li>
<li>
<p>Rules and limits</p>
</li>
<li>
<p>Exceptions</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#CIAHGFEF">Data structures</a></p>
</li>
<li>
<p><a href="#CIABAGIC">Summary of UTL_FILE subprograms</a></p>
</li>
</ul>
<a id="CIABFCFB"></a><a id="TTPLP71560"></a>
<hr/>
<div class="refsect1">
<h2 class="refsect1">Us<a id="sthref710"></a>ing UTL_FILE</h2>
<ul>
<li>
<p><a href="#CIADGDBB">Security model</a></p>
</li>
<li>
<p><a href="#CIAEGAGB">Operational notes</a></p>
</li>
<li>
<p><a href="#CIACICHH">Rules and limits</a></p>
</li>
<li>
<p><a href="#CIAEGEAD">Exceptions</a></p>
</li>
<li>
<p><a href="#CIABGFAC">Examples</a></p>
</li>
</ul>
<a id="CIADGDBB"></a><a id="TTPLP71561"></a>
<hr/>
<h3 class="refsect2">Security model</h3>
<p>In TimesTen 11.2.<span class="italic">x</span> releases, <code>UTL_FILE</code> is limited to the directory <code><span class="codeinlineitalic">install_dir</span></code><code>/plsql/utl_file_temp</code>. Access does not extend to subdirectories of this directory. In addition, access is subject to file system permission checking. The instance administrator can grant <code>UTL_FILE</code> access to specific users as desired. Users can reference this <code>UTL_FILE</code> directory by using the string &#39;UTL_FILE_TEMP&#39; for the location parameter in <code>UTL_FILE</code> subprograms. This predefined string is used in the same way as directory object names in Oracle Database.</p>
<p>You cannot use <code>UTL_FILE</code> with a link, which could be used to circumvent desired access limitations. Specifying a link as the file name causes <code>FOPEN</code> to fail with an error.</p>
<p>For TimesTen direct connections, the application owner is owner of the file. For client/server connections, the server owner is owner of the file.</p>
<p><code>UTL_FILE_DIR</code> access is not supported in TimesTen.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
<ul>
<li>
<p>Users do not have execute permission on <code>UTL_FILE</code> by default. To use <code>UTL_FILE</code> in TimesTen, an <code>ADMIN</code> user or instance administrator must explicitly <code>GRANT EXECUTE</code> permission on it, such as in the following example:</p>
<pre>GRANT EXECUTE ON SYS.UTL_FILE TO scott;
</pre></li>
<li>
<p>The privileges needed to access files are operating system specific. <code>UTL_FILE</code> privileges give you read and write access to all files within the <code>UTL_FILE</code> directory, but not in subdirectories.</p>
</li>
<li>
<p>Attempting to apply invalid <code>UTL_FILE</code> options results in unpredictable behavior.</p>
</li>
</ul>
</div>
<a id="CIAEGAGB"></a><a id="TTPLP71562"></a>
<hr/>
<h3 class="refsect2">Operational notes</h3>
<p>The file location and file name parameters are supplied to the <code>FOPEN</code> function as separate strings, so that the file location can be checked against the <code>utl_file_temp</code> directory. Together, the file location and name must represent a legal file name on the system, and the directory must be accessible. Any subdirectories of <code>utl_file_temp</code> are not accessible.</p>
<p><code>UTL_FILE</code> implicitly interprets line terminators on read requests, thereby affecting the number of bytes returned on a <code>GET_LINE</code> call. For example, the <code><span class="codeinlineitalic">len</span></code> parameter of <code>GET_LINE</code> specifies the requested number of bytes of character data. The number of bytes actually returned to the user is the least of the following:</p>
<ul>
<li>
<p><code>GET_LINE</code> <code><span class="codeinlineitalic">len</span></code> parameter value</p>
</li>
<li>
<p>Number of bytes until the next line terminator character</p>
</li>
<li>
<p>The <code><span class="codeinlineitalic">max_linesize</span></code> parameter value specified by <code>FOPEN</code></p>
</li>
</ul>
<p>The <code>FOPEN</code> <code><span class="codeinlineitalic">max_linesize</span></code> parameter must be a number in the range 1 and 32767. If unspecified, TimesTen supplies a default value of 1024. The <code>GET_LINE</code> <code><span class="codeinlineitalic">len</span></code> parameter must be a number in the range 1 and 32767. If unspecified, TimesTen supplies the default value of <code><span class="codeinlineitalic">max_linesize</span></code>. If <code><span class="codeinlineitalic">max_linesize</span></code> and <code><span class="codeinlineitalic">len</span></code> are defined to be different values, then the lesser value takes precedence.</p>
<p>When data encoded in one character set is read and Globalization Support is informed (such as through <code>NLS_LANG</code>) that it is encoded in another character set, the result is indeterminate. If <code>NLS_LANG</code> is set, it should be the same as the database character set.</p>
<a id="CIACICHH"></a><a id="TTPLP71563"></a>
<hr/>
<h3 class="refsect2">Rules and limits</h3>
<p>Operating system-specific parameters, such as C-shell environment variables under UNIX, cannot be used in the file location or file name parameters.</p>
<p><code>UTL_FILE</code> I/O capabilities are similar to standard operating system stream file I/O (<code>OPEN</code>, <code>GET</code>, <code>PUT</code>, <code>CLOSE</code>) capabilities, but with some limitations. For example, call the <code>FOPEN</code> function to return a file handle, which you use in subsequent calls to <code>GET_LINE</code> or <code>PUT</code> to perform stream I/O to a file. When file I/O is done, call <code>FCLOSE</code> to complete any output and free resources associated with the file.</p>
<a id="CIAEGEAD"></a><a id="TTPLP71564"></a>
<hr/>
<h3 class="refsect2">Exceptions</h3>
<p>This section describes exceptions that are thrown by <code>UTL_FILE</code> subprograms.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In addition to the exceptions listed here, procedures and functions in <code>UTL_FILE</code> can raise predefined PL/SQL exceptions such as <code>NO_DATA_FOUND</code> or <code>VALUE_ERROR</code>. Refer to <a class="olink LNPLS00703" href="../LNPLS/errors.htm#LNPLS00703">&#34;Predefined Exceptions&#34;</a> in <span class="italic">Oracle Database PL/SQL Language Reference</span> for information about those.</div>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71565"></a><a id="sthref711"></a><a id="sthref712"></a>Table 11-1 UTL_FILE package exceptions</p>
<table class="cellalignment1016" title="UTL_FILE package exceptions " summary="This table describes Exceptions raised by UTL_FILE subprograms." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t4">Exception Name</th>
<th class="cellalignment1017" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t4" headers="r1c1-t4">
<p><code>ACCESS_DENIED</code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t4 r1c2-t4">
<p>Permission to access to the file location is denied.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t4" headers="r1c1-t4">
<p><code>CHARSETMISMATCH</code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t4 r1c2-t4">
<p>A file is opened using <code>FOPEN_NCHAR</code>, but later I/O operations use non-<code>NCHAR</code> procedures such as <code>PUTF</code> or <code>GET_LINE</code>. Or a file is opened using <code>FOPEN</code>, but later I/O operations use <code>NCHAR</code> functions such as <code>PUTF_NCHAR</code> or <code>GET_LINE_NCHAR</code>.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t4" headers="r1c1-t4">
<p><code>DELETE_FAILED</code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t4 r1c2-t4">
<p>Requested file delete operation failed.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t4" headers="r1c1-t4">
<p><code>FILE_OPEN</code></p>
</td>
<td class="cellalignment1018" headers="r5c1-t4 r1c2-t4">
<p>Requested operation failed because the file is open.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r6c1-t4" headers="r1c1-t4">
<p><code>INTERNAL_ERROR</code></p>
</td>
<td class="cellalignment1018" headers="r6c1-t4 r1c2-t4">
<p>There was an unspecified PL/SQL error.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r7c1-t4" headers="r1c1-t4">
<p><code>INVALID_FILEHANDLE</code></p>
</td>
<td class="cellalignment1018" headers="r7c1-t4 r1c2-t4">
<p>File handle is invalid.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r8c1-t4" headers="r1c1-t4">
<p><code>INVALID_FILENAME</code></p>
</td>
<td class="cellalignment1018" headers="r8c1-t4 r1c2-t4">
<p>The <code><span class="codeinlineitalic">filename</span></code> parameter is invalid.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r9c1-t4" headers="r1c1-t4">
<p><code>INVALID_MAXLINESIZE</code></p>
</td>
<td class="cellalignment1018" headers="r9c1-t4 r1c2-t4">
<p>The <code><span class="codeinlineitalic">max_linesize</span></code> value for <code>FOPEN</code> is out of range. It should be within the range 1 to 32767.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r10c1-t4" headers="r1c1-t4">
<p><code>INVALID_MODE</code></p>
</td>
<td class="cellalignment1018" headers="r10c1-t4 r1c2-t4">
<p>The <code><span class="codeinlineitalic">open_mode</span></code> parameter in <code>FOPEN</code> is invalid.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r11c1-t4" headers="r1c1-t4">
<p><code>INVALID_OFFSET</code></p>
</td>
<td class="cellalignment1018" headers="r11c1-t4 r1c2-t4">
<p>Caused by one of the following:</p>
<ul>
<li>
<p><code>ABSOLUTE_OFFSET</code> is <code>NULL</code> and <code>RELATIVE_OFFSET</code> is <code>NULL</code>.</p>
</li>
<li>
<p><code>ABSOLUTE_OFFSET</code> is less than 0.</p>
</li>
<li>
<p>Either offset caused a seek past the end of the file.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r12c1-t4" headers="r1c1-t4">
<p><code>INVALID_OPERATION</code></p>
</td>
<td class="cellalignment1018" headers="r12c1-t4 r1c2-t4">
<p>File could not be opened or operated on as requested.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r13c1-t4" headers="r1c1-t4">
<p><code>INVALID_PATH</code></p>
</td>
<td class="cellalignment1018" headers="r13c1-t4 r1c2-t4">
<p>File location or name is invalid.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r14c1-t4" headers="r1c1-t4">
<p><code>LENGTH_MISMATCH</code></p>
</td>
<td class="cellalignment1018" headers="r14c1-t4 r1c2-t4">
<p>Length mismatch for <code>CHAR</code> or <code>RAW</code> data.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r15c1-t4" headers="r1c1-t4">
<p><code>READ_ERROR</code></p>
</td>
<td class="cellalignment1018" headers="r15c1-t4 r1c2-t4">
<p>Operating system error occurred during the read operation.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r16c1-t4" headers="r1c1-t4">
<p><code>RENAME_FAILED</code></p>
</td>
<td class="cellalignment1018" headers="r16c1-t4 r1c2-t4">
<p>Requested file rename operation failed.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r17c1-t4" headers="r1c1-t4">
<p><code>WRITE_ERROR</code></p>
</td>
<td class="cellalignment1018" headers="r17c1-t4 r1c2-t4">
<p>Operating system error occurred during the write operation.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<a id="CIABGFAC"></a><a id="TTPLP71566"></a>
<hr/>
<h3 class="refsect2">Ex<a id="sthref713"></a><a id="sthref714"></a>amples</h3>
<p><span class="bold">Example 1</span></p>
<p>This example reads from a file using the <code>GET_LINE</code> procedure.</p>
<pre>DECLARE 
  V1 VARCHAR2(32767); 
  F1 UTL_FILE.FILE_TYPE; 
BEGIN 
  -- In this example MAX_LINESIZE is less than GET_LINE&#39;s length request 
  -- so number of bytes returned is 256 or less if a line terminator is seen.
  F1 := UTL_FILE.FOPEN(&#39;UTL_FILE_TEMP&#39;,&#39;u12345.tmp&#39;,&#39;R&#39;,256); 
  UTL_FILE.GET_LINE(F1,V1,32767); 
  DBMS_OUTPUT.PUT_LINE(&#39;Get line: &#39; || V1);
  UTL_FILE.FCLOSE(F1); 
 
  -- In this example, FOPEN&#39;s MAX_LINESIZE is NULL and defaults to 1024, 
  -- so number of bytes returned is 1024 or less if line terminator is seen. 
  F1 := UTL_FILE.FOPEN(&#39;UTL_FILE_TEMP&#39;,&#39;u12345.tmp&#39;,&#39;R&#39;); 
  UTL_FILE.GET_LINE(F1,V1,32767); 
  DBMS_OUTPUT.PUT_LINE(&#39;Get line: &#39; || V1);
  UTL_FILE.FCLOSE(F1); 
 
  -- GET_LINE doesn&#39;t specify a number of bytes, so it defaults to 
  -- same value as FOPEN&#39;s MAX_LINESIZE which is NULL and defaults to 1024. 
  -- So number of bytes returned is 1024 or less if line terminator is seen. 
  F1 := UTL_FILE.FOPEN(&#39;UTL_FILE_TEMP&#39;,&#39;u12345.tmp&#39;,&#39;R&#39;); 
  UTL_FILE.GET_LINE(F1,V1); 
  DBMS_OUTPUT.PUT_LINE(&#39;Get line: &#39; || V1);
  UTL_FILE.FCLOSE(F1); 
END; 
</pre>
<p>Consider the following test file, <code>u12345.tmp</code>, in the <code>utl_file_temp</code> directory:</p>
<pre>This is line 1.
This is line 2.
This is line 3.
This is line 4.
This is line 5.
</pre>
<p>The example results in the following output, repeatedly getting the first line only:</p>
<pre>Get line: This is line 1.
Get line: This is line 1.
Get line: This is line 1.
 
PL/SQL procedure successfully completed.
</pre>
<p><span class="bold">Example 2</span></p>
<p>This appends content to the end of a file using the <code>PUTF</code> procedure.</p>
<pre>declare
   handle utl_file.file_type;
   my_world  varchar2(4) := &#39;Zork&#39;;
begin
   handle := utl_file.fopen(&#39;UTL_FILE_TEMP&#39;,&#39;u12345.tmp&#39;,&#39;a&#39;);
   utl_file.putf(handle, &#39;\nHello, world!\nI come from %s with %s.\n&#39;, my_world, 
                         &#39;greetings for all earthlings&#39;);
   utl_file.fflush(handle);
   utl_file.fclose(handle);
end;
</pre>
<p>This appends the following to file <code>u12345.tmp</code> in the <code>utl_file_temp</code> directory.</p>
<pre>Hello, world!
I come from Zork with greetings for all earthlings.
</pre>
<p><span class="bold">Example 3</span></p>
<p>This procedure gets raw data from a specified file using the <code>GET_RAW</code> procedure. It exits when it reaches the end of the data, through its handling of <code>NO_DATA_FOUND</code> in the <code>EXCEPTION</code> processing.</p>
<pre>CREATE OR REPLACE PROCEDURE getraw(n IN VARCHAR2) IS
  h     UTL_FILE.FILE_TYPE;
  Buf   RAW(32767);
  Amnt  CONSTANT BINARY_INTEGER := 32767;
BEGIN
  h := UTL_FILE.FOPEN(&#39;UTL_FILE_TEMP&#39;, n, &#39;r&#39;, 32767);
  LOOP
    BEGIN
      UTL_FILE.GET_RAW(h, Buf, Amnt);
 
      -- Do something with this chunk
      DBMS_OUTPUT.PUT_LINE(&#39;This is the raw data:&#39;);
      DBMS_OUTPUT.PUT_LINE(Buf);
    EXCEPTION WHEN No_Data_Found THEN
      EXIT;
    END;
  END LOOP;
  UTL_FILE.FCLOSE (h);
END;
</pre>
<p>Consider the following content in file <code>u12345.tmp</code> in the <code>utl_file_temp</code> directory:</p>
<pre>hello world!
</pre>
<p>The example produces output as follows:</p>
<pre>Command&gt; begin
       &gt; getraw(&#39;u12345.tmp&#39;);
       &gt; end;
       &gt; /
This is the raw data:
68656C6C6F20776F726C64210A
 
PL/SQL procedure successfully completed.
</pre></div>
<!-- class="refsect1" -->
<a id="CIAHGFEF"></a><a id="TTPLP71570"></a>
<hr/>
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Data s<a id="sthref715"></a>tructures</h2>
<p>The <code>UTL_FILE</code> package defines a record type.</p>
<p class="titleinrefsubsect"><a id="sthref716"></a>Record types</p>
<ul>
<li>
<p><a href="#CIACEIDC">FILE_TYPE record type</a></p>
</li>
</ul>
<a id="CIACEIDC"></a><a id="TTPLP71571"></a>
<hr/>
<h3 class="refsect2"><a id="sthref717"></a>FILE_TYPE record type</h3>
<p>The contents of <code>FILE_TYPE</code> are private to the <code>UTL_FILE</code> package. You should not reference or change components of this record.</p>
<pre>TYPE file_type IS RECORD (
   <span class="italic">id</span>          BINARY_INTEGER, 
   <span class="italic">datatype</span>    BINARY_INTEGER,
   <span class="italic">byte_mode</span>   BOOLEAN);
</pre>
<p class="titleinrefsubsect"><a id="sthref718"></a>Fields</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71572"></a><a id="sthref719"></a><a id="sthref720"></a>Table 11-2 FILE_TYPE fields</p>
<table class="cellalignment1016" title="FILE_TYPE fields" summary="This table describes the parameters of the DBMS_DEBUG.BREAKPOINT_INFO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t5">Field</th>
<th class="cellalignment1017" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t5" headers="r1c1-t5">
<p><code><span class="codeinlineitalic">id</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t5 r1c2-t5">
<p>Indicates the internal file handle number (numeric value).</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t5" headers="r1c1-t5">
<p><code><span class="codeinlineitalic">datatype</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t5 r1c2-t5">
<p>Indicates whether the file is a <code>CHAR</code> file, <code>NCHAR</code> file, or other (binary).</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t5" headers="r1c1-t5">
<p><code><span class="codeinlineitalic">byte_mode</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t5 r1c2-t5">
<p>Indicates whether the file was open as a binary file or as a text file.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<div class="infobox-note">
<p class="notep1">Important:</p>
Oracle Database does not guarantee the persistence of <code>FILE_TYPE</code> values between database sessions or within a single session. Attempts to clone file handles or use dummy file handles may have indeterminate outcomes.</div>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>The <code>PLS_INTEGER</code> and <code>BINARY_INTEGER</code> data types are identical. This document uses <code>BINARY_INTEGER</code> to indicate data types in reference information (such as for table types, record types, subprogram parameters, or subprogram return values), but may use either in discussion and examples.</p>
</li>
<li>
<p>The <code>INTEGER</code> and <code>NUMBER(38)</code> data types are also identical. This document uses <code>INTEGER</code> throughout.</p>
</li>
</ul>
</div>
</div>
<!-- class="refsect1" -->
<a id="CIABAGIC"></a><a id="TTPLP71573"></a>
<hr/>
<div class="refsect1">
<h2 class="refsect1">Sum<a id="sthref721"></a>mary of UTL_FILE subprograms</h2>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71574"></a><a id="sthref722"></a><a id="sthref723"></a>Table 11-3 UTL_FILE Subprograms</p>
<table class="cellalignment1016" title="UTL_FILE Subprograms" summary="This table lists the UTL_FILE subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t8">Subprogram</th>
<th class="cellalignment1017" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t8" headers="r1c1-t8">
<p><a href="#CIAEDGFA">FCLOSE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r2c1-t8 r1c2-t8">
<p>Closes a file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t8" headers="r1c1-t8">
<p><a href="#CIAJEJFI">FCLOSE_ALL procedure</a></p>
</td>
<td class="cellalignment1018" headers="r3c1-t8 r1c2-t8">
<p>Closes all open file handles.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t8" headers="r1c1-t8">
<p><a href="#CIAGFJIE">FCOPY procedure</a></p>
</td>
<td class="cellalignment1018" headers="r4c1-t8 r1c2-t8">
<p>Copies a contiguous portion of a file to a newly created file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t8" headers="r1c1-t8">
<p><a href="#CIAJFBEJ">FFLUSH procedure</a></p>
</td>
<td class="cellalignment1018" headers="r5c1-t8 r1c2-t8">
<p>Physically writes all pending output to a file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r6c1-t8" headers="r1c1-t8">
<p><a href="#CIACBBEB">FGETATTR procedure</a></p>
</td>
<td class="cellalignment1018" headers="r6c1-t8 r1c2-t8">
<p>Reads and returns the attributes of a disk file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r7c1-t8" headers="r1c1-t8">
<p><a href="#CIAIFHGG">FGETPOS function</a></p>
</td>
<td class="cellalignment1018" headers="r7c1-t8 r1c2-t8">
<p>Returns the current relative offset position (in bytes) within a file, in bytes.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r8c1-t8" headers="r1c1-t8">
<p><a href="#CIADHJGC">FOPEN function</a></p>
</td>
<td class="cellalignment1018" headers="r8c1-t8 r1c2-t8">
<p>Opens a file for input or output.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r9c1-t8" headers="r1c1-t8">
<p><a href="#CIAJIFAE">FOPEN_NCHAR function</a></p>
</td>
<td class="cellalignment1018" headers="r9c1-t8 r1c2-t8">
<p>Opens a file in Unicode for input or output.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r10c1-t8" headers="r1c1-t8">
<p><a href="#CIABEHDI">FREMOVE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r10c1-t8 r1c2-t8">
<p>Deletes a disk file if you have sufficient privileges.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r11c1-t8" headers="r1c1-t8">
<p><a href="#CIAGAGHF">FRENAME procedure</a></p>
</td>
<td class="cellalignment1018" headers="r11c1-t8 r1c2-t8">
<p>Renames an existing file to a new name, similar to the UNIX <code>mv</code> function.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r12c1-t8" headers="r1c1-t8">
<p><a href="#CIAIAJBF">FSEEK procedure</a></p>
</td>
<td class="cellalignment1018" headers="r12c1-t8 r1c2-t8">
<p>Adjusts the file pointer forward or backward within the file by the number of bytes specified.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r13c1-t8" headers="r1c1-t8">
<p><a href="#CIADCGDC">GET_LINE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r13c1-t8 r1c2-t8">
<p>Reads text from an open file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r14c1-t8" headers="r1c1-t8">
<p><a href="#CIAGEBBE">GET_LINE_NCHAR procedure</a></p>
</td>
<td class="cellalignment1018" headers="r14c1-t8 r1c2-t8">
<p>Reads text in Unicode from an open file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r15c1-t8" headers="r1c1-t8">
<p><a href="#CIADGJIJ">GET_RAW procedure</a></p>
</td>
<td class="cellalignment1018" headers="r15c1-t8 r1c2-t8">
<p>Reads a <code>RAW</code> string value from a file and adjusts the file pointer ahead by the number of bytes read.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r16c1-t8" headers="r1c1-t8">
<p><a href="#CIAGHFCH">IS_OPEN function</a></p>
</td>
<td class="cellalignment1018" headers="r16c1-t8 r1c2-t8">
<p>Determines if a file handle refers to an open file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r17c1-t8" headers="r1c1-t8">
<p><a href="#CIABHDEE">NEW_LINE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r17c1-t8 r1c2-t8">
<p>Writes one or more operating system-specific line terminators to a file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r18c1-t8" headers="r1c1-t8">
<p><a href="#CIAIAFFA">PUT procedure</a></p>
</td>
<td class="cellalignment1018" headers="r18c1-t8 r1c2-t8">
<p>Writes a string to a file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r19c1-t8" headers="r1c1-t8">
<p><a href="#CIADBDFI">PUT_LINE procedure</a></p>
</td>
<td class="cellalignment1018" headers="r19c1-t8 r1c2-t8">
<p>Writes a line to a file, and so appends an operating system-specific line terminator.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r20c1-t8" headers="r1c1-t8">
<p><a href="#CIADECHC">PUT_LINE_NCHAR procedure</a></p>
</td>
<td class="cellalignment1018" headers="r20c1-t8 r1c2-t8">
<p>Writes a Unicode line to a file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r21c1-t8" headers="r1c1-t8">
<p><a href="#CIAEFEBI">PUT_NCHAR procedure</a></p>
</td>
<td class="cellalignment1018" headers="r21c1-t8 r1c2-t8">
<p>Writes a Unicode string to a file.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r22c1-t8" headers="r1c1-t8">
<p><a href="#CIACGGAD">PUT_RAW procedure</a></p>
</td>
<td class="cellalignment1018" headers="r22c1-t8 r1c2-t8">
<p>Accepts as input a <code>RAW</code> data value and writes the value to the output buffer.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r23c1-t8" headers="r1c1-t8">
<p><a href="#CIAHCFIH">PUTF procedure</a></p>
</td>
<td class="cellalignment1018" headers="r23c1-t8 r1c2-t8">
<p>This is equivalent to <code>PUT</code> but with formatting.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r24c1-t8" headers="r1c1-t8">
<p><a href="#CIAGEJED">PUTF_NCHAR procedure</a></p>
</td>
<td class="cellalignment1018" headers="r24c1-t8 r1c2-t8">
<p>This is equivalent to <code>PUT_NCHAR</code> but with formatting.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<a id="CIAEDGFA"></a><a id="TTPLP71575"></a>
<hr/>
<h3 class="refsect2"><a id="sthref724"></a>FCLOSE procedure</h3>
<p>This procedure closes an open file identified by a file handle.</p>
<p class="titleinrefsubsect"><a id="sthref725"></a>Syntax</p>
<pre>UTL_FILE.FCLOSE (
   <span class="italic">file</span> IN OUT UTL_FILE.FILE_TYPE);
</pre>
<p class="titleinrefsubsect"><a id="sthref726"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71576"></a><a id="sthref727"></a><a id="sthref728"></a>Table 11-4 FCLOSE procedure parameters</p>
<table class="cellalignment1016" title="FCLOSE procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FCLOSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t9">Parameter</th>
<th class="cellalignment1017" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t9" headers="r1c1-t9">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t9 r1c2-t9">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref729"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
WRITE_ERROR
</pre>
<p>If there is buffered data yet to be written when <code>FCLOSE</code> runs, you may receive <code>WRITE_ERROR</code> when closing a file.</p>
<p class="titleinrefsubsect"><a id="sthref730"></a>Examples</p>
<p>See <a href="#CIABGFAC">&#34;Examples&#34;</a>.</p>
<a id="CIAJEJFI"></a><a id="TTPLP71577"></a>
<hr/>
<h3 class="refsect2"><a id="sthref731"></a>FCLOSE_ALL procedure</h3>
<p>This procedure closes all open file handles for the session. This is useful as an emergency cleanup procedure, such as after a PL/SQL program exits on an exception.</p>
<p class="titleinrefsubsect"><a id="sthref732"></a>Syntax</p>
<pre>UTL_FILE.FCLOSE_ALL;
</pre>
<p class="titleinrefsubsect"><a id="sthref733"></a>Usage notes</p>
<p><code>FCLOSE_ALL</code> does not alter the state of the open file handles held by the user. Therefore, an <code>IS_OPEN</code> test on a file handle after an <code>FCLOSE_ALL</code> call still returns <code>TRUE</code>, even though the file has been closed. No further read or write operations can be performed on a file that was open before an <code>FCLOSE_ALL</code>.</p>
<p class="titleinrefsubsect"><a id="sthref734"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>WRITE_ERROR
</pre>
<a id="CIAGFJIE"></a><a id="TTPLP71578"></a>
<hr/>
<h3 class="refsect2"><a id="sthref735"></a>FCOPY procedure</h3>
<p>This procedure copies a contiguous portion of a file to a newly created file. By default, the whole file is copied if the <code><span class="codeinlineitalic">start_line</span></code> and <code><span class="codeinlineitalic">end_line</span></code> parameters are omitted. The source file is opened in read mode. The destination file is opened in write mode. A starting and ending line number can optionally be specified to select a portion from the center of the source file for copying.</p>
<p class="titleinrefsubsect"><a id="sthref736"></a>Syntax</p>
<pre>UTL_FILE.FCOPY (
   <span class="italic">src_location</span>    IN VARCHAR2,
   <span class="italic">src_filename</span>    IN VARCHAR2,
   <span class="italic">dest_location</span>   IN VARCHAR2,
   <span class="italic">dest_filename</span>   IN VARCHAR2,
  [<span class="italic">start_line</span>      IN BINARY_INTEGER DEFAULT 1,
   <span class="italic">end_line</span>        IN BINARY_INTEGER DEFAULT NULL]);
</pre>
<p class="titleinrefsubsect"><a id="sthref737"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71579"></a><a id="sthref738"></a><a id="sthref739"></a>Table 11-5 FCOPY procedure parameters</p>
<table class="cellalignment1016" title="FCOPY procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FCOPY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t10">Parameters</th>
<th class="cellalignment1017" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">src_location</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t10 r1c2-t10">
<p>Directory location of the source file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">src_filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t10 r1c2-t10">
<p>Source file to be copied</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">dest_location</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t10 r1c2-t10">
<p>Destination directory where the destination file is created</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">dest_filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r5c1-t10 r1c2-t10">
<p>Destination file created from the source file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r6c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">start_line</span></code></p>
</td>
<td class="cellalignment1018" headers="r6c1-t10 r1c2-t10">
<p>Line number at which to begin copying</p>
<p>The default is <code>1</code> for the first line.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r7c1-t10" headers="r1c1-t10">
<p><code><span class="codeinlineitalic">end_line</span></code></p>
</td>
<td class="cellalignment1018" headers="r7c1-t10 r1c2-t10">
<p>Line number at which to stop copying</p>
<p>The default is <code>NULL</code>, signifying end of file.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref740"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILENAME
INVALID_PATH
INVALID_OPERATION
INVALID_OFFSET
READ_ERROR
WRITE_ERROR
</pre>
<a id="CIAJFBEJ"></a><a id="TTPLP71580"></a>
<hr/>
<h3 class="refsect2"><a id="sthref741"></a>FFLUSH procedure</h3>
<p><code>FFLUSH</code> physically writes pending data to the file identified by the file handle. Normally, data being written to a file is buffered. The <code>FFLUSH</code> procedure forces the buffered data to be written to the file. The data must be terminated with a newline character.</p>
<p>Flushing is useful when the file must be read while still open. For example, debugging messages can be flushed to the file so that they can be read immediately.</p>
<p class="titleinrefsubsect"><a id="sthref742"></a>Syntax</p>
<pre>UTL_FILE.FFLUSH (
   <span class="italic">file</span>  IN UTL_FILE.FILE_TYPE);
</pre>
<p class="titleinrefsubsect"><a id="sthref743"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71581"></a><a id="sthref744"></a><a id="sthref745"></a>Table 11-6 FFLUSH procedure parameters</p>
<table class="cellalignment1016" title="FFLUSH procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FFLUSH subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t11">Parameters</th>
<th class="cellalignment1017" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t11" headers="r1c1-t11">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t11 r1c2-t11">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref746"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
</pre>
<p class="titleinrefsubsect"><a id="sthref747"></a>Examples</p>
<p>See <a href="#CIABGFAC">&#34;Examples&#34;</a>.</p>
<a id="CIACBBEB"></a><a id="TTPLP71582"></a>
<hr/>
<h3 class="refsect2"><a id="sthref748"></a>FGETATTR procedure</h3>
<p>This procedure reads and returns the attributes of a disk file.</p>
<p class="titleinrefsubsect"><a id="sthref749"></a>Syntax</p>
<pre>UTL_FILE.FGETATTR(
   <span class="italic">location</span>    IN VARCHAR2, 
   <span class="italic">filename</span>    IN VARCHAR2, 
   <span class="italic">fexists</span>     OUT BOOLEAN, 
   <span class="italic">file_length</span> OUT NUMBER, 
   <span class="italic">block_size</span>   OUT BINARY_INTEGER);
</pre>
<p class="titleinrefsubsect"><a id="sthref750"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71583"></a><a id="sthref751"></a><a id="sthref752"></a>Table 11-7 FGETATTR procedure parameters</p>
<table class="cellalignment1016" title="FGETATTR procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FGETATTR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t12">Parameters</th>
<th class="cellalignment1017" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t12" headers="r1c1-t12">
<p><code><span class="codeinlineitalic">location</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t12 r1c2-t12">
<p>Location of the source file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t12" headers="r1c1-t12">
<p><code><span class="codeinlineitalic">filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t12 r1c2-t12">
<p>Name of the file to be examined</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t12" headers="r1c1-t12">
<p><code><span class="codeinlineitalic">fexists</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t12 r1c2-t12">
<p>A <code>BOOLEAN</code> for whether the file exists</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t12" headers="r1c1-t12">
<p><code><span class="codeinlineitalic">file_length</span></code></p>
</td>
<td class="cellalignment1018" headers="r5c1-t12 r1c2-t12">
<p>Length of the file in bytes, or <code>NULL</code> if file does not exist</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r6c1-t12" headers="r1c1-t12">
<p><code><span class="codeinlineitalic">block_size</span></code></p>
</td>
<td class="cellalignment1018" headers="r6c1-t12 r1c2-t12">
<p>File system block size in bytes, or <code>NULL</code> if file does not exist</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref753"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_PATH
INVALID_FILENAME
INVALID_OPERATION
READ_ERROR
ACCESS_DENIED
</pre>
<a id="CIAIFHGG"></a><a id="TTPLP71584"></a>
<hr/>
<h3 class="refsect2"><a id="sthref754"></a>FGETPOS function</h3>
<p>This function returns the current relative offset position within a file, in bytes.</p>
<p class="titleinrefsubsect"><a id="sthref755"></a>Syntax</p>
<pre>UTL_FILE.FGETPOS (
   <span class="italic">file</span>   IN utl_file.file_type)
 RETURN BINARY_INTEGER;
</pre>
<p class="titleinrefsubsect"><a id="sthref756"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71585"></a><a id="sthref757"></a><a id="sthref758"></a>Table 11-8 FGETPOS function parameters</p>
<table class="cellalignment1016" title="FGETPOS function parameters " summary="This table describes the Parameters of the UTL_FILE.FGETPOS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t13">Parameters</th>
<th class="cellalignment1017" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t13" headers="r1c1-t13">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t13 r1c2-t13">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref759"></a>Return value</p>
<p>The relative offset position for an open file, in bytes, or 0 for the beginning of the file</p>
<p class="titleinrefsubsect"><a id="sthref760"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
READ_ERROR
</pre>
<p>An <code>INVALID_FILEHANDLE</code> exception is raised if the file is not open. An <code>INVALID_OPERATION</code> exception is raised if the file was opened for byte mode operations.</p>
<a id="CIADHJGC"></a><a id="TTPLP71586"></a>
<hr/>
<h3 class="refsect2"><a id="sthref761"></a>FOPEN function</h3>
<p>This function opens a file. You can specify the maximum line size and have a maximum of 50 files open simultaneously. Also see <a href="#CIAJIFAE">&#34;FOPEN_NCHAR function&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref762"></a>Syntax</p>
<pre>UTL_FILE.FOPEN (
   <span class="italic">location</span>     IN VARCHAR2,
   <span class="italic">filename</span>     IN VARCHAR2,
   <span class="italic">open_mode</span>    IN VARCHAR2,
   <span class="italic">max_linesize</span> IN BINARY_INTEGER DEFAULT 1024) 
  RETURN utl_file.file_type;
</pre>
<p class="titleinrefsubsect"><a id="sthref763"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71587"></a><a id="sthref764"></a><a id="sthref765"></a>Table 11-9 FOPEN function parameters</p>
<table class="cellalignment1016" title="FOPEN function parameters" summary="This table describes the Parameters of the UTL_FILE.FOPEN subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t14">Parameter</th>
<th class="cellalignment1017" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t14" headers="r1c1-t14">
<p><code><span class="codeinlineitalic">location</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t14 r1c2-t14">
<p>Directory location of file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t14" headers="r1c1-t14">
<p><code><span class="codeinlineitalic">filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t14 r1c2-t14">
<p>File name, including extension (file type), without directory path</p>
<p>If a directory path is given as a part of the file name, it is ignored by <code>FOPEN</code>. On UNIX, the file name cannot end with a slash, &#34;<code>/</code>&#34;.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t14" headers="r1c1-t14">
<p><code><span class="codeinlineitalic">open_mode</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t14 r1c2-t14">
<p>Mode in which the file was opened:</p>
<ul>
<li>
<p><code>r</code> - Read text mode</p>
</li>
<li>
<p><code>w</code> - Write text mode</p>
</li>
<li>
<p><code>a</code> - Append text mode</p>
</li>
<li>
<p><code>rb</code> - Read byte mode</p>
</li>
<li>
<p><code>wb</code> - Write byte mode</p>
</li>
<li>
<p><code>ab</code> - Append byte mode</p>
</li>
</ul>
<p>If you try to open a file specifying &#39;<code>a</code>&#39; or &#39;<code>ab</code>&#39; for <code><span class="codeinlineitalic">open_mode</span></code> but the file does not exist, the file is created in <code>WRITE</code> mode.</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t14" headers="r1c1-t14">
<p><code><span class="codeinlineitalic">max_linesize</span></code></p>
</td>
<td class="cellalignment1018" headers="r5c1-t14 r1c2-t14">
<p>Maximum number of characters for each line, including the newline character, for this file</p>
<p>The minimum value is 1 and the maximum is 32767. If this is unspecified, TimesTen supplies a default value of 1024.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref766"></a>Return value</p>
<p>A file handle, which must be passed to all subsequent procedures that operate on that file</p>
<p>The specific contents of the file handle are private to the <code>UTL_FILE</code> package, and individual components should not be referenced or changed by the <code>UTL_FILE</code> user.</p>
<p class="titleinrefsubsect"><a id="sthref767"></a>Usage notes</p>
<p>The file location and file name parameters are supplied to the <code>FOPEN</code> function as separate strings, so that the file location can be checked against the <code>utl_file_temp</code> directory. Together, the file location and name must represent a legal file name on the system, and the directory must be accessible. Any subdirectories of <code>utl_file_temp</code> are not accessible.</p>
<p class="titleinrefsubsect"><a id="sthref768"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_PATH
INVALID_MODE
INVALID_OPERATION
INVALID_MAXLINESIZE
</pre>
<p class="titleinrefsubsect"><a id="sthref769"></a>Examples</p>
<p>See <a href="#CIABGFAC">&#34;Examples&#34;</a>.</p>
<a id="CIAJIFAE"></a><a id="TTPLP71589"></a>
<hr/>
<h3 class="refsect2"><a id="sthref770"></a>FOPEN_NCHAR function</h3>
<p>This function opens a file in national character set mode for input or output, with the maximum line size specified. You can have a maximum of 50 files open simultaneously. With this function, you can read or write a text file in Unicode instead of in the database character set.</p>
<p>Even though the contents of an <code>NVARCHAR2</code> buffer may be <code>AL16UTF16</code> or UTF-8 (depending on the national character set of the database), the contents of the file are always read and written in UTF-8. <code>UTL_FILE</code> converts between UTF-8 and <code>AL16UTF16</code> as necessary.</p>
<p>Also see <a href="#CIADHJGC">&#34;FOPEN function&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref771"></a>Syntax</p>
<pre>UTL_FILE.FOPEN_NCHAR (
   <span class="italic">location</span>     IN VARCHAR2,
   <span class="italic">filename</span>     IN VARCHAR2,
   <span class="italic">open_mode</span>    IN VARCHAR2,
   <span class="italic">max_linesize</span> IN BINARY_INTEGER DEFAULT 1024) 
RETURN utl_file.file_type;
</pre>
<p class="titleinrefsubsect"><a id="sthref772"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71590"></a><a id="sthref773"></a><a id="sthref774"></a>Table 11-10 FOPEN_NCHAR function parameters</p>
<table class="cellalignment1016" title="FOPEN_NCHAR function parameters" summary="This table describes the Parameters of the UTL_FILE.FOPEN_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t15">Parameter</th>
<th class="cellalignment1017" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t15" headers="r1c1-t15">
<p><code><span class="codeinlineitalic">location</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t15 r1c2-t15">
<p>Directory location of file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t15" headers="r1c1-t15">
<p><code><span class="codeinlineitalic">filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t15 r1c2-t15">
<p>File name, including extension</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t15" headers="r1c1-t15">
<p><code><span class="codeinlineitalic">open_mode</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t15 r1c2-t15">
<p>Open mode: <code>r</code>, <code>w</code>, <code>a</code>, <code>rb</code>, <code>wb</code>, or <code>ab</code> (as documented for <code>FOPEN</code>)</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t15" headers="r1c1-t15">
<p><code><span class="codeinlineitalic">max_linesize</span></code></p>
</td>
<td class="cellalignment1018" headers="r5c1-t15 r1c2-t15">
<p>Maximum number of characters for each line, including the newline character, for this file</p>
<p>The minimum value is 1 and the maximum is 32767. If this is unspecified, TimesTen supplies a default value of 1024.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref775"></a>Return value</p>
<p>A file handle, which must be passed to all subsequent procedures that operate on that file</p>
<p>The specific contents of the file handle are private to the <code>UTL_FILE</code> package, and individual components should not be referenced or changed by the <code>UTL_FILE</code> user.</p>
<p class="titleinrefsubsect"><a id="sthref776"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_PATH
INVALID_MODE
INVALID_OPERATION
INVALID_MAXLINESIZE
</pre>
<a id="CIABEHDI"></a><a id="TTPLP71592"></a>
<hr/>
<h3 class="refsect2"><a id="sthref777"></a>FREMOVE procedure</h3>
<p>This procedure deletes a disk file if you have sufficient privileges.</p>
<p class="titleinrefsubsect"><a id="sthref778"></a>Syntax</p>
<pre>UTL_FILE.FREMOVE (
   <span class="italic">location</span> IN VARCHAR2,
   <span class="italic">filename</span> IN VARCHAR2);
</pre>
<p class="titleinrefsubsect"><a id="sthref779"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71593"></a><a id="sthref780"></a><a id="sthref781"></a>Table 11-11 FREMOVE procedure parameters</p>
<table class="cellalignment1016" title="FREMOVE procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FREMOVE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t16">Parameters</th>
<th class="cellalignment1017" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t16" headers="r1c1-t16">
<p><code><span class="codeinlineitalic">location</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t16 r1c2-t16">
<p>Directory location of the file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t16" headers="r1c1-t16">
<p><code><span class="codeinlineitalic">filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t16 r1c2-t16">
<p>Name of the file to be deleted</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref782"></a>Usage notes</p>
<p>This procedure does not verify privileges before deleting a file. The operating system verifies file and directory permissions.</p>
<p class="titleinrefsubsect"><a id="sthref783"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_PATH
INVALID_FILENAME
INVALID_OPERATION
ACCESS_DENIED
DELETE_FAILED
</pre>
<a id="CIAGAGHF"></a><a id="TTPLP71594"></a>
<hr/>
<h3 class="refsect2"><a id="sthref784"></a>FRENAME procedure</h3>
<p>This procedure renames an existing file.</p>
<p class="titleinrefsubsect"><a id="sthref785"></a>Syntax</p>
<pre>UTL_FILE.FRENAME (
   <span class="italic">src_location</span>  IN VARCHAR2,
   <span class="italic">src_filename</span>  IN VARCHAR2, 
   <span class="italic">dest_location</span> IN VARCHAR2,
   <span class="italic">dest_filename</span> IN VARCHAR2,
   <span class="italic">overwrite</span>     IN BOOLEAN DEFAULT FALSE);
</pre>
<p class="titleinrefsubsect"><a id="sthref786"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71595"></a><a id="sthref787"></a><a id="sthref788"></a>Table 11-12 FRENAME procedure parameters</p>
<table class="cellalignment1016" title="FRENAME procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FRENAME subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t17">Parameters</th>
<th class="cellalignment1017" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t17" headers="r1c1-t17">
<p><code><span class="codeinlineitalic">src_location</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t17 r1c2-t17">
<p>Directory location of the source file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t17" headers="r1c1-t17">
<p><code><span class="codeinlineitalic">src_filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t17 r1c2-t17">
<p>Source file to be renamed</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t17" headers="r1c1-t17">
<p><code><span class="codeinlineitalic">dest_location</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t17 r1c2-t17">
<p>Destination directory of the destination file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r5c1-t17" headers="r1c1-t17">
<p><code><span class="codeinlineitalic">dest_filename</span></code></p>
</td>
<td class="cellalignment1018" headers="r5c1-t17 r1c2-t17">
<p>New name of the file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r6c1-t17" headers="r1c1-t17">
<p><code><span class="codeinlineitalic">overwrite</span></code></p>
</td>
<td class="cellalignment1018" headers="r6c1-t17 r1c2-t17">
<p>Whether it is permissible to overwrite an existing file in the destination directory (default <code>FALSE</code>)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref789"></a>Usage notes</p>
<p>Permission on both the source and destination directories must be granted.</p>
<p class="titleinrefsubsect"><a id="sthref790"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_PATH
INVALID_FILENAME
RENAME_FAILED
ACCESS_DENIED
</pre>
<a id="CIAIAJBF"></a><a id="TTPLP71596"></a>
<hr/>
<h3 class="refsect2"><a id="sthref791"></a>FSEEK procedure</h3>
<p>This procedure adjusts the file pointer forward or backward within the file by the number of bytes specified.</p>
<p class="titleinrefsubsect"><a id="sthref792"></a>Syntax</p>
<pre>UTL_FILE.FSEEK (
   <span class="italic">file</span>            IN OUT utl_file.file_type,
   <span class="italic">absolute_offset</span> IN     BINARY_INTEGER DEFAULT NULL,
   <span class="italic">relative_offset</span> IN     BINARY_INTEGER DEFAULT NULL);
</pre>
<p class="titleinrefsubsect"><a id="sthref793"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71597"></a><a id="sthref794"></a><a id="sthref795"></a>Table 11-13 FSEEK procedure parameters</p>
<table class="cellalignment1016" title="FSEEK procedure parameters " summary="This table describes the Parameters of the UTL_FILE.FSEEK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t18">Parameters</th>
<th class="cellalignment1017" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t18" headers="r1c1-t18">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t18 r1c2-t18">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t18" headers="r1c1-t18">
<p><code><span class="codeinlineitalic">absolute_offset</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t18 r1c2-t18">
<p>Absolute location to which to seek, in bytes (default <code>NULL</code>)</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t18" headers="r1c1-t18">
<p><code><span class="codeinlineitalic">relative_offset</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t18 r1c2-t18">
<p>Number of bytes to seek forward or backward</p>
<p>Use a positive integer to seek forward, a negative integer to see backward, or 0 for the current position. Default is <code>NULL</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref796"></a>Usage notes</p>
<ul>
<li>
<p>Using <code>FSEEK</code>, you can read previous lines in the file without first closing and reopening the file. You must know the number of bytes by which you want to navigate.</p>
</li>
<li>
<p>If the beginning of the file is reached before the number of bytes specified, then the file pointer is placed at the beginning of the file.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref797"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
READ_ERROR
INVALID_OFFSET
</pre>
<p><code>INVALID_OPERATION</code> is raised if the file was opened for byte-mode operations. <code>INVALID_OFFSET</code> is raised if the end of the file is reached before the number of bytes specified.</p>
<a id="CIADCGDC"></a><a id="TTPLP71598"></a>
<hr/>
<h3 class="refsect2"><a id="sthref798"></a>GET_LINE procedure</h3>
<p>This procedure reads text from the open file identified by the file handle and places the text in the output buffer parameter. Text is read up to, but not including, the line terminator, or up to the end of the file, or up to the end of the <code>len</code> parameter. It cannot exceed the <code><span class="codeinlineitalic">max_linesize</span></code> specified in <code>FOPEN</code>.</p>
<p class="titleinrefsubsect"><a id="sthref799"></a>Syntax</p>
<pre>UTL_FILE.GET_LINE (
   <span class="italic">file</span>        IN  UTL_FILE.FILE_TYPE,
   <span class="italic">buffer</span>      OUT VARCHAR2,
   <span class="italic">len</span>         IN  BINARY_INTEGER DEFAULT NULL);
</pre>
<p class="titleinrefsubsect"><a id="sthref800"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71599"></a><a id="sthref801"></a><a id="sthref802"></a>Table 11-14 GET_LINE procedure parameters</p>
<table class="cellalignment1016" title="GET_LINE procedure parameters " summary="This table describes the Parameters of the UTL_FILE.GETLINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t19">Parameters</th>
<th class="cellalignment1017" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t19" headers="r1c1-t19">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t19 r1c2-t19">
<p>Active file handle returned by an <code>FOPEN</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t19" headers="r1c1-t19">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t19 r1c2-t19">
<p>Data buffer to receive the line read from the file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t19" headers="r1c1-t19">
<p><code><span class="codeinlineitalic">len</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t19 r1c2-t19">
<p>Number of bytes read from the file</p>
<p>If <code>NULL</code> (default), TimesTen supplies the value of <code><span class="codeinlineitalic">max_linesize</span></code> from <code>FOPEN</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref803"></a>Usage notes</p>
<ul>
<li>
<p>Because the line terminator character is not read into the buffer, reading blank lines returns empty strings.</p>
</li>
<li>
<p>The maximum size of the <code><span class="codeinlineitalic">buffer</span></code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>.</p>
</li>
<li>
<p>If unspecified, TimesTen supplies a default value of 1024. Also see <a href="#CIAGEBBE">&#34;GET_LINE_NCHAR procedure&#34;</a>.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref804"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
READ_ERROR
CHARSETMISMATCH
NO_DATA_FOUND
VALUE_ERROR
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was not opened for read mode (mode <code>r</code>) or was opened for byte-mode operations. <code>CHARSETMISMATCH</code> is thrown if <code>FOPEN_NCHAR</code> was used instead of <code>FOPEN</code> to open the file. <code>NO_DATA_FOUND</code> is thrown if no text was read due to end of file. <code>VALUE_ERROR</code> is thrown if the line does not fit into the buffer. (<code>NO_DATA_FOUND</code> and <code>VALUE_ERROR</code> are predefined PL/SQL exceptions.)</p>
<p class="titleinrefsubsect"><a id="sthref805"></a>Examples</p>
<p>See <a href="#CIABGFAC">&#34;Examples&#34;</a>.</p>
<a id="CIAGEBBE"></a><a id="TTPLP71600"></a>
<hr/>
<h3 class="refsect2"><a id="sthref806"></a>GET_LINE_NCHAR procedure</h3>
<p>This procedure reads text from the open file identified by the file handle and places the text in the output buffer parameter. With this function, you can read a text file in Unicode instead of in the database character set.</p>
<p>The file must be opened in national character set mode, and must be encoded in the UTF-8 character set. The expected buffer data type is <code>NVARCHAR2</code>. If a variable of another data type such as <code>NCHAR</code> or <code>VARCHAR2</code> is specified, PL/SQL performs standard implicit conversion from <code>NVARCHAR2</code> after the text is read.</p>
<p>Also see <a href="#CIADCGDC">&#34;GET_LINE procedure&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref807"></a>Syntax</p>
<pre>UTL_FILE.GET_LINE_NCHAR (
   <span class="italic">file</span>        IN  UTL_FILE.FILE_TYPE,
   <span class="italic">buffer</span>      OUT NVARCHAR2,
   <span class="italic">len</span>         IN  BINARY_INTEGER DEFAULT NULL);
</pre>
<p class="titleinrefsubsect"><a id="sthref808"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71601"></a><a id="sthref809"></a><a id="sthref810"></a>Table 11-15 GET_LINE_NCHAR procedure parameters</p>
<table class="cellalignment1016" title="GET_LINE_NCHAR procedure parameters " summary="This table describes the Parameters of the UTL_FILE.GET_LINE_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t20">Parameters</th>
<th class="cellalignment1017" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t20" headers="r1c1-t20">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t20 r1c2-t20">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call</p>
<p>The file must be open for reading (mode <code>r</code>).</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t20" headers="r1c1-t20">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t20 r1c2-t20">
<p>Data buffer to receive the line read from the file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t20" headers="r1c1-t20">
<p><code><span class="codeinlineitalic">len</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t20 r1c2-t20">
<p>The number of bytes read from the file</p>
<p>If <code>NULL</code> (default), TimesTen supplies the value of <code><span class="codeinlineitalic">max_linesize</span></code> from <code>FOPEN_NCHAR</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref811"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
READ_ERROR
CHARSETMISMATCH
NO_DATA_FOUND
VALUE_ERROR
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was not opened for read mode (mode <code>r</code>) or was opened for byte-mode operations. <code>NO_DATA_FOUND</code> is thrown if no text was read due to end of file. <code>VALUE_ERROR</code> is thrown if the line does not fit into the buffer. <code>CHARSETMISMATCH</code> is thrown if the file was opened by <code>FOPEN</code> instead of <code>FOPEN_NCHAR</code>. (<code>NO_DATA_FOUND</code> and <code>VALUE_ERROR</code> are predefined PL/SQL exceptions.)</p>
<a id="CIADGJIJ"></a><a id="TTPLP71602"></a>
<hr/>
<h3 class="refsect2"><a id="sthref812"></a>GET_RAW procedure</h3>
<p>This procedure reads a <code>RAW</code> string value from a file and adjusts the file pointer ahead by the number of bytes read. It ignores line terminators.</p>
<p class="titleinrefsubsect"><a id="sthref813"></a>Syntax</p>
<pre>UTL_FILE.GET_RAW (
   <span class="italic">file</span>    IN  utl_file.file_type, 
   <span class="italic">buffer</span>  OUT NOCOPY RAW, 
   <span class="italic">len</span>     IN  BINARY_INTEGER DEFAULT NULL);
</pre>
<p class="titleinrefsubsect"><a id="sthref814"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71603"></a><a id="sthref815"></a><a id="sthref816"></a>Table 11-16 GET_RAW function parameters</p>
<table class="cellalignment1016" title="GET_RAW function parameters " summary="This table describes the Parameters of the UTL_FILE.GET_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t21">Parameters</th>
<th class="cellalignment1017" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t21" headers="r1c1-t21">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t21 r1c2-t21">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t21" headers="r1c1-t21">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t21 r1c2-t21">
<p>The <code>RAW</code> data</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t21" headers="r1c1-t21">
<p><code><span class="codeinlineitalic">len</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t21 r1c2-t21">
<p>Number of bytes read from the file</p>
<p>If <code>NULL</code> (default), <code><span class="codeinlineitalic">len</span></code> is assumed to be the maximum length of <code>RAW</code>.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref817"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
READ_ERROR
LENGTH_MISMATCH
NO_DATA_FOUND
</pre>
<p>(<code>NO_DATA_FOUND</code> is a predefined PL/SQL exception.)</p>
<p class="titleinrefsubsect"><a id="sthref818"></a>Examples</p>
<p>See <a href="#CIABGFAC">&#34;Examples&#34;</a>.</p>
<a id="CIAGHFCH"></a><a id="TTPLP71604"></a>
<hr/>
<h3 class="refsect2"><a id="sthref819"></a>IS_OPEN function</h3>
<p>This function tests a file handle to see if it identifies an open file. It reports only whether a file handle represents a file that has been opened, but not yet closed. It does not guarantee you can use the file without error.</p>
<p class="titleinrefsubsect"><a id="sthref820"></a>Syntax</p>
<pre>UTL_FILE.IS_OPEN (
   <span class="italic">file</span>  IN UTL_FILE.FILE_TYPE)
  RETURN BOOLEAN;
</pre>
<p class="titleinrefsubsect"><a id="sthref821"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71605"></a><a id="sthref822"></a><a id="sthref823"></a>Table 11-17 IS_OPEN function parameters</p>
<table class="cellalignment1016" title="IS_OPEN function parameters " summary="This table describes the Parameters of the UTL_FILE.IS_OPEN subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t22">Parameter</th>
<th class="cellalignment1017" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t22" headers="r1c1-t22">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t22 r1c2-t22">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref824"></a>Return value</p>
<p><code>TRUE</code> if the file is open, or <code>FALSE</code> if not</p>
<p class="titleinrefsubsect"><a id="sthref825"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>INVALID_FILEHANDLE
</pre>
<a id="CIABHDEE"></a><a id="TTPLP71606"></a>
<hr/>
<h3 class="refsect2"><a id="sthref826"></a>NEW_LINE procedure</h3>
<p>This procedure writes one or more line terminators to the file identified by the input file handle. This procedure is distinct from <code>PUT</code> because the line terminator is a platform-specific character or sequence of characters.</p>
<p class="titleinrefsubsect"><a id="sthref827"></a>Syntax</p>
<pre>UTL_FILE.NEW_LINE (
   <span class="italic">file</span>     IN UTL_FILE.FILE_TYPE,
   <span class="italic">lines</span>    IN BINARY_INTEGER := 1);
</pre>
<p class="titleinrefsubsect"><a id="sthref828"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71607"></a><a id="sthref829"></a><a id="sthref830"></a>Table 11-18 NEW_LINE procedure parameters</p>
<table class="cellalignment1016" title="NEW_LINE procedure parameters " summary="This table describes the Parameters of the UTL_FILE.NEW_LINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t23">Parameters</th>
<th class="cellalignment1017" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t23" headers="r1c1-t23">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t23 r1c2-t23">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t23" headers="r1c1-t23">
<p><code><span class="codeinlineitalic">lines</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t23 r1c2-t23">
<p>Number of line terminators to be written to the file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref831"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
</pre>
<a id="CIAIAFFA"></a><a id="TTPLP71608"></a>
<hr/>
<h3 class="refsect2"><a id="sthref832"></a>PUT procedure</h3>
<p><code>PUT</code> writes the text string stored in the buffer parameter to the open file identified by the file handle. The file must be open for write operations. No line terminator is appended by <code>PUT</code>. Use <code>NEW_LINE</code> to terminate the line or <code>PUT_LINE</code> to write a complete line with a line terminator. Also see <a href="#CIAEFEBI">&#34;PUT_NCHAR procedure&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref833"></a>Syntax</p>
<pre>UTL_FILE.PUT (
   <span class="italic">file</span>      IN UTL_FILE.FILE_TYPE,
   <span class="italic">buffer</span>    IN VARCHAR2);
</pre>
<p class="titleinrefsubsect"><a id="sthref834"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71609"></a><a id="sthref835"></a><a id="sthref836"></a>Table 11-19 PUT procedure parameters</p>
<table class="cellalignment1016" title="PUT procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t24">Parameters</th>
<th class="cellalignment1017" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t24" headers="r1c1-t24">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t24 r1c2-t24">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call</p>
<p>The file must be open for writing (mode <code>w</code>).</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t24" headers="r1c1-t24">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t24 r1c2-t24">
<p>Buffer that contains the text to be written to the file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref837"></a>Usage notes</p>
<p>The maximum size of the <code><span class="codeinlineitalic">buffer</span></code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, TimesTen supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
<p class="titleinrefsubsect"><a id="sthref838"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
CHARSETMISMATCH
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was not opened using mode <code>w</code> or <code>a</code> (write or append). <code>CHARSETMISMATCH</code> is thrown if <code>FOPEN_NCHAR</code> was used instead of <code>FOPEN</code> to open the file.</p>
<a id="CIADBDFI"></a><a id="TTPLP71610"></a>
<hr/>
<h3 class="refsect2"><a id="sthref839"></a><a id="sthref840"></a>PUT_LINE procedure</h3>
<p>This procedure writes the text string stored in the buffer parameter to the open file identified by the file handle. The file must be open for write operations. <code>PUT_LINE</code> terminates the line with the platform-specific line terminator character or characters. Also see <a href="#CIADECHC">&#34;PUT_LINE_NCHAR procedure&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref841"></a>Syntax</p>
<pre>UTL_FILE.PUT_LINE (
   <span class="italic">file</span>      IN UTL_FILE.FILE_TYPE,
   <span class="italic">buffer</span>    IN VARCHAR2,
   <span class="italic">autoflush</span> IN BOOLEAN DEFAULT FALSE);
</pre>
<p class="titleinrefsubsect"><a id="sthref842"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71611"></a><a id="sthref843"></a><a id="sthref844"></a>Table 11-20 PUT_LINE procedure parameters</p>
<table class="cellalignment1016" title="PUT_LINE procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_LINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t25">Parameters</th>
<th class="cellalignment1017" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t25" headers="r1c1-t25">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t25 r1c2-t25">
<p>Active file handle returned by an <code>FOPEN</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t25" headers="r1c1-t25">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t25 r1c2-t25">
<p>Text buffer that contains the lines to be written to the file</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t25" headers="r1c1-t25">
<p><code><span class="codeinlineitalic">autoflush</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t25 r1c2-t25">
<p>Flag for flushing the buffer to disk after the write</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref845"></a>Usage notes</p>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, TimesTen supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
<p class="titleinrefsubsect"><a id="sthref846"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
CHARSETMISMATCH
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was opened for byte-mode operations. <code>CHARSETMISMATCH</code> is thrown if <code>FOPEN_NCHAR</code> was used instead of <code>FOPEN</code> to open the file.</p>
<a id="CIADECHC"></a><a id="TTPLP71612"></a>
<hr/>
<h3 class="refsect2"><a id="sthref847"></a>PUT_LINE_NCHAR procedure</h3>
<p>This procedure writes the text string stored in the buffer parameter to the open file identified by the file handle. With this function, you can write a text file in Unicode instead of in the database character set. This procedure is equivalent to the <a href="#CIAEFEBI">PUT_NCHAR procedure</a>, except that the line separator is appended to the written text. Also see <a href="#CIADBDFI">&#34;PUT_LINE procedure&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref848"></a>Syntax</p>
<pre>UTL_FILE.PUT_LINE_NCHAR (
   <span class="italic">file</span>    IN UTL_FILE.FILE_TYPE,
   <span class="italic">buffer</span>  IN NVARCHAR2);
</pre>
<p class="titleinrefsubsect"><a id="sthref849"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71613"></a><a id="sthref850"></a><a id="sthref851"></a>Table 11-21 PUT_LINE_NCHAR procedure parameters</p>
<table class="cellalignment1016" title="PUT_LINE_NCHAR procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_LINE_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t26">Parameters</th>
<th class="cellalignment1017" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t26" headers="r1c1-t26">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t26 r1c2-t26">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call</p>
<p>The file must be open for writing (mode <code>w</code>).</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t26" headers="r1c1-t26">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t26 r1c2-t26">
<p>Text buffer that contains the lines to be written to the file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref852"></a>Usage notes</p>
<p>The maximum size of the <code><span class="codeinlineitalic">buffer</span></code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, TimesTen supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
<p class="titleinrefsubsect"><a id="sthref853"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
CHARSETMISMATCH
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was opened for byte-mode operations. <code>CHARSETMISMATCH</code> is thrown if <code>FOPEN</code> was used instead of <code>FOPEN_NCHAR</code> to open the file.</p>
<a id="CIAEFEBI"></a><a id="TTPLP71614"></a>
<hr/>
<h3 class="refsect2"><a id="sthref854"></a>PUT_NCHAR procedure</h3>
<p>This procedure writes the text string stored in the buffer parameter to the open file identified by the file handle.</p>
<p>With this function, you can write a text file in Unicode instead of in the database character set. The file must be opened in the national character set mode. The text string is written in the UTF-8 character set. The expected buffer data type is <code>NVARCHAR2</code>. If a variable of another data type is specified, PL/SQL performs implicit conversion to <code>NVARCHAR2</code> before writing the text.</p>
<p>Also see <a href="#CIAIAFFA">&#34;PUT procedure&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref855"></a>Syntax</p>
<pre>UTL_FILE.PUT_NCHAR (
   <span class="italic">file</span>      IN UTL_FILE.FILE_TYPE,
   <span class="italic">buffer</span>    IN NVARCHAR2);
</pre>
<p class="titleinrefsubsect"><a id="sthref856"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71615"></a><a id="sthref857"></a><a id="sthref858"></a>Table 11-22 PUT_NCHAR procedure parameters</p>
<table class="cellalignment1016" title="PUT_NCHAR procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t27">Parameters</th>
<th class="cellalignment1017" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t27" headers="r1c1-t27">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t27 r1c2-t27">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t27" headers="r1c1-t27">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t27 r1c2-t27">
<p>Buffer that contains the text to be written to the file</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref859"></a>Usage notes</p>
<p>The maximum size of the <code><span class="codeinlineitalic">buffer</span></code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, TimesTen supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
<p class="titleinrefsubsect"><a id="sthref860"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about this exception.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
CHARSETMISMATCH
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was not opened using mode <code>w</code> or <code>a</code> (write or append). <code>CHARSETMISMATCH</code> is thrown if the file was opened by <code>FOPEN</code> instead of <code>FOPEN_NCHAR</code>.</p>
<a id="CIACGGAD"></a><a id="TTPLP71616"></a>
<hr/>
<h3 class="refsect2"><a id="sthref861"></a>PUT_RAW procedure</h3>
<p>This procedure accepts as input a <code>RAW</code> data value and writes the value to the output buffer.</p>
<p class="titleinrefsubsect"><a id="sthref862"></a>Syntax</p>
<pre>UTL_FILE.PUT_RAW (
   <span class="italic">file</span>       IN utl_file.file_type,
   <span class="italic">buffer</span>     IN RAW, 
   <span class="italic">autoflush</span>  IN BOOLEAN DEFAULT FALSE);
</pre>
<p class="titleinrefsubsect"><a id="sthref863"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71617"></a><a id="sthref864"></a><a id="sthref865"></a>Table 11-23 PUT_RAW procedure parameters</p>
<table class="cellalignment1016" title="PUT_RAW procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t28">Parameters</th>
<th class="cellalignment1017" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t28" headers="r1c1-t28">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t28 r1c2-t28">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t28" headers="r1c1-t28">
<p><code><span class="codeinlineitalic">buffer</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t28 r1c2-t28">
<p>The <code>RAW</code> data written to the buffer</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t28" headers="r1c1-t28">
<p><code><span class="codeinlineitalic">autoflush</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t28 r1c2-t28">
<p>Flag to perform a flush after writing the value to the output buffer (default is <code>FALSE</code>)</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref866"></a>Usage notes</p>
<p>You can request an automatic flush of the buffer by setting <code><span class="codeinlineitalic">autoflush</span></code> to <code>TRUE</code>.</p>
<p>The maximum size of the <code><span class="codeinlineitalic">buffer</span></code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, TimesTen supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
<p class="titleinrefsubsect"><a id="sthref867"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
</pre>
<a id="CIAHCFIH"></a><a id="TTPLP71618"></a>
<hr/>
<h3 class="refsect2"><a id="sthref868"></a>PUTF procedure</h3>
<p>This procedure is a formatted <code>PUT</code> procedure. It works like a limited <code>printf()</code>. Also see <a href="#CIAGEJED">&#34;PUTF_NCHAR procedure&#34;</a>.</p>
<p class="titleinrefsubsect"><a id="sthref869"></a>Syntax</p>
<pre>UTL_FILE.PUTF (
   <span class="italic">file</span>    IN UTL_FILE.FILE_TYPE,
   <span class="italic">format</span>  IN VARCHAR2,
   [<span class="italic">arg1</span>   IN VARCHAR2  DEFAULT NULL,
   . . .  
   <span class="italic">arg5</span>    IN VARCHAR2  DEFAULT NULL]); 
</pre>
<p class="titleinrefsubsect"><a id="sthref870"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71619"></a><a id="sthref871"></a><a id="sthref872"></a>Table 11-24 PUTF procedure parameters</p>
<table class="cellalignment1016" title="PUTF procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUTF subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t29">Parameters</th>
<th class="cellalignment1017" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t29" headers="r1c1-t29">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t29 r1c2-t29">
<p>Active file handle returned by an <code>FOPEN</code> call</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t29" headers="r1c1-t29">
<p><code><span class="codeinlineitalic">format</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t29 r1c2-t29">
<p>Format string that can contain text and the formatting characters <code>\n</code> and <code>%s</code></p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t29" headers="r1c1-t29">
<p><code><span class="codeinlineitalic">arg1..arg5</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t29 r1c2-t29">
<p>From one to five operational argument strings</p>
<p>Argument strings are substituted, in order, for the <code>%s</code> formatters in the format string. If there are more formatters in the format parameter string than there are arguments, an empty string is substituted for each <code>%s</code> for which there is no argument.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref873"></a>Usage notes</p>
<p>The format string can contain any text, but the character sequences <code>%s</code> and <code>\n</code> have special meaning.</p>
<div class="inftblhruleinformal">
<table class="cellalignment1016" title="Character Sequences" summary="This table describes the Character Sequences that have special meaning for the PUTF subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t30">Character sequence</th>
<th class="cellalignment1017" id="r1c2-t30">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t30" headers="r1c1-t30"><code>%s</code></td>
<td class="cellalignment1018" headers="r2c1-t30 r1c2-t30">Substitute this sequence with the string value of the next argument in the argument list.</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t30" headers="r1c1-t30"><code>\n</code></td>
<td class="cellalignment1018" headers="r3c1-t30 r1c2-t30">Substitute with the appropriate platform-specific line terminator.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblhruleinformal" -->
<p class="titleinrefsubsect"><a id="sthref874"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
CHARSETMISMATCH
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was opened for byte-mode operations. <code>CHARSETMISMATCH</code> is thrown if <code>FOPEN_NCHAR</code> was used instead of <code>FOPEN</code> to open the file.</p>
<p class="titleinrefsubsect"><a id="sthref875"></a>Examples</p>
<p>See <a href="#CIABGFAC">&#34;Examples&#34;</a>.</p>
<a id="CIAGEJED"></a><a id="TTPLP71620"></a>
<hr/>
<h3 class="refsect2"><a id="sthref876"></a>PUTF_NCHAR procedure</h3>
<p>This procedure is the formatted version of the <a href="#CIAEFEBI">PUT_NCHAR procedure</a>. Using <code>PUTF_NCHAR</code>, you can write a text file in Unicode instead of in the database character set. It accepts a format string with formatting elements <code>\n</code> and <code>%s</code>, and up to five arguments to be substituted for consecutive occurrences of <code>%s</code> in the format string. The expected data type of the format string and the arguments is <code>NVARCHAR2</code>.</p>
<p>If variables of another data type are specified, PL/SQL performs implicit conversion to <code>NVARCHAR2</code> before formatting the text. Formatted text is written in the UTF-8 character set to the file identified by the file handle. The file must be opened in the national character set mode.</p>
<p class="titleinrefsubsect"><a id="sthref877"></a>Syntax</p>
<pre>UTL_FILE.PUTF_NCHAR (
   <span class="italic">file</span>    IN UTL_FILE.FILE_TYPE,
   <span class="italic">format</span>  IN NVARCHAR2,
   [<span class="italic">arg1</span>   IN NVARCHAR2  DEFAULT NULL,
   . . .  
   <span class="italic">arg5</span>    IN NVARCHAR2  DEFAULT NULL]); 
</pre>
<p class="titleinrefsubsect"><a id="sthref878"></a>Parameters</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="TTPLP71621"></a><a id="sthref879"></a><a id="sthref880"></a>Table 11-25 PUTF_NCHAR procedure parameters</p>
<table class="cellalignment1016" title="PUTF_NCHAR procedure parameters " summary="This table describes the Parameters of the UTL_FILE.PUTF_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1010">
<th class="cellalignment1017" id="r1c1-t31">Parameters</th>
<th class="cellalignment1017" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r2c1-t31" headers="r1c1-t31">
<p><code><span class="codeinlineitalic">file</span></code></p>
</td>
<td class="cellalignment1018" headers="r2c1-t31 r1c2-t31">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call</p>
<p>The file must be open for reading (mode <code>r</code>).</p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r3c1-t31" headers="r1c1-t31">
<p><code><span class="codeinlineitalic">format</span></code></p>
</td>
<td class="cellalignment1018" headers="r3c1-t31 r1c2-t31">
<p>Format string that can contain text and the format characters <code>\n</code> and <code>%s</code></p>
</td>
</tr>
<tr class="cellalignment1010">
<td class="cellalignment1018" id="r4c1-t31" headers="r1c1-t31">
<p><code><span class="codeinlineitalic">arg1..arg5</span></code></p>
</td>
<td class="cellalignment1018" headers="r4c1-t31 r1c2-t31">
<p>From one to five operational argument strings</p>
<p>Argument strings are substituted, in order, for the <code>%s</code> format characters in the format string. If there are more format characters in the format string than there are arguments, an empty string is substituted for each <code>%s</code> for which there is no argument.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblhruleformal" -->
<p class="titleinrefsubsect"><a id="sthref881"></a>Usage notes</p>
<p>The maximum size of the <code><span class="codeinlineitalic">buffer</span></code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, TimesTen supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
<p class="titleinrefsubsect"><a id="sthref882"></a>Exceptions</p>
<p>Refer to <a href="#CIAEGEAD">&#34;Exceptions&#34;</a> for information about these exceptions.</p>
<pre>INVALID_FILEHANDLE
INVALID_OPERATION
WRITE_ERROR
CHARSETMISMATCH
</pre>
<p><code>INVALID_OPERATION</code> is thrown if the file was opened for byte-mode operations. <code>CHARSETMISMATCH</code> is thrown if the file was opened by <code>FOPEN</code> instead of <code>FOPEN_NCHAR</code>.</p>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1009">
<tr>
<td class="cellalignment1018">
<table class="cellalignment1014">
<tr>
<td class="cellalignment1013"><a href="t_stats.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1013"><a href="u_ident.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1020">
<table class="cellalignment1012">
<tr>
<td class="cellalignment1013"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1013"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1013"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1013"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1013"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1013"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>