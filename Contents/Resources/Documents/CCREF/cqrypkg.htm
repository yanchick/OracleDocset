<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-3632"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/CTX_QUERY%20Package"></a><title>CTX_QUERY Package</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="HFEEDBACK procedure, CTX_QUERY package, HFEEDBACK, hierarchical query feedback information, generating, query, hierarchical feedback, broader term query feedback, narrower term query feedback, related term query feedback"/>
<meta name="dcterms.created" content="2017-06-08T04:23:35Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Text Reference"/>
<meta name="dcterms.identifier" content="E41399-12"/>
<meta name="dcterms.isVersionOf" content="CCREF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="coutpkg.htm" title="Previous" type="text/html"/>
<link rel="Next" href="crptpkg.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41399-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-D1531525-FC8D-453F-A7D9-ED19DE199E95"></a> <span id="PAGE" style="display:none;">17/31</span> <!-- End Header -->
<a id="CCREF0900"></a><a id="CCREF2138"></a>
<h1 id="CCREF-GUID-D1531525-FC8D-453F-A7D9-ED19DE199E95" class="sect1"><span class="enumeration_chapter">12</span> CTX_QUERY Package</h1>
<div>
<p>This chapter describes the <code class="codeph">CTX_QUERY</code> PL/SQL package you can use for generating query feedback, counting hits, and creating stored query expressions.</p>
<p>The <code class="codeph">CTX_QUERY</code> package includes the following procedures and functions:</p>
<div class="tblformal" id="GUID-D1531525-FC8D-453F-A7D9-ED19DE199E95__GUID-C3EEE10A-18EA-475B-9C83-C2845A5E312D">
<table class="cellalignment3028" summary="This table describes procedures and functions included in CTX_QUERY Package.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3029" id="d107163e68">Name</th>
<th class="cellalignment3030" id="d107163e71">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e76" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E">BROWSE_WORDS</a></p>
</td>
<td class="cellalignment3032" headers="d107163e76 d107163e71">
<p>Returns the words around a seed word in the index.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e85" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF">COUNT_HITS</a></p>
</td>
<td class="cellalignment3032" headers="d107163e85 d107163e71">
<p>Returns the number hits to a query.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e94" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-93206799-20F2-468C-A7E9-AF364EC011E8">EXPLAIN</a></p>
</td>
<td class="cellalignment3032" headers="d107163e94 d107163e71">
<p>Generates query expression parse and expansion information.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e103" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B">HFEEDBACK</a></p>
</td>
<td class="cellalignment3032" headers="d107163e103 d107163e71">
<p>Generates hierarchical query feedback information (broader term, narrower term, and related term).</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e112" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-BBA881E3-5CE7-4E95-94F0-E4116998C69A">REMOVE_SQE</a></p>
</td>
<td class="cellalignment3032" headers="d107163e112 d107163e71">
<p>Removes a specified stored query expression from the SQL tables.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e121" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-EBB44B13-1648-444D-BACA-134C3EBA2058">RESULT_SET</a></p>
</td>
<td class="cellalignment3032" headers="d107163e121 d107163e71">
<p>Executes a query and generates a result set.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e130" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2">RESULT_SET_DOCUMENT</a></p>
</td>
<td class="cellalignment3032" headers="d107163e130 d107163e71">
<p>Holds the result set document after the CONTAINS query cursor is explicitly closed and if the query template has the &lt;ctx_result_set_descriptor&gt; element.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d107163e139" headers="d107163e68">
<p><a href="cqrypkg.htm#GUID-C966324F-9B3C-4770-9C98-30CE5A678051">STORE_SQE</a></p>
</td>
<td class="cellalignment3032" headers="d107163e139 d107163e71">
<p>Executes a query and stores the results in stored query expression tables.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="infobox-note" id="GUID-D1531525-FC8D-453F-A7D9-ED19DE199E95__GUID-366795A9-379B-4B42-ABC0-02C918588697">
<p class="notep1">Note:</p>
<p>You can use this package only when your index type is <code class="codeph">CONTEXT</code>. This package does not support the <code class="codeph">CTXCAT</code> index type.</p>
</div>
</div>
<a id="CCREF23930"></a><a id="CCREF23931"></a><a id="CCREF0902"></a>
<div class="props_rev_3"><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E"></a>
<h2 id="CCREF-GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E" class="sect2"><span class="enumeration_section">12.1</span> BROWSE_WORDS</h2>
<div>
<div class="section">
<p><a id="d107163e211" class="indexterm-anchor"></a><a id="d107163e213" class="indexterm-anchor"></a><a id="d107163e217" class="indexterm-anchor"></a>This procedure enables you to browse words in an Oracle Text index. Specify a seed word and <code class="codeph">BROWSE_WORDS</code> returns the words around it in the index, and an approximate count of the number of documents that contain each word.</p>
<p>This feature is useful for refining queries. You can identify the following words:</p>
<ul style="list-style-type: disc;">
<li>
<p>Unselective words (words that have low document count)</p>
</li>
<li>
<p>Misspelled words in the document set</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax 1: To Store Results in Table</p>
<pre dir="ltr">ctx_query.browse_words( 
</pre>
<pre dir="ltr">index_name  IN   VARCHAR2, 
seed        IN   VARCHAR2, 
restab      IN   VARCHAR2, 
browse_id   IN   NUMBER   DEFAULT 0, 
numwords    IN   NUMBER   DEFAULT 10, 
direction   IN   VARCHAR2 DEFAULT BROWSE_AROUND,
part_name   IN   VARCHAR2 DEFAULT NULL
</pre>
<pre dir="ltr">); 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax 2: To Store Results in Memory</p>
<pre dir="ltr">ctx_query.browse_words( 
</pre>
<pre dir="ltr">index_name  IN      VARCHAR2, 
seed        IN      VARCHAR2, 
resarr      IN OUT  BROWSE_TAB, 
numwords    IN      NUMBER   DEFAULT 10, 
direction   IN      VARCHAR2 DEFAULT BROWSE_AROUND,
part_name   IN      VARCHAR2 DEFAULT NULL 
</pre>
<pre dir="ltr">); 
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3593"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-3981CA15-34FA-474D-8E30-59582FCE126F"><!-- --></a>index</dt>
<dd>
<p>Specify the name of the index. You can specify <code class="codeph">schema.name</code>. Must be a local index.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3594"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-767EE268-BFB9-4278-A323-04A095D17467"><!-- --></a>seed</dt>
<dd>
<p>Specify the seed word. This word is lexed before browse expansion. The word need not exist in the token table. <tt>seed</tt> must be a single word. Using multiple words as the seed will result in an error.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3595"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-4F331D5F-02C2-45C7-9A5B-BAA4D81CC884"><!-- --></a>restab</dt>
<dd>
<p>Specify the name of the result table. You can enter <tt>restab</tt> as <code class="codeph">schema.name</code>. The table must exist before you call this procedure, and you must have <code class="codeph">INSERT</code> permissions on the table. This table must have the following schema.</p>
<div class="tblformal" id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-04A5F31A-ECB1-417C-AA15-7C4074CDC403">
<table class="cellalignment3033" summary="This table describes result table.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3034" id="d107163e292">Column</th>
<th class="cellalignment3034" id="d107163e295">Datatype</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d107163e300" headers="d107163e292">
<p>browse_id</p>
</td>
<td class="cellalignment3035" headers="d107163e300 d107163e295">
<p>number</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d107163e307" headers="d107163e292">
<p>word</p>
</td>
<td class="cellalignment3035" headers="d107163e307 d107163e295">
<p>varchar2(64)</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d107163e314" headers="d107163e292">
<p>doc_count</p>
</td>
<td class="cellalignment3035" headers="d107163e314 d107163e295">
<p>number</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Existing rows in <tt>restab</tt> are not deleted before <code class="codeph">BROWSE_WORDS</code> is called.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3596"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-755596F0-3CC8-405E-B8D6-FD742F932E13"><!-- --></a>resarr</dt>
<dd>
<p>Specify the name of the result array. <code class="codeph">resarr</code> is of type <code class="codeph">ctx_query.browse_tab</code>.</p>
<pre dir="ltr">type browse_rec is record (
   word varchar2(64),
   doc_count number
);
type browse_tab is table of browse_rec index by binary_integer;
</pre></dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3597"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-F15E9153-F8E6-48A4-850C-272B0A8590E1"><!-- --></a>browse_id</dt>
<dd>
<p>Specify a numeric identifier between 0 and 2<sup>32</sup>. The rows produced for this browse have a value of in the <code class="codeph">browse_id</code> column in <code class="codeph">restab</code>. When you do not specify <code class="codeph">browse_id</code>, the default is 0.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3598"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-56AA0E92-5DA6-43A1-AC9D-1C0431CAD6FB"><!-- --></a>numwords</dt>
<dd>
<p>Specify the number of words returned.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3599"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-6B6D00E7-C221-4EB1-B429-6BB4EFC9D387"><!-- --></a>direction</dt>
<dd>
<p>Specify the direction for the browse. You can specify one of:</p>
<div class="tblformal" id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-1195F840-931C-45DA-A590-40DB3B0ECEC9">
<table class="cellalignment3033" summary="This table describes direction for the browse.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3036" id="d107163e380">value</th>
<th class="cellalignment3037" id="d107163e383">behavior</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3038" id="d107163e388" headers="d107163e380">
<p><code class="codeph">BEFORE</code></p>
</td>
<td class="cellalignment3039" headers="d107163e388 d107163e383">
<p>Browse seed word and words alphabetically before the seed.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3038" id="d107163e396" headers="d107163e380">
<p><code class="codeph">AROUND</code></p>
</td>
<td class="cellalignment3039" headers="d107163e396 d107163e383">
<p>Browse seed word and words alphabetically before and after the seed.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3038" id="d107163e404" headers="d107163e380">
<p><code class="codeph">AFTER</code></p>
</td>
<td class="cellalignment3039" headers="d107163e404 d107163e383">
<p>Browse seed word and words alphabetically after the seed.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Symbols <code class="codeph">CTX_QUERY.BROWSE_BEFORE</code>, <code class="codeph">CTX_QUERY.BROWSE_AROUND</code>, and <code class="codeph">CTX_QUERY.BROWSE_AFTER</code> are defined for these literal values as well.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3600"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-ED57DD4C-3990-4CA4-B06B-25DDBB40926E__GUID-CBAC941A-97AB-4082-B542-ADA58A536E6B"><!-- --></a>part_name</dt>
<dd>
<p>Specify the name of the index partition to browse.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<p>Browsing Words with Result Table</p>
<pre dir="ltr">begin
ctx_query.browse_words(&#39;myindex&#39;,&#39;dog&#39;,&#39;myres&#39;,numwords=&gt;5,direction=&gt;&#39;AROUND&#39;);
end;

select word, doc_count from myres order by word;

WORD       DOC_COUNT
--------   ----------
CZAR       15
DARLING    5
DOC        73
DUNK       100
EAR        3
</pre>
<p>Browsing Words with Result Array</p>
<pre dir="ltr">set serveroutput on;
declare
  resarr ctx_query.browse_tab;
begin
ctx_query.browse_words(&#39;myindex&#39;,&#39;dog&#39;,resarr,5,CTX_QUERY.BROWSE_AROUND);
for i in 1..resarr.count loop
  dbms_output.put_line(resarr(i).word || &#39;:&#39; || resarr(i).doc_count);
end loop;
end;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="CCREF23932"></a><a id="CCREF23933"></a><a id="CCREF0904"></a>
<div class="props_rev_3"><a id="GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF"></a>
<h2 id="CCREF-GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF" class="sect2"><span class="enumeration_section">12.2</span> COUNT_HITS</h2>
<div>
<div class="section">
<p>Returns the number of hits for the specified query. You can call <code class="codeph">COUNT_HITS</code> in exact or estimate mode. Exact mode returns the exact number of hits for the query. Estimate mode returns an upper-bound estimate but runs faster than exact mode.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<p>Syntax 1</p>
<pre dir="ltr">exec CTX_QUERY.COUNT_HITS( 
    index_name  IN VARCHAR2, 
    text_query  IN VARCHAR2, 
    exact       IN BOOLEAN  DEFAULT TRUE,
    part_name   IN VARCHAR2 DEFAULT NULL
) RETURN NUMBER; 
</pre>
<p>Syntax 2</p>
<pre dir="ltr">exec CTX_QUERY.COUNT_HITS_CLOB_QUERY(
    index_name  IN VARCHAR2,
    text_query  IN CLOB,
    exact       IN BOOLEAN DEFAULT TRUE,
    part_name   IN VARCHAR2 DEFAULT NULL
) RETURN NUMBER; 
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3601"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF__GUID-9088885D-F8AD-449C-942D-2E7E4ED873EE"><!-- --></a>index_name</dt>
<dd>
<p>Specify the index name.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3602"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF__GUID-096C3849-F1D1-4BED-99F2-2E7146FAC6A3"><!-- --></a>text_query</dt>
<dd>
<p>Specify the query.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3603"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF__GUID-9623A3D6-16F5-4335-894E-D333902AA465"><!-- --></a>exact</dt>
<dd>
<p>Specify <code class="codeph">TRUE</code> for an exact count. Specify <code class="codeph">FALSE</code> for an upper-bound estimate.</p>
<p>Specifying <code class="codeph">FALSE</code> returns a less accurate number but runs faster. Specifying <code class="codeph">FALSE</code> might return a number which is too high if rows have been updated or deleted since the last <code class="codeph">FULL</code> index optimize. Optimizing in full mode removes these false hits, and then <code class="codeph">EXACT</code> set to <code class="codeph">FALSE</code> will return the same number as <code class="codeph">EXACT</code> set to <code class="codeph">TRUE</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3604"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-E7FF0A48-E048-4187-A68D-17BD8387F3CF__GUID-8862D7CB-4EED-4F67-83FD-F7346EB8DF84"><!-- --></a>part_name</dt>
<dd>
<p>Specify the name of the index partition to query.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p>If the query contains structured criteria, then you should use <code class="codeph">SELECT COUNT(*)</code>.</p>
<p>If the index was created with the <a id="d107163e574" class="indexterm-anchor"></a><a id="d107163e578" class="indexterm-anchor"></a><a id="d107163e580" class="indexterm-anchor"></a><code class="codeph">TRANSACTIONAL</code> parameter, then <code class="codeph">COUNT_HITS</code> will include pending rowids as well as those that have been synchronized.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23934"></a><a id="CCREF23935"></a><a id="CCREF23936"></a><a id="CCREF23937"></a><a id="CCREF23938"></a><a id="CCREF0906"></a>
<div class="props_rev_3"><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8"></a>
<h2 id="CCREF-GUID-93206799-20F2-468C-A7E9-AF364EC011E8" class="sect2"><span class="enumeration_section">12.3</span> EXPLAIN</h2>
<div>
<div class="section">
<p><a id="d107163e650" class="indexterm-anchor"></a><a id="d107163e652" class="indexterm-anchor"></a><a id="d107163e656" class="indexterm-anchor"></a><a id="d107163e660" class="indexterm-anchor"></a><a id="d107163e664" class="indexterm-anchor"></a><a id="d107163e668" class="indexterm-anchor"></a><a id="d107163e672" class="indexterm-anchor"></a><a id="d107163e676" class="indexterm-anchor"></a><a id="d107163e680" class="indexterm-anchor"></a>Use <code class="codeph">CTX_QUERY.EXPLAIN</code> to generate explain plan information for a query expression. The <code class="codeph">EXPLAIN</code> plan provides a graphical representation of the parse tree for a Text query expression. This information is stored in a result table.</p>
<p>This procedure does <span class="italic">not</span> execute the query. Instead, this procedure can tell you how a query is expanded and parsed before you enter the query. This is especially useful for stem, wildcard, thesaurus, fuzzy, soundex, or about queries. Parse trees also show the following information:</p>
<ul style="list-style-type: disc;">
<li>
<p>Order of execution (precedence of operators)<a id="d107163e701" class="indexterm-anchor"></a><a id="d107163e705" class="indexterm-anchor"></a></p>
</li>
<li>
<p><code class="codeph">ABOUT</code> query normalization</p>
</li>
<li>
<p>Query expression optimization</p>
</li>
<li>
<p>Stop-word transformations</p>
</li>
<li>
<p>Breakdown of composite-word tokens</p>
</li>
</ul>
<p>Knowing how Oracle Text evaluates a query is useful for refining and debugging queries. You can also design your application so that it uses the explain plan information to help users write better queries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<p>Syntax 1</p>
<pre dir="ltr">exec CTX_QUERY.EXPLAIN(
</pre>
<pre dir="ltr">    index_name     IN VARCHAR2,
    text_query     IN VARCHAR2,
    explain_table  IN VARCHAR2,
    sharelevel     IN NUMBER DEFAULT 0,
    explain_id     IN VARCHAR2 DEFAULT NULL,
    part_name      IN VARCHAR2 DEFAULT NULL
</pre>
<pre dir="ltr">);
</pre>
<p>Syntax 2</p>
<pre dir="ltr">exec CTX_QUERY.EXPLAIN_CLOB_QUERY(
    index_name     IN VARCHAR2,
    text_query     IN CLOB,
    explain_table  IN VARCHAR2,
    sharelevel     IN NUMBER DEFAULT 0,
    explain_id     IN VARCHAR2 DEFAULT NULL,
    part_name      IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3605"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-21FF4880-919D-4C50-824D-8DFB2CAD7056"><!-- --></a>index_name</dt>
<dd>
<p>Specify the name of the index to be queried.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3606"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-A5E9B005-EFD9-4703-A32D-3D1B7AF64CC8"><!-- --></a>text_query</dt>
<dd>
<p>Specify the query expression to be used as criteria for selecting rows.</p>
<p>When you include a wildcard, fuzzy, or soundex operator in <code class="codeph">text_query</code>, this procedure looks at the index tables to determine the expansion.</p>
<p>Wildcard, fuzzy (?), and soundex (!) expression feedback does not account for lazy deletes as in regular queries.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3607"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-1F1C346B-A4ED-4ED4-86C9-934BB502553F"><!-- --></a>explain_table</dt>
<dd>
<p>Specify the name of the table used to store representation of the parse tree for <span class="italic">text_query</span>. You must have at least <code class="codeph">INSERT</code> and <code class="codeph">DELETE</code> privileges on the table used to store the results from <code class="codeph">EXPLAIN</code>.</p>
<div class="infoboxnotealso" id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-17D1D98E-6F8B-482F-BE9C-94EDA5D9D82D">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="arestab.htm#GUID-DB547ACB-B4C7-44DD-B642-E693DB66B101">EXPLAIN Table</a>&#34;</span> in <a href="arestab.htm#GUID-FF9744A0-D81C-45B1-8289-B42DC4211F75">Oracle Text Result Tables</a> for more information about the structure of the explain table.</p>
</div>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3608"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-D840A8D0-A5DB-4C22-BE71-E67108994ADC"><!-- --></a>sharelevel</dt>
<dd>
<p>Specify whether <code class="codeph">explain_table</code> is shared by multiple <code class="codeph">EXPLAIN</code> calls. Specify 0 for exclusive use and 1 for shared use. Default is 0 (single-use).</p>
<p>When you specify 0, the system automatically truncates the result table before the next call to <code class="codeph">EXPLAIN</code>.</p>
<p>When you specify 1 for shared use, this procedure does not truncate the result table. Only results with the same <code class="codeph">explain_id</code> are updated. When no results with the same <code class="codeph">explain_id</code> exist, new results are added to the <code class="codeph">EXPLAIN</code> table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3609"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-4B1D60B7-FB4D-43E1-871D-142DD79BDB3F"><!-- --></a>explain_id</dt>
<dd>
<p>Specify a name that identifies the explain results returned by an <code class="codeph">EXPLAIN</code> procedure when more than one <code class="codeph">EXPLAIN</code> call uses the same shared <code class="codeph">EXPLAIN</code> table. Default is <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3610"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-93206799-20F2-468C-A7E9-AF364EC011E8__GUID-2003F51E-8A85-4322-BCF6-DC23B163FFCB"><!-- --></a>part_name</dt>
<dd>
<p>Specify the name of the index partition to query.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<p>Creating the Explain Table <a id="d107163e846" class="indexterm-anchor"></a></p>
<p>To create an explain table called <code class="codeph">test_explain</code> for example, use the following SQL statement:</p>
<pre dir="ltr">create table test_explain(
         explain_id varchar2(30),
         id number,
         parent_id number,
         operation varchar2(30),
         options varchar2(30),
         object_name varchar2(64),
         position number,
         cardinality number);
</pre>
<p>Running CTX_QUERY.EXPLAIN<a id="d107163e859" class="indexterm-anchor"></a></p>
<p>To obtain the expansion of a query expression such as <span class="italic">comp% OR ?smith</span>, use <code class="codeph">CTX_QUERY.EXPLAIN</code> as follows:</p>
<pre dir="ltr">ctx_query.explain(
         index_name =&gt; &#39;newindex&#39;,
         text_query =&gt; &#39;comp% OR ?smith&#39;,
         explain_table =&gt; &#39;test_explain&#39;,
         sharelevel =&gt; 0,
         explain_id =&gt; &#39;Test&#39;);
</pre>
<p>Retrieving Data from Explain <a id="d107163e875" class="indexterm-anchor"></a>Table</p>
<p>To read the explain table, you can select the columns as follows:</p>
<pre dir="ltr">select explain_id, id, parent_id, operation, options, object_name, position
from test_explain order by id;
</pre>
<p>The output is ordered by ID to simulate a hierarchical query:</p>
<pre dir="ltr">EXPLAIN_ID    ID PARENT_ID OPERATION    OPTIONS OBJECT_NAME POSITION 
----------- ---- --------- ------------ ------- ----------- -------- 
Test           1         0 OR           NULL    NULL          1 
Test           2         1 EQUIVALENCE  NULL    COMP%         1
Test           3         2 WORD         NULL    COMPTROLLER   1 
Test           4         2 WORD         NULL    COMPUTER      2 
Test           5         1 EQUIVALENCE  (?)     SMITH         2 
Test           6         5 WORD         NULL    SMITH         1 
Test           7         5 WORD         NULL    SMYTHE        2 
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Restrictions</p>
<p><code class="codeph">CTX_QUERY.EXPLAIN</code> does not support the use of query templates.</p>
<p>You cannot use <code class="codeph">CTX_QUERY.EXPLAIN</code> with remote queries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><a href="cqoper.htm#GUID-6410B783-FC9A-4C99-B3AF-9E0349AA43D1">Oracle Text CONTAINS Query Operators</a></p>
<p><a href="astoptrn.htm#GUID-E99976BC-6C0A-4B71-B56B-43E6BBF2865F">Stopword Transformations in Oracle Text</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23939"></a><a id="CCREF23940"></a><a id="CCREF23941"></a><a id="CCREF23942"></a><a id="CCREF23943"></a><a id="CCREF0908"></a>
<div class="props_rev_3"><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B"></a>
<h2 id="CCREF-GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B" class="sect2"><span class="enumeration_section">12.4</span> HFEEDBACK</h2>
<div>
<div class="section">
<p>In English or French, this procedure generates hierarchical query feedback information (broader term, narrower term, and related term) for the specified query.</p>
<p>Broader term, narrower term, and related term information is obtained from the knowledge base. However, only knowledge base terms that are also in the index are returned as query feedback information. This increases the chances that terms returned from <code class="codeph">HFEEDBACK</code> produce hits over the currently indexed document set.</p>
<p>Hierarchical query feedback information is useful for suggesting other query terms to the user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<p>Syntax 1</p>
<pre dir="ltr">exec CTX_QUERY.HFEEDBACK(
           index_name     IN VARCHAR2,
           text_query     IN VARCHAR2,
           feedback_table IN VARCHAR2,
           sharelevel     IN NUMBER DEFAULT 0,
           feedback_id    IN VARCHAR2 DEFAULT NULL,
           part_name      IN VARCHAR2 DEFAULT NULL
);
</pre>
<p>Syntax 2</p>
<pre dir="ltr">exec CTX_QUERY.HFEEDBACK_CLOB_QUERY(
           index_name     IN VARCHAR2,
           text_query     IN CLOB,
           feedback_table IN VARCHAR2,
           sharelevel     IN NUMBER DEFAULT 0,
           feedback_id    IN VARCHAR2 DEFAULT NULL,
           part_name      IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3611"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-0F18BCDB-28A2-4CEF-B736-F49FD02EEC2C"><!-- --></a>index_name</dt>
<dd>
<p>Specify the name of the index for the text column to be queried.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3612"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-351395DF-C382-4666-A1F9-8FFE5C82E8B1"><!-- --></a>text_query</dt>
<dd>
<p>Specify the query expression to be used as criteria for selecting rows.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3613"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-36B62F2C-9CC3-4147-BE8A-67E78D9E7D0B"><!-- --></a>feedback_table</dt>
<dd>
<p>Specify the name of the table used to store the feedback terms.</p>
<div class="infoboxnotealso" id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-1CA545DC-6FC4-4432-A55E-A0E0DE78A76F">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="arestab.htm#GUID-9ECCF6AE-DC02-48DF-AE85-3237B3CC3078">HFEEDBACK Table</a>&#34;</span> in <a href="arestab.htm#GUID-FF9744A0-D81C-45B1-8289-B42DC4211F75">Oracle Text Result Tables</a> for more information about the structure of the explain table.</p>
</div>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3614"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-24D9F2B0-F098-4269-8F76-743614354F20"><!-- --></a>sharelevel</dt>
<dd>
<p>Specify whether <code class="codeph">feedback_table</code> is shared by multiple <code class="codeph">HFEEDBACK</code> calls. Specify 0 for exclusive use and 1 for shared use. Default is 0 (single-use).</p>
<p>When you specify 0, the system automatically truncates the feedback table before the next call to <code class="codeph">HFEEDBACK</code>.</p>
<p>When you specify 1 for shared use, this procedure does not truncate the feedback table. Only results with the same <code class="codeph">feedback_id</code> are updated. When no results with the same <tt>feedback_id</tt> exist, new results are added to the feedback table.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3615"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-109137CC-D048-41FA-AB71-7051E751EAC9"><!-- --></a>feedback_id</dt>
<dd>
<p>Specify a value that identifies the feedback results returned by a call to <code class="codeph">HFEEDBACK</code> when more than one <code class="codeph">HFEEDBACK</code> call uses the same shared feedback table. Default is <code class="codeph">NULL</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3616"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-62725A79-685C-4359-B115-104D731D9CBB"><!-- --></a>part_name</dt>
<dd>
<p>Specify the name of the index partition to query.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<p>Create HFEEDBACK Result Table <a id="d107163e1096" class="indexterm-anchor"></a></p>
<p>Create a result table to use with <code class="codeph">CTX_QUERY.HFEEDBACK</code> as follows:</p>
<pre dir="ltr">  CREATE TABLE restab ( 
    feedback_id VARCHAR2(30), 
    id          NUMBER, 
    parent_id   NUMBER, 
    operation   VARCHAR2(30), 
    options     VARCHAR2(30), 
    object_name VARCHAR2(80), 
    position    NUMBER, 
    bt_feedback ctxsys.ctx_feedback_type, 
    rt_feedback ctxsys.ctx_feedback_type, 
    nt_feedback ctxsys.ctx_feedback_type, 
    NESTED TABLE bt_feedback STORE AS res_bt, 
    NESTED TABLE rt_feedback STORE AS res_rt, 
    NESTED TABLE nt_feedback STORE AS res_nt
 ; 
 
</pre>
<p><a href="arestab.htm#GUID-DDD28FB2-A0E7-4E24-A8F9-5D0F7BE8AFD6">CTX_FEEDBACK_TYPE</a> is<a id="d107163e1112" class="indexterm-anchor"></a> a system-defined type in the <code class="codeph">CTXSYS</code> schema.</p>
<div class="infoboxnotealso" id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-8D5222DC-E1AA-454C-9E82-45306A3E379E">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="arestab.htm#GUID-9ECCF6AE-DC02-48DF-AE85-3237B3CC3078">HFEEDBACK Table</a>&#34;</span> in <a href="arestab.htm#GUID-FF9744A0-D81C-45B1-8289-B42DC4211F75">Oracle Text Result Tables</a> for more information about the structure of the <code class="codeph">HFEEDBACK</code> table.</p>
</div>
<p>Call CTX_QUERY.HFEEDBACK</p>
<p>The following code calls the <code class="codeph">HFEEDBACK</code> procedure with the query <span class="italic">computer industry</span>.</p>
<pre dir="ltr">BEGIN 
ctx_query.hfeedback (index_name     =&gt; &#39;my_index&#39;, 
                     text_query     =&gt; &#39;computer industry&#39;, 
                     feedback_table =&gt; &#39;restab&#39;, 
                     sharelevel     =&gt; 0, 
                     feedback_id    =&gt; &#39;query10&#39; 
                    ); 
END; 
</pre>
<p>Select From the Result Table</p>
<p>The following code extracts the feedback data from the result table. It extracts broader term, narrower term, and related term feedback separately from the nested tables.</p>
<pre dir="ltr">DECLARE 
  i NUMBER; 
BEGIN 
  FOR frec IN ( 
    SELECT object_name, bt_feedback, rt_feedback, nt_feedback  
    FROM restab 
    WHERE feedback_id = &#39;query10&#39; AND object_name IS NOT NULL 
  ) LOOP 
 
    dbms_output.put_line(&#39;Broader term feedback for &#39; || frec.object_name || 
&#39;:&#39;); 
    i := frec.bt_feedback.FIRST; 
    WHILE i IS NOT NULL LOOP 
      dbms_output.put_line(frec.bt_feedback(i).text); 
      i := frec.bt_feedback.NEXT(i); 
    END LOOP; 
 
    dbms_output.put_line(&#39;Related term feedback for &#39; || frec.object_name || 
&#39;:&#39;); 
    i := frec.rt_feedback.FIRST; 
    WHILE i IS NOT NULL LOOP 
      dbms_output.put_line(frec.rt_feedback(i).text); 
      i := frec.rt_feedback.NEXT(i); 
    END LOOP; 
 
    dbms_output.put_line(&#39;Narrower term feedback for &#39; || frec.object_name || 
&#39;:&#39;); 
    i := frec.nt_feedback.FIRST; 
    WHILE i IS NOT NULL LOOP 
      dbms_output.put_line(frec.nt_feedback(i).text); 
      i := frec.nt_feedback.NEXT(i); 
    END LOOP; 
 
  END LOOP; 
END;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Sample Output</p>
<p>The following output is for the preceding example, which queries on <span class="italic">computer industry</span>:</p>
<pre dir="ltr">Broader term feedback for computer industry: 
hard sciences 
Related term feedback for computer industry: 
computer networking 
electronics 
knowledge 
library science 
mathematics 
optical technology 
robotics 
satellite technology 
semiconductors and superconductors 
symbolic logic 
telecommunications industry 
Narrower term feedback for computer industry: 
ABEND - abnormal end of task 
AT&amp;T Starlans 
ATI Technologies, Incorporated 
ActivCard 
Actrade International Ltd. 
Alta Technology 
Amiga Format 
Amiga Library Services 
Amiga Shopper 
Amstrat Action 
Apple Computer, Incorporated
..
</pre>
<div class="infobox-note" id="GUID-0CB5C465-1319-4AFE-B76C-2B99C522851B__GUID-494C6B70-3F68-493A-B6BD-6FC0E6EE813F">
<p class="notep1">Note:</p>
<p>The <code class="codeph">HFEEDBACK</code> information you obtain depends on the contents of your index and knowledge base and as such might differ from the sample shown.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Restrictions</p>
<p><code class="codeph">CTX_QUERY.HFEEDBACK</code> does not support the use of query templates.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23944"></a>
<div class="props_rev_3"><a id="GUID-BBA881E3-5CE7-4E95-94F0-E4116998C69A"></a>
<h2 id="CCREF-GUID-BBA881E3-5CE7-4E95-94F0-E4116998C69A" class="sect2"><span class="enumeration_section">12.5</span> REMOVE_SQE</h2>
<div>
<div class="section">
<p><a id="d107163e1227" class="indexterm-anchor"></a><a id="d107163e1231" class="indexterm-anchor"></a><a id="d107163e1233" class="indexterm-anchor"></a>The <code class="codeph">CTX_QUERY.REMOVE_SQE</code> procedure removes the specified stored query expression.</p>
<p><code class="codeph">CTX_QUERY.REMOVE_SQE</code> can be used to remove both session-duration and persistent SQEs. See <span class="q">&#34;<a href="cqrypkg.htm#GUID-C966324F-9B3C-4770-9C98-30CE5A678051">STORE_SQE</a>&#34;</span>.</p>
<p>Since the <code class="codeph">query_name</code> namespace is shared between the persistent and session-duration SQEs, it is unnecessary to specify the duration of the SQE to be removed.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">CTX_QUERY.REMOVE_SQE(
          query_name IN VARCHAR2
);
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3617"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BBA881E3-5CE7-4E95-94F0-E4116998C69A__GUID-3C1E2721-68DA-46FF-ADC0-AD07484BE07C"><!-- --></a>query_name</dt>
<dd>
<p>Specify the name of the stored or session-duration query expression to be removed.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<pre dir="ltr">begin
  ctx_query.remove_sqe(&#39;dis1&#39;);
  ctx_query.remove_sqe(&#39;dis2&#39;);
end;
/
</pre></div>
<!-- class="section" --></div>
</div>
<a id="CCREF24104"></a>
<div class="props_rev_3"><a id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058"></a>
<h2 id="CCREF-GUID-EBB44B13-1648-444D-BACA-134C3EBA2058" class="sect2"><span class="enumeration_section">12.6</span> RESULT_SET</h2>
<div>
<div class="section">
<p>This procedure executes an XML query and generates a result set in XML. The Result Set Interface can<a id="d107163e1327" class="indexterm-anchor"></a><a id="d107163e1329" class="indexterm-anchor"></a> return data views that are difficult to express in SQL.</p>
<div class="infoboxnotealso" id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__GUID-32C760EB-7330-4012-B495-F508786461B3">
<p class="notep1">See Also:</p>
<p><a class="olink CCAPP9537" target="_blank" href="../CCAPP/GUID-EDD0B6C6-379F-45C3-A8E5-7475D5FD7209.htm#CCAPP9537"><span class="italic">Oracle Text Application Developer&#39;s Guide</span></a> for details on how to use the Result Set Interface</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">CTX_QUERY.RESULT_SET (
   index_name            IN VARCHAR2,
   query                 IN VARCHAR2,
   result_set_descriptor IN CLOB,
   result_set            IN OUT NOCOPY CLOB,
   part_name             IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3618"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__GUID-AE3E4981-AE17-4875-9707-D8C570CE26EB"><!-- --></a>index_name</dt>
<dd>
<p>Specify the index against which to execute the query.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3619"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__GUID-F744F062-4F26-4D51-B35E-EFF7BB56130C"><!-- --></a>query</dt>
<dd>
<p>Specify the query string.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3620"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__GUID-BB1F17A0-C69F-44E4-B473-BF94D750190D"><!-- --></a>result_set_descriptor</dt>
<dd>
<p>Specify the result set descriptor in XML. It describes what the result set should contain. See <span class="q">&#34;<a href="cqrypkg.htm#GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__BABFJGJB">The Input Result Set Descriptor</a>&#34;</span> for more details.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3621"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__GUID-C5351C8F-383C-4BB5-B519-4934749AB4BA"><!-- --></a>result_set</dt>
<dd>
<p>Specify the output result set. If this variable is <code class="codeph">NULL</code> on input, a session-duration temporary lob will be allocated and returned to the user. The user is responsible for deallocating this temporary lob. See <span class="q">&#34;<a href="cqrypkg.htm#GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__BABECFAB">The Output Result Set XML</a>&#34;</span> for more details.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3622"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__GUID-5BDD9548-F165-40F9-8C2E-2AB6E0A39461"><!-- --></a>part_name</dt>
<dd>
<p>Specify the index partition name. If the index is global, <code class="codeph">part_name</code> must be <code class="codeph">NULL</code>. If the index is partitioned and <code class="codeph">part_name</code> is not <code class="codeph">NULL</code>, then the query will only be evaluated for the given partition. If the index is partitioned and <code class="codeph">part_name</code> is <code class="codeph">NULL</code>, then the query will be evaluated for all partitions.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section" id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__BABFJGJB">
<p class="subhead2">The Input Result Set Descriptor</p>
<p>The result set descriptor is an XML message which describes what to calculate for the result set. The elements present in the result set descriptor and the order in which they occur serve as a simple template, specifying what to include in the output result set. That is, there should be the list of hit rowids, then a count, then a token count, and so on. The attributes of the elements specify the parameters and options to the specific operations, such as number of hits in the list of rowids, estimate versus exact count, and so on.</p>
<p>The result set descriptor itself is XML conforming to the following DTD:</p>
<pre dir="ltr">&lt;!ELEMENT ctx_result_set_descriptor (hitlist?, group*, count?)&gt;
&lt;!ELEMENT hitlist (rowid?, score?, sdata*)&gt;
&lt;!ELEMENT group(count?)&gt;
&lt;!ELEMENT count EMPTY&gt;
&lt;!ELEMENT rowid EMPTY&gt;
&lt;!ELEMENT score EMPTY&gt;
&lt;!ELEMENT sdata EMPTY&gt;
&lt;!ATTLIST group sdata CDATA #REQUIRED&gt;
&lt;!ATTLIST hitlist start_num_hit integer #REQUIRED&gt;
&lt;!ATTLIST hitlist end_num_hit integer #REQUIRED&gt;
&lt;!ATTLIST hitlist order PCDATA #IMPLIED&gt;
&lt;!ATTLIST count exact (TRUE|FALSE) &#34;FALSE&#34;&gt;
&lt;!ATTLIST sdata name CDATA #REQUIRED&gt;
</pre>
<p>The following is a description of the possible XML elements for the result set descriptor:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ctx_result_set_descriptor</code></p>
<p>This is the root element for the result set descriptor. The parent element is none, as are the available attributes.</p>
<p>The possible child elements are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Zero or more <code class="codeph">hitlist</code> elements.</p>
</li>
<li>
<p>Zero or more <code class="codeph">group</code> elements.</p>
</li>
<li>
<p>At most one <code class="codeph">count</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">group</code></p>
<p>The <code class="codeph">group</code> element causes the generated result set to include a group breakdown. In other words, a breakdown of the results by <code class="codeph">SDATA</code> section values. The parent element is <code class="codeph">ctx_result_set_descriptor</code>, and the available attributes are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">sdata</code></p>
<p>Specifies the name of the <code class="codeph">SDATA</code> section to use for grouping. It is required.</p>
</li>
</ul>
<p>Possible child elements of <code class="codeph">group</code> are:</p>
<ul style="list-style-type: disc;">
<li>
<p>At most one <code class="codeph">count</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">hitlist</code></p>
<p>The <code class="codeph">hitlist</code> element controls inclusion of a list of hit documents. The parent element is <code class="codeph">ctx_result_set_descriptor</code>, and the available attributes are:</p>
<p>The possible child elements of <code class="codeph">order</code> are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">start_hit_num</code></p>
<p>This specifies the starting document hit to be included in the generated result set. This can be set to any positive integer less than or equal to 16000. For example, if <code class="codeph">start_hit_num</code> is 21, then the result set will include document hits starting from the 21st document hit. This element is required.</p>
</li>
<li>
<p><code class="codeph">end_hit_num</code></p>
<p>This specifies the last document hit to be included in the generated result set. This can be set to any positive integer less than or equal to 16000. For example, if <code class="codeph">end_hit_num</code> is 40, then the result set will include document hits up to the 40th document hit. This element is required.</p>
<p>The possible child elements for <code class="codeph">hitlist</code> are:</p>
</li>
<li>
<p>At most one <code class="codeph">rowid</code> element.</p>
</li>
<li>
<p>At most one <code class="codeph">score</code> element.</p>
</li>
<li>
<p>At most one <code class="codeph">sdata</code> element.</p>
</li>
<li>
<p>At most one <code class="codeph">snippet</code> element.</p>
</li>
<li>
<p><code class="codeph">order</code></p>
<p>This is an optional attribute that specifies the order for the documents in the generated result set. The value is a list similar to a SQL <code class="codeph">ORDER</code> <code class="codeph">BY</code> statement, except that, instead of column names, they can either be <code class="codeph">SCORE</code> or <code class="codeph">SDATA</code> section names. In the following example, <code class="codeph">MYDATE</code> and <code class="codeph">MYPRICE</code> are the <code class="codeph">SDATA</code> section names:</p>
<pre dir="ltr">(order = &#34;SCORE DESC, MYDATE, MYPRICE DESC&#34;)
</pre></li>
</ul>
<ul style="list-style-type: disc;">
<li>
<p>At most one <code class="codeph">rowid</code> element.</p>
</li>
<li>
<p>At most one <code class="codeph">score</code> element.</p>
</li>
<li>
<p>At most one <code class="codeph">sdata</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">count</code></p>
<p>This element causes the generated result set to include a count of the number of hit documents. The parent elements are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ctx_result_set_descriptor</code></p>
</li>
<li>
<p><code class="codeph">group</code></p>
</li>
</ul>
<p>The available attributes for <code class="codeph">count</code> are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">exact</code></p>
<p>This is to estimate mode. Set to <code class="codeph">true</code> or <code class="codeph">false</code>. It is required, and the default is <code class="codeph">false</code>.</p>
</li>
</ul>
<p>The possible child elements for <code class="codeph">count</code> are none.</p>
</li>
<li>
<p><code class="codeph">rowid</code></p>
<p>This child element causes the generated result set to include rowid information for each hit. The parent element is <code class="codeph">hitlist</code>. There are no attributes and no possible child elements.</p>
</li>
<li>
<p><code class="codeph">score</code></p>
<p>This child element causes the generated result set to include score information for each hit.</p>
<ul style="list-style-type: disc;">
<li>
<p>The parent element is <code class="codeph">hitlist</code>.</p>
</li>
<li>
<p>There are no available attributes, and no possible child elements.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">sdata</code></p>
<p>This child element causes the generated result set to include <code class="codeph">sdata</code> values for each hit.</p>
<ul style="list-style-type: disc;">
<li>
<p>The parent element is <code class="codeph">hitlist</code>.</p>
</li>
<li>
<p>The available attribute is <code class="codeph">name</code>. This specifies the name of the <code class="codeph">sdata</code> section. It is required.</p>
</li>
<li>
<p>There are no child elements.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section" id="GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__BABECFAB">
<p class="subhead2">The Output Result Set XML</p>
<p>The output result set XML is XML conforming to the following DTD:</p>
<pre dir="ltr">&lt;!ELEMENT ctx_result_set (hitlist?, groups*, count?)&gt;
&lt;!ELEMENT hitlist (hit*)&gt;
&lt;!ELEMENT hit(rowid?, score?, sdata*)&gt;
&lt;!ELEMENT groups (group*)&gt;
&lt;!ELEMENT group (count?)&gt;
&lt;!ELEMENT count CDATA&gt;
&lt;!ELEMENT rowid CDATA&gt;
&lt;!ELEMENT score CDATA&gt;
&lt;!ELEMENT sdata CDATA&gt;
&lt;!ATTLIST groups sdata CDATA #REQUIRED&gt;
&lt;!ATTLIST group value CDATA #REQUIRED&gt;
&lt;!ATTLIST sdata name CDATA #REQUIRED&gt;
</pre>
<p>The following is a description of the list of possible XML elements for the output result set:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ctx_result_set</code></p>
<p>This is the root element for the generated result set. There are no attributes. The parent is none. The possible child elements are:</p>
<ul style="list-style-type: disc;">
<li>
<p>At most one <code class="codeph">hitlist</code> element.</p>
</li>
<li>
<p>Zero or more <code class="codeph">groups</code> elements.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">groups</code></p>
<p>This delimits the start of a group breakdown section. The parent element is <code class="codeph">ctx_result_set</code>. The available attributes are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">sdata</code></p>
<p>This is the name of the <code class="codeph">sdata</code> section used for grouping.</p>
</li>
</ul>
<p>The possible child elements are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Zero or more <code class="codeph">group</code> elements.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">group</code></p>
<p>This delimits the start of a <code class="codeph">GROUP</code> <code class="codeph">BY</code> value. The parent element is the <code class="codeph">groups</code> element. The available attributes are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">value</code></p>
<p>This is the value of the <code class="codeph">sdata</code> section.</p>
</li>
</ul>
<p>The possible child elements are at most one <code class="codeph">count</code> element.</p>
</li>
<li>
<p><code class="codeph">hitlist</code></p>
<p>This delimits the start of <code class="codeph">hitlist</code> information. The parent element is <code class="codeph">ctx_result_set</code>, while the children are zero or more <code class="codeph">hit</code> elements. There are no attributes.</p>
</li>
<li>
<p><code class="codeph">hit</code></p>
<p>This delimits the start of the information for a particular document within a <code class="codeph">hitlist</code>. The parent element is <code class="codeph">hitlist</code>, and there are no available attributes. The possible child elements are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Zero or one <code class="codeph">rowid</code> elements.</p>
</li>
<li>
<p>Zero or one <code class="codeph">score</code> element.</p>
</li>
<li>
<p>Zero or one <code class="codeph">sdata</code> element.</p>
</li>
<li>
<p>Zero or one <code class="codeph">snippet</code> element.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">rowid</code></p>
<p>This is the rowid of the document, so the content is the rowid of the document. The parent element is the <code class="codeph">hit</code> element. There are no child elements, and no available attributes.</p>
</li>
<li>
<p><code class="codeph">score</code></p>
<p>This is the score of the document. The parent element is the hit element. The content is the numeric score. There are no available attributes, and no possible child elements.</p>
</li>
<li>
<p><code class="codeph">sdata</code></p>
<p>This is the <code class="codeph">SDATA</code> value or values for the document. The parent element is the <code class="codeph">hit</code> element, and the available attribute is <code class="codeph">name</code>, which is the name of the <code class="codeph">sdata</code> section. There are no possible child elements available. The content is the <code class="codeph">SDATA</code> section value, which, for <code class="codeph">DATE</code> values, is in the format &#34;YYYY-MM-DD HH24:MI:SS&#34;, depending upon the actual values being stored.</p>
</li>
<li>
<p><code class="codeph">count</code></p>
<p>This is the document hit count. The parent element is the <code class="codeph">ctx_result_set</code> element or the <code class="codeph">group</code> element. It contains the numeric hit count, and has no attributes, and no possible child elements.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<p>This call to <code class="codeph">CTX_QUERY.RESULT_SET</code> with the specified XML <code class="codeph">result_set_descriptor</code> will generate the following information in the form of XML:</p>
<ul style="list-style-type: disc;">
<li>
<p>top 20 hits displaying, score, rowid, author <code class="codeph">SDATA</code> section value, and pubDate <code class="codeph">SDATA</code> section value, order by pubDate <code class="codeph">SDATA</code> section value <code class="codeph">DESC</code> and score <code class="codeph">DESC</code></p>
</li>
<li>
<p>total doc hit count for the text query</p>
</li>
<li>
<p>counts group by pubDate <code class="codeph">SDATA</code> section values</p>
</li>
<li>
<p>counts group by author <code class="codeph">SDATA</code> section values</p>
</li>
</ul>
<pre dir="ltr">declare
  rs clob;
begin
  dbms_lob.createtemporary(rs, true, dbms_lob.session);
  ctx_query.result_set(&#39;docidx&#39;, &#39;oracle&#39;, &#39;
  <span class="bold">&lt;ctx_result_set_descriptor&gt;</span>  
   <span class="bold">&lt;count/&gt;</span>
   <span class="bold">&lt;hitlist start_hit_num=&#34;1&#34; end_hit_num=&#34;5&#34; order=&#34;pubDate desc, score desc&#34;&gt;</span>
     <span class="bold">&lt;score/&gt;</span>
     <span class="bold">&lt;rowid/&gt;</span>
     <span class="bold">&lt;sdata name=&#34;author&#34;/&gt;</span>
     <span class="bold">&lt;sdata name=&#34;pubDate&#34;/&gt;</span>
   <span class="bold">&lt;/hitlist&gt;</span>
   <span class="bold">&lt;group sdata=&#34;pubDate&#34;&gt;</span>
     <span class="bold">&lt;count/&gt;</span>
   <span class="bold">&lt;/group&gt;</span>
   <span class="bold">&lt;group sdata=&#34;author&#34;&gt;</span>
     <span class="bold">&lt;count/&gt;</span>
   <span class="bold">&lt;/group&gt;</span>
  <span class="bold">&lt;/ctx_result_set_descriptor&gt;</span>
&#39;, rs);
  dbms_lob.freetemporary(rs);
exception
  when others then
   dbms_lob.freetemporary(rs);
   raise;
end;
/
</pre>
<p>The XML output store in the result set output clob will resemble the following:</p>
<pre dir="ltr">&lt;ctx_result_set&gt;
  &lt;hitlist&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAC&lt;/rowid&gt;
      &lt;sdata name=&#34;AUTHOR&#34;&gt;John&lt;/sdata&gt;
      &lt;sdata name=&#34;PUBDATE&#34;&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAG&lt;/rowid&gt;
      &lt;sdata name=&#34;AUTHOR&#34;&gt;John&lt;/sdata&gt;
      &lt;sdata name=&#34;PUBDATE&#34;&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAK&lt;/rowid&gt;
      &lt;sdata name=&#34;AUTHOR&#34;&gt;John&lt;/sdata&gt;
      &lt;sdata name=&#34;PUBDATE&#34;&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAO&lt;/rowid&gt;
      &lt;sdata name=&#34;AUTHOR&#34;&gt;John&lt;/sdata&gt;
      &lt;sdata name=&#34;PUBDATE&#34;&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
    &lt;hit&gt;
      &lt;score&gt;3&lt;/score&gt;&lt;rowid&gt;AAAPoEAABAAAMWsAAS&lt;/rowid&gt;
      &lt;sdata name=&#34;AUTHOR&#34;&gt;John&lt;/sdata&gt;
      &lt;sdata name=&#34;PUBDATE&#34;&gt;2001-01-03 00:00:00&lt;/sdata&gt;
    &lt;/hit&gt;
  &lt;/hitlist&gt;
 
  &lt;count&gt;100&lt;/count&gt;
 
  &lt;groups sdata=&#34;PUBDATE&#34;&gt;
    &lt;group value=&#34;2001-01-01 00:00:00&#34;&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
    &lt;group value=&#34;2001-01-02 00:00:00&#34;&gt;&lt;count&gt;50&lt;/count&gt;&lt;/group&gt;
    &lt;group value=&#34;2001-01-03 00:00:00&#34;&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
  &lt;/groups&gt;
 
  &lt;groups sdata=&#34;AUTHOR&#34;&gt;
    &lt;group value=&#34;John&#34;&gt;&lt;count&gt;50&lt;/count&gt;&lt;/group&gt;
    &lt;group value=&#34;Mike&#34;&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
    &lt;group value=&#34;Steve&#34;&gt;&lt;count&gt;25&lt;/count&gt;&lt;/group&gt;
  &lt;/groups&gt;
 
&lt;/ctx_result_set&gt;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Limitations and Restrictions</p>
<p>The following limitations and restrictions apply for <code class="codeph">RESULT_SET</code>.</p>
<ul style="list-style-type: disc;">
<li>
<p>The Result Set Interface (RSI) is not supported with Virtual Private Database. (VPD is supported with the regular <code class="codeph">CONTAINS</code> query, but not with RSI.)</p>
</li>
<li>
<p>In order to execute the function, you must be able to query the base table.</p>
</li>
<li>
<p>If a VPD policy is active on the base table, the documents portion of the result set will not show any documents to which you are not entitled.</p>
</li>
<li>
<p>When a VPD policy is being used, aggregate measures such as count may not be accurate.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><a class="olink CCAPP9537" target="_blank" href="../CCAPP/GUID-EDD0B6C6-379F-45C3-A8E5-7475D5FD7209.htm#CCAPP9537"><span class="italic">Oracle Text Application Developer&#39;s Guide</span></a> for information on the XML Result Set Interface</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF24137"></a>
<div class="props_rev_3"><a id="GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2"></a>
<h2 id="CCREF-GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2" class="sect2"><span class="enumeration_section">12.7</span> RESULT_SET_DOCUMENT</h2>
<div>
<div class="section">
<p><code class="codeph">RESULT_SET_DOCUMENT</code> holds the result set document after the <code class="codeph">CONTAINS</code> query cursor is explicitly closed and if the query template has the &lt;ctx_result_set_descriptor&gt; element.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">CTX_QUERY.RESULT_SET_DOCUMENT(
   index_name            IN VARCHAR2,
   query                 IN VARCHAR2,
   result_set_descriptor IN CLOB,
   result_set            IN OUT NOCOPY CLOB,
   part_name             IN VARCHAR2 DEFAULT NULL
);
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3623"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2__GUID-6C228656-F0AF-4061-94A9-A44B4E3E05EA"><!-- --></a>index_name</dt>
<dd>
<p>Specify the index against which to execute the query.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3624"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2__GUID-100BC816-8122-40F7-8D5A-64006CE12A2D"><!-- --></a>query</dt>
<dd>
<p>Specify the query string.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3625"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2__GUID-C0429048-7F33-46B4-BACD-973B5EEACE5D"><!-- --></a>result_set_descriptor</dt>
<dd>
<p>Specify the result set descriptor in XML. It describes what the result set should contain. See <span class="q">&#34;<a href="cqrypkg.htm#GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__BABFJGJB">The Input Result Set Descriptor</a>&#34;</span> for more details.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3626"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2__GUID-0F3074C5-C2F3-4FAA-B271-6D1414C18676"><!-- --></a>result_set</dt>
<dd>
<p>Specify the output result set. If this variable is <code class="codeph">NULL</code> on input, a session-duration temporary lob will be allocated and returned to the user. The user is responsible for deallocating this temporary lob. See <span class="q">&#34;<a href="cqrypkg.htm#GUID-EBB44B13-1648-444D-BACA-134C3EBA2058__BABECFAB">The Output Result Set XML</a>&#34;</span> for more details.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3627"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-7E2CD41B-F392-4B50-A9E9-D88CAD51A9E2__GUID-6274EC88-4426-4EA8-9782-C70C5E363A68"><!-- --></a>part_name</dt>
<dd>
<p>Specify the index partition name. If the index is global, <code class="codeph">part_name</code> must be <code class="codeph">NULL</code>. If the index is partitioned and <code class="codeph">part_name</code> is not <code class="codeph">NULL</code>, then the query will only be evaluated for the given partition. If the index is partitioned and <code class="codeph">part_name</code> is <code class="codeph">NULL</code>, then the query will be evaluated for all partitions.</p>
</dd>
</dl>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23945"></a><a id="CCREF24105"></a><a id="CCREF0912"></a>
<div class="props_rev_3"><a id="GUID-C966324F-9B3C-4770-9C98-30CE5A678051"></a>
<h2 id="CCREF-GUID-C966324F-9B3C-4770-9C98-30CE5A678051" class="sect2"><span class="enumeration_section">12.8</span> STORE_SQE</h2>
<div>
<div class="section">
<p><a id="d107163e2190" class="indexterm-anchor"></a><a id="d107163e2194" class="indexterm-anchor"></a><a id="d107163e2198" class="indexterm-anchor"></a>This procedure creates either a stored or session-duration query expression (SQE). Only the query definition is stored.</p>
<p>SQEs are used to store the definition of a query without storing any results. Referencing the query with the <code class="codeph">CONTAINS</code> SQL operator references the definition of the query. In this way, SQEs make it easy for defining long or frequently used query expressions. Creating a session-duration SQE is useful for when you do not want the maintenance overhead of deleting unused or no longer needed SQEs.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Supported Operators</p>
<p>Stored query expressions support all of the <code class="codeph">CONTAINS</code> query operators. Stored query expressions also support all of the special characters and other components that can be used in a query expression, including other stored query expressions.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Privileges</p>
<p>Users are permitted to create and remove stored query expressions owned by them. Users are permitted to use stored query expressions owned by anyone. The <code class="codeph">CTXSYS</code> user can create or remove stored query expressions for any user.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<p>Syntax 1</p>
<pre dir="ltr">CTX_QUERY.STORE_SQE(
           query_name      IN VARCHAR2,
           text_query      IN VARCHAR2 
           duration        IN NUMBER default CTX_QUERY.DURATION_SESSION
);
</pre>
<p>Syntax 2</p>
<pre dir="ltr">CTX_QUERY.STORE_SQE_CLOB_SYNTAX(
           query_name      IN VARCHAR2, 
           text_query      IN CLOB      
           duration        IN NUMBER default CTX_QUERY.DURATION_SESSION
);
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3628"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C966324F-9B3C-4770-9C98-30CE5A678051__GUID-504A55DC-591B-4AFE-B22D-96A0F4F739C5"><!-- --></a>query_name</dt>
<dd>
<p>Specify the name of the stored query expression to be created.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3629"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C966324F-9B3C-4770-9C98-30CE5A678051__GUID-52CA8E9F-5737-481B-9F08-6A769BF7FF8E"><!-- --></a>text_query</dt>
<dd>
<p>Specify the query expression to be associated with <code class="codeph">query_name</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3630"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C966324F-9B3C-4770-9C98-30CE5A678051__GUID-260B6089-E77E-4066-BAB1-0DF61A151D70"><!-- --></a>duration</dt>
<dd>
<p>The possible values are <code class="codeph">DURATION_SESSION</code> and <code class="codeph">DURATION_PERSISTENT</code>.</p>
<ul style="list-style-type: disc;">
<li>
<p>When <code class="codeph">duration</code> is to set to <code class="codeph">DURATION_SESSION</code>, the stored query expression is stored in a PL/SQL package variable and is available for the session.</p>
</li>
<li>
<p>When <code class="codeph">duration</code> is to set to <code class="codeph">DURATION_PERSISTENT</code>, the stored query expression is stored in a database table, and can be referenced by other database sessions.</p>
</li>
<li>
<p>The <code class="codeph">query_name</code> namespace is shared between the persistent and session-duration SQEs. If you try to add a persistent or session-duration SQE with a name that is already used by another persistent or session-duration SQE, then an error will be raised.</p>
</li>
</ul>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3631"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-C966324F-9B3C-4770-9C98-30CE5A678051__GUID-018EC55E-823B-4472-97B8-FA494F0258D9"><!-- --></a>duration_persistent</dt>
<dd>
<p>When there is a CLOB query, specify that the duration is stored in a database table. This SQE must be deleted when it is no longer needed.</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">query_name</code> namespace is shared between the persistent and session-duration SQEs. If you try to add a persistent or session-duration SQE with a name that is already used by another persistent or session-duration SQE, then an error will be raised.</p>
</li>
</ul>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example</p>
<pre dir="ltr">begin
  ctx_query.store_sqe(&#39;dis1&#39;, &#39;flood&#39;, CTX_QUERY.DURATION_SESSION);
  ctx_query.store_sqe(&#39;dis2&#39;, &#39;tornado&#39;, CTX_QUERY.DURATION_PERSISTENT);
  ctx_query.store_sqe(&#39;dis3&#39;, &#39;fire&#39;)
end;
/
</pre></div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3021">
<tr>
<td class="cellalignment3040">
<table class="cellalignment3026">
<tr>
<td class="cellalignment3025"><a href="coutpkg.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3025"><a href="crptpkg.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3042">
<table class="cellalignment3024">
<tr>
<td class="cellalignment3025"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3025"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3025"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3025"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3025"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3025"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>