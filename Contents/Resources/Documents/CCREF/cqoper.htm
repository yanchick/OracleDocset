<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-3592"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Oracle%20Text%20CONTAINS%20Query%20Operators"></a><title>Oracle Text CONTAINS Query Operators</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="WITHIN operator, precedence, precedence of operators, altering, brackets, altering precedence, parentheses, ABOUT query, operator, ABOUT, case-sensitive, ABOUT queries, example, query, accumulate, , operator, accumulate operator, scoring, AND, AND operator, broader term operators, BT operator, BTG operator, BTP operator, BTI operator, broader term, homographs, in queries, disambiguators, in thesaural queries, CTXFILTERCACHE operator, translation term operator, TR operator, translation term, = operator, definemerge operator, definescore operator, equivalence operator, equivalence, ? operator, fuzzy, fuzzy operator, HASPATH operator, HASPATH, INPATH operator, INPATH, MDATA operator, MDATA, metadata, MINUS, - operator, MINUS operator, narrower term operators, NT operator, NTG operator, NTP operator, NTI operator, narrower term, proximity operator, see NEAR operator, NEAR operator, NEAR, max_span parameter in near operator, clump size in near operator, for NEAR operator, with other operators, with NEAR, logical operators, backward compatibility, highlighting, with NEAR operator, NOT operator, NOT, OR operator, OR, preferred term operator, PT operator, preferred term, related term operator, RT operator, related term, SDATA operator, SDATA, structured data, expansion operator, soundex, ! operator, stem, stem operator, $ operator, SQE operator, SQE, stored, stored queries, synonym operator, SYN operator, synonym, threshold operator, &gt; operator, threshold, translation term synonym operator, TRSYN operator, translation term synonym, top term operator, TT operator, top term, weighted, weight operator, * operator, weight, double-truncated queries, wildcard searches, improving performance, performance, WITHIN, section searching, tagged text, searching, zone section, querying, field section, sentence section, paragraph section, special section, attribute section, limitations, with within, nested, nested section searching, WITHIN example, visible flag in field sections, repeated, repeated field sections, SENTENCE keyword, PARAGRAPH keyword, attribute sections, XML documents"/>
<meta name="dcterms.created" content="2017-06-08T04:23:35Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Text Reference"/>
<meta name="dcterms.identifier" content="E41399-12"/>
<meta name="dcterms.isVersionOf" content="CCREF"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="cdatadic.htm" title="Previous" type="text/html"/>
<link rel="Next" href="cqspcl.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41399-12.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-6410B783-FC9A-4C99-B3AF-9E0349AA43D1"></a> <span id="PAGE" style="display:none;">8/31</span> <!-- End Header -->
<a id="CCREF99008"></a><a id="CCREF9908"></a><a id="CCREF0300"></a>
<h1 id="CCREF-GUID-6410B783-FC9A-4C99-B3AF-9E0349AA43D1" class="sect1"><span class="enumeration_chapter">3</span> Oracle Text CONTAINS Query Operators</h1>
<div>
<p><a id="d53900e52" class="indexterm-anchor"></a>This chapter describes operator precedence and provides descriptions, syntax, and examples for every <a href="csql.htm#GUID-827A6E7D-106E-4341-9398-2FF6ABB05E59">CONTAINS</a> operator.</p>
<p>This chapter contains the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="cqoper.htm#GUID-CB66A498-79BD-41EC-BF2F-43E1F2812721">Operator Precedence</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA">ABOUT</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50">ACCUMulate ( _ )</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D">AND (&amp;)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8">Broader Term (BT_ BTG_ BTP_ BTI)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A">CTXFILTERCACHE</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-F6773261-6BA0-4F99-A865-E2E3D827D058">DEFINEMERGE</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB">DEFINESCORE</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-BB03A0FF-3175-44F1-9EF4-A519CCC94154">EQUIValence (=)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-5BA618D7-45DA-4253-BB0D-313970EA7C5D">Fuzzy</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-37C8ADBE-CA2E-45EF-A1F3-F8587449E601">HASPATH</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581">INPATH</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-B995F693-A4AA-493D-A62D-6D79857BA50F">MDATA</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-BA076826-D208-49AF-B0CF-2216EA977AE4">MINUS (-)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-34606970-68BB-4B12-A145-42C937990265">MNOT</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-CAA9F98B-37D9-4B11-831F-7467602EE893">Narrower Term (NT_ NTG_ NTP_ NTI)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-2F5C7BBD-AA70-412D-B601-415283E62C4D">NDATA</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-70B60F42-A268-4A35-9297-D7A351ABA47E">NEAR (;)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7">NOT (~)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-2054C818-A0C3-4779-A828-FD55BE0736CE">OR (|)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-D17A44D3-297C-4F6B-BF93-1DC8FCE95B42">Preferred Term (PT)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-06823170-75AE-4161-B274-6FEDA23636BD">Related Term (RT)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35">SDATA</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-2DFECD3E-EEED-43AB-AC7D-1DA75B550D4C">soundex (!)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-42F7E320-D239-47E1-8F6A-C88058201ED1">stem ($)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-82161CC8-9D8F-45A8-A687-81E032ADC081">Stored Query Expression (SQE)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-0AF3FC43-5EAB-4AFF-BBAE-9F99DDCEF1F5">SYNonym (SYN)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-8FF38910-1B32-4C15-B0C3-2538F36CAFAE">threshold (&gt;)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D">Translation Term (TR)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26">Translation Term Synonym (TRSYN)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-F0D15B14-CCA4-40F9-9052-42D2D1B47033">Top Term (TT)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-78D46BF1-BB4C-4F37-8982-934B61977711">weight (*)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-E494A57A-951A-4DCD-9AB1-6BEA68C83DB4">wildcards (% _)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C">WITHIN</a></p>
</li>
</ul>
</div>
<a id="CCREF2082"></a>
<div class="props_rev_3"><a id="GUID-CB66A498-79BD-41EC-BF2F-43E1F2812721"></a>
<h2 id="CCREF-GUID-CB66A498-79BD-41EC-BF2F-43E1F2812721" class="sect2"><span class="enumeration_section">3.1</span> Operator Precedence</h2>
<div>
<p><a id="d53900e289" class="indexterm-anchor"></a><a id="d53900e291" class="indexterm-anchor"></a>Operator precedence determines the order in which the components of a query expression are evaluated. Text query operators can be divided into two sets of operators that have their own order of evaluation. These two groups are described later as Group 1 and Group 2.</p>
<p>In all cases, query expressions are evaluated in order from left to right according to the precedence of their operators. Operators with higher precedence are applied first. Operators of equal precedence are applied in order of their appearance in the expression from left to right.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="cqoper.htm#GUID-5C20B67D-CDFC-4C6F-84CE-090520700DB9">Group 1 Operators</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-43608B64-9A09-4DD5-B57C-3BB97DCFF3E4">Group 2 Operators and Characters</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-7BAF6DF7-4D42-458D-B8AD-B13BE7572B7F">Procedural Operators</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-CE5C05FA-7C0C-46D7-B99F-C3602BAA25EF">Precedence Examples</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-70AFB877-6904-4C49-B3DE-776FB8DD4F72">Altering Precedence</a></p>
</li>
</ul>
</div>
<a id="CCREF2083"></a>
<div class="props_rev_3"><a id="GUID-5C20B67D-CDFC-4C6F-84CE-090520700DB9"></a>
<h3 id="CCREF-GUID-5C20B67D-CDFC-4C6F-84CE-090520700DB9" class="sect3"><span class="enumeration_section">3.1.1</span> Group 1 Operators</h3>
<div>
<p>Within query expressions, the Group 1 operators have the following order of evaluation from highest precedence to lowest:</p>
<ol>
<li>
<p><a href="cqoper.htm#GUID-BB03A0FF-3175-44F1-9EF4-A519CCC94154">EQUIValence (=)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-70B60F42-A268-4A35-9297-D7A351ABA47E">NEAR (;)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-78D46BF1-BB4C-4F37-8982-934B61977711">weight (*)</a>, <a href="cqoper.htm#GUID-8FF38910-1B32-4C15-B0C3-2538F36CAFAE">threshold (&gt;)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-BA076826-D208-49AF-B0CF-2216EA977AE4">MINUS (-)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7">NOT (~)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-34606970-68BB-4B12-A145-42C937990265">MNOT</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C">WITHIN</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D">AND (&amp;)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-2054C818-A0C3-4779-A828-FD55BE0736CE">OR (|)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50">ACCUMulate ( _ )</a></p>
</li>
</ol>
</div>
</div>
<a id="CCREF2084"></a>
<div class="props_rev_3"><a id="GUID-43608B64-9A09-4DD5-B57C-3BB97DCFF3E4"></a>
<h3 id="CCREF-GUID-43608B64-9A09-4DD5-B57C-3BB97DCFF3E4" class="sect3"><span class="enumeration_section">3.1.2</span> Group 2 Operators and Characters</h3>
<div>
<p>Within query expressions, the Group 2 operators have the following order of evaluation from highest to lowest:</p>
<ol>
<li>
<p>Wildcard Characters</p>
</li>
<li>
<p><a href="cqoper.htm#GUID-42F7E320-D239-47E1-8F6A-C88058201ED1">stem ($)</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-5BA618D7-45DA-4253-BB0D-313970EA7C5D">Fuzzy</a></p>
</li>
<li>
<p><a href="cqoper.htm#GUID-2DFECD3E-EEED-43AB-AC7D-1DA75B550D4C">soundex (!)</a></p>
</li>
</ol>
</div>
</div>
<a id="CCREF2085"></a>
<div class="props_rev_3"><a id="GUID-7BAF6DF7-4D42-458D-B8AD-B13BE7572B7F"></a>
<h3 id="CCREF-GUID-7BAF6DF7-4D42-458D-B8AD-B13BE7572B7F" class="sect3"><span class="enumeration_section">3.1.3</span> Procedural Operators</h3>
<div>
<p>Other operators not listed under Group 1 or Group 2 are procedural. These operators have no sense of precedence attached to them. They include the SQE and thesaurus operators.</p>
</div>
</div>
<a id="CCREF23815"></a><a id="CCREF2086"></a>
<div class="props_rev_3"><a id="GUID-CE5C05FA-7C0C-46D7-B99F-C3602BAA25EF"></a>
<h3 id="CCREF-GUID-CE5C05FA-7C0C-46D7-B99F-C3602BAA25EF" class="sect3"><span class="enumeration_section">3.1.4</span> Precedence Examples</h3>
<div>
<div class="tblformal" id="GUID-CE5C05FA-7C0C-46D7-B99F-C3602BAA25EF__GUID-1D823BD2-E1E6-4E63-A239-AF046F10B2BD">
<p class="titleintable">Table 3-1 Query Expression Precedence Examples</p>
<table class="cellalignment3028" title="Query Expression Precedence Examples" summary="This table shows the order of evaluation of query expressions.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3055" id="d53900e624">Query Expression</th>
<th class="cellalignment3056" id="d53900e628">Order of Evaluation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e633" headers="d53900e624">
<p>w1 | w2 &amp; w3</p>
</td>
<td class="cellalignment3058" headers="d53900e633 d53900e628">
<p>(w1) | (w2 &amp; w3)</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e640" headers="d53900e624">
<p>w1 &amp; w2 | w3</p>
</td>
<td class="cellalignment3058" headers="d53900e640 d53900e628">
<p>(w1 &amp; w2) | w3</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e647" headers="d53900e624">
<p>?w1, w2 | w3 &amp; w4</p>
</td>
<td class="cellalignment3058" headers="d53900e647 d53900e628">
<p>(?w1), (w2 | (w3 &amp; w4))</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e654" headers="d53900e624">
<p>abc = def ghi &amp; jkl = mno</p>
</td>
<td class="cellalignment3058" headers="d53900e654 d53900e628">
<p>((abc = def) ghi) &amp; (jkl=mno)</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e661" headers="d53900e624">
<p>dog and cat WITHIN body</p>
</td>
<td class="cellalignment3058" headers="d53900e661 d53900e628">
<p>dog and (cat WITHIN body)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p><a id="d53900e668" class="indexterm-anchor"></a><a id="d53900e672" class="indexterm-anchor"></a>In the first example, because <code class="codeph">AND</code> has a higher precedence than <code class="codeph">OR</code>, the query returns all documents that contain <span class="italic">w1</span> and all documents that contain both <span class="italic">w2</span> and <span class="italic">w3</span>.</p>
<p>In the second example, the query returns all documents that contain both <span class="italic">w1</span> and <span class="italic">w2</span> and all documents that contain <span class="italic">w3</span>.</p>
<p>In the third example, the fuzzy operator is first applied to <span class="italic">w1</span>, then the <code class="codeph">AND</code> operator is applied to arguments <span class="italic">w3</span> and <span class="italic">w4</span>, then the <code class="codeph">OR</code> operator is applied to term <span class="italic">w2</span> and the results of the <code class="codeph">AND</code> operation, and finally, the score from the fuzzy operation on <span class="italic">w1</span> is added to the score from the <code class="codeph">OR</code> operation.</p>
<p>The fourth example shows that the equivalence operator has higher precedence than the <code class="codeph">AND</code> operator.</p>
<p>The fifth example shows that the <code class="codeph">AND</code> operator has lower precedence than the <code class="codeph">WITHIN</code> operator.</p>
</div>
</div>
<a id="CCREF2087"></a>
<div class="props_rev_3"><a id="GUID-70AFB877-6904-4C49-B3DE-776FB8DD4F72"></a>
<h3 id="CCREF-GUID-70AFB877-6904-4C49-B3DE-776FB8DD4F72" class="sect3"><span class="enumeration_section">3.1.5</span> Altering Precedence</h3>
<div>
<p>Precedence is altered by grouping characters as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>Within parentheses, expansion or execution of operations is resolved before other expansions regardless of operator precedence.</p>
</li>
<li>
<p>Within parentheses, precedence of operators is maintained during evaluation of expressions.</p>
</li>
<li>
<p>Within parentheses, expansion operators are not applied to expressions unless the operators are also within the parentheses.</p>
<div class="infoboxnotealso" id="GUID-70AFB877-6904-4C49-B3DE-776FB8DD4F72__GUID-E80A8064-EB0B-49B3-8A28-C591737BD97E">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="cqspcl.htm#GUID-32D8F646-9A16-4AE5-B2EB-A11B130F2153">Grouping Characters</a>&#34;</span> in <a href="cqspcl.htm#GUID-840FE7C1-6652-4DEA-A204-C38C3ABC7BEE">Special Characters in Oracle Text Queries</a></p>
</div>
</li>
</ul>
</div>
</div>
</div>
<a id="CCREF23816"></a><a id="CCREF23817"></a><a id="CCREF23818"></a><a id="CCREF23819"></a><a id="CCREF23820"></a><a id="CCREF0301"></a>
<div class="props_rev_3"><a id="GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA"></a>
<h2 id="CCREF-GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA" class="sect2"><span class="enumeration_section">3.2</span> ABOUT</h2>
<div>
<div class="section">
<p class="subhead2">General Behavior</p>
<p>Use the <code class="codeph">ABOUT</code> operator to return documents that are related to a query term or phrase. In English and French, <code class="codeph">ABOUT</code> enables you to query on concepts, even if a concept is not actually part of a query. For example, an <code class="codeph">ABOUT</code> query on <span class="italic">heat</span> might return documents related to temperature, even though the term <span class="italic">temperature</span> is not part of the query.</p>
<p>In other languages, using <code class="codeph">ABOUT</code> will often increase the number of returned documents and may improve the sorting order of results. For all languages, Oracle Text scores results for an <code class="codeph">ABOUT</code> query with the most relevant document receiving the highest score.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">English and French Behavior</p>
<p>In English and French, use the <code class="codeph">ABOUT</code> operator to query on concepts. The system looks up concept information in the theme component of the index. Create a theme component to your index by setting the <code class="codeph">INDEX_THEMES</code> <a href="cdatadic.htm#GUID-118602A6-7B96-4D66-9BAD-4747186894BE">BASIC_LEXER</a> attribute to <code class="codeph">YES</code>.</p>
<div class="infobox-note" id="GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA__GUID-03D377E7-92AE-46B0-A3CB-C3244ABBA92E">
<p class="notep1">Note:</p>
<p>You need not have a theme component in the index to enter <code class="codeph">ABOUT</code> queries in English and French. However, having a theme component in the index yields the best results for <code class="codeph">ABOUT</code> queries.</p>
</div>
<p>Oracle Text retrieves documents that contain concepts that are related to your query word or phrase. For example, if you enter an <code class="codeph">ABOUT</code> query on <span class="italic">California</span>, the system might return documents that contain the terms <span class="italic">Los Angeles</span> and <span class="italic">San Francisco</span>, which are cities in California.The document need not contain the term <span class="italic">California</span> to be returned in this <code class="codeph">ABOUT</code> query.</p>
<p>The word or phrase specified in your <code class="codeph">ABOUT</code> query need not exactly match the themes stored in the index. Oracle Text normalizes the word or phrase before performing lookup in the index.</p>
<p>You can use the <code class="codeph">ABOUT</code> operator with the <code class="codeph">CONTAINS</code> and <code class="codeph">CATSEARCH</code> SQL operators. In the case of <code class="codeph">CATSEARCH</code>, you must use query templating with the <code class="codeph">CONTEXT</code> grammar to query on the indexed themes. See <a href="cqoper.htm#GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA__I999256">ABOUT Query with CATSEARCH</a> in the Examples section.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA__GUID-6E30B7BB-02CA-4815-BC51-E3E0D759B545">
<table class="cellalignment3028" summary="This table describes ABOUT operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3083" id="d53900e1021">Syntax</th>
<th class="cellalignment3093" id="d53900e1024">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e1029" headers="d53900e1021">
<p>about(<span class="variable">phrase</span>)</p>
</td>
<td class="cellalignment3094" headers="d53900e1029 d53900e1024">
<p>In all languages, increases the number of relevant documents returned for the same query without the <code class="codeph">ABOUT</code> operator.The <span class="italic">phrase</span> parameter can be a single word or a phrase, or a string of words in free text format.</p>
<p>In English and French, returns documents that contain concepts related to <span class="italic">phrase</span>, provided the <code class="codeph">BASIC_LEXER</code> <code class="codeph">INDEX_THEMES</code> attribute is set to YES at index time.</p>
<p>The score returned is a relevance score.</p>
<p>Oracle Text ignores any query operators that are included in <span class="italic">phrase</span>.</p>
<p>If your index contains only theme information, an <code class="codeph">ABOUT</code> operator and operand must be included in your query on the text column or else Oracle Text returns an error.</p>
<p>The <span class="italic">phrase</span> you specify cannot be more than 4000 characters.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Case-Sensitivity</p>
<p><code class="codeph">ABOUT</code> queries give the best results when your query is formulated with proper case. This is because the normalization of your query is based on the knowledge catalog which is case-sensitive.</p>
<p>However, you need not type your query in exact case to obtain results from an <code class="codeph">ABOUT</code> query. The system does its best to interpret your query. For example, if you enter a query of <span class="italic">CISCO</span> and the system does not find this in the knowledge catalog, the system might use <span class="italic">Cisco</span> as a related concept for look-up.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Improving ABOUT Results</p>
<p>The <code class="codeph">ABOUT</code> operator uses the supplied knowledge base in English and French to interpret the phrase you enter. Your <code class="codeph">ABOUT</code> query therefore is limited to knowing and interpreting the concepts in the knowledge base.</p>
<p>Improve the results of your <code class="codeph">ABOUT</code> queries by adding your application-specific terminology to the knowledge base.</p>
<div class="infoboxnotealso" id="GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA__GUID-34B50A99-2916-40A4-853C-A034960BD44E">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="cexec.htm#GUID-35B18A99-D833-495B-BFCA-9B0F4C2BF479">Extending the Knowledge Base</a>&#34;</span> in <a href="cexec.htm#GUID-448173F3-55E3-4056-B659-C6855E7BB4FB">Oracle Text Utilities</a></p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Limitations</p>
<p>The phrase you specify in an <code class="codeph">ABOUT</code> query cannot be more than 4000 characters.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for ABOUT Operator</p>
<p>Single Words</p>
<p>To search for documents that are about soccer, use the following syntax:</p>
<pre dir="ltr">&#39;about(soccer)&#39;
</pre>
<p>Phrases</p>
<p>Further refine the query to include documents about soccer rules in international competition by entering the phrase as the query term:</p>
<pre dir="ltr">&#39;about(soccer rules in international competition)&#39;
</pre>
<p>In this English example, Oracle Text returns all documents that have themes of <span class="variable">soccer</span>, <span class="variable">rules</span>, or <span class="variable">international competition</span>.</p>
<p>In terms of scoring, documents which have all three themes will generally score higher than documents that have only one or two of the themes.</p>
<p>Unstructured Phrases</p>
<p>You can also query on unstructured phrases, such as the following:</p>
<pre dir="ltr">&#39;about(japanese banking investments in indonesia)&#39;
</pre>
<p>Combined Queries</p>
<p>Use other operators, such as <code class="codeph">AND</code> or <code class="codeph">NOT</code>, to combine <code class="codeph">ABOUT</code> queries with word queries. For example, enter the following combined <code class="codeph">ABOUT</code> and word query:</p>
<pre dir="ltr">&#39;about(dogs) and cat&#39;
</pre>
<p>Combine an <code class="codeph">ABOUT</code> query with another <code class="codeph">ABOUT</code> query as follows:</p>
<pre dir="ltr">&#39;about(dogs) not about(labradors)&#39;
</pre>
<div class="infobox-note" id="GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA__GUID-19CE1B16-1B1E-4011-A76F-888D0347D2C8">
<p class="notep1">Note:</p>
<p>You cannot combine <code class="codeph">ABOUT</code> with the <code class="codeph">WITHIN</code> operator, as for example &#39;A<span class="italic">BOUT (xyz) WITHIN abc&#39;</span>.</p>
</div>
<p id="GUID-14AF3453-901E-4B1F-ADE9-EA6EFF5D5BFA__I999256">ABOUT Query with CATSEARCH</p>
<p>Enter <code class="codeph">ABOUT</code> queries with <code class="codeph">CATSEARCH</code> using the query template method with grammar set to <code class="codeph">CONTEXT</code> as follows:</p>
<pre dir="ltr">select pk||&#39; ==&gt; &#39;||text from test
where catsearch(text,
&#39;&lt;query&gt; 
  &lt;textquery grammar=&#34;context&#34;&gt;
     about(California)
  &lt;/textquery&gt;
  &lt;score datatype=&#34;integer&#34;/&gt;
&lt;/query&gt;&#39;,&#39;&#39;)&gt;0
order by pk; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="CCREF0302"></a>
<div class="props_rev_3"><a id="GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50"></a>
<h2 id="CCREF-GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50" class="sect2"><span class="enumeration_section">3.3</span> ACCUMulate ( , )</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">ACCUM</code> operator to search for documents that contain at least one occurrence of any query terms, with the returned documents ranked by a cumulative score based on how many query terms are found (and how frequently).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50__GUID-3F551D24-13E9-4C41-8F0E-A71D1169EF8F">
<table class="cellalignment3028" summary="This table shows ACCUMulate ( , ) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3083" id="d53900e1305">Syntax</th>
<th class="cellalignment3093" id="d53900e1308">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e1313" headers="d53900e1305">
<p><span class="variable">term1</span>,<span class="variable">term2</span></p>
<p><span class="variable">term1</span> ACCUM <span class="variable">term2</span></p>
</td>
<td class="cellalignment3094" headers="d53900e1313 d53900e1308">
<p>Returns documents that contain <span class="italic">term1</span> or <span class="italic">term2</span>. Ranks documents according to document term weight, with the highest scores assigned to documents that have the highest total term weight.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">ACCUMulate Scoring</p>
<p>ACCUMulate first scores documents on how many query terms a document matches. A document that matches more terms will always score higher than a document that matches fewer terms, even if the terms appear more frequently in the latter. In other words, if you search for <span class="italic">dog ACCUM cat</span>, you&#39;ll find that</p>
<pre dir="ltr">the dog played with the cat 
</pre>
<p>scores higher than</p>
<pre dir="ltr">the big dog played with the little dog while a third dog ate the dog food
</pre>
<p>Scores are divided into ranges. In a two-term <code class="codeph">ACCUM</code>, hits that match both terms will always score between 51 and 100, whereas hits matching only one of the terms will score between 1 and 50. Likewise, for a three-term <code class="codeph">ACCUM</code>, a hit matching one term will score between 1 and 33; a hit matching two terms will score between 34 and 66, and a hit matching all three terms will score between 67 and 100. <span class="italic">Within these ranges</span>, normal scoring algorithms apply.</p>
<div class="infoboxnotealso" id="GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50__GUID-14490F22-1D4A-4A0F-94C5-63D384E2384F">
<p class="notep1">See Also:</p>
<p><a href="ascore.htm#GUID-9715B872-7499-4A6B-8EA1-68B06CA2A686">The Oracle Text Scoring Algorithm</a> for more information on how scores are calculated</p>
</div>
<p>You can assign different weights to different terms. For example, in a query of the form</p>
<pre dir="ltr">soccer, Brazil*3
</pre>
<p>the term <span class="italic">Brazil</span> is weighted three times as heavily as <span class="italic">soccer</span>. Therefore, the document</p>
<pre dir="ltr">people play soccer because soccer is challenging and fun 
</pre>
<p>will score lower than</p>
<pre dir="ltr">Brazil is the largest nation in South America
</pre>
<p>but both documents will rank below</p>
<pre dir="ltr">soccer is the national sport of Brazil
</pre>
<p>Note that a query of <span class="italic">soccer ACCUM Brazil*3</span> is equivalent to <span class="italic">soccer ACCUM Brazil ACCUM Brazil ACCUM Brazil</span>. Because each query term <span class="italic">Brazil</span> is considered independent, the entire query is scored as though it has four terms, not two, and thus has four scoring ranges. The first Brazil-and-soccer example document shown above scores in the first range (1-25), the second scores in the third range (51-75), and the third scores in the fourth range (76-100). (No document scores in the second range, because any document with <span class="italic">Brazil</span> in it will be considered to match at least three query terms.)</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for ACCUM Operator</p>
<pre dir="ltr">set serveroutput on;
DROP TABLE accumtbl;
CREATE TABLE accumtbl (id NUMBER, text VARCHAR2(4000) );
 
INSERT INTO accumtbl VALUES ( 1, &#39;the little dog played with the big dog 
      while the other dog ate the dog food&#39;);
INSERT INTO accumtbl values (2, &#39;the cat played with the dog&#39;);
 
CREATE INDEX accumtbl_idx ON accumtbl (text) indextype is ctxsys.context;
  
PROMPT dog ACCUM cat
SELECT SCORE(10) FROM accumtbl WHERE CONTAINS (text, &#39;dog ACCUM cat&#39;, 10)
   &gt; 0;
 
PROMPT dog*3 ACCUM cat
SELECT SCORE(10) FROM accumtbl WHERE CONTAINS (text, &#39;dog*3 ACCUM cat&#39;, 10)
   &gt; 0;
</pre>
<p>This produces the following output. Note that the document with both <span class="italic">dog</span> and <span class="italic">cat</span> scores highest.</p>
<pre dir="ltr">dog ACCUM cat
   ID  SCORE(10)
----- ----------
    1          6
    2         52
 
dog*3 ACCUM cat
   ID  SCORE(10)
----- ----------
    1         53
    2         76
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><a href="cqoper.htm#GUID-78D46BF1-BB4C-4F37-8982-934B61977711">weight (*)</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0304"></a>
<div class="props_rev_3"><a id="GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D"></a>
<h2 id="CCREF-GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D" class="sect2"><span class="enumeration_section">3.4</span> AND (&amp;)</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">AND</code> operator to search for documents that contain at least one occurrence of each of the query terms. The <code class="codeph">AND</code> operator returns documents that contain <span class="italic">all</span> of the query terms, while <code class="codeph">OR</code> operator returns documents that contain <span class="italic">any</span> of the query terms.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D__GUID-3D311064-888C-4874-969E-A390A81A3824">
<table class="cellalignment3028" summary="This table describes AND (&amp;) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3141" id="d53900e1514">Syntax</th>
<th class="cellalignment3155" id="d53900e1517">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3142" id="d53900e1522" headers="d53900e1514">
<p><span class="variable">term1</span>&amp;<span class="variable">term2</span></p>
<p><span class="variable">term1</span> and <span class="variable">term2</span></p>
</td>
<td class="cellalignment3156" headers="d53900e1522 d53900e1517">
<p>Returns documents that contain <span class="italic">term1</span> and <span class="italic">term2</span>. Returns the minimum score of its operands. All query terms must occur; lower score taken.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for AND Operator</p>
<p>To obtain all the documents that contain the terms <span class="italic">blue</span> and <span class="italic">black</span> and <span class="italic">red</span>, enter the following query:</p>
<pre dir="ltr">&#39;blue &amp; black &amp; red&#39;
</pre>
<p>In an <code class="codeph">AND</code> query, the score returned is the score of the lowest query term. In this example, if the three individual scores for the terms <span class="italic">blue, black,</span> and <span class="italic">red</span> is 10, 20 and 30 within a document, the document scores 10.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="cqoper.htm#GUID-2054C818-A0C3-4779-A828-FD55BE0736CE">OR (|)</a>&#34;</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23821"></a><a id="CCREF0305"></a>
<div class="props_rev_3"><a id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8"></a>
<h2 id="CCREF-GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8" class="sect2"><span class="enumeration_section">3.5</span> Broader Term (BT, BTG, BTP, BTI)</h2>
<div>
<div class="section">
<p>Use the broader term operators (<code class="codeph">BT</code>, <code class="codeph">BTG</code>, <code class="codeph">BTP</code>, <code class="codeph">BTI</code>) to expand a query to include the term that has been defined in a thesaurus as the broader or higher level term for a specified term. They can also expand the query to include the broader term for the broader term and the broader term for that broader term, and so on up through the thesaurus hierarchy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-D39AD8FB-2DFB-4D12-B93E-08DD6D3A3082">
<table class="cellalignment3028" summary="This table describes Broader Term (BT, BTG, BTP, BTI) operators.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3073" id="d53900e1687">Syntax</th>
<th class="cellalignment3169" id="d53900e1690">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e1695" headers="d53900e1687">
<p>BT(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e1695 d53900e1690">
<p>Expands a query to include the term defined in the thesaurus as a broader term for <code class="codeph">term</code>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e1717" headers="d53900e1687">
<p>BTG(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e1717 d53900e1690">
<p>Expands a query to include all terms defined in the thesaurus as broader generic terms for <code class="codeph">term</code>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e1739" headers="d53900e1687">
<p>BTP(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e1739 d53900e1690">
<p>Expands a query to include all the terms defined in the thesaurus as broader partitive terms for <code class="codeph">term</code>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e1761" headers="d53900e1687">
<p>BTI(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e1761 d53900e1690">
<p>Expands a query to include all the terms defined in the thesaurus as broader instance terms for <code class="codeph">term</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3558"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-7EE1515C-8310-495C-A990-7C8C6F744363"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the broader term operator. Oracle Text expands <tt>term</tt> to include the broader term entries defined for the term in the thesaurus specified by <tt>thes</tt>. For example, if you specify <span class="italic">BTG(dog)</span>, the expansion includes only those terms that are defined as broader term generic for <span class="italic">dog</span>. You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
<p>The number of broader terms included in the expansion is determined by the value for <code class="codeph">level</code>.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3559"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-578DE8CA-A49B-44AE-A315-5347759E183B"><!-- --></a>qualifier</dt>
<dd>
<p>Specify a qualifier for <code class="codeph">term</code>, if <code class="codeph">term</code> is a homograph (word or phrase with multiple meanings, but the same spelling) that appears in two or more nodes in the same hierarchy branch of <code class="codeph">thes</code>.</p>
<p>If a qualifier is not specified for a homograph in a broader term query, the query expands to include the broader terms of all the homographic terms.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3560"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-CC2BC5F3-EF27-4809-AD7F-B252A996E6D7"><!-- --></a>level</dt>
<dd>
<p>Specify the number of levels traversed in the thesaurus hierarchy to return the broader terms for the specified term. For example, a level of 1 in a BT query returns the broader term entry, if one exists, for the specified term. A level of 2 returns the broader term entry for the specified term, as well as the broader term entry, if one exists, for the broader term.</p>
<p>The level argument is optional and has a default value of one (1). Zero or negative values for the level argument return only the original query term.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3561"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-D6299253-776C-416D-B6F9-F95784779AA6"><!-- --></a>thes</dt>
<dd>
<p>Specify the name of the thesaurus used to return the expansions for the specified term. <a id="d53900e1840" class="indexterm-anchor"></a><a id="d53900e1844" class="indexterm-anchor"></a>The <tt>thes</tt> argument is optional and has a default value of <code class="codeph">DEFAULT</code>. A thesaurus named <code class="codeph">DEFAULT</code> <span class="italic">must</span> exist in the thesaurus tables if you use this default value.</p>
<div class="infobox-note" id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-881240AC-97CF-430A-BC03-1FB59DE5EB87">
<p class="notep1">Note:</p>
<p>If you specify <code class="codeph">thes</code>, then you must also specify <code class="codeph">level</code>.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for Broader Term Operators</p>
<p>The following query returns all documents that contain the term <span class="italic">tutorial</span> or the <code class="codeph">BT</code> term defined for <span class="italic">tutorial</span> in the <code class="codeph">DEFAULT</code> thesaurus:</p>
<pre dir="ltr">&#39;BT(tutorial)&#39;
</pre>
<p>When you specify a thesaurus name, you must also specify <code class="codeph">level</code> as in:</p>
<pre dir="ltr">&#39;BT(tutorial, 2, mythes)&#39;
</pre>
<p>Broader Term Operator on Homographs<a id="d53900e1896" class="indexterm-anchor"></a></p>
<p>If <span class="italic">machine</span> is a broader term for <span class="italic">crane (building equipment)</span> and <span class="italic">bird</span> is a broader term for <span class="italic">crane (waterfowl)</span> and no qualifier is specified for a broader term query, the query</p>
<pre dir="ltr">BT(crane) 
</pre>
<p>expands to:</p>
<pre dir="ltr">&#39;{crane} or {machine} or {bird}&#39;
</pre>
<p>If <span class="italic">waterfowl</span> is specified as a qualifier for <span class="italic">crane</span> in a broader term query, the query</p>
<pre dir="ltr">BT(crane{(waterfowl)}) 
</pre>
<p>expands to the query:</p>
<pre dir="ltr">&#39;{crane} or {bird}&#39; 
</pre>
<div class="infobox-note" id="GUID-9916A2DD-A565-47E9-A0D0-264F9E09BDF8__GUID-9FBACB47-174B-4B81-B28D-BD1F8FDF7F5E">
<p class="notep1">Note:</p>
<p>When specifying a qualifier in a broader or narrower term query, the qualifier and its notation (parentheses) must be escaped, as is shown in this example.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-3CA6E421-7D59-47CA-90E1-D148AC871F4F">BT</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> for more information on browsing the broader terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF99016"></a><a id="CCREF99017"></a><a id="CCREF24087"></a>
<div class="props_rev_3"><a id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A"></a>
<h2 id="CCREF-GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A" class="sect2"><span class="enumeration_section">3.6</span> CTXFILTERCACHE</h2>
<div>
<div class="section">
<p>Oracle Text provides a cache layer called query filter cache that can be used to cache the query results. Query filter cache is sharable across queries. Thus, the cached query results can be reused by multiple queries, improving the query response time. The <code class="codeph">CTXFILTERCACHE</code> operator is used to specify which query results or part of query results to cache in the query filter cache.</p>
<p><code class="codeph">CTXFILTERCACHE</code> only supports CONTEXT grammar queries. CONTAINER queries like template queries are not supported. If you execute it with a template query, then errors are raised.</p>
<div class="infobox-note" id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__GUID-8FD6D517-7ECD-4317-9FF8-5BAEA8A8424D">
<p class="notep1">Caution:</p>
<p>Before using <code class="codeph">CTXFILTERCACHE</code>, you must run <code class="codeph">PURGE</code> <code class="codeph">recyclebin</code> as follows:</p>
<pre dir="ltr">SQL&gt; PURGE recylebin;
</pre>
<p>See <a class="olink ADMIN11682" target="_blank" href="../ADMIN/tables.htm#ADMIN11682"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for complete information about purging objects in the recycle bin.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">ctxfiltercache((<span class="italic">query_text</span>) [, <span class="italic">save_score</span>] [, <span class="italic">topN</span>])
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3562"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__GUID-9674F185-E7A6-465E-B469-C67D9912451C"><!-- --></a>query_text</dt>
<dd>
<p>Specify the query whose results need to be stored in the cache.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3563"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__GUID-940BACE5-E16D-4242-90D9-315E8AE312AB"><!-- --></a>save_score</dt>
<dd>
<p>Specify <code class="codeph">TRUE</code> if you want to cache all the query results along with their scores in the cache.</p>
<p>The default is <code class="codeph">FALSE</code>. In this case, a score of 100 is returned for each query result, and these scores are not stored in the cache. Only the query results are stored in the cache.</p>
<p>Specify <code class="codeph">FALSE</code> when you want to reuse the query results and not their scores in other queries. This is particularly useful when you use the query text as a filter, such as a security filter, where the relevance of the cached part of the query does not affect the relevance of the query as a whole. Thus, when used with the AND operator (which returns a lower score of its operands), a score of 100 does not affect the score of a query as a whole.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3564"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__GUID-822EC0C9-D881-4BE0-8084-CF664C9EFD92"><!-- --></a>topN</dt>
<dd>
<p>Specify <code class="codeph">TRUE</code> if you want only the highest scoring query results to be stored in the cache. Oracle Text internally determines how many highest scoring query results to store in the cache. This helps in reducing the memory consumption of the cache.</p>
<div class="infobox-note" id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__GUID-BE37BB91-3152-4D5C-BFF0-A44D0CE7B6A4">
<p class="notep1">Note:</p>
<p>If you specify <code class="codeph">TRUE</code> for <code class="codeph">topN</code>, then <code class="codeph">save_score</code> should also be <code class="codeph">TRUE</code>.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for CTXFILTERCACHE</p>
<p>Stored Query Results and TopN Examples</p>
<p>The following example stores the query results of the <code class="codeph">common_predicate</code> query in the cache:</p>
<pre dir="ltr">select * from docs where contains(txt, &#39;ctxfiltercache((common_predicate), FALSE)&#39;)&gt;0;
</pre>
<p>Here, <code class="codeph">save_score</code> is <code class="codeph">FALSE</code>, and hence the score of 100 is returned for each query result, and the scores are not stored in the cache.</p>
<p>In the following example, the cached results of the <code class="codeph">common_predicate</code> query are reused by the <code class="codeph">new_query</code> query.</p>
<pre dir="ltr">select * from docs where contains(txt, &#39;new_query &amp; ctxfiltercache((common_predicate), FALSE)&#39;)&gt;0; 
</pre>
<p>Set <code class="codeph">save_score</code> to <code class="codeph">TRUE</code> as shown in the following example to store all the query results of the <code class="codeph">common_predicate</code> query, along with the actual scores, in the cache.</p>
<pre dir="ltr">select * from docs where contains(txt, &#39;ctxfiltercache((common_predicate), TRUE)&#39;)&gt;0;
</pre>
<p>Set <code class="codeph">topN</code> to <code class="codeph">TRUE</code> if you want to store only the highest scoring query results of the <code class="codeph">common_predicate</code> query in the cache as described in the following example.</p>
<pre dir="ltr">select id, score(1) from docs where contains(txt, &#39;ctxfiltercache((common_predicate), TRUE, TRUE)&#39;, 1)&gt;0 order by score(1) desc;
</pre>
<p>Set <code class="codeph">topN</code> to <code class="codeph">TRUE</code> for the main part of the query and <code class="codeph">FALSE</code> for the filter part, when the score is relevant only for the main part of the query. The following example shows a query with two <code class="codeph">ctxfiltercache</code> clauses. It performs a free-text search for &#34;cat AND dog&#34; and then applies a security filter to the search operation. Results of both the parts of this query are separately cached so that they can be reused, but the score is relevant only for the first part of the query.</p>
<pre dir="ltr">select id, score(1) from docs where contains(txt, &#39;ctxfiltercache((cat AND dog), TRUE, TRUE) AND ctxfiltercache((john WITHIN allowedUsers), FALSE, FALSE)&#39;, 1) &gt; 0;
</pre>
<p id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__CCHHAAFA">Cached Score Example</p>
<p><code class="codeph">CTXFILTERCACHE</code> stores one query result for <code class="codeph">score</code> at a time in the cache. Hence, two similar queries executed serially are considered the same query, and there is only one such query stored in the cache.</p>
<p>The following examples, query <span class="italic">A</span> and query <span class="italic">B</span>, show two similar queries. The hit score for <span class="italic">A</span> is <code class="codeph">100</code>, and the hit score for <span class="italic">B</span> is <code class="codeph">5</code>. Assume the cache is empty and you execute query <span class="italic">A</span> first. The computed score <code class="codeph">100</code> is stored in the cache for this query. When you execute query <span class="italic">B</span> subsequently now, the cache contains the stored score of <code class="codeph">100</code>, and therefore, query <span class="italic">B</span> returns the cached score of <code class="codeph">100</code>. Conversely, if you execute query <span class="italic">B</span> before query <span class="italic">A</span>, then the cached computed score that gets returned is <code class="codeph">5</code>.</p>
<p>Query A:</p>
<pre dir="ltr">select  /*+ DOMAIN_INDEX_SORT */ id, score(1) as ORADD from mydocs where contains (txt ,&#39;ctxfiltercache((DEFINEMERGE
        (       ((definescore(Oracle,relevance)),(definescore(Java,discrete)))
                ,OR,ADD
        )),T,T)&#39;,1)&gt;0 order by score(1) desc;
</pre>
<p>Query B:</p>
<pre dir="ltr">select /*+ DOMAIN_INDEX_SORT */ id, score(1) as ORAVG from docs where contains (txt ,&#39;ctxfiltercache((DEFINEMERGE
        (       ((definescore(Oracle,relevance)),(definescore(Java,discrete)))
                ,OR,AVG
        )),T,T)&#39;,1)&gt;0 order by score(1) desc;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p>The query filter cache is an index level storage preference.</p>
<p>The storage preference for the query filter cache can be set at <span class="italic">partition</span> level only if this is also set at <span class="italic">index</span> level. If a filter cache preference is set at partition level without any filter cache preference being set at index level, then an error is thrown as follows: &#34;Illegal syntax for index, preference, source or section name.&#34;</p>
<p>Note that <code class="codeph">CTXFILTERCACHE</code> is not utilized with:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">INPATH</code>/<code class="codeph">HASPATH</code> queries</p>
</li>
<li>
<p>First query after <code class="codeph">syncindex</code> for <code class="codeph">NDATA</code> and <code class="codeph">SDATA</code></p>
</li>
</ul>
<p>When <code class="codeph">topN</code> is <code class="codeph">FALSE</code>, the <code class="codeph">CTXFILTERCACHE</code> operator can be either a top-level operator or a child of the following operators:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">AND</code></p>
</li>
<li>
<p><code class="codeph">ACCUM</code></p>
</li>
<li>
<p><code class="codeph">NOT</code></p>
</li>
<li>
<p><code class="codeph">OR</code></p>
</li>
<li>
<p><code class="codeph">THRESHOLD</code> (left side operand only)</p>
</li>
<li>
<p><code class="codeph">WEIGHT</code> (left side operand only)</p>
</li>
</ul>
<p>When <code class="codeph">topN</code> is <code class="codeph">TRUE</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">ctxfiltercache</code> operator can be either a top-level operator or a child of the following operators:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">AND</code></p>
</li>
<li>
<p><code class="codeph">THRESHOLD</code> (left side operand only)</p>
</li>
<li>
<p><code class="codeph">WEIGHT</code> (left side operand only)</p>
</li>
</ul>
</li>
<li>
<p>TopN is enabled only when the <code class="codeph">ctxfiltercache</code> operator is used with the order key ORDER BY SCORE(n) DESC and Oracle hint <code class="codeph">DOMAIN_INDEX_SORT</code> for global index. Additionally, for a partitioned index, be sure to have partition pruning in your query. Otherwise, although topN is set to TRUE, normal mode will be used intead of topN mode.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__GUID-94EAA75C-966F-4CF1-93A1-31BDF5E0E9AF">
<p class="notep1">Note:</p>
<p>The <code class="codeph">ctxfiltercache</code> operator only supports a CONTEXT grammar query. This means that container queries like template queries are not supported.</p>
<p>If <code class="codeph">ctxfiltercache</code> is used with a query template, then the following type of error will occur:</p>
<pre dir="ltr">ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50900: text query parser error on line 1, column 8
DRG-50905: invalid score threshold &lt;textquery
</pre>
<p>An example of a query that results in this error is as follows:</p>
<pre dir="ltr">select score(1), id, txt from tdrbqfc45 where contains(txt, &#39;ctxfiltercache((&lt;query&gt;&lt;textquery&gt;near2((a,b,c,d))
&lt;/textquery&gt;&lt;score datatype=&#34;FLOAT&#34;/&gt;
&lt;/query&gt;),true)&#39;, 1)&gt;0 order by id;
</pre></div>
<p>To use <code class="codeph">ctxfiltercache</code> you must specify a size for the query filter cache using the basic storage attribute <code class="codeph">query_filter_cache_size</code>. The default size is <code class="codeph">0</code>, which means that <code class="codeph">ctxfiltercache</code> is disabled by default.</p>
<p>The view <code class="codeph">ctx_filter_cache_statistics</code> provides various statistics about the query filter cache.</p>
<p>The query filter cache does not differentiate queries that only vary in how the score is computed. Score is never computed on the fly within the query filter cache. See <span class="q">&#34;<a href="cqoper.htm#GUID-9BAB6A2E-8E3B-4B68-A17F-915CFA41507A__CCHHAAFA">Cached Score Example</a>&#34;</span> for an illustration of how this works.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="aviews.htm#GUID-4D399133-16FE-4BB4-852C-54270721F118">CTX_FILTER_CACHE_STATISTICS</a>&#34;</span> for more information about the <code class="codeph">ctx_filter_cache_statistics</code> view</p>
<p><span class="q">&#34;<a href="cdatadic.htm#GUID-84CFF759-7AA2-4D64-BE72-6358873043BA">BASIC_STORAGE</a>&#34;</span> for more information about the <code class="codeph">query_filter_cache_size</code> basic storage attribute</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23822"></a><a id="CCREF9900"></a>
<div class="props_rev_3"><a id="GUID-F6773261-6BA0-4F99-A865-E2E3D827D058"></a>
<h2 id="CCREF-GUID-F6773261-6BA0-4F99-A865-E2E3D827D058" class="sect2"><span class="enumeration_section">3.7</span> DEFINEMERGE</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">DEFINEMERGE</code> operator to define how the score of child nodes of the <code class="codeph">AND</code> and <code class="codeph">OR</code> should be merged. The <code class="codeph">DEFINEMERGE</code> operator can be used as operand(s) of any operators that allow <code class="codeph">AND</code> or <code class="codeph">OR</code> as operands. The score can be merged in three ways: picking the minimum value, picking the maximum value, or calculating the average score of all child nodes.</p>
<p>Use <a href="cqoper.htm#GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB">DEFINESCORE</a> before using <code class="codeph">DEFINEMERGE</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">DEFINEMERGE ( (  (text_query1), (text_query2), &hellip; )  , operator, merge_method )
</pre>
<div class="tblformal" id="GUID-F6773261-6BA0-4F99-A865-E2E3D827D058__GUID-9F606B52-AB78-4F67-85AD-82039F08C2CB">
<table class="cellalignment3028" summary="This table shows DEFINEMERGE operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3141" id="d53900e2544">Syntax</th>
<th class="cellalignment3155" id="d53900e2547">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3142" id="d53900e2552" headers="d53900e2544">
<p><span class="variable">text_query1,2 ...</span></p>
</td>
<td class="cellalignment3156" headers="d53900e2552 d53900e2547">
<p>Defines the search criteria. These parameters can have any value that is valid for the AND/OR operator.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3142" id="d53900e2560" headers="d53900e2544">
<p><span class="italic">operator</span></p>
</td>
<td class="cellalignment3156" headers="d53900e2560 d53900e2547">
<p>Defines the relationship between the two <code class="codeph">text_query</code> parameters.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3142" id="d53900e2571" headers="d53900e2544">
<p><span class="italic">merge_method</span></p>
</td>
<td class="cellalignment3156" headers="d53900e2571 d53900e2547">
<p>Defines how the score of the text_query should be merged. Possible values: <code class="codeph">MIN</code>, <code class="codeph">MAX</code>, <code class="codeph">AVG</code>, <code class="codeph">ADD</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for DEFINEMERGE Operator</p>
<pre dir="ltr">&#39;DEFINEMERGE (((dog , cat) , (blue or black)), AND, MIN )&#39;
</pre>
<p>Queries for the expression &#34;dog <code class="codeph">ACCUM</code> cat&#34; and &#34;blue <code class="codeph">OR</code> black,&#34; using the default scoring schemes and then using the minimum score of the two as the merged-score.</p>
<pre dir="ltr">&#39;DEFINEMERGE( ((DEFINESCORE(dog, DISCRETE)) , (cat)), AND, MAX)&#39;
</pre>
<p>Queries for the term &#34;dog&#34; using the <code class="codeph">DISCRETE</code> scoring, and for the term &#34;cat&#34; using the default relevant scoring, and then using the maximum score of the two as the merged-score.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-F6773261-6BA0-4F99-A865-E2E3D827D058__GUID-040E4DEE-9202-4FB8-9315-4D8F2E0E3545">
<p class="titleinexample">Example 3-1 DEFINEMERGE and text_query</p>
<p>The following examples show only the <code class="codeph">text_query</code> part of a <code class="codeph">CONTAINS</code> query:</p>
<pre dir="ltr">&#39;DEFINEMERGE ( ((dog), (cat)), OR, AVG)&#39;
</pre>
<p>Queries for the term &#34;dog&#34; or &#34;cat,&#34; using the average relevance score of both terms as the merged score.</p>
</div>
<!-- class="example" -->
<div class="section">
<p class="subhead2">Related Topic</p>
<p><a href="cqoper.htm#GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB">DEFINESCORE</a>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23823"></a><a id="CCREF9901"></a>
<div class="props_rev_3"><a id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB"></a>
<h2 id="CCREF-GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB" class="sect2"><span class="enumeration_section">3.8</span> DEFINESCORE</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">DEFINESCORE</code> operator to define how a term or phrase, or a set of term equivalences will be scored. The definition of a scoring expression can consist of an arithmetic expression of predefined scoring components and numeric literals.</p>
<p><a href="cqoper.htm#GUID-F6773261-6BA0-4F99-A865-E2E3D827D058">DEFINEMERGE</a> can be used after <code class="codeph">DEFINESCORE</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">DEFINESCORE (query_term, scoring_expression)
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3565"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB__GUID-C68869A1-92AF-4072-AFFB-A51F3EBFDEC9"><!-- --></a>query_term</dt>
<dd>
<p>The query term or phrase. Expressions containing the following operators are also allowed:</p>
<div class="tblformal" id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB__GUID-63E659CF-FDAF-406A-A333-0EA9FDEDD7EC">
<table class="cellalignment3033" summary="query_term">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3034" id="d53900e2733">Operators</th>
<th class="cellalignment3034" id="d53900e2736">Operators</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e2741" headers="d53900e2733">
<p>-</p>
</td>
<td class="cellalignment3035" headers="d53900e2741 d53900e2736">
<p>-</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e2748" headers="d53900e2733">
<p><code class="codeph">ABOUT</code></p>
</td>
<td class="cellalignment3035" headers="d53900e2748 d53900e2736">
<p><code class="codeph">EQUIV(=)</code></p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e2757" headers="d53900e2733">
<p><code class="codeph">Fuzzy</code></p>
</td>
<td class="cellalignment3035" headers="d53900e2757 d53900e2736">
<p><code class="codeph">Soundex (!)</code></p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e2766" headers="d53900e2733">
<p><code class="codeph">Stem ($)</code></p>
</td>
<td class="cellalignment3035" headers="d53900e2766 d53900e2736">
<p><code class="codeph">Wildcards (% _)</code></p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e2775" headers="d53900e2733">
<p><code class="codeph">SDATA</code></p>
</td>
<td class="cellalignment3035" headers="d53900e2775 d53900e2736">
<p><code class="codeph">MDATA</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3566"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB__GUID-465C982A-7944-429D-BA9E-2F542BD65D26"><!-- --></a>scoring_expression</dt>
<dd>
<p>An arithmetic expression that describes how the <code class="codeph">query_term</code> should be scored. This operand is a string that contains the following components:</p>
<ul style="list-style-type: disc;">
<li>
<p>Arithmetic operators: <code class="codeph">+ - * /</code>. The precedence is multiplication and division (*, /) first before addition and subtraction (+, -).</p>
</li>
<li>
<p>Grouping operators: <code class="codeph">()</code>. Parentheses can be used to alter the precedence of the arithmetic operators.</p>
</li>
<li>
<p>Absolute function: <code class="codeph">ABS(n)</code> returns the absolute value of <code class="codeph">n</code>; where <code class="codeph">n</code> is any expression that returns a number.</p>
</li>
<li>
<p>Logarithmic function: <code class="codeph">LOG(n)</code> returns the base-10 logarithmic value of <code class="codeph">n</code> ; where <code class="codeph">n</code> is any expression that returns a number.</p>
</li>
<li>
<p>Predefined scoring components: Each of the following scoring components returns a value of 0 - 100, depending on different criteria:</p>
<div class="tblformal" id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB__GUID-95FF3C01-68A5-4F0B-8731-5F72F1AD0420">
<table class="cellalignment3033" summary="Predefined scoring list">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3048" id="d53900e2842">Name</th>
<th class="cellalignment3089" id="d53900e2845">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e2850" headers="d53900e2842">
<p><code class="codeph">DISCRETE</code></p>
</td>
<td class="cellalignment3090" headers="d53900e2850 d53900e2845">
<p>If the term exists in the document, score = 100. Otherwise, score = 0.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e2858" headers="d53900e2842">
<p><code class="codeph">OCCURRENCE</code></p>
</td>
<td class="cellalignment3090" headers="d53900e2858 d53900e2845">
<p>Score based on the number of occurrences.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e2866" headers="d53900e2842">
<p><code class="codeph">RELEVANCE</code></p>
</td>
<td class="cellalignment3090" headers="d53900e2866 d53900e2845">
<p>Score based on the document&#39;s relevance.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e2874" headers="d53900e2842">
<p><code class="codeph">COMPLETION</code></p>
</td>
<td class="cellalignment3090" headers="d53900e2874 d53900e2845">
<p>Score based on coverage. Documents will score higher if the ratio between the number of the matching terms and the number of all terms in the section (counting stop words) is higher. The <code class="codeph">COMPLETION</code> scoring is only applicable when used with the <code class="codeph">WITHIN</code> operator to search in zone sections.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e2888" headers="d53900e2842">
<p><code class="codeph">IGNORE</code></p>
</td>
<td class="cellalignment3090" headers="d53900e2888 d53900e2845">
<p>Ignore the scoring of this term. This component should be used alone. Otherwise, the query will return a syntax error. If the scoring of the only term in the query is set to <code class="codeph">IGNORE</code>, then all the matching documents should be returned with the same score of 100.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></li>
</ul>
</dd>
</dl>
<div class="infobox-note" id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB__GUID-F174076C-EFF5-4195-BDFB-BC11ABF50959">
<p class="notep1">Note:</p>
<p>For numeric literals, any number literal can be used that conforms to the SQL pattern of number literal, and is within the range of the double precision floating point (<code class="codeph">-3.4e38</code> to <code class="codeph">3.4e38</code>).</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">scoring_expression Syntax</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">&lt;Exp&gt;   :=         &lt;Exp&gt; + &lt;Term&gt; | &lt;Exp&gt; - &lt;Term&gt; |  &lt;Term&gt;
 
&lt;Term&gt;   :=         &lt;Term&gt; * &lt;Factor&gt; | &lt;Term&gt; / &lt;Factor&gt; | &lt;Factor&gt;
 
&lt;Factor&gt; :=         &lt;&lt;NumericLiterals &gt;&gt;| DISCRETE | OCCURRENCE | RELEVANCE |
         COMPLETION | IGNORE |  ( &lt;Exp&gt; ) | -&lt;Factor&gt; | Abs(&lt;Exp&gt;) | Log(&lt;Exp&gt;)
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for DEFINESCORE Operator</p>
<pre dir="ltr">&#39;DEFINESCORE (dog, OCCURRENCE)&#39;
</pre>
<p>Queries for the word <span class="italic">dog</span>, and scores each document using the occurrence score. Returns the score as integer.</p>
<pre dir="ltr">&#39;DEFINESCORE (Labradors are big dog, RELEVANCE)&#39;
</pre>
<p>Queries for the phrase <span class="italic">Labradors</span> <span class="italic">are</span> <span class="italic">big</span> <span class="italic">dogs</span>, and scores each document using the relevance score.</p>
<pre dir="ltr">&#39;cat and DEFINESCORE (dog, IGNORE)&#39;
</pre>
<p>Queries for the words <span class="italic">dog</span> and <span class="italic">cat</span>, using only the default relevance score of <span class="italic">cat</span> as the overall score of the document. Returns the score as integer.</p>
<pre dir="ltr">&#39;DEFINESCORE (dog, IGNORE)&#39;
</pre>
<p>Queries for the word <span class="italic">dog</span>, and returns all documents with the word <span class="italic">dog</span>. The result is the same as if all documents get a score of 100. Returns the score as integer.</p>
<pre dir="ltr">&#39;DEFINESCORE (dog, ABS (100-RELEVANCE))&#39;
</pre>
<p>Queries for the word <span class="italic">dog</span>, and scores each document using the absolute value of 100 minus the relevance score. Returns the score as integer.</p>
<pre dir="ltr">&#39;cat and DEFINESCORE (dog, RELEVANCE*5 - OCCURRENCE)&#39;
</pre>
<p>Returns a syntax error: Two predefined components are used.</p>
<p>When <code class="codeph">DEFINESCORE</code> is used with query templates, the <code class="codeph">scoring_expression</code> overrides the values specified by the template. The following example queries for &#34;dog&#34; and &#34;cat,&#34; scores &#34;cat&#34; using <code class="codeph">OCCURRENCE</code><code class="codeph">(COUNT)</code> and scores &#34;dog&#34; based on <code class="codeph">RELEVANCE</code>.</p>
<pre dir="ltr">&lt;query&gt;
      &lt;textquery grammar=&#34;CONTEXT&#34; lang=&#34;english&#34;&gt;
                 DEFINESCORE(dog, RELEVANCE) and  cat
      &lt;/textquery&gt;
      &lt;score datatype=&#34;INTEGER&#34; algorithm=&#34;COUNT&#34;/&gt;
&lt;/query&gt;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Limitations</p>
<ul style="list-style-type: disc;">
<li>
<p>If the <code class="codeph">ABOUT</code> operator is used in <code class="codeph">query_term</code>, the <code class="codeph">OCCURRENCE</code> and <code class="codeph">COMPLETION</code> scoring will not be applicable. If used, the query will return a syntax error.</p>
</li>
<li>
<p>The <code class="codeph">IGNORE</code> score cannot be used as right hand of the minus operator. If used, then a syntax error will occur.</p>
</li>
<li>
<p>The <code class="codeph">COMPLETION</code> score is only applicable if the <code class="codeph">DEFINESCORE</code> is used with a <code class="codeph">WITHIN</code> operator to search in zone sections, for example:</p>
<pre dir="ltr">&#39;DEFINESCORE (dog, COMPLETION) within zonesection&#39;
</pre>
<p>otherwise, the query will return a syntax error.</p>
</li>
<li>
<p>For the left hand operand of <code class="codeph">WITHIN</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p>All nodes must use the same predefined-scoring component. (If not specified, then the predefined scoring is <code class="codeph">RELEVANCE</code>.)</p>
</li>
<li>
<p>If the nodes use <code class="codeph">DISCRETE</code> or <code class="codeph">COMPLETION</code>, then only the <code class="codeph">AND</code> and <code class="codeph">OR</code> operator is allowed as the left hand children of <code class="codeph">WITHIN</code>.</p>
</li>
<li>
<p>If the nodes use <code class="codeph">DISCRETE</code> or <code class="codeph">COMPLETION</code>, then <code class="codeph">WITHIN</code> will use the max score of all section instances as the score.</p>
</li>
<li>
<p>If the nodes use <code class="codeph">RELEVANCE</code> or <code class="codeph">OCCURRENCE</code>, then <code class="codeph">WITHIN</code> will use the summation of the score of all section instances as the score.</p>
</li>
</ul>
</li>
<li>
<p>Only one predefined scoring component can be used in the <code class="codeph">scoring_expression</code> at one time. If more than one predefined scoring component is used, then a syntax error will occur.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-BEF0570D-8B11-4893-AEFF-0AD7DED185BB__GUID-39EB99C4-975F-4B93-9BE8-4E59CFA08F9D">
<p class="notep1">See Also:</p>
<p><a class="olink SQLRF" target="_blank" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">DEFINESCORE</code> operator, the absolute function, the logarithmic function, and the predefined scoring components are case-insensitive.</p>
</li>
<li>
<p>The <code class="codeph">query_term</code> and the <code class="codeph">scoring_expression</code> parameters are mandatory.</p>
</li>
<li>
<p>The final score of the <code class="codeph">DEFINESCORE</code> operator will be truncated to be in the 0 &ndash; 100 range. If the data type is <code class="codeph">INTEGER</code>, then the score is rounded up.</p>
</li>
<li>
<p>The intermediate data type of the scoring value is a double precision float. As a result, the value is limited to be in the <code class="codeph">-3.4e38</code> to <code class="codeph">3.4e38</code> range. If the intermediate scoring of any document exceeds the value, then the score will be truncated. If an integer scoring is required, then the score will always be rounded up after the score is calculated.</p>
</li>
<li>
<p>The <code class="codeph">DEFINESCORE</code> operator can be used as an operand of the following operators:</p>
<ul style="list-style-type: disc;">
<li>
<p>AND</p>
</li>
<li>
<p>NOT</p>
</li>
<li>
<p>INPATH</p>
</li>
<li>
<p>THRESHOLD</p>
</li>
<li>
<p>WITHIN</p>
</li>
<li>
<p>SQE</p>
</li>
<li>
<p>OR</p>
</li>
<li>
<p>DEFINEMERGE</p>
</li>
<li>
<p>MINUS</p>
</li>
<li>
<p>WEIGHT</p>
</li>
<li>
<p>ACCUM</p>
</li>
</ul>
<p>For example, the following statement is valid:</p>
<pre dir="ltr">DEFINESCORE(&#39;dog&#39;, OCCURRENCE) AND DEFINESCORE(&#39;cat&#39;, RELEVANCE)
</pre>
<p>Queries for the term &#34;dog&#34; using occurrence scoring, and the term &#34;cat&#34; using relevance scoring.</p>
</li>
<li>
<p>If <code class="codeph">DEFINESCORE</code> is used as a parameter of other operators, then an error will be returned. For example, the following example returns an error:</p>
<pre dir="ltr">SYN(DEFINESCORE(&#39;cat&#39;, OCCURRENCE))
</pre></li>
<li>
<p>When used with query templates, the <code class="codeph">scoring_expression</code> overrides the values specified by the template. For example,</p>
<pre dir="ltr">&lt;query&gt;
    &lt;textquery grammar=&#34;CONTEXT&#34; lang=&#34;english&#34;&gt;
        DEFINESCORE(dog, RELEVANCE) and  cat
    &lt;/textquery&gt;
    &lt;score datatype=&#34;INTEGER&#34; algorithm=&#34;COUNT&#34;/&gt;
&lt;/query&gt;
</pre>
<p>Queries for &#34;dog&#34; and &#34;cat&#34;, scores &#34;cat&#34; using <code class="codeph">OCCURRENCE(COUNT)</code>, and scores &#34;dog&#34; based on <code class="codeph">RELEVANCE</code>.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topic</p>
<p><a href="cqoper.htm#GUID-F6773261-6BA0-4F99-A865-E2E3D827D058">DEFINEMERGE</a>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0306"></a>
<div class="props_rev_3"><a id="GUID-BB03A0FF-3175-44F1-9EF4-A519CCC94154"></a>
<h2 id="CCREF-GUID-BB03A0FF-3175-44F1-9EF4-A519CCC94154" class="sect2"><span class="enumeration_section">3.9</span> EQUIValence (=)</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">EQUIV</code> operator to specify an acceptable substitution for a word in a query.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-BB03A0FF-3175-44F1-9EF4-A519CCC94154__GUID-CD20C643-CA9C-42AF-902A-E1B63E220571">
<table class="cellalignment3028" summary="This table describes EQUIValence (=) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3141" id="d53900e3298">Syntax</th>
<th class="cellalignment3155" id="d53900e3301">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3142" id="d53900e3306" headers="d53900e3298">
<p><span class="variable">term1</span>=<span class="variable">term2</span></p>
<p><span class="variable">term1</span> equiv <span class="variable">term2</span></p>
</td>
<td class="cellalignment3156" headers="d53900e3306 d53900e3301">
<p>Specifies that <tt>term2</tt> is an acceptable substitution for <tt>term1</tt><span class="italic">.</span> Score calculated as the sum of all occurrences of both terms.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for EQUIV Operator</p>
<p>The following example returns all documents that contain either the phrase <span class="italic">alsatians are big dogs</span> or <span class="italic">labradors are big dogs</span>:</p>
<pre dir="ltr">&#39;labradors=alsatians are big dogs&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Operator Precedence</p>
<p><a id="d53900e3347" class="indexterm-anchor"></a>The <code class="codeph">EQUIV</code> operator has higher precedence than all other operators except the expansion operators (fuzzy, soundex, stem).</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0307"></a>
<div class="props_rev_3"><a id="GUID-5BA618D7-45DA-4253-BB0D-313970EA7C5D"></a>
<h2 id="CCREF-GUID-5BA618D7-45DA-4253-BB0D-313970EA7C5D" class="sect2"><span class="enumeration_section">3.10</span> Fuzzy</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">fuzzy</code> operator to expand queries to include words that are spelled similarly to the specified term. This type of expansion is helpful for finding more accurate results when there are frequent misspellings in your document set.</p>
<p>The <code class="codeph">fuzzy</code> syntax enables you to rank the result set so that documents that contain words with high similarity to the query word are scored higher than documents with lower similarity. You can also limit the number of expanded terms.</p>
<p>Unlike stem expansion, the number of words generated by a <code class="codeph">fuzzy</code> expansion depends on what is in the index. Results can vary significantly according to the contents of the index.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Supported Languages</p>
<p>Oracle Text supports <code class="codeph">fuzzy</code> definitions for English, French, German, Italian, Dutch, Spanish, Portuguese, Japanese, OCR, and auto-language detection.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Stopwords</p>
<p>If the <code class="codeph">fuzzy</code> expansion returns a stopword, the stopword is not included in the query or highlighted by <code class="codeph">CTX_DOC.HIGHLIGHT</code> or <code class="codeph">CTX_DOC.MARKUP</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Base-Letter Conversion</p>
<p>If base-letter conversion is enabled for a text column and the query expression contains a <code class="codeph">fuzzy</code> operator, Oracle Text operates on the base-letter form of the query.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">fuzzy(term, score, numresults, weight)
</pre>
<div class="tblformal" id="GUID-5BA618D7-45DA-4253-BB0D-313970EA7C5D__GUID-302CF0AA-16A9-4DBB-8106-514BE507F4A3">
<table class="cellalignment3028" summary="This table describes Fuzzy operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3049" id="d53900e3475">Parameter</th>
<th class="cellalignment3171" id="d53900e3478">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e3483" headers="d53900e3475">
<p>term</p>
</td>
<td class="cellalignment3172" headers="d53900e3483 d53900e3478">
<p>Specify the word on which to perform the <code class="codeph">fuzzy</code> expansion. Oracle Text expands <tt>term</tt> to include words only in the index. The word needs to be at least 3 characters for the <code class="codeph">fuzzy</code> operator to process it.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e3499" headers="d53900e3475">
<p>score</p>
</td>
<td class="cellalignment3172" headers="d53900e3499 d53900e3478">
<p>Specify a similarity score. Terms in the expansion that score below this number are discarded. Use a number between 1 and 80. The default is 60.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e3506" headers="d53900e3475">
<p>numresults</p>
</td>
<td class="cellalignment3172" headers="d53900e3506 d53900e3478">
<p>Specify the maximum number of terms to use in the expansion of <tt>term</tt>. Use a number between 1 and 5000. The default is 100.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e3516" headers="d53900e3475">
<p>weight</p>
</td>
<td class="cellalignment3172" headers="d53900e3516 d53900e3478">
<p>Specify <code class="codeph">WEIGHT</code> or <code class="codeph">W</code> for the results to be weighted according to their similarity scores.</p>
<p>Specify <code class="codeph">NOWEIGHT</code> or <code class="codeph">N</code> for no weighting of results.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for Fuzzy Operator</p>
<p>Consider the <code class="codeph">CONTAINS</code> query:</p>
<pre dir="ltr">...CONTAINS(TEXT, &#39;fuzzy(government, 70, 6, weight)&#39;, 1) &gt; 0;
</pre>
<p>This query expands to the first six <code class="codeph">fuzzy</code> variations of <span class="italic">government</span> in the index that have a similarity score over 70.</p>
<p>In addition, documents in the result set are weighted according to their similarity to <span class="italic">government</span>. Documents containing words most similar to government receive the highest score.</p>
<p>Skip unnecessary parameters using the appropriate number of commas. For example:</p>
<pre dir="ltr">&#39;fuzzy(government,,,weight)&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Backward Compatibility Syntax</p>
<p>The old <code class="codeph">fuzzy</code> syntax from previous releases is still supported. This syntax is as follows:</p>
<div class="tblformal" id="GUID-5BA618D7-45DA-4253-BB0D-313970EA7C5D__GUID-5A995747-40CE-44FD-94EA-BF379EB3097C">
<table class="cellalignment3028" summary="parameter description">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3083" id="d53900e3579">Parameter</th>
<th class="cellalignment3093" id="d53900e3582">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e3587" headers="d53900e3579">
<p>?term</p>
</td>
<td class="cellalignment3094" headers="d53900e3587 d53900e3582">
<p>Expands <tt>term</tt> to include all terms with similar spellings as the specified term. <tt>Term</tt> needs to be at least 3 characters for the <code class="codeph">fuzzy</code> operator to process it.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" --></div>
</div>
<a id="CCREF23824"></a><a id="CCREF23825"></a><a id="CCREF0308"></a>
<div class="props_rev_3"><a id="GUID-37C8ADBE-CA2E-45EF-A1F3-F8587449E601"></a>
<h2 id="CCREF-GUID-37C8ADBE-CA2E-45EF-A1F3-F8587449E601" class="sect2"><span class="enumeration_section">3.11</span> HASPATH</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">HASPATH</code> operator to find all <code class="codeph">XML</code> documents that contain a specified section path. You can also use this operator to do section equality testing.</p>
<p>Your index must be created with the <code class="codeph">PATH_SECTION_GROUP</code> for this operator to work.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-37C8ADBE-CA2E-45EF-A1F3-F8587449E601__GUID-B82BBF9C-C841-4E1E-BE73-CDC8969E64CA">
<table class="cellalignment3028" summary="This table describes HASPATH operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e3688">Syntax</th>
<th class="cellalignment3174" id="d53900e3691">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e3696" headers="d53900e3688">
<p>HASPATH(path)</p>
</td>
<td class="cellalignment3176" headers="d53900e3696 d53900e3691">
<p>Searches an XML document set and returns a score of 100 for all documents where <span class="italic">path</span> exists. Separate parent and child paths with the / character. For example, you can specify <span class="italic">A/B/C</span>.</p>
<p>See example.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e3711" headers="d53900e3688">
<p>HASPATH(A=&#34;value&#34;)</p>
</td>
<td class="cellalignment3176" headers="d53900e3711 d53900e3691">
<p>Searches an XML document set and returns a score of 100 for all documents that have the element A with content <span class="italic">value</span> and only <span class="italic">value</span>.</p>
<p>See example.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section" id="GUID-37C8ADBE-CA2E-45EF-A1F3-F8587449E601__CHDDBDHD">
<p class="subhead2">Using Special Characters with HASPATH and INPATH</p>
<p><a id="d53900e3729" class="indexterm-anchor"></a><a id="d53900e3733" class="indexterm-anchor"></a><a id="d53900e3737" class="indexterm-anchor"></a>The following rules govern the use of special characters with regard to both the <code class="codeph">HASPATH</code> and <code class="codeph">INPATH</code> operators:</p>
<ul style="list-style-type: disc;">
<li>
<p>Left-brace ({) and right-brace (}) characters are not allowed inside <code class="codeph">HASPATH</code> or <code class="codeph">INPATH</code> expressions unless they are inside the equality operand enclosed by double quotes. So both &#39;<code class="codeph">HASPATH({/A/B})</code>&#39; and &#39;<code class="codeph">HASPATH(/A/{B})</code>&#39; will return errors. However, &#39;<code class="codeph">HASPATH(/A[B=&#34;{author}&#34;])</code>&#39; will be parsed correctly.</p>
</li>
<li>
<p>With exception of the backslash (\), special characters, such as dollar sign ($), percent sign (%), underscore (_), left brace ({), and right brace (}), when inside the equality operand enclosed by double or single quotes, have no special meaning. (That is, no stemming, wildcard expansion, or similar processing will be performed on them.) However, they are still subject to regular text lexing and will be translated to whitespace, with the exception of characters declared as printjoins. A backslash will still escape any character that immediately follows it.</p>
<p>For example, if the hyphen (-) and the double quote character (&#34;) are defined as printjoins in a lexer preference, then:</p>
<ul style="list-style-type: disc;">
<li>
<p>The string <span class="italic">B_TEXT</span> inside <code class="codeph">HASPATH(/A[B=&#34;B_TEXT&#34;)</code> will be lexed as the phrase <span class="italic">B TEXT</span>.</p>
</li>
<li>
<p>The string <span class="italic">B-TEXT</span> inside <code class="codeph">HASPATH(/A[B=&#34;B-TEXT&#34;)</code> will be lexed as the word <span class="italic">B-TEXT</span>.</p>
</li>
<li>
<p>The string <span class="italic">B&#39;TEXT</span> inside <code class="codeph">HASPATH(/A[B=&#34;B&#39;TEXT&#34;)</code> will be lexed as the word <span class="italic">B&#34;TEXT</span>. You must use a backslash to escape the double quote between <span class="italic">B</span> and <span class="italic">TEXT</span>, or you will get a parsing error.</p>
</li>
<li>
<p>The string <span class="italic">{B_TEXT}</span> inside <code class="codeph">HASPATH(/A[B=&#34;{B_TEXT}&#34;)</code> will be lexed as a phrase <span class="italic">B TEXT</span>.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for HASPATH Operator</p>
<p>Path Testing</p>
<p>The query</p>
<pre dir="ltr">HASPATH(A/B/C)
</pre>
<p>finds and returns a score of 100 for the document</p>
<pre dir="ltr">&lt;A&gt;&lt;B&gt;&lt;C&gt;dog&lt;/C&gt;&lt;/B&gt;&lt;/A&gt;
</pre>
<p>without the query having to reference <span class="italic">dog</span> at all.</p>
<p>Section Equality Testing</p>
<p>The query</p>
<pre dir="ltr">dog INPATH A
</pre>
<p>finds</p>
<pre dir="ltr">&lt;A&gt;dog&lt;/A&gt;
</pre>
<p>but it also finds</p>
<pre dir="ltr">&lt;A&gt;dog park&lt;/A&gt;
</pre>
<p>To limit the query to the term <span class="italic">dog</span> and nothing else, you can use a section equality test with the <code class="codeph">HASPATH</code> operator. For example,</p>
<pre dir="ltr">HASPATH(A=&#34;dog&#34;)
</pre>
<p>finds and returns a score of 100 only for the first document, and not the second.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Limitations</p>
<p>Because of how XML section data is recorded, false matches might occur with XML sections that are completely empty as follows:</p>
<p>&lt;A&gt;&lt;B&gt;&lt;C&gt;&lt;/C&gt;&lt;/B&gt;&lt;D&gt;&lt;E&gt;&lt;/E&gt;&lt;/D&gt;&lt;/A&gt;</p>
<p>A query of <code class="codeph">HASPATH(A/B/E)</code> or <code class="codeph">HASPATH(A/D/C)</code> falsely matches this document. This type of false matching can be avoided by inserting text between empty tags.</p>
<p>False matches might also occur when the document has empty elements but has values in attributes, as in the following example document:</p>
<pre dir="ltr">&lt;Test&gt;
&lt;Client id=&#34;1&#34;&gt;
 &lt;Info infoid=&#34;1&#34;/&gt;
&lt;/Client&gt;
&lt;Client id=&#34;2&#34;&gt;
 &lt;Info infoid=&#34;2&#34;/&gt;
&lt;/Client&gt;
&lt;/Test&gt;
</pre>
<p>When searching with the following query, the query returns the document shown in the example, which is a false match.</p>
<p>The following query was used to return the example document, which is a false match:</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SELECT main_detail_logging_id, t.xml_data.getstringval() xml_data FROM
TEST_XMLTYPE t
WHERE CONTAINS(t.xml_data,
&#39;HASPATH(/Test/Client[@id=&#34;1&#34;]/Info[@infoid=&#34;2&#34;])&#39;) &gt; 0;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="CCREF23826"></a><a id="CCREF23827"></a><a id="CCREF23828"></a><a id="CCREF23829"></a><a id="CCREF23830"></a><a id="CCREF23831"></a><a id="CCREF23832"></a><a id="CCREF23833"></a><a id="CCREF23834"></a><a id="CCREF23835"></a><a id="CCREF23836"></a><a id="CCREF23837"></a><a id="CCREF23838"></a><a id="CCREF23839"></a><a id="CCREF23840"></a><a id="CCREF23841"></a><a id="CCREF23842"></a><a id="CCREF23843"></a><a id="CCREF23844"></a><a id="CCREF23845"></a><a id="CCREF23846"></a><a id="CCREF0309"></a>
<div class="props_rev_3"><a id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581"></a>
<h2 id="CCREF-GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581" class="sect2"><span class="enumeration_section">3.12</span> INPATH</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">INPATH</code> operator to do path searching in XML documents. This operator is like the <code class="codeph">WITHIN</code> operator except that the right-hand side is a parentheses enclosed path, rather than a single section name.</p>
<p>Your index must be created with the <code class="codeph">PATH_SECTION_GROUP</code> for the <code class="codeph">INPATH</code> operator to work.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<p>The <code class="codeph">INPATH</code> operator has the following syntax:</p>
<p>Top-Level Tag Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-DC7339F8-B79D-4D9D-BD58-9D586C56906D">
<table class="cellalignment3028" summary="This table describes Top-Level Tag Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4016">Syntax</th>
<th class="cellalignment3174" id="d53900e4019">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4024" headers="d53900e4016">
<p>term INPATH (/A)</p>
<p>term INPATH (A)</p>
</td>
<td class="cellalignment3176" headers="d53900e4024 d53900e4019">
<p>Returns documents that have <span class="italic">term</span> within the &lt;A&gt; and &lt;/A&gt; tags.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Any-Level Tag Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-89EC9D5A-D511-464F-B719-728D04AC7677">
<table class="cellalignment3028" summary="This table describes Any-Level Tag Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4045">Syntax</th>
<th class="cellalignment3174" id="d53900e4048">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4053" headers="d53900e4045">
<p>term INPATH (//A)</p>
</td>
<td class="cellalignment3176" headers="d53900e4053 d53900e4048">
<p>Returns documents that have <span class="italic">term</span> in the &lt;A&gt; tag at any level. This query is the same as <span class="italic">&#39;term WITHIN A</span>&#39;</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Direct Parentage Path Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-394B3B49-9E06-4E5B-9D5D-DC13D2A570B0">
<table class="cellalignment3028" summary="This table describes Direct Parentage Path Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4075">Syntax</th>
<th class="cellalignment3174" id="d53900e4078">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4083" headers="d53900e4075">
<p>term INPATH (A/B)</p>
</td>
<td class="cellalignment3176" headers="d53900e4083 d53900e4078">
<p>Returns documents where <span class="italic">term</span> appears in a B element which is a direct child of a top-level A element.</p>
<p>For example, a document containing</p>
<p><code class="codeph">&lt;A&gt;&lt;B&gt;term&lt;/B&gt;&lt;/A&gt;</code></p>
<p>is returned.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Single-Level Wildcard Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-4A281AF4-60F1-47F2-A025-11BA8403FE73">
<table class="cellalignment3028" summary="This table describes Single-Level Wildcard Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4109">Syntax</th>
<th class="cellalignment3174" id="d53900e4112">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4117" headers="d53900e4109">
<p>term INPATH (A/*/B)</p>
</td>
<td class="cellalignment3176" headers="d53900e4117 d53900e4112">
<p>Returns documents where <span class="italic">term</span> appears in a B element which is a grandchild (two levels down) of a top-level A element.</p>
<p>For example a document containing</p>
<p><code class="codeph">&lt;A&gt;&lt;D&gt;&lt;B&gt;term&lt;/B&gt;&lt;/D&gt;&lt;/A&gt;</code></p>
<p>is returned.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Multi-level Wildcard Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-A4A76A45-BA0B-4015-9FBE-3C9996E7357F">
<table class="cellalignment3028" summary="This table describes Multi-level Wildcard Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4144">Syntax</th>
<th class="cellalignment3174" id="d53900e4147">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4152" headers="d53900e4144">
<p>term INPATH (A/*/B/*/*/C)</p>
</td>
<td class="cellalignment3176" headers="d53900e4152 d53900e4147">
<p>Returns documents where <span class="italic">term</span> appears in a C element which is 3 levels down from a B element which is two levels down (grandchild) of a top-level A element.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Any-Level Descendant Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-2634F620-1C62-4508-AD06-4E07A4AB3675">
<table class="cellalignment3028" summary="This table describes Any-Level Descendant Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4171">Syntax</th>
<th class="cellalignment3174" id="d53900e4174">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4179" headers="d53900e4171">
<p>term INPATH(A//B)</p>
</td>
<td class="cellalignment3176" headers="d53900e4179 d53900e4174">
<p>Returns documents where term appears in a B element which is some descendant (any level) of a top-level A element.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Attribute Searching</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-32C55F99-C4A3-426E-9BE2-7CBF83A1F284">
<table class="cellalignment3028" summary="This table describes Attribute Searching.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4195">Syntax</th>
<th class="cellalignment3174" id="d53900e4198">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4203" headers="d53900e4195">
<p>term INPATH (//A/@B)</p>
</td>
<td class="cellalignment3176" headers="d53900e4203 d53900e4198">
<p>Returns documents where <span class="italic">term</span> appears in the B attribute of an A element at any level. Attributes must be bound to a direct parent.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Descendant/Attribute Existence Testing</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-669D81EC-B5E4-4835-AD29-AEA73352F9E2">
<table class="cellalignment3028" summary="This table describes Descendant or Attribute Existence Testing.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4222">Syntax</th>
<th class="cellalignment3174" id="d53900e4225">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4230" headers="d53900e4222">
<p>term INPATH (A[B])</p>
</td>
<td class="cellalignment3176" headers="d53900e4230 d53900e4225">
<p>Returns documents where term appears in a top-level A element which has a B element as a direct child.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4237" headers="d53900e4222">
<p>term INPATH (A[.//B])</p>
</td>
<td class="cellalignment3176" headers="d53900e4237 d53900e4225">
<p>Returns documents where term appears in a top-level A element which has a B element as a descendant at any level.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4244" headers="d53900e4222">
<p>term INPATH (//A[@B])</p>
</td>
<td class="cellalignment3176" headers="d53900e4244 d53900e4225">
<p>Finds documents where term appears in an A element at any level which has a B attribute. Attributes must be tied to a direct parent.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Attribute Value Testing</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-335EA6F0-7CF6-4791-A170-8110034E24AF">
<table class="cellalignment3028" summary="This table describes Attribute Value Testing.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4260">Syntax</th>
<th class="cellalignment3174" id="d53900e4263">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4268" headers="d53900e4260">
<p>term INPATH (A[@B = &#34;value&#34;])</p>
</td>
<td class="cellalignment3176" headers="d53900e4268 d53900e4263">
<p>Finds all documents where <span class="italic">term</span> appears in a top-level A element which has a B attribute whose value is <span class="italic">value</span>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4281" headers="d53900e4260">
<p>term INPATH (A[@B != &#34;value&#34;])</p>
</td>
<td class="cellalignment3176" headers="d53900e4281 d53900e4263">
<p>Finds all documents where <span class="italic">term</span> appears in a top-level A element which has a B attribute whose value is not <span class="italic">value</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Tag Value Testing</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-ED6CB0D1-31E9-462D-893C-7F001F376AA2">
<table class="cellalignment3028" summary="This table describes Tag Value Testing.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4303">Syntax</th>
<th class="cellalignment3174" id="d53900e4306">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4311" headers="d53900e4303">
<p>term INPATH (A[B = &#34;value&#34;]))</p>
</td>
<td class="cellalignment3176" headers="d53900e4311 d53900e4306">
<p>Returns documents where <span class="italic">term</span> appears in an A tag which has a B tag whose value is <span class="italic">value</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Not</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-78B50513-A9CF-4C9B-B5F3-AB43F8F25375">
<table class="cellalignment3028" summary="This table describes NOT Testing.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4334">Syntax</th>
<th class="cellalignment3174" id="d53900e4337">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4342" headers="d53900e4334">
<p>term INPATH (A[NOT(B)])</p>
</td>
<td class="cellalignment3176" headers="d53900e4342 d53900e4337">
<p>Finds documents where <span class="italic">term</span> appears in a top-level A element which does not have a B element as an immediate child.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>AND and OR Testing</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-68898665-1272-4E0C-A42F-23DA9BA9611D">
<table class="cellalignment3028" summary="This table describes AND and OR Testing.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4361">Syntax</th>
<th class="cellalignment3174" id="d53900e4364">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4369" headers="d53900e4361">
<p>term INPATH (A[B and C])</p>
</td>
<td class="cellalignment3176" headers="d53900e4369 d53900e4364">
<p>Finds documents where term appears in a top-level A element which has a B and a C element as an immediate child.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4376" headers="d53900e4361">
<p>term INPATH (A[B and @C=&#34;value&#34;]])</p>
</td>
<td class="cellalignment3176" headers="d53900e4376 d53900e4364">
<p>Finds documents where <span class="italic">term</span> appears in a top-level A element which has a B element and a C attribute whose value is <span class="italic">value</span>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4390" headers="d53900e4361">
<p>term INPATH (A [B OR C])</p>
</td>
<td class="cellalignment3176" headers="d53900e4390 d53900e4364">
<p>Finds documents where <span class="italic">term</span> appears in a top-level A element which has a B element or a C element.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Combining Path and Node Tests</p>
<div class="tblformal" id="GUID-F78EC75C-55C8-4C79-A744-AE0DB2E1F581__GUID-2675E387-2252-4342-9E5F-17EA0376374D">
<table class="cellalignment3028" summary="This table describes Combining Path and Node Tests.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3173" id="d53900e4409">Syntax</th>
<th class="cellalignment3174" id="d53900e4412">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3175" id="d53900e4417" headers="d53900e4409">
<p>term INPATH (A[@B = &#34;value&#34;]/C/D)</p>
</td>
<td class="cellalignment3176" headers="d53900e4417 d53900e4412">
<p>Returns documents where <span class="italic">term</span> appears in aD element which is the child of a C element, which is the child of a top-level A element with a B attribute whose value is <span class="italic">value</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Nested INPATH</p>
<p>Nest the entire <code class="codeph">INPATH</code> expression in another <code class="codeph">INPATH</code> expression as follows:</p>
<pre dir="ltr">(dog INPATH (//A/B/C)) INPATH (D)
</pre>
<p>When you do so, the two <code class="codeph">INPATH</code> paths are completely independent. The outer <code class="codeph">INPATH</code> path does not change the context node of the inner <code class="codeph">INPATH</code> path. For example:</p>
<pre dir="ltr">(dog INPATH (A)) INPATH (D)
</pre>
<p>never finds any documents, because the inner <code class="codeph">INPATH</code> is looking for <span class="italic">dog</span> within the top-level tag A, and the outer <code class="codeph">INPATH</code> constrains that to document with top-level tag D. A document can have only one top-level tag, so this expression never finds any documents.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Case-Sensitivity</p>
<p>Tags and attribute names in path searching are case-sensitive. That is,</p>
<pre dir="ltr">dog INPATH (A)
</pre>
<p>finds <code class="codeph">&lt;A&gt;dog&lt;/A&gt;</code> but does not find <code class="codeph">&lt;a&gt;dog&lt;/a&gt;</code>. Instead use</p>
<pre dir="ltr">dog INPATH (a)
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Using Special Characters with INPATH</p>
<p>See <span class="q">&#34;<a href="cqoper.htm#GUID-37C8ADBE-CA2E-45EF-A1F3-F8587449E601__CHDDBDHD">Using Special Characters with HASPATH and INPATH</a>&#34;</span> for information on using special characters, such as the percent sign (%) or the backslash (\), with <code class="codeph">INPATH</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for INPATH Operator</p>
<p>Top-Level Tag Searching</p>
<p>To find all documents that contain the term <span class="italic">dog</span> in the top-level tag &lt;A&gt;:</p>
<pre dir="ltr">dog INPATH (/A)
</pre>
<p>or</p>
<pre dir="ltr">dog INPATH(A)
</pre>
<p>Any-Level Tag Searching</p>
<p>To find all documents that contain the term <span class="italic">dog</span> in the &lt;A&gt; tag at any level:</p>
<pre dir="ltr">dog INPATH(//A)
</pre>
<p>This query finds the following documents:</p>
<pre dir="ltr">&lt;A&gt;dog&lt;/A&gt;
</pre>
<p>and</p>
<pre dir="ltr">&lt;C&gt;&lt;B&gt;&lt;A&gt;dog&lt;/A&gt;&lt;/B&gt;&lt;/C&gt;
</pre>
<p>Direct Parentage Searching</p>
<p>To find all documents that contain the term <span class="italic">dog</span> in a B element that is a direct child of a top-level A element:</p>
<pre dir="ltr">dog INPATH(A/B)
</pre>
<p>This query finds the following XML document:</p>
<pre dir="ltr">&lt;A&gt;&lt;B&gt;My dog is friendly.&lt;/B&gt;&lt;A&gt;
</pre>
<p>but does not find:</p>
<pre dir="ltr">&lt;C&gt;&lt;B&gt;My dog is friendly.&lt;/B&gt;&lt;/C&gt;
</pre>
<p>Tag Value Testing</p>
<p>You can test the value of tags. For example, the query:</p>
<pre dir="ltr">dog INPATH(A[B=&#34;dog&#34;])
</pre>
<p>Finds the following document:</p>
<pre dir="ltr">&lt;A&gt;&lt;B&gt;dog&lt;/B&gt;&lt;/A&gt;
</pre>
<p>But does not find:</p>
<pre dir="ltr">&lt;A&gt;&lt;B&gt;My dog is friendly.&lt;/B&gt;&lt;/A&gt;
</pre>
<p>Attribute Searching</p>
<p>You can search the content of attributes. For example, the query:</p>
<pre dir="ltr">dog INPATH(//A/@B)
</pre>
<p>Finds the document</p>
<pre dir="ltr">&lt;C&gt;&lt;A  B=&#34;snoop dog&#34;&gt; &lt;/A&gt; &lt;/C&gt;
</pre>
<p>Attribute Value Testing</p>
<p>You can test the value of attributes. For example, the query</p>
<pre dir="ltr">California INPATH (//A[@B = &#34;home address&#34;])
</pre>
<p>Finds the document:</p>
<pre dir="ltr">&lt;A B=&#34;home address&#34;&gt;San Francisco, California, USA&lt;/A&gt;
</pre>
<p>But does not find:</p>
<pre dir="ltr">&lt;A B=&#34;work address&#34;&gt;San Francisco, California, USA&lt;/A&gt;
</pre>
<p>Path Testing</p>
<p>You can test if a path exists with the <code class="codeph">HASPATH</code> operator. For example, the query:</p>
<pre dir="ltr">HASPATH(A/B/C)
</pre>
<p>finds and returns a score of 100 for the document</p>
<pre dir="ltr">&lt;A&gt;&lt;B&gt;&lt;C&gt;dog&lt;/C&gt;&lt;/B&gt;&lt;/A&gt;
</pre>
<p>without the query having to reference <span class="italic">dog</span> at all.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Limitations</p>
<p>Testing for Equality</p>
<p>The following is an example of an <code class="codeph">INPATH</code> equality test.</p>
<pre dir="ltr">dog INPATH (A[@B = &#34;foo&#34;])
</pre>
<p>The following limitations apply for these expressions:</p>
<ul style="list-style-type: disc;">
<li>
<p>Only equality and inequality are supported. Range operators and functions are not supported.</p>
</li>
<li>
<p>The left hand side of the equality must be an attribute. Tags and literals here are not enabled.</p>
</li>
<li>
<p>The right hand side of the equality must be a literal. Tags and attributes here are not allowed.</p>
</li>
<li>
<p>The test for equality depends on your lexer settings. With the default settings, the query</p>
<pre dir="ltr">dog INPATH (A[@B= &#34;pot of gold&#34;])
</pre>
<p>matches the following sections:</p>
<pre dir="ltr">&lt;A B=&#34;POT OF GOLD&#34;&gt;dog&lt;/A&gt;
</pre>
<p>and</p>
<pre dir="ltr">&lt;A B=&#34;pot of gold&#34;&gt;dog&lt;/A&gt;
</pre>
<p>because lexer is case-insensitive by default.</p>
<pre dir="ltr">&lt;A B=&#34;POT IS GOLD&#34;&gt;dog&lt;/A&gt;
</pre>
<p>because <span class="italic">of</span> and <span class="italic">is</span> are default stopwords in English, and a stopword matches any stopword word.</p>
<pre dir="ltr">&lt;A B=&#34;POT_OF_GOLD&#34;&gt;dog&lt;/A&gt;
</pre>
<p>because the underscore character is not a join character by default.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23847"></a><a id="CCREF2088"></a>
<div class="props_rev_3"><a id="GUID-B995F693-A4AA-493D-A62D-6D79857BA50F"></a>
<h2 id="CCREF-GUID-B995F693-A4AA-493D-A62D-6D79857BA50F" class="sect2"><span class="enumeration_section">3.13</span> MDATA</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">MDATA</code> operator to query documents that contain <code class="codeph">MDATA</code> sections. <code class="codeph">MDATA</code> sections are metadata that have been added to documents to speed up mixed querying.</p>
<p><code class="codeph">MDATA</code> queries are treated exactly as literals. For example, with the query:</p>
<pre dir="ltr">MDATA(price, $1.24)
</pre>
<p>the <span class="italic">$</span> is not interpreted as a stem operator, nor is the . (period) transformed into whitespace. A right (close) parenthesis terminates the <code class="codeph">MDATA</code> operator, so that <code class="codeph">MDATA</code> values that have close parentheses cannot be searched.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">MDATA(<span class="variable">sectionname</span>, <span class="variable">value</span>)
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3567"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B995F693-A4AA-493D-A62D-6D79857BA50F__GUID-A1F21D07-1BA5-4617-B823-0AD7AF350F64"><!-- --></a>sectionname</dt>
<dd>
<p>The name of the <code class="codeph">MDATA</code> section(s) to search. <code class="codeph">MDATA</code> will also search <code class="codeph">DATE</code> or numerical equality if the <code class="codeph">sectionname</code> parameter is mapped to a <code class="codeph">FILTER</code> <code class="codeph">BY</code> column of <code class="codeph">DATE</code> or some numerical type.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3568"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-B995F693-A4AA-493D-A62D-6D79857BA50F__GUID-41931497-582F-4498-9973-060D85A645DC"><!-- --></a>value</dt>
<dd>
<p>The value of the <code class="codeph">MDATA</code> section. For example, if an <code class="codeph">MDATA</code> section called <code class="codeph">Booktype</code> has been created, it might have a value of <span class="italic">paperback</span>.</p>
<p>For <code class="codeph">MDATA</code> operator on <code class="codeph">MDATA</code> sections that are mapped to a <code class="codeph">DATE</code> <code class="codeph">FILTER</code> <code class="codeph">BY</code> column, the <code class="codeph">MDATA</code> value must follow the Date format: <code class="codeph">YYYY-MM-DD HH24:MI:SS</code>. Otherwise, the expected rows will not be returned. If the time component is omitted, it will default to <code class="codeph">00:00:00</code>, according to SQL semantics.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for MDATA Operator</p>
<p>Suppose you want to query for books written by the writer <span class="italic">Nigella</span> <span class="italic">Lawson</span> that contain the word <span class="italic">summer</span>. Assuming that an <code class="codeph">MDATA</code> section called <code class="codeph">AUTHOR</code> has been declared, you can query as follows:</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SELECT id FROM idx_docs
  WHERE CONTAINS(text, &#39;summer AND MDATA(author, Nigella Lawson)&#39;)&gt;0
</pre>
<p>This query will only be successful if an <code class="codeph">AUTHOR</code> tag has the exact value <span class="italic">Nigella Lawson</span> (after simplified tokenization). <span class="italic">Nigella</span> or <span class="italic">Ms. Nigella Lawson</span> will not work.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p><code class="codeph">MDATA</code> query values ignore stopwords.</p>
<p>The <code class="codeph">MDATA</code> operator returns an unlimited number of results or 0, depending on whether the document is a match. You can set the maximum.</p>
<p>The <code class="codeph">MDATA</code> operator is not supported for <code class="codeph">CTXCAT</code> and <code class="codeph">CTXRULE</code> indexes.</p>
<p><a href="cqoper.htm#GUID-B995F693-A4AA-493D-A62D-6D79857BA50F__BGBGJFDH" title="This table shows MDATA and Other Query Operators.">Table 3-2</a> shows how <code class="codeph">MDATA</code> interacts with some other query operators:</p>
<div class="tblformal" id="GUID-B995F693-A4AA-493D-A62D-6D79857BA50F__BGBGJFDH">
<p class="titleintable">Table 3-2 MDATA and Other Query Operators</p>
<table class="cellalignment3028" title="MDATA and Other Query Operators" summary="This table shows MDATA and Other Query Operators.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3099" id="d53900e4914">Operator</th>
<th class="cellalignment3029" id="d53900e4917">Example</th>
<th class="cellalignment3099" id="d53900e4920">Allowed?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4925" headers="d53900e4914">
<p>AND</p>
</td>
<td class="cellalignment3031" headers="d53900e4925 d53900e4917">
<p>dog &amp; MDATA(a, b)</p>
</td>
<td class="cellalignment3101" headers="d53900e4925 d53900e4920">
<p>yes</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4935" headers="d53900e4914">
<p>OR</p>
</td>
<td class="cellalignment3031" headers="d53900e4935 d53900e4917">
<p>dog | MDATA(a, b)</p>
</td>
<td class="cellalignment3101" headers="d53900e4935 d53900e4920">
<p>yes</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4945" headers="d53900e4914">
<p>NOT</p>
</td>
<td class="cellalignment3031" headers="d53900e4945 d53900e4917">
<p>dog ~ MDATA(a, b)</p>
</td>
<td class="cellalignment3101" headers="d53900e4945 d53900e4920">
<p>yes</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4955" headers="d53900e4914">
<p>MINUS</p>
</td>
<td class="cellalignment3031" headers="d53900e4955 d53900e4917">
<p>dog - MDATA(a, b)</p>
</td>
<td class="cellalignment3101" headers="d53900e4955 d53900e4920">
<p>yes</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4965" headers="d53900e4914">
<p>ACCUM</p>
</td>
<td class="cellalignment3031" headers="d53900e4965 d53900e4917">
<p>dog , MDATA(a, b)</p>
</td>
<td class="cellalignment3101" headers="d53900e4965 d53900e4920">
<p>yes</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4975" headers="d53900e4914">
<p>PHRASE</p>
</td>
<td class="cellalignment3031" headers="d53900e4975 d53900e4917">
<p>MDATA(a, b) dog</p>
</td>
<td class="cellalignment3101" headers="d53900e4975 d53900e4920">
<p>no</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4985" headers="d53900e4914">
<p>NEAR</p>
</td>
<td class="cellalignment3031" headers="d53900e4985 d53900e4917">
<p>MDATA(a, b) ; dog</p>
</td>
<td class="cellalignment3101" headers="d53900e4985 d53900e4920">
<p>no</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e4995" headers="d53900e4914">
<p>WITHIN, HASPATH, INPATH</p>
</td>
<td class="cellalignment3031" headers="d53900e4995 d53900e4917">
<p>MDATA(a, b) WITHIN c</p>
</td>
<td class="cellalignment3101" headers="d53900e4995 d53900e4920">
<p>no</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e5005" headers="d53900e4914">
<p>Thesaurus</p>
</td>
<td class="cellalignment3031" headers="d53900e5005 d53900e4917">
<p>MDATA(a, SYN(b))</p>
</td>
<td class="cellalignment3101" headers="d53900e5005 d53900e4920">
<p>no</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e5015" headers="d53900e4914">
<p>expansion</p>
</td>
<td class="cellalignment3031" headers="d53900e5015 d53900e4917">
<p>MDATA(a, $b)</p>
<p>MDATA(a, b%)</p>
<p>MDATA(a, !b)</p>
<p>MDATA(a, ?b)</p>
</td>
<td class="cellalignment3101" headers="d53900e5015 d53900e4920">
<p>no (syntactically allowed, but the inner operator is treated as literal text)</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3101" id="d53900e5031" headers="d53900e4914">
<p>ABOUT</p>
</td>
<td class="cellalignment3031" headers="d53900e5031 d53900e4917">
<p>ABOUT(MDATA(a,b))</p>
<p>MDATA(ABOUT(a))</p>
</td>
<td class="cellalignment3101" headers="d53900e5031 d53900e4920">
<p>no (syntactically allowed, but the inner operator is treated as literal text)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>When <code class="codeph">MDATA</code> sections repeat, each instance is a separate and independent value. For instance, the document</p>
<pre dir="ltr">&lt;AUTHOR&gt;Terry Pratchett&lt;/AUTHOR&gt;&lt;AUTHOR&gt;Douglas Adams&lt;/AUTHOR&gt;
</pre>
<p>can be found with any of the following queries:</p>
<pre dir="ltr">MDATA(author, Terry Pratchett)
MDATA(author, Douglas Adams)
MDATA(author, Terry Pratchett) and MDATA(author, Douglas Adams)
</pre>
<p>but not any of the following:</p>
<pre dir="ltr">MDATA(author, Terry Pratchett Douglas Adams)
MDATA(author, Terry Pratchett &amp; Douglas Adams)
MDATA(author, Pratchett Douglas)
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="cddlpkg.htm#GUID-5ECD0F44-6A70-4121-9352-6188C621CD42">ADD_MDATA</a>&#34;</span></p>
<p><span class="q">&#34;<a href="cddlpkg.htm#GUID-C8AEC32C-9182-4661-8594-46248CEBC3E7">ADD_MDATA_SECTION</a>&#34;</span></p>
<div class="infoboxnotealso" id="GUID-B995F693-A4AA-493D-A62D-6D79857BA50F__GUID-AFF27A4B-93BA-4A08-BDED-B10E9DE5D7BA">
<p class="notep1">See Also:</p>
<p><a class="olink CCAPP0800" target="_blank" href="../CCAPP/GUID-9455DBD9-2C23-4CB0-A3C5-FB8B2033516A.htm#CCAPP0800"><span class="italic">Oracle Text Application Developer&#39;s Guide</span></a> for information about section searching</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0310"></a>
<div class="props_rev_3"><a id="GUID-BA076826-D208-49AF-B0CF-2216EA977AE4"></a>
<h2 id="CCREF-GUID-BA076826-D208-49AF-B0CF-2216EA977AE4" class="sect2"><span class="enumeration_section">3.14</span> MINUS (-)</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">MINUS</code> operator to lower the score of documents that contain unwanted noise terms. <code class="codeph">MINUS</code> is useful when you want to search for documents that contain one query term but want the presence of a second term to cause a document to be ranked lower.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-BA076826-D208-49AF-B0CF-2216EA977AE4__GUID-D87AD9DA-E0D9-4090-B44A-6B40EA4171A1">
<table class="cellalignment3028" summary="This table describes MINUS (-) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3083" id="d53900e5164">Syntax</th>
<th class="cellalignment3093" id="d53900e5167">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e5172" headers="d53900e5164">
<p><span class="variable">term1</span>-<span class="variable">term2</span></p>
<p><span class="variable">term1</span> minus <span class="variable">term2</span></p>
</td>
<td class="cellalignment3094" headers="d53900e5172 d53900e5167">
<p>Returns documents that contain <span class="italic">term1</span>. Calculates score by subtracting the score of <span class="italic">term2</span> from the score of <span class="italic">term1</span>. Only documents with positive score are returned.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for MINUS Operator</p>
<p>Suppose a query on the term <span class="italic">cars</span> always returned high scoring documents about <span class="italic">Ford cars</span>. You can lower the scoring of the Ford documents by using the expression:</p>
<pre dir="ltr">&#39;cars - Ford&#39;
</pre>
<p>In essence, this expression returns documents that contain the term <span class="italic">cars</span> and possibly <span class="italic">Ford.</span> However, the score for a returned document is the score of <span class="italic">cars</span> minus the score of <span class="italic">Ford</span>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="cqoper.htm#GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7">NOT (~)</a>&#34;</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23848"></a>
<div class="props_rev_3"><a id="GUID-34606970-68BB-4B12-A145-42C937990265"></a>
<h2 id="CCREF-GUID-34606970-68BB-4B12-A145-42C937990265" class="sect2"><span class="enumeration_section">3.15</span> MNOT</h2>
<div>
<div class="section">
<p>The Mild Not (<code class="codeph">MNOT</code>) operator is similar to the <code class="codeph">NOT</code> and <code class="codeph">MINUS</code> operators. The Mild Not operator returns hits where the the left child is not contained by the right child. Both children can only be <code class="codeph">TERM</code> or <code class="codeph">PHRASE</code> nodes.</p>
<p>The semantics can be illustrated with a query of &#34;term1 mnot term1 term2&#34;, where the hits for &#34;term1 term2&#34; will be filtered out. For example:</p>
<ul style="list-style-type: disc;">
<li>
<p>A document with only <span class="italic">term1</span> will be returned, with score unchanged.</p>
</li>
<li>
<p>A document with only <span class="italic">term1</span> <span class="italic">term2</span> will not be returned.</p>
</li>
<li>
<p>A document with <span class="italic">term1</span> <span class="italic">term1</span> <span class="italic">term2</span> will be returned, but the score will be calculated using just the first <span class="italic">term1</span> hit.</p>
</li>
</ul>
<p>The behavior described in the third bullet is different from the behavior of <code class="codeph">NOT</code>, which does not return this type of document.</p>
<p>The <code class="codeph">MNOT</code> operator is more specific than the <code class="codeph">MINUS</code> operator, in that the left child must be contained by the right child. If it is not, the Mild Not operator ignores the right child. Also, for Mild Not, the right child is a true filter, that is, it does not simply subtract the scores of left child and right child.</p>
<p>The <code class="codeph">MNOT</code> operator has precedence lower than <code class="codeph">NOT</code> and higher than <code class="codeph">WITHIN</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-34606970-68BB-4B12-A145-42C937990265__GUID-57338371-B9D7-4AC9-B0E7-53B5888A8AC1">
<table class="cellalignment3028" summary="MNOT Operator">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3034" id="d53900e5370">Syntax</th>
<th class="cellalignment3034" id="d53900e5373">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e5378" headers="d53900e5370">
<p><span class="variable">term1</span> mnot <span class="variable">term1 term2</span></p>
</td>
<td class="cellalignment3035" headers="d53900e5378 d53900e5373">
<p>Returns docs that contain <span class="italic">term1</span> unless it is part of the phrase <span class="italic">term1</span> <span class="italic">term2</span>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3035" id="d53900e5398" headers="d53900e5370">
<p><span class="italic">term1</span> mnot <span class="italic">term2</span></p>
</td>
<td class="cellalignment3035" headers="d53900e5398 d53900e5373">
<p>Returns all documents that contain <span class="italic">term1</span>. It will be the same query as just <span class="italic">term1</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for MNOT Operator</p>
<p>The children of the <code class="codeph">MNOT</code> operator must be a <code class="codeph">TERM</code> or <code class="codeph">PHRASE</code>.</p>
<pre dir="ltr">SELECT * FROM docs
WHERE CONTAINS(txt, &#39;term1 mnot term1 term2&#39;) &gt;0
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topic</p>
<p><span class="q">&#34;<a href="cqoper.htm#GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7">NOT (~)</a>&#34;</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0311"></a>
<div class="props_rev_3"><a id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893"></a>
<h2 id="CCREF-GUID-CAA9F98B-37D9-4B11-831F-7467602EE893" class="sect2"><span class="enumeration_section">3.16</span> Narrower Term (NT, NTG, NTP, NTI)</h2>
<div>
<div class="section">
<p>Use the narrower term operators (<code class="codeph">NT</code>, <code class="codeph">NTG</code>, <code class="codeph">NTP</code>, <code class="codeph">NTI</code>) to expand a query to include all the terms that have been defined in a thesaurus as the narrower or lower level terms for a specified term. They can also expand the query to include all of the narrower terms for each narrower term, and so on down through the thesaurus hierarchy.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893__GUID-B1077597-1AD9-4EF0-8C4F-5A43C9CAB5F9">
<table class="cellalignment3028" summary="This table describes Narrower Term (NT, NTG, NTP, NTI) operators.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3073" id="d53900e5538">Syntax</th>
<th class="cellalignment3169" id="d53900e5541">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e5546" headers="d53900e5538">
<p>NT(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e5546 d53900e5541">
<p>Expands a query to include all the lower level terms defined in the thesaurus as narrower terms for <tt>term</tt><span class="italic">.</span></p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e5569" headers="d53900e5538">
<p>NTG(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e5569 d53900e5541">
<p>Expands a query to include all the lower level terms defined in the thesaurus as narrower generic terms for <tt>term</tt><span class="italic">.</span></p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e5592" headers="d53900e5538">
<p>NTP(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e5592 d53900e5541">
<p>Expands a query to include all the lower level terms defined in the thesaurus as narrower partitive terms for <tt>term</tt>.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e5614" headers="d53900e5538">
<p>NTI(<span class="variable">term</span>[(<span class="variable">qualifier</span>)][,<span class="variable">level</span>][,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3170" headers="d53900e5614 d53900e5541">
<p>Expands a query to include all the lower level terms defined in the thesaurus as narrower instance terms for <tt>term</tt>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3569"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893__GUID-B8701B54-159B-4E84-8320-85022381971F"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the narrower term operator. <code class="codeph">term</code> is expanded to include the narrower term entries defined for the term in the thesaurus specified by <code class="codeph">thes</code>. The number of narrower terms included in the expansion is determined by the value for <code class="codeph">level</code>. You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3570"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893__GUID-D6A2F0BA-7923-42D1-8DB5-EBF70F57298E"><!-- --></a>qualifier</dt>
<dd>
<p>Specify a qualifier for <code class="codeph">term</code>, if <code class="codeph">term</code> is a homograph (word or phrase with multiple meanings, but the same spelling) that appears in two or more nodes in the same hierarchy branch of <code class="codeph">thes</code>.</p>
<p>If a qualifier is not specified for a homograph in a narrower term query, the query expands to include all of the narrower terms of all homographic terms.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3571"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893__GUID-18942D24-B26A-482F-8723-291F539BE387"><!-- --></a>level</dt>
<dd>
<p>Specify the number of levels traversed in the thesaurus hierarchy to return the narrower terms for the specified term. For example, a level of 1 in an <code class="codeph">NT</code> query returns all the narrower term entries, if any exist, for the specified term. A level of 2 returns all the narrower term entries for the specified term, as well as all the narrower term entries, if any exist, for each narrower term.</p>
<p>The level argument is optional and has a default value of one (1). Zero or negative values for the level argument return only the original query term.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3572"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893__GUID-0CBB7635-B331-4239-8D2E-E6DF2DB48995"><!-- --></a>thes</dt>
<dd>
<p>Specify the name of the thesaurus used to return the expansions for the specified term. <a id="d53900e5688" class="indexterm-anchor"></a>The <tt>thes</tt> argument is optional and has a default value of <code class="codeph">DEFAULT</code>. A thesaurus named <code class="codeph">DEFAULT</code> <span class="italic">must</span> exist in the thesaurus tables if you use this default value.</p>
<div class="infobox-note" id="GUID-CAA9F98B-37D9-4B11-831F-7467602EE893__GUID-B87B84AF-59E2-4B4E-8AB9-6AFBD37A8AE5">
<p class="notep1">Note:</p>
<p>If you specify <code class="codeph">thes</code>, then you must also specify <code class="codeph">level</code>.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for Narrower Term Operators</p>
<p>The following query returns all documents that contain either the term <span class="italic">cat</span> or any of the <code class="codeph">NT</code> terms defined for <span class="italic">cat</span> in the <code class="codeph">DEFAULT</code> thesaurus:</p>
<pre dir="ltr">&#39;NT(cat)&#39;
</pre>
<p>If you specify a thesaurus name, then you must also specify <code class="codeph">level</code> as in:</p>
<pre dir="ltr">&#39;NT(cat, 2, mythes)&#39;
</pre>
<p>The following query returns all documents that contain either <span class="italic">fairy tale</span> or any of the narrower instance terms for <span class="italic">fairy tale</span> as defined in the <code class="codeph">DEFAULT</code> thesaurus:</p>
<pre dir="ltr">&#39;NTI(fairy tale)&#39;
</pre>
<p>That is, if the terms <span class="italic">cinderella</span> and <span class="italic">snow white</span> are defined as narrower term instances for <span class="italic">fairy tale</span>, Oracle Text returns documents that contain <span class="italic">fairy tale, cinderella,</span> or <span class="italic">snow white.</span></p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p>Each hierarchy in a thesaurus represents a distinct, separate branch, corresponding to the four narrower term operators. In a narrower term query, Oracle Text only expands the query using the branch corresponding to the specified narrower term operator.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topic</p>
<p>CTX_THES.<a href="cthes.htm#GUID-FD9DD979-EE61-43B0-B982-19764BBADFC6">NT</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> for more information on browsing the narrower terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF24085"></a>
<div class="props_rev_3"><a id="GUID-2F5C7BBD-AA70-412D-B601-415283E62C4D"></a>
<h2 id="CCREF-GUID-2F5C7BBD-AA70-412D-B601-415283E62C4D" class="sect2"><span class="enumeration_section">3.17</span> NDATA</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">NDATA</code> operator to find matches that are spelled in a similar way or where rearranging the terms of the specified phrase is useful. It is helpful for finding more accurate results when there are frequent misspellings (or inaccurate orderings) of name data in the document set. This operator can be used only on defined <code class="codeph">NDATA</code> sections. The <code class="codeph">NDATA</code> syntax enables you to rank the result set so that documents that contain words with high orthographic similarity are scored higher than documents with lower similarity.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Normalization</p>
<p>A lexer does not process <code class="codeph">NDATA</code> query phrases. Users can, however, set base letter and alternate spelling attributes for a particular section group containing <code class="codeph">NDATA</code> sections. Query case is normalized and non-character data (except for white space) is removed (for example, numerical or punctuation).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">ndata(sectionname, phrase [,order][,proximity])
</pre>
<div class="tblformal" id="GUID-2F5C7BBD-AA70-412D-B601-415283E62C4D__GUID-CD1EBF03-78CF-4BEB-A618-F5F90F94F1E7">
<table class="cellalignment3028" summary="Parameter values">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3086" id="d53900e5873">Parameter Name</th>
<th class="cellalignment3086" id="d53900e5876">Default Value</th>
<th class="cellalignment3177" id="d53900e5879">Parameter Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e5884" headers="d53900e5873">
<p><code class="codeph">sectionname</code></p>
</td>
<td class="cellalignment3088" headers="d53900e5884 d53900e5876">&nbsp;</td>
<td class="cellalignment3178" headers="d53900e5884 d53900e5879">
<p>Specify the name of a defined <code class="codeph">NDATA</code> sections to query (that is, <code class="codeph">section_name</code>)</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e5900" headers="d53900e5873">
<p><code class="codeph">phrase</code></p>
</td>
<td class="cellalignment3088" headers="d53900e5900 d53900e5876">&nbsp;</td>
<td class="cellalignment3178" headers="d53900e5900 d53900e5879">
<p>Specify the phrase for the name data query.</p>
<p>The phrase parameter can be a single word or a phrase, or a string of words in free text format.</p>
<p>The score returned is a relevant score.</p>
<p>Oracle Text ignores any query operators that are included in <code class="codeph">phrase</code>.</p>
<p>The phrase should be a minimum of two characters in length and should not exceed 4000 characters in length.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e5921" headers="d53900e5873">
<p><code class="codeph">order</code></p>
</td>
<td class="cellalignment3088" headers="d53900e5921 d53900e5876">
<p><code class="codeph">NOORDER</code></p>
</td>
<td class="cellalignment3178" headers="d53900e5921 d53900e5879">
<p>Specify whether individual tokens (terms) in a query should be matched in-order or in any order. The order parameter provides a primary filter for matching candidate documents.</p>
<p><code class="codeph">ORDER</code> or <code class="codeph">O</code> - The query terms are matched in-order.</p>
<p><code class="codeph">NOORDER</code> o <code class="codeph">N</code> [DEFAULT] - The query terms are matched in any order.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e5947" headers="d53900e5873">
<p><code class="codeph">proximity</code></p>
</td>
<td class="cellalignment3088" headers="d53900e5947 d53900e5876">
<p><code class="codeph">NOPROXIMITY</code></p>
</td>
<td class="cellalignment3178" headers="d53900e5947 d53900e5879">
<p>Specify whether the proximity of terms should influence the similarity score of candidate matches. That is, if the proximity parameter is enabled, non-matching additional terms between matching terms will reduce the similarity score of candidate matches.</p>
<p><code class="codeph">PROXIMITY</code> or <code class="codeph">P</code> - The similarity score influenced by the proximity of query terms in candidate matches.</p>
<p><code class="codeph">NOPROXIMITY</code> or <code class="codeph">N</code> [DEFAULT] - The similarity score is not influenced by the proximity of query terms in candidate matches.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for NDATA Operator</p>
<p>An <code class="codeph">NDATA</code> query on an indexed surname section name that matches terms in the query phrase in any order without influencing the similarity score by the proximity of the black and smith terms has the form:</p>
<pre dir="ltr">SELECT entryid, SCORE(1) FROM people WHERE
CONTAINS(idx_column, &#39;NDATA(surname, black smith)&#39;,1)&gt;0;
</pre>
<p>An <code class="codeph">NDATA</code> query on an indexed surname section name that matches terms in the query phrase in any order and in which similarity scores are influenced by the proximity of the black and smith terms has the form:</p>
<pre dir="ltr">SELECT entryid, SCORE(1) FROM people WHERE
CONTAINS(idx_column, &#39;NDATA(surname, black smith,,proximity)&#39;,1)&gt;0;
</pre>
<p>An <code class="codeph">NDATA</code> query on an indexed surname section name that matches terms in the query phrase in-order without influencing the similarity score by the proximity of the black and smith terms has the form:</p>
<pre dir="ltr">SELECT entryid, SCORE(1) FROM people WHERE
CONTAINS(idx_column, &#39;NDATA(surname, black smith, order)&#39;,1)&gt;0;
</pre>
<p>An <code class="codeph">NDATA</code> query on an indexed surname section name that matches terms in the query phrase in-order and in which similarity scores are influenced by the proximity of the black and smith terms has the form:</p>
<pre dir="ltr">SELECT entryid, SCORE(1) FROM people WHERE
CONTAINS(idx_column, &#39;NDATA(surname, black smith, order, proximity)&#39;,1)&gt;0;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p>The <code class="codeph">NDATA</code> query operator does not provide offset information. As such, it cannot be used as a child of <code class="codeph">WITHIN</code>, <code class="codeph">NEAR(;)</code>, or <code class="codeph">EQUIV(=)</code>, and <code class="codeph">NDATA</code> sections will be ignored by <code class="codeph">CTX_DOC.HIGHLIGHT</code>, <code class="codeph">CTX_DOC.SNIPPET</code>, and <code class="codeph">CTX_DOC.MARKUP</code>. The <code class="codeph">NDATA</code> operator also is not supported in the <code class="codeph">CTXCAT</code> grammar. It can be used with other operators, including <code class="codeph">OR</code> and query templates.</p>
<p>A use case of the <code class="codeph">NDATA</code> operator may involve finding a particular entry based on an approximate spelling of a person&#39;s full-name and an estimated date-of-birth. Supposing the entries&#39; date-of-births are stored as an <code class="codeph">SDATA</code> section, user-defined scoring&#39;s alternate scoring template can be used to combine the scores of the full-name&#39;s <code class="codeph">NDATA</code> section data and the date-of-birth&#39;s <code class="codeph">SDATA</code> section data.</p>
<p>The name <span class="italic">john</span> <span class="italic">smith</span> is queried for the section specified by the fullname <code class="codeph">section_name</code>. Altering the <code class="codeph">NDATA</code> operator&#39;s score based on the closeness of the <code class="codeph">SDATA</code> section&#39;s date-of-birth to the date 08-NOV-2012 modifies the ranking of matching documents as follows:</p>
<pre dir="ltr">&lt;query&gt;
   &lt;textquery grammar=&#34;CONTEXT&#34; lang=&#34;english&#34;&gt;
       NDATA(fullname, john smith)
   &lt;/textquery&gt;
   &lt;score algorithm=&#34;COUNT&#34; normalization_expr = 
       &#34;doc_score-(DATE(8-NOV-2012)-sdata:dob)&#34;/&gt;
&lt;/query&gt;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Restrictions</p>
<p>The <code class="codeph">NDATA</code> query operator does not work with <a href="cdocpkg.htm#GUID-7A07AEB1-2647-468A-A071-A2443EF1A514">CTX_DOC Package</a> procedures. Attempting to use NDATA with CTX_DOC procedures will return an error stating that this is not supported.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0313"></a>
<div class="props_rev_3"><a id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E"></a>
<h2 id="CCREF-GUID-70B60F42-A268-4A35-9297-D7A351ABA47E" class="sect2"><span class="enumeration_section">3.18</span> NEAR (;)</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">NEAR</code> operator to return a score based on the proximity of two or more query terms. Oracle Text returns higher scores for terms closer together and lower scores for terms farther apart in a document. If a word or term appears more than once in a <code class="codeph">NEAR</code> query, then the word must appear more than once in the document in order to match.</p>
<div class="infobox-note" id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-73A39DC9-267F-4D53-BB44-2B7018140D64">
<p class="notep1">Note:</p>
<p>The <code class="codeph">NEAR</code> operator works with only word queries. You cannot use <code class="codeph">NEAR</code> in <code class="codeph">ABOUT</code> queries.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<pre dir="ltr">NEAR((<span class="variable">word1</span>,<span class="variable">word2</span>,...,<span class="variable">wordn</span>) [, max_span [, order [, maxreqd]]])
</pre>
<p>Backward compatibility syntax:</p>
<pre dir="ltr"><span class="variable">word1</span>;<span class="variable">word2</span>
</pre>
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3573"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-9981DF21-AC2C-4DD1-AF76-F50477D7FC85"><!-- --></a>word<span class="italic">1-n</span></dt>
<dd>
<p>Specify the terms in the query separated by commas. The query terms can be single words or phrases and may make use of other query operators (see <span class="q">&#34;<a href="cqoper.htm#GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__CHDFBBEH">NEAR with Other Operators</a>&#34;</span>).</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3574"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-E5057FBF-AE41-4823-8944-83E395F58496"><!-- --></a>max_span</dt>
<dd>
<p>Optionally specify the size of the biggest clump. The default is 100. Oracle Text returns an error if you specify a number greater than 100.</p>
<p>A clump is the smallest group of words in which all query terms occur. All clumps begin and end with a query term.</p>
<p>For near queries with two terms, <code class="codeph">max_span</code> is the maximum distance allowed between the two terms. For example, to query on <span class="italic">dog</span> and <span class="italic">cat</span> where <span class="italic">dog</span> is within 6 words of <span class="italic">cat</span>, enter the following query:</p>
<pre dir="ltr">&#39;near((dog, cat), 6)&#39;
</pre></dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3575"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-1ECF0926-F677-4DF0-9044-6C82AA2DE4BD"><!-- --></a>order</dt>
<dd>
<p>Specify <code class="codeph">TRUE</code> for Oracle Text to search for terms in the order you specify. The default is <code class="codeph">FALSE</code>.</p>
<p>For example, to search for the words <span class="italic">monday</span>, <span class="italic">tuesday</span>, and <span class="italic">wednesday</span> in that order with a maximum clump size of 20, enter the following query:</p>
<pre dir="ltr">&#39;near((monday, tuesday, wednesday), 20, TRUE)&#39;
</pre>
<div class="infobox-note" id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-0281E99B-20FE-4680-B87E-C8E1B8BA9AD3">
<p class="notep1">Note:</p>
<p>To specify <code class="codeph">order</code>, then you must always specify a number for <code class="codeph">max_span</code>.</p>
</div>
<p>Oracle Text might return different scores for the same document when you use identical query expressions that have the <code class="codeph">order</code> flag set differently. For example, Oracle Text might return different scores for the same document when you enter the following queries:</p>
<pre dir="ltr">&#39;near((dog, cat), 50, FALSE)&#39;
&#39;near((dog, cat), 50, TRUE)&#39;
</pre></dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">NEAR Scoring</p>
<p>The scoring for the <code class="codeph">NEAR</code> operator combines frequency of the terms with proximity of terms. For each document that satisfies the query, Oracle Text returns a score between 1 and 100 that is proportional to the number of clumps in the document and inversely proportional to the average size of the clumps. This means many small clumps in a document result in higher scores, because small clumps imply closeness of terms.</p>
<p>The number of terms in a query also affects score. Queries with many terms, such as seven, generally need fewer clumps in a document to score 100 than do queries with few terms, such as two.</p>
<p>A<a id="d53900e6322" class="indexterm-anchor"></a> <span class="italic">clump</span> is the smallest group of words in which all query terms occur. All clumps begin and end with a query term. Define clump size with the <code class="codeph">max_span</code> parameter, as described in this section.</p>
<p>The size of a clump does not include the query terms themselves. So for the query <code class="codeph">NEAR((DOG, CAT), 1)</code>, <span class="italic">dog cat</span> will be a match, and <span class="italic">dog ate cat</span> will be a match, but <span class="italic">dog sat on cat</span> will <span class="italic">not</span> be a match.</p>
</div>
<!-- class="section" -->
<div class="section" id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__CHDFBBEH">
<p class="subhead2">NEAR with Other Operators</p>
<p>You can use the <code class="codeph">NEAR</code> operator with other operators such as <code class="codeph">AND</code> and <code class="codeph">OR</code>. Scores are calculated in the regular way.</p>
<p>For example, to find all documents that contain the terms <span class="italic">tiger</span>, <span class="italic">lion</span>, and <span class="italic">cheetah</span> where the terms <span class="italic">lion</span> and <span class="italic">tiger</span> are within 10 words of each other, enter the following query:</p>
<pre dir="ltr">&#39;near((lion, tiger), 10) AND cheetah&#39;
</pre>
<p>The score returned for each document is the lower score of the near operator and the term <span class="italic">cheetah</span>.</p>
<p>You can also use the equivalence operator to substitute a single term in a near query:</p>
<pre dir="ltr">&#39;near((stock crash, Japan=Korea), 20)&#39;
</pre>
<p>This query asks for all documents that contain the phrase <span class="italic">stock crash</span> within twenty words of <span class="italic">Japan</span> or <span class="italic">Korea</span>.</p>
<p>The following <code class="codeph">NEAR</code> syntax is now valid:</p>
<pre dir="ltr">SELECT * FROM docs WHERE CONTAINS(txt, &#39;near((aterm1 aterm2 ... atermI 
OR bterm1 bterm2 ... btermJ
OR cterm1 cterm2 ... ctermK, dterm))&#39;) &gt;0
</pre>
<p>There can be any number of <code class="codeph">OR</code>s in a given <code class="codeph">NEAR</code> child, and the <code class="codeph">OR</code> can appear in any of the <code class="codeph">NEAR</code> children.</p>
<p>The <code class="codeph">NEAR</code> within <code class="codeph">NEAR</code> feature allows users to use nested proximity queries. Users can execute queries such as the following:</p>
<pre dir="ltr">SELECT * FROM docs 
WHERE CONTAINS(txt, &#39;near((near((term1, term2),5), term3), 100)&#39;)&gt;0
</pre>
<p>This will return documents where <span class="italic">term1</span>, <span class="italic">term2</span>, and <span class="italic">term3</span> are near within a 100 token window and, additionally, the tokens <span class="italic">term1</span> and <span class="italic">term2</span> are near within a 5 token window.</p>
<p>Mixing the semicolon and <code class="codeph">NEAR</code> syntax is not supported and will throw an error. That is, the queries <code class="codeph">&#34;near((a;b,c),3)&#34; or &#34;near((a,b));c&#34;</code> will be disallowed.</p>
<p>The following operators also work with <code class="codeph">NEAR</code> and <code class="codeph">;</code> :</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">EQUIV</code></p>
</li>
<li>
<p>All expansion operators that produce words, phrases, or <code class="codeph">EQUIV</code>. These include:</p>
<ul style="list-style-type: disc;">
<li>
<p>soundex</p>
</li>
<li>
<p>fuzzy</p>
</li>
<li>
<p>wildcards</p>
</li>
<li>
<p>stem</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Backward Compatibility NEAR Syntax</p>
<p>You can write near queries using the syntax of previous Oracle Text releases. However, in a nested NEAR query, the semicolon operator cannot be used as the inner NEAR. That is, the query <code class="codeph">&#39;near(((a;d),f),3)&#39;</code> produces a syntax error. The semicolon operator can be used as the outermost NEAR in a nested NEAR query.</p>
<p>For example, to find all documents where <span class="italic">lion</span> occurs near <span class="italic">tiger</span>, write:</p>
<pre dir="ltr">&#39;lion near tiger&#39;
</pre>
<p>or with the semi-colon as follows:</p>
<pre dir="ltr">&#39;lion;tiger&#39;
</pre>
<p>This query is equivalent to the following query:</p>
<pre dir="ltr">&#39;near((lion, tiger), 100, FALSE)&#39;
</pre>
<div class="infobox-note" id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-CE49F973-A3AF-4642-BB1F-EB87298E3DC0">
<p class="notep1">Note:</p>
<p>Only the syntax of the <code class="codeph">NEAR</code> operator is backward compatible. In the example, the score returned is calculated using the clump method as described in this section.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Highlighting with the NEAR Operator</p>
<p>When you use highlighting and your query contains the <code class="codeph">near</code> operator, all occurrences of all terms in the query that satisfy the proximity requirements are highlighted. Highlighted terms can be single words or phrases.</p>
<p>For example, assume a document contains the following text:</p>
<pre dir="ltr">Chocolate and vanilla are my favorite ice cream flavors.  I like chocolate served
in a waffle cone, and vanilla served in a cup with carmel syrup.
</pre>
<p>If the query is <span class="italic">near((chocolate, vanilla)), 100, FALSE),</span> the following is highlighted:</p>
<pre dir="ltr">&lt;&lt;Chocolate&gt;&gt; and &lt;&lt;vanilla&gt;&gt; are my favorite ice cream flavors.  I like
&lt;&lt;chocolate&gt;&gt; served in a waffle cone, and &lt;&lt;vanilla&gt;&gt; served in a cup with
caramel syrup.
</pre>
<p>However, if the query is <span class="italic">near((chocolate, vanilla)), 4, FALSE),</span> only the following is highlighted:</p>
<pre dir="ltr">&lt;&lt;Chocolate&gt;&gt; and &lt;&lt;vanilla&gt;&gt; are my favorite ice cream flavors.  I like
chocolate served in a waffle cone, and vanilla served in a cup with carmel syrup.
</pre>
<div class="infoboxnotealso" id="GUID-70B60F42-A268-4A35-9297-D7A351ABA47E__GUID-01BC70EA-624D-4587-A4DD-AC13F2488C91">
<p class="notep1">See Also:</p>
<p><a href="cdocpkg.htm#GUID-7A07AEB1-2647-468A-A071-A2443EF1A514">CTX_DOC Package</a> for more information about the procedures for highlighting</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Section Searching and NEAR</p>
<p>Use the <code class="codeph">NEAR</code> operator with the <code class="codeph">WITHIN</code> operator for section searching as follows:</p>
<pre dir="ltr">&#39;near((dog, cat), 10) WITHIN Headings&#39;
</pre>
<p>When evaluating expressions such as these, Oracle Text looks for clumps that lie entirely within the given section.</p>
<p>In this example, only those clumps that contain <span class="italic">dog</span> and <span class="italic">cat</span> that lie entirely within the section <span class="italic">Headings</span> are counted. That is, if the term <span class="italic">dog</span> lies within <span class="italic">Headings</span> and the term <span class="italic">cat</span> lies five words from <span class="italic">dog</span>, but outside of <span class="italic">Headings</span>, this pair of words does not satisfy the expression and is not counted.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0317"></a>
<div class="props_rev_3"><a id="GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7"></a>
<h2 id="CCREF-GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7" class="sect2"><span class="enumeration_section">3.19</span> NOT (~)</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">NOT</code> operator to search for documents that contain one query term and not another.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7__GUID-39FF17C4-EA94-452C-BE6F-DBDDBB953757">
<table class="cellalignment3028" summary="This table describes NOT (~) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3131" id="d53900e6678">Syntax</th>
<th class="cellalignment3179" id="d53900e6681">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3132" id="d53900e6686" headers="d53900e6678">
<p><span class="variable">term1</span>~<span class="variable">term2</span></p>
<p><span class="variable">term1</span> not <span class="variable">term2</span></p>
</td>
<td class="cellalignment3180" headers="d53900e6686 d53900e6681">
<p>Returns documents that contain <span class="italic">term1</span> and not <span class="italic">term2</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for NOT Operator</p>
<p>To obtain the documents that contain the term <span class="italic">animals</span> but not <span class="italic">dogs</span>, use the following expression:</p>
<pre dir="ltr">&#39;animals ~ dogs&#39;
</pre>
<p>Similarly, to obtain the documents that contain the term <span class="italic">transportation</span> but not <span class="italic">automobiles</span> or <span class="italic">trains</span>, use the following expression:</p>
<pre dir="ltr">&#39;transportation not (automobiles or trains)&#39;
</pre>
<div class="infobox-note" id="GUID-E4ADB444-67F7-4DBB-88C8-1D471B2CCAB7__GUID-995B5B0B-5C08-4CD1-A659-FC2CDBD3E147">
<p class="notep1">Note:</p>
<p>The <code class="codeph">NOT</code> operator does not affect the scoring produced by the other logical operators.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="cqoper.htm#GUID-BA076826-D208-49AF-B0CF-2216EA977AE4">MINUS (-)</a>&#34;</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0319"></a>
<div class="props_rev_3"><a id="GUID-2054C818-A0C3-4779-A828-FD55BE0736CE"></a>
<h2 id="CCREF-GUID-2054C818-A0C3-4779-A828-FD55BE0736CE" class="sect2"><span class="enumeration_section">3.20</span> OR (|)</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">OR</code> operator to search for documents that contain at least one occurrence of <span class="italic">any</span> of the query terms. The <code class="codeph">OR</code> operator returns documents that contain <span class="italic">any</span> of the query terms, while the <code class="codeph">AND</code> operator returns documents that contain <span class="italic">all</span> query terms.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-2054C818-A0C3-4779-A828-FD55BE0736CE__GUID-5CC9B88D-52AB-4BF4-BD3C-624314DAAEDE">
<table class="cellalignment3028" summary="This table describes OR (|) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3131" id="d53900e6844">Syntax</th>
<th class="cellalignment3179" id="d53900e6847">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3132" id="d53900e6852" headers="d53900e6844">
<p><span class="variable">term1</span>|<span class="variable">term2</span></p>
<p><span class="variable">term1</span> or <span class="variable">term2</span></p>
</td>
<td class="cellalignment3180" headers="d53900e6852 d53900e6847">
<p>Returns documents that contain <span class="italic">term1</span> or <span class="italic">term2</span>. Returns the maximum score of its operands. At least one term must exist; higher score taken.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for OR Operator</p>
<p>To obtain the documents that contain the term <span class="italic">cats</span> or the term <span class="italic">dogs</span>, use either of the following expressions:</p>
<pre dir="ltr">&#39;cats | dogs&#39;
&#39;cats OR dogs&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Scoring</p>
<p>In an <code class="codeph">OR</code> query, the score returned is the score for the highest query term. In the example, if the scores for <span class="italic">cats</span> and <span class="italic">dogs</span> is 30 and 40 within a document, the document scores 40.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="cqoper.htm#GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D">AND (&amp;)</a>&#34;</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0321"></a>
<div class="props_rev_3"><a id="GUID-D17A44D3-297C-4F6B-BF93-1DC8FCE95B42"></a>
<h2 id="CCREF-GUID-D17A44D3-297C-4F6B-BF93-1DC8FCE95B42" class="sect2"><span class="enumeration_section">3.21</span> Preferred Term (PT)</h2>
<div>
<div class="section">
<p>Use the preferred term operator (<code class="codeph">PT</code>) to replace a term in a query with the preferred term that has been defined in a thesaurus for the term.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-D17A44D3-297C-4F6B-BF93-1DC8FCE95B42__GUID-FE97AA39-A804-4D94-A61E-74C11C7E0ADD">
<table class="cellalignment3028" summary="This table shows Preferred Term (PT) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3055" id="d53900e6994">Syntax</th>
<th class="cellalignment3056" id="d53900e6997">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e7002" headers="d53900e6994">
<p>PT(<span class="variable">term</span>[,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3058" headers="d53900e7002 d53900e6997">
<p>Replaces the specified word in a query with the preferred term for <span class="italic">term</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3576"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D17A44D3-297C-4F6B-BF93-1DC8FCE95B42__GUID-4D57A24A-AFCF-4404-BE5E-71EB1FCFA988"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the preferred term operator. <tt>term</tt> is replaced by the preferred term defined for the term in the specified thesaurus. However, if no <code class="codeph">PT</code> entries are defined for the term, <tt>term</tt> is not replaced in the query expression and <tt>term</tt> is the result of the expansion.</p>
<p>You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3577"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D17A44D3-297C-4F6B-BF93-1DC8FCE95B42__GUID-7242622A-E80E-4D5D-BF2B-6175B82462CF"><!-- --></a>thes</dt>
<dd>
<p>Specify the name of the thesaurus used to return the expansions for the specified term. The <tt>thes</tt> argument is optional and has a default value of <code class="codeph">DEFAULT</code>. As a result, a thesaurus named <code class="codeph">DEFAULT</code> <span class="italic">must</span> exist in the thesaurus tables before using any of the thesaurus operators.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for PT Operator</p>
<p>The term <span class="italic">automobile</span> has a preferred term of <span class="italic">car</span> in a thesaurus. A <code class="codeph">PT</code> query for <span class="italic">automobile</span> returns all documents that contain the word <span class="italic">car</span>. Documents that contain the word <span class="italic">automobile</span> are not returned.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-425F6351-3FE8-4161-8A99-0B6D13B68453">PT</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> form more information on browsing the preferred terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0323"></a>
<div class="props_rev_3"><a id="GUID-06823170-75AE-4161-B274-6FEDA23636BD"></a>
<h2 id="CCREF-GUID-06823170-75AE-4161-B274-6FEDA23636BD" class="sect2"><span class="enumeration_section">3.22</span> Related Term (RT)</h2>
<div>
<div class="section">
<p>Use the related term operator (<code class="codeph">RT</code>) to expand a query to include all related terms that have been defined in a thesaurus for the term.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-06823170-75AE-4161-B274-6FEDA23636BD__GUID-641BEA16-3C60-4735-85D3-F7FAFEDB3EEF">
<table class="cellalignment3028" summary="This table shows Related Term (RT) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3055" id="d53900e7178">Syntax</th>
<th class="cellalignment3056" id="d53900e7181">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e7186" headers="d53900e7178">
<p>RT(<span class="variable">term</span>[,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3058" headers="d53900e7186 d53900e7181">
<p>Expands a query to include all the terms defined in the thesaurus as a related term for <code class="codeph">term</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3578"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-06823170-75AE-4161-B274-6FEDA23636BD__GUID-C57E5C36-D49A-47DF-A6A8-9D53DA4FAF28"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the related term operator. <code class="codeph">term</code> is expanded to include <code class="codeph">term</code> and all the related entries defined for <code class="codeph">term</code> in <code class="codeph">thes</code>.</p>
<p>You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3579"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-06823170-75AE-4161-B274-6FEDA23636BD__GUID-806F16AD-A509-40B1-A848-8ABFB33D3035"><!-- --></a>thes</dt>
<dd>
<p>Specify the name of the thesaurus used to return the expansions for the specified term. The <code class="codeph">thes</code> argument is optional and has a default value of <code class="codeph">DEFAULT</code>. As a result, a thesaurus named <code class="codeph">DEFAULT</code> <span class="italic">must</span> exist in the thesaurus tables before using any of the thesaurus operators.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for RT Operator</p>
<p>The term <span class="italic">dog</span> has a related term of <span class="italic">wolf</span>. An RT query for <span class="italic">dog</span> returns all documents that contain the word <span class="italic">dog</span> and <span class="italic">wolf</span>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-BB93EA15-FC61-4D80-93AF-B4DCB71C865C">RT</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> for more information on browsing the related terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF2089"></a>
<div class="props_rev_3"><a id="GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35"></a>
<h2 id="CCREF-GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35" class="sect2"><span class="enumeration_section">3.23</span> SDATA</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">SDATA</code> operator to perform tests on <code class="codeph">SDATA</code> sections and columns, which contain structured data values. <code class="codeph">SDATA</code> sections speed up mixed querying and ordering. This operator provides structured predicate support for <code class="codeph">CONTAINS</code>, which extends non-SQL interfaces such as <code class="codeph">count_hits</code> or the result set interface.</p>
<p><code class="codeph">SDATA</code> operators should only be used as descendants of <code class="codeph">AND</code> operators that also have non-<code class="codeph">SDATA</code> children.</p>
<p><code class="codeph">SDATA</code> queries perform on string or numeric literals, and on date strings. The string literal and date string are enclosed within single or double quote characters. The numeric value is not enclosed in quote characters, and must conform to the SQL format of <code class="codeph">NUMBER</code>. For example:</p>
<pre dir="ltr">CONTAINS(text, &#34;dog and SDATA(category = &#39;&#39;news&#39;&#39;)&#34;)&gt;0 ...

SDATA(rating between 1.2 and 3.4) ...

SDATA(author LIKE &#39;FFORDE%&#39;) ...

SDATA(date &gt;=&#39;2005-09-18&#39;) ...
</pre>
<p>Closed parentheses are permitted, as long as they are enclosed in single or double quotes.</p>
<p>The <code class="codeph">SDATA</code> operator can be used in query templates.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35__GUID-F55E66DC-3F9B-4772-93EF-CA560180385D">
<table class="cellalignment3028" summary="This table shows SDATA operators.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3049" id="d53900e7392">Syntax</th>
<th class="cellalignment3171" id="d53900e7395">Operators</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e7400" headers="d53900e7392">
<p>SData</p>
</td>
<td class="cellalignment3172" headers="d53900e7400 d53900e7395">
<p>:= &#34;SDATA&#34; &#34;(&#34; SDataPredicate &#34;)&#34;</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e7407" headers="d53900e7392">
<p>SDataPredicate</p>
</td>
<td class="cellalignment3172" headers="d53900e7407 d53900e7395">
<p>:= <span class="italic">section_name</span> SDataTest</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e7417" headers="d53900e7392">
<p>SDataTest</p>
</td>
<td class="cellalignment3172" headers="d53900e7417 d53900e7395">
<p>:= &lt;SDataSingleOp SDataLiteral&gt; | SDataBetweenOp | &lt;&#34;is&#34; (&#34;not&#34;)? &#34;null&#34;&gt;</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e7424" headers="d53900e7392">
<p>SDataSingleOp</p>
</td>
<td class="cellalignment3172" headers="d53900e7424 d53900e7395">
<p>:= (&#34;&lt;&#34; | &#34;&lt;=&#34; | &#34;=&#34; | &#34;&gt;=&#34; | &#34;&gt;&#34; | &#34;!=&#34; | &#34;&lt;&gt;&#34; | &#34;like&#34;) SDataLiteral</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e7431" headers="d53900e7392">
<p>SDataBetweenOp</p>
</td>
<td class="cellalignment3172" headers="d53900e7431 d53900e7395">
<p>:= &#34;between&#34; SDataLiteral &#34;and&#34; SDataLiteral</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3052" id="d53900e7438" headers="d53900e7392">
<p>SDataLiteral</p>
</td>
<td class="cellalignment3172" headers="d53900e7438 d53900e7395">
<p>:= <span class="italic">numeric_literal</span> | &#34;&#39;&#34; <span class="italic">string_literal</span> &#34;&#39;&#34; | &#34;&#39;&#34; <span class="italic">date_string</span> &#34;&#39;&#34;</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3580"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35__GUID-E70F8110-5A0F-4AAC-AE74-97B345B380B9"><!-- --></a>section_name</dt>
<dd>
<p>The name of the <code class="codeph">SDATA</code> section(s) on which to search and perform the test, or check.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3581"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35__GUID-0B95D762-0FCD-40F9-BEBB-6DBAB021DD47"><!-- --></a>SDataLiteral</dt>
<dd>
<p>The value of the <code class="codeph">SDATA</code> section. This must be either a string literal, numeric literal, or a date string.</p>
<p>The <code class="codeph">SDATA</code> operator returns a score of 100 if the enclosed predicate returns <code class="codeph">TRUE</code>, and returns <code class="codeph">0</code> otherwise. In the case of a <code class="codeph">NULL</code> value, the <code class="codeph">SDATA</code> operator returns a score of <code class="codeph">0</code> (since in SQL it would not return <code class="codeph">TRUE</code>).</p>
<p>Multi-valued semantics are not defined, as multi-valued <code class="codeph">SDATA</code> sections are not supported.</p>
<p>Comparison of strings is case sensitive. The <code class="codeph">BINARY</code> collation is always used.</p>
<div class="infobox-note" id="GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35__GUID-3B451C78-4A65-40C9-97AE-43B80508598B">
<p class="notep1">Note:</p>
<p>For the <code class="codeph">SDATA</code> operator on <code class="codeph">SDATA</code> sections that are mapped to a <code class="codeph">DATE</code> <code class="codeph">FILTER</code> <code class="codeph">BY</code> column, the <code class="codeph">SDATA</code> value must follow the Date format: <code class="codeph">YYYY-MM-DD</code> or <code class="codeph">YYYY-MM-DD HH24:MI:SS</code>. Otherwise, the expected rows will not be returned. If the time component is omitted, it will default to <code class="codeph">00:00:00</code>, according to SQL semantics. This Date format is always used, regardless of the setting of the <code class="codeph">NLS_DATE_FORMAT</code> environment variable.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for SDATA Operator</p>
<p>Suppose that you want to query for books in the fiction category that contain the word <span class="italic">summer</span>. Assuming that an <code class="codeph">SDATA</code> section called <code class="codeph">CATEGORY</code> has been declared, you can query as follows:</p>
</div>
<!-- class="section" -->
<div class="section">
<pre dir="ltr">SELECT id FROM idx_docs
  WHERE CONTAINS(text, &#39;summer AND SDATA(category = &#34;fiction&#34;)&#39;)&gt;0
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Restrictions</p>
<ul style="list-style-type: disc;">
<li>
<p>The sum of the numbers for <code class="codeph">INDEXED_COLUMN</code>, <code class="codeph">FILTER</code> <code class="codeph">BY</code> columns, and <code class="codeph">ORDER</code> <code class="codeph">BY</code> columns cannot be greater than 99.</p>
</li>
<li>
<p>An error is raised if the section name is not a defined <code class="codeph">SDATA</code> section. The source of the section (for example, tag versus column) is not important.</p>
</li>
<li>
<p>The syntax precludes <code class="codeph">RHS</code> <code class="codeph">SDATA</code> and expressions.</p>
</li>
<li>
<p><code class="codeph">SDATA</code> operators cannot be children of <code class="codeph">WITHIN</code>, <code class="codeph">INPATH</code>, <code class="codeph">HASPATH</code>, or <code class="codeph">NEAR</code>.</p>
</li>
<li>
<p>The datatype of the named <code class="codeph">SDATA</code> section must be compatible with the literal provided (and the operator, for example, <code class="codeph">LIKE</code>) or an error is raised.</p>
</li>
<li>
<p><code class="codeph">SDATA</code> operators are not supported in <code class="codeph">CTXRULE</code> query documents.</p>
</li>
<li>
<p><code class="codeph">SDATA</code> operators have no effect on highlighting.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p>Oracle recommends using <code class="codeph">SDATA</code> operators only as descendants of <code class="codeph">AND</code> operators that also have non-<code class="codeph">SDATA</code> children. Essentially, use <code class="codeph">SDATA</code> operators as secondary (that is, checking or non-driving) criteria. For instance, &#34;find documents with DOG that also have price &gt; 5&#34;, rather than &#34;find documents with rating &gt; 4&#34;. Other usage may operate properly, but may not have optimal performance.</p>
<p>The following examples are consistent with recommended use:</p>
<pre dir="ltr">dog &amp; SDATA(foo = 5)
</pre>
<p>The <code class="codeph">SDATA</code> is a child of an <code class="codeph">AND</code> operator that also has non-<code class="codeph">SDATA</code> children.</p>
<pre dir="ltr">dog &amp; (SDATA(foo = 5) | SDATA(x = 1))
</pre>
<p>Although the <code class="codeph">SDATA</code> operators here are children of <code class="codeph">OR</code>, they are still descendants of an <code class="codeph">AND</code> operator with non-<code class="codeph">SDATA</code> children.</p>
<p>The following examples show use that is not recommended:</p>
<pre dir="ltr">SDATA(foo = 5)
</pre>
<p>Here, <code class="codeph">SDATA</code> is the only criteria and, therefore, the driving criteria.</p>
<pre dir="ltr">dog | SDATA(bar = 9)
</pre>
<p>The <code class="codeph">SDATA</code> in this example is a child of an <code class="codeph">OR</code> operator rather than an <code class="codeph">AND</code>.</p>
<pre dir="ltr">SDATA(foo = 5) &amp; SDATA(bar = 7)
</pre>
<p>While both <code class="codeph">SDATA</code> operators in this example are descendants of <code class="codeph">AND</code>, this <code class="codeph">AND</code> operator does not have non-<code class="codeph">SDATA</code> children.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p><span class="q">&#34;<a href="cddlpkg.htm#GUID-F8DD37A5-04BA-45A3-BF6F-6614922B5058">ADD_SDATA_COLUMN</a>&#34;</span></p>
<p><span class="q">&#34;<a href="cddlpkg.htm#GUID-985802C7-D4DF-4139-9723-B7030BDE1791">ADD_SDATA_SECTION</a>&#34;</span></p>
<p><span class="q">&#34;<a href="cddlpkg.htm#GUID-11C1AD9C-68AD-486A-BB23-C71610E6E2FE">UPDATE_SDATA</a>&#34;</span></p>
<p><span class="q">&#34;<a href="aviews.htm#GUID-DDBB26C5-A6BC-472C-A67C-6F2037A56833">CTX_SECTIONS</a>&#34;</span> in <a href="aviews.htm#GUID-A3660501-A4A9-4EEE-9811-4229E93F7A9C">Oracle Text Views</a></p>
<div class="infoboxnotealso" id="GUID-A136A84D-69B7-4E74-94C7-CA96B3A27D35__GUID-367420CD-0B58-48CE-8D41-4D3B3B990EAE">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a class="olink SQLRF" target="_blank" href="../SQLRF/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
<li>
<p>Chapter 8, &#34;Searching Document Sections in Oracle Text&#34; in <a class="olink CCAPP0800" target="_blank" href="../CCAPP/GUID-9455DBD9-2C23-4CB0-A3C5-FB8B2033516A.htm#CCAPP0800"><span class="italic">Oracle Text Application Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0325"></a>
<div class="props_rev_3"><a id="GUID-2DFECD3E-EEED-43AB-AC7D-1DA75B550D4C"></a>
<h2 id="CCREF-GUID-2DFECD3E-EEED-43AB-AC7D-1DA75B550D4C" class="sect2"><span class="enumeration_section">3.24</span> soundex (!)</h2>
<div>
<div class="section">
<p><a id="d53900e7830" class="indexterm-anchor"></a>Use the soundex (!) operator to expand queries to include words that have similar sounds; that is, words that sound like other words. This function enables comparison of words that are spelled differently, but sound alike in English.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-2DFECD3E-EEED-43AB-AC7D-1DA75B550D4C__GUID-4F022FCF-62DF-4945-A00D-5B85EAFCDDE1">
<table class="cellalignment3028" summary="This table describes soundex (!) operator, which is used to expand queries to include words that have similar sounds; that is, words that sound like other words.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3029" id="d53900e7844">Syntax</th>
<th class="cellalignment3030" id="d53900e7847">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3031" id="d53900e7852" headers="d53900e7844">
<p>!<span class="variable">term</span></p>
</td>
<td class="cellalignment3032" headers="d53900e7852 d53900e7847">
<p>Expands a query to include all terms that sound the same as the specified term (English-language text only).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for Soundex (!) Operator</p>
<pre dir="ltr">SELECT ID, COMMENT FROM EMP_RESUME
WHERE CONTAINS (COMMENT, &#39;!SMYTHE&#39;) &gt; 0 ;

ID COMMENT 
-- ------------
23 Smith is a hard worker who..
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Language</p>
<p>Soundex works best for languages that use a 7-bit character set, such as English. It can be used, with lesser effectiveness, for languages that use an 8-bit character set, such as many Western European languages.</p>
<p>If you have base-letter conversion specified for a text column and the query expression contains a soundex operator, then Oracle Text operates on the base-letter form of the query.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0327"></a>
<div class="props_rev_3"><a id="GUID-42F7E320-D239-47E1-8F6A-C88058201ED1"></a>
<h2 id="CCREF-GUID-42F7E320-D239-47E1-8F6A-C88058201ED1" class="sect2"><span class="enumeration_section">3.25</span> stem ($)</h2>
<div>
<div class="section">
<p>Use the stem ($) operator to search for terms that have the same linguistic root as the query term.</p>
<p>If you use the <code class="codeph">BASIC_LEXER</code> to index your language, stemming performance can be improved by using the index_stems attribute.</p>
<p>The Oracle Text stemmer, licensed from XSoft Division of Xerox Corporation, supports the following languages with the <a href="cdatadic.htm#GUID-118602A6-7B96-4D66-9BAD-4747186894BE">BASIC_LEXER</a>: English, French, Spanish, Italian, German, and Dutch.</p>
<p><a id="d53900e7952" class="indexterm-anchor"></a><a id="d53900e7954" class="indexterm-anchor"></a>Japanese stemming is supported with the <a href="cdatadic.htm#GUID-40AF0529-8D00-4826-888F-6B209D511B13">JAPANESE_LEXER</a>.</p>
<p>Specify your stemming language with the <a href="cdatadic.htm#GUID-CD2DE39F-17F7-424E-8DB3-A16C7843965D">BASIC_WORDLIST</a> wordlist preference.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-42F7E320-D239-47E1-8F6A-C88058201ED1__GUID-C41F3023-4F5E-476F-9667-C27B8A666974">
<table class="cellalignment3028" summary="This table describes stem ($) operator, which is used to search for terms that have the same linguistic root as the query term.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3048" id="d53900e7978">Syntax</th>
<th class="cellalignment3089" id="d53900e7981">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e7986" headers="d53900e7978">
<p>$<span class="variable">term</span></p>
</td>
<td class="cellalignment3090" headers="d53900e7986 d53900e7981">
<p>Expands a query to include all terms having the same stem or root word as the specified term.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for Stem ($) Operator</p>
<div class="tblformal" id="GUID-42F7E320-D239-47E1-8F6A-C88058201ED1__GUID-5C4D647C-85B9-4931-9310-F4D82C95FF36">
<table class="cellalignment3028" summary="This table shows examples for stem ($) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3117" id="d53900e8005">Input</th>
<th class="cellalignment3139" id="d53900e8008">Expands To</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3118" id="d53900e8013" headers="d53900e8005">
<p>$scream</p>
</td>
<td class="cellalignment3140" headers="d53900e8013 d53900e8008">
<p>scream screaming screamed</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3118" id="d53900e8020" headers="d53900e8005">
<p>$distinguish</p>
</td>
<td class="cellalignment3140" headers="d53900e8020 d53900e8008">
<p>distinguish distinguished distinguishes</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3118" id="d53900e8027" headers="d53900e8005">
<p>$guitars</p>
</td>
<td class="cellalignment3140" headers="d53900e8027 d53900e8008">
<p>guitars guitar</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3118" id="d53900e8034" headers="d53900e8005">
<p>$commit</p>
</td>
<td class="cellalignment3140" headers="d53900e8034 d53900e8008">
<p>commit committed</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3118" id="d53900e8041" headers="d53900e8005">
<p>$cat</p>
</td>
<td class="cellalignment3140" headers="d53900e8041 d53900e8008">
<p>cat cats</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3118" id="d53900e8048" headers="d53900e8005">
<p>$sing</p>
</td>
<td class="cellalignment3140" headers="d53900e8048 d53900e8008">
<p>sang sung sing</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Behavior with Stopwords</p>
<p>If stem returns a word designated as a stopword, the stopword is not included in the query or highlighted by <code class="codeph">CTX_QUERY.HIGHLIGHT</code> or <code class="codeph">CTX_QUERY.MARKUP</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>For more information about enabling the stem operator with BASIC_LEXER, see <span class="q">&#34;<a href="cdatadic.htm#GUID-118602A6-7B96-4D66-9BAD-4747186894BE">BASIC_LEXER</a>&#34;</span> in <a href="cdatadic.htm#GUID-22680996-89CF-4666-89E6-BE8B9431DB02">Oracle Text Indexing Elements</a></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0329"></a>
<div class="props_rev_3"><a id="GUID-82161CC8-9D8F-45A8-A687-81E032ADC081"></a>
<h2 id="CCREF-GUID-82161CC8-9D8F-45A8-A687-81E032ADC081" class="sect2"><span class="enumeration_section">3.26</span> Stored Query Expression (SQE)</h2>
<div>
<div class="section">
<p>Use the SQE operator to call a stored query expression created with the <code class="codeph">CTX_QUERY.<a href="cqrypkg.htm#GUID-C966324F-9B3C-4770-9C98-30CE5A678051">STORE_SQE</a></code> procedure.</p>
<p>Stored query expressions can be used for creating predefined bins for organizing and categorizing documents or to perform iterative queries, in which an initial query is refined using one or more additional queries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-82161CC8-9D8F-45A8-A687-81E032ADC081__GUID-54E33166-B79D-4211-ADFC-A5F2E38BBC48">
<table class="cellalignment3028" summary="This table describes Stored Query Expression (SQE) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3073" id="d53900e8165">Syntax</th>
<th class="cellalignment3169" id="d53900e8168">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e8173" headers="d53900e8165">
<p>SQE(<span class="variable">SQE_name</span>)</p>
</td>
<td class="cellalignment3170" headers="d53900e8173 d53900e8168">
<p>Returns the results for the stored query expression <span class="italic">SQE_name</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for SQE Operator</p>
<p><a id="d53900e8189" class="indexterm-anchor"></a>To create an SQE named <span class="italic">disasters</span>, use <code class="codeph">CTX_QUERY.<a href="cqrypkg.htm#GUID-C966324F-9B3C-4770-9C98-30CE5A678051">STORE_SQE</a></code> as follows:</p>
<pre dir="ltr">begin
ctx_query.store_sqe(&#39;disasters&#39;, &#39;hurricane or earthquake or blizzard&#39;);
end;
</pre>
<p>This stored query expression returns all documents that contain either <span class="italic">hurricane</span>, <span class="italic">earthquake</span> or <span class="italic">blizzard</span>.</p>
<p>This SQE can then be called within a query expression as follows:</p>
<pre dir="ltr">SELECT SCORE(1), docid FROM news
WHERE CONTAINS(resume, &#39;sqe(disasters)&#39;, 1)&gt; 0 
ORDER BY SCORE(1);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Limitations</p>
<p>Up to 100 stored query expressions (SQEs) can be stored in a single Text query. If a Text query has more than 100 SQEs, including nested SQEs, then the query fails and error DRG-50949 is raised.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topic</p>
<p><span class="q">&#34;<a href="cqrypkg.htm#GUID-C966324F-9B3C-4770-9C98-30CE5A678051">STORE_SQE</a>&#34;</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23849"></a><a id="CCREF0331"></a>
<div class="props_rev_3"><a id="GUID-0AF3FC43-5EAB-4AFF-BBAE-9F99DDCEF1F5"></a>
<h2 id="CCREF-GUID-0AF3FC43-5EAB-4AFF-BBAE-9F99DDCEF1F5" class="sect2"><span class="enumeration_section">3.27</span> SYNonym (SYN)</h2>
<div>
<div class="section">
<p>Use the synonym operator (<code class="codeph">SYN</code>) to expand a query to include all the terms that have been defined in a thesaurus as synonyms for the specified term.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-0AF3FC43-5EAB-4AFF-BBAE-9F99DDCEF1F5__GUID-EC4A7374-87BB-4285-AD34-EA20CD8AC887">
<table class="cellalignment3028" summary="This table shows SYNonym (SYN) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3131" id="d53900e8317">Syntax</th>
<th class="cellalignment3179" id="d53900e8320">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3132" id="d53900e8325" headers="d53900e8317">
<p>SYN(<span class="variable">term</span>[,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3180" headers="d53900e8325 d53900e8320">
<p>Expands a query to include all the terms defined in the thesaurus as synonyms for <code class="codeph">term</code>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3582"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AF3FC43-5EAB-4AFF-BBAE-9F99DDCEF1F5__GUID-A81F4DC9-18B6-42DC-AB74-1B08FD10BFF8"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the synonym operator. <code class="codeph">term</code> is expanded to include <code class="codeph">term</code> and all the synonyms defined for <code class="codeph">term</code> in <code class="codeph">thes</code>.</p>
<p>You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3583"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-0AF3FC43-5EAB-4AFF-BBAE-9F99DDCEF1F5__GUID-47C338F3-AD65-445E-8457-6B66288718B1"><!-- --></a>thes</dt>
<dd>
<p>Specify the name of the thesaurus used to return the expansions for the specified term. The <code class="codeph">thes</code> argument is optional and has a default value of <code class="codeph">DEFAULT</code>. A thesaurus named <code class="codeph">DEFAULT</code> must exist in the thesaurus tables if you use this default value.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for SYN Operator</p>
<p>The following query expression returns all documents that contain the term <span class="italic">dog</span> or any of the synonyms defined for <span class="italic">dog</span> in the <code class="codeph">DEFAULT</code> thesaurus:</p>
<pre dir="ltr">&#39;SYN(dog)&#39;
</pre>
<p>Compound Phrases in Synonym Operator</p>
<p>Expansion of compound phrases for a term in a synonym query are returned as <code class="codeph">AND</code> conjunctives.</p>
<p>For example, the compound phrase <span class="italic">temperature + measurement + instruments</span> is defined in a thesaurus as a synonym for the term <span class="italic">thermometer</span>. In a synonym query for <span class="italic">thermometer</span>, the query is expanded to:</p>
<pre dir="ltr">{thermometer} OR ({temperature}&amp;{measurement}&amp;{instruments})
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-242E2A16-CCF5-463F-BBCE-6CEAB21A7C93">SYN</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> for more information on browsing the synonym terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0333"></a>
<div class="props_rev_3"><a id="GUID-8FF38910-1B32-4C15-B0C3-2538F36CAFAE"></a>
<h2 id="CCREF-GUID-8FF38910-1B32-4C15-B0C3-2538F36CAFAE" class="sect2"><span class="enumeration_section">3.28</span> threshold (&gt;)</h2>
<div>
<div class="section">
<p>Use the threshold operator (&gt;) in two ways:</p>
<ul style="list-style-type: disc;">
<li>
<p>at the expression level</p>
</li>
<li>
<p>at the query term level</p>
</li>
</ul>
<p>The threshold operator at the expression level eliminates documents in the result set that score below a threshold number.</p>
<p>The threshold operator at the query term level selects a document based on how a term scores in the document.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-8FF38910-1B32-4C15-B0C3-2538F36CAFAE__GUID-3E3F4CC9-515C-4D20-B6B3-187CE16117BA">
<table class="cellalignment3028" summary="This table describes threshold (&gt;) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3048" id="d53900e8518">Syntax</th>
<th class="cellalignment3089" id="d53900e8521">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3051" id="d53900e8526" headers="d53900e8518">
<p><span class="italic">expression</span>&gt;n</p>
<p><span class="italic">term</span>&gt;n</p>
</td>
<td class="cellalignment3090" headers="d53900e8526 d53900e8521">
<p>Returns only those documents in the result set that score above the threshold <span class="italic">n</span>.</p>
<p>Within an expression, returns documents that contain the query term with score of at least <span class="italic">n</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for Threshold (&gt;) Operator</p>
<p>At the expression level, to search for documents that contain <span class="italic">relational databases</span> and to return only documents that score greater than 75, use the following expression:</p>
<pre dir="ltr">&#39;relational databases &gt; 75&#39;
</pre>
<p>At the query term level, to select documents that have at least a score of 30 for <span class="italic">lion</span> and contain <span class="italic">tiger,</span> use the following expression:</p>
<pre dir="ltr">&#39;(lion &gt; 30) and tiger&#39;
</pre></div>
<!-- class="section" --></div>
</div>
<a id="CCREF0335"></a>
<div class="props_rev_3"><a id="GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D"></a>
<h2 id="CCREF-GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D" class="sect2"><span class="enumeration_section">3.29</span> Translation Term (TR)</h2>
<div>
<div class="section">
<p>Use the translation term operator (<code class="codeph">TR</code>) to expand a query to include all defined foreign language equivalent terms.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D__GUID-7273325F-9CAA-40D2-80B9-5BD147683815">
<table class="cellalignment3028" summary="This table shows Translation Term (TR) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3055" id="d53900e8649">Syntax</th>
<th class="cellalignment3056" id="d53900e8652">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e8657" headers="d53900e8649">
<p>TR(<span class="variable">term</span>[<span class="italic">, lang,</span> [<span class="variable">thes</span>]])</p>
</td>
<td class="cellalignment3058" headers="d53900e8657 d53900e8652">
<p>Expands <span class="italic">term</span> to include all the foreign equivalents that are defined for <span class="italic">term</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3584"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D__GUID-9ABD3DC7-98B7-48BD-8218-28134B435C73"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the translation term operator. <code class="codeph">term</code> is expanded to include all the foreign language entries defined for <code class="codeph">term</code> in <code class="codeph">thes</code>. You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3585"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D__GUID-CE0C0A0B-B812-4C01-841F-A2F28E1EFBD8"><!-- --></a>lang</dt>
<dd>
<p>Optionally, specify which foreign language equivalents to return in the expansion. The language you specify must match the language as defined in <code class="codeph">thes</code>. (You may specify only one language at a time.) If you omit this parameter or specify it as <code class="codeph">ALL</code>, the system expands to use all defined foreign language terms.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3586"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D__GUID-B6DCDA8A-FA76-4B25-9E39-E466DE2C56B5"><!-- --></a>thes</dt>
<dd>
<p>Optionally, specify the name of the thesaurus used to return the expansions for the specified term. The <code class="codeph">thes</code> argument has a default value of <code class="codeph">DEFAULT</code>. As a result, a thesaurus named <code class="codeph">DEFAULT</code> <span class="italic">must</span> exist in the thesaurus tables before you can use any of the thesaurus operators.</p>
<div class="infobox-note" id="GUID-A2DEDDBE-05C0-4E37-968E-03E9161F410D__GUID-F4668720-BEF4-472C-8CB7-3ADC7A97DC26">
<p class="notep1">Note:</p>
<p>If you specify <code class="codeph">thes</code>, then you must also specify <code class="codeph">lang</code>.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for TR Operator</p>
<p>Consider a thesaurus <code class="codeph">MY_THES</code> with the following entries for <span class="italic">cat</span>:</p>
<pre dir="ltr">cat 
  SPANISH: gato 
  FRENCH:  chat 
</pre>
<p>To search for all documents that contain <span class="italic">cat</span> and the spanish translation of <span class="italic">cat</span>, enter the following query:</p>
<pre dir="ltr">&#39;tr(cat, spanish, my_thes)&#39;
</pre>
<p>This query expands to:</p>
<pre dir="ltr">&#39;{cat}|{gato}&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-4A80CC41-C048-41DE-A988-052DFE1CEE63">TR</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> for more information on browsing the related terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0337"></a>
<div class="props_rev_3"><a id="GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26"></a>
<h2 id="CCREF-GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26" class="sect2"><span class="enumeration_section">3.30</span> Translation Term Synonym (TRSYN)</h2>
<div>
<div class="section">
<p>Use the translation term synonym operator (<code class="codeph">TRSYN</code>) to expand a query to include all the defined foreign equivalents of the query term, the synonyms of query term, and the foreign equivalents of the synonyms.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26__GUID-E0776C14-AD51-41F2-AEDD-F18A54333CE0">
<table class="cellalignment3028" summary="This table shows Translation Term Synonym (TRSYN) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3055" id="d53900e8859">Syntax</th>
<th class="cellalignment3056" id="d53900e8862">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e8867" headers="d53900e8859">
<p>TRSYN(<span class="variable">term</span>[<span class="italic">, lang,</span> [<span class="variable">thes</span>]])</p>
</td>
<td class="cellalignment3058" headers="d53900e8867 d53900e8862">
<p>Expands <code class="codeph">term</code> to include foreign equivalents of <code class="codeph">term</code>, the synonyms of <code class="codeph">term</code>, and the foreign equivalents of the synonyms.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3587"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26__GUID-E1F915B8-60D0-41F4-A6D3-78B23CFC6676"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for this operator. <code class="codeph">term</code> is expanded to include all the foreign language entries and synonyms defined for <code class="codeph">term</code> in <code class="codeph">thes</code>. You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3588"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26__GUID-2B92FB4F-01FE-4D2C-8DA9-1D66107DF5DA"><!-- --></a>lang</dt>
<dd>
<p>Optionally, specify which foreign language equivalents to return in the expansion. The language you specify must match the language as defined in <code class="codeph">thes</code>. If you omit this parameter, the system expands to use all defined foreign language terms.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3589"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26__GUID-E3F6A042-C4C4-49DF-BE95-008B3E820585"><!-- --></a>thes</dt>
<dd>
<p>Optionally, specify the name of the thesaurus used to return the expansions for the specified term. The <code class="codeph">thes</code> argument has a default value of <code class="codeph">DEFAULT</code>. As a result, a thesaurus named <code class="codeph">DEFAULT</code> <span class="italic">must</span> exist in the thesaurus tables before you can use any of the thesaurus operators.</p>
<div class="infobox-note" id="GUID-D2501971-5D8A-4A69-AFCB-ABCEC0F9DD26__GUID-E83DFF28-E889-42E8-B912-41C422C560BF">
<p class="notep1">Note:</p>
<p>If you specify <code class="codeph">thes</code>, then you must also specify <code class="codeph">lang</code>.</p>
</div>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for TRSYN Operator</p>
<p>Consider a thesaurus <code class="codeph">MY_THES</code> with the following entries for <span class="italic">cat</span>:</p>
<pre dir="ltr">cat 
  SPANISH: gato 
  FRENCH:  chat 
  SYN lion 
    SPANISH: leon 
</pre>
<p>To search for all documents that contain <span class="italic">cat</span>, the spanish equivalent of <span class="italic">cat</span>, the synonym of <span class="italic">cat</span>, and the spanish equivalent of <span class="italic">lion</span>, enter the following query:</p>
<pre dir="ltr">&#39;trsyn(cat, spanish, my_thes)&#39;
</pre>
<p>This query expands to:</p>
<pre dir="ltr">&#39;{cat}|{gato}|{lion}|{leon}&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-2A8761C3-AD6F-4B06-A100-A8D151001538">TRSYN</a> in <a href="cthes.htm#GUID-154829CA-8B78-4F17-9D05-4A6049C14E1D">CTX_THES Package</a> for more information on browsing the translation and synonym terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0339"></a>
<div class="props_rev_3"><a id="GUID-F0D15B14-CCA4-40F9-9052-42D2D1B47033"></a>
<h2 id="CCREF-GUID-F0D15B14-CCA4-40F9-9052-42D2D1B47033" class="sect2"><span class="enumeration_section">3.31</span> Top Term (TT)</h2>
<div>
<div class="section">
<p>Use the top term operator (<code class="codeph">TT</code>) to replace a term in a query with the <span class="italic">top term</span> that has been defined for the term in the standard hierarchy (Broader Term [<code class="codeph">BT</code>], Narrower Term [<code class="codeph">NT]</code>) in a thesaurus. A top term is the broadest conceptual term related to a given query term. For example, a thesaurus might define the following hierarchy:</p>
<pre dir="ltr">DOG 
   BT1 CANINE 
     BT2 MAMMAL 
       BT3 VERTEBRATE 
         BT4 ANIMAL
</pre>
<p>The top term for <span class="italic">dog</span> in this thesaurus is <span class="italic">animal</span>.</p>
<p>Top terms in the generic (<code class="codeph">BTG</code>, <code class="codeph">NTG</code>), partitive (<code class="codeph">BTP</code>, <code class="codeph">NTP</code>), and instance (<code class="codeph">BTI</code>, <code class="codeph">NTI</code>) hierarchies are not returned.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-F0D15B14-CCA4-40F9-9052-42D2D1B47033__GUID-6E98F262-4FF5-4ABC-908A-3B8ADBD04783">
<table class="cellalignment3028" summary="This table shows Top Term (TT) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3055" id="d53900e9116">Syntax</th>
<th class="cellalignment3056" id="d53900e9119">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3057" id="d53900e9124" headers="d53900e9116">
<p>TT(<span class="variable">term</span>[,<span class="variable">thes</span>])</p>
</td>
<td class="cellalignment3058" headers="d53900e9124 d53900e9119">
<p>Replaces the specified word in a query with the top term in the standard hierarchy (<code class="codeph">BT</code>, <code class="codeph">NT</code>) for <tt>term</tt>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<dl>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3590"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F0D15B14-CCA4-40F9-9052-42D2D1B47033__GUID-27C43F86-8516-4C7C-BC60-F57500419E50"><!-- --></a>term</dt>
<dd>
<p>Specify the operand for the top term operator. <code class="codeph">term</code> is replaced by the top <code class="codeph">term</code> defined for the term in the specified thesaurus. However, if no <code class="codeph">TT</code> entries are defined for <code class="codeph">term</code>, <code class="codeph">term</code> is not replaced in the query expression and <code class="codeph">term</code> is the result of the expansion.</p>
<p>You cannot specify expansion operators in the <code class="codeph">term</code> argument.</p>
</dd>
<dt class="dlterm"><a class="dashingAutolink" name="autolink-3591"></a><a class="dashAnchor" name="//apple_ref/cpp/Command/"></a><a id="GUID-F0D15B14-CCA4-40F9-9052-42D2D1B47033__GUID-56EBD3EB-0310-448E-B13E-3006B511AA27"><!-- --></a>thes</dt>
<dd>
<p>Specify the name of the thesaurus used to return the expansions for the specified term. The <code class="codeph">thes</code> argument is optional and has a default value of <code class="codeph">DEFAULT</code>. A thesaurus named <code class="codeph">DEFAULT</code> must exist in the thesaurus tables if you use this default value.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Example for TT Operator</p>
<p>The term <span class="italic">dog</span> has a top term of <span class="italic">animal</span> in the standard hierarchy of a thesaurus. A <code class="codeph">TT</code> query for <span class="italic">dog</span> returns all documents that contain the phrase <span class="italic">animal</span>. Documents that contain the word <span class="italic">dog</span> are not returned.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Related Topics</p>
<p>CTX_THES.<a href="cthes.htm#GUID-EAFA6580-B2B8-421D-8947-BB6226656CCC">TT</a> for more information on browsing the top terms in your thesaurus</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23850"></a><a id="CCREF0341"></a>
<div class="props_rev_3"><a id="GUID-78D46BF1-BB4C-4F37-8982-934B61977711"></a>
<h2 id="CCREF-GUID-78D46BF1-BB4C-4F37-8982-934B61977711" class="sect2"><span class="enumeration_section">3.32</span> weight (*)</h2>
<div>
<div class="section">
<p>The weight operator multiplies the score by the given factor, topping out at 100 when the score exceeds 100. For example, the query <span class="italic">cat, dog*2</span> sums the score of <span class="italic">cat</span> with twice the score of <span class="italic">dog</span>, topping out at 100 when the score is greater than 100.</p>
<p>In expressions that contain more than one query term, use the weight operator to adjust the relative scoring of the query terms. Reduce the score of a query term by using the weight operator with a number less than 1; increase the score of a query term by using the weight operator with a number greater than 1 and less than 10.</p>
<p>The weight operator is useful in <a href="cqoper.htm#GUID-1F2C4D0C-1DE4-48E4-8A59-DDF21290EC50">ACCUMulate ( _ )</a>, <a href="cqoper.htm#GUID-65E581D8-41CD-4370-8EB5-EBC6FD81464D">AND (&amp;)</a>, or <a href="cqoper.htm#GUID-2054C818-A0C3-4779-A828-FD55BE0736CE">OR (|)</a> queries when the expression has more than one query term. With no weighting on individual terms, the score cannot tell which of the query terms occurs the most. With term weighting, you can alter the scores of individual terms and hence make the overall document ranking reflect the terms you are interested in.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-78D46BF1-BB4C-4F37-8982-934B61977711__GUID-E3CBA25A-AB42-4FB2-98B5-0355A8AFA4E7">
<table class="cellalignment3028" summary="This table shows weight (*) operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3083" id="d53900e9329">Syntax</th>
<th class="cellalignment3093" id="d53900e9332">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e9337" headers="d53900e9329">
<p><span class="variable">term</span>*<span class="variable">n</span></p>
</td>
<td class="cellalignment3094" headers="d53900e9337 d53900e9332">
<p>Returns documents that contain <code class="codeph">term</code>. Calculates score by multiplying the raw score of <code class="codeph">term</code> by <tt>n</tt>, where <tt>n</tt> is a number from 0.1 to 10.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Examples for Weight (*) Operator</p>
<p>Suppose you have a collection of sports articles. You are interested in the articles about Brazilian soccer. It turns out that a regular query on <span class="italic">soccer or Brazil</span> returns many high ranking articles on US soccer. To raise the ranking of the articles on Brazilian soccer, enter the following query:</p>
<pre dir="ltr">&#39;soccer or Brazil*3&#39;
</pre>
<p><a href="cqoper.htm#GUID-78D46BF1-BB4C-4F37-8982-934B61977711__G1024843" title="This table shows score samples.">Table 3-3</a> illustrates how the weight operator can change the ranking of three hypothetical documents A, B, and C, which all contain information about soccer. The columns in the table show the total score of four different query expressions on the three documents.</p>
<div class="tblformal" id="GUID-78D46BF1-BB4C-4F37-8982-934B61977711__G1024843">
<p class="titleintable">Table 3-3 Score Samples</p>
<table class="cellalignment3028" title="Score Samples" summary="This table shows score samples.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3086" id="d53900e9388">Document</th>
<th class="cellalignment3181" id="d53900e9391">soccer</th>
<th class="cellalignment3147" id="d53900e9394">Brazil</th>
<th class="cellalignment3119" id="d53900e9397">soccer or Brazil</th>
<th class="cellalignment3107" id="d53900e9400">soccer or Brazil*3</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e9405" headers="d53900e9388">
<p>A</p>
</td>
<td class="cellalignment3182" headers="d53900e9405 d53900e9391">
<p>20</p>
</td>
<td class="cellalignment3149" headers="d53900e9405 d53900e9394">
<p>10</p>
</td>
<td class="cellalignment3120" headers="d53900e9405 d53900e9397">
<p>20</p>
</td>
<td class="cellalignment3109" headers="d53900e9405 d53900e9400">
<p>30</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e9421" headers="d53900e9388">
<p>B</p>
</td>
<td class="cellalignment3182" headers="d53900e9421 d53900e9391">
<p>10</p>
</td>
<td class="cellalignment3149" headers="d53900e9421 d53900e9394">
<p>30</p>
</td>
<td class="cellalignment3120" headers="d53900e9421 d53900e9397">
<p>30</p>
</td>
<td class="cellalignment3109" headers="d53900e9421 d53900e9400">
<p>90</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3088" id="d53900e9437" headers="d53900e9388">
<p>C</p>
</td>
<td class="cellalignment3182" headers="d53900e9437 d53900e9391">
<p>50</p>
</td>
<td class="cellalignment3149" headers="d53900e9437 d53900e9394">
<p>20</p>
</td>
<td class="cellalignment3120" headers="d53900e9437 d53900e9397">
<p>50</p>
</td>
<td class="cellalignment3109" headers="d53900e9437 d53900e9400">
<p>60</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The score in the third column containing the query <span class="italic">soccer or Brazil</span> is the score of the highest scoring term. The score in the fourth column containing the query <span class="italic">soccer or Brazil*3</span> is the larger of the score of the first column <span class="italic">soccer</span> and of the score <span class="italic">Brazil</span> multiplied by three, <span class="italic">Brazil*3</span>.</p>
<p>With the initial query of <span class="italic">soccer or Brazil</span>, the documents are ranked in the order C B A. With the query of <span class="italic">soccer or Brazil*3</span>, the documents are ranked B C A, which is the preferred ranking.</p>
<p>Weights can be added to multiple terms. The query <span class="italic">Brazil OR (soccer AND Brazil)*3</span> will increase the relative scores for documents that contain both <span class="italic">soccer</span> and <span class="italic">Brazil</span>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF0344"></a>
<div class="props_rev_3"><a id="GUID-E494A57A-951A-4DCD-9AB1-6BEA68C83DB4"></a>
<h2 id="CCREF-GUID-E494A57A-951A-4DCD-9AB1-6BEA68C83DB4" class="sect2"><span class="enumeration_section">3.33</span> wildcards (% _)</h2>
<div>
<div class="section">
<p><a id="d53900e9554" class="indexterm-anchor"></a><a id="d53900e9556" class="indexterm-anchor"></a><a id="d53900e9558" class="indexterm-anchor"></a>Wildcard characters can be used in query expressions to expand word searches into pattern searches. When a wildcard is used on its own, for example, &#34;DOG %&#34; or &#34;.%&#34; or &#34;%&#34; by itself, it is treated as a stopword.</p>
<p>The wildcard characters are as follows:</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-E494A57A-951A-4DCD-9AB1-6BEA68C83DB4__GUID-9069AE3E-7002-4C2B-89C3-C0A5733843E7">
<table class="cellalignment3028" summary="This table describes wildcards (% _).">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3083" id="d53900e9571">Wildcard Character</th>
<th class="cellalignment3093" id="d53900e9574">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e9579" headers="d53900e9571">
<p>%</p>
</td>
<td class="cellalignment3094" headers="d53900e9579 d53900e9574">
<p>The percent wildcard can appear any number of times at any part of the search term. The search term will be expanded into an equivalence list of terms. The list consists of all terms in the index that match the wildcarded term, with zero or more characters in place of the percent character.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3084" id="d53900e9586" headers="d53900e9571">
<p>_</p>
</td>
<td class="cellalignment3094" headers="d53900e9586 d53900e9574">
<p>The underscore wildcard specifies a single position in which any character can occur.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>The total number of wildcard expansions from all words in a query containing unescaped wildcard characters cannot exceed the maximum number of expansions specified by the <code class="codeph">BASIC_WORDLIST</code> attribute <code class="codeph">WILDCARD_MAXTERMS</code>. For more information, see <span class="q">&#34;<a href="cdatadic.htm#GUID-CD2DE39F-17F7-424E-8DB3-A16C7843965D">BASIC_WORDLIST</a>&#34;</span>.</p>
<div class="infobox-note" id="GUID-E494A57A-951A-4DCD-9AB1-6BEA68C83DB4__GUID-4E95FC0A-94D5-4070-B91C-839E45628BE7">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>When a wildcard is used on its own, it is treated as a stopword.</p>
</li>
<li>
<p>When a wildcard expression translates to a stopword, the stopword is not included in the query and not highlighted by CTX_DOC.<a href="cdocpkg.htm#GUID-719549AC-234D-4BC4-B3E0-605F8C6EB511">HIGHLIGHT</a> or CTX_DOC.<a href="cdocpkg.htm#GUID-F1A960BD-70E6-4BAC-B194-717B37F803D9">MARKUP</a> .</p>
</li>
</ul>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Right-Truncated Queries</p>
<p>Right truncation involves placing the wildcard on the right-hand-side of the search string.</p>
<p>For example, the following query expression finds all terms beginning with the pattern <span class="italic">scal</span>:</p>
<pre dir="ltr">&#39;scal%&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Left- and Double-Truncated Queries</p>
<p>Left truncation involves placing the wildcard on the left-hand-side of the search string.</p>
<p>To find words such as <span class="italic">king</span>, <span class="italic">wing</span> or <span class="italic">sing</span>, write the query as follows:</p>
<pre dir="ltr">&#39;_ing&#39;
</pre>
<p>For all words that end with <span class="italic">ing</span>, enter:</p>
<pre dir="ltr">&#39;%ing&#39;
</pre>
<p>Combine left-truncated and right-truncated searches to create double-truncated searches. The following query finds all documents that contain words that contain the substring <span class="italic">%benz%</span></p>
<pre dir="ltr">&#39;%benz%&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Improving Wildcard Query Performance</p>
<p>Improve wildcard query performance by adding a substring or prefix index.</p>
<p>When your wildcard queries are left- and double-truncated, you can improve query performance by creating a substring index. Substring indexes improve query performance for all types of left-truncated wildcard searches such as <span class="italic">%ed</span>, <span class="italic">_ing</span>, or <span class="italic">%benz%</span>.</p>
<p>When your wildcard queries are right-truncated, you can improve performance by creating a prefix index. A prefix index improves query performance for wildcard searches such as <span class="italic">to%</span>.</p>
<div class="infoboxnotealso" id="GUID-E494A57A-951A-4DCD-9AB1-6BEA68C83DB4__GUID-8143686E-C52C-4D2F-9C20-AB18B5CC4884">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="cdatadic.htm#GUID-CD2DE39F-17F7-424E-8DB3-A16C7843965D">BASIC_WORDLIST</a>&#34;</span> in <a href="cdatadic.htm#GUID-22680996-89CF-4666-89E6-BE8B9431DB02">Oracle Text Indexing Elements</a> for more information about creating substring and prefix indexes</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="CCREF23851"></a><a id="CCREF23852"></a><a id="CCREF23853"></a><a id="CCREF23854"></a><a id="CCREF23855"></a><a id="CCREF23856"></a><a id="CCREF23857"></a><a id="CCREF23858"></a><a id="CCREF23859"></a><a id="CCREF23860"></a><a id="CCREF23861"></a><a id="CCREF23862"></a><a id="CCREF23863"></a><a id="CCREF0330"></a>
<div class="props_rev_3"><a id="GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C"></a>
<h2 id="CCREF-GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C" class="sect2"><span class="enumeration_section">3.34</span> WITHIN</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">WITHIN</code> operator to narrow a query down into document sections. Document sections can be one of the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Zone sections</p>
</li>
<li>
<p>Field sections</p>
</li>
<li>
<p>Attribute sections</p>
</li>
<li>
<p>Special sections (sentence or paragraph)</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Syntax</p>
<div class="tblformal" id="GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C__GUID-18B95036-86D0-493B-93FB-EC56FD9EC167">
<table class="cellalignment3028" summary="This table shows WITHIN operator.">
<thead>
<tr class="cellalignment3022">
<th class="cellalignment3073" id="d53900e9881">Syntax</th>
<th class="cellalignment3169" id="d53900e9884">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e9889" headers="d53900e9881">
<p><span class="italic">expression</span> WITHIN <span class="italic">section</span></p>
</td>
<td class="cellalignment3170" headers="d53900e9889 d53900e9884">
<p>Searches for <tt>expression</tt> within the predefined zone, field, or attribute <tt>section</tt>.</p>
<p>If section is a zone, <tt>expression</tt> can contain one or more <code class="codeph">WITHIN</code> operators (nested <code class="codeph">WITHIN</code>) whose section is a zone or special section.</p>
<p>If section is a field or attribute section, expression cannot contain another <code class="codeph">WITHIN</code> operator.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e9922" headers="d53900e9881">
<p><span class="variable">expression</span> WITHIN SENTENCE</p>
</td>
<td class="cellalignment3170" headers="d53900e9922 d53900e9884">
<p>Searches for documents that contain <tt>expression</tt> within a sentence. Specify an <code class="codeph">AND</code> or <code class="codeph">NOT</code> query for <tt>expression</tt>.</p>
<p>The <tt>expression</tt> can contain one or more <code class="codeph">WITHIN</code> operators (nested <code class="codeph">WITHIN</code>) whose section is a zone or special section.</p>
</td>
</tr>
<tr class="cellalignment3022">
<td class="cellalignment3076" id="d53900e9954" headers="d53900e9881">
<p><span class="variable">expression</span> WITHIN PARAGRAPH</p>
</td>
<td class="cellalignment3170" headers="d53900e9954 d53900e9884">
<p>Searches for documents that contain <tt>expression</tt> within a paragraph. Specify an <code class="codeph">AND</code> or <code class="codeph">NOT</code> query for <tt>expression</tt>.</p>
<p><tt>The expression</tt> can contain one or more <code class="codeph">WITHIN</code> operators (nested <code class="codeph">WITHIN</code>) whose section is a zone or special section.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">WITHIN Limitations</p>
<p>The <code class="codeph">WITHIN</code> operator has the following limitations:</p>
<ul style="list-style-type: disc;">
<li>
<p>You cannot embed the <code class="codeph">WITHIN</code> clause in a phrase. For example, you cannot write: <span class="italic">term1 WITHIN section term2</span></p>
</li>
<li>
<p>Because <code class="codeph">WITHIN</code> is a reserved word, you must escape the word with braces to search on it.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">WITHIN Operator Examples</p>
<p id="GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C__I998559">Querying Within Zone Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p>To find all the documents that contain the term <span class="italic">San Francisco</span> within the section <span class="italic">Headings,</span> write the query as follows:</p>
<pre dir="ltr">&#39;San Francisco WITHIN Headings&#39;
</pre>
<p>To find all the documents that contain the term <span class="italic">sailing</span> and contain the term <span class="italic">San Francisco</span> within the section <span class="italic">Headings</span>, write the query in one of two ways:</p>
<pre dir="ltr">&#39;(San Francisco WITHIN Headings) and sailing&#39;

&#39;sailing and San Francisco WITHIN Headings&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Compound Expressions with WITHIN</p>
</div>
<!-- class="section" -->
<div class="section">
<p>To find all documents that contain the terms <span class="italic">dog</span> and <span class="italic">cat</span> within the same section <span class="italic">Headings</span>, write the query as follows:</p>
<pre dir="ltr">&#39;(dog and cat) WITHIN Headings&#39;
</pre>
<p>This query is logically different from:</p>
<pre dir="ltr">&#39;dog WITHIN Headings and cat WITHIN Headings&#39;
</pre>
<p>This query finds all documents that contain <span class="italic">dog</span> and <span class="italic">cat</span> where the terms <span class="italic">dog</span> and <span class="italic">cat</span> are in <span class="italic">Headings</span> sections, regardless of whether they occur in the same <span class="italic">Headings</span> section or different sections.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Near with WITHIN</p>
</div>
<!-- class="section" -->
<div class="section">
<p>To find all documents in which <span class="italic">dog</span> is near <span class="italic">cat</span> within the section <span class="italic">Headings</span>, write the query as follows:</p>
<pre dir="ltr">&#39;dog near cat WITHIN Headings&#39;
</pre>
<div class="infobox-note" id="GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C__GUID-5B9577AA-FD27-4C3C-BE21-60DE7CC8C524">
<p class="notep1">Note:</p>
<p>The near operator has higher precedence than the <code class="codeph">WITHIN</code> operator so braces are not necessary in this example. This query is equivalent to <span class="italic">(dog near cat) WITHIN Headings</span>.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Nested WITHIN Queries</p>
</div>
<!-- class="section" -->
<div class="section">
<p>You can nest the within operator to search zone sections within zone sections.</p>
<p>For example, assume that a document set had the zone section <code class="codeph">AUTHOR</code> nested within the zone <code class="codeph">BOOK</code> section. Write a nested <code class="codeph">WITHIN</code> query to find all occurrences of <span class="italic">scott</span> within the <code class="codeph">AUTHOR</code> section of the <code class="codeph">BOOK</code> section as follows:</p>
<pre dir="ltr">&#39;(scott WITHIN AUTHOR) WITHIN BOOK&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Querying Within Field Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The syntax for querying within a field section is the same as querying within a zone section. The syntax for most of the examples given in the previous section, <span class="q">&#34;<a href="cqoper.htm#GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C__I998559">Querying Within Zone Sections</a>&#34;</span>, apply to field sections.</p>
<p>However, field sections behave differently from zone sections in terms of</p>
<ul style="list-style-type: disc;">
<li>
<p>Visibility: Make text within a field section invisible.</p>
</li>
<li>
<p>Repeatability: <code class="codeph">WITHIN</code> queries cannot distinguish repeated field sections.</p>
</li>
<li>
<p>Nestability: You cannot enter a nested <code class="codeph">WITHIN</code> query with a field section.</p>
</li>
</ul>
<p>The following sections describe these differences.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Visible Flag in Field Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p>When a field section is created with the visible flag set to <code class="codeph">FALSE</code> in <code class="codeph">CTX_DDL.ADD_FIELD_SECTION</code>, the text within a field section can only be queried using the <code class="codeph">WITHIN</code> operator.</p>
<p>For example, assume that <code class="codeph">TITLE</code> is a field section defined with visible flag set to <code class="codeph">FALSE</code>. Then the query <span class="italic">dog</span> without the <code class="codeph">WITHIN</code> operator will <span class="italic">not</span> find a document containing:</p>
<pre dir="ltr">&lt;TITLE&gt;The dog&lt;/TITLE&gt; I like my pet.
</pre>
<p>To find such a document, use the <code class="codeph">WITHIN</code> operator as follows:</p>
<pre dir="ltr">&#39;dog WITHIN TITLE&#39;
</pre>
<p>Alternatively, set the visible flag to <code class="codeph">TRUE</code> when you define <code class="codeph">TITLE</code> as a field section with <code class="codeph">CTX_DDL.ADD_FIELD_SECTION</code>.</p>
<div class="infoboxnotealso" id="GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C__GUID-2CF7326B-881F-4B99-A4FC-E921A63B43CF">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="cddlpkg.htm#GUID-A275E1CF-2F48-4A52-9E4C-4BE1698C647F">ADD_FIELD_SECTION</a>&#34;</span> in <a href="cddlpkg.htm#GUID-0F7C39E8-E44A-421C-B40D-3B3578B507E9">CTX_DDL Package</a> for more information about creating field sections</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Repeated Field Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p><code class="codeph">WITHIN</code> queries <span class="italic">cannot</span> distinguish repeated field sections in a document. For example, consider the document with the repeated section <code class="codeph">&lt;author&gt;</code>:</p>
<pre dir="ltr">&lt;author&gt; Charles Dickens &lt;/author&gt;
&lt;author&gt; Martin Luther King &lt;/author&gt;
</pre>
<p>Assuming that <code class="codeph">&lt;author&gt;</code> is defined as a field section, a query such as (<span class="italic">charles and martin) within author</span> returns the document, even though these words occur in separate tags.</p>
<p>To have <code class="codeph">WITHIN</code> queries distinguish repeated sections, define the sections as zone sections.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Nested Field Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p>You cannot enter a nested <code class="codeph">WITHIN</code> query with field sections. Doing so raises an error.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Querying Within Sentence or Paragraphs</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Querying within sentence or paragraph boundaries is useful to find combinations of words that occur in the same sentence or paragraph. To query sentence or paragraphs, you must first add the special section to your section group before you index. Do so with <code class="codeph">CTX_DDL.ADD_SPECIAL_SECTION</code>.</p>
<p>To find documents that contain <span class="italic">dog</span> and <span class="italic">cat</span> within the same sentence:</p>
<pre dir="ltr">&#39;(dog and cat) WITHIN SENTENCE&#39;
</pre>
<p>To find documents that contain <span class="italic">dog</span> and <span class="italic">cat</span> within the same paragraph:</p>
<pre dir="ltr">&#39;(dog and cat) WITHIN PARAGRAPH&#39;
</pre>
<p>To find documents that contain sentences with the word <span class="italic">dog</span> but not <span class="italic">cat</span>:</p>
<pre dir="ltr">&#39;(dog not cat) WITHIN SENTENCE&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Querying Within Attribute Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Query within attribute sections when you index with either <code class="codeph">XML_SECTION_GROUP</code> or <code class="codeph">AUTO_SECTION_GROUP</code> as your section group type.</p>
<p>Assume you have an XML document as follows:</p>
<pre dir="ltr">&lt;book title=&#34;Tale of Two Cities&#34;&gt;It was the best of times.&lt;/book&gt;
</pre>
<p>Define the section <code class="codeph">title@book</code> to be the attribute section <code class="codeph">title</code>. Do so with the <code class="codeph">CTX_DLL.ADD_ATTR_SECTION</code> procedure or dynamically after indexing with <code class="codeph">ALTER</code> <code class="codeph">INDEX</code>.</p>
<div class="infobox-note" id="GUID-80B82B8E-EC9F-4E79-8372-DB70F00F327C__GUID-691E98C8-DB3E-46C1-BB9F-123914A4B667">
<p class="notep1">Note:</p>
<p>When you use the <code class="codeph">AUTO_SECTION_GROUP</code> to index XML documents, the system automatically creates attribute sections and names them in the form <code class="codeph">attribute@tag</code>.</p>
<p>If you use the <code class="codeph">XML_SECTION_GROUP</code>, you can name attribute sections anything with <code class="codeph">CTX_DDL.ADD_ATTR_SECTION</code>.</p>
</div>
<p>To search on <span class="italic">Tale</span> within the attribute section <code class="codeph">title</code>, enter the following query:</p>
<pre dir="ltr">&#39;Tale WITHIN title&#39;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Constraints for Querying Attribute Sections</p>
</div>
<!-- class="section" -->
<div class="section">
<p>The following constraints apply to querying within attribute sections:</p>
<ul style="list-style-type: disc;">
<li>
<p>Regular queries on attribute text do not hit the document unless qualified in a within clause. Assume you have an XML document as follows:</p>
</li>
</ul>
<pre dir="ltr">&lt;book title=&#34;Tale of Two Cities&#34;&gt;It was the best of times.&lt;/book&gt;
</pre>
<p>A query on <span class="italic">Tale</span> by itself does not produce a hit on the document unless qualified with <code class="codeph">WITHIN title@book</code>. (This behavior is like field sections when you set the visible flag set to false.)</p>
<ul style="list-style-type: disc;">
<li>
<p>You cannot use attribute sections in a nested <code class="codeph">WITHIN</code> query.</p>
</li>
<li>
<p>Phrases ignore attribute text. For example, if the original document looked like:</p>
</li>
</ul>
<pre dir="ltr">Now is the time for all good &lt;word type=&#34;noun&#34;&gt; men &lt;/word&gt; to come to the aid.
</pre>
<p>Then this document would hit on the regular query <span class="italic">good men</span>, ignoring the intervening attribute text.</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">WITHIN</code> queries can distinguish repeated attribute sections. This behavior is like zone sections but unlike field sections. For example, you have a document as follows:</p>
</li>
</ul>
<pre dir="ltr">&lt;book title=&#34;Tale of Two Cities&#34;&gt;It was the best of times.&lt;/book&gt;
&lt;book title=&#34;Of Human Bondage&#34;&gt;The sky broke dull and gray.&lt;/book&gt;
</pre>
<p>Assume that <code class="codeph">book</code> is a zone section and <code class="codeph">book@author</code> is an attribute section. Consider the query:</p>
<pre dir="ltr">&#39;(Tale and Bondage) WITHIN book@author&#39;
</pre>
<p>This query does <span class="italic">not</span> hit the document, because <span class="italic">tale</span> and <span class="italic">bondage</span> are in different occurrences of the attribute section <code class="codeph">book@author</code>.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Notes</p>
<p>Section Names</p>
<p>The <code class="codeph">WITHIN</code> operator requires you to know the name of the section you search. A list of defined sections can be obtained using the <a href="aviews.htm#GUID-DDBB26C5-A6BC-472C-A67C-6F2037A56833">CTX_SECTIONS</a> or <a href="aviews.htm#GUID-26045DBB-5EAF-4716-9A65-19A789ECCFCB">CTX_USER_SECTIONS</a> views.</p>
<p>Section Boundaries</p>
<p>For special and zone sections, the terms of the query must be fully enclosed in a particular occurrence of the section for the document to satisfy the query. This is not a requirement for field sections.</p>
<p>For example, consider the query where <span class="italic">bold</span> is a zone section:</p>
<pre dir="ltr">&#39;(dog and cat) WITHIN bold&#39;
</pre>
<p>This query finds:</p>
<pre dir="ltr">&lt;B&gt;dog cat&lt;/B&gt;
</pre>
<p>but it does not find:</p>
<pre dir="ltr">&lt;B&gt;dog&lt;/B&gt;&lt;B&gt;cat&lt;/B&gt;
</pre>
<p>This is because dog and cat must be in the same <span class="italic">bold</span> section.</p>
<p>This behavior is especially useful for special sections, where</p>
<pre dir="ltr">&#39;(dog and cat) WITHIN sentence&#39;
</pre>
<p>means find <span class="italic">dog</span> and <span class="italic">cat</span> within the same sentence.</p>
<p>Field sections on the other hand are meant for non-repeating, embedded metadata such as a title section. Queries within field sections cannot distinguish between occurrences. All occurrences of a field section are considered to be parts of a single section. For example, the query:</p>
<pre dir="ltr">(dog and cat) WITHIN title
</pre>
<p>can find a document like this:</p>
<p>&lt;TITLE&gt;dog&lt;/TITLE&gt;&lt;TITLE&gt;cat&lt;/TITLE&gt;</p>
<p>In return for this field section limitation and for the overlap and nesting limitations, field section queries are generally faster than zone section queries, especially if the section occurs in every document, or if the search term is common.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3021">
<tr>
<td class="cellalignment3040">
<table class="cellalignment3026">
<tr>
<td class="cellalignment3025"><a href="cdatadic.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3025"><a href="cqspcl.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3042">
<table class="cellalignment3024">
<tr>
<td class="cellalignment3025"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3025"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3025"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3025"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3025"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3025"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>