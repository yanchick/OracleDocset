<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-105774"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Loading%20Column%20Objects%20with%20User-Defined%20Constructors"></a><title>Loading Column Objects with User-Defined Constructors</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="column objects, loading, with user-defined constructors"/>
<meta name="dcterms.created" content="2017-07-10T17:06:49Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Utilities"/>
<meta name="dcterms.identifier" content="E41528-09"/>
<meta name="dcterms.isVersionOf" content="SUTIL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="GUID-C2940706-C809-4E42-886B-F13D35E54A43.htm" title="Previous" type="text/html"/>
<link rel="Next" href="GUID-6BA4C022-77C8-4738-9AFD-E52252036DE7.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41528-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB"></a> <span id="PAGE" style="display:none;">450/1019</span> <!-- End Header -->
<a id="SUTIL3368"></a><a id="SUTIL3371"></a><a id="SUTIL3367"></a><a id="SUTIL3369"></a><a id="SUTIL3370"></a><a id="SUTIL1255"></a>
<h1 id="SUTIL-GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB" class="sect1">Loading Column Objects with User-Defined Constructors</h1>
<div>
<div class="section">
<p>The Oracle database automatically supplies a default constructor for every object type. This constructor requires that all attributes of the type be specified as arguments in a call to the constructor. When a new instance of the object is created, its attributes take on the corresponding values in the argument list. This constructor is known as the attribute-value constructor<a id="d93473e51" class="indexterm-anchor"></a><a id="d93473e55" class="indexterm-anchor"></a><a id="d93473e59" class="indexterm-anchor"></a>. SQL*Loader uses the attribute-value constructor by default when loading column objects.</p>
<p>It is possible to override the attribute-value constructor by creating one or more user-defined<a id="d93473e68" class="indexterm-anchor"></a><a id="d93473e70" class="indexterm-anchor"></a><a id="d93473e74" class="indexterm-anchor"></a><a id="d93473e80" class="indexterm-anchor"></a> constructors. When you create a user-defined constructor, you must supply a type body that performs the user-defined logic whenever a new instance of the object is created. A user-defined constructor may have the same argument list as the attribute-value constructor but differ in the logic that its type body implements.</p>
<p>When the argument list of a user-defined constructor function matches the argument list of the attribute-value constructor, there is a difference in behavior between conventional and direct path SQL*Loader. Conventional path mode results in a call to the user-defined constructor. Direct path mode results in a call to the attribute-value constructor. <a href="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB.htm#GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009648">Example 11-7</a> illustrates this difference.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009648">
<p class="titleinexample">Example 11-7 Loading a Column Object with Constructors That Match</p>
<p>Object Type Definitions</p>
<pre dir="ltr">CREATE TYPE person_type AS OBJECT
     (name     VARCHAR(30),
      ssn      NUMBER(9)) not final;

   CREATE TYPE employee_type UNDER person_type
     (empid    NUMBER(5),
   -- User-defined constructor that looks like an attribute-value constructor
      CONSTRUCTOR FUNCTION
        employee_type (name VARCHAR2, ssn NUMBER, empid NUMBER)
        RETURN SELF AS RESULT);

   CREATE TYPE BODY employee_type AS
     CONSTRUCTOR FUNCTION
        employee_type (name VARCHAR2, ssn NUMBER, empid NUMBER)
      RETURN SELF AS RESULT AS
   --User-defined constructor makes sure that the name attribute is uppercase.
      BEGIN
        SELF.name  := UPPER(name);
        SELF.ssn   := ssn;
        SELF.empid := empid;
        RETURN;
      END;

   CREATE TABLE personnel
     (deptno   NUMBER(3),
      deptname VARCHAR(30),
      employee employee_type);
</pre>
<p>Control File Contents</p>
<pre dir="ltr">LOAD DATA
   INFILE *
   REPLACE
   INTO TABLE personnel
   FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&#34;&#39;
      (deptno        INTEGER EXTERNAL(3),
       deptname      CHAR,
       employee      COLUMN OBJECT
         (name       CHAR,
          ssn        INTEGER EXTERNAL(9),
          empid      INTEGER EXTERNAL(5)))

   BEGINDATA
<span class="bold">1</span>  101,Mathematics,Johny Q.,301189453,10249,
   237,Physics,&#34;Albert Einstein&#34;,128606590,10030,
</pre>
<div class="infobox-note" id="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__GUID-443036F0-BC42-46A4-BA03-67BF5AFD39D2">
<p class="notep1">Note:</p>
<p>The callout, in bold, to the left of the example corresponds to the following note:</p>
<ol>
<li>
<p>When this control file is run in conventional path mode, the name fields, <code class="codeph">Johny</code> <code class="codeph">Q.</code> and <code class="codeph">Albert</code> <code class="codeph">Einstein</code>, are both loaded in uppercase. This is because the user-defined constructor is called in this mode. In contrast, when this control file is run in direct path mode, the name fields are loaded exactly as they appear in the input data. This is because the attribute-value constructor is called in this mode.</p>
</li>
</ol>
<p>It is possible to create a user-defined constructor whose argument list does not match that of the attribute-value constructor. In this case, both conventional and direct path modes will result in a call to the attribute-value constructor. Consider the definitions in <a href="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB.htm#GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009642">Example 11-8</a>.</p>
</div>
</div>
<!-- class="example" -->
<div class="example" id="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009642">
<p class="titleinexample">Example 11-8 Loading a Column Object with Constructors That Do Not Match</p>
<p>Object Type Definitions</p>
<pre dir="ltr">CREATE SEQUENCE employee_ids
    START     WITH  1000
    INCREMENT BY    1;

   CREATE TYPE person_type AS OBJECT
     (name     VARCHAR(30),
      ssn      NUMBER(9)) not final;

   CREATE TYPE employee_type UNDER person_type
     (empid    NUMBER(5),
   -- User-defined constructor that does not look like an attribute-value 
   -- constructor
      CONSTRUCTOR FUNCTION
        employee_type (name VARCHAR2, ssn NUMBER)
        RETURN SELF AS RESULT);

   CREATE TYPE BODY employee_type AS
     CONSTRUCTOR FUNCTION
        employee_type (name VARCHAR2, ssn NUMBER)
      RETURN SELF AS RESULT AS
   -- This user-defined constructor makes sure that the name attribute is in
   -- lowercase and assigns the employee identifier based on a sequence.
        nextid     NUMBER;
        stmt       VARCHAR2(64);
      BEGIN

        stmt := &#39;SELECT employee_ids.nextval FROM DUAL&#39;;
        EXECUTE IMMEDIATE stmt INTO nextid;

        SELF.name  := LOWER(name);
        SELF.ssn   := ssn;
        SELF.empid := nextid; 
        RETURN;
      END;

   CREATE TABLE personnel
     (deptno   NUMBER(3),
      deptname VARCHAR(30),
      employee employee_type);
</pre>
<p>If the control file described in <a href="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB.htm#GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009648">Example 11-7</a> is used with these definitions, then the name fields are loaded exactly as they appear in the input data (that is, in mixed case). This is because the attribute-value constructor is called in both conventional and direct path modes.</p>
<p>It is still possible to load this table using conventional path mode by explicitly making reference to the user-defined constructor in a SQL expression. <a href="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB.htm#GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009753">Example 11-9</a> shows how this can be done.</p>
</div>
<!-- class="example" -->
<div class="example" id="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009753">
<p class="titleinexample">Example 11-9 Using SQL to Load Column Objects When Constructors Do Not Match</p>
<p>Control File Contents</p>
<pre dir="ltr">LOAD DATA
   INFILE *
   REPLACE
   INTO TABLE personnel
   FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&#34;&#39;
      (deptno        INTEGER EXTERNAL(3),
       deptname      CHAR,
       name          BOUNDFILLER CHAR,
       ssn           BOUNDFILLER INTEGER EXTERNAL(9),
<span class="bold">1</span>      employee      EXPRESSION &#34;employee_type(:NAME, :SSN)&#34;)

   BEGINDATA
<span class="bold">1</span>  101,Mathematics,Johny Q.,301189453,
   237,Physics,&#34;Albert Einstein&#34;,128606590,
</pre>
<div class="infobox-note" id="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__GUID-33CE2A54-788D-4ADC-ABDB-D12184DC4CBF">
<p class="notep1">Note:</p>
<p>The callouts, in bold, to the left of the example correspond to the following note:</p>
<ol>
<li>
<p>When this control file is run in conventional path mode, the name fields, <code class="codeph">Johny</code> <code class="codeph">Q.</code> and <code class="codeph">Albert</code> <code class="codeph">Einstein</code>, are both loaded in uppercase. This is because the user-defined constructor is called in this mode. In contrast, when this control file is run in direct path mode, the name fields are loaded exactly as they appear in the input data. This is because the attribute-value constructor is called in this mode.</p>
</li>
</ol>
</div>
</div>
<!-- class="example" -->
<div class="section">
<p>If the control file in <a href="GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB.htm#GUID-BB33C1CF-4EF5-40C8-8A2B-2A1DB9A213CB__i1009753">Example 11-9</a> is used in direct path mode, then the following error is reported:</p>
<pre dir="ltr">SQL*Loader-951: Error calling once/load initialization
ORA-26052: Unsupported type 121 for SQL expression on column EMPLOYEE.
</pre></div>
<!-- class="section" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2015">
<tr>
<td class="cellalignment2022">
<table class="cellalignment2020">
<tr>
<td class="cellalignment2019"><a href="GUID-C2940706-C809-4E42-886B-F13D35E54A43.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2019"><a href="GUID-6BA4C022-77C8-4738-9AFD-E52252036DE7.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2024">
<table class="cellalignment2018">
<tr>
<td class="cellalignment2019"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2019"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2019"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2019"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2019"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2019"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>