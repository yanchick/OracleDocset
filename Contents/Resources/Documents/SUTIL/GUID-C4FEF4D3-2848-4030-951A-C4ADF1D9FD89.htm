<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-105808"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Example%20of%20a%20PL%2FSQL%20Procedure%20for%20Assembling%20XMLType%20Data"></a><title>Example of a PL/SQL Procedure for Assembling XMLType Data</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="dcterms.created" content="2017-07-10T17:06:49Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Utilities"/>
<meta name="dcterms.identifier" content="E41528-09"/>
<meta name="dcterms.isVersionOf" content="SUTIL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="GUID-9797CFFF-033D-44F7-A3CD-0ADA0BA46C6B.htm" title="Previous" type="text/html"/>
<link rel="Next" href="GUID-5C07C445-8977-4A16-9641-C204C603CD03.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E41528-09.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-C4FEF4D3-2848-4030-951A-C4ADF1D9FD89"></a> <span id="PAGE" style="display:none;">759/1019</span> <!-- End Header -->
<a id="SUTIL1572"></a>
<h1 id="SUTIL-GUID-C4FEF4D3-2848-4030-951A-C4ADF1D9FD89" class="sect1">Example of a PL/SQL Procedure for Assembling XMLType Data</h1>
<div>
<p>The example presented in this section shows a procedure that can be used to mine and assemble XML redo for tables that contain out of line XML data. This shows how to assemble the XML data using a temporary LOB. Once the XML document is assembled, it can be used in a meaningful way. This example queries the assembled document for the <code class="codeph">EmployeeName</code> element and then stores the returned name, the XML document and the <code class="codeph">SQL_REDO</code> for the original DML in the <code class="codeph">EMPLOYEE_XML_DOCS</code> table.</p>
<div class="infobox-note" id="GUID-C4FEF4D3-2848-4030-951A-C4ADF1D9FD89__GUID-405ABA2D-15F8-4DCA-BA25-9CD8AF7B30B3">
<p class="notep1">Note:</p>
<p>This procedure is an example only and is simplified. It is only intended to illustrate that DMLs to tables with <code class="codeph">XMLType</code> data can be mined and assembled using LogMiner.</p>
</div>
<p>Before calling this procedure, all of the relevant logs must be added to a LogMiner session and <code class="codeph">DBMS_LOGMNR.START_LOGMNR()</code> must be called with the <code class="codeph">COMMITTED_DATA_ONLY</code> option. The <code class="codeph">MINE_AND_ASSEMBLE()</code> procedure can then be called with the schema and table name of the table that has XML data to be mined.</p>
<pre dir="ltr">-- table to store assembled XML documents
create table employee_xml_docs  (
  employee_name         varchar2(100),
  sql_stmt                     varchar2(4000),
  xml_doc                     SYS.XMLType);
        
-- procedure to assemble the XML documents
create or replace procedure mine_and_assemble(
  schemaname        in varchar2,
  tablename         in varchar2)
AS
  loc_c      CLOB; 
  row_op     VARCHAR2(100); 
  row_status NUMBER; 
  stmt       VARCHAR2(4000);
  row_redo   VARCHAR2(4000);
  xml_data   VARCHAR2(32767 CHAR); 
  data_len   NUMBER; 
  xml_lob    clob;
  xml_doc    XMLType;
BEGIN 
 
-- Look for the rows in V$LOGMNR_CONTENTS that are for the appropriate schema 
-- and table name but limit it to those that are valid sql or that need assembly
-- because they are XML documents.
 
 For item in ( SELECT operation, status, sql_redo  FROM v$logmnr_contents
 where seg_owner = schemaname and table_name = tablename
 and status IN (DBMS_LOGMNR.VALID_SQL, DBMS_LOGMNR.ASSEMBLY_REQUIRED_SQL))
 LOOP
    row_op := item.operation;
    row_status := item.status;
    row_redo := item.sql_redo;
 
     CASE row_op 
 
          WHEN &#39;XML DOC BEGIN&#39; THEN 
             BEGIN 
               -- save statement and begin assembling XML data 
               stmt := row_redo; 
               xml_data := &#39;&#39;; 
               data_len := 0; 
               DBMS_LOB.CreateTemporary(xml_lob, TRUE);
             END; 
 
          WHEN &#39;XML DOC WRITE&#39; THEN 
             BEGIN 
               -- Continue to assemble XML data
               xml_data := xml_data || row_redo; 
               data_len := data_len + length(row_redo); 
               DBMS_LOB.WriteAppend(xml_lob, length(row_redo), row_redo);
             END; 
 
          WHEN &#39;XML DOC END&#39; THEN 
             BEGIN 
               -- Now that assembly is complete, we can use the XML document 
              xml_doc := XMLType.createXML(xml_lob);
              insert into employee_xml_docs values
                        (extractvalue(xml_doc, &#39;/EMPLOYEE/NAME&#39;), stmt, xml_doc);
              commit;
 
              -- reset
              xml_data := &#39;&#39;; 
              data_len := 0; 
              xml_lob := NULL;
             END; 
 
          WHEN &#39;INSERT&#39; THEN 
             BEGIN 
                stmt := row_redo;
             END; 
 
          WHEN &#39;UPDATE&#39; THEN 
             BEGIN 
                stmt := row_redo;
             END; 
 
          WHEN &#39;INTERNAL&#39; THEN 
             DBMS_OUTPUT.PUT_LINE(&#39;Skip rows marked INTERNAL&#39;); 
 
          ELSE 
             BEGIN 
                stmt := row_redo;
                DBMS_OUTPUT.PUT_LINE(&#39;Other - &#39; || stmt); 
                IF row_status != DBMS_LOGMNR.VALID_SQL then 
                   DBMS_OUTPUT.PUT_LINE(&#39;Skip rows marked non-executable&#39;); 
                ELSE 
                   dbms_output.put_line(&#39;Status : &#39; || row_status);
                END IF; 
             END; 
 
     END CASE;
 
 End LOOP; 
 
End;
/
 
show errors;
</pre>
<p>This procedure can then be called to mine the changes to the <code class="codeph">SCOTT.XML_DATA_TAB</code> and apply the DMLs.</p>
<pre dir="ltr">EXECUTE MINE_AND_ASSEMBLE (&#39;SCOTT&#39;, &#39;XML_DATA_TAB&#39;);
</pre>
<p>As a result of this procedure, the <code class="codeph">EMPLOYEE_XML_DOCS</code> table will have a row for each out-of-line XML column that was changed. The <code class="codeph">EMPLOYEE_NAME</code> column will have the value extracted from the XML document and the <code class="codeph">SQL_STMT</code> column and the <code class="codeph">XML_DOC</code> column reflect the original row change.</p>
<p>The following is an example query to the resulting table that displays only the employee name and SQL statement:</p>
<pre dir="ltr">SELECT EMPLOYEE_NAME, SQL_STMT FROM EMPLOYEE_XML_DOCS;
                
EMPLOYEE_NAME          SQL_STMT                                                                                           
 
Scott Davis          update &#34;SCOTT&#34;.&#34;XML_DATA_TAB&#34; a set a.&#34;F3&#34; = XMLType(:1) 
                         where a.&#34;F1&#34; = &#39;5000&#39; and a.&#34;F2&#34; = &#39;Chen&#39; and a.&#34;F5&#34; = &#39;JJJ&#39;
        
Richard Harry        update &#34;SCOTT&#34;.&#34;XML_DATA_TAB&#34; a set a.&#34;F4&#34; = XMLType(:1)  
                         where a.&#34;F1&#34; = &#39;5000&#39; and a.&#34;F2&#34; = &#39;Chen&#39; and a.&#34;F5&#34; = &#39;JJJ&#39;
        
Margaret Sally       update &#34;SCOTT&#34;.&#34;XML_DATA_TAB&#34; a set a.&#34;F4&#34; = XMLType(:1)  
                         where a.&#34;F1&#34; = &#39;5006&#39; and a.&#34;F2&#34; = &#39;Janosik&#39; and a.&#34;F5&#34; = &#39;MMM&#39;
</pre></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2015">
<tr>
<td class="cellalignment2022">
<table class="cellalignment2020">
<tr>
<td class="cellalignment2019"><a href="GUID-9797CFFF-033D-44F7-A3CD-0ADA0BA46C6B.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2019"><a href="GUID-5C07C445-8977-4A16-9641-C204C603CD03.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2024">
<table class="cellalignment2018">
<tr>
<td class="cellalignment2019"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2019"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2019"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2019"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2019"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2019"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>