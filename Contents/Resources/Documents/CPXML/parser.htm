<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-4134"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Package%20Parser%20APIs%20for%20C%2B%2B"></a><title>Package Parser APIs for C++</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 730"/>
<meta name="dcterms.created" content="2013-04-23T9:16:4Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database XML C++ API Reference"/>
<meta name="dcterms.identifier" content="E15977-04"/>
<meta name="dcterms.isVersionOf" content="CPXML"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="oraclexml.htm" title="Previous" type="text/html"/>
<link rel="Next" href="soap.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E15977-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/15</span> <!-- End Header -->
<div id="CPXML01600" class="chapter"><a id="Parserpackage"></a>
<h1 class="chapter"><span class="secnum">5</span> <a id="sthref519"></a><a id="sthref520"></a>Package Parser APIs for C++<a id="sthref521"></a><a id="sthref522"></a></h1>
<p>Parser interfaces include: Parser exceptions, Validator, Parser, DOMParser, and SAXParser.</p>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#CHDGHHCC">Parser Datatypes</a></p>
</li>
<li>
<p><a href="#CHDDICCH">DOMParser Interface</a></p>
</li>
<li>
<p><a href="#CHDGEHGH">GParser Interface</a></p>
</li>
<li>
<p><a href="#CHDHFBBD">ParserException Interface</a></p>
</li>
<li>
<p><a href="#CHDGEEDE">SAXHandler Interface</a></p>
</li>
<li>
<p><a href="#CHDECHAH">SAXParser Interface</a></p>
</li>
<li>
<p><a href="#Parserinterfaces">SchemaValidator Interface</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../ADXDK/toc.htm"><span class="italic">Oracle XML Developer&#39;s Kit Programmer&#39;s Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../ADXDB/toc.htm"><span class="italic">Oracle XML DB Developer&#39;s Guide</span></a></p>
</li>
</ul>
</div>
<div class="refentry"><a id="CHDGHHCC"></a>
<hr/>
<div id="CPXML01605" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref523"></a>Parser Datatypes</h2>
<p><a href="#CHDIIDIJ">Table 5-1</a> summarizes the datatypes of the <code>Parser</code> package.</p>
<div id="CPXML2741" class="tblformal">
<p class="titleintable"><a id="sthref524"></a><a id="CHDIIDIJ"></a>Table 5-1 Summary of Datatypes; Parser Package</p>
<table class="cellalignment1809" title="Summary of Datatypes; Parser Package" summary="Column one lists datatypes; column 2 has descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t3">Datatype</th>
<th class="cellalignment1810" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#CHDEGFBH">ParserExceptionCode</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t3 r1c2-t3">
<p>Parser implementation of exceptions.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CHDFECEF">DOMParserIdType</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t3 r1c2-t3">
<p>Defines parser identifiers.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#CHDJFIEJ">SAXParserIdType</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t3 r1c2-t3">
<p>Defines type of node.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#CHDBIEGF">SchValidatorIdType</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t3 r1c2-t3">
<p>Defines validator identifiers.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2742" class="refsect2"><a id="CHDEGFBH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref525"></a><a id="sthref526"></a>ParserExceptionCode</h3>
<p>Parser implementation of exceptions.</p>
<p class="subhead2"><a id="CPXML2743"></a>Definition</p>
<pre>typedef enum ParserExceptionCode {
   PARSER_UNDEFINED_ERR = 0,
   PARSER_VALIDATION_ERR = 1, 
   PARSER_VALIDATOR_ERR = 2, 
   PARSER_BAD_ISOURCE_ERR = 3, 
   PARSER_CONTEXT_ERR = 4,
   PARSER_PARAMETER_ERR = 5, 
   PARSER_PARSE_ERR = 6, 
   PARSER_SAXHANDLER_SET_ERR = 7, 
   PARSER_VALIDATOR_SET_ERR = 8 } 
ParserExceptionCode;
</pre></div>
<!-- class="refsect2" -->
<div id="CPXML2744" class="refsect2"><a id="CHDFECEF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref527"></a><a id="sthref528"></a>DOMParserIdType</h3>
<p>Defines parser identifiers.</p>
<p class="subhead2"><a id="CPXML2745"></a>Definition</p>
<pre>typedef enum DOMParserIdType {      DOMParCXml         = 1    } DOMParserIdType;
ypedef enum CompareHowCode {
   START_TO_START = 0,
   START_TO_END = 1, 
   END_TO_END = 2, 
   END_TO_START = 3 }
CompareHowCode;
</pre></div>
<!-- class="refsect2" -->
<div id="CPXML2746" class="refsect2"><a id="CHDJFIEJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref529"></a><a id="sthref530"></a>SAXParserIdType</h3>
<p>Defines parser identifiers.</p>
<p class="subhead2"><a id="CPXML2747"></a>Definition</p>
<pre>typedef enum SAXParserIdType {
   SAXParCXml = 1 } 
SAXParserIdType;
</pre></div>
<!-- class="refsect2" -->
<div id="CPXML2748" class="refsect2"><a id="CHDBIEGF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref531"></a><a id="sthref532"></a>SchValidatorIdType</h3>
<p>Defines validator identifiers.These identifiers are used as parameters to the XML tools factory when a particular validator object has to be created.</p>
<p class="subhead2"><a id="CPXML2749"></a>Definition</p>
<pre>typedef enum SchValidatorIdType {
   SchValCXml        = 1
} SchValidatorIdType;
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDDICCH"></a>
<hr/>
<div id="CPXML01610" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref533"></a>DOMParser Interface</h2>
<p><a href="#CHDDJAAJ">Table 5-2</a> summarizes the methods available through the <code>DOMParser</code> interface.</p>
<div id="CPXML2750" class="tblformal">
<p class="titleintable"><a id="sthref534"></a><a id="CHDDJAAJ"></a>Table 5-2 Summary of DOMParser Methods; Parser Package</p>
<table class="cellalignment1809" title="Summary of DOMParser Methods; Parser Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t4">Function</th>
<th class="cellalignment1810" id="r1c2-t4">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CHDDCFHF">getContext()</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t4 r1c2-t4">
<p>Returns parser&#39;s XML context (allocation and encodings).</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CHDFJGBC">getParserId()</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t4 r1c2-t4">
<p>Get parser id.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CHDFCEIJ">parse()</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t4 r1c2-t4">
<p>Parse the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CHDDEGBG">parseDTD()</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t4 r1c2-t4">
<p>Parse DTD document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#CHDGBFEF">parseSchVal()</a></p>
</td>
<td class="cellalignment1804" headers="r6c1-t4 r1c2-t4">
<p>Parse and validate the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CHDDFCIH">setValidator()</a></p>
</td>
<td class="cellalignment1804" headers="r7c1-t4 r1c2-t4">
<p>Set the validator for this parser.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2751" class="refsect2"><a id="CHDDCFHF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref535"></a><a id="sthref536"></a>getContext()</h3>
<p>Each parser object is allocated and executed in a particular Oracle XML context. This member function returns a pointer to this context.</p>
<p class="subhead1"><a id="CPXML2752"></a>Syntax</p>
<pre>virtual Context* getContext() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2753"></a>Returns</p>
<p><code>(Context*)</code> pointer to parser&#39;s context</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2754" class="refsect2"><a id="CHDFJGBC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref537"></a><a id="sthref538"></a>getParserId()</h3>
<p class="subhead1"><a id="CPXML2755"></a>Syntax</p>
<pre>virtual DOMParserIdType getParserId() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2756"></a>Returns</p>
<p><code>(DOMParserIdType)</code> Parser Id</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2757" class="refsect2"><a id="CHDFCEIJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref539"></a><a id="sthref540"></a><a id="sthref541"></a>parse()</h3>
<p>Parses the document and returns the tree root node</p>
<p class="subhead1"><a id="CPXML2758"></a>Syntax</p>
<pre>virtual DocumentRef&lt; Node&gt;* parse(
   InputSource* isrc_ptr,
   boolean DTDvalidate = FALSE,
   DocumentTypeRef&lt; Node&gt;* dtd_ptr = NULL,
   boolean no_mod = FALSE,
   DOMImplementation&lt; Node&gt;* impl_ptr = NULL)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t5">Parameter</th>
<th class="cellalignment1810" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t5" headers="r1c1-t5">
<pre>isrc_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t5 r1c2-t5">input source</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t5" headers="r1c1-t5">
<pre>DTDvalidate
</pre></td>
<td class="cellalignment1804" headers="r3c1-t5 r1c2-t5"><code>TRUE</code> if validated by DTD</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t5" headers="r1c1-t5">
<pre>dtd_ptr
</pre></td>
<td class="cellalignment1804" headers="r4c1-t5 r1c2-t5">DTD reference</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t5" headers="r1c1-t5">
<pre>no_mod
</pre></td>
<td class="cellalignment1804" headers="r5c1-t5 r1c2-t5"><code>TRUE</code> if no modifications allowed</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r6c1-t5" headers="r1c1-t5">
<pre>impl_ptr
</pre></td>
<td class="cellalignment1804" headers="r6c1-t5 r1c2-t5">optional <code>DomImplementation</code> pointer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML2759"></a>Returns</p>
<p><code>(DocumentRef)</code> document tree</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2760" class="refsect2"><a id="CHDDEGBG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref542"></a><a id="sthref543"></a>parseDTD()</h3>
<p>Parse DTD document.</p>
<p class="subhead1"><a id="CPXML2761"></a>Syntax</p>
<pre>virtual DocumentRef&lt; Node&gt;* parseDTD(
   InputSource* isrc_ptr,
   boolean no_mod = FALSE,
   DOMImplementation&lt; Node&gt;* impl_ptr = NULL)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t6">Parameter</th>
<th class="cellalignment1810" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t6" headers="r1c1-t6">
<pre>isrc_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t6 r1c2-t6">input source</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t6" headers="r1c1-t6">
<pre>no_mod
</pre></td>
<td class="cellalignment1804" headers="r3c1-t6 r1c2-t6"><code>TRUE</code> if no modifications allowed</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t6" headers="r1c1-t6">
<pre>impl_ptr
</pre></td>
<td class="cellalignment1804" headers="r4c1-t6 r1c2-t6">optional DomImplementation pointer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML2762"></a>Returns</p>
<p><code>(DocumentRef)</code> DTD document tree</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2763" class="refsect2"><a id="CHDGBFEF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref544"></a><a id="sthref545"></a>parseSchVal()</h3>
<p>Parses and validates the document. Sets the validator if the corresponding parameter is not <code>NULL</code>.</p>
<p class="subhead1"><a id="CPXML2764"></a>Syntax</p>
<pre>virtual DocumentRef&lt; Node&gt;* parseSchVal(
   InputSource* src_par,
   boolean no_mod = FALSE,
   DOMImplementation&lt; Node&gt;* impl_ptr = NULL,
   SchemaValidator&lt; Node&gt;* tor_ptr = NULL)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t7">Parameter</th>
<th class="cellalignment1810" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t7" headers="r1c1-t7">
<pre>isrc_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t7 r1c2-t7">input source</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t7" headers="r1c1-t7">
<pre>no_mod
</pre></td>
<td class="cellalignment1804" headers="r3c1-t7 r1c2-t7"><code>TRUE</code> if no modifications allowed</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t7" headers="r1c1-t7">
<pre>impl_ptr
</pre></td>
<td class="cellalignment1804" headers="r4c1-t7 r1c2-t7">optional DomImplementation pointer</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t7" headers="r1c1-t7">
<pre>tor_ptr
</pre></td>
<td class="cellalignment1804" headers="r5c1-t7 r1c2-t7">schema validator</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML2765"></a>Returns</p>
<p><code>(DocumentRef)</code> document tree</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2766" class="refsect2"><a id="CHDDFCIH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref546"></a><a id="sthref547"></a>setValidator()</h3>
<p>Sets the validator for all validations except when another one is given in parseSchVal</p>
<p class="subhead1"><a id="CPXML2767"></a>Syntax</p>
<pre>virtual void setValidator(
SchemaValidator&lt; Node&gt;* tor_ptr) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t8">Parameter</th>
<th class="cellalignment1810" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t8" headers="r1c1-t8">
<pre>tor_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t8 r1c2-t8">schema validator</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDGEHGH"></a>
<hr/>
<div id="CPXML01620" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref548"></a>GParser Interface</h2>
<p><a href="#CHDGFIAB">Table 5-3</a> summarizes the methods available through the <code>GParser</code> interface.</p>
<div id="CPXML2768" class="tblformal">
<p class="titleintable"><a id="sthref549"></a><a id="CHDGFIAB"></a>Table 5-3 Summary of GParser Methods; Parser Package</p>
<table class="cellalignment1809" title="Summary of GParser Methods; Parser Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t9">Function</th>
<th class="cellalignment1810" id="r1c2-t9">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t9" headers="r1c1-t9">
<p><a href="#CHDCFGAG">SetWarnDuplicateEntity()</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t9 r1c2-t9">
<p>Specifies if multiple entity declarations result in a warning.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t9" headers="r1c1-t9">
<p><a href="#CHDGECIJ">getBaseURI()</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t9 r1c2-t9">
<p>Returns the base URI for the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t9" headers="r1c1-t9">
<p><a href="#CHDEDEHI">getDiscardWhitespaces()</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t9 r1c2-t9">
<p>Checks if whitespaces between elements are discarded.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t9" headers="r1c1-t9">
<p><a href="#CHDIGACF">getExpandCharRefs()</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t9 r1c2-t9">
<p>Checks if character references are expanded.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r6c1-t9" headers="r1c1-t9">
<p><a href="#CHDGGEGI">getSchemaLocation()</a></p>
</td>
<td class="cellalignment1804" headers="r6c1-t9 r1c2-t9">
<p>Get schema location for this document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r7c1-t9" headers="r1c1-t9">
<p><a href="#CHDGEGGC">getStopOnWarning()</a></p>
</td>
<td class="cellalignment1804" headers="r7c1-t9 r1c2-t9">
<p>Get if document processing stops on warnings.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r8c1-t9" headers="r1c1-t9">
<p><a href="#CHDEHGAA">getWarnDuplicateEntity()</a></p>
</td>
<td class="cellalignment1804" headers="r8c1-t9 r1c2-t9">
<p>Get if multiple entity declarations cause a warning.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r9c1-t9" headers="r1c1-t9">
<p><a href="#CHDBGDBB">setBaseURI()</a></p>
</td>
<td class="cellalignment1804" headers="r9c1-t9 r1c2-t9">
<p>Sets the base URI for the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r10c1-t9" headers="r1c1-t9">
<p><a href="#CHDCJFJE">setDiscardWhitespaces()</a></p>
</td>
<td class="cellalignment1804" headers="r10c1-t9 r1c2-t9">
<p>Sets if formatting whitespaces should be discarded.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r11c1-t9" headers="r1c1-t9">
<p><a href="#CHDJIHEC">setExpandCharRefs()</a></p>
</td>
<td class="cellalignment1804" headers="r11c1-t9 r1c2-t9">
<p>Get if character references are expanded.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r12c1-t9" headers="r1c1-t9">
<p><a href="#CHDFAGDD">setSchemaLocation()</a></p>
</td>
<td class="cellalignment1804" headers="r12c1-t9 r1c2-t9">
<p>Set schema location for this document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r13c1-t9" headers="r1c1-t9">
<p><a href="#CHDDEFDC">setStopOnWarning()</a></p>
</td>
<td class="cellalignment1804" headers="r13c1-t9 r1c2-t9">
<p>Sets if document processing stops on warnings.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2769" class="refsect2"><a id="CHDCFGAG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref550"></a><a id="sthref551"></a>SetWarnDuplicateEntity()</h3>
<p>Specifies if entities that are declared more than once will cause warnings to be issued.</p>
<p class="subhead1"><a id="CPXML2770"></a>Syntax</p>
<pre>void setWarnDuplicateEntity(
   boolean par_bool);
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t10">Parameter</th>
<th class="cellalignment1810" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t10" headers="r1c1-t10">
<pre>par_bool
</pre></td>
<td class="cellalignment1804" headers="r2c1-t10 r1c2-t10"><code>TRUE</code> if multiple entity declarations cause a warning</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2771" class="refsect2"><a id="CHDGECIJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref552"></a><a id="sthref553"></a>getBaseURI()</h3>
<p>Returns the base URI for the document. Usually only documents loaded from a URI will automatically have a base URI. Documents loaded from other sources (<code>stdin</code>, buffer, and so on) will not naturally have a base URI, but a base URI may have been set for them using <code>setBaseURI</code>, for the purposes of resolving relative URIs in inclusion.</p>
<p class="subhead1"><a id="CPXML2772"></a>Syntax</p>
<pre>oratext* getBaseURI() const;
</pre>
<p class="subhead1"><a id="CPXML2773"></a>Returns</p>
<p><code>(oratext *)</code> current document&#39;s base URI [or <code>NULL</code>]</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2774" class="refsect2"><a id="CHDEDEHI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref554"></a><a id="sthref555"></a>getDiscardWhitespaces()</h3>
<p>Checks if formatting whitespaces between elements, such as newlines and indentation in input documents are discarded. By default, all input characters are preserved.</p>
<p class="subhead1"><a id="CPXML2775"></a>Syntax</p>
<pre>boolean getDiscardWhitespaces() const;
</pre>
<p class="subhead1"><a id="CPXML2776"></a>Returns</p>
<p><code>(boolean)</code> <code>TRUE</code> if whitespace between elements are discarded</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2777" class="refsect2"><a id="CHDIGACF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref556"></a><a id="sthref557"></a>getExpandCharRefs()</h3>
<p>Checks if character references are expanded in the DOM data. By default, character references are replaced by the character they represent. However, when a document is saved those characters entities do not reappear. To ensure they remain through load and save, they should not be expanded.</p>
<p class="subhead1"><a id="CPXML2778"></a>Syntax</p>
<pre>boolean getExpandCharRefs() const;
</pre>
<p class="subhead1"><a id="CPXML2779"></a>Returns</p>
<p><code>(boolean)</code> <code>TRUE</code> if character references are expanded</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2780" class="refsect2"><a id="CHDGGEGI"></a>
<hr/>
<h3 class="refsect2"><a id="sthref558"></a><a id="sthref559"></a>getSchemaLocation()</h3>
<p>Gets schema location for this document. It is used to figure out the optimal layout when loading documents into a database.</p>
<p class="subhead1"><a id="CPXML2781"></a>Syntax</p>
<pre>oratext* getSchemaLocation() const;
</pre>
<p class="subhead1"><a id="CPXML2782"></a>Returns</p>
<p><code>(oratext*)</code> schema location</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2783" class="refsect2"><a id="CHDGEGGC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref560"></a><a id="sthref561"></a>getStopOnWarning()</h3>
<p>When <code>TRUE</code> is returned, warnings are treated the same as errors and cause parsing, validation, and so on, to stop immediately. By default, warnings are issued but the processing continues.</p>
<p class="subhead1"><a id="CPXML2784"></a>Syntax</p>
<pre>boolean getStopOnWarning() const;
</pre>
<p class="subhead1"><a id="CPXML2785"></a>Returns</p>
<p><code>(boolean)</code> <code>TRUE</code> if document processing stops on warnings</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2786" class="refsect2"><a id="CHDEHGAA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref562"></a><a id="sthref563"></a>getWarnDuplicateEntity()</h3>
<p>Get if entities which are declared more than once will cause warnings to be issued.</p>
<p class="subhead1"><a id="CPXML2787"></a>Syntax</p>
<pre>boolean getWarnDuplicateEntity() const;
</pre>
<p class="subhead1"><a id="CPXML2788"></a>Returns</p>
<p><code>(boolean)</code> <code>TRUE</code> if multiple entity declarations cause a warning</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2789" class="refsect2"><a id="CHDBGDBB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref564"></a><a id="sthref565"></a>setBaseURI()</h3>
<p>Sets the base URI for the document. Usually only documents that were loaded from a URI will automatically have a base URI. Documents loaded from other sources (stdin, buffer, and so on) will not naturally have a base URI, but a base URI may have been set for them using setBaseURI, for the purposes of resolving relative URIs in inclusion.</p>
<p class="subhead1"><a id="CPXML2790"></a>Syntax</p>
<pre>void setBaseURI( oratext* par);
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t11">Parameter</th>
<th class="cellalignment1810" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t11" headers="r1c1-t11">
<pre>par
</pre></td>
<td class="cellalignment1804" headers="r2c1-t11 r1c2-t11">base URI</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2791" class="refsect2"><a id="CHDCJFJE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref566"></a><a id="sthref567"></a>setDiscardWhitespaces()</h3>
<p>Sets if formatting whitespaces between elements (newlines and indentation) in input documents are discarded. By default, ALL input characters are preserved.</p>
<p class="subhead1"><a id="CPXML2792"></a>Syntax</p>
<pre>void setDiscardWhitespaces(
   boolean par_bool);
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t12">Parameter</th>
<th class="cellalignment1810" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t12" headers="r1c1-t12">
<pre>par_bool
</pre></td>
<td class="cellalignment1804" headers="r2c1-t12 r1c2-t12"><code>TRUE</code> if whitespaces should be discarded</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2793" class="refsect2"><a id="CHDJIHEC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref568"></a><a id="sthref569"></a>setExpandCharRefs()</h3>
<p>Sets if character references should be expanded in the DOM data. Ordinarily, character references are replaced by the character they represent. However, when a document is saved those characters entities do not reappear. To ensure they remain through load and save is to not expand them.</p>
<p class="subhead1"><a id="CPXML2794"></a>Syntax</p>
<pre>void setExpandCharRefs( 
   boolean par_bool);
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t13">Parameter</th>
<th class="cellalignment1810" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t13" headers="r1c1-t13">
<pre>par_bool
</pre></td>
<td class="cellalignment1804" headers="r2c1-t13 r1c2-t13"><code>TRUE</code> if character references should be discarded</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2795" class="refsect2"><a id="CHDFAGDD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref570"></a><a id="sthref571"></a>setSchemaLocation()</h3>
<p>Sets schema location for this document. It is used to figure out the optimal layout when loading documents into a database.</p>
<p class="subhead1"><a id="CPXML2796"></a>Syntax</p>
<pre> void setSchemaLocation(
   oratext* par);
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t14">Parameter</th>
<th class="cellalignment1810" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t14" headers="r1c1-t14">
<pre>par
</pre></td>
<td class="cellalignment1804" headers="r2c1-t14 r1c2-t14">schema location</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2797" class="refsect2"><a id="CHDDEFDC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref572"></a><a id="sthref573"></a>setStopOnWarning()</h3>
<p>When <code>TRUE</code> is set, warnings are treated the same as errors and cause parsing, validation, and so on, to stop immediately. By default, warnings are issued but the processing continues.</p>
<p class="subhead1"><a id="CPXML2798"></a>Syntax</p>
<pre>void setStopOnWarning( 
   boolean par_bool);
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t15">Parameter</th>
<th class="cellalignment1810" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t15" headers="r1c1-t15">
<pre>par_bool
</pre></td>
<td class="cellalignment1804" headers="r2c1-t15 r1c2-t15"><code>TRUE</code> if document processing should stop on warnings</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDHFBBD"></a>
<hr/>
<div id="CPXML01630" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref574"></a>ParserException Interface</h2>
<p><a href="#CHDFBHCC">Table 5-4</a> summarizes the methods available through the P<code>arserException</code> interface.</p>
<div id="CPXML2799" class="tblformal">
<p class="titleintable"><a id="sthref575"></a><a id="CHDFBHCC"></a>Table 5-4 Summary of ParserException Methods; Parser Package</p>
<table class="cellalignment1809" title="Summary of ParserException Methods; Parser Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t16">Function</th>
<th class="cellalignment1810" id="r1c2-t16">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t16" headers="r1c1-t16">
<p><a href="#CHDCIAEB">getCode()</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t16 r1c2-t16">
<p>Get Oracle XML error code embedded in the exception.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t16" headers="r1c1-t16">
<p><a href="#CHDEJEHB">getMesLang()</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t16 r1c2-t16">
<p>Get current language (encoding) of error messages.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t16" headers="r1c1-t16">
<p><a href="#CHDCEJCD">getMessage()</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t16 r1c2-t16">
<p>Get Oracle XML error message.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t16" headers="r1c1-t16">
<p><a href="#CHDEICBC">getParserCode()</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t16 r1c2-t16">
<p>Get parser exception code embedded in the exception.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2800" class="refsect2"><a id="CHDCIAEB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref576"></a><a id="sthref577"></a>getCode()</h3>
<p>Virtual member function inherited from <code>XmlException</code>.</p>
<p class="subhead1"><a id="CPXML2801"></a>Syntax</p>
<pre>virtual unsigned getCode() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2802"></a>Returns</p>
<p><code>(unsigned)</code> numeric error code (0 on success)</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2803" class="refsect2"><a id="CHDEJEHB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref578"></a><a id="sthref579"></a>getMesLang()</h3>
<p>Virtual member function inherited from <code>XmlException</code>.</p>
<p class="subhead1"><a id="CPXML2804"></a>Syntax</p>
<pre>virtual oratext* getMesLang() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2805"></a>Returns</p>
<p><code>(oratext*)</code> Current language (encoding) of error messages</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2806" class="refsect2"><a id="CHDCEJCD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref580"></a><a id="sthref581"></a>getMessage()</h3>
<p>Virtual member function inherited from <code>XmlException</code>.</p>
<p class="subhead1"><a id="CPXML2807"></a>Syntax</p>
<pre>virtual oratext* getMessage() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2808"></a>Returns</p>
<p><code>(oratext *)</code> Error message</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2809" class="refsect2"><a id="CHDEICBC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref582"></a><a id="sthref583"></a>getParserCode()</h3>
<p>This is a virtual member function that defines a prototype for implementation defined member functions returning parser and validator exception codes, defined in ParserExceptionCode, of the exceptional situations during execution.</p>
<p class="subhead1"><a id="CPXML2810"></a>Syntax</p>
<pre>virtual ParserExceptionCode getParserCode() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2811"></a>Returns</p>
<p><code>(ParserExceptionCode)</code> exception code</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDGEEDE"></a>
<hr/>
<div id="CPXML01640" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref584"></a>SAXHandler Interface</h2>
<p><a href="#CHDIICAD">Table 5-5</a> summarizes the methods available through the <code>SAXHandler</code> interface.</p>
<div id="CPXML2812" class="tblformal">
<p class="titleintable"><a id="sthref585"></a><a id="CHDIICAD"></a>Table 5-5 Summary of SAXHandler Methods; Parser Package</p>
<table class="cellalignment1809" title="Summary of SAXHandler Methods; Parser Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t17">Function</th>
<th class="cellalignment1810" id="r1c2-t17">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t17" headers="r1c1-t17">
<p><a href="#CHDHJCED">CDATA()</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t17 r1c2-t17">
<p>Receive notification of CDATA.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t17" headers="r1c1-t17">
<p><a href="#CHDEHGBE">XMLDecl()</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t17 r1c2-t17">
<p>Receive notification of an XML declaration.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t17" headers="r1c1-t17">
<p><a href="#CHDICIHE">attributeDecl()</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t17 r1c2-t17">
<p>Receive notification of attribute&#39;s declaration.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t17" headers="r1c1-t17">
<p><a href="#CHDBEJCA">characters()</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t17 r1c2-t17">
<p>Receive notification of character data.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r6c1-t17" headers="r1c1-t17">
<p><a href="#CHDFCDBF">comment()</a></p>
</td>
<td class="cellalignment1804" headers="r6c1-t17 r1c2-t17">
<p>Receive notification of a comment.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r7c1-t17" headers="r1c1-t17">
<p><a href="#CHDEGEAB">elementDecl()</a></p>
</td>
<td class="cellalignment1804" headers="r7c1-t17 r1c2-t17">
<p>Receive notification of element&#39;s declaration.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r8c1-t17" headers="r1c1-t17">
<p><a href="#CHDJCJJF">endDocument()</a></p>
</td>
<td class="cellalignment1804" headers="r8c1-t17 r1c2-t17">
<p>Receive notification of the end of the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r9c1-t17" headers="r1c1-t17">
<p><a href="#CHDCDFEF">endElement()</a></p>
</td>
<td class="cellalignment1804" headers="r9c1-t17 r1c2-t17">
<p>Receive notification of element&#39;s end.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r10c1-t17" headers="r1c1-t17">
<p><a href="#CHDDJHIA">notationDecl()</a></p>
</td>
<td class="cellalignment1804" headers="r10c1-t17 r1c2-t17">
<p>Receive notification of a notation declaration.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r11c1-t17" headers="r1c1-t17">
<p><a href="#CHDJGEJC">parsedEntityDecl()</a></p>
</td>
<td class="cellalignment1804" headers="r11c1-t17 r1c2-t17">
<p>Receive notification of a parsed entity declaration.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r12c1-t17" headers="r1c1-t17">
<p><a href="#CHDJIBHE">processingInstruction()</a></p>
</td>
<td class="cellalignment1804" headers="r12c1-t17 r1c2-t17">
<p>Receive notification of a processing instruction.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r13c1-t17" headers="r1c1-t17">
<p><a href="#CHDIIICJ">startDocument()</a></p>
</td>
<td class="cellalignment1804" headers="r13c1-t17 r1c2-t17">
<p>Receive notification of the start of the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r14c1-t17" headers="r1c1-t17">
<p><a href="#CHDJJHCA">startElement()</a></p>
</td>
<td class="cellalignment1804" headers="r14c1-t17 r1c2-t17">
<p>Receive notification of element&#39;s start.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r15c1-t17" headers="r1c1-t17">
<p><a href="#CHDEFDEH">startElementNS()</a></p>
</td>
<td class="cellalignment1804" headers="r15c1-t17 r1c2-t17">
<p>Receive namespace aware notification of element&#39;s start.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r16c1-t17" headers="r1c1-t17">
<p><a href="#CHDFGCAG">unparsedEntityDecl()</a></p>
</td>
<td class="cellalignment1804" headers="r16c1-t17 r1c2-t17">
<p>Receive notification of an unparsed entity declaration.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r17c1-t17" headers="r1c1-t17">
<p><a href="#CHDDFGCF">whitespace()</a></p>
</td>
<td class="cellalignment1804" headers="r17c1-t17 r1c2-t17">
<p>Receive notification of whitespace characters.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2813" class="refsect2"><a id="CHDHJCED"></a>
<hr/>
<h3 class="refsect2"><a id="sthref586"></a><a id="sthref587"></a>CDATA()</h3>
<p>This event handles CDATA, as distinct from Text. The data will be in the data encoding, and the returned length is in characters, not bytes. This is an Oracle extension.</p>
<p class="subhead1"><a id="CPXML2814"></a>Syntax</p>
<pre>virtual void CDATA( 
   oratext* data,
   ub4 size) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t18">Parameter</th>
<th class="cellalignment1810" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t18" headers="r1c1-t18">
<pre>data
</pre></td>
<td class="cellalignment1804" headers="r2c1-t18 r1c2-t18">pointer to CDATA</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t18" headers="r1c1-t18">
<pre>size
</pre></td>
<td class="cellalignment1804" headers="r3c1-t18 r1c2-t18">size of CDATA</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2815" class="refsect2"><a id="CHDEHGBE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref588"></a><a id="sthref589"></a>XMLDecl()</h3>
<p>This event marks an XML declaration (<code>XMLDecl</code>). The <code>startDocument</code> event is always first; this event will be the second event. The encoding flag says whether an encoding was specified. For the standalone flag, -1 will be returned if it was not specified, otherwise <code>0</code> for <code>FALSE</code>, 1 for <code>TRUE</code>. This member function is an Oracle extension.</p>
<p class="subhead1"><a id="CPXML2816"></a>Syntax</p>
<pre>virtual void XMLDecl( 
   oratext* version,
   boolean is_encoding,
   sword standalone) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t19">Parameter</th>
<th class="cellalignment1810" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t19" headers="r1c1-t19">
<pre>version
</pre></td>
<td class="cellalignment1804" headers="r2c1-t19 r1c2-t19">version string from XMLDecl</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t19" headers="r1c1-t19">
<pre>is_encoding
</pre></td>
<td class="cellalignment1804" headers="r3c1-t19 r1c2-t19">whether encoding was specified</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t19" headers="r1c1-t19">
<pre>standalone
</pre></td>
<td class="cellalignment1804" headers="r4c1-t19 r1c2-t19">value of standalone value flag</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2817" class="refsect2"><a id="CHDICIHE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref590"></a><a id="sthref591"></a>attributeDecl()</h3>
<p>This event marks an attribute declaration in the DTD. It is an Oracle extension; not in SAX standard</p>
<p class="subhead1"><a id="CPXML2818"></a>Syntax</p>
<pre>virtual void attributeDecl(
   oratext* attr_name,
   oratext *name, 
   oratext *content) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t20">Parameter</th>
<th class="cellalignment1810" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t20" headers="r1c1-t20">
<pre>attr_name
</pre></td>
<td class="cellalignment1804" headers="r2c1-t20 r1c2-t20">&nbsp;</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t20" headers="r1c1-t20">
<pre>name
</pre></td>
<td class="cellalignment1804" headers="r3c1-t20 r1c2-t20">&nbsp;</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t20" headers="r1c1-t20">
<pre>content
</pre></td>
<td class="cellalignment1804" headers="r4c1-t20 r1c2-t20">body of attribute declaration</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2819" class="refsect2"><a id="CHDBEJCA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref592"></a><a id="sthref593"></a>characters()</h3>
<p>This event marks character data.</p>
<p class="subhead1"><a id="CPXML2820"></a>Syntax</p>
<pre>virtual void characters(
   oratext* ch,
   ub4 size) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t21">Parameter</th>
<th class="cellalignment1810" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t21" headers="r1c1-t21">
<pre>ch
</pre></td>
<td class="cellalignment1804" headers="r2c1-t21 r1c2-t21">pointer to data</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t21" headers="r1c1-t21">
<pre>size
</pre></td>
<td class="cellalignment1804" headers="r3c1-t21 r1c2-t21">length of data</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2821" class="refsect2"><a id="CHDFCDBF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref594"></a><a id="sthref595"></a>comment()</h3>
<p>This event marks a comment in the XML document. The comment&#39;s data will be in the data encoding. It is an Oracle extension, not in SAX standard.</p>
<p class="subhead1"><a id="CPXML2822"></a>Syntax</p>
<pre>virtual void comment(
   oratext* data) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t22">Parameter</th>
<th class="cellalignment1810" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t22" headers="r1c1-t22">
<pre>data
</pre></td>
<td class="cellalignment1804" headers="r2c1-t22 r1c2-t22">comment&#39;s data</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2823" class="refsect2"><a id="CHDEGEAB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref596"></a><a id="sthref597"></a>elementDecl()</h3>
<p>This event marks an element declaration in the DTD. It is an Oracle extension; not in SAX standard.</p>
<p class="subhead1"><a id="CPXML2824"></a>Syntax</p>
<pre>virtual void elementDecl( 
   oratext *name, 
   oratext *content) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t23">Parameter</th>
<th class="cellalignment1810" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t23" headers="r1c1-t23">
<pre>name
</pre></td>
<td class="cellalignment1804" headers="r2c1-t23 r1c2-t23">element&#39;s name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t23" headers="r1c1-t23">
<pre>content
</pre></td>
<td class="cellalignment1804" headers="r3c1-t23 r1c2-t23">element&#39;s content</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2825" class="refsect2"><a id="CHDJCJJF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref598"></a><a id="sthref599"></a>endDocument()</h3>
<p>Receive notification of the end of the document.</p>
<p class="subhead1"><a id="CPXML2826"></a>Syntax</p>
<pre>virtual void endDocument() = 0;
</pre></div>
<!-- class="refsect2" -->
<div id="CPXML2827" class="refsect2"><a id="CHDCDFEF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref600"></a><a id="sthref601"></a>endElement()</h3>
<p>This event marks the end of an element. The name is the <code>tagName</code> of the element (which may be a qualified name for namespace-aware elements) and is in the data encoding.</p>
<p class="subhead1"><a id="CPXML2828"></a>Syntax</p>
<pre>virtual void endElement( oratext* name) = 0;
</pre></div>
<!-- class="refsect2" -->
<div id="CPXML2829" class="refsect2"><a id="CHDDJHIA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref602"></a><a id="sthref603"></a>notationDecl()</h3>
<p>The even marks the declaration of a notation in the DTD. The notation&#39;s name, public ID, and system ID will all be in the data encoding. Both IDs are optional and may be <code>NULL</code>.</p>
<p class="subhead1"><a id="CPXML2830"></a>Syntax</p>
<pre>virtual void notationDecl(
   oratext* name,
   oratext* public_id,
   oratext* system_id) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t24">Parameter</th>
<th class="cellalignment1810" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t24" headers="r1c1-t24">
<pre>name
</pre></td>
<td class="cellalignment1804" headers="r2c1-t24 r1c2-t24">notations&#39;s name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t24" headers="r1c1-t24">
<pre>public_id
</pre></td>
<td class="cellalignment1804" headers="r3c1-t24 r1c2-t24">notation&#39;s public Id</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t24" headers="r1c1-t24">
<pre>sysem_id
</pre></td>
<td class="cellalignment1804" headers="r4c1-t24 r1c2-t24">notation&#39;s system Id</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2831" class="refsect2"><a id="CHDJGEJC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref604"></a><a id="sthref605"></a>parsedEntityDecl()</h3>
<p>Marks a parsed entity declaration in the DTD. The parsed entity&#39;s name, public ID, system ID, and notation name will all be in the data encoding. This is an Oracle extension.</p>
<p class="subhead1"><a id="CPXML2832"></a>Syntax</p>
<pre>virtual void parsedEntityDecl(
   oratext* name,
   oratext* value,
   oratext* public_id,
   oratext* system_id,
   boolean general) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t25">Parameter</th>
<th class="cellalignment1810" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t25" headers="r1c1-t25">
<pre>name
</pre></td>
<td class="cellalignment1804" headers="r2c1-t25 r1c2-t25">entity&#39;s name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t25" headers="r1c1-t25">
<pre>value
</pre></td>
<td class="cellalignment1804" headers="r3c1-t25 r1c2-t25">entity&#39;s value if internal</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t25" headers="r1c1-t25">
<pre>public_id
</pre></td>
<td class="cellalignment1804" headers="r4c1-t25 r1c2-t25">entity&#39;s public Id</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t25" headers="r1c1-t25">
<pre>sysem_id
</pre></td>
<td class="cellalignment1804" headers="r5c1-t25 r1c2-t25">entity&#39;s system Id</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r6c1-t25" headers="r1c1-t25">
<pre>general
</pre></td>
<td class="cellalignment1804" headers="r6c1-t25 r1c2-t25">whether a general entity (<code>FALSE</code> if parameter entity)</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2833" class="refsect2"><a id="CHDJIBHE"></a>
<hr/>
<h3 class="refsect2"><a id="sthref606"></a><a id="sthref607"></a>processingInstruction()</h3>
<p>This event marks a processing instruction. The PI&#39;s target and data will be in the data encoding. There is always a target, but the data may be <code>NULL</code>.</p>
<p class="subhead1"><a id="CPXML2834"></a>Syntax</p>
<pre>virtual void processingInstruction( 
   oratext* target,
   oratext* data) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t26">Parameter</th>
<th class="cellalignment1810" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t26" headers="r1c1-t26">
<pre>target
</pre></td>
<td class="cellalignment1804" headers="r2c1-t26 r1c2-t26">PI&#39;s target</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t26" headers="r1c1-t26">
<pre>data
</pre></td>
<td class="cellalignment1804" headers="r3c1-t26 r1c2-t26">PI&#39;s data</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2835" class="refsect2"><a id="CHDIIICJ"></a>
<hr/>
<h3 class="refsect2"><a id="sthref608"></a><a id="sthref609"></a>startDocument()</h3>
<p>Receive notification of the start of document.</p>
<p class="subhead1"><a id="CPXML2836"></a>Syntax</p>
<pre>virtual void startDocument() = 0;
</pre></div>
<!-- class="refsect2" -->
<div id="CPXML2837" class="refsect2"><a id="CHDJJHCA"></a>
<hr/>
<h3 class="refsect2"><a id="sthref610"></a><a id="sthref611"></a>startElement()</h3>
<p>This event marks the start of an element.</p>
<p class="subhead1"><a id="CPXML2838"></a>Syntax</p>
<pre>virtual void startElement( 
   oratext* name,
   NodeListRef&lt; Node&gt;* attrs_ptr) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t27">Parameter</th>
<th class="cellalignment1810" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t27" headers="r1c1-t27">
<pre>name
</pre></td>
<td class="cellalignment1804" headers="r2c1-t27 r1c2-t27">element&#39;s name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t27" headers="r1c1-t27">
<pre>attrs_ptr
</pre></td>
<td class="cellalignment1804" headers="r3c1-t27 r1c2-t27">list of element&#39;s attributes</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2839" class="refsect2"><a id="CHDEFDEH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref612"></a><a id="sthref613"></a>startElementNS()</h3>
<p>This event marks the start of an element. Note this is the new SAX 2 namespace-aware version. The element&#39;s qualified name, local name, and namespace URI will be in the data encoding, as are all the attribute parts.</p>
<p class="subhead1"><a id="CPXML2840"></a>Syntax</p>
<pre>virtual void startElementNS(
   oratext* qname,
   oratext* local,
   oratext* ns_URI,
   NodeListRef&lt; Node&gt;* attrs_ptr) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t28">Parameter</th>
<th class="cellalignment1810" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t28" headers="r1c1-t28">
<pre>qname
</pre></td>
<td class="cellalignment1804" headers="r2c1-t28 r1c2-t28">element&#39;s qualified name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t28" headers="r1c1-t28">
<pre>local
</pre></td>
<td class="cellalignment1804" headers="r3c1-t28 r1c2-t28">element&#39;s namespace local name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t28" headers="r1c1-t28">
<pre>ns_URI
</pre></td>
<td class="cellalignment1804" headers="r4c1-t28 r1c2-t28">element&#39;s namespace URI</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t28" headers="r1c1-t28">
<pre>attrs_ref
</pre></td>
<td class="cellalignment1804" headers="r5c1-t28 r1c2-t28"><code>NodeList</code> of element&#39;s attributes</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2841" class="refsect2"><a id="CHDFGCAG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref614"></a><a id="sthref615"></a>unparsedEntityDecl()</h3>
<p>Marks an unparsed entity declaration in the DTD. The unparsed entity&#39;s name, public ID, system ID, and notation name will all be in the data encoding.</p>
<p class="subhead1"><a id="CPXML2842"></a>Syntax</p>
<pre>virtual void unparsedEntityDecl(
   oratext* name,
   oratext* public_id,
   oratext* system_id,
   oratext* notation_name) = 0;
};
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t29">Parameter</th>
<th class="cellalignment1810" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t29" headers="r1c1-t29">
<pre>name
</pre></td>
<td class="cellalignment1804" headers="r2c1-t29 r1c2-t29">entity&#39;s name</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t29" headers="r1c1-t29">
<pre>public_id
</pre></td>
<td class="cellalignment1804" headers="r3c1-t29 r1c2-t29">entity&#39;s public Id</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t29" headers="r1c1-t29">
<pre>sysem_id
</pre></td>
<td class="cellalignment1804" headers="r4c1-t29 r1c2-t29">entity&#39;s system Id</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t29" headers="r1c1-t29">
<pre>notation_name
</pre></td>
<td class="cellalignment1804" headers="r5c1-t29 r1c2-t29">entity&#39;s notation name</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2843" class="refsect2"><a id="CHDDFGCF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref616"></a><a id="sthref617"></a>whitespace()</h3>
<p>This event marks ignorable whitespace data such as newlines, and indentation between lines.</p>
<p class="subhead1"><a id="CPXML2844"></a>Syntax</p>
<pre>virtual void whitespace(
   oratext* data,
   ub4 size) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t30">Parameter</th>
<th class="cellalignment1810" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t30" headers="r1c1-t30">
<pre>data
</pre></td>
<td class="cellalignment1804" headers="r2c1-t30 r1c2-t30">pointer to data</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t30" headers="r1c1-t30">
<pre>size
</pre></td>
<td class="cellalignment1804" headers="r3c1-t30 r1c2-t30">length of data</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDECHAH"></a>
<hr/>
<div id="CPXML01650" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref618"></a>SAXParser Interface</h2>
<p><a href="#CHDGEDIF">Table 5-6</a> summarizes the methods available through the <code>SAXParser</code> interface.</p>
<div id="CPXML2845" class="tblformal">
<p class="titleintable"><a id="sthref619"></a><a id="CHDGEDIF"></a>Table 5-6 Summary of SAXParser Methods; Parser Package</p>
<table class="cellalignment1809" title="Summary of SAXParser Methods; Parser Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t31">Function</th>
<th class="cellalignment1810" id="r1c2-t31">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t31" headers="r1c1-t31">
<p><a href="#CHDHBGEH">getContext()</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t31 r1c2-t31">
<p>Returns parser&#39;s XML context (allocation and encodings).</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t31" headers="r1c1-t31">
<p><a href="#CHDHCIHD">getParserId()</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t31 r1c2-t31">
<p>Returns parser Id.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t31" headers="r1c1-t31">
<p><a href="#CHDGCGEF">parse()</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t31 r1c2-t31">
<p>Parse the document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t31" headers="r1c1-t31">
<p><a href="#CHDGIDBH">parseDTD()</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t31 r1c2-t31">
<p>Parse the DTD.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r6c1-t31" headers="r1c1-t31">
<p><a href="#CHDJJFHG">setSAXHandler()</a></p>
</td>
<td class="cellalignment1804" headers="r6c1-t31 r1c2-t31">
<p>Set SAX handler.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2846" class="refsect2"><a id="CHDHBGEH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref620"></a><a id="sthref621"></a>getContext()</h3>
<p>Each parser object is allocated and executed in a particular Oracle XML context. This member function returns a pointer to this context.</p>
<p class="subhead1"><a id="CPXML2847"></a>Syntax</p>
<pre>virtual Context* getContext() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2848"></a>Returns</p>
<p><code>(Context*)</code> pointer to parser&#39;s context</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2849" class="refsect2"><a id="CHDHCIHD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref622"></a><a id="sthref623"></a>getParserId()</h3>
<p>Returns the parser id.</p>
<p class="subhead1"><a id="CPXML2850"></a>Syntax</p>
<pre>virtual SAXParserIdType getParserId() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2851"></a>Returns</p>
<p><code>(SAXParserIdType)</code> Parser Id</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2852" class="refsect2"><a id="CHDGCGEF"></a>
<hr/>
<h3 class="refsect2"><a id="sthref624"></a><a id="sthref625"></a>parse()</h3>
<p>Parses a document.</p>
<p class="subhead1"><a id="CPXML2853"></a>Syntax</p>
<pre>virtual void parse( 
   InputSource* src_ptr,
   boolean DTDvalidate = FALSE,
   SAXHandlerRoot* hdlr_ptr = NULL)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t32">Parameter</th>
<th class="cellalignment1810" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t32" headers="r1c1-t32">
<pre>src_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t32 r1c2-t32">input source</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t32" headers="r1c1-t32">
<pre>DTDValidate
</pre></td>
<td class="cellalignment1804" headers="r3c1-t32 r1c2-t32"><code>TRUE</code> if validate with DTD</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t32" headers="r1c1-t32">
<pre>hdlr_ptr
</pre></td>
<td class="cellalignment1804" headers="r4c1-t32 r1c2-t32">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2854" class="refsect2"><a id="CHDGIDBH"></a>
<hr/>
<h3 class="refsect2"><a id="sthref626"></a><a id="sthref627"></a>parseDTD()</h3>
<p>Parses a DTD.</p>
<p class="subhead1"><a id="CPXML2855"></a>Syntax</p>
<pre>virtual void parseDTD( 
   InputSource* src_ptr,
   SAXHandlerRoot* hdlr_ptr = NULL)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t33">Parameter</th>
<th class="cellalignment1810" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t33" headers="r1c1-t33">
<pre>src_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t33 r1c2-t33">input source</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t33" headers="r1c1-t33">
<pre>hdlr_ptr
</pre></td>
<td class="cellalignment1804" headers="r3c1-t33 r1c2-t33">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2856" class="refsect2"><a id="CHDJJFHG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref628"></a><a id="sthref629"></a>setSAXHandler()</h3>
<p>Sets SAX handler for all parser invocations except when another SAX handler is specified in the parser call.</p>
<p class="subhead1"><a id="CPXML2857"></a>Syntax</p>
<pre>virtual void setSAXHandler(
   SAXHandlerRoot* hdlr_ptr) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t34">Parameter</th>
<th class="cellalignment1810" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t34" headers="r1c1-t34">
<pre>hdlr_ptr
</pre></td>
<td class="cellalignment1804" headers="r2c1-t34 r1c2-t34">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="Parserinterfaces"></a>
<hr/>
<div id="CPXML01660" class="refsect1">
<h2 class="refsect1"><a id="sthref630"></a>SchemaValidator Interface</h2>
<p><a href="#Summaryparser">Table 5-7</a> summarizes the methods available through the <code>SchemaValidator</code> interface.</p>
<div id="CPXML2858" class="tblformal">
<p class="titleintable"><a id="sthref631"></a><a id="Summaryparser"></a>Table 5-7 Summary of SchemaValidator Methods; Parser Package</p>
<table class="cellalignment1809" title="Summary of SchemaValidator Methods; Parser Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t35">Function</th>
<th class="cellalignment1810" id="r1c2-t35">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t35" headers="r1c1-t35">
<p><a href="#CHDEHBHB">getSchemaList()</a></p>
</td>
<td class="cellalignment1804" headers="r2c1-t35 r1c2-t35">
<p>Return the Schema list.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r3c1-t35" headers="r1c1-t35">
<p><a href="#CHDHJCGC">getValidatorId()</a></p>
</td>
<td class="cellalignment1804" headers="r3c1-t35 r1c2-t35">
<p>Get validator identifier.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r4c1-t35" headers="r1c1-t35">
<p><a href="#CHDGGJGG">loadSchema()</a></p>
</td>
<td class="cellalignment1804" headers="r4c1-t35 r1c2-t35">
<p>Load a schema document.</p>
</td>
</tr>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r5c1-t35" headers="r1c1-t35">
<p><a href="#CHDGHGBD">unloadSchema()</a></p>
</td>
<td class="cellalignment1804" headers="r5c1-t35 r1c2-t35">
<p>Unload a schema document.</p>
</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="tblformal" -->
<div id="CPXML2859" class="refsect2"><a id="CHDEHBHB"></a>
<hr/>
<h3 class="refsect2"><a id="sthref632"></a><a id="sthref633"></a>getSchemaList()</h3>
<p>Return only the size of loaded schema list documents if &#34;list&#34; is <code>NULL</code>. If &#34;list&#34; is not <code>NULL</code>, a list of URL pointers is returned in the user-provided pointer buffer. Note that its user&#39;s responsibility to provide a buffer with big enough size.</p>
<p class="subhead1"><a id="CPXML2860"></a>Syntax</p>
<pre>virtual ub4 getSchemaList(
   oratext **list) const = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t36">Parameter</th>
<th class="cellalignment1810" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t36" headers="r1c1-t36">
<pre>list
</pre></td>
<td class="cellalignment1804" headers="r2c1-t36 r1c2-t36">address of a pointer buffer</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML2861"></a>Returns</p>
<p><code>(ub4)</code> list size and list of loaded schemas (I/O parameter)</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2862" class="refsect2"><a id="CHDHJCGC"></a>
<hr/>
<h3 class="refsect2"><a id="sthref634"></a><a id="sthref635"></a>getValidatorId()</h3>
<p>Get the validator identifier corresponding to the implementation of this validator object.</p>
<p class="subhead1"><a id="CPXML2863"></a>Syntax</p>
<pre>virtual SchValidatorIdType getValidatorId() const = 0;
</pre>
<p class="subhead1"><a id="CPXML2864"></a>Returns</p>
<p><code>(SchValidatorIdType)</code> validator identifier</p>
</div>
<!-- class="refsect2" -->
<div id="CPXML2865" class="refsect2"><a id="CHDGGJGG"></a>
<hr/>
<h3 class="refsect2"><a id="sthref636"></a><a id="sthref637"></a>loadSchema()</h3>
<p>Load up a schema document to be used in the next validation session. Throws an exception in the case of an error.</p>
<p class="subhead1"><a id="CPXML2866"></a>Syntax</p>
<pre>virtual void loadSchema( 
   oratext* schema_URI)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t37">Parameter</th>
<th class="cellalignment1810" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t37" headers="r1c1-t37">
<pre>schema_URI
</pre></td>
<td class="cellalignment1804" headers="r2c1-t37 r1c2-t37">URL of a schema document; compiler encoding</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" -->
<div id="CPXML2867" class="refsect2"><a id="CHDGHGBD"></a>
<hr/>
<h3 class="refsect2"><a id="sthref638"></a><a id="sthref639"></a>unloadSchema()</h3>
<p>Unload a schema document and all its descendants (included or imported in a nested manner from the validator. All previously loaded schema documents will remain loaded until they are unloaded. To unload all loaded schema documents, set <code>schema_URI</code> to be <code>NULL</code>. Throws an exception in the case of an error.</p>
<p class="subhead1"><a id="CPXML2868"></a>Syntax</p>
<pre>virtual void unloadSchema(
   oratext* schema_URI)
throw (ParserException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment1811" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment1798">
<th class="cellalignment1810" id="r1c1-t38">Parameter</th>
<th class="cellalignment1810" id="r1c2-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1798">
<td class="cellalignment1804" id="r2c1-t38" headers="r1c1-t38">
<pre>schema_URI
</pre></td>
<td class="cellalignment1804" headers="r2c1-t38 r1c2-t38">URL of a schema document; compiler encoding</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1797">
<tr>
<td class="cellalignment1804">
<table class="cellalignment1808">
<tr>
<td class="cellalignment1801"><a href="oraclexml.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1801"><a href="soap.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1806">
<table class="cellalignment1807">
<tr>
<td class="cellalignment1801"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1801"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1801"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1801"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1801"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1801"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>