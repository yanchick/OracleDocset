<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<a class="dashingAutolink" name="autolink-86452"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Examples%20of%20Analytic%20Workspace%20Manager%20Plug-ins"></a><title>Examples of Analytic Workspace Manager Plug-ins</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023"/>
<meta name="dcterms.created" content="2014-06-27T11:0:1Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="OLAP Customizing Analytic Workspace Manager"/>
<meta name="dcterms.identifier" content="E17709-05"/>
<meta name="dcterms.isVersionOf" content="OLAWP"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="pluginintro.htm" title="Previous" type="text/html"/>
<link rel="Next" href="index.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E17709-05.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/10</span> <!-- End Header -->
<div class="chapter"><a id="BABCHJJE"></a>
<h1 class="chapter"><span class="secnum">3</span> Examples of Analytic Workspace Manager Plug-ins</h1>
<p>This chapter contains examples of the Java classes that implement the <code>AWMPlugin</code>, <code>ViewerPlugin</code>, and <code>EditorPlugin</code> interfaces. It also contains the example XML documents that specify the plug-ins.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDHBJIC">Availability of Example Classes and XML Documents</a></p>
</li>
<li>
<p><a href="#CHDHIBIF">Examples of AWMPlugin</a></p>
</li>
<li>
<p><a href="#CHDJHFHC">Examples of ViewerPlugin and EditorPlugin</a></p>
</li>
<li>
<p><a href="#CHDEFEBE">Example of Plug-in Descriptions</a></p>
</li>
</ul>
<a id="CHDHBJIC"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Availability of Example Classes and XML Documents</h2>
<p><a id="sthref278"></a><a id="sthref279"></a><a id="sthref280"></a>The examples of Java classes and XML documents in this chapter and in <a href="olawxml.htm#CIHEBHIH">Chapter 1</a> contain the complete code for the class or document. The complete code is also available in a compressed file that you can download from the Oracle Technology Network (OTN) website. The download includes the compiled <code>class</code> files for the plug-ins, as well. The OTN website is at</p>
<p><code><a href="http://www.oracle.com/technetwork/database/options/olap/index.html">http://www.oracle.com/technetwork/database/options/olap/index.html</a></code></p>
<p>To get the examples, in the Download section of the web page, select <span class="bold">Sample Code and Schemas</span>. On the Oracle OLAP Downloads page, in the AWM Plug-ins for Oracle OLAP 11g section, in the AWM Java Plug-in and XML for 11.2.0.1 line, click <span class="bold">examples</span>.</p>
<p><a id="sthref281"></a>Download the compressed file and extract the contents. The compressed file contains the following files.</p>
<div class="inftblinformal">
<table class="cellalignment5915" summary="Contents of the customizingAWM_examples.zip file." dir="ltr">
<thead>
<tr class="cellalignment5909">
<th class="cellalignment5916" id="r1c1-t2">Filename</th>
<th class="cellalignment5916" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5909">
<td class="cellalignment5917" id="r2c1-t2" headers="r1c1-t2"><code>readme.txt</code></td>
<td class="cellalignment5917" headers="r2c1-t2 r1c2-t2">Briefly describes the contents of the <code>zip</code> file.</td>
</tr>
<tr class="cellalignment5909">
<td class="cellalignment5917" id="r3c1-t2" headers="r1c1-t2"><a id="sthref282"></a><code>awmcalcs.xml</code></td>
<td class="cellalignment5917" headers="r3c1-t2 r1c2-t2">Contains the XML for <a href="olawxml.htm#CIHDGHAD">Example 1-9, &#34;Sample AWMCalcs Document&#34;</a>.</td>
</tr>
<tr class="cellalignment5909">
<td class="cellalignment5917" id="r4c1-t2" headers="r1c1-t2"><a id="sthref283"></a><code>awmtree.xml</code></td>
<td class="cellalignment5917" headers="r4c1-t2 r1c2-t2">Contains the XML for <a href="olawxml.htm#BEIEHBDJ">Example 1-3, &#34;Passing the Name of a View to a SELECT Statement&#34;</a>.</td>
</tr>
<tr class="cellalignment5909">
<td class="cellalignment5917" id="r5c1-t2" headers="r1c1-t2"><a id="sthref284"></a><code>plugin112.jar</code></td>
<td class="cellalignment5917" headers="r5c1-t2 r1c2-t2">Contains a directory named <code>plugin112</code>, which is the package containing the examples. In the directory are the <code>xml</code>, <code>java</code>, and <code>class</code> files for the examples in <a href="#BABCHJJE">Chapter 3</a>.</td>
</tr>
</tbody>
</table>
<br/></div>
<!-- class="inftblinformal" -->
<p>You put the <code>awmcalcs.xml</code> and <code>awmtree.xml</code> files in the same directory as the Analytic Workspace Manager executable file. You put the <code>plugin112.jar</code> file in the directory that you specify for plug-ins, as described in <a href="pluginintro.htm#CEGCHIIE">&#34;Enabling Analytic Workspace Manager Plug-ins&#34;</a>.</p>
</div>
<!-- class="sect1" -->
<a id="CHDHIBIF"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Examples of AWMPlugin</h2>
<p>The examples of an <code>AWMPlugin</code> are in the following topics.</p>
<ul>
<li>
<p><a href="#BABJBCJH">ViewXMLPlugin Example</a></p>
</li>
<li>
<p><a href="#BABGJBBE">DeleteDimPlugin Example</a></p>
</li>
</ul>
<p>The examples do not include the documentation comments of the methods of the <code>AWMPlugin</code> interface or the input parameters and return values of those methods. Those methods and parameters are described in <a href="pluginintro.htm#CEGGJADH">&#34;Describing the AWMPlugin Interface&#34;</a>.</p>
<a id="BABJBCJH"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ViewXMLPlugin Example</h3>
<p><a id="sthref285"></a><a id="sthref286"></a><a id="sthref287"></a><a id="sthref288"></a>The <code>ViewXMLPlugin</code> class displays an XML representation of a measure or a custom measure of a cube in the Cubes folder in the Analytic Workspace Manager navigation tree. <a href="#BABHCJIJ">Example 3-1</a> contains the code for the class. The plug-in applies to <code>oracle.olap.metadata.mdm.MdmBaseMeasure</code> and <code>oracle.olap.metadata.mdm.MdmDerivedMeasure</code> objects, which correspond to the Measure and Calculated Measure objects, respectively, of a cube.</p>
<p>The plug-in gets and displays an XML representation of a measure. <a href="pluginintro.htm#CEGGADFJ">Figure 2-3</a> shows the menu that Analytic Manager Workspace displays for <code>ViewXMLPlugin</code> when a user right-clicks a measure. For an example of the dialog box that <code>ViewXMLPlugin</code> displays, see <a href="#BABHJEDG">Figure 3-1, &#34;Dialog Box Displayed by ViewXMLPlugin&#34;</a>.</p>
<div class="example">
<p class="titleinexample"><a id="BABHCJIJ"></a>Example 3-1 The ViewXMLPlugin Class</p>
<pre>import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import oracle.AWXML.AW;
import oracle.olap.awm.plugin.AWMPlugin;
import oracle.olapi.metadata.mdm.MdmBaseMeasure;
import oracle.olapi.metadata.mdm.MdmDerivedMeasure;
import oracle.olapi.metadata.mdm.MdmMetadataProvider;
import oracle.olapi.metadata.mdm.MdmObject;

/**
 * An implementation of the AWMPlugin interface that displays the XML
 * representation of an Oracle OLAP measure object.
 */
public class ViewXMLPlugin implements AWMPlugin
{
  public boolean isSupported(Connection conn, String type, Object obj, 
                             AW aw, Map params)
  {
    // Support MdmBaseMeasure and MdmDerivedMeasure objects.
    if (obj instanceof MdmBaseMeasure || obj instanceof MdmDerivedMeasure)
    {
      return true;
    }
    return false;
  }

  public String getMenu(Connection conn, String type, Object obj, AW aw, 
                        Map params)
  {
    // Text to display on the right-click menu.
    String menu = &#34;View XML Example Plug-in&#34;;
    return menu;
  }

  public void handle(Frame parent, Connection conn, String type, Object obj,
                     AW aw, Map params)
  {
    if (obj instanceof MdmObject)
    {
      // Get the MdmMetadataProvider to use in exporting the XML.
      Object objdp = params.get(&#34;DATAPROVIDER&#34;);
      if (objdp != null)
      {
        MdmObject mobj = (MdmObject)obj;
        MdmMetadataProvider mdp = (MdmMetadataProvider)objdp;
 
        // Get the XML representation of the MdmObject.
        List objects = new ArrayList();
        objects.add(mobj);
        Map renameMap = null;
        boolean includeOwnerString = true;
        String title = &#34;XML for &#34; + mobj.getName();
        try
        {
          String xml =
            mdp.exportFullXML(objects, renameMap, includeOwnerString);
          // Create a dialog box and display the XML.
          DisplayXMLDialog dxd = new DisplayXMLDialog(parent, title, true,
                                                      xml);
        }
        catch (IOException ie)
        {
          // Ignore error.
        }
      }
    }
  }

  public boolean refreshTree(Connection conn, String type, Object obj, AW aw,
                             Map params)
  {
    // This example does not create new metadata objects, so return false.
    return false;
  }

  /**
   * An inner class that creates a dialog box that displays the XML.
   */
  class DisplayXMLDialog extends JDialog implements ActionListener
  {
    /**
     * Creates a DisplayXMLDialog for displaying the contents of the xml
     * parameter.
     * 
     * @param parent A Frame that is provided by Analytic Workspace Manager.
     * @param title A String that contains text to use as the title for the
     *              dialog box.
     * @param modal A boolean that specifies whether the dialog box is modal.
     * @param xml A String that contains the XML to display.
     */
    public DisplayXMLDialog(Frame parent, String title, boolean modal,
                            String xml)
    {
      super(parent);
      setLocation(200, 200);
      setTitle(title);
      setModal(modal);
      
      try
      {
        displayXML(xml);
      }
      catch (Exception e)
      {
        e.printStackTrace();
      }
    }
 
    /**
     * Creates a dialog box and displays the contents of a String.
     * 
     * @param xml A String that contains the XML to display.
     */
    private void displayXML(String xml)
    {
      JTextArea ta = new JTextArea(xml);
      ta.setEditable(false);
      Font of = ta.getFont();
      Font f = new Font(&#34;Courier New&#34;, of.getStyle(), of.getSize());
      ta.setFont(f);

      JScrollPane p = new JScrollPane();
      p.getViewport().add(ta);

      JPanel buttonPane = new JPanel();
      JButton button = new JButton(&#34;Close&#34;);
      buttonPane.add(button);
      button.addActionListener(this);
      getContentPane().add(buttonPane, BorderLayout.SOUTH);
      
      getContentPane().add(p, BorderLayout.NORTH);
      setDefaultCloseOperation(DISPOSE_ON_CLOSE);
      pack();
      setVisible(true);
    }

    /**
     * Performs an action for the Close button.
     * 
     * @param e An ActionEvent for the Close button.
     */
    public void actionPerformed(ActionEvent e)
    {
      setVisible(false);
      dispose();
    }
  }
}
</pre></div>
<!-- class="example" -->
<p><a href="#BABHJEDG">Figure 3-1</a> illustrates the dialog box that <code>ViewXMLPlugin</code> displays for the <code>PROFIT</code> calculated measure in the <code>UNITS_CUBE</code> folder.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABHJEDG"></a>Figure 3-1 Dialog Box Displayed by ViewXMLPlugin</p>
<img width="390" height="606" src="img/xmlprofit.gif" alt="Description of Figure 3-1 follows"/><br/>
<a id="sthref289" href="img_text/xmlprofit.htm">Description of &#34;Figure 3-1 Dialog Box Displayed by ViewXMLPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="BABGJBBE"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DeleteDimPlugin Example</h3>
<p><a id="sthref290"></a><a id="sthref291"></a><a id="sthref292"></a><a id="sthref293"></a>The <code>DeleteDimPlugin</code> class deletes the dimension that the user has selected in the navigation tree. The plug-in only applies to dimension objects that are in a custom folder and that have <code>dimobj</code> as the value of the <code>TYPE</code> key of the <code>params</code> <code>Map</code>. The <code>DeleteDimPlugin</code> plug-in is specified by the <code>aw.xml</code> document in <a href="#BABGIGFJ">Example 3-7</a>.</p>
<p><a href="#BABBFEFF">Example 3-2</a> contains the code for the <code>DeleteDimPlugin</code> class.</p>
<div class="example">
<p class="titleinexample"><a id="BABBFEFF"></a>Example 3-2 The DeleteDimPlugin Class</p>
<pre>package plugin112;
 
import java.awt.Frame;
import java.sql.Connection;
import java.util.Map;
import javax.swing.JOptionPane;
import oracle.AWXML.AW;
import oracle.olap.awm.plugin.AWMPlugin;
import oracle.olapi.metadata.mdm.MdmMetadataProvider;
import oracle.olapi.metadata.mdm.MdmObject;
import oracle.olapi.metadata.mdm.MdmPrimaryDimension;
import oracle.olapi.metadata.mdm.MdmSchema;

/**
 * An implementation of the AWMPlugin interface that can delete
 * an Oracle OLAP dimension object in a custom folder.
 */
public class DeleteDimPlugin implements AWMPlugin
{
  // This plug-in applies to dimension objects in a custom folder.
  public boolean isSupported(Connection conn, String type, Object obj, AW aw,
                             Map params)
  {
    if (params != null)
    {
      // Get the value of the type attribute of the AWMNode that specifies this
      // plug-in.
      Object nodeType = params.get(&#34;TYPE&#34;);
      if (nodeType != null &amp;&amp; ((String)nodeType).equalsIgnoreCase(&#34;dimobj&#34;))
        return true;
    }
    return false;
  }
 
  public String getMenu(Connection conn, String type, Object obj, AW aw,
                        Map params)
  {
    Object dimName = null;
    if (obj != null &amp;&amp; obj instanceof String)
    {
      dimName = (String) obj;
    }
    // Text to display on the right-click menu.
    return &#34;Example Plug-in: Delete Dimension &#34; + dimName;
  }
 
  public void handle(Frame parent, Connection conn, String type, Object obj,
                     AW aw, Map params)
  {
    String dimName = &#34;&#34;;
    // The obj parameter should be the name of the currently selected dimension.
    if (obj != null &amp;&amp; obj instanceof String)
    {
      dimName = (String) obj;
      String title = &#34;Delete Dimension&#34;;
      if (JOptionPane.showConfirmDialog(parent, &#34;Delete &#34; + dimName + &#34;?&#34;,
                                        title, JOptionPane.YES_NO_OPTION) ==
                                        JOptionPane.NO_OPTION)
        return;
    }

    if (params != null)
    {
      Map bindMap = (Map)params.get(&#34;BIND_MAP&#34;);
      if (bindMap != null)
      {
        // Get the name of the owner, which is also the name of the schema.
        String owner = (String)bindMap.get(&#34;owner&#34;);
        // Get the currently selected dimension.
        MdmPrimaryDimension dim = getDimension(dimName, owner, params);

        if (dim != null)
        {
          // Get the schema object that contains the dimension.
          MdmSchema schema = dim.getOwner();
          schema.removeDimension(dim);
          MdmMetadataProvider mdp = getMetadataProvider(params);
          // Get the TransactionProvider and commit the current Transaction.
          try
          {
            mdp.getDataProvider()
               .getTransactionProvider()
               .commitCurrentTransaction();
            JOptionPane.showMessageDialog(parent,
                                          owner + &#34;.&#34; + dimName +
                                          &#34; dimension has been deleted.&#34;);
          }
          catch (Exception e)
          {
            JOptionPane.showMessageDialog(parent, e.getMessage(), &#34;Error&#34;,
                                          JOptionPane.ERROR_MESSAGE);
            // Roll back the current Transaction.
            try
            {
              mdp.getDataProvider()
                 .getTransactionProvider()
                 .rollbackCurrentTransaction();
            }
            catch (Exception e2)
            {
              // Ignore the exception.
            }
          }
        }
      }
      else
      {
        return;
      }
    }
  }
 
  public boolean refreshTree(Connection conn, String type, Object obj, AW aw,
                             Map params)
  {
    return true;
  }
 
  // Get the MdmMetadataProvider.
  private MdmMetadataProvider getMetadataProvider(Map params)
  {
    Object dp = params.get(&#34;DATAPROVIDER&#34;);
    if (dp instanceof MdmMetadataProvider)
    {
      MdmMetadataProvider mdp = (MdmMetadataProvider)dp;
      return mdp;
    }
    return null;
  }
 
  // Get the currently selected dimension.
  private MdmPrimaryDimension getDimension(String dimName, String schema,
                                           Map params)
  {
    if (params != null)
    {
      MdmMetadataProvider mdp = getMetadataProvider(params);
      if (mdp != null)
      {
        // Get the dimension from the MdmMetadataProvider.
        MdmObject mobj = mdp.getMetadataObject(schema + &#34;.&#34; + dimName);
        if (mobj != null &amp;&amp; mobj instanceof MdmPrimaryDimension)
        {
          MdmPrimaryDimension dim = (MdmPrimaryDimension)mobj;
          return dim;
        }
      }
    }
    return null;
  }
}
</pre></div>
<!-- class="example" -->
<p><a href="#BABJBDHA">Figure 3-2</a> shows the menu that Analytic Manager Workspace displays for <code>DeleteDimPlugin</code>. The figure shows the menu that appears when a user right-clicks the CUSTOMER dimension in the MyDims folder. The MyDims folder is created by the <code>aw.xml</code> document in <a href="#BABGIGFJ">Example 3-7</a>.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABJBDHA"></a>Figure 3-2 Right-click Menu Displayed by DeleteDimPlugin</p>
<img width="626" height="387" src="img/deltdim2.gif" alt="Description of Figure 3-2 follows"/><br/>
<a id="sthref294" href="img_text/deltdim2.htm">Description of &#34;Figure 3-2 Right-click Menu Displayed by DeleteDimPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p>If the user clicks <span class="bold">Example Plug-in: Delete Dimension CUSTOMER</span>, then <code>DeleteDimPlugin</code> displays the dialog box shown in <a href="#BABCHCEF">Figure 3-3</a>.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABCHCEF"></a>Figure 3-3 Dialog Box Displayed by DeleteDimPlugin</p>
<img width="686" height="388" src="img/deltcust.gif" alt="Description of Figure 3-3 follows"/><br/>
<a id="sthref295" href="img_text/deltcust.htm">Description of &#34;Figure 3-3 Dialog Box Displayed by DeleteDimPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDJHFHC"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Examples of ViewerPlugin and EditorPlugin</h2>
<p>The example <code>ViewerPlugin</code> and <code>EditorPlugin</code> implementations are in the following topics:</p>
<ul>
<li>
<p><a href="#BABFJHJI">LevelViewerPlugin Example</a></p>
</li>
<li>
<p><a href="#BABGBABD">MeasureViewerPlugin Example</a></p>
</li>
<li>
<p><a href="#BABHCBDJ">CubeViewerPlugin Example</a></p>
</li>
<li>
<p><a href="#BABGHDEJ">DimEditorPlugin Example</a></p>
</li>
</ul>
<p>The topics include the XML documents that specify the plug-ins.</p>
<p>The methods of the <code>ViewerPlugin</code> and <code>EditorPlugin</code> interfaces are described in <a href="pluginintro.htm#CEGBEAHI">&#34;Describing the ViewerPlugin and EditorPlugin Interfaces&#34;</a>.</p>
<a id="BABFJHJI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">LevelViewerPlugin Example</h3>
<p><a id="sthref296"></a><a id="sthref297"></a><a id="sthref298"></a><a id="sthref299"></a><a id="sthref300"></a>The <code>dimension.xml</code> document in <a href="#BABCJDEE">Example 3-3</a> has an <code>&lt;AWMNode&gt;</code> that specifies a folder named MyLevels and a SQL statement that selects the names of the levels of the currently selected dimension from the USER_CUBE_DIM_LEVELS table. An unnamed child <code>&lt;AWMNode&gt;</code> specifies the <code>LevelViewerPlugin</code>. <a href="#BABBDIJF">Figure 3-4</a> shows the navigation tree folder and the display in the property inspector for the document.</p>
<div class="example">
<p class="titleinexample"><a id="BABCJDEE"></a>Example 3-3 Creating a dimension.xml Document</p>
<pre><a id="sthref301"></a>&lt;?xml version=&#34;1.0&#34; encoding=&#34;US-ASCII&#34; ?&gt;
&lt;AWMTree&gt;
  &lt;AWMNode name=&#34;MyLevels&#34;
           type=&#34;levelobj&#34;
           sql=&#34;select level_name from user_cube_dim_levels where dimension_name = {dimension_name} &#34;&gt;
    &lt;AWMNode type=&#34;levelview&#34;
             viewClass=&#34;plugin112.LevelViewerPlugin&#34;/&gt;  
  &lt;/AWMNode&gt;
&lt;/AWMTree&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#BABJFHGG">Example 3-4</a> contains the <code>LevelViewerPlugin</code> class. The class displays the name of the currently selected level, as shown in <a href="#BABGBDBE">Figure 3-5</a>.</p>
<div class="example">
<p class="titleinexample"><a id="BABJFHGG"></a>Example 3-4 The LevelViewerPlugin Class</p>
<pre>package plugin112;
 
import java.awt.FlowLayout;
import java.sql.Connection;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JPanel;
import oracle.olap.awm.plugin.ViewerPlugin;
 
public class LevelViewerPlugin implements ViewerPlugin
{
  public boolean isViewerForType(Connection conn, String name)
    throws Exception
  {
    return true;
  }
 
  public JPanel getPanel(Connection conn, String name, Map params)
    throws Exception
  {
    JPanel panel = new JPanel();
    panel.setLayout(new FlowLayout());
    // Get the name of the current level.
    Object obj = params.get(&#34;levelobj&#34;);
    if (obj instanceof String)
    {
      String levelName = (String)obj;
      panel.add(new JLabel(levelName));
    }
    return panel;
  }
  
  public void cleanup(String name)
  {     
  }
}
</pre></div>
<!-- class="example" -->
<p><a href="#BABBDIJF">Figure 3-4</a> shows the results of the <code>MyLevels</code> <code>&lt;AWMNode&gt;</code> in the <code>dimension.xml</code> document. A MyLevels folder appears in each dimension folder of the analytic workspace. The user has selected the MyLevels folder in the PRODUCT folder. The result of the SQL statement of the <code>&lt;AWMNode&gt;</code> appears in the MyLevels folder. The property inspector displays the same SQL statement and the result of it, which is a list of the levels of the dimension.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABBDIJF"></a>Figure 3-4 Results of the MyLevels &lt;AWMNode&gt; in dimension.xml</p>
<img width="719" height="574" src="img/mylevels.gif" alt="Description of Figure 3-4 follows"/><br/>
<a id="sthref302" href="img_text/mylevels.htm">Description of &#34;Figure 3-4 Results of the MyLevels &lt;AWMNode&gt; in dimension.xml&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#BABGBDBE">Figure 3-5</a> shows the results of the unnamed child <code>&lt;AWMNode&gt;</code> of the <code>MyLevels</code> <code>&lt;AWMNode&gt;</code> in the <code>dimension.xml</code> document. The user has selected the FAMILY level in the MyLevels folder. The property inspector displays the user interface specified by <code>LevelViewerPlugin</code>. The plug-in displays the name of the level.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABGBDBE"></a>Figure 3-5 Results of LevelViewerPlugin</p>
<img width="722" height="580" src="img/family.gif" alt="Description of Figure 3-5 follows"/><br/>
<a id="sthref303" href="img_text/family.htm">Description of &#34;Figure 3-5 Results of LevelViewerPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="BABGBABD"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">MeasureViewerPlugin Example</h3>
<p><a id="sthref304"></a><a id="sthref305"></a><a id="sthref306"></a><a id="sthref307"></a><a id="sthref308"></a>The <code>cube.xml</code> document in <a href="#BABJIAIF">Example 3-5</a> has an <code>&lt;AWMNode&gt;</code> that specifies a folder named MyMeasures and a SQL statement that selects the names of the measures of the currently selected cube from the USER_CUBE_MEASURES table. An unnamed child <code>&lt;AWMNode&gt;</code> specifies the <code>MeasureViewerPlugin</code> plug-in. <a href="#BABEFBEG">Figure 3-6</a> shows the navigation tree folder and the display in the property inspector for the document.</p>
<div class="example">
<p class="titleinexample"><a id="BABJIAIF"></a>Example 3-5 Creating a cube.xml Document</p>
<pre><a id="sthref309"></a>&lt;?xml version=&#34;1.0&#34; encoding=&#34;US-ASCII&#34; ?&gt;
&lt;AWMTree&gt;
  &lt;AWMNode name=&#34;MyMeasures&#34;
           type=&#34;measureobj&#34; 
           sql=&#34;select measure_name from user_cube_measures where cube_name = {cube_name}&#34;&gt;
    &lt;AWMNode type=&#34;measureview&#34;
             viewClass=&#34;plugin112.MeasureViewerPlugin&#34;/&gt;
  &lt;/AWMNode&gt;
&lt;/AWMTree&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#BABJDJGA">Example 3-6</a> contains the <code>MeasureViewerPlugin</code> class. The class displays the name of the currently selected measure, as shown in <a href="#BABFGJFD">Figure 3-7</a>.</p>
<div class="example">
<p class="titleinexample"><a id="BABJDJGA"></a>Example 3-6 The MeasureViewerPlugin Class</p>
<pre>package plugin112;
 
import java.awt.FlowLayout;
import java.sql.Connection;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JPanel;
import oracle.olap.awm.plugin.ViewerPlugin;
 
public class MeasureViewerPlugin implements ViewerPlugin
{
  public boolean isViewerForType(Connection conn, String name)
    throws Exception
  {
    return true;
  }   
 
  public JPanel getPanel(Connection conn, String name, Map params)
    throws Exception
  {
    JPanel panel = new JPanel();
    panel.setLayout(new FlowLayout());

    // Get the name of the current measure.
    Object measureobj = null;
    if (params != null)
      measureobj = params.get(&#34;measureobj&#34;);

    if (measureobj instanceof String)
    {
      String measureName = (String)measureobj;
      panel.add(new JLabel(measureName));
    }
    return panel;
  }
 
  public void cleanup(String name)
  {   
  }
}
</pre></div>
<!-- class="example" -->
<p><a href="#BABEFBEG">Figure 3-6</a> shows the results of the <code>MyMeasures</code> <code>&lt;AWMNode&gt;</code> in the <code>cube.xml</code> document. A MyMeasures folder appears in each cube folder of the analytic workspace. The user has selected the MyMeasures folder in the UNITS_CUBE folder. The result of the SQL statement of the <code>&lt;AWMNode&gt;</code> appears in the MyMeasures folder. The property inspector displays the same SQL statement and the result of it, which is a list of the measures and calculated measures of the cube.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABEFBEG"></a>Figure 3-6 Results of the MyMeasures &lt;AWMNode&gt; in cube.xml</p>
<img width="761" height="583" src="img/mymeasrs.gif" alt="Description of Figure 3-6 follows"/><br/>
<a id="sthref310" href="img_text/mymeasrs.htm">Description of &#34;Figure 3-6 Results of the MyMeasures &lt;AWMNode&gt; in cube.xml&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#BABFGJFD">Figure 3-7</a> shows the results of the unnamed child <code>&lt;AWMNode&gt;</code> of the <code>MyMeasures</code> <code>&lt;AWMNode&gt;</code> in the <code>cube.xml</code> document. The user has selected the UNITS measure in the MyMeasures folder. The property inspector displays the user interface specified by <code>MeasureViewerPlugin</code>. The plug-in displays the name of the measure.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABFGJFD"></a>Figure 3-7 Results of MeasureViewerPlugin</p>
<img width="653" height="582" src="img/measview.gif" alt="Description of Figure 3-7 follows"/><br/>
<a id="sthref311" href="img_text/measview.htm">Description of &#34;Figure 3-7 Results of MeasureViewerPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="BABHCBDJ"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CubeViewerPlugin Example</h3>
<p><a id="sthref312"></a><a id="sthref313"></a><a id="sthref314"></a><a id="sthref315"></a><a id="sthref316"></a>The <code>aw.xml</code> document in <a href="#BABGIGFJ">Example 3-7</a> has an <code>&lt;AWMNode&gt;</code> that specifies a folder named MyDims. For a description of the <code>MyDims</code> <code>&lt;AWMNode&gt;</code>, see <a href="#BABGHDEJ">&#34;DimEditorPlugin Example&#34;</a>.</p>
<p>The <code>aw.xml</code> document also has an <code>&lt;AWMNode&gt;</code> that specifies a folder named MyCubes and a SQL statement that selects the names of the cubes of the current analytic workspace from the USER_CUBES table. An unnamed child <code>&lt;AWMNode&gt;</code> specifies the <code>CubeViewerPlugin</code>. <a href="#BABIGJHC">Figure 3-8</a> shows the navigation tree folder and the display in the property inspector for the <code>MyCubes</code> <code>&lt;AWMNode&gt;</code>.</p>
<div class="example">
<p class="titleinexample"><a id="BABGIGFJ"></a>Example 3-7 Creating an aw.xml Document</p>
<pre><a id="sthref317"></a>&lt;?xml version=&#34;1.0&#34; encoding=&#34;US-ASCII&#34; ?&gt;
&lt;AWMTree&gt;
  &lt;AWMNode name=&#34;MyDims&#34;
           type=&#34;mydimfolder&#34;
           viewSql=&#34;select dimension_name, dimension_type from user_cube_dimensions where aw_name = {aw_name}&#34;&gt;
    &lt;AWMNode type=&#34;dimobj&#34;
             sql=&#34;select dimension_name from user_cube_dimensions where aw_name = {aw_name}&#34;
             viewClass=&#34;plugin112.DimEditorPlugin&#34;&gt;
    &lt;/AWMNode&gt;
      &lt;AWMNode name=&#34;MyLevels&#34;
               type=&#34;levelobj&#34;
               sql=&#34;select level_name from user_cube_dim_levels where dimension_name = {dimobj}&#34;&gt;
        &lt;AWMNode sql=&#34;select * from user_cube_dim_levels where dimension_name = {dimobj} and level_name = {levelobj}&#34;/&gt;
      &lt;/AWMNode&gt;
  &lt;/AWMNode&gt;
  &lt;AWMNode name=&#34;MyCubes&#34;
           type=&#34;cubeobj&#34;
           sql=&#34;select cube_name from user_cubes where aw_name = {aw_name}&#34;&gt;
    &lt;AWMNode type=&#34;mycubeview&#34;
             viewClass=&#34;plugin112.CubeViewerPlugin&#34;/&gt;
  &lt;/AWMNode&gt;
&lt;/AWMTree&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#BABCFEAH">Example 3-8</a> contains the <code>CubeViewerPlugin</code> class. The class displays the name of the currently selected cube, as shown in <a href="#BABCGHBB">Figure 3-9</a>.</p>
<div class="example">
<p class="titleinexample"><a id="BABCFEAH"></a>Example 3-8 The CubeViewerPlugin Class</p>
<pre>package plugin112;
 
import java.awt.FlowLayout;
import java.sql.Connection;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JPanel;
import oracle.olap.awm.plugin.ViewerPlugin;
 
public class CubeViewerPlugin implements ViewerPlugin
{
  public boolean isViewerForType(Connection conn, String name)
    throws Exception
  {
    return true;
  }
  
  public JPanel getPanel(Connection conn, String name, Map params)
    throws Exception
  {
    JPanel panel = new JPanel();
    panel.setLayout(new FlowLayout());
    // Get the name of the current cube.
    Object cubeobj = null;
    if (params != null)
      cubeobj = params.get(&#34;cubeobj&#34;);
    if (cubeobj instanceof String)
    {
      String cubeName = (String)cubeobj;
      panel.add(new JLabel(cubeName));
    }
    return panel;
  }
 
  public void cleanup(String name)
  {
  }
}
</pre></div>
<!-- class="example" -->
<p><a href="#BABIGJHC">Figure 3-8</a> shows the results of the <code>MyCubes</code> <code>&lt;AWMNode&gt;</code> in the <code>aw.xml</code> document. A MyCubes folder appears in the GLOBAL analytic workspace folder. The user has selected the MyCubes folder. The result of the SQL statement of the <code>&lt;AWMNode&gt;</code> appears in the folder. The property inspector displays the same SQL statement and the result of it, which is a list of the cubes of the analytic workspace.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABIGJHC"></a>Figure 3-8 Results of the MyCubes &lt;AWMNode&gt; in aw.xml</p>
<img width="690" height="492" src="img/mycubes.gif" alt="Description of Figure 3-8 follows"/><br/>
<a id="sthref318" href="img_text/mycubes.htm">Description of &#34;Figure 3-8 Results of the MyCubes &lt;AWMNode&gt; in aw.xml&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#BABCGHBB">Figure 3-9</a> shows the results of the unnamed child <code>&lt;AWMNode&gt;</code> of the <code>MyCubes</code> <code>&lt;AWMNode&gt;</code> in the <code>aw.xml</code> document. The user has selected the <code>UNITS_CUBE</code> cube in the MyCubes folder. The property inspector displays the user interface specified by <code>CubeViewerPlugin</code>. The plug-in displays the name of the cube.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABCGHBB"></a>Figure 3-9 Results of the CubeViewerPlugin</p>
<img width="691" height="493" src="img/unitscube.gif" alt="Description of Figure 3-9 follows"/><br/>
<a id="sthref319" href="img_text/unitscube.htm">Description of &#34;Figure 3-9 Results of the CubeViewerPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="BABGHDEJ"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DimEditorPlugin Example</h3>
<p><a id="sthref320"></a><a id="sthref321"></a><a id="sthref322"></a><a id="sthref323"></a>The <code>aw.xml</code> document in <a href="#BABGIGFJ">Example 3-7</a> has an <code>&lt;AWMNode&gt;</code> that specifies a folder named MyDims and a SQL statement that selects the names and types of the dimensions of the current analytic workspace from the USER_CUBE_DIMENSIONS table. <a href="#CHDFEAEC">Figure 3-10</a> shows the navigation tree folder and the display in the property inspector for the <code>MyDims</code> <code>&lt;AWMNode&gt;</code>.</p>
<p>An unnamed child <code>&lt;AWMNode&gt;</code> specifies a SQL statement that selects the names of the dimensions and also specifies the <code>DimEditorPlugin</code>. <a href="#CHDBIJAG">Figure 3-11</a> shows the navigation tree folder and the display in the property inspector for the <code>MyDims</code> <code>&lt;AWMNode&gt;</code>.</p>
<p>The <code>&lt;AWMNode&gt;</code> named <code>MyLevels</code>, nested in the unnamed <code>&lt;AWMNode&gt;</code>, selects the names of the levels from the USER_CUBE_DIM_LEVELS table for the currently selected dimension. The <code>MyLevels</code> <code>&lt;AWMNode&gt;</code> has an unnamed nested <code>&lt;AWMNode&gt;</code> that selects all columns from the USER_CUBE_DIM_LEVELS table for the currently selected dimension and level.</p>
<p><a href="#CHDIBACE">Example 3-9</a> contains the <code>DimEditorPlugin</code> class. The class displays the name and the short description of the currently selected dimension, as shown in <a href="#CHDBIJAG">Figure 3-11</a>. The user can change the value of the short description.</p>
<div class="example">
<p class="titleinexample"><a id="CHDIBACE"></a>Example 3-9 The DimEditorPlugin Class</p>
<pre>package plugin112;
 
import java.awt.Component;
import java.awt.GridLayout;
import java.sql.Connection;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import oracle.olap.awm.plugin.EditorPlugin;
import oracle.olap.awm.plugin.PanelChanged;
import oracle.olapi.metadata.mdm.MdmDescriptionType;
import oracle.olapi.metadata.mdm.MdmMetadataProvider;
import oracle.olapi.metadata.mdm.MdmObject;
import oracle.olapi.metadata.mdm.MdmPrimaryDimension;
 
public class DimEditorPlugin implements EditorPlugin
{
  private JTextField shortDescTextField;
  private PanelChanged parentPanelChanged;
  private JPanel panel;
  private JLabel dimNameLabel;
  private MdmDescriptionType mdmShortDescrDescrType;

  public DimEditorPlugin()
  {
    panel = new JPanel();
    panel.setLayout(new GridLayout(3, 1));
    dimNameLabel = new JLabel();
    panel.add(dimNameLabel);
    shortDescTextField = new JTextField();
    panel.add(new JLabel(&#34;Short Description:&#34;));
    panel.add(shortDescTextField);
    shortDescTextField.getDocument().addDocumentListener(new DocumentListener()
        {
          public void insertUpdate(DocumentEvent e)
          {
            changed();
          }
 
          public void removeUpdate(DocumentEvent e)
          {
            changed();
          }
 
          public void changedUpdate(DocumentEvent e)
          {
            changed();
          }
        });
  }
 
  public boolean isViewerForType(Connection conn, String name)
    throws Exception
  {
    return true;
  }
 
  // Get the MdmMetadataProvider of the session.
  private MdmMetadataProvider getMetadataProvider(Map params)
  {
    Object dp = params.get(&#34;DATAPROVIDER&#34;);
    if (dp instanceof MdmMetadataProvider)
    {
      MdmMetadataProvider mdp = (MdmMetadataProvider)dp;
      return mdp;
    }
    return null;
  }
  
  // Get the currently selected dimension and the schema from the params Map.
  // Get the MdmMetadataProvider and get the MdmPrimaryDimension for the
  // dimension.
  private MdmPrimaryDimension getDimension(Map params)
  {
    Object obj = null;
    String schema = &#34;&#34;;
    if (params != null)
    {
      obj = params.get(&#34;dimobj&#34;);
      schema = (String)params.get(&#34;schema&#34;);
    }
    if (obj instanceof String)
    {
      String dimName = (String)obj;
      MdmMetadataProvider mdp = getMetadataProvider(params);
      if (mdp != null)
      {
        MdmObject mobj = mdp.getMetadataObject(schema + &#34;.&#34; + dimName);
        if (mobj != null &amp;&amp; mobj instanceof MdmPrimaryDimension)
        {
          MdmPrimaryDimension dim = (MdmPrimaryDimension)mobj;
          return dim;
        }
        else
          System.out.println(&#34;Cannot get the &#34; + dimName + &#34; dimension.&#34;);
      }
    }
    return null;
  }
 
  // Get the dimension and the short description of it. 
  // Display the short description.
  private void read(Map params)
  {
    MdmPrimaryDimension dim = getDimension(params);
    if (dim != null)
    {
      dimNameLabel.setText(dim.getName());
      mdmShortDescrDescrType =
        MdmDescriptionType.getShortDescriptionDescriptionType();
      String shortDesc = dim.getDescription(mdmShortDescrDescrType);
      shortDescTextField.setText(shortDesc);
    }
  }
 
  public JPanel getPanel(Connection conn, String name, Map params)
    throws Exception
  {
    read(params);
    return panel;
  }
 
  public void cleanup(String name)
  {  
  }
 
  public boolean validate(Connection conn, Component parent, String name,
                          Map params)
    throws Exception
  {
    String invalidDescr = &#34;foo&#34;;
    if (shortDescTextField.getText().equals(invalidDescr))
    {
      JOptionPane.showMessageDialog(parent, &#34;Description cannot be &#34; +
                                    invalidDescr + &#34;.&#34;);
      return false;
    }
    return true;
  }
 
  public void revert(Connection conn, Component parent, String name,
                     Map params)
    throws Exception
  {
    read(params);
  }
 
  public void showHelp(Connection conn, Component parent, String name,
                       Map params)
    throws Exception
  {
    JOptionPane.showMessageDialog(parent, &#34;In Help.&#34;);
  }
 
  public boolean save(Connection conn, Component parent, String name,
                      Map params)
    throws Exception
  {
    // Get the currently selected dimension and set the short description for 
    // it.
    MdmPrimaryDimension dim = getDimension(params);
    dim.setDescription(mdmShortDescrDescrType, shortDescTextField.getText());
    // Get the MdmMetadataProvider.
    MdmMetadataProvider mdp = getMetadataProvider(params);
    if (mdp == null)
      return false;
    // Get the DataProvider and the TransactionProvider and commit the current
    // Transaction. If the Transaction is not committable, roll it back.
    try
    {
      mdp.getDataProvider().getTransactionProvider().commitCurrentTransaction();
    }
    catch (Exception e)
    {
      JOptionPane.showMessageDialog(parent, e.getMessage(), &#34;Error&#34;,
                                    JOptionPane.ERROR_MESSAGE);
      try
      {
        mdp.getDataProvider()
           .getTransactionProvider()
           .rollbackCurrentTransaction();
      }
      catch (Exception e2)
      {
        // Ignore the exception.
      }
    }
    return true;
  }
 
  public void setValueChanged(Connection conn, String name, Map params,
                              PanelChanged parentPanelChanged)
  {
    this.parentPanelChanged = parentPanelChanged;
  }
 
  
  // Calls the changed() method of the PanelChanged object supplied by
  // Analytic Workspace Manager when it calls the setValueChanged method.
  public void changed()
  {
    if (parentPanelChanged != null)
      parentPanelChanged.changed();
  }  
}
</pre></div>
<!-- class="example" -->
<p><a href="#CHDFEAEC">Figure 3-10</a> shows the results of the <code>MyDims</code> <code>&lt;AWMNode&gt;</code> in the <code>aw.xml</code> document. A MyDims folder appears in the GLOBAL analytic workspace folder. The user has selected the MyDims folder. The property inspector displays the SQL statement of the <code>MyDims</code> <code>&lt;AWMNode&gt;</code> and the result of it, which is a table that has columns headed DIMENSION_NAME and DIMENSION_TYPE. The rows of the columns contains the names of the dimensions of the analytic workspace and the types of the dimensions.</p>
<p>The <code>MyDims</code> <code>&lt;AWMNode&gt;</code> has an unnamed child <code>&lt;AWMNode&gt;</code> that has a SQL statement that retrieves the names of the dimensions. Those names appear in the MyDims folder in the navigation tree. The unnamed <code>&lt;AWMNode&gt;</code> also specifies the <code>DimEditorPlugin</code> plug-in.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDFEAEC"></a>Figure 3-10 Results of the MyDims &lt;AWMNode&gt; in aw.xml</p>
<img width="739" height="402" src="img/mydims.gif" alt="Description of Figure 3-10 follows"/><br/>
<a id="sthref324" href="img_text/mydims.htm">Description of &#34;Figure 3-10 Results of the MyDims &lt;AWMNode&gt; in aw.xml&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#CHDBIJAG">Figure 3-11</a> shows the Analytic Workspace Manager user interface after a user has selected the CHANNEL dimension in the MyDims folder in the navigation tree. The property inspector displays the user interface specified by <code>DimEditorPlugin</code>. The user interface includes a text field in which the user can change the value of the short description attribute.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDBIJAG"></a>Figure 3-11 Results of DimEditorPlugin</p>
<img width="734" height="440" src="img/dimeditr.gif" alt="Description of Figure 3-11 follows"/><br/>
<a id="sthref325" href="img_text/dimeditr.htm">Description of &#34;Figure 3-11 Results of DimEditorPlugin&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#CHDHGDJC">Figure 3-12</a> shows the result of the <code>MyLevels</code> <code>&lt;AWMNODE&gt;</code> that is the child of the <code>MyDims</code> <code>&lt;AWMNODE&gt;</code> in the <code>aw.xml</code> document. The SQL statement of the <code>MyLevels</code> <code>&lt;AWMNode&gt;</code> selects the LEVEL_NAME column from the USER_CUBE_DIM_LEVELS table for the currently selected dimension. <a href="#CHDHGDJC">Figure 3-12</a> shows the navigation tree folder with the MyLevels folder selected in the CHANNEL folder. In the property inspector is the result of the query.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDHGDJC"></a>Figure 3-12 Result of MyLevels &lt;AWMNode&gt; Under MyDims in aw.xml</p>
<img width="736" height="508" src="img/mydims_mylevels.gif" alt="Description of Figure 3-12 follows"/><br/>
<a id="sthref326" href="img_text/mydims_mylevels.htm">Description of &#34;Figure 3-12 Result of MyLevels &lt;AWMNode&gt; Under MyDims in aw.xml&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a href="#CHDEBCCB">Figure 3-13</a> shows the result of the unnamed <code>&lt;AWMNODE&gt;</code> that is the child of the <code>MyLevels</code> <code>&lt;AWMNODE&gt;</code> in the <code>aw.xml</code> document. The SQL statement of the unnamed <code>&lt;AWMNode&gt;</code> selects all columns from the USER_CUBE_DIM_LEVELS table for the currently selected dimension and level. <a href="#CHDEBCCB">Figure 3-13</a> shows the navigation tree folder with the TOTAL level selected in the MyLevels folder in the CHANNEL folder. The property inspector displays the result of the query.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDEBCCB"></a>Figure 3-13 Results of the Nested &lt;AWMNode&gt; in the MyLevels &lt;AWMNode&gt; in aw.xml</p>
<img width="736" height="508" src="img/total_level.gif" alt="Description of Figure 3-13 follows"/><br/>
<a id="sthref327" href="img_text/total_level.htm">Description of &#34;Figure 3-13 Results of the Nested &lt;AWMNode&gt; in the MyLevels &lt;AWMNode&gt; in aw.xml&#34;</a><br/>
<br/></div>
<!-- class="figure" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDEFEBE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Example of Plug-in Descriptions</h2>
<p><a id="sthref328"></a><a id="sthref329"></a>As discussed in <a href="pluginintro.htm#CEGEACCC">&#34;Describing the Available Plug-ins&#34;</a>, the <code>awmplugin.xml</code> file contains descriptions of Java plug-ins that Analytic Workspace Manager displays. <a href="#CHDCAADA">Figure 3-14</a> shows the Plugins tab of the About dialog box with the information that is specified by the <code>awmplugin.xml</code> document in <a href="#CHDBJAHG">Example 3-10</a>.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDCAADA"></a>Figure 3-14 Plugins Tab in the About Dialog Box</p>
<img width="526" height="279" src="img/awmplugin.gif" alt="Description of Figure 3-14 follows"/><br/>
<a id="sthref330" href="img_text/awmplugin.htm">Description of &#34;Figure 3-14 Plugins Tab in the About Dialog Box&#34;</a><br/>
<br/></div>
<!-- class="figure" -->
<p><a id="sthref331"></a><a id="sthref332"></a><a href="#CHDBJAHG">Example 3-10</a> shows the <code>awmplugin.xml</code> document that produces the result shown in <a href="#CHDCAADA">Figure 3-14</a>.</p>
<div class="example">
<p class="titleinexample"><a id="CHDBJAHG"></a>Example 3-10 Creating an awmplugins.xml Document</p>
<pre>&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&gt;
&lt;AWMPlugins&gt;
  &lt;Plugin name=&#34;Cube Viewer Plug-in&#34; version=&#34;1.0&#34;
          class=&#34;plugin112.CubeViewerPlugin&#34;&gt;
    &lt;Description&gt;Displays the name of a cube.&lt;/Description&gt;
  &lt;/Plugin&gt;
  &lt;Plugin name=&#34;Level Viewer Plug-in&#34; version=&#34;1.0&#34;
          class=&#34;plugin112.LevelViewerPlugin&#34;&gt;
    &lt;Description&gt;Displays the name of a level.&lt;/Description&gt;
  &lt;/Plugin&gt;
  &lt;Plugin name=&#34;Measure Viewer Plug-in&#34; version=&#34;1.0&#34;
          class=&#34;plugin112.MeasureViewerPlugin&#34;&gt;
    &lt;Description&gt;Displays the name of a measure.&lt;/Description&gt;
  &lt;/Plugin&gt;
  &lt;Plugin name=&#34;Delete Dimension Plug-in&#34; version=&#34;2.0&#34;
          class=&#34;plugin112.DeleteDimPlugin&#34;&gt;
    &lt;Description&gt;Deletes a dimension in the MyDims folder.&lt;/Description&gt;
  &lt;/Plugin&gt;
  &lt;Plugin name=&#34;Edit Dimension Plug-in&#34; version=&#34;2.0&#34;
          class=&#34;plugin112.DimEditorPlugin&#34;&gt;
    &lt;Description&gt;Edits the short description of a dimension.&lt;/Description&gt;
  &lt;/Plugin&gt;
  &lt;Plugin name=&#34;View XML Plug-in&#34; version=&#34;1.0&#34; class=&#34;plugin112.ViewXMLPlugin&#34;&gt;
    &lt;Description&gt;Displays the XML for an OLAP measure.&lt;/Description&gt;
  &lt;/Plugin&gt;
&lt;/AWMPlugins&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5908">
<tr>
<td class="cellalignment5917">
<table class="cellalignment5913">
<tr>
<td class="cellalignment5912"><a href="pluginintro.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5912"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5920">
<table class="cellalignment5911">
<tr>
<td class="cellalignment5912"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5912"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5912"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5912"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5912"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5912"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>