<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-2539"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Using%20Transparent%20Data%20Encryption%20with%C2%A0Other%C2%A0Oracle%20Features"></a><title>Using Transparent Data Encryption with&nbsp;Other&nbsp;Oracle Features</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="You can use Oracle Data Encryption with other Oracle features, such as Oracle Data Guard or Oracle Real Application Clusters."/>
<meta name="keywords" content="Transparent Data Encryption (TDE), Oracle Data Pump export and import operations, about, Oracle Data Pump, encrypted data, encrypted columns, export and import operations on encrypted columns, export and import operations on dump sets, encrypted data with dump sets, materialized views, Transparent Data Encryption tablespace encryption, Oracle Data Guard, Transparent Data Encryption, Oracle Real Application Clusters, non-shared file systems to store keystores, non-shared file systems to store TDE keystores, SecureFiles, Oracle Securefiles, PDBs, operations in root, CDBs, TDE operations in root, operations in root or PDBs, TDE operations in root and PDBs, TDE master encryption keys, exporting in PDBs, importing in PDBs, master encryption keys, exporting, importing, PDBs with encrypted data, hardware security modules, unplugging PDBs, plugging PDBs, finding keystore status for all PDBs, finding TDE keystore status for all PDBs, Oracle Call Interface, editions, Editions, multidatabase environments"/>
<meta name="dcterms.created" content="2017-06-05T10:46:18Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Security Guide"/>
<meta name="dcterms.identifier" content="E50333-18"/>
<meta name="dcterms.isVersionOf" content="ASOAG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="general-considerations-of-using-transparent-data-encryption.htm" title="Previous" type="text/html"/>
<link rel="Next" href="frequently-asked-questions-about-transparent-data-encryption.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E50333-18.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-9C48916F-60B3-4BD0-9FED-38591D29EBCD"></a> <span id="PAGE" style="display:none;">11/21</span> <!-- End Header -->
<a id="ASOAG10479"></a>
<h1 class="sect1"><span class="enumeration_chapter">6</span> Using Transparent Data Encryption with&nbsp;Other&nbsp;Oracle Features</h1>
<div>
<p>You can use Oracle Data Encryption with other Oracle features, such as Oracle Data Guard or Oracle Real Application Clusters.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-15CB716C-74A5-42E5-9BCA-7EC9C9FFA712" title="You can use Oracle Data Pump to export and import tables that contain encrypted columns, as well as encrypt entire dump sets.">How Transparent Data Encryption Works with Export and Import Operations</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-363A701B-99E3-4000-8C38-2F6F820F58B7" title="For both software keystores and hardware keystores, Oracle Data Guard supports Transparent Data Encryption (TDE).">How Transparent Data Encryption Works with Oracle Data Guard</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-68EE178A-6B6C-497A-B720-052FB23B5794" title="Oracle Real Application Clusters (Oracle RAC) nodes can share software keystores. Hardware security module keystores must be shared by using a network connection. You can store software keystores on non-shared file systems in Oracle RAC.">How Transparent Data Encryption Works with Oracle Real Application Clusters</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-7DA8F180-A785-4FCD-9217-18426776E286" title="You can use SecureFiles to store LOBS. SecureFile storage has three features: compression, deduplication, and encryption.">How Transparent Data Encryption Works with SecureFiles</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-F1589601-F49E-4F31-A4D4-1544F974E756" title="In a multitenant environment, the TDE operations that you can perform depend on whether you are in the root or a PDB.">How Transparent Data Encryption Works in a Multitenant Environment</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-5BF66B9A-96B1-4A33-9CC6-0872E7A5AA24" title="Transparent Data Encryption does not have any effect on the operation of Oracle Call Interface (OCI).">How Transparent Data Encryption Works with Oracle Call Interface</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-1A0ED46B-775C-4106-9674-3489DA4ACD73" title="Transparent Data Encryption does not have any effect on the Editions feature of Oracle Database.">How Transparent Data Encryption Works with Editions</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-A811F574-9E48-4C3E-9489-1253427B2F93" title="Each Oracle database on the same server (such as databases sharing the same Oracle binary but using different data files) must access its own TDE keystore.">Configuring Transparent Data Encryption to Work in a Multidatabase Environment</a></p>
</li>
</ul>
</div>
<a id="ASOAG9548"></a>
<div class="props_rev_3"><a id="GUID-15CB716C-74A5-42E5-9BCA-7EC9C9FFA712"></a>
<h2 class="sect2">How Transparent Data Encryption Works with Export and Import Operations</h2>
<div>
<p>You can use Oracle Data Pump to export and import tables that contain encrypted columns, as well as encrypt entire dump sets.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-5AD67AAC-AB3D-4E54-91C7-4C6C5362F909" title="You can use Oracle Data Pump to export and import tables that have encrypted columns.">About Exporting and Importing Encrypted Data</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-1EF7CA2C-CB4A-44AE-B377-279203EC9A53" title="You can export and import tables with encrypted columns using the ENCRYPTION=ENCRYPTED_COLUMNS_ONLY setting.">Exporting and Importing Tables with Encrypted Columns</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-A147EC22-9532-40D2-B73C-40D5C7197173" title="Oracle Data Pump can encrypt entire dump sets, not just Transparent Data Encryption columns.">Using Oracle Data Pump to Encrypt Entire Dump Sets</a></p>
</li>
</ul>
</div>
<a id="ASOAG10346"></a>
<div class="props_rev_3"><a id="GUID-5AD67AAC-AB3D-4E54-91C7-4C6C5362F909"></a>
<h3 class="sect3">About Exporting and Importing Encrypted Data</h3>
<div>
<p>You can use Oracle Data Pump to export and import tables that have encrypted columns.</p>
<p>For both software and hardware keystores, the following points are important when you must export tables containing encrypted columns:</p>
<ul style="list-style-type: disc;">
<li>
<p>Sensitive data should remain unintelligible during transport.</p>
</li>
<li>
<p>Authorized users should be able to decrypt the data after it is imported at the destination.</p>
</li>
</ul>
<p>When you use Oracle Data Pump to export and import tables containing encrypted columns, it uses the <code class="codeph">ENCRYPTION</code> parameter to enable encryption of data in dump file sets. The <code class="codeph">ENCRYPTION</code> parameter allows the following values:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ENCRYPTED_COLUMNS_ONLY</code>: Writes encrypted columns to the dump file set in encrypted format</p>
</li>
<li>
<p><code class="codeph">DATA_ONLY</code>: Writes all of the data to the dump file set in encrypted format</p>
</li>
<li>
<p><code class="codeph">METADATA_ONLY</code>: Writes all of the metadata to the dump file set in encrypted format</p>
</li>
<li>
<p><code class="codeph">ALL</code>: Writes all of the data and metadata to the dump file set in encrypted format</p>
</li>
<li>
<p><code class="codeph">NONE</code>: Does not use encryption for dump file sets</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10347"></a>
<div class="props_rev_3"><a id="GUID-1EF7CA2C-CB4A-44AE-B377-279203EC9A53"></a>
<h3 class="sect3">Exporting and Importing Tables with Encrypted Columns</h3>
<div>
<p>You can export and import tables with encrypted columns using the <code class="codeph">ENCRYPTION=ENCRYPTED_COLUMNS_ONLY</code> setting.</p>
<div class="section">
<ol>
<li>
<p>Ensure that the keystore is open before you attempt to export tables containing encrypted columns.</p>
<p>In a multitenant environment, if you are exporting data in a pluggable database (PDB), then ensure that the wallet is open in the PDB. If you are exporting into the root, then ensure that the wallet is open in the root.</p>
<p>To find if the keystore is open, query the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view. If you must open the keystore, then run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY <span class="italic">software_keystore_password</span> [CONTAINER = ALL | CURRENT];
</pre>
<p>The <span class="italic"><code class="codeph">software_keystore_password</code></span> setting is the password for the keystore. The keystore must be open because the encrypted columns must be decrypted using the <a href="glossary.htm#GUID-78CFC3BC-9BDD-406E-A6E2-2374AC636269"><span class="xrefglossterm">TDE table key</span></a>s, which requires access to the TDE master encryption key. The columns are reencrypted using a password, before they are exported.</p>
</li>
<li>
<p>Run the <code class="codeph">EXPDP</code> command, using the <code class="codeph">ENCRYPTION_PASSWORD</code> parameter to specify a password that is used to encrypt column data in the export dump file set.</p>
<p>The following example exports the <code class="codeph">employee_data</code> table. The <code class="codeph">ENCRYPTION_PWD_PROMPT = YES</code> setting enables you to prompt for the password interactively, which is a recommended security practice.</p>
<pre dir="ltr">expdp hr TABLES=employee_data DIRECTORY=dpump_dir
DUMPFILE=dpcd2be1.dmp ENCRYPTION=ENCRYPTED_COLUMNS_ONLY
ENCRYPTION_PWD_PROMPT = YES

Password: <span class="italic">password_for_hr</span>
</pre></li>
<li>
<p>To import the exported data into the target database, ensure that you specify the same password that you used for the export operation, as set by the <code class="codeph">ENCRYPTION_PASSWORD</code> parameter.</p>
<p>The password is used to decrypt the data. Data is reencrypted with the new TDE table keys generated in the target database. The target database must have the keystore open to access the TDE master encryption key. The following example imports the <code class="codeph">employee_data</code> table:</p>
<pre dir="ltr">impdp hr TABLES=employee_data DIRECTORY=dpump_dir 
DUMPFILE=dpcd2be1.dmp 
ENCRYPTION_PWD_PROMPT = YES

Password: <span class="italic">password_for_hr</span>
</pre></li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10348"></a>
<div class="props_rev_3"><a id="GUID-A147EC22-9532-40D2-B73C-40D5C7197173"></a>
<h3 class="sect3">Using Oracle Data Pump to Encrypt Entire Dump Sets</h3>
<div>
<p>Oracle Data Pump can encrypt entire dump sets, not just Transparent Data Encryption columns.</p>
<div class="section">
<p>While importing, you can use either the password or the keystore TDE master encryption key to decrypt the data. If the password is not supplied, then the TDE master encryption key in the keystore is used to decrypt the data. The keystore must be present and open at the target database. The open keystore is also required to reencrypt column encryption data at the target database.</p>
<p>You can use the <code class="codeph">ENCRYPTION_MODE=TRANSPARENT</code> setting to transparently encrypt the dump file set with the TDE master encryption key stored in the keystore. A password is not required in this case. The keystore must be present and open at the target database, and it must <span class="italic">contain</span> the TDE master encryption key from the <span class="italic">source</span> database for a successful decryption of column encryption metadata during an import operation.</p>
<p>The open keystore is also required to reencrypt column encryption metadata at the target database. If a keystore already exists on the target database, then you can export the current TDE master encryption key <span class="italic">from</span> the keystore of the source database and import it <span class="italic">into</span> the keystore of the target database.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the <code class="codeph">ENCRYPTION_MODE</code> parameter to specify the encryption mode. <code class="codeph">ENCRYPTION_MODE=DUAL</code> encrypts the dump set using the TDE master encryption key stored in the keystore and the password provided.</p>
</li>
</ul>
<p>For example, to use dual encryption mode to export encrypted data:</p>
<pre dir="ltr">expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_enc.dmp
ENCRYPTION=all ENCRYPTION_PASSWORD=<span class="italic">encryption_password</span>
ENCRYPTION_ALGORITHM=AES256 ENCRYPTION_MODE=dual

Password: <span class="italic">password_for_hr</span>
</pre>
<div class="infoboxnotealso" id="GUID-A147EC22-9532-40D2-B73C-40D5C7197173__GUID-160CF7C0-2CC9-4D07-AABE-5796B7A55D9B">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-85A465EB-50E2-482C-8AC5-851436AB8F8F" title="You can export and import the TDE master encryption key in a variety ways, to satisfy the needs of other Oracle features, such as a multitenant environment or Oracle Data Guard.">Exporting and Importing the TDE Master Encryption Key</a></p>
</li>
<li>
<p><a class="olink SUTIL100" target="_blank" href="../SUTIL/GUID-17FAE261-0972-4220-A2E4-44D479F519D4.htm#SUTIL100"><span><cite>Oracle Database Utilities</cite></span></a> for details on using Oracle Data Pump and the associated encryption parameters</p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-936CC3D2-8102-454C-AC49-D0126929D738" title="The external table feature enables you to access data in external sources as if the data were in a database table.">Creating an Encrypted Column in an External Table</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG9553"></a>
<div class="props_rev_3"><a id="GUID-363A701B-99E3-4000-8C38-2F6F820F58B7"></a>
<h2 class="sect2">How Transparent Data Encryption Works with Oracle Data Guard</h2>
<div>
<p>For both software keystores and hardware keystores, Oracle Data Guard supports Transparent Data Encryption (TDE).</p>
<p>If the primary database uses TDE, then each standby database in a Data Guard configuration must have a copy of the encryption keystore from the primary database. If the primary database uses TDE, then each standby database in a Data Guard configuration must have an encryption keystore with the keystore from the primary database merged into it. If you reset the TDE master encryption key in the primary database, then you must merge the keystore on the primary database that contains the TDE master encryption key to each standby database.</p>
<p>Note the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Encrypted data in log files remains encrypted when data is transferred to the standby database. Encrypted data also stays encrypted during transit.</p>
</li>
<li>
<p>TDE works with SQL*Loader direct path loads. The data loaded into encrypted columns is transparently encrypted during the direct path load.</p>
</li>
<li>
<p>Materialized views work with TDE tablespace encryption. You can create both materialized views and materialized view logs in encrypted tablespaces. Materialized views also work with TDE column encryption.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-363A701B-99E3-4000-8C38-2F6F820F58B7__GUID-487FCAE0-D893-43B7-BE8E-F0101E932312">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DF77BD8F-83FC-4F0F-8B2D-2E51D753A6F1" title="You can merge software keystores in a variety of ways, such as merging two keystores to create a third keystore, merging one keystore into an existing keystore, or merging an auto-login software keystore into a password-based software keystore.">Merging Software Keystores</a></p>
</li>
<li>
<p><a class="olink SBYDB4938" target="_blank" href="../SBYDB/data_support.htm#SBYDB4938"><span><cite>Oracle Data Guard Concepts and Administration</cite></span></a> more information about the use of TDE with logical standby databases</p>
</li>
<li>
<p><a class="olink REPLN003" target="_blank" href="../REPLN/repmview.htm#REPLN003"><span><cite>Oracle Database Advanced Replication</cite></span></a> for more information about materialized views</p>
</li>
<li>
<p><a class="olink OKVAG10849" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OKVAG10849"><span><cite>Oracle Key Vault Administrator&#39;s Guide</cite></span></a> for information about how to use TDE with Oracle Data Guard in an Oracle Key Vault environment</p>
</li>
</ul>
</div>
</div>
</div>
<a id="ASOAG10163"></a>
<div class="props_rev_3"><a id="GUID-68EE178A-6B6C-497A-B720-052FB23B5794"></a>
<h2 class="sect2">How Transparent Data Encryption Works with Oracle Real Application Clusters</h2>
<div>
<p>Oracle Real Application Clusters (Oracle RAC) nodes can share software keystores. Hardware security module keystores must be shared by using a network connection. You can store software keystores on non-shared file systems in Oracle RAC.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-49C5A375-3558-4678-922E-9C811511CF25" title="Oracle Database enables Oracle Real Application Clusters nodes to share a software keystore. Hardware security modules use a network connection for each database instance.">About Using Transparent Data Encryption with Oracle Real Application Clusters</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-C79FDFE7-835D-46B8-9FF8-878D4763A24C" title="If you do not use a shared file system to store the software keystore, then you must copy the keystore to the associated nodes.">Using a Non-Shared File System to Store a Software Keystore in Oracle RAC</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-68EE178A-6B6C-497A-B720-052FB23B5794__GUID-622506B1-D08E-4C30-A6B6-D2E063953166">
<p class="notep1">See Also:</p>
<p><a class="olink OKVAG10704" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OKVAG10704"><span class="italic">Oracle Key Vault Administrator&#39;s Guide</span></a> for information about using TDE with Oracle RAC in an Oracle Key Vault environment</p>
</div>
</div>
<a id="ASOAG10349"></a>
<div class="props_rev_3"><a id="GUID-49C5A375-3558-4678-922E-9C811511CF25"></a>
<h3 class="sect3">About Using Transparent Data Encryption with Oracle Real Application Clusters</h3>
<div>
<p>Oracle Database enables Oracle Real Application Clusters nodes to share a software keystore. Hardware security modules use a network connection for each database instance.</p>
<p>This eliminates the need to manually copy and synchronize the software keystore across all of the nodes. Oracle recommends that you create the software keystore on a shared file system. This enables all of the instances to access the same shared software keystore. If you configure Oracle RAC to use Automatic Storage Management (ASM), then store the keystore on the ASM disk group.</p>
<p>For hardware security modules, use a network connection for each database instance. Thus, all database instances have access to the hardware security module.</p>
<p>Keystore operations that must be performed or synchronized on all of the instances, such as opening or closing the keystore or rekeying can be performed on any one Oracle RAC instance. The synchronization operation applies to all of the other Oracle RAC instances in the cluster. This means that when you open and close a keystore for one instance, then it opens and closes for all of the Oracle RAC instances. Similarly, a TDE master encryption key rekey operation that you perform on one database instance applies to all of the database instances. You can perform other keystore operations, such as exporting TDE master encryption keys, rotating the keystore password, merging keystores, or backing up keystores, from a single instance only.</p>
<p>When using a shared file system, ensure that the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> or <code class="codeph">WALLET_LOCATION</code> parameter setting in the <code class="codeph">sqlnet.ora</code> file for all of the Oracle RAC instances point to the same shared software keystore location. You also must ensure security of the shared software keystore by assigning the appropriate directory permissions.</p>
</div>
</div>
<a id="ASOAG10350"></a>
<div class="props_rev_3"><a id="GUID-C79FDFE7-835D-46B8-9FF8-878D4763A24C"></a>
<h3 class="sect3">Using a Non-Shared File System to Store a Software Keystore in Oracle RAC</h3>
<div>
<p>If you do not use a shared file system to store the software keystore, then you must copy the keystore to the associated nodes.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root or the appropriate PDB. For example:</p>
<pre dir="ltr">sqlplus sec_admin@hrpdb as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Reset the TDE master encryption key on the first Oracle Real Application Clusters (Oracle RAC) node.</p>
<p>See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FDA3856D-5B88-42FD-A666-BC965C92689C" title="You can set and reset the TDE master encryption key for both software keystores and hardware keystores.">Setting and Resetting the TDE Master Encryption Key in the Keystore</a> for more information.</p>
</li>
<li>
<p>Copy the keystore file with the new TDE master encryption key from the first node to all of the other nodes.</p>
<p>To find the keystore file location, query the <code class="codeph">WRL_PARAMETER</code> column in the <code class="codeph">V$ENCRYPTION_WALLET</code> view. To find the <code class="codeph">WRL_PARAMETER</code> settings for all of the database instances, query the <code class="codeph">GV$ENCRYPTION_WALLET</code> view.</p>
</li>
<li>
<p>Close and then reopen the keystore on any node. (If you are using a multitenant container database (CDB), then run these statements in the root.)</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY <span class="italic">software_keystore_password</span>;

ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY <span class="italic">software_keystore_password</span> [CONTAINER = ALL | CURRENT];
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infobox-note" id="GUID-C79FDFE7-835D-46B8-9FF8-878D4763A24C__GUID-43748FCD-D15A-4C61-810A-155BE06C27B3">
<p class="notep1">Note:</p>
<p>Any keystore operation, such as opening or closing the keystore, performed on any one Oracle RAC instance applies to all other Oracle RAC instances. This is true even if you are not using a shared file system.</p>
</div>
<p>All of the Oracle RAC nodes are now configured to use the new TDE master encryption key.</p>
<div class="infoboxnotealso" id="GUID-C79FDFE7-835D-46B8-9FF8-878D4763A24C__GUID-3B1756F9-6DFF-4967-84BE-8525A43A58CA">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-814E9D78-04D5-4063-A70D-893469E35C8B" title="You can manually close password-based software keystores, auto-login software keystores, and local auto-login software keystores.">Closing a Software Keystore</a></p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10351"></a>
<div class="props_rev_3"><a id="GUID-7DA8F180-A785-4FCD-9217-18426776E286"></a>
<h2 class="sect2">How Transparent Data Encryption Works with SecureFiles</h2>
<div>
<p>You can use SecureFiles to store LOBS. SecureFile storage has three features: compression, deduplication, and encryption.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-50EFBCE7-A74F-4EFF-BF75-867C1210993F" title="The CREATE TABLE statement can create a SecureFiles LOB with encryption specified.">Example: Creating a SecureFiles LOB with a Specific Encryption Algorithm</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-C0612020-A8B4-46A9-B227-D47D08D9B82D" title="The CREATE TABLE statement can create a SecureFiles LOB with a column password.">Example: Creating a SecureFiles LOB with a Column Password Specified</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-7DA8F180-A785-4FCD-9217-18426776E286__GUID-E4A6AD78-30F4-4CFE-A57A-7179FCCB9A6C">
<p class="notep1">See Also:</p>
<p><a class="olink ADLOB46111" target="_blank" href="../ADLOB/adlob_smart.htm#ADLOB46111"><span class="italic">Oracle Database SecureFiles and Large Objects Developer&#39;s Guide</span></a> for more information about SecureFiles encryption</p>
</div>
</div>
<div class="sect3"><a id="GUID-53FABB65-1CAB-4C0F-AB53-E5F6CC49884D"></a>
<h3 class="sect3">About Transparent Data Encryption and SecureFiles</h3>
<div>
<p>SecureFiles encryption uses TDE to provide the encryption facility for LOBs.</p>
<p>When you create or alter tables, you can specify the SecureFiles encryption or LOB columns that must use the SecureFiles storage. You can enable the encryption for a LOB column by either using the current Transparent Data Encryption (TDE) syntax or by using the <code class="codeph">ENCRYPT</code> clause as part of the LOB parameters for the LOB column. The <code class="codeph">DECRYPT</code> option in the current syntax or the LOB parameters turn off encryption.</p>
</div>
</div>
<a id="ASOAG10436"></a>
<div class="sect3"><a id="GUID-50EFBCE7-A74F-4EFF-BF75-867C1210993F"></a>
<h3 class="sect3">Example: Creating a SecureFiles LOB with a Specific Encryption Algorithm</h3>
<div>
<p>The <code class="codeph">CREATE TABLE</code> statement can create a SecureFiles LOB with encryption specified.</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-50EFBCE7-A74F-4EFF-BF75-867C1210993F__CIHEGCGB">Example 6-1</a> shows how to create a SecureFiles LOB in a <code class="codeph">CREATE TABLE</code> statement.</p>
<div class="example" id="GUID-50EFBCE7-A74F-4EFF-BF75-867C1210993F__CIHEGCGB">
<p class="titleinexample">Example 6-1 Creating a SecureFiles LOB with a Specific Encryption Algorithm</p>
<pre dir="ltr">CREATE TABLE table1 ( a BLOB ENCRYPT USING &#39;AES256&#39;)
    LOB(a) STORE AS SECUREFILE (
    CACHE
    );
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10437"></a>
<div class="sect3"><a id="GUID-C0612020-A8B4-46A9-B227-D47D08D9B82D"></a>
<h3 class="sect3">Example: Creating a SecureFiles LOB with a Column Password Specified</h3>
<div>
<p>The <code class="codeph">CREATE TABLE</code> statement can create a SecureFiles LOB with a column password.</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-C0612020-A8B4-46A9-B227-D47D08D9B82D__CIHIHGDB">Example 6-2</a> shows an example of creating a SecureFiles LOB that uses password protections for the encrypted column.</p>
<p>All of the LOBS in the LOB column are encrypted with the same encryption specification.</p>
<div class="example" id="GUID-C0612020-A8B4-46A9-B227-D47D08D9B82D__CIHIHGDB">
<p class="titleinexample">Example 6-2 Creating a SecureFiles LOB with a Column Password Specified</p>
<pre dir="ltr">CREATE TABLE table1 (a VARCHAR2(20), b BLOB)
    LOB(b) STORE AS SECUREFILE (
        CACHE
        ENCRYPT USING &#39;AES192&#39; IDENTIFIED BY <span class="italic">password</span>
    );
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ASOAG10352"></a>
<div class="props_rev_3"><a id="GUID-F1589601-F49E-4F31-A4D4-1544F974E756"></a>
<h2 class="sect2">How Transparent Data Encryption Works in a Multitenant Environment</h2>
<div>
<p>In a multitenant environment, the TDE operations that you can perform depend on whether you are in the root or a PDB.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-379131D5-6041-4F8B-99B7-A33878552B3B" title="You can use Transparent Data Encryption for both columns and tablespaces in a multitenant environment.">About Using Transparent Data Encryption in a Multitenant Environment</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-6D4D21BC-EBE5-4130-A5D2-0B6A2331FDCA" title="You must perform specific ADMINISTER KEY MANAGEMENT keystore operations only in the root.">Operations That Must Be Performed in Root</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-5D77F2A6-22F5-41C9-B75C-2C7A6D153E2B" title="You can perform the some keystore operations in either the root or a PDB.">Operations That Can Be Performed in Root or in a PDB</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-576582FE-7252-49BC-B795-121689258890" title="You can add or remove PDBs that have encrypted data to and from a CDB.">Unplugging and Plugging a PDB with Encrypted Data in a CDB</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-75855CB2-3FBC-41E4-BC89-8EA2078E633E" title="You should be aware of how keystore open and close operations work in a multitenant environment.">How Keystore Open and Close Operations Work in a Multitenant Environment</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-8E05DC0C-D22F-44AF-9A6A-2564195F0649" title="The V$ENCRYPTION_WALLET view displays the status of the keystore in a PDB, whether it is open, closed, uses a software or hardware keystore, and so on. You can create a convenience function that uses this view to find the status for keystores in all of the PDBs in a CDB.">Finding the Keystore Status for All of the PDBs in a Multitenant Environment</a></p>
</li>
</ul>
</div>
<a id="ASOAG10353"></a>
<div class="props_rev_3"><a id="GUID-379131D5-6041-4F8B-99B7-A33878552B3B"></a>
<h3 class="sect3">About Using Transparent Data Encryption in a Multitenant Environment</h3>
<div>
<p>You can use Transparent Data Encryption for both columns and tablespaces in a multitenant environment.</p>
<p>Note the following:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">The keystore that you create resides in the host multitenant environment, not within any particular PDB.</span> Multiple PDBs can access a single keystore while running on this host. Each PDB that uses encryption has a Transparent Data Encryption TDE master encryption key stored in this keystore.</p>
</li>
<li>
<p><span class="bold">Each PDB has its own TDE master encryption key.</span> You must manage the TDE master encryption key for each PDB from within the PDB only, using the PDB-specific key management <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statements. From the root or a PDB, you can query the appropriate views to find information about the TDE master encryption keys of the PDBs in a CDB. For example, the <code class="codeph">PDBID</code> column of the <code class="codeph">V$ENCYRYPTION_KEYS</code> view indicates the PDBs to which a TDE master encryption key belongs.</p>
</li>
<li>
<p><span class="bold">You can manage the Transparent Data Encryption TDE master encryption keys independently within the keystore for each PDB.</span> You can rotate the TDE master encryption keys for each PDB individually. See <span class="q">&#34;<a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-85A465EB-50E2-482C-8AC5-851436AB8F8F" title="You can export and import the TDE master encryption key in a variety ways, to satisfy the needs of other Oracle features, such as a multitenant environment or Oracle Data Guard.">Exporting and Importing the TDE Master Encryption Key</a>&#34;</span> for more information.</p>
</li>
<li>
<p><span class="bold">You perform most of the keystore operations from the root.</span> Keystore operations such as rotating a keystore password, merging keystores, and so on must be performed in the root. There are a few key management operations that you can perform within a PDB, such as opening, closing, resetting, and creating keys. The operations can also be performed for all of the PDBs from the root. Where applicable, the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement has the <code class="codeph">CONTAINER</code> clause. Setting <code class="codeph">CONTAINER=ALL</code> performs the action on all of the PDBs.</p>
<p>See the following sections for more information:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-6D4D21BC-EBE5-4130-A5D2-0B6A2331FDCA" title="You must perform specific ADMINISTER KEY MANAGEMENT keystore operations only in the root.">Operations That Must Be Performed in Root</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-5D77F2A6-22F5-41C9-B75C-2C7A6D153E2B" title="You can perform the some keystore operations in either the root or a PDB.">Operations That Can Be Performed in Root or in a PDB</a>&#34;</span></p>
</li>
</ul>
</li>
<li>
<p><span class="bold">If you plan to move a PDB that uses Transparent Data Encryption to a new host computer, then you must move its TDE master encryption key as well.</span> To move the TDE master encryption key from one host computer to another, use the procedures described in <span class="q">&#34;<a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-85A465EB-50E2-482C-8AC5-851436AB8F8F" title="You can export and import the TDE master encryption key in a variety ways, to satisfy the needs of other Oracle features, such as a multitenant environment or Oracle Data Guard.">Exporting and Importing the TDE Master Encryption Key</a>&#34;</span>.</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10466"></a><a id="ASOAG10354"></a>
<div class="props_rev_3"><a id="GUID-6D4D21BC-EBE5-4130-A5D2-0B6A2331FDCA"></a>
<h3 class="sect3">Operations That Must Be Performed in Root</h3>
<div>
<p>You must perform specific <code class="codeph">ADMINISTER KEY MANAGEMENT</code> keystore operations only in the root.</p>
<p>These operations are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Creating password-based software keystores,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT CREATE KEYSTORE</code> statement</p>
</li>
<li>
<p><span class="bold">Creating auto-login software keystores,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT CREATE [LOCAL] AUTO_LOGIN KEYSTORE FROM KEYSTORE</code> statement</p>
</li>
<li>
<p><span class="bold">Changing the software keystore password,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT ALTER KEYSTORE PASSWORD</code> statement</p>
</li>
<li>
<p><span class="bold">Merging software keystores,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE</code> statement</p>
</li>
<li>
<p><span class="bold">Backing up software keystores,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE</code> keystore</p>
</li>
<li>
<p><span class="bold">Migrating from a software keystore to a hardware keystore,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY... MIGRATE USING</code> statement</p>
</li>
<li>
<p><span class="bold">Reverse migrating from a hardware security module to a software keystore,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY... REVERSE MIGRATE</code> statement</p>
</li>
<li>
<p><span class="bold">Adding, updating, and deleting secrets,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT ADD|UPDATE|DELETE SECRET</code> statement</p>
</li>
<li>
<p><span class="bold">Selectively exporting and importing keys,</span> based on a query or identifier list</p>
</li>
</ul>
<div class="section">
<p class="subhead3">How the CONTAINER=ALL Setting Works for Key and Keystore Operations</p>
<p>You can specify the <code class="codeph">CONTAINER=ALL</code> setting for the key and keystore operations described in this section. Specifying the <code class="codeph">CONTAINER=ALL</code> setting performs the same operation on all of the PDBs within the CDB. Remember that you can only use the <code class="codeph">CONTAINER=ALL</code> setting in the root. The <code class="codeph">CONTAINER</code> clause is optional. If you omit the <code class="codeph">CONTAINER</code> clause, then the default is <code class="codeph">CONTAINER = CURRENT</code>.</p>
<p>The permitted <code class="codeph">CONTAINER=ALL</code> operations are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Opening a keystore.</span> If you open the keystore using the <code class="codeph">CONTAINER=ALL</code> setting, then the keystores on all of the associated PDBs open.</p>
</li>
<li>
<p><span class="bold">Closing a keystore.</span> Closing a keystore using the <code class="codeph">CONTAINER=ALL</code> setting closes the keystores on all of the associated PDBs.</p>
</li>
<li>
<p><span class="bold">Creating a TDE master encryption key.</span> Creating a TDE master encryption key using the <code class="codeph">CONTAINER=ALL</code> setting creates the key on all of the PDBs that are open. You can check the keys that were created recently by querying the <code class="codeph">CREATION_TIME</code> column in the <code class="codeph">V$ENCRYPTION_KEYS</code> view. You can also specify a tag with <code class="codeph">CONTAINER=ALL</code> operation, but be aware that this operation creates the keys in all of the PDBs with the same tag. You should have individual tags for each TDE master encryption key, because the tags can help identify PDBs on which the create key operation succeeded in case of an error. You can modify the tag by using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET TAG</code> statement later on.</p>
</li>
<li>
<p><span class="bold">Performing a rekey operation.</span> Performing a rekey operation with the <code class="codeph">CONTAINER=ALL</code> setting creates and then activates the key on all of the PDBs that are open. You can check the keys that were created recently by querying the <code class="codeph">CREATION_TIME</code> column in the <code class="codeph">V$ENCRYPTION_KEYS</code> view. To find the keys that were activated recently, query the <code class="codeph">ACTIVATION_TIME</code> column in the <code class="codeph">V$ENCRYPTION_KEYS</code> view. You can also specify a tag with <code class="codeph">CONTAINER=ALL</code> operation, but be aware that this operation creates the keys in all of the PDBs with the same tag. The tag can also help identify PDBs on which the create key operation succeeded in case of an error. You can modify the tag by using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET TAG</code> statement later on.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10355"></a>
<div class="props_rev_3"><a id="GUID-5D77F2A6-22F5-41C9-B75C-2C7A6D153E2B"></a>
<h3 class="sect3">Operations That Can Be Performed in Root or in a PDB</h3>
<div>
<p>You can perform the some keystore operations in either the root or a PDB.</p>
<p>These operations are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Opening keystores,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN</code> statement</p>
</li>
<li>
<p><span class="bold">Closing keystores,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE</code> statement</p>
</li>
</ul>
<p>You can perform the following key management operations either in the root or a PDB:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Creating a tag for the TDE master encryption key,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET TAG</code> statement</p>
</li>
<li>
<p><span class="bold">Creating a TDE master encryption key,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT CREATE KEY</code> statement</p>
</li>
<li>
<p><span class="bold">Resetting or rotating the TDE master encryption key,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY</code> statement</p>
</li>
<li>
<p><span class="bold">Activating a TDE master encryption key,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT USE KEY</code> statement</p>
</li>
<li>
<p><span class="bold">Exporting TDE master encryption keys,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS</code> statement</p>
</li>
<li>
<p><span class="bold">Importing TDE master encryption keys,</span> using the <code class="codeph">ADMINISTER KEY MANAGEMENT IMPORT ENCRYPTION KEYS</code> statement</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10438"></a>
<div class="props_rev_3"><a id="GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE"></a>
<h3 class="sect3">Exporting and Importing TDE Master Encryption Keys for a PDB</h3>
<div>
<p>To export or import TDE master encryption keys for a PDB, you use the <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT</code> and <code class="codeph">ADMINISTER KEY MANAGEMENT IMPORT</code> statements.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-61722774-8B1C-4B19-A102-FFD25ECDBA74" title="You can export and import any TDE master encryption key from the root in the same way that you export and import the TDE master encryption key for a non-CDB database.">About Exporting and Importing TDE Master Encryption Keys for a PDB</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-FFAC9E80-A2D5-458F-B49B-68E05217B608" title="To export or import a TDE master encryption for a PDB, you must open the keystore and then use the ADMINISTER KEY MANAGEMENT statement with the EXPORT ENCRYPTION KEYS WITH SECRET or IMPORT ENCRYPTION KEYS WITH SECRET clause.">Exporting or Importing a TDE Master Encryption Key for a PDB</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-516FAA4E-D448-4E42-A153-416096657129" title="You can use the ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS SQL statement to export TDE master encryption keys for a PDB.">Example: Exporting a TDE Master Encryption Key from a PDB</a></p>
</li>
<li>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-33C38B9D-C63F-4DE5-ACF1-7F9341AC5AF4" title="You can use the ADMINISTER KEY MANAGEMENT IMPORT ENCRYPTION KEYS SQL statement to import a TDE master encryption key into a PDB.">Example: Importing a TDE Master Encryption Key into a PDB</a></p>
</li>
</ul>
</div>
<a id="ASOAG10532"></a>
<div class="props_rev_3"><a id="GUID-61722774-8B1C-4B19-A102-FFD25ECDBA74"></a>
<h4 class="sect4">About Exporting and Importing TDE Master Encryption Keys for a PDB</h4>
<div>
<p>You can export and import any TDE master encryption key from the root in the same way that you export and import the TDE master encryption key for a non-CDB database.</p>
<p>You can export and import all of the TDE master encryption keys that belong to the PDB by exporting and importing the TDE master encryption keys from within a PDB. Export and import of TDE master encryption keys in a PDB supports the PDB unplug and plug operations. During a PDB unplug and plug, all of the TDE master encryption keys that belong to a PDB, as well as the metadata, are involved. Therefore, the <code class="codeph">WITH IDENTIFIER</code> clause of the <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT</code> statement is not allowed when you export keys from within a PDB. The <code class="codeph">WITH IDENTIFIER</code> clause is only permitted in the root.</p>
<p>You should include the <code class="codeph">FORCE KEYSTORE</code> clause if the root has an auto-login keystore or if the keystore is closed. If the keystore has been configured to use an external store for the password, then use the <code class="codeph">IDENTIFIED BY EXTERNAL STORE</code> clause. For example, to perform an export operation for this scenario:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT EXPORT KEYS WITH SECRET &#34;my_secret&#34;
TO &#39;/etc/TDE/export.exp&#39;
FORCE KEYSTORE IDENTIFIED BY EXTERNAL STORE;
</pre>
<p>This <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT</code> operation exports not only the keys but creates metadata that is necessary for PDB environments (as well as for cloning operations).</p>
<p>Inside a PDB, the export operation of TDE master encryption keys exports the keys that were created or activated by a PDB with the same GUID as the PDB where the keys are being exported. Essentially, all of the keys that belong to a PDB where the export is being performed will be exported.</p>
<p>The importing of TDE master encryption keys from an export file within a PDB takes place only if the TDE master encryption key was exported from another PDB with the same GUID. To support the plug-in of a PDB into a CDB, the import will also import the TDE master encryption keys from an export file that contains the TDE master encryption keys of a non-CDB exported without the <code class="codeph">WITH IDENTIFIER</code> clause. Because the PDB-specific details, such as the PDB name and database ID, can change from one CDB to the next, the PDB-specific information is modified during the import to reflect the updated PDB information.</p>
<div class="infobox-note" id="GUID-61722774-8B1C-4B19-A102-FFD25ECDBA74__GUID-5F7509F5-A65D-4F38-BAB4-D379B6240214">
<p class="notep1">Note:</p>
<p>Within a PDB, you can only export the keys of a PDB as a whole. The ability to export them selectively based on a query or an identifier is restricted to the root.</p>
</div>
</div>
</div>
<a id="ASOAG10533"></a>
<div class="props_rev_3"><a id="GUID-FFAC9E80-A2D5-458F-B49B-68E05217B608"></a>
<h4 class="sect4">Exporting or Importing a TDE Master Encryption Key for a PDB</h4>
<div>
<p>To export or import a TDE master encryption for a PDB, you must open the keystore and then use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">EXPORT ENCRYPTION KEYS WITH SECRET</code> or <code class="codeph">IMPORT ENCRYPTION KEYS WITH SECRET</code> clause.</p>
<div class="section">
<ol>
<li>
<p>Log in to the PDB as a user who was granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>For example:</p>
<pre dir="ltr">sqlplus sec_admin@hr_pdb as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</li>
<li>
<p>Ensure that the keystore is open.</p>
<p>You can query the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view to find if the keystore is open.</p>
<p>If you find that you must open the keystore, then see <span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a>&#34;</span>.</p>
</li>
<li>
<p>Perform the export or import operation, as shown in the examples in <span class="q">&#34;<a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-516FAA4E-D448-4E42-A153-416096657129" title="You can use the ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS SQL statement to export TDE master encryption keys for a PDB.">Example: Exporting a TDE Master Encryption Key from a PDB</a>&#34;</span>.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10439"></a><a id="ASOAG10534"></a>
<div class="props_rev_3"><a id="GUID-516FAA4E-D448-4E42-A153-416096657129"></a>
<h4 class="sect4">Example: Exporting a TDE Master Encryption Key from a PDB</h4>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS</code> SQL statement to export TDE master encryption keys for a PDB.</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-516FAA4E-D448-4E42-A153-416096657129__CIHJEBJI">Example 6-3</a> shows how to export a TDE master encryption key from the PDB <code class="codeph">hr_pdb1</code>.</p>
<div class="example" id="GUID-516FAA4E-D448-4E42-A153-416096657129__CIHJEBJI">
<p class="titleinexample">Example 6-3 Exporting a TDE Master Encryption Key from a PDB</p>
<pre dir="ltr">sqlplus sec_admin@hr_pdb1 as syskm
Enter password: <span class="italic">password</span>
Connected.

ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS WITH SECRET &#34;my_secret&#34; TO &#39;/export.p12&#39; IDENTIFIED BY <span class="italic">password_cdb1</span>;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10440"></a>
<div class="sect4"><a id="GUID-33C38B9D-C63F-4DE5-ACF1-7F9341AC5AF4"></a>
<h4 class="sect4">Example: Importing a TDE Master Encryption Key into a PDB</h4>
<div>
<p>You can use the <span class="apiname">ADMINISTER KEY MANAGEMENT IMPORT ENCRYPTION KEYS</span> SQL statement to import a TDE master encryption key into a PDB.</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-33C38B9D-C63F-4DE5-ACF1-7F9341AC5AF4__CIHFDGII">Example 6-4</a> shows how to import a TDE master encryption key into the PDB <code class="codeph">hr_pdb2</code>.</p>
<div class="example" id="GUID-33C38B9D-C63F-4DE5-ACF1-7F9341AC5AF4__CIHFDGII">
<p class="titleinexample">Example 6-4 Importing a TDE Master Encryption Key into a PDB</p>
<pre dir="ltr">sqlplus sec_admin@hr_pdb2 as syskm
Enter password: <span class="italic">password</span>
Connected.

ADMINISTER KEY MANAGEMENT IMPORT ENCRYPTION KEYS WITH SECRET &#34;my_secret&#34; FROM &#39;/tmp/export.p12&#39; IDENTIFIED BY <span class="italic">password_cdb2</span> WITH BACKUP;
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ASOAG10441"></a>
<div class="props_rev_3"><a id="GUID-576582FE-7252-49BC-B795-121689258890"></a>
<h3 class="sect3">Unplugging and Plugging a PDB with Encrypted Data in a CDB</h3>
<div>
<p>You can add or remove PDBs that have encrypted data to and from a CDB.</p>
</div>
<a id="ASOAG10609"></a>
<div class="props_rev_3"><a id="GUID-013D7499-0EF3-4D2B-AC24-490D0378EC37"></a>
<h4 class="sect4">Unplugging a PDB That Has Encrypted Data</h4>
<div>
<p>You can unplug a PDB from one CDB and then plug it into another CDB.</p>
<div class="section">
<p>The database that was unplugged contains data files and other associated files. The export file is another file that forms part of the unplugged PDB files and should be transported with the unplugged PDB.</p>
</div>
<!-- class="section" -->
<div class="section">
<ol>
<li>
<p>Export the TDE master encryption key of the PDB that you want to unplug.</p>
<p>See <a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a>.</p>
</li>
<li>
<p>Unplug the PDB, as described in <a class="olink ADMIN13623" target="_blank" href="../ADMIN/cdb_plug.htm#ADMIN13623"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
</li>
</ol>
<div class="infobox-note" id="GUID-013D7499-0EF3-4D2B-AC24-490D0378EC37__GUID-5A96EE00-8DAF-4550-A98E-94030EAB2B75">
<p class="notep1">Note:</p>
<p>If you inadvertently unplug the PDB without first exporting the TDS master encryption key, the encryption key is not lost. This information is still in the database. Plug the PDB back into the CDB, export the TDE master encryption key, and then unplug the PDB.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10610"></a>
<div class="props_rev_3"><a id="GUID-67812205-D0C9-4F5F-BA64-DAE282F3B516"></a>
<h4 class="sect4">Plugging a PDB That Has Encrypted Data into a CDB</h4>
<div>
<p>To plug a PDB that has encrypted data into a CDB, you must import the TDE master encryption key into the PDB and then configure it there.</p>
<div class="section">
<ol>
<li>
<p>Create the PDB by plugging the unplugged PDB into the CDB, as described in <a class="olink ADMIN13572" target="_blank" href="../ADMIN/cdb_plug.htm#ADMIN13572"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
<p>During the open operation of the PDB after the plug operation, Oracle Database determines if the PDB has encrypted data. If so, it opens the PDB in the <code class="codeph">RESTRICTED</code> mode.</p>
<p>See <a class="olink ADMIN14090" target="_blank" href="../ADMIN/cdb_admin.htm#ADMIN14090"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a> for more information about the Open Mode of a PDB.</p>
</li>
<li>
<p>Import the TDE master encryption key into the PDB.</p>
<p>See <span class="q">&#34;<a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a>&#34;</span>.</p>
</li>
<li>
<p>Close the PDB and then re-open the PDB, as described in <a class="olink ADMIN13863" target="_blank" href="../ADMIN/cdb_pdb_admin.htm#ADMIN13863"><span class="italic">Oracle Database Administrator&#39;s Guide</span></a>.</p>
</li>
<li>
<p>Open the keystore.</p>
<p>See the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-4FBC5088-A045-4306-88C0-FEBC07CA18AC" title="After you have configured the hardware security module, you must open the hardware keystore before it can be used.">Step 3: Open the Hardware Keystore</a>&#34;</span></p>
</li>
</ul>
</li>
<li>
<p>Set the TDE master encryption key for the PDB.</p>
<p>See the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-15E41F0A-5D80-4A7A-88F6-30EE86FA44E8" title="Once the keystore is open, you can set a TDE master encryption key for it.">Step 4: Set the Software TDE Master Encryption Key</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-96BEF7DD-2B37-48F2-9651-38059DE499C5" title="After you have opened the hardware keystore, you are ready to set the hardware keystore TDE master encryption key.">Step 4: Set the Hardware Keystore TDE Master Encryption Key</a>&#34;</span></p>
</li>
<li>
<p><span class="q">&#34;<a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EA686044-5B10-4F70-88F2-B45BF1DD1E55" title="You can create a TDE master encryption key that can be activated at a later date.">Creating TDE Master Encryption Keys for Later Use</a>&#34;</span></p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<div class="sect4"><a id="GUID-E21E1DFE-7D97-4162-82D0-8804E30F5B0B"></a>
<h4 class="sect4">Unplugging a PDB That Has Master Keys Stored in an HSM</h4>
<div>
<p>You can unplug a PDB from one CDB that has been configured with a hardware security module (HSM) and then plug it into another CDB that is configured with an HSM.</p>
<ol>
<li class="stepexpand"><span>Unplug the PDB.</span>
<div>
<p>See <a class="olink ADMIN13572" target="_blank" href="../ADMIN/cdb_plug.htm#ADMIN13572"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> for information about unplugging PDBs.</p>
</div>
</li>
<li class="stepexpand"><span>Move the master keys of the unplugged PDB in the HSM that was used at the source CDB to the HSM that is in use at the destination CDB.</span>
<div>
<p>Refer to the documentation for the HSM for information about moving master keys between HSMs.</p>
</div>
</li>
</ol>
</div>
</div>
<div class="sect4"><a id="GUID-E64F2A04-0412-4779-80C9-66E769E88863"></a>
<h4 class="sect4">Plugging a PDB That Has Master Keys Stored in an HSM</h4>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement to import an HSM master key to a PDB that has been moved to another CDB.</p>
<ol>
<li class="stepexpand"><span>Plug that unplugged PDB into the destination CDB that has been configured with the HSM.</span>
<div>After the plug-in operation, the PDB that has been plugged in will be in restricted mode. See <a class="olink ADMIN13572" target="_blank" href="../ADMIN/cdb_plug.htm#ADMIN13572"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> for information about plugging PDBs.</div>
</li>
<li class="stepexpand"><span>Ensure that the master keys from the HSM that has been configured with the source CDB are available in the HSM of the destination CDB.</span></li>
<li class="stepexpand"><span>Log in to the plugged PDB as a user who was granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</span>
<div>
<p>For example:</p>
<pre dir="ltr">sqlplus sec_admin@hr_pdb as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</div>
</li>
<li class="stepexpand"><span>Open the master encryption key of the plugged PDB.</span>
<div>
<p>For example, for a PDB called <code class="codeph">PDB1</code>:</p>
<pre dir="ltr">ALTER SESSION SET CONTAINER = PDB1;
ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY &#34;<span class="italic">keystore_passsword</span>&#34;;
</pre></div>
</li>
<li class="stepexpand"><span>Import the HSM master key into the PDB.</span>
<div>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT IMPORT ENCRYPTION KEYS WITH SECRET &#34;HSM&#34; FROM &#39;HSM&#39; IDENTIFIED BY &#34;<span class="italic">keystore_password</span>&#34;; 
</pre></div>
</li>
<li class="stepexpand"><span>Restart the PDB.</span>
<div>
<pre dir="ltr">ALTER PLUGGABLE DATABASE PDB1 CLOSE;
ALTER PLUGGABLE DATABASE PDB1 OPEN;
</pre></div>
</li>
</ol>
</div>
</div>
</div>
<a id="ASOAG10442"></a>
<div class="props_rev_3"><a id="GUID-75855CB2-3FBC-41E4-BC89-8EA2078E633E"></a>
<h3 class="sect3">How Keystore Open and Close Operations Work in a Multitenant Environment</h3>
<div>
<p>You should be aware of how keystore open and close operations work in a multitenant environment.</p>
<p>For each PDB in a multitenant environment, you must explicitly open the password-based software keystore or hardware keystore in the PDB to enable the Transparent Data Encryption operations to proceed. (Auto-login and local auto-login software keystores open automatically.) Closing a keystore on a PDB blocks all of the Transparent Data Encryption operations on that PDB.</p>
<p>In a CDB, the open and close keystore operations in a PDB depends on the open and close status of the keystore in the root.</p>
<p>Note the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Before you can manually open a software password-based or hardware keystore in an individual PDB, you must open the keystore in the root.</p>
</li>
<li>
<p>Before you can set a TDE master encryption key in an individual PDB, you must set the key in the root.</p>
</li>
<li>
<p>Auto-login and local auto-login software keystores open automatically. You do not need to manually open these from the root first, or from the PDB.</p>
</li>
<li>
<p>If you close a keystore in the root, then the keystores in the dependent PDBs also close. A keystore close operation in the root is the equivalent of performing a keystore close operation with the <code class="codeph">CONTAINER</code> clause set to <code class="codeph">ALL</code>.</p>
</li>
<li>
<p>If you open a keystore in the root and set the <code class="codeph">CONTAINER</code> clause to <code class="codeph">ALL</code>, then the keystores in the dependent PDBs also open.</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10444"></a><a id="ASOAG10443"></a>
<div class="props_rev_3"><a id="GUID-8E05DC0C-D22F-44AF-9A6A-2564195F0649"></a>
<h3 class="sect3">Finding the Keystore Status for All of the PDBs in a Multitenant Environment</h3>
<div>
<p>The <code class="codeph">V$ENCRYPTION_WALLET</code> view displays the status of the keystore in a PDB, whether it is open, closed, uses a software or hardware keystore, and so on. You can create a convenience function that uses this view to find the status for keystores in all of the PDBs in a CDB.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>To create a function that uses the<code class="codeph">V$ENCRYPTION_WALLET</code> view to find the keystore status, use the <code class="codeph">CREATE PROCEDURE</code> PL/SQL statement.</p>
</li>
</ul>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-8E05DC0C-D22F-44AF-9A6A-2564195F0649__CIHGECEI">Example 6-5</a> shows how to create this function.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-8E05DC0C-D22F-44AF-9A6A-2564195F0649__CIHGECEI">
<p class="titleinexample">Example 6-5 Function to Find the Keystore Status of All of the PDBs in a CDB</p>
<pre dir="ltr">CREATE OR REPLACE PROCEDURE all_pdb_v$encryption_wallet
IS
    err_occ            BOOLEAN;
    curr_pdb           VARCHAR2(30);
    pdb_name           VARCHAR2(30);
    wrl_type           VARCHAR2(20);
    status             VARCHAR2(30);
    wallet_type        VARCHAR2(20);
    wallet_order       VARCHAR2(12);
    fully_backed_up    VARCHAR2(15);
    wrl_parameter      VARCHAR2(4000);
    cursor sel_pdbs IS SELECT NAME FROM V$CONTAINERS
                       WHERE NAME &lt;&gt; &#39;PDB$SEED&#39; order by con_id desc;
  BEGIN
 
    -- Store the original PDB name
    SELECT sys_context(&#39;userenv&#39;, &#39;con_name&#39;) INTO curr_pdb FROM DUAL;
    IF curr_pdb &lt;&gt; &#39;CDB$ROOT&#39; THEN
      dbms_output.put_line(&#39;Operation valid in ROOT only&#39;);
    END IF;
 
    err_occ := FALSE;
    dbms_output.put_line(&#39;---&#39;);
    dbms_output.put_line(&#39;PDB_NAME                       WRL_TYPE STATUS                        &#39;);
    dbms_output.put_line(&#39;------------------------------ -------- ------------------------------&#39;);
    dbms_output.put_line(&#39;WALLET_TYPE          WALLET_ORDER FULLY_BACKED_UP&#39;);
    dbms_output.put_line(&#39;-------------------- ------------ ---------------&#39;);
    dbms_output.put_line(&#39;WRL_PARAMETER&#39;);
    dbms_output.put_line(&#39;--------------------------------------------------------------------------&#39;);
    FOR pdbinfo IN sel_pdbs LOOP
 
      pdb_name := DBMS_ASSERT.ENQUOTE_NAME(pdbinfo.name, FALSE);
      EXECUTE IMMEDIATE &#39;ALTER SESSION SET CONTAINER = &#39; || pdb_name;
 
      BEGIN
        pdb_name := rpad(substr(pdb_name,1,30), 30, &#39; &#39;);
        EXECUTE IMMEDIATE &#39;SELECT wrl_type from V$ENCRYPTION_WALLET&#39; into wrl_type; 
        wrl_type := rpad(substr(wrl_type,1,8), 8, &#39; &#39;);
        EXECUTE IMMEDIATE &#39;SELECT status from V$ENCRYPTION_WALLET&#39; into status;
        status := rpad(substr(status,1,30), 30, &#39; &#39;);
        EXECUTE IMMEDIATE &#39;SELECT wallet_type from V$ENCRYPTION_WALLET&#39; into wallet_type;
        wallet_type := rpad(substr(wallet_type,1,20), 20, &#39; &#39;);
        EXECUTE IMMEDIATE &#39;SELECT wallet_order from V$ENCRYPTION_WALLET&#39; into wallet_order;        
        wallet_order := rpad(substr(wallet_order,1,9), 12, &#39; &#39;);
        EXECUTE IMMEDIATE &#39;SELECT fully_backed_up from V$ENCRYPTION_WALLET&#39; into fully_backed_up;
        fully_backed_up := rpad(substr(fully_backed_up,1,9), 15, &#39; &#39;);
        EXECUTE IMMEDIATE &#39;SELECT wrl_parameter from V$ENCRYPTION_WALLET&#39; into wrl_parameter;
        wrl_parameter := rpad(substr(wrl_parameter,1,79), 79, &#39; &#39;);
        dbms_output.put_line(pdb_name || &#39; &#39; || wrl_type || &#39; &#39; || status);
        dbms_output.put_line(wallet_type || &#39; &#39; || wallet_order || &#39; &#39; || fully_backed_up);
        dbms_output.put_line(wrl_parameter);
 
      EXCEPTION
        WHEN OTHERS THEN
        err_occ := TRUE;
      END;
    END LOOP;
 
    IF err_occ = TRUE THEN
       dbms_output.put_line(&#39;One or more PDB resulted in an error&#39;);
    END IF;
  END;
.
/
set serveroutput on
exec all_pdb_v$encryption_wallet;
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ASOAG9554"></a>
<div class="props_rev_3"><a id="GUID-5BF66B9A-96B1-4A33-9CC6-0872E7A5AA24"></a>
<h2 class="sect2">How Transparent Data Encryption Works with Oracle Call Interface</h2>
<div>
<p>Transparent Data Encryption does not have any effect on the operation of Oracle Call Interface (OCI).</p>
<p>For most practical purposes, TDE is transparent to OCI except for the row shipping feature. You cannot use the OCI row shipping feature with TDE because the key to make the row usable is not available at the receipt-point.</p>
</div>
</div>
<a id="ASOAG10356"></a>
<div class="props_rev_3"><a id="GUID-1A0ED46B-775C-4106-9674-3489DA4ACD73"></a>
<h2 class="sect2">How Transparent Data Encryption Works with Editions</h2>
<div>
<p>Transparent Data Encryption does not have any effect on the Editions feature of Oracle Database.</p>
<p>For most practical purposes, TDE is transparent to Editions. Tables are always noneditioned objects. TDE Column Encryption encrypts columns of the table. Editions are not affected by TDE tablespace encryption.</p>
</div>
</div>
<a id="ASOAG10357"></a>
<div class="props_rev_3"><a id="GUID-A811F574-9E48-4C3E-9489-1253427B2F93"></a>
<h2 class="sect2">Configuring Transparent Data Encryption to Work in a Multidatabase Environment</h2>
<div>
<p>Each Oracle database on the same server (such as databases sharing the same Oracle binary but using different data files) must access its own TDE keystore.</p>
<div class="section">
<p>Keystores are not designed to be shared among databases. By design, there must be one keystore per database. You cannot use the same keystore for more than one database.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>To configure the <code class="codeph">sqlnet.ora</code> file for a multidatabase environment, use one of the following options:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Option 1:</span> If the databases share the same Oracle home, then keep the <code class="codeph">sqlnet.ora</code> file in the default location, which is in the <span class="italic"><code class="codeph">ORACLE_HOME</code></span><code class="codeph">/network/admin</code> directory.</p>
<p>In this case, it is ideal to use the default location. Ensure that the <code class="codeph">sqlnet.ora</code> file has no <code class="codeph">WALLET_LOCATION</code> or <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> entries. Transparent Data Encryption accesses the keystore from the default <code class="codeph">sqlnet.ora</code> location if these two entries are not in the <code class="codeph">sqlnet.ora</code> file.</p>
</li>
<li>
<p><span class="bold">Option 2:</span> If Option 1 is not feasible for your site, then you can specify the keystore location based on an environment variable setting, such as <code class="codeph">ORACLE_SID</code>.</p>
<p>For example:</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION =
 (SOURCE =
  (METHOD = FILE)
   (METHOD_DATA =
    (DIRECTORY = /home/oracle/wallet/$ORACLE_SID)
</pre></li>
<li>
<p><span class="bold">Option 3:</span> If Options 1 and 2 are not feasible, then use separate <code class="codeph">sqlnet.ora</code> files, one for each database. Ensure that you correctly set the <code class="codeph">TNS_ADMIN</code> environment variable to point to the correct database configuration. See <a class="olink SQPUG004" target="_blank" href="../SQPUG/qstart.htm#SQPUG004"><span><cite>SQL*Plus User&#39;s Guide and Reference</cite></span></a> for more information and examples of setting the <code class="codeph">TNS_ADMIN</code> variable.</p>
</li>
</ul>
</li>
</ul>
<div class="infobox-note" id="GUID-A811F574-9E48-4C3E-9489-1253427B2F93__GUID-C1707D29-4561-4A62-9791-E11B4B87993F">
<p class="notep1">Caution:</p>
<p>Using a keystore from another database can cause partial or complete data loss.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5372">
<tr>
<td class="cellalignment5379">
<table class="cellalignment5377">
<tr>
<td class="cellalignment5376"><a href="general-considerations-of-using-transparent-data-encryption.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5376"><a href="frequently-asked-questions-about-transparent-data-encryption.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5381">
<table class="cellalignment5375">
<tr>
<td class="cellalignment5376"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5376"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5376"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5376"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5376"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5376"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>