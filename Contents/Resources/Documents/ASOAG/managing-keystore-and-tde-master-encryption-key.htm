<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-2530"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Managing%20the%20Keystore%20and%20the%20TDE%20Master%C2%A0Encryption%20Key"></a><title>Managing the Keystore and the TDE Master&nbsp;Encryption Key</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="description" content="You can modify and manage settings for the keystore and TDE master encryption key, and store secrets used by Oracle Database and store Oracle GoldenGate secrets in a keystore."/>
<meta name="keywords" content="Transparent Data Encryption (TDE), keystore management, changing password-based software keystore password, keystores, changing passwords for password-based software keystores, changing hardware keystore password, backing up password-based software keystores, about, backup identifier rules, procedure, hardware keystores, backing up, hardware security modules, backing up keystores, merging keystores, about, merging, merging keystores, two into a third new keystore, two into a third new keystore, merging keystores, one into an existing, one into another existing keystore, auto-login into password-based, merging keystores, auto-login into password-based, merging keystores, reversing merge operation, reversing merge operation, moving out of ASM, Automatic Storage Management (ASM), moving software keystores from, migrating password key and hardware keystore, sqlnet.ora configuration, migrating, password key into hardware keystore, creating master encryption key for hardware keystore-based encryption, migrating password key and hardware keystore, master encryption key creation, migrating password key and hardware keystore, reverse migration, hardware keystore to software keystore, keystore order after migration, V$ENCRYPTION_WALLET view, Oracle Key Vault, migration of keystores, migration using Oracle Key Vault, closing software keystore, closing software keystores, closing hardware keystores, closing hardware keystores, closing, ASM-based keystore, ASM-based, Oracle Recovery Manager, Transparent Data Encryption, Transparent Data Encryption (TDE) keystores, deleting, TDE master encryption keys, creating for later use, examples, activating, example, master encryption key attributes, attributes, finding currently used key, custom attribute tags, creating, creating custom tags, setting in keystore, master encryption keys, setting in keystore procedure, setting in keystore, about, disabling not allowed, resetting in keystore, rotating, master encryption key, auto login, auto login keystores, and Transparent Data Encryption (TDE), exporting and importing, exporting, importing, keystore merge differing from import or export, master encryption key merge differing from import or export, Oracle Database secrets, secrets, storing Oracle Database secrets in keystore, storing in software keystore, storing in hardware keystore, using auto-login hardware keystore, storing Oracle GoldenGate secrets, Oracle GoldenGate, storing secrets in Oracle keystores"/>
<meta name="dcterms.created" content="2017-06-05T10:46:18Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Database Advanced Security Guide"/>
<meta name="dcterms.identifier" content="E50333-18"/>
<meta name="dcterms.isVersionOf" content="ASOAG"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html"/>
<link rel="Prev" href="configuring-transparent-data-encryption.htm" title="Previous" type="text/html"/>
<link rel="Next" href="general-considerations-of-using-transparent-data-encryption.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E50333-18.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-0C080CA8-1812-4DCD-AC30-FE47534C7962"></a> <span id="PAGE" style="display:none;">9/21</span> <!-- End Header -->
<a id="ASOAG10475"></a>
<h1 class="sect1"><span class="enumeration_chapter">4</span> Managing the Keystore and the TDE Master&nbsp;Encryption Key</h1>
<div>
<p>You can modify and manage settings for the keystore and TDE master encryption key, and store secrets used by Oracle Database and store Oracle GoldenGate secrets in a keystore.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-B9108322-E1B4-4B24-9D0C-E90B4F30A076" title="You can perform maintenance activities on keystores such as changing passwords, and backing up, merging, and moving keystores.">Managing the Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-CDF39F23-2371-4E93-A503-25798F1E97E4" title="You can manage the TDE master encryption key in several ways.">Managing the TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FF270B27-A456-477A-81E0-50E74926A810" title="Secrets are data that support internal Oracle Database features and enable external clients such as Oracle GoldenGate to be integrated into the database.">Storing Secrets Used by Oracle Database</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FBAC7644-B19F-4899-8FA0-0C487CABF368" title="You can store Oracle GoldenGate secrets in Transparent Data Encryption keystores.">Storing Oracle GoldenGate Secrets in a Keystore</a></p>
</li>
</ul>
</div>
<a id="ASOAG10311"></a>
<div class="props_rev_3"><a id="GUID-B9108322-E1B4-4B24-9D0C-E90B4F30A076"></a>
<h2 class="sect2">Managing the Keystore</h2>
<div>
<p>You can perform maintenance activities on keystores such as changing passwords, and backing up, merging, and moving keystores.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-56595198-9FD2-4857-9BB9-D908BA89904C" title="Oracle Database enables you to easily change password-based software keystore passwords.">Changing the Password of a Password-Based Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-ADE52945-DC1A-4F59-9BA5-0813208017C3" title="To change the password of a hardware keystore, you must use the ADMINISTER KEY MANAGEMENT statement.">Changing the Password of a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-43BBC184-F801-45A9-B4D0-BB7E9767AED0" title="When you back up a password-based software keystore, you optionally can create a backup identifier string to describe the type of backup.">Backing Up Password-Based Software Keystores</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-3A7806BB-B5C2-4DF4-9EA9-15715FF36B30" title="You cannot use Oracle Database to back up hardware keystores.">Backups of the Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DF77BD8F-83FC-4F0F-8B2D-2E51D753A6F1" title="You can merge software keystores in a variety of ways, such as merging two keystores to create a third keystore, merging one keystore into an existing keystore, or merging an auto-login software keystore into a password-based software keystore.">Merging Software Keystores</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-B3BEFCC2-0817-4C55-869D-6D3BEC42F6C4" title="To move a software keystore to a new location, you must back up and close the keystore, edit the sqlnet.ora file, and then physically move the keystore to the new location.">Moving a Software Keystore to a New Location</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-6CB2C353-44C5-46B5-9CDB-2B4D9D0841BC" title="You can use the ADMINISTER KEY MANAGEMENT statement to move a software keystore out Automatic Storage Management.">Moving a Software Keystore Out of Automatic Storage Management</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-4335220F-49FF-40BC-9EB0-21442608F436" title="You can migrate between password-based software keystores and hardware keystores.">Migrating Between a Software Password Keystore and a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-83DE1475-04DD-4B85-9CFA-D00AB0013EC8" title="You can use Oracle Key Vault to migrate both software and hardware keystores to and from Oracle Key Vault. This enables you to manage the keystores centrally, and then share the keystores as necessary with other TDE-enabled databases in your enterprise.">Migration of Keystores to and from Oracle Key Vault</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-672990D8-A3C6-45A0-BEA8-86B7104FE402" title="You can manually close software and hardware keystores.">Closing a Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-F4765A9F-2E48-4C51-9FDE-88F9B4617074" title="You can store a software keystore on an Automatic Storage Management (ASM) disk group.">Using a Software Keystore That Resides on ASM Volumes</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-F11271F4-7789-4F0D-B999-86DAFBE9152C" title="For software keystores, you cannot access encrypted data without the TDE master encryption key.">Backup and Recovery of Encrypted Data</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-5CC83A60-8EA4-4984-AD2C-42BC12E5A16F" title="Oracle strongly recommends that you do not delete keystores, particularly after you have configured Transparent Data Encryption and the keystore is in use.">Deletion of Keystores</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-B9108322-E1B4-4B24-9D0C-E90B4F30A076__GUID-0608D4D6-BCCB-4895-B12C-4DE940E77045">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-1FA85E9E-5666-4CF3-A3C7-1F8A9230B0C9" title="A software keystore is a container for the TDE master encryption key, and it resides in the software file system.">Configuring a Software Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-753C4808-CC51-4DA1-A5C3-980417FDAB14" title="A hardware keystore resides in a hardware security module (HSM), which is designed to store encryption keys.">Configuring a Hardware Keystore</a></p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10312"></a>
<div class="props_rev_3"><a id="GUID-56595198-9FD2-4857-9BB9-D908BA89904C"></a>
<h3 class="sect3">Changing the Password of a Password-Based Software Keystore</h3>
<div>
<p>Oracle Database enables you to easily change password-based software keystore passwords.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-4F880551-71F9-4181-97F4-0604C1B3F3E5" title="You can only change (rotate) the password for password-based software keystores.">About Changing the Password of a Password-Based Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-530B3EDF-393D-41C8-A393-B643DF0143A0" title="To change the password of a password-based software keystore, you must use the ADMINISTER KEY MANAGEMENT statement.">Changing the Password-Based Software Keystore Password</a></p>
</li>
</ul>
</div>
<a id="ASOAG10518"></a>
<div class="props_rev_3"><a id="GUID-4F880551-71F9-4181-97F4-0604C1B3F3E5"></a>
<h4 class="sect4">About Changing the Password of a Password-Based Software Keystore</h4>
<div>
<p>You can only change (rotate) the password for password-based software keystores.</p>
<p>You can change this password at any time, as per the security policies, compliance guidelines, and other security requirements of your site. As part of the command to change the password, you will be forced to specify the <code class="codeph">WITH BACKUP</code> clause, and thus forced to make a backup of the current keystore. During the password change operation, Transparent Data Encryption operations such as encryption and decryption will continue to work normally.</p>
<p>You can change this password at any time. You may want to change this password if you think it was compromised.</p>
</div>
</div>
<a id="ASOAG10519"></a>
<div class="props_rev_3"><a id="GUID-530B3EDF-393D-41C8-A393-B643DF0143A0"></a>
<h4 class="sect4">Changing the Password-Based Software Keystore Password</h4>
<div>
<p>To change the password of a password-based software keystore, you must use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ALTER KEYSTORE PASSWORD IDENTIFIED BY
<span class="italic">old_password</span> SET <span class="italic">new_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">old_password</code></span> is the current keystore password that you want to change.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">new_password</code></span> is the new password that you set for the keystore.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> creates a backup of the current keystore before the password is changed. You must include this clause.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">backup_identifier</code></span> specifies an optional identifier string for the backup that is created. The <span class="italic"><code class="codeph">backup_identifier</code></span> is added to the name of the backup file. Enclose <span class="italic"><code class="codeph">backup_identifier</code></span> in single quotation marks (&#39;&nbsp;&#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time_stamp</code></span><code class="codeph">_emp_key_pwd_change.p12</code>).</p>
</li>
</ul>
<p>The following example backs up the current keystore and then changes the password for the keystore:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ALTER KEYSTORE PASSWORD IDENTIFIED BY
<span class="italic">old_password</span> SET <span class="italic">new_password</span> WITH BACKUP USING &#39;pwd_change&#39;;

keystore altered.
</pre></li>
</ol>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10397"></a>
<div class="props_rev_3"><a id="GUID-ADE52945-DC1A-4F59-9BA5-0813208017C3"></a>
<h3 class="sect3">Changing the Password of a Hardware Keystore</h3>
<div>
<p>To change the password of a hardware keystore, you must use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Close the hardware keystore.</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;
</pre>
<p>See <span class="q">&#34;<a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-C8CF91A0-9EF9-4479-880D-1D8C2FBE05B2" title="To close a hardware keystore, you must use the ADMINISTER KEY MANAGEMENT statement with the SET KEYSTORE CLOSE clause.">Closing a Hardware Keystore</a>&#34;</span>.</p>
</li>
<li>
<p>From the hardware security module management interface, create a new hardware security module password.</p>
</li>
<li>
<p>In SQL*Plus, open the hardware keystore.</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY &#34;psmith:<span class="italic">new_password</span>&#34;;
</pre>
<p>See <span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a>&#34;</span>.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10313"></a>
<div class="props_rev_3"><a id="GUID-43BBC184-F801-45A9-B4D0-BB7E9767AED0"></a>
<h3 class="sect3">Backing Up Password-Based Software Keystores</h3>
<div>
<p>When you back up a password-based software keystore, you optionally can create a backup identifier string to describe the type of backup.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-3B1B2668-8F8A-48C0-9E97-10576CD78DFA" title="You must back up password-based software keystores, as per the security policy and requirements of your site.">About Backing Up Password-Based Software Keystores</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-99B51117-42E3-4BB8-825B-48CDF62FDD63" title="The backup file name of a software password keystore is derived from the name of the password-based software keystore.">Creating a Backup Identifier String for the Backup Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0AB9DABF-266A-400A-953A-81B5A379A0D5" title="In the V$ENCRYPTION_WALLET view, the BACKUP column indicates if a copy of the keystore had been created with the WITH BACKUP clause of the ADMINISTER KEY MANAGEMENT statement or the ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE statement.">How the V$ENCRYPTION_WALLET View Interprets Backup Operations</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-645FA0D7-1AAB-48B9-AD7D-9FC2C13ED352" title="To back up a password-based software keystore, you must use the ADMINISTER KEY MANAGEMENT statement with the BACKUP KEYSTORE clause.">Backing Up a Password-Based Software Keystore</a></p>
</li>
</ul>
</div>
<a id="ASOAG10409"></a>
<div class="props_rev_3"><a id="GUID-3B1B2668-8F8A-48C0-9E97-10576CD78DFA"></a>
<h4 class="sect4">About Backing Up Password-Based Software Keystores</h4>
<div>
<p>You must back up password-based software keystores, as per the security policy and requirements of your site.</p>
<p>A backup of the keystore contains all of the keys contained in the original keystore. Oracle Database prefixes the backup keystore with the creation time stamp (UTC). If you provide an identifier string, then this string is inserted between the time stamp and keystore name.</p>
<p>After you complete the backup operation, the keys in the original keystore are marked as &#34;backed up&#34;. You can check the status of keys querying the <code class="codeph">V$ENCRYPTION_WALLET</code> data dictionary view.</p>
<p>You cannot back up auto-login or local auto-login software keystores. No new keys can be added to them directly through the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement operations. The information in these keystores is only read and hence there is no need for a backup.</p>
<p>If you have not yet backed up the keystore, then you can include the <code class="codeph">BACKUP</code> clause in the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement when you create the TDE master encryption key. This both backs up the keystore and creates the TDE master encryption key. (<a href="configuring-transparent-data-encryption.htm#GUID-15E41F0A-5D80-4A7A-88F6-30EE86FA44E8" title="Once the keystore is open, you can set a TDE master encryption key for it.">Step 4: Set the Software TDE Master Encryption Key</a> shows an example of how to accomplish this.)</p>
</div>
</div>
<a id="ASOAG10540"></a><a id="ASOAG10410"></a>
<div class="props_rev_3"><a id="GUID-99B51117-42E3-4BB8-825B-48CDF62FDD63"></a>
<h4 class="sect4">Creating a Backup Identifier String for the Backup Keystore</h4>
<div>
<p>The backup file name of a software password keystore is derived from the name of the password-based software keystore.</p>
<div class="section">
<p>Oracle Database prefixes the software keystore password file name with the file creation time stamp in UTC format. If you provide an identifier string, then this string is inserted between the time stamp and keystore name.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>To create a backup identifier string for a backup keystore, use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> SQL statement with the <code class="codeph">BACKUP KEYSTORE</code> clause, with the following syntax:</p>
<pre dir="ltr">ewallet_<span class="italic">creation-time-stamp-in-UTC</span>_<span class="italic">user-defined-string</span>.p12
</pre>
<p>When you create the backup identifier (<span class="italic"><code class="codeph">user_defined_string</code></span>), use the operating system file naming convention. For example, in UNIX systems, you may want to ensure that this setting does not have spaces.</p>
</li>
</ul>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-99B51117-42E3-4BB8-825B-48CDF62FDD63__BGBIEGAE">Example 4-1</a> shows the creation of a backup keystore that uses a bug number as the user-identified string, and how the resultant keystore appears in the file system.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-99B51117-42E3-4BB8-825B-48CDF62FDD63__BGBIEGAE">
<p class="titleinexample">Example 4-1 Creating a Backup Identifier String for a Backup Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE USING &#39;BUG12966094&#39; IDENTIFIED BY <span class="italic">keystore_password</span>;
</pre>
<p>Resultant keystore file:</p>
<pre dir="ltr">ewallet_2013041513244657_BUG12966094.p12
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10505"></a>
<div class="props_rev_3"><a id="GUID-0AB9DABF-266A-400A-953A-81B5A379A0D5"></a>
<h4 class="sect4">How the V$ENCRYPTION_WALLET View Interprets Backup Operations</h4>
<div>
<p>In the <code class="codeph">V$ENCRYPTION_WALLET</code> view, the <code class="codeph">BACKUP</code> column indicates if a copy of the keystore had been created with the <code class="codeph">WITH BACKUP</code> clause of the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement or the <code class="codeph">ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE</code> statement.</p>
<p>When you modify a key or a secret, the modifications that you make do not exist in the previously backed-up copy, because you make a copy and then modify the key itself. Because there is no copy of the modification in the previous keystores, the <code class="codeph">BACKUP</code> column is set to <code class="codeph">NO</code>, even if the <code class="codeph">BACKUP</code> had been set to <code class="codeph">YES</code> previously. Hence, if the <code class="codeph">BACKUP</code> column is <code class="codeph">YES</code>, then after you perform an operation that requires a backup, such as adding a custom attribute tag, the <code class="codeph">BACKUP</code> column value changes to <code class="codeph">NO</code>.</p>
</div>
</div>
<a id="ASOAG10411"></a>
<div class="props_rev_3"><a id="GUID-645FA0D7-1AAB-48B9-AD7D-9FC2C13ED352"></a>
<h4 class="sect4">Backing Up a Password-Based Software Keystore</h4>
<div>
<p>To back up a password-based software keystore, you must use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">BACKUP KEYSTORE</code> clause.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE [USING &#39;<span class="italic">backup_identifier</span>&#39;] 
IDENTIFIED BY <span class="italic">software_keystore_password</span> [TO &#39;<span class="italic">keystore_location</span>&#39;];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">USING</code> <span class="italic"><code class="codeph">backup_identifier</code></span> is an optional string that you can provide to identify the backup. Enclose this identifier in single quotation marks (&#39;&nbsp;&#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><code class="codeph">_emp_key_backup.p12</code>).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the password for the keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_location</code></span> is the path at which the backup keystore is stored. If you do not specify the <span class="italic"><code class="codeph">keystore_location</code></span>, then the backup is created in the same directory as the original keystore. Enclose this location in single quotation marks (&#39; &#39;).</p>
</li>
</ul>
<p>The following example backs up a software keystore in the same location as the source keystore:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT BACKUP KEYSTORE USING &#39;hr.emp_keystore&#39; IDENTIFIED BY 
<span class="italic">password</span> TO &#39;/etc/ORACLE/KEYSTORE/DB1/&#39;;

keystore altered.
</pre>
<p>After you run this statement, an <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">identifier</code></span><code class="codeph">.p12</code> file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><code class="codeph">_hr.emp_keystore.p12</code>) appears in the keystore location.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10506"></a>
<div class="props_rev_3"><a id="GUID-3A7806BB-B5C2-4DF4-9EA9-15715FF36B30"></a>
<h3 class="sect3">Backups of the Hardware Keystore</h3>
<div>
<p>You cannot use Oracle Database to back up hardware keystores.</p>
<p>See your HSM vendor instructions for information about backing up keys for hardware keystores.</p>
</div>
</div>
<a id="ASOAG10314"></a>
<div class="props_rev_3"><a id="GUID-DF77BD8F-83FC-4F0F-8B2D-2E51D753A6F1"></a>
<h3 class="sect3">Merging Software Keystores</h3>
<div>
<p>You can merge software keystores in a variety of ways, such as merging two keystores to create a third keystore, merging one keystore into an existing keystore, or merging an auto-login software keystore into a password-based software keystore.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0CF462D4-4920-480F-B967-4569F4459C86" title="You can merge any combination of the software keystores. However, the merged keystore must be a password-based software keystore, and it can have a password that is different from the constituent keystores.">About Merging Software Keystores</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-D6DE486E-90EA-403D-8FCD-31A0DCE38E80" title="You can merge two software keystores into a third new keystore, so that the two existing keystores are not changed.">Merging Two Software Keystores into a Third New Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-31237A4D-B35D-4EC7-92A1-957A193A3E23" title="You can use the ADMINISTER KEY MANAGEMENT statement with the MERGE KEYSTORE clause to merge one software keystore into another existing software keystore.">Merging One Software Keystore into an Existing Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0F748689-BA29-4DA0-8C3F-BF0404E83621" title="You can merge an auto-login software keystore into an existing password-based software keystore.">Merging an Auto-Login Software Keystore into an Existing Password-Based Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-C87C030F-43ED-420A-A896-9860A9CF33F4" title="You cannot directly reverse a keystore merge operation.">Reversing a Software Keystore Merge Operation</a></p>
</li>
</ul>
</div>
<a id="ASOAG10315"></a>
<div class="props_rev_3"><a id="GUID-0CF462D4-4920-480F-B967-4569F4459C86"></a>
<h4 class="sect4">About Merging Software Keystores</h4>
<div>
<p>You can merge any combination of the software keystores. However, the merged keystore must be a password-based software keystore, and it can have a password that is different from the constituent keystores.</p>
<p>To use the merged keystore, you must explicitly open the merged keystore after you create it, even if one of the constituent keystores was already open before the merge.</p>
<p>Whether a common key from two source keystores is added or overwritten to a merged keystore depends on how you write the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> merge statement. For example, if you merge Keystore 1 and Keystore 2 to create Keystore 3, then the key in Keystore 1 is added to Keystore 3. If you merge Keystore 1 into Keystore 2, then the common key in Keystore 2 is not overwritten.</p>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT</code> merge statement has no bearing on the configured keystore that is in use. However, the merged keystore can be used as the new configured database keystore if you want. Remember that you must reopen the keystore if you are using the newly created keystore as the keystore for the database at the location configured by the <code class="codeph">sqlnet.ora</code> file.</p>
<div class="infoboxnotealso" id="GUID-0CF462D4-4920-480F-B967-4569F4459C86__GUID-A8DF6B1E-C8A9-4C2E-9B55-B947CC42F5E4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-4335220F-49FF-40BC-9EB0-21442608F436" title="You can migrate between password-based software keystores and hardware keystores.">Migrating Between a Software Password Keystore and a Hardware Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-D6DE486E-90EA-403D-8FCD-31A0DCE38E80"></a>
<h4 class="sect4">Merging Two Software Keystores into a Third New Keystore</h4>
<div>
<p>You can merge two software keystores into a third new keystore, so that the two existing keystores are not changed.</p>
<ol>
<li class="stepexpand"><span>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</span>
<div>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></div>
</li>
<li class="stepexpand"><span>Run the following SQL statement:</span>
<div>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE &#39;<span class="italic">keystore1_location</span>&#39; 
[IDENTIFIED BY <span class="italic">software_keystore1_password</span>] AND KEYSTORE &#39;<span class="italic">keystore2_location</span>&#39; 
[IDENTIFIED BY <span class="italic">software_keystore2_password</span>] 
INTO NEW KEYSTORE &#39;<span class="italic">keystore3_location</span>&#39; 
IDENTIFIED BY <span class="italic">software_keystore3_password</span>;
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">keystore1_location</code></span> is the directory location of the first keystore, which will be left unchanged after the merge. Enclose this path in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p>The <code class="codeph">IDENTIFIED BY</code> clause is required for the first keystore if it is a password-based keystore. <span class="italic"><code class="codeph">software_keystore1_password</code></span> is the current password for the first keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore2_location</code></span> is the directory location of the second keystore. Enclose this path in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p>The <code class="codeph">IDENTIFIED BY</code> clause is required for the second keystore if it is a password-based keystore. <span class="italic"><code class="codeph">software_keystore2_password</code></span> is the current password for the second keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore3_location</code></span> specifies the directory location of the new, merged keystore. Enclose this path in single quotation marks (&#39; &#39;). If there is already an existing keystore at this location, the command exits with an error.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore3_password</code></span> is the new password for the merged keystore.</p>
</li>
</ul>
<p>The following example merges an auto-login software keystore with a password-based keystore to create a merged password-based keystore at a new location:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB1&#39; 
AND KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB2&#39; 
IDENTIFIED BY <span class="italic">existing_password_for_keystore_2</span> 
INTO NEW KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB3&#39; 
IDENTIFIED BY <span class="italic">new_password_for_keystore_3</span>;

keystore altered.
</pre></div>
</li>
</ol>
</div>
</div>
<a id="ASOAG10317"></a>
<div class="props_rev_3"><a id="GUID-31237A4D-B35D-4EC7-92A1-957A193A3E23"></a>
<h4 class="sect4">Merging One Software Keystore into an Existing Software Keystore</h4>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">MERGE KEYSTORE</code> clause to merge one software keystore into another existing software keystore.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>To perform this type of merge, follow the steps in <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-D6DE486E-90EA-403D-8FCD-31A0DCE38E80" title="You can merge two software keystores into a third new keystore, so that the two existing keystores are not changed.">Merging Two Software Keystores into a Third New Keystore</a> but use the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE &#39;<span class="italic">keystore1_location</span>&#39; 
[IDENTIFIED BY <span class="italic">software_keystore1_password</span>] 
INTO EXISTING KEYSTORE &#39;<span class="italic">keystore2_location</span>&#39; 
IDENTIFIED BY <span class="italic">software_keystore2_password</span> 
[WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>]];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">keystore1_location</code></span> is the directory location of the first keystore, which will be left unchanged after the merge. Enclose this path in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p>The <code class="codeph">IDENTIFIED BY</code> clause is required for the first keystore if it is a password-based keystore. <span class="italic"><code class="codeph">software_keystore1_password</code></span> is the password for the first keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore2_location</code></span> is the directory location of the second keystore into which the first keystore is to be merged. Enclose this path in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore2_password</code></span> is the password for the second keystore.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> creates a backup of the software keystore. Optionally, you can use the <code class="codeph">USING</code> clause to add a brief description of the backup. Enclose this description in single quotation marks (&#39; &#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><span class="italic"><code class="codeph">_emp_key_backup</code></span><code class="codeph">.p12</code>, with <span class="italic"><code class="codeph">emp_key_backup</code></span> being the backup identifier). Follow the file naming conventions that your operating system uses.</p>
</li>
</ul>
</li>
</ul>
<p>The resultant keystore after the merge operation is always a password-based keystore.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10463"></a><a id="ASOAG10318"></a>
<div class="props_rev_3"><a id="GUID-0F748689-BA29-4DA0-8C3F-BF0404E83621"></a>
<h4 class="sect4">Merging an Auto-Login Software Keystore into an Existing Password-Based Software Keystore</h4>
<div>
<p>You can merge an auto-login software keystore into an existing password-based software keystore.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the <code class="codeph">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE</code> SQL statement to merge an auto-login software keystore into an existing password-based software keystore.</p>
</li>
</ul>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0F748689-BA29-4DA0-8C3F-BF0404E83621__CIHJCHCI">Example 4-2</a> shows how to merge an auto-login software keystore into a password-based software keystore. It also creates a backup of the second keystore before creating the merged keystore.</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-0F748689-BA29-4DA0-8C3F-BF0404E83621__CIHJCHCI">
<p class="titleinexample">Example 4-2 Merging a Software Auto-Login Keystore into a Password Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB1&#39; 
INTO EXISTING KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB2&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP;
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">MERGE KEYSTORE</code> must specify the auto-login keystore.</p>
</li>
<li>
<p><code class="codeph">EXISTING KEYSTORE</code> refers to the password keystore.</p>
</li>
</ul>
</div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10319"></a>
<div class="props_rev_3"><a id="GUID-C87C030F-43ED-420A-A896-9860A9CF33F4"></a>
<h4 class="sect4">Reversing a Software Keystore Merge Operation</h4>
<div>
<p>You cannot directly reverse a keystore merge operation.</p>
<div class="section">
<p>When you merge a keystore into an existing keystore (rather than creating a new one), you must include the <code class="codeph">WITH BACKUP</code> clause in the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement to create a backup of this existing keystore. Later on, if you decide that you must reverse the merge, you can replace the merged software keystore with the one that you backed up.</p>
<p>In other words, suppose you want merge Keystore A into Keystore B. By using the <code class="codeph">WITH BACKUP</code> clause, you create a backup for Keystore B before the merge operation begins. (The original Keystore A is still intact.) To reverse the merge operation, revert to the backup that you made of Keystore B.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the <code class="codeph">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE</code> SQL statement to perform merge operations.</p>
<ul style="list-style-type: disc;">
<li>
<p>For example, to perform a merge operation into an existing keystore:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB1&#39; 
INTO EXISTING KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB2&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP USING &#34;merge1&#34;;
</pre>
<p>Replace the new keystore with the backup keystore, which in this case would be named <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><code class="codeph">_merge1.p12</code>.</p>
</li>
<li>
<p>To merge an auto-login keystore into a password-based keystore, use the <code class="codeph">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE</code> SQL statement.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10337"></a>
<div class="props_rev_3"><a id="GUID-B3BEFCC2-0817-4C55-869D-6D3BEC42F6C4"></a>
<h3 class="sect3">Moving a Software Keystore to a New Location</h3>
<div>
<p>To move a software keystore to a new location, you must back up and close the keystore, edit the <code class="codeph">sqlnet.ora</code> file, and then physically move the keystore to the new location.</p>
<div class="section">
<p>If you are using Oracle Key Vault, then you can configure a TDE direct connection where Key Vault directly manages the TDE master keys. In this case, you will never need to manually move the keystore to a new location. See <a class="olink OKVAG10564" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OKVAG10564"><span class="italic">Oracle Key Vault Administrator&#39;s Guide</span></a> for more information about using a TDE direct connection.</p>
</div>
<!-- class="section" -->
<div class="section">
<ol>
<li>
<p>Log <a id="d11243e2183" class="indexterm-anchor"></a>in to <a id="d11243e2188" class="indexterm-anchor"></a>the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root or to the pluggable database (PDB). For example, to log in to a PDB called <code class="codeph">hrpdb</code>:</p>
<pre dir="ltr">sqlplus sec_admin@hrpdb as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</li>
<li>
<p>Make a backup copy of the software keystore.</p>
<p>See <span class="q">&#34;<a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-43BBC184-F801-45A9-B4D0-BB7E9767AED0" title="When you back up a password-based software keystore, you optionally can create a backup identifier string to describe the type of backup.">Backing Up Password-Based Software Keystores</a>&#34;</span>.</p>
</li>
<li>
<p>Close the software keystore.</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE; -- <span class="italic">For an auto-login software keystore</span>

ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY <span class="italic">software_keystore_password</span>; -- <span class="italic">For a password-based software keystore</span>
</pre></li>
<li>
<p>Exit the database session.</p>
<p>For example, if you are logged in to SQL*Plus:</p>
<pre dir="ltr">EXIT
</pre></li>
<li>
<p>Back up and then manually edit the <code class="codeph">sqlnet.ora</code> file to point to the new location where you want to move the keystore.</p>
<p>See the <span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-93527DE3-9186-444E-BCD0-63ED029E1ECB" title="The first step you must take to configure a software keystore is to designate a location for it in the sqlnet.ora file.">Step 1: Set the Software Keystore Location in the sqlnet.ora File</a>&#34;</span> for more information.</p>
</li>
<li>
<p>Use the operating system move command (such as <code class="codeph">mv</code>) to move the keystore with all of its keys to the new directory location.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<div class="sect3"><a id="GUID-6CB2C353-44C5-46B5-9CDB-2B4D9D0841BC"></a>
<h3 class="sect3">Moving a Software Keystore Out of Automatic Storage Management</h3>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement to move a software keystore out Automatic Storage Management.</p>
<ol>
<li class="stepexpand"><span>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</span>
<div>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the show <code class="codeph">con_name</code> command.</p>
</div>
</li>
<li class="stepexpand"><span>Initialize a target keystore on the file system by using the following syntax:</span>
<div>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEYSTORE <span class="italic">targetKeystorePath</span> IDENTIFIED BY <span class="italic">targetKeystorePassword</span>;
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph"><span class="codeinlineitalic">targetKeystorePath</span></code> is the directory path to the target keystore on the file system.</p>
</li>
<li>
<p><code class="codeph"><span class="codeinlineitalic">targetKeystorePassword</span></code> is a password that you create for the keystore.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB1/&#39; IDENTIFIED BY &#34;<span class="italic">targetKeystorePassword</span>&#34;; 
</pre></div>
</li>
<li class="stepexpand"><span>Copy the keystore from ASM to the target keystore that you just created.</span>
<div>
<p>This step requires that you merge the keystore from ASM to the file system, as follows:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE <span class="italic">srcKeystorePath</span> IDENTIFIED BY <span class="italic">srcKeystorePassword</span> INTO EXISTING KEYSTORE <span class="italic">targetKeystorePath</span> IDENTIFIED BY <span class="italic">targetKeystorePassword</span> WITH BACKUP USING <span class="italic">backupIdentifier</span>;
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph"><span class="codeinlineitalic">srcKeystorePath</span></code> is the directory path to the source keystore.</p>
</li>
<li>
<p><code class="codeph"><span class="codeinlineitalic">srcKeystorePassword</span></code> is th source keystore password.</p>
</li>
<li>
<p><code class="codeph"><span class="codeinlineitalic">targetKeystorePath</span></code> is the path to the target keystore.</p>
</li>
<li>
<p><code class="codeph"><span class="codeinlineitalic">targetKeystorePassword</span></code> is the target keystore password.</p>
</li>
<li>
<p><code class="codeph"><span class="codeinlineitalic">backupIdentifier</span></code> is the backup identifier to be added to the backup file name.</p>
</li>
</ul>
</div>
<div>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MERGE KEYSTORE &#39;+DATAFILE&#39; IDENTIFIED BY &#34;srcPassword&#34; INTO EXISTING KEYSTORE &#39;/etc/ORACLE/KEYSTORE/DB1/&#39; IDENTIFIED BY &#34;<span class="italic">targetKeystorePassword</span>&#34; WITH BACKUP USING &#34;bkup&#34;;
</pre></div>
</li>
</ol>
</div>
</div>
<a id="ASOAG10323"></a>
<div class="props_rev_3"><a id="GUID-4335220F-49FF-40BC-9EB0-21442608F436"></a>
<h3 class="sect3">Migrating Between a Software Password Keystore and a Hardware Keystore</h3>
<div>
<p>You can migrate between password-based software keystores and hardware keystores.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-99267A06-A5B9-4051-A833-4F61F598A1B1" title="You can migrate from a password-based software keystore to a hardware keystore.">Migrating from a Password-Based Software Keystore to a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-01C2DB62-E887-4BD9-AFDB-B8772E52A450" title="You can migrate a hardware keystore to a software keystore.">Migrating from a Hardware Keystore to a Password-Based Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-F87514AE-4D8B-475F-A5D9-85C4737C7D70" title="After you perform a migration, keystores can be either primary or secondary in their order.">Keystore Order After a Migration</a></p>
</li>
</ul>
</div>
<a id="ASOAG10377"></a>
<div class="props_rev_3"><a id="GUID-99267A06-A5B9-4051-A833-4F61F598A1B1"></a>
<h4 class="sect4">Migrating from a Password-Based Software Keystore to a Hardware Keystore</h4>
<div>
<p>You can migrate from a password-based software keystore to a hardware keystore.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-5698CCCE-43CC-4E8D-9B03-211EE3EFCABF" title="Tools such as Oracle Data Pump and Oracle Recovery Manager require access to the old software keystore to perform decryption and encryption operations on data that was exported or backed up using the software keystore.">Step 1: Convert the Software Keystore to Open with the Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FDA226C3-A9C1-41CC-8FCE-5FE89071D615" title="After keystore migration, you are ready to open both the software and hardware keystore operations to enable access to keys created in the software keystore when required.">Step 2: Configure sqlnet.ora for the Migration of the Password-Based Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-64DECC07-1E78-43D9-8431-948ABE44AC85" title="You can use the ADMINISTER KEY MANAGEMENT SQL statement to perform a hardware keystore migration.">Step 3: Perform the Hardware Keystore Migration</a></p>
</li>
</ul>
</div>
<a id="ASOAG10507"></a>
<div class="props_rev_3"><a id="GUID-5698CCCE-43CC-4E8D-9B03-211EE3EFCABF"></a>
<h5 class="sect5">Step 1: Convert the Software Keystore to Open with the Hardware Keystore</h5>
<div>
<p>Tools such as Oracle Data Pump and Oracle Recovery Manager require access to the old software keystore to perform decryption and encryption operations on data that was exported or backed up using the software keystore.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> SQL statement to convert a software keystore to a open with a hardware keystore.</p>
<ul style="list-style-type: disc;">
<li>
<p>To set the software keystore password as that of the hardware keystore, use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ALTER KEYSTORE PASSWORD 
IDENTIFIED BY <span class="italic">software_keystore_password</span> 
SET &#34;<span class="italic">user_id</span>:<span class="italic">password</span>&#34; WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the same password that you used when creating the software keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">user_id</code></span><code class="codeph">:</code><span class="italic"><code class="codeph">password</code></span> is the new software keystore password which is the same as the password of the HSM.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> creates a backup of the software keystore. Optionally, you can use the <code class="codeph">USING</code> clause to add a brief description of the backup. Enclose this description in single quotation marks (&#39; &#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><span class="italic"><code class="codeph">_emp_key_backup</code></span><code class="codeph">.p12</code>, with <span class="italic"><code class="codeph">emp_key_backup</code></span> being the backup identifier). Follow the file naming conventions that your operating system uses.</p>
</li>
</ul>
</li>
</ul>
<ul style="list-style-type: disc;">
<li>
<p>To create an auto-login keystore for a software keystore, use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE [LOCAL] AUTO_LOGIN KEYSTORE 
FROM KEYSTORE &#39;<span class="italic">keystore_location</span>&#39; 
IDENTIFIED BY <span class="italic">software_keystore_password</span>;
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">LOCAL</code> enables you to create a local auto-login software keystore. Otherwise, omit this clause if you want the keystore to be accessible by other computers.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_location</code></span> is the path to the keystore directory location of the keystore that is configured in the <code class="codeph">sqlnet.ora</code> file.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the existing password of the configured software keystore.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10325"></a><a id="ASOAG10378"></a>
<div class="props_rev_3"><a id="GUID-FDA226C3-A9C1-41CC-8FCE-5FE89071D615"></a>
<h5 class="sect5">Step 2: Configure sqlnet.ora for the Migration of the Password-Based Software Keystore</h5>
<div>
<p>After keystore migration, you are ready to open both the software and hardware keystore operations to enable access to keys created in the software keystore when required.</p>
<div class="section">
<p>For the software keystore to open with the hardware keystore, either the software keystore must have the same password as the hardware keystore, or alternatively, you can create an auto-login keystore for the software keystore.</p>
<p>If you are migrating from a software keystore to a hardware keystore, then you must edit the <code class="codeph">sqlnet.ora</code> file to use the <code class="codeph">METHOD=HSM</code> setting.</p>
<div class="infoboxnotealso" id="GUID-FDA226C3-A9C1-41CC-8FCE-5FE89071D615__GUID-8FA7F276-4998-4FDB-BCDA-FE0BB9DF2C4B">
<p class="notep1">See Also:</p>
<p><a href="configuring-transparent-data-encryption.htm#GUID-DF9504EF-BA08-4585-895D-2E5F4BA30E50" title="Oracle Database checks the sqlnet.ora file for the directory location of the keystore, whether it is a software keystore, a hardware module security (HSM) keystore, or an Oracle Key Vault keystore.">About the Keystore Location in the sqlnet.ora File</a></p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the following format in the <code class="codeph">sqlnet.ora</code> file:</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(<span class="bold">METHOD=HSM</span>)(METHOD_DATA=
    (DIRECTORY=<span class="italic">path_to_keystore</span>)))
</pre>
<p><span class="italic"><code class="codeph">path_to_software_keystore</code></span> is the path to the previously configured software keystore. Having both <code class="codeph">HSM</code> and the <code class="codeph">DIRECTORY</code> location in the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> parameter indicates that you switched between using the software keystore and the hardware keystore in the past, and it also enables you to switch back easily in the future.</p>
</li>
</ul>
<div class="infobox-note" id="GUID-FDA226C3-A9C1-41CC-8FCE-5FE89071D615__GUID-9EC57142-A486-4BA8-842A-FAF75CD7782F">
<p class="notep1">Note:</p>
<p>If a <code class="codeph">DIRECTORY</code> value is present in the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> parameter setting, then ensure that you do not delete it.</p>
<p>Although hardware keystores do not require a <code class="codeph">DIRECTORY</code> value, Oracle Database uses this value to locate your software keystore when you migrate to and from a hardware security module.</p>
</div>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FDA226C3-A9C1-41CC-8FCE-5FE89071D615__CIHBGIBE">Example 4-3</a> shows how to edit the <code class="codeph">sqlnet.ora</code> file to format a software keystore to hardware security module-based keystore or the reverse:</p>
</div>
<!-- class="section" -->
<div class="example" id="GUID-FDA226C3-A9C1-41CC-8FCE-5FE89071D615__CIHBGIBE">
<p class="titleinexample">Example 4-3 Sample ENCRYPTION_WALLET_LOCATION Entries</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(METHOD=HSM)(METHOD_DATA=
    (DIRECTORY=/app/wallet)))
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10379"></a>
<div class="props_rev_3"><a id="GUID-64DECC07-1E78-43D9-8431-948ABE44AC85"></a>
<h5 class="sect5">Step 3: Perform the Hardware Keystore Migration</h5>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> SQL statement to perform a hardware keystore migration.</p>
<div class="section">
<p>To migrate from the software keystore to hardware keystore, you must use the <code class="codeph">MIGRATE USING</code> <span class="italic"><code class="codeph">keystore_password</code></span> clause in the <code class="codeph">ADMINISTER KEY MANAGEMENT SET KEY</code> SQL statement to decrypt the existing <a href="glossary.htm#GUID-78CFC3BC-9BDD-406E-A6E2-2374AC636269"><span class="xrefglossterm">TDE table key</span></a>s and the <a href="glossary.htm#GUID-5101B9BB-386F-4826-B639-2BE246A66E90"><span class="xrefglossterm">tablespace encryption key</span></a>s with the TDE master encryption key in the software keystore and then reencrypt them with the newly created TDE master encryption key in the hardware keystore.</p>
<p>After you complete the migration, you do not need to restart the database, nor do you need to manually re-open the hardware keystore. The migration process automatically reloads the keystore keys in memory.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Use the following syntax when you run the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> SQL statement for migration:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY IDENTIFIED BY &#34;<span class="italic">user_id</span>:<span class="italic">password</span>&#34; MIGRATE USING <span class="italic">software_keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">user_id</code></span><code class="codeph">:</code><span class="italic"><code class="codeph">password</code></span> is the user ID and password that was created in Step <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291__CIHHFABB">3</a> under <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291" title="To configure a third-party hardware security module, you must copy the PKCS#11 library to the correct location and follow your vendor&#39;s instructions.">Step 2: Configure the Hardware Security Module</a> (in <a href="configuring-transparent-data-encryption.htm#GUID-C5D20EAE-3369-411F-9A7E-13AB14139F1D" title="You can configure software or hardware keystores, for use on both individual table columns or entire tablespaces.">Configuring Transparent Data Encryption</a>). Enclose this setting in double quotation marks (&#34; &#34;) and separate <span class="italic"><code class="codeph">user_id</code></span> and <span class="italic"><code class="codeph">password</code></span> with a colon (<code class="codeph">:</code>).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the same password that you used when creating the software keystore or that you have changed to in <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-5698CCCE-43CC-4E8D-9B03-211EE3EFCABF" title="Tools such as Oracle Data Pump and Oracle Recovery Manager require access to the old software keystore to perform decryption and encryption operations on data that was exported or backed up using the software keystore.">Step 1: Convert the Software Keystore to Open with the Hardware Keystore</a>.</p>
</li>
<li>
<p><code class="codeph">USING</code> enables you to add a brief description of the backup. Enclose this description in single quotation marks (&#39; &#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><code class="codeph">_</code><span class="italic"><code class="codeph">emp_key_backup</code></span><code class="codeph">.p12</code>, with <span class="italic"><code class="codeph">emp_key_backup</code></span> being the backup identifier). Follow the file naming conventions that your operating system uses.</p>
</li>
</ul>
</li>
</ul>
<div class="infobox-note" id="GUID-64DECC07-1E78-43D9-8431-948ABE44AC85__GUID-8D7EF3D3-3CFF-4484-AC63-553C2DB203C7">
<p class="notep1">Note:</p>
<p>If the database contains columns encrypted with a public key, then the columns are decrypted and reencrypted with an AES symmetric key generated by HSM-based Transparent Data Encryption.</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10327"></a>
<div class="props_rev_3"><a id="GUID-01C2DB62-E887-4BD9-AFDB-B8772E52A450"></a>
<h4 class="sect4">Migrating from a Hardware Keystore to a Password-Based Software Keystore</h4>
<div>
<p>You can migrate a hardware keystore to a software keystore.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0C8C054A-0F63-4BD1-9B4C-C2581029B463" title="If you want to switch from using a hardware keystore solution to a software keystore, then you can use reverse migration of the keystore.">About Migrating Back from a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DF8887D9-DE13-4C32-AE87-4125055AE4F9" title="First, you must edit the sqlnet.ora file.">Step 1: Configure sqlnet.ora for the Reverse Migration</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-77A58031-0DC5-4EFF-A35F-CF15B489EA59" title="To perform a reverse migration on a keystore, you can use the ADMINISTER KEY MANAGEMENT statement with the SET ENCRYPTION KEY and REVERSE MIGRATE clauses.">Step 2: Configure the Keystore for the Reverse for the Reverse Migration</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-254D94A4-E185-4ADA-8003-32DD04957031" title="After you complete the migration, you do not need to restart the database, nor do you need to manually re-open the software keystore. The migration process automatically reloads the keystore keys in memory.">Step 3: Configure the Hardware Keystore to Open with the Software Keystore</a></p>
</li>
</ul>
</div>
<a id="ASOAG10380"></a>
<div class="props_rev_3"><a id="GUID-0C8C054A-0F63-4BD1-9B4C-C2581029B463"></a>
<h5 class="sect5">About Migrating Back from a Hardware Keystore</h5>
<div>
<p>If you want to switch from using a hardware keystore solution to a software keystore, then you can use reverse migration of the keystore.</p>
<p>After you complete the switch, keep the hardware security module, in case earlier backup files rely on the TDE master encryption keys in the hardware security module.</p>
<p>If you had originally migrated from the software keystore to the hardware security module and reconfigured the software keystore as described in <a href="configuring-transparent-data-encryption.htm#GUID-5CDB2D10-81DE-4C98-9F9C-155C45E31CDB" title="You must migrate the previously configured TDE master encryption key if you previously configured a software keystore.">Migration of a Previously Configured TDE Master Encryption Key</a>, then you already have an existing keystore with the same password as the HSM password. Reverse migration configures this keystore to act as the new software keystore with a new password. If your existing keystore is an auto-login software keystore and you have the password-based software keystore for this auto-login keystore, then use the password-based keystore. If the password-based keystore is not available, then merge the auto-login keystore into a newly created empty password-based keystore, and use the newly create password-based keystore.</p>
<p>If you do not have an existing keystore, then you must specify a keystore location in the <code class="codeph">sqlnet.ora</code> file using the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> parameter. When you perform the reverse migration, migrate to the previous keystore so that you do not lose the keys.</p>
<div class="infoboxnotealso" id="GUID-0C8C054A-0F63-4BD1-9B4C-C2581029B463__GUID-06DB0CA4-2930-4DC4-9E3C-76B60B488629">
<p class="notep1">See Also:</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DF77BD8F-83FC-4F0F-8B2D-2E51D753A6F1" title="You can merge software keystores in a variety of ways, such as merging two keystores to create a third keystore, merging one keystore into an existing keystore, or merging an auto-login software keystore into a password-based software keystore.">Merging Software Keystores</a></p>
</div>
</div>
</div>
<a id="ASOAG10381"></a>
<div class="props_rev_3"><a id="GUID-DF8887D9-DE13-4C32-AE87-4125055AE4F9"></a>
<h5 class="sect5">Step 1: Configure sqlnet.ora for the Reverse Migration</h5>
<div>
<p>First, you must edit the <code class="codeph">sqlnet.ora</code> file.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Set the following configuration in the <code class="codeph">sqlnet.ora</code> file:</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(METHOD=FILE)(METHOD_DATA=
    (DIRECTORY=<span class="italic">path_to_keystore</span>)))
</pre>
<p>Replace <span class="italic"><code class="codeph">path_to_keystore</code></span> with the directory location of the destination keystore.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-DF8887D9-DE13-4C32-AE87-4125055AE4F9__GUID-E89133CA-B75A-45FC-84FD-C284C122BE1C">
<p class="notep1">See Also:</p>
<p><a href="configuring-transparent-data-encryption.htm#GUID-DF9504EF-BA08-4585-895D-2E5F4BA30E50" title="Oracle Database checks the sqlnet.ora file for the directory location of the keystore, whether it is a software keystore, a hardware module security (HSM) keystore, or an Oracle Key Vault keystore.">About the Keystore Location in the sqlnet.ora File</a></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10382"></a>
<div class="props_rev_3"><a id="GUID-77A58031-0DC5-4EFF-A35F-CF15B489EA59"></a>
<h5 class="sect5">Step 2: Configure the Keystore for the Reverse for the Reverse Migration</h5>
<div>
<p>To perform a reverse migration on a keystore, you can use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">SET ENCRYPTION KEY</code> and <code class="codeph">REVERSE MIGRATE</code> clauses.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY IDENTIFIED BY <span class="italic">software_keystore_password</span> REVERSE MIGRATE USING &#34;<span class="italic">user_id</span>:<span class="italic">password</span>&#34; [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]]; 
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the password for the existing keystore or the new keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">user_id</code></span><code class="codeph">:</code><span class="italic"><code class="codeph">password</code></span> is the user ID and password that was created in Step <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291__CIHHFABB">3</a> in <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291" title="To configure a third-party hardware security module, you must copy the PKCS#11 library to the correct location and follow your vendor&#39;s instructions.">Step 2: Configure the Hardware Security Module</a> (in <a href="configuring-transparent-data-encryption.htm#GUID-C5D20EAE-3369-411F-9A7E-13AB14139F1D" title="You can configure software or hardware keystores, for use on both individual table columns or entire tablespaces.">Configuring Transparent Data Encryption</a>). If the pre-hardware security module software keystore is the new keystore, then you must ensure that it has the same password as the <span class="italic"><code class="codeph">user_id</code></span><code class="codeph">:</code><span class="italic"><code class="codeph">password</code></span> before issuing the reverse migration command. Enclose this setting in double quotation marks (&#34; &#34;).</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> creates a backup of the software keystore. Optionally, you can include the <code class="codeph">USING</code> clause to add a brief description of the backup. Enclose this description in single quotation marks (&#39; &#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><code class="codeph">_</code><span class="italic"><code class="codeph">emp_key_backup</code></span><code class="codeph">.p12</code>, with <span class="italic"><code class="codeph">emp_key_backup</code></span> being the backup identifier). Follow the file naming conventions that your operating system uses.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY IDENTIFIED BY <span class="italic">password</span> REVERSE MIGRATE USING &#34;psmith:<span class="italic">password</span>&#34; WITH BACKUP;

keystore altered.
</pre></li>
<li>
<p>Optionally, change the keystore password.</p>
<p>See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-56595198-9FD2-4857-9BB9-D908BA89904C" title="Oracle Database enables you to easily change password-based software keystore passwords.">Changing the Password of a Password-Based Software Keystore</a> for more information.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10508"></a>
<div class="props_rev_3"><a id="GUID-254D94A4-E185-4ADA-8003-32DD04957031"></a>
<h5 class="sect5">Step 3: Configure the Hardware Keystore to Open with the Software Keystore</h5>
<div>
<p>After you complete the migration, you do not need to restart the database, nor do you need to manually re-open the software keystore. The migration process automatically reloads the keystore keys in memory.</p>
<p>The hardware keystore may still be required after reverse migration because the old keys are likely to have been used for encrypted backups or by tools such as Oracle Data Pump and Oracle Recovery Manager. You should cache the hardware keystore credentials in the keystore so that the HSM can be opened with the software keystore. See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1BD98DB6-696B-4653-A8AC-B24EDE3BAE0D" title="A hardware security module can be configured to use the auto-login capability.">Configuring Auto-Login Hardware Security Modules</a> for more information about how to store the HSM credential in a migrated keystore.</p>
</div>
</div>
</div>
<a id="ASOAG10477"></a><a id="ASOAG10476"></a>
<div class="props_rev_3"><a id="GUID-F87514AE-4D8B-475F-A5D9-85C4737C7D70"></a>
<h4 class="sect4">Keystore Order After a Migration</h4>
<div>
<p>After you perform a migration, keystores can be either primary or secondary in their order.</p>
<p>The <code class="codeph">WALLET_ORDER</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> dynamic view describes whether a keystore is primary (that is, it holds the current TDE master encryption key) or if it is secondary (it holds the previous TDE master encryption key). The <code class="codeph">WRL_TYPE</code> column describes the type of locator for the keystore (for example, <code class="codeph">FILE</code> for the <code class="codeph">sqlnet.ora</code> file). The <code class="codeph">WALLET_ORDER</code> column shows <code class="codeph">SINGLE</code> if two keystores are not configured together and no migration was ever performed previously.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-F87514AE-4D8B-475F-A5D9-85C4737C7D70__CIHGJDFE" title="Keystore Order After Migration">Table 4-1</a> describes how the keystore order works after you perform a migration.</p>
<div class="tblformalwide" id="GUID-F87514AE-4D8B-475F-A5D9-85C4737C7D70__CIHGJDFE">
<p class="titleintable">Table 4-1 Keystore Order After a Migration</p>
<table class="cellalignment5382" title="Keystore Order After a Migration" summary="Keystore Order After Migration">
<thead>
<tr class="cellalignment5373">
<th class="cellalignment5383" id="d11243e3802">Type of Migration Done</th>
<th class="cellalignment5384" id="d11243e3805">WRL_TYPE</th>
<th class="cellalignment5385" id="d11243e3808">WALLET_ORDER</th>
<th class="cellalignment5386" id="d11243e3811">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment5373">
<td class="cellalignment5387" id="d11243e3816" headers="d11243e3802">
<p>Migration of software keystore to HSM</p>
</td>
<td class="cellalignment5388" headers="d11243e3816 d11243e3805">
<p><code class="codeph">HSM</code></p>
<p><code class="codeph">FILE</code></p>
</td>
<td class="cellalignment5389" headers="d11243e3816 d11243e3808">
<p><code class="codeph">PRIMARY</code></p>
<p><code class="codeph">SECONDARY</code></p>
</td>
<td class="cellalignment5390" headers="d11243e3816 d11243e3811">
<p>Both the HSM and software keystore are configured. The TDE master encryption key can be either in the HSM or the software keystore.</p>
<p>The TDE master encryption key is first searched in the HSM.</p>
<p>If the TDE master encryption key is not in the primary keystore (HSM), then it will be searched for in the software keystore.</p>
<p>All of the new TDE master encryption keys will be created in the primary keystore (in this case, the HSM).</p>
</td>
</tr>
<tr class="cellalignment5373">
<td class="cellalignment5387" id="d11243e3843" headers="d11243e3802">
<p>Reverse migration of HSM to software keystore</p>
</td>
<td class="cellalignment5388" headers="d11243e3843 d11243e3805">
<p><code class="codeph">FILE</code></p>
<p><code class="codeph">HSM</code></p>
</td>
<td class="cellalignment5389" headers="d11243e3843 d11243e3808">
<p><code class="codeph">PRIMARY</code></p>
<p><code class="codeph">SECONDARY</code></p>
</td>
<td class="cellalignment5390" headers="d11243e3843 d11243e3811">
<p>Both the HSM and software keystore are configured. The TDE master encryption key can be either in the HSM or the software keystore.</p>
<p>The TDE master encryption key is first searched for in the software keystore.</p>
<p>If the TDE master encryption key is not present in the primary (that is, software) keystore, then it will be searched for in the HSM.</p>
<p>All of the new TDE master encryption keys will be created in the primary keystore (in this case, the software keystore).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="ASOAG10607"></a>
<div class="props_rev_3"><a id="GUID-83DE1475-04DD-4B85-9CFA-D00AB0013EC8"></a>
<h3 class="sect3">Migration of Keystores to and from Oracle Key Vault</h3>
<div>
<p>You can use Oracle Key Vault to migrate both software and hardware keystores to and from Oracle Key Vault. This enables you to manage the keystores centrally, and then share the keystores as necessary with other TDE-enabled databases in your enterprise.</p>
<p>Oracle Key Vault enables you to upload a keystore to a container called a virtual wallet, and then create a new virtual wallet from the contents of previously uploaded Oracle keystores. For example, suppose you previously uploaded a keystore that contains 5 keys. You can create a new virtual wallet that consists of only 3 of these keys. You then can download this keystore to another TDE-enabled database. This process does not modify the original keystore.</p>
<p>In addition to Oracle keystores, Oracle Key Vault enables you to securely share other security objects, such as credential files and Java keystores, across the enterprise. It prevents the loss of keys and keystores due to forgotten passwords or accidentally deleted keystores. You can use Oracle Key Vault with products other than TDE: Oracle Real Application Security, Oracle Active Data Guard, and Oracle GoldenGate. Oracle Key Vault facilitates the movement of encrypted data using Oracle Data Pump and Oracle Transportable Tablespaces.</p>
<div class="infoboxnotealso" id="GUID-83DE1475-04DD-4B85-9CFA-D00AB0013EC8__GUID-8820B4F0-B633-4330-8531-E2B4676A7CED">
<p class="notep1">See Also:</p>
<p><a class="olink OKVAG10693" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OKVAG10693"><span class="italic">Oracle Key Vault Administrator&#39;s Guide</span></a></p>
</div>
</div>
</div>
<a id="ASOAG10321"></a>
<div class="props_rev_3"><a id="GUID-672990D8-A3C6-45A0-BEA8-86B7104FE402"></a>
<h3 class="sect3">Closing a Keystore</h3>
<div>
<p>You can manually close software and hardware keystores.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-9777F9A7-EDB8-40DB-B7D8-FAC2FDFFBEB4" title="After you open a keystore, it remains open until you shut down the database instance.">About Closing Keystores</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-814E9D78-04D5-4063-A70D-893469E35C8B" title="You can manually close password-based software keystores, auto-login software keystores, and local auto-login software keystores.">Closing a Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-C8CF91A0-9EF9-4479-880D-1D8C2FBE05B2" title="To close a hardware keystore, you must use the ADMINISTER KEY MANAGEMENT statement with the SET KEYSTORE CLOSE clause.">Closing a Hardware Keystore</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-672990D8-A3C6-45A0-BEA8-86B7104FE402__GUID-0AF58C81-A41E-4889-811D-0F1204DC9F49">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-4FBC5088-A045-4306-88C0-FEBC07CA18AC" title="After you have configured the hardware security module, you must open the hardware keystore before it can be used.">Step 3: Open the Hardware Keystore</a></p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10412"></a>
<div class="props_rev_3"><a id="GUID-9777F9A7-EDB8-40DB-B7D8-FAC2FDFFBEB4"></a>
<h4 class="sect4">About Closing Keystores</h4>
<div>
<p>After you open a keystore, it remains open until you shut down the database instance.</p>
<p>When you restart the database instance, then auto-login and local auto-login software keystores automatically open when required (that is, when the TDE master encryption key must be accessed). However, software password-based and hardware keystores do not automatically open. You must manually open them again before you can use them.</p>
<p>When you close a software or hardware keystore, you disable all of the encryption and decryption operations on the database. Hence, a database user or application cannot perform any operation involving encrypted data until the keystore is reopened.</p>
<p>When you re-open a keystore after closing it, the keystore contents are reloaded back into the database. Thus, if the contents had been modified (such as during a migration), the database will have the latest keystore contents.</p>
<p>You can check the status of a keystore, whether it is open or closed, by querying the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view.</p>
<p>The following data operations will fail if the keystore is not accessible:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">SELECT</code> data from an encrypted column</p>
</li>
<li>
<p><code class="codeph">INSERT</code> data into on an encrypted column</p>
</li>
<li>
<p><code class="codeph">CREATE</code> a table with encrypted columns</p>
</li>
<li>
<p><code class="codeph">CREATE</code> an encrypted tablespace</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-9777F9A7-EDB8-40DB-B7D8-FAC2FDFFBEB4__GUID-F8F6DD64-4B3B-4E2D-A785-EA93FC7AFCE0">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-75855CB2-3FBC-41E4-BC89-8EA2078E633E" title="You should be aware of how keystore open and close operations work in a multitenant environment.">How Open and Close Operations for a Keystore Work in a Multitenant Environment</a>&#34;</span></p>
</div>
</div>
</div>
<a id="ASOAG10320"></a>
<div class="props_rev_3"><a id="GUID-814E9D78-04D5-4063-A70D-893469E35C8B"></a>
<h4 class="sect4">Closing a Software Keystore</h4>
<div>
<p>You can manually close password-based software keystores, auto-login software keystores, and local auto-login software keystores.</p>
<div class="section">
<p>In the case of an auto-login keystore, which opens automatically when it is accessed, manually close it if you moved it to a new location. You do this if you are changing your configuration from an auto-login keystore to a password-based keystore: you move out the auto-login keystore, and then close the auto-login keystore.</p>
</div>
<!-- class="section" -->
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, you must close the keystore first in the root. Afterward, all keystores in the PDBs will close as well. For example, to log in to the root:</p>
<pre dir="ltr">sqlplus sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</li>
<li>
<p>Run the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> SQL statement.</p>
<ul style="list-style-type: disc;">
<li>
<p>For a password-based software keystore, use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE [IDENTIFIED BY <span class="italic">software_keystore_password</span>] [CONTAINER = ALL | CURRENT];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the password of the user who created the keystore.</p>
</li>
<li>
<p><code class="codeph">CONTAINER</code> is for use in a multitenant environment. Enter <code class="codeph">ALL</code> to close the keystore in all of the PDBs in this multitenant container database (CDB), or <code class="codeph">CURRENT</code> for the current PDB. If you run this <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement in the root, then all of the keystores on all of the PDBs will close, irrespective of whether <code class="codeph">CONTAINER</code> is set to <code class="codeph">ALL</code> or to <code class="codeph">CURRENT</code>.</p>
</li>
</ul>
</li>
<li>
<p>For an auto-login or local auto-login software keystore, use the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE;
</pre>
<p>You do not need to specify a password for this statement.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p>Closing a keystore disables all of the encryption and decryption operations. Any attempt to encrypt or decrypt data or access encrypted data results in an error.</p>
<div class="infoboxnotealso" id="GUID-814E9D78-04D5-4063-A70D-893469E35C8B__GUID-B6C99E22-BF59-4C0E-91FA-EEE4BDCCA1C8">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a>&#34;</span></p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10413"></a>
<div class="props_rev_3"><a id="GUID-C8CF91A0-9EF9-4479-880D-1D8C2FBE05B2"></a>
<h4 class="sect4">Closing a Hardware Keystore</h4>
<div>
<p>To close a hardware keystore, you must use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">SET KEYSTORE CLOSE</code> clause.</p>
<div class="section">
<ol>
<li>
<p>Log into the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY &#34;<span class="italic">user_id</span>:<span class="italic">password</span>&#34; [CONTAINER = ALL | CURRENT];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">user_id</code></span><code class="codeph">:</code><span class="italic"><code class="codeph">password</code></span> is the user ID and password that was created in Step <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291__CIHHFABB">3</a> in <span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291" title="To configure a third-party hardware security module, you must copy the PKCS#11 library to the correct location and follow your vendor&#39;s instructions.">Step 2: Configure the Hardware Security Module</a>&#34;</span>. Enclose this setting in double quotation marks (&#34; &#34;) and separate <span class="italic"><code class="codeph">user_id</code></span> and <span class="italic"><code class="codeph">password</code></span> with a colon (<code class="codeph">:</code>).</p>
</li>
<li>
<p><code class="codeph">CONTAINER</code> is for use in a multitenant environment. Enter <code class="codeph">ALL</code> to close the keystore in all of the PDBs in this CDB, or <code class="codeph">CURRENT</code> for the current PDB. If you run this <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement in the root, then all of the keystores on all of the PDBs will close, irrespective of whether <code class="codeph">CONTAINER</code> is set to <code class="codeph">ALL</code> or to <code class="codeph">CURRENT</code>.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-C8CF91A0-9EF9-4479-880D-1D8C2FBE05B2__GUID-C9596B27-8F20-4D93-A5C7-6A3D1B45828D">
<p class="notep1">See Also:</p>
<p><span class="q">&#34;<a href="configuring-transparent-data-encryption.htm#GUID-4FBC5088-A045-4306-88C0-FEBC07CA18AC" title="After you have configured the hardware security module, you must open the hardware keystore before it can be used.">Step 3: Open the Hardware Keystore</a>&#34;</span></p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10322"></a>
<div class="props_rev_3"><a id="GUID-F4765A9F-2E48-4C51-9FDE-88F9B4617074"></a>
<h3 class="sect3">Using a Software Keystore That Resides on ASM Volumes</h3>
<div>
<p>You can store a software keystore on an Automatic Storage Management (ASM) disk group.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Edit the <code class="codeph">sqlnet.ora</code> file to use the location of an ASM disk group specified using the ASM file naming convention when you configure the <code class="codeph">DIRECTORY</code> setting in the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> setting. That is, you must use the plus sign (<code class="codeph">+</code>) notation for the ASM file name.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION=
      (SOURCE=(METHOD=FILE)(METHOD_DATA=
        (DIRECTORY=<span class="bold">+disk1/mydb/wallet</span>)))
</pre>
<p>If you must move or merge software keystores between a regular file system and an ASM file system, then you can use the same keystore merge statements described in <span class="q">&#34;<a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DF77BD8F-83FC-4F0F-8B2D-2E51D753A6F1" title="You can merge software keystores in a variety of ways, such as merging two keystores to create a third keystore, merging one keystore into an existing keystore, or merging an auto-login software keystore into a password-based software keystore.">Merging Software Keystores</a>&#34;</span>.</p>
<p>To manage keystores in an ASM environment, you can use the <code class="codeph">ASMCMD</code> utility.</p>
<div class="infoboxnotealso" id="GUID-F4765A9F-2E48-4C51-9FDE-88F9B4617074__GUID-AC9F28FB-ECB1-437D-A164-8859F41734E4">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-278422A5-1F77-4E82-B4A1-578F03AE30FD" title="Use the sqlnet.ora file to configure the keystore location for a regular file system, for multiple database access, and for use with Oracle Automatic Storage Management (ASM).">Configuring the sqlnet.ora File for a Software Keystore Location</a></p>
</li>
<li>
<p><a class="olink OSTMG016" target="_blank" href="../OSTMG/GUID-78D76D36-8395-4936-AF53-1A4A27806327.htm#OSTMG016"><span class="italic">Oracle Database Storage Administrator&#39;s Guide</span></a> for detailed information about using the <code class="codeph">ASMCMD</code> utility</p>
</li>
</ul>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG9546"></a>
<div class="props_rev_3"><a id="GUID-F11271F4-7789-4F0D-B999-86DAFBE9152C"></a>
<h3 class="sect3">Backup and Recovery of Encrypted Data</h3>
<div>
<p>For software keystores, you cannot access encrypted data without the TDE master encryption key.</p>
<p>Because the TDE master encryption key is stored in the keystore, you should periodically back up the software keystore in a secure location. You must back up a copy of the keystore whenever you set a new TDE master encryption key or perform any operation that writes to the keystore.</p>
<p>Do not back up the software keystore in the same location as the encrypted data. Back up the software keystore separately. This is especially true when you use the auto-login keystore, which does not require a password to open. In case the backup tape is lost, a malicious user should not be able to get both the encrypted data and the keystore.</p>
<p>Oracle Recovery Manager (Oracle RMAN) does not back up the software keystore as part of the database backup. When using a media manager such as Oracle Secure Backup with Oracle RMAN, Oracle Secure Backup automatically excludes auto-open keystores (the <code class="codeph">cwallet.sso</code> files). However, it does not automatically exclude encryption keystores (the <code class="codeph">ewallet.p12</code> files). It is a good practice to add the following <code class="codeph">exclude</code> data set statement to your Oracle Secure Backup configuration:</p>
<pre dir="ltr">exclude name *.p12
</pre>
<p>This setting instructs Oracle Secure Backup to exclude the encryption keystore from the backup set.</p>
<p>If you lose the software keystore that stores the TDE master encryption key, then you can restore access to encrypted data by copying the backed-up version of the keystore to the appropriate location. If you archived the restored keystore after the last time that you reset the TDE master encryption key, then you do not need to take any additional action.</p>
<p>If the restored software keystore does not contain the most recent TDE master encryption key, then you can recover old data up to the point when the TDE master encryption key was reset by rolling back the state of the database to that point in time. All of the modifications to encrypted columns after the TDE master encryption key was reset are lost.</p>
<div class="infoboxnotealso" id="GUID-F11271F4-7789-4F0D-B999-86DAFBE9152C__GUID-757821C7-5C2E-4601-A572-C4AA9DB996E0">
<p class="notep1">See Also:</p>
<p><a class="olink BRADV8005" target="_blank" href="../BRADV/rcmcomre.htm#BRADV8005"><span class="italic">Oracle Database Backup and Recovery User&#39;s Guide</span></a> for information about recovering a database</p>
</div>
</div>
</div>
<a id="ASOAG10376"></a>
<div class="props_rev_3"><a id="GUID-5CC83A60-8EA4-4984-AD2C-42BC12E5A16F"></a>
<h3 class="sect3">Deletion of Keystores</h3>
<div>
<p>Oracle strongly recommends that you do not delete keystores, particularly after you have configured Transparent Data Encryption and the keystore is in use.</p>
<p>You can find if a keystore is in use by querying the <code class="codeph">WRL_PARAMETER</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view after you open the keystore.</p>
<p>The reason you should not delete a keystore is because the keystore contains a list of all of the keys that were used for the database. Deleting the keystore deletes these keys, and could result in the loss of encrypted data. The deletion of a keystore can even hamper the normal functioning of the Oracle database. Even if you decrypted all of the data in your database, you still should not delete the keystore, because the TDE master encryption key in the keystore is also used for other Oracle Database features, such as off-lined tablespaces, Oracle Recovery Manager, and Oracle Secure Backup.</p>
<p>Even after you have migrated your keystores to a hardware security module, you should not delete the original keystore. The keys in the original keystore will be needed at a later time, for example when recovering an offline encrypted tablespace. Even if there is no data online that are not encrypted, the key may still be in use.</p>
<p>The exception is in the case of software auto-login (or auto-login local) keystores. If you do not want to use this type of keystore, then ideally you should move it to a secure directory. Only delete an auto-login keystore if you are sure that it comes from a specific password-based software keystore and that this keystore is available. The keystore should be available and known.</p>
</div>
</div>
</div>
<a id="ASOAG10407"></a>
<div class="props_rev_3"><a id="GUID-CDF39F23-2371-4E93-A503-25798F1E97E4"></a>
<h2 class="sect2">Managing the TDE Master Encryption Key</h2>
<div>
<p>You can manage the TDE master encryption key in several ways.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EA686044-5B10-4F70-88F2-B45BF1DD1E55" title="You can create a TDE master encryption key that can be activated at a later date.">Creating TDE Master Encryption Keys for Later Use</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-59B10A94-CED1-47D4-8DEB-E79E8B3624F2" title="After you activate a TDE master encryption key, it can be used.">Activation of TDE Master Encryption Keys</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EFE76B37-D5F0-41E1-B650-3ABA61AF0AD0" title="Master encryption key attributes store information about the TDE master encryption key.">TDE Master Encryption Key Attribute Management</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EBBA92B5-E5D0-43F5-BF55-3B44367F6105" title="Custom TDE master encryption key attributes enable you to defined attributes that are specific to your needs.">Creating Custom TDE Master Encryption Key Attributes for Reporting Purposes</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FDA3856D-5B88-42FD-A666-BC965C92689C" title="You can set and reset the TDE master encryption key for both software keystores and hardware keystores.">Setting and Resetting the TDE Master Encryption Key in the Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-85A465EB-50E2-482C-8AC5-851436AB8F8F" title="You can export and import the TDE master encryption key in a variety ways, to satisfy the needs of other Oracle features, such as a multitenant environment or Oracle Data Guard.">Exporting and Importing the TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-48512BB6-C588-4704-B2BD-22606C0F05BC" title="You can use Oracle Key Vault to manage and share TDE master encryption keys across an enterprise.">Management of TDE Master Encryption Keys Using Oracle Key Vault</a></p>
</li>
</ul>
</div>
<a id="ASOAG10414"></a>
<div class="props_rev_3"><a id="GUID-EA686044-5B10-4F70-88F2-B45BF1DD1E55"></a>
<h3 class="sect3">Creating TDE Master Encryption Keys for Later Use</h3>
<div>
<p>You can create a TDE master encryption key that can be activated at a later date.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-9E9A93AB-401B-49CD-874E-E4751DE310AD" title="The CREATE KEY clause of the ADMINISTER KEY MANAGEMENT statement can create a TDE master encryption key to be activated at a later date.">About Creating a TDE Master Encryption Key for Later Use</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-8E7F27F9-99A5-4233-BC16-5B0479F947F9" title="A keystore must be opened before you can create a TDE master encryption key for use later on.">Creating a TDE Master Encryption Key for Later Use</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DD3685E7-C44E-4861-B5A2-93F49BA61380" title="You can use the ADMINISTER KEY MANAGEMENT CREATE KEY USING TAG statement to create a TDE master encryption key in a single database.">Example: Creating a TDE Master Encryption Key in a Single Database</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-04564072-A35F-477F-BAF3-8631ECB9D0B2" title="The ADMINISTER KEY MANAGEMENT CREATE KEY USING TAG SQL statement creates a TDE master encryption key in all PDBs.">Example: Creating a TDE Master Encryption Key in All PDBs</a></p>
</li>
</ul>
</div>
<a id="ASOAG10415"></a>
<div class="props_rev_3"><a id="GUID-9E9A93AB-401B-49CD-874E-E4751DE310AD"></a>
<h4 class="sect4">About Creating a TDE Master Encryption Key for Later Use</h4>
<div>
<p>The <code class="codeph">CREATE KEY</code> clause of the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement can create a TDE master encryption key to be activated at a later date.</p>
<p>You then can activate this key on the same database or export it to another database and activate it there.</p>
<p>This method of TDE master encryption key creation is useful in a multitenant environment when you must re-create the TDE master encryption keys. The <code class="codeph">CREATE KEY</code> clause enables you to use a single SQL statement to generate a new TDE master encryption key for all of the PDBs within a multitenant environment. The creation time of the new TDE master encryption key is later than the activation of the TDE master encryption key that is currently in use. Hence, the creation time can serve as a reminder to all of the PDBs to activate the most recently created TDE master encryption key as soon as possible.</p>
</div>
</div>
<a id="ASOAG10416"></a>
<div class="props_rev_3"><a id="GUID-8E7F27F9-99A5-4233-BC16-5B0479F947F9"></a>
<h4 class="sect4">Creating a TDE Master Encryption Key for Later Use</h4>
<div>
<p>A keystore must be opened before you can create a TDE master encryption key for use later on.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Ensure that the keystore is open.</p>
<p>You can query the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view to find if the keystore is open. If you find that you must open the keystore, then see the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-4FBC5088-A045-4306-88C0-FEBC07CA18AC" title="After you have configured the hardware security module, you must open the hardware keystore before it can be used.">Step 3: Open the Hardware Keystore</a></p>
</li>
</ul>
</li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEY [USING TAG &#39;<span class="italic">tag</span>&#39;] IDENTIFIED BY <span class="italic">keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]] [CONTAINER = (ALL|CURRENT)];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is the associated attribute and information that you define. Enclose this setting in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is the mandatory keystore password that you used when you created the original keystore. It is case sensitive.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> backs up the TDE master encryption key in the same location as the key, as identified by the <code class="codeph">WRL_PARAMETER</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view. To find the key locations for all of the database instances, query the <code class="codeph">GV$ENCRYPTION_WALLET</code> view.</p>
<p>You must back up password-based software keystores. You do not need to back up auto-login or local auto-login software keystores. Optionally, include the <code class="codeph">USING</code> <span class="italic"><code class="codeph">backup_identifier</code></span> clause to add a description of the backup. Enclose <span class="italic"><code class="codeph">backup_identifier</code></span> in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><code class="codeph">CONTAINER</code> is for use in a multitenant environment. Enter <code class="codeph">ALL</code> to set the encryption key in all of the PDBs in this CDB, or <code class="codeph">CURRENT</code> for the current PDB.</p>
</li>
</ul>
</li>
<li>
<p>If necessary, activate the TDE master encryption key.</p>
<p>See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-59B10A94-CED1-47D4-8DEB-E79E8B3624F2" title="After you activate a TDE master encryption key, it can be used.">Activation of TDE Master Encryption Keys</a>.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10417"></a><a id="ASOAG10520"></a>
<div class="props_rev_3"><a id="GUID-DD3685E7-C44E-4861-B5A2-93F49BA61380"></a>
<h4 class="sect4">Example: Creating a TDE Master Encryption Key in a Single Database</h4>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT CREATE KEY USING TAG</code> statement to create a TDE master encryption key in a single database.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-DD3685E7-C44E-4861-B5A2-93F49BA61380__CIHCGBDD">Example 4-4</a> shows how to create a TDE master encryption key in a single database. After you run this statement, a TDE master encryption key with the tag definition is created in the keystore for that database. You can query the <code class="codeph">TAG</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> view for the identifier of the newly created key. You can query the <code class="codeph">CREATION_TIME</code> column to find the most recently created key, which would be the key that you created from this statement. You can export this key to another database if you want or activate it locally later on, as described in <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-59B10A94-CED1-47D4-8DEB-E79E8B3624F2" title="After you activate a TDE master encryption key, it can be used.">Activation of TDE Master Encryption Keys</a>.</p>
<div class="example" id="GUID-DD3685E7-C44E-4861-B5A2-93F49BA61380__CIHCGBDD">
<p class="titleinexample">Example 4-4 Creating a TDE Master Encryption Key in a Single Database</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEY USING TAG
&#39;source:admin@source;target:db1@target&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP;

keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10418"></a>
<div class="props_rev_3"><a id="GUID-04564072-A35F-477F-BAF3-8631ECB9D0B2"></a>
<h4 class="sect4">Example: Creating a TDE Master Encryption Key in All PDBs</h4>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT CREATE KEY USING TAG</span> SQL statement creates a TDE master encryption key in all PDBs.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-04564072-A35F-477F-BAF3-8631ECB9D0B2__CIHDJAEA">Example 4-5</a> shows how to create a TDE master encryption key in all of the PDBs in a multitenant environment. After you run this statement, a TDE master encryption key is created in each PDB. You can find the identifiers for these keys as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>Log in to the PDB and then query the <code class="codeph">TAG</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> view.</p>
</li>
<li>
<p>Log in to the root and then query the <code class="codeph">INST_ID</code> and <code class="codeph">TAG</code> columns of the <code class="codeph">GV$ENCRYPTION_KEYS</code> view.</p>
</li>
</ul>
<p>You also can check the <code class="codeph">CREATION_TIME</code> column of these views to find the most recently created key, which would be the key that you created from this statement. After you create the keys, you can individually activate the keys in each of the PDBs.</p>
<div class="example" id="GUID-04564072-A35F-477F-BAF3-8631ECB9D0B2__CIHDJAEA">
<p class="titleinexample">Example 4-5 Creating a TDE Master Encryption Key in All of the PDBs</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEY USING TAG 
&#39;scope:all pdbs;description:Create Key for ALL PDBS&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP CONTAINER=ALL;
 
keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ASOAG10419"></a>
<div class="props_rev_3"><a id="GUID-59B10A94-CED1-47D4-8DEB-E79E8B3624F2"></a>
<h3 class="sect3">Activation of TDE Master Encryption Keys</h3>
<div>
<p>After you activate a TDE master encryption key, it can be used.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0B645D42-A7FE-4199-9A88-AFD416F1ECF1" title="You can activate a previously created or imported TDE master encryption key by using the USE KEY clause of ADMINSTER KEY MANAGEMENT.">About Activating TDE Master Encryption Keys</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-2A15CA6E-88CC-41FB-BE48-090BCA2C3B90" title="To activate a TDE master encryption key, you must open the keystore and use ADMINISTER KEY MANAGEMENT with the USE KEY clause.">Activating a TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-72F5FDA3-7F93-4288-B3BE-4F7814EC8132" title="You can use the ADMINISTER KEY MANAGEMENT SQL statement to activate a TDE master encryption key.">Example: Activating a TDE Master Encryption Key</a></p>
</li>
</ul>
</div>
<a id="ASOAG10420"></a>
<div class="props_rev_3"><a id="GUID-0B645D42-A7FE-4199-9A88-AFD416F1ECF1"></a>
<h4 class="sect4">About Activating TDE Master Encryption Keys</h4>
<div>
<p>You can activate a previously created or imported TDE master encryption key by using the <code class="codeph">USE KEY</code> clause of <code class="codeph">ADMINSTER KEY MANAGEMENT</code>.</p>
<p>After you activate the key, it is available for use. The key will be used to protect all of the column keys and all of the <a href="glossary.htm#GUID-5101B9BB-386F-4826-B639-2BE246A66E90"><span class="xrefglossterm">tablespace encryption key</span></a>s. If you have deployed a logical standby database, then you must export the TDE master encryption keys after recreating them, and then import them into the standby database. You can have the TDE master encryption key in use on both the primary and the standby databases. To do so, you must activate the TDE master encryption key after you import it to the logical standby database.</p>
</div>
</div>
<a id="ASOAG10421"></a>
<div class="props_rev_3"><a id="GUID-2A15CA6E-88CC-41FB-BE48-090BCA2C3B90"></a>
<h4 class="sect4">Activating a TDE Master Encryption Key</h4>
<div>
<p>To activate a TDE master encryption key, you must open the keystore and use <code class="codeph">ADMINISTER KEY MANAGEMENT</code> with the <code class="codeph">USE KEY</code> clause.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>Ensure that the keystore is open.</p>
<p>You can query the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view to find if the keystore is open. If you find that you must open the keystore, see the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-4FBC5088-A045-4306-88C0-FEBC07CA18AC" title="After you have configured the hardware security module, you must open the hardware keystore before it can be used.">Step 3: Open the Hardware Keystore</a></p>
</li>
</ul>
</li>
<li>
<p>Query the <code class="codeph">KEY_ID</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> view to find the key identifier.</p>
<p>For example:</p>
<pre dir="ltr">SELECT KEY_ID FROM V$ENCRYPTION_KEYS; 

KEY_ID
----------------------------------------------------
ARaHD762tUkkvyLgPzAi6hMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</pre></li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT USE KEY &#39;<span class="italic">key_identifier</span>&#39; [USING TAG &#39;<span class="italic">tag</span>&#39;] 
IDENTIFIED BY <span class="italic">keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">key_identifier</code></span> is the key identifier that you find from querying the <code class="codeph">KEY_ID</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> view. Enclose this setting in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is the associated attributes and information that you define. Enclose this setting in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is the mandatory keystore password that you used when you created the original keystore.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> backs up the TDE master encryption key in the same location as the key, as identified by the <code class="codeph">WRL_PARAMETER</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view. To find the key locations for all of the database instances, query the <code class="codeph">GV$ENCRYPTION_WALLET</code> view.</p>
<p>You must back up password-based software keystores. You do not need to back up auto-login or local auto-login software keystores. Optionally, include the <code class="codeph">USING</code> <span class="italic"><code class="codeph">backup_identifier</code></span> clause to add a description of the backup. Enclose <code class="codeph">backup_identifier</code> in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><code class="codeph">CONTAINER</code> is for use in a multitenant environment. Enter <code class="codeph">ALL</code> to set the encryption key in all of the PDBs in this CDB, or <code class="codeph">CURRENT</code> for the current PDB.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10422"></a><a id="ASOAG10521"></a>
<div class="props_rev_3"><a id="GUID-72F5FDA3-7F93-4288-B3BE-4F7814EC8132"></a>
<h4 class="sect4">Example: Activating a TDE Master Encryption Key</h4>
<div>
<p>You can use the <span class="apiname">ADMINISTER KEY MANAGEMENT</span> SQL statement to activate a TDE master encryption key.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-72F5FDA3-7F93-4288-B3BE-4F7814EC8132__CIHCHHHA">Example 4-6</a> shows how to activate a previously imported TDE master encryption key and then update its tag. This key is activated with the current database time stamp and time zone.</p>
<div class="example" id="GUID-72F5FDA3-7F93-4288-B3BE-4F7814EC8132__CIHCHHHA">
<p class="titleinexample">Example 4-6 Activating a TDE Master Encryption Key</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT USE KEY 
&#39;ARaHD762tUkkvyLgPzAi6hMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39; 
USING TAG &#39;quarter:second;description:Activate Key on standby&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP;

keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="ASOAG10328"></a>
<div class="props_rev_3"><a id="GUID-EFE76B37-D5F0-41E1-B650-3ABA61AF0AD0"></a>
<h3 class="sect3">TDE Master Encryption Key Attribute Management</h3>
<div>
<p>Master encryption key attributes store information about the TDE master encryption key.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EE8D119A-32CC-423F-B4A3-ABC685061B7C" title="Master encryption key attributes include detailed information about the TDE master encryption key.">TDE Master Encryption Key Attributes</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-5DC912A5-77ED-4B21-90AA-7E8DBED548A1" title="A TDE master encryption key that is in use is the key that was activated most recently for the database.">Finding the TDE Master Encryption Key That Is in Use</a></p>
</li>
</ul>
</div>
<a id="ASOAG10329"></a>
<div class="props_rev_3"><a id="GUID-EE8D119A-32CC-423F-B4A3-ABC685061B7C"></a>
<h4 class="sect4">TDE Master Encryption Key Attributes</h4>
<div>
<p>Master encryption key attributes include detailed information about the TDE master encryption key.</p>
<p>The information contains the following types:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Key time stamp information:</span> Internal security policies and compliance policies usually determine the key rotation frequency. You should expire keys when they reach the end of their lifetimes and then generate new keys. Time stamp attributes such as key creation time and activation time help you to determine the key age accurately, and automate key generation.</p>
<p>The <code class="codeph">V$ENCRYPTION_KEYS</code> view includes columns such as <code class="codeph">CREATION_TIME</code> and <code class="codeph">ACTIVATION_TIME.</code> See <a class="olink REFRN30661" target="_blank" href="../REFRN/GUID-870EBB60-51B9-49D5-AAA9-A5F729099428.htm#REFRN30661"><span><cite>Oracle Database Reference</cite></span></a> for a complete description of the <code class="codeph">V$ENCRYPTION_KEYS</code> view.</p>
</li>
<li>
<p><span class="bold">Key owner information:</span> Key owner attributes help you to determine the user who created or activated the key. These attributes can be important for security, auditing, and tracking purposes. Key owner attributes also include key use information, such as whether the key is used for standalone TDE operations or used in a multitenant environment.</p>
<p>The <code class="codeph">V$ENCRYPTION_KEYS</code> view includes columns such as <code class="codeph">CREATOR, CREATOR_ID, USER, USER_ID,</code> and <code class="codeph">KEY_USE.</code></p>
</li>
<li>
<p><span class="bold">Key source information:</span> Keys often must be moved between databases for operations such as import-export operations and Data Guard-related operations. Key source attributes enable you to track the origin of each key. You can track whether a key was created locally or imported, and the database name and instance number of the database that created the key. In a multitenant environment, you can track the PDB where the key was created.</p>
<p>The <code class="codeph">V$ENCRYPTION_KEYS</code> view includes columns such as <code class="codeph">CREATOR_DBNAME, CREATOR_DBID, CREATOR_INSTANCE_NAME, CREATOR_INSTANCE_NUMBER, CREATOR_PDBNAME,</code> and so on.</p>
</li>
<li>
<p><span class="bold">Key usage information:</span> Key usage information determines the database or PDB where the key is being used. It also helps determine whether a key is in active use or not.</p>
<p>The <code class="codeph">V$ENCRYPTION_KEYS</code> view includes columns such as <code class="codeph">ACTIVATING_DBNAME, ACTIVATING_DBID, ACTIVATING_INSTANCE_NAME, ACTIVATING_PDBNAME,</code> and so on.</p>
</li>
<li>
<p><span class="bold">User-defined information and other information:</span> When creating a key, you can tag it with information using the <code class="codeph">TAG</code> option. Each key contains important information such as whether or not it has been backed up.</p>
<p>The <code class="codeph">V$ENCRYPTION_KEYS</code> view includes columns such as <code class="codeph">KEY_ID, TAG,</code> and other miscellaneous columns, for example <code class="codeph">BACKED_UP</code>.</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10446"></a>
<div class="props_rev_3"><a id="GUID-5DC912A5-77ED-4B21-90AA-7E8DBED548A1"></a>
<h4 class="sect4">Finding the TDE Master Encryption Key That Is in Use</h4>
<div>
<p>A TDE master encryption key that is in use is the key that was activated most recently for the database.</p>
<div class="section">
<p>In a multitenant environment, the master key in use of the PDB is the one that was activated most recently for that PDB.</p>
<ul style="list-style-type: disc;">
<li>
<p>To find the master key, query the <code class="codeph">V$ENCRYPTION_KEYS</code> dynamic view.</p>
<ul style="list-style-type: disc;">
<li>
<p>To find the master key in use in a non-CDB:</p>
<pre dir="ltr">SELECT KEY_ID 
FROM V$ENCRYPTION_KEYS 
WHERE ACTIVATION_TIME = (SELECT MAX(ACTIVATION_TIME) 
                         FROM V$ENCRYPTION_KEYS
                         WHERE ACTIVATING_DBID = (SELECT DBID FROM V$DATABASE));
</pre></li>
<li>
<p>To find the master key in use in a CDB:</p>
<pre dir="ltr">SELECT KEY_ID 
FROM V$ENCRYPTION_KEYS 
WHERE ACTIVATION_TIME = (SELECT MAX(ACTIVATION_TIME) 
                       FROM V$ENCRYPTION_KEYS
                       WHERE ACTIVATING_PDBID = SYS_CONTEXT(&#39;USERENV&#39;, &#39;CON_ID&#39;));
</pre></li>
</ul>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10333"></a>
<div class="props_rev_3"><a id="GUID-EBBA92B5-E5D0-43F5-BF55-3B44367F6105"></a>
<h3 class="sect3">Creating Custom TDE Master Encryption Key Attributes for Reporting Purposes</h3>
<div>
<p>Custom TDE master encryption key attributes enable you to defined attributes that are specific to your needs.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-2934A241-AB48-4EEF-8A65-3638209931AB" title="Attribute tags enable you to monitor specific activities users perform, such as accessing a particular terminal ID.">About Creating Custom Attribute Tags</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-9D7F2315-0021-4E25-B75A-70C180D88307" title="To create a custom attribute tag, you must use the SET TAG clause of the ADMINISTER KEY MANAGEMENT statement.">Creating a Custom Attribute Tag</a></p>
</li>
</ul>
</div>
<a id="ASOAG10334"></a>
<div class="props_rev_3"><a id="GUID-2934A241-AB48-4EEF-8A65-3638209931AB"></a>
<h4 class="sect4">About Creating Custom Attribute Tags</h4>
<div>
<p>Attribute tags enable you to monitor specific activities users perform, such as accessing a particular terminal ID.</p>
<p>By default, Oracle Database defines a set of attributes that describe various characteristics of the TDE master encryption keys that you create, such as the creation time, database in which the TDE master encryption key is used, and so on. These attributes are captured by the <code class="codeph">V$ENCRYPTION_KEY</code> dynamic view.</p>
<p>You can create custom attributes that can be captured by the <code class="codeph">TAG</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> dynamic view. This enables you to define behaviors that you may want to monitor, such as users who perform activities on encryption keys. The tag can encompass multiple attributes, such as session IDs from a specific terminal.</p>
</div>
</div>
<a id="ASOAG10335"></a>
<div class="props_rev_3"><a id="GUID-9D7F2315-0021-4E25-B75A-70C180D88307"></a>
<h4 class="sect4">Creating a Custom Attribute Tag</h4>
<div>
<p>To create a custom attribute tag, you must use the <code class="codeph">SET TAG</code> clause of the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>If necessary, query the <code class="codeph">TAG</code> column of the <code class="codeph">V$ENCRYPTION_KEY</code> dynamic view to find a listing of existing tags for the TDE master encryption keys.</p>
<p>When you create a new tag for a TDE master encryption key, it overwrites the existing tag for that TDE master encryption key.</p>
</li>
<li>
<p>Create the tag as follows:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET TAG &#39;tag&#39; FOR &#39;<span class="italic">master_key_identifier</span>&#39; 
IDENTIFIED BY <span class="italic">keystore_password</span> 
[WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]];
</pre>
<p>In this specification</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is the associated attributes or information that you define. Enclose this information in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">master_key_identifier</code></span> identifies the TDE master encryption key for which the <span class="italic"><code class="codeph">tag</code></span> is set. To find a list of TDE master encryption key identifiers, query the <code class="codeph">KEY_ID</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> dynamic view.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is the password that was used to create the keystore.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">backup_identifier</code></span> defines the tag values. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;) and separate each value with a colon.</p>
</li>
</ul>
<p>For example, to create a tag that uses two values, one to capture a specific session ID and the second to capture a specific terminal ID:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY USING TAG 
&#39;sessionid=3205062574:terminal=xcvt&#39; 
IDENTIFIED BY <span class="italic">keystore_password</span> WITH BACKUP;

keystore altered.
</pre>
<p>Both the session ID (<code class="codeph">3205062574</code>) and terminal ID (<code class="codeph">xcvt</code>) can derive their values by using either the <code class="codeph">SYS_CONTEXT</code> function with the <code class="codeph">USERENV</code> namespace, or by using the <code class="codeph">USERENV</code> function. For a full list of predefined parameters for the <code class="codeph">USERENV</code> namespace in the <code class="codeph">SYS_CONTEXT</code> function, see <a class="olink SQLRF51825" target="_blank" href="../SQLRF/functions199.htm#SQLRF51825"><span><cite>Oracle Database SQL Language Reference</cite></span></a>.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p>After you create the tag for a TDE master encryption key, its name should appear in the <code class="codeph">TAG</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> view for that TDE master encryption key. If you create a tag for the secret, then the tag appears in the <code class="codeph">SECRET_TAG</code> column of the <code class="codeph">V$CLIENT_SECRETS</code> view. If you create a secret with a tag, then the tag appears in the <code class="codeph">SECRET_TAG</code> column of the <code class="codeph">V$CLIENT_SECRETS</code> view.</p>
<div class="infoboxnotealso" id="GUID-9D7F2315-0021-4E25-B75A-70C180D88307__GUID-B591F13F-BEBC-454A-9FC6-CF3455C9FCAB">
<p class="notep1">See Also:</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-FBAC7644-B19F-4899-8FA0-0C487CABF368" title="You can store Oracle GoldenGate secrets in Transparent Data Encryption keystores.">Storing Oracle GoldenGate Secrets in a Keystore</a> for information about creating secrets</p>
</div>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG9525"></a>
<div class="props_rev_3"><a id="GUID-FDA3856D-5B88-42FD-A666-BC965C92689C"></a>
<h3 class="sect3">Setting and Resetting the TDE Master Encryption Key in the Keystore</h3>
<div>
<p>You can set and reset the TDE master encryption key for both software keystores and hardware keystores.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0A2BDFB2-C190-4513-AF14-03263441D23F" title="You can set or rotate the TDE master encryption key for both software password-based and hardware keystores.">About Setting or Rotating the TDE Master Encryption Key in the Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-7465BA4F-79D5-40A7-A2B3-6FB6ACEECE4E" title="The ADMINISTER KEY MANAGEMENT statement enables you to create and back up a TDE master encryption key and apply a tag to it.">Creating and Backing Up a TDE Master Encryption Key and Applying a Tag to It</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-B788CBF7-DB54-48D4-AB32-7AA06289153B" title="Oracle Database uses a unified master encryption key for both TDE column encryption and TDE tablespace encryption.">About Rotating the TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-A687C8D0-7597-4D92-BB75-CEE35B012970" title="You can use the ADMINISTER KEY MANAGEMENT statement to rotate (also called rekeying) a TDE master encryption key.">Rotating the TDE Master Encryption Key</a></p>
</li>
</ul>
</div>
<a id="ASOAG10336"></a>
<div class="props_rev_3"><a id="GUID-0A2BDFB2-C190-4513-AF14-03263441D23F"></a>
<h4 class="sect4">About Setting or Rotating the TDE Master Encryption Key in the Keystore</h4>
<div>
<p>You can set or rotate the TDE master encryption key for both software password-based and hardware keystores.</p>
<p>The TDE master encryption key is stored in an external security module (keystore), and it is used to protect the <a href="glossary.htm#GUID-78CFC3BC-9BDD-406E-A6E2-2374AC636269"><span class="xrefglossterm">TDE table key</span></a>s and <a href="glossary.htm#GUID-5101B9BB-386F-4826-B639-2BE246A66E90"><span class="xrefglossterm">tablespace encryption key</span></a>s. By default, the TDE master encryption key is a system-generated random value created by Transparent Data Encryption (TDE).</p>
<p>Use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement to set or reset (<code class="codeph">REKEY</code>) the TDE master encryption key. When the master encryption key is set, then TDE is considered enabled and cannot be disabled.</p>
<p>Before you can encrypt or decrypt database columns or tablespaces, you must generate a TDE master encryption key. Oracle Database uses the same TDE master encryption key for both TDE column encryption and TDE tablespace encryption. The following sections explain how to create a basic TDE master encryption key:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Master encryption key for software keystores:</span> <a href="configuring-transparent-data-encryption.htm#GUID-15E41F0A-5D80-4A7A-88F6-30EE86FA44E8" title="Once the keystore is open, you can set a TDE master encryption key for it.">Step 4: Set the Software TDE Master Encryption Key</a></p>
</li>
<li>
<p><span class="bold">Master encryption key for hardware keystores:</span> <a href="configuring-transparent-data-encryption.htm#GUID-96BEF7DD-2B37-48F2-9651-38059DE499C5" title="After you have opened the hardware keystore, you are ready to set the hardware keystore TDE master encryption key.">Step 4: Set the Hardware Keystore TDE Master Encryption Key</a></p>
</li>
</ul>
</div>
</div>
<a id="ASOAG9526"></a>
<div class="props_rev_3"><a id="GUID-7465BA4F-79D5-40A7-A2B3-6FB6ACEECE4E"></a>
<h4 class="sect4">Creating and Backing Up a TDE Master Encryption Key and Applying a Tag to It</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement enables you to create and back up a TDE master encryption key and apply a tag to it.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root or to the PDB. For example:</p>
<pre dir="ltr">sqlplus sec_admin@hrpdb as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY [USING TAG &#39;<span class="italic">tag</span>&#39;] 
IDENTIFIED BY <span class="italic">keystore_password</span> WITH BACKUP 
[USING &#39;<span class="italic">backup_identifier</span>&#39;] [CONTAINER = ALL | CURRENT];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is the tag that you want to create. Enclose this tag in single quotation marks (&#39; &#39;). (See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EBBA92B5-E5D0-43F5-BF55-3B44367F6105" title="Custom TDE master encryption key attributes enable you to defined attributes that are specific to your needs.">Creating Custom TDE Master Encryption Key Attributes for Reporting Purposes</a> for more information about tags.)</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is either <span class="italic"><code class="codeph">software_keystore_password</code></span> or <span class="italic"><code class="codeph">user_id:password</code></span>. The <span class="italic"><code class="codeph">user_id</code></span><code class="codeph">:</code><span class="italic"><code class="codeph">password</code></span> setting is the hardware keystore user ID and password that was created in Step <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291__CIHHFABB">3</a> under <a href="configuring-transparent-data-encryption.htm#GUID-7838C4B8-FF6A-4B81-86C1-8583D3555291" title="To configure a third-party hardware security module, you must copy the PKCS#11 library to the correct location and follow your vendor&#39;s instructions.">Step 2: Configure the Hardware Security Module</a>. As with software passwords, it is case sensitive. You must enclose the password string in double quotation marks (&#34; &#34;). Separate <span class="italic"><code class="codeph">user_id</code></span> and <span class="italic"><code class="codeph">password</code></span> with a colon (<code class="codeph">:</code>).</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> backs the TDE master encryption key up in the same location as the key, as identified by the <code class="codeph">WRL_PARAMETER</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view. To find the <code class="codeph">WRL_PARAMETER</code> values for all of the database instances, query the <code class="codeph">GV$ENCRYPTION_WALLET</code> view.</p>
<p>You must back up password-based software keystores. You do not need to use it for auto-login or local auto-login software keystores. Optionally, include the <code class="codeph">USING</code> <span class="italic"><code class="codeph">backup_identifier</code></span> clause to add a description of the backup. Enclose this identifier in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><code class="codeph">CONTAINER</code> is for use in a multitenant environment. Enter <code class="codeph">ALL</code> to set the encryption key in all of the PDBs in this CDB, or <code class="codeph">CURRENT</code> for the current PDB.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY USING TAG &#39;backups&#34; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP USING &#39;hr.emp_key_backup&#39;;

keystore altered.
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p>Oracle Database uses the keystore in the keystore location specified by the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> parameter in the <code class="codeph">sqlnet.ora</code> file to store the TDE master encryption key. See <a href="configuring-transparent-data-encryption.htm#GUID-DF9504EF-BA08-4585-895D-2E5F4BA30E50" title="Oracle Database checks the sqlnet.ora file for the directory location of the keystore, whether it is a software keystore, a hardware module security (HSM) keystore, or an Oracle Key Vault keystore.">About the Keystore Location in the sqlnet.ora File</a> for information about how the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> parameter works in the <code class="codeph">sqlnet.ora</code> file.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG9527"></a>
<div class="props_rev_3"><a id="GUID-B788CBF7-DB54-48D4-AB32-7AA06289153B"></a>
<h4 class="sect4">About Rotating the TDE Master Encryption Key</h4>
<div>
<p>Oracle Database uses a unified master encryption key for both TDE column encryption and TDE tablespace encryption.</p>
<p>When you rotate (also called rekeying) the TDE master encryption key for TDE column encryption, the master encryption key for TDE tablespace encryption also is rotated. Rotate the master encryption key only if it was compromised or as per the security policies of the organization. This process deactivates the previous TDE master encryption key.</p>
<p>You cannot change the TDE master encryption key or rotate a TDE master encryption key for an auto-login keystore. Because auto-login keystores do not have a password, an administrator or a privileged user can change the keys without the knowledge of the security officer. However, if both the auto-login and the password-based keystores are present in the configured location (as set in the <code class="codeph">sqlnet.ora</code> file), then when you rotate the TDE master encryption key, a TDE master encryption key is added to both the auto-login and password-based keystores. If the auto-login keystore is in use in a location that is different from that of the password-based keystore, then you must re-create the auto-login keystore.</p>
<div class="infobox-note" id="GUID-B788CBF7-DB54-48D4-AB32-7AA06289153B__GUID-6B7DA46C-91A3-432C-A581-98A75E927FFE">
<p class="notep1">Note:</p>
<p>You cannot add new information to auto-login keystores separately.</p>
</div>
</div>
</div>
<a id="ASOAG10541"></a>
<div class="props_rev_3"><a id="GUID-A687C8D0-7597-4D92-BB75-CEE35B012970"></a>
<h4 class="sect4">Rotating the TDE Master Encryption Key</h4>
<div>
<p>You can use the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement to rotate (also called rekeying) a TDE master encryption key.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root or to the PDB. For example, to log in to a PDB called <code class="codeph">hrpdb</code>:</p>
<pre dir="ltr">sqlplus sec_admin@hrpdb as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</li>
<li>
<p>Ensure that the keystore is open.</p>
<p>Query the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view to find if the keystore is open. If the keystore is closed, then see the following sections for information about opening it:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-4FBC5088-A045-4306-88C0-FEBC07CA18AC" title="After you have configured the hardware security module, you must open the hardware keystore before it can be used.">Step 3: Open the Hardware Keystore</a></p>
</li>
</ul>
</li>
<li>
<p>If you are rotating the TDE master encryption key for a keystore that has auto login enabled, then ensure that both the auto login keystore, identified by the <code class="codeph">.sso</code> file, and the encryption keystore, identified by the <code class="codeph">.p12</code> file, are present.</p>
<p>You can find the location of these files by querying the <code class="codeph">WRL_PARAMETER</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view. To find the <code class="codeph">WRL_PARAMETER</code> values for all of the database instances, query the <code class="codeph">GV$ENCRYPTION_WALLET</code> view.</p>
</li>
<li>
<p>Rotate the TDE master encryption key by using the following statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET ENCRYPTION KEY [USING TAG &#39;<span class="italic">tag</span>&#39;] IDENTIFIED BY <span class="italic">keystore_password</span> WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;] [CONTAINER = ALL | CURRENT];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is the associated attributes and information that you define. Enclose this setting in single quotation marks (&#39; &#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is the mandatory keystore password that you created when you created the keystore in <a href="configuring-transparent-data-encryption.htm#GUID-F098129B-BBFF-4C86-B119-80AB706DB2A1" title="After you have specified a directory location for the software keystore, you can create the keystore.">Step 2: Create the Software Keystore</a>.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> creates a backup of the keystore. You must use this option for password-based and hardware keystores. Optionally, you can use the <code class="codeph">USING</code> clause to add a brief description of the backup. Enclose this description in single quotation marks (&#39;&nbsp;&#39;). This identifier is appended to the named keystore file (for example, <code class="codeph">ewallet_</code><span class="italic"><code class="codeph">time-stamp</code></span><code class="codeph">_emp_key_backup.p12</code>). Follow the file naming conventions that your operating system uses.</p>
</li>
<li>
<p><code class="codeph">CONTAINER</code> is for use in a multitenant environment. Enter <code class="codeph">ALL</code> to open the keystore in all of the PDBs in this CDB, or <code class="codeph">CURRENT</code> for the current PDB.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEY IDENTIFIED BY <span class="italic">password</span> WITH BACKUP USING &#39;emp_key_backup&#39;;

keystore altered.
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p>For better security and to meet compliance regulations, periodically rotate the TDE master encryption key. This process deactivates the previous TDE master encryption key, creates a new TDE master encryption key, and then activates it. You can check the keys that were created recently by querying the <code class="codeph">CREATION_TIME</code> column in the <code class="codeph">V$ENCRYPTION_KEYS</code> view. To find the keys that were activated recently, query the <code class="codeph">ACTIVATION_TIME</code> column in the <code class="codeph">V$ENCRYPTION_KEYS</code> view.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="ASOAG10330"></a>
<div class="props_rev_3"><a id="GUID-85A465EB-50E2-482C-8AC5-851436AB8F8F"></a>
<h3 class="sect3">Exporting and Importing the TDE Master Encryption Key</h3>
<div>
<p>You can export and import the TDE master encryption key in a variety ways, to satisfy the needs of other Oracle features, such as a multitenant environment or Oracle Data Guard.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-7EFED8DE-8586-417C-A192-FF5232FD1A73" title="Oracle Database features such as transportable tablespaces and Oracle Data Pump move data that is possibly encrypted between databases.">About Exporting and Importing the TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-E2BDCF92-CFAA-42E6-86D7-05A3E76C9260" title="You can use ADMINISTER KEY MANAGEMENT EXPORT to export TDE master encryption keys from a keystore, and then import them into another keystore.">About Exporting TDE Master Encryption Keys</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1F87839D-4D04-4752-A62E-399EFAD7E46E" title="The ADMINISTER KEY MANAGEMENT statement with the EXPORT [ENCRYPTION] KEYS WITH SECRET clause exports a TDE master encryption key.">Exporting a TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-9BB20801-FE2D-468D-B59F-6C3463029E3C" title="The ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS statement can export a TDE master encryption key by using a subquery.">Example: Exporting a TDE Master Encryption Key by Using a Subquery</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-8541C442-4819-45EB-A63F-F08273EDBFA3" title="The ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS WITH SECRET statement can export a list of TDE master encryption key identifiers to a file.">Example: Exporting a List of TDE Master Encryption Key Identifiers to a File</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-3E44E073-E1C3-4F04-9F3A-6B98D1A5FB49" title="The ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS SQL statement can export all TDE master encryption keys of a database.">Example: Exporting All TDE Master Encryption Keys of the Database</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-E72639A8-43B7-4EAC-B0F9-85DF4A714E3A" title="The ADMINISTER KEY MANAGEMENT IMPORT statement can import exported TDE master encryption keys from a key export file into a target keystore.">About Importing TDE Master Encryption Keys</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-76D1E67E-DC61-42B5-A8BF-8CA420307B52" title="The ADMINISTER KEY MANAGEMENT statement with the IMPORT [ENCRYPTION] KEYS WITH SECRET clause can import a TDE master encryption key.">Importing a TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0096C965-552F-4BB9-8B42-32D446D91887" title="You can use the ADMINISTER KEY MANAGEMENT IMPORT KEYS SQL statement to import a TDE master encryption key.">Example: Importing a TDE Master Encryption Key</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-3988C759-E1DA-4385-91B9-A8F1215128B4" title="The keystore merge operation differs from the TDE master encryption key export and import operations.">How Keystore Merge Differs from TDE Master Encryption Key Export or Import</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-85A465EB-50E2-482C-8AC5-851436AB8F8F__GUID-D265089D-D798-4E80-B413-A23AC53567DB">
<p class="notep1">See Also:</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-A147EC22-9532-40D2-B73C-40D5C7197173" title="Oracle Data Pump can encrypt entire dump sets, not just Transparent Data Encryption columns.">Using Oracle Data Pump to Encrypt Entire Dump Sets</a></p>
</div>
</div>
<a id="ASOAG10423"></a>
<div class="props_rev_3"><a id="GUID-7EFED8DE-8586-417C-A192-FF5232FD1A73"></a>
<h4 class="sect4">About Exporting and Importing the TDE Master Encryption Key</h4>
<div>
<p>Oracle Database features such as transportable tablespaces and Oracle Data Pump move data that is possibly encrypted between databases.</p>
<p>In addition, CDBs contain PDBs that can be plugged in or unplugged. These are some common scenarios in which you can choose to export and import TDE master encryption keys to move them between source and target keystores. For Data Guard (Logical Standby), you must copy the keystore that is in the primary database to the standby database. Instead of merging the primary database keystore with the standby database, you can export the TDE master encryption key that is in use and then import it to the standby database. Moving transportable tablespaces that are encrypted between databases requires that you export the TDE master encryption key at the source database and then import it into the target database.</p>
</div>
</div>
<a id="ASOAG10424"></a>
<div class="props_rev_3"><a id="GUID-E2BDCF92-CFAA-42E6-86D7-05A3E76C9260"></a>
<h4 class="sect4">About Exporting TDE Master Encryption Keys</h4>
<div>
<p>You can use <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT</code> to export TDE master encryption keys from a keystore, and then import them into another keystore.</p>
<p>A TDE master encryption key is exported together with its key identifier and key attributes. The exported keys are protected with a password (secret) in the export file.</p>
<p>You can specify the TDE master encryption keys to be exported by using the <code class="codeph">WITH IDENTIFIER</code> clause of the <code class="codeph">ADMINSITER KEY MANAGENT EXPORT</code> statement. To export the TDE master encryption keys, you can either specify their key identifiers as a comma-separated list, or you can specify a query that enumerates their key identifiers. Be aware that Oracle Database executes the query determining the key identifiers within the current user&#39;s rights and not with definer&#39;s rights.</p>
<p>If you omit the <code class="codeph">WITH IDENTIFER</code> clause, then all of the TDE master encryption keys of the database are exported.</p>
<p>In a consolidated database, you can export the keys from within a PDB for a PDB to be unplugged. In this scenario, you can only use the <code class="codeph">WITH IDENTIFIER</code> clause in the root and not in a PDB. See <a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a> for information about exporting keys in a PDB.</p>
<p>To export a set of TDE master encryption keys:</p>
<div class="infoboxnotealso" id="GUID-E2BDCF92-CFAA-42E6-86D7-05A3E76C9260__GUID-9E8B4E19-9C6D-4C78-A161-B0016637BAA2">
<p class="notep1">See Also:</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a> for an example of using this statement in a multitenant environment</p>
</div>
</div>
</div>
<a id="ASOAG10522"></a>
<div class="props_rev_3"><a id="GUID-1F87839D-4D04-4752-A62E-399EFAD7E46E"></a>
<h4 class="sect4">Exporting a TDE Master Encryption Key</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">EXPORT [ENCRYPTION] KEYS WITH SECRET</code> clause exports a TDE master encryption key.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. For example:</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>If necessary, open the keystore.</p>
<p>See <a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a> for information about opening a keystore.</p>
</li>
<li>
<p>Run the following SQL statement to export a set of TDE master encryption keys:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT EXPORT [ENCRYPTION] KEYS 
WITH SECRET &#34;<span class="italic">export_secret</span>&#34; 
TO &#39;<span class="italic">file_path</span>&#39; IDENTIFIED BY <span class="italic">software_keystore_password</span>
   [WITH IDENTIFIER IN &#39;<span class="italic">key_id1</span>&#39;, &#39;<span class="italic">key_id2</span>&#39;, &#39;<span class="italic">key_idn</span>&#39; | (<span class="italic">SQL_query</span>)];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">export_secret</code></span> is a password that you can specify to encrypt the export the file that contains the exported keys. Enclose this secret in double quotation marks (&#34;&nbsp;&#34;), or you can omit the quotation marks if the secret has no spaces.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">file_path</code></span> is the complete path and name of the file to which the keys must be exported. Enclose this path in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the password of the keystore containing the keys.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">key_id1</code></span>, <span class="italic"><code class="codeph">key_id2</code></span>, <span class="italic"><code class="codeph">key_idn</code></span> is a string of one or more TDE master encryption key identifiers for the TDE master encryption key being exported. Separate each key identifier with a comma and enclose each of these key identifiers in single quotation marks (&#39;&nbsp;&#39;). To find a list of TDE master encryption key identifiers, query the <code class="codeph">KEY_ID</code> column of the <code class="codeph">V$ENCRYPTION_KEYS</code> dynamic view.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">SQL_query</code></span> is a query that fetches a list of the TDE master encryption key identifiers. It should return only one column which contains the TDE master encryption key identifiers. This query is executed with current user rights.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10426"></a><a id="ASOAG10523"></a>
<div class="props_rev_3"><a id="GUID-9BB20801-FE2D-468D-B59F-6C3463029E3C"></a>
<h4 class="sect4">Example: Exporting a TDE Master Encryption Key by Using a Subquery</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS</code> statement can export a TDE master encryption key by using a subquery.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-8541C442-4819-45EB-A63F-F08273EDBFA3__CIHEHFIH">Example 4-8</a> shows how to export TDE master encryption keys whose identifiers are fetched by a query to a file called <code class="codeph">export.exp</code>. The TDE master encryption keys in the file are encrypted using the secret <code class="codeph">my_secret</code>. The <code class="codeph">SELECT</code> statement finds the identifiers for the TDE master encryption keys to be exported.</p>
<p>Be aware that in a multitenant environment, the <code class="codeph">WITH IDENTIFIER</code> clause is not supported when you try to import or export keys inside a PDB. It is only permitted in the root. See <a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a> for information about exporting keys in a PDB.</p>
<div class="example" id="GUID-9BB20801-FE2D-468D-B59F-6C3463029E3C__CIHHCDBI">
<p class="titleinexample">Example 4-7 Exporting a List of TDE Master Encryption Key Identifiers to a File</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS WITH SECRET &#34;my_secret&#34; 
TO &#39;/TDE/export.exp&#39; IDENTIFIED BY <span class="italic">password</span> 
WITH IDENTIFIER IN &#39;AdoxnJ0uH08cv7xkz83ovwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39;,
&#39;AW5z3CoyKE/yv3cNT5CWCXUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#39;;

keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10425"></a>
<div class="props_rev_3"><a id="GUID-8541C442-4819-45EB-A63F-F08273EDBFA3"></a>
<h4 class="sect4">Example: Exporting a List of TDE Master Encryption Key Identifiers to a File</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS WITH SECRET</code> statement can export a list of TDE master encryption key identifiers to a file.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-9BB20801-FE2D-468D-B59F-6C3463029E3C__CIHHCDBI">Example 4-7</a> shows how to export TDE master encryption keys by specifying their identifiers as a list, to a file called <code class="codeph">export.exp</code>. Master encryption keys in the file are encrypted using the secret <code class="codeph">my_secret</code>. The identifiers of the TDE master encryption key to be exported are provided as a comma-separated list.</p>
<div class="example" id="GUID-8541C442-4819-45EB-A63F-F08273EDBFA3__CIHEHFIH">
<p class="titleinexample">Example 4-8 Exporting TDE Master Encryption Key Identifiers by Using a Subquery</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS WITH SECRET &#34;my_secret&#34; 
TO &#39;/etc/TDE/export.exp&#39; IDENTIFIED BY <span class="italic">password</span> 
WITH IDENTIFIER IN (SELECT KEY_ID FROM V$ENCRYPTION_KEYS WHERE ROWNUM &lt;3);

keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10524"></a>
<div class="props_rev_3"><a id="GUID-3E44E073-E1C3-4F04-9F3A-6B98D1A5FB49"></a>
<h4 class="sect4">Example: Exporting All TDE Master Encryption Keys of the Database</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS</code> SQL statement can export all TDE master encryption keys of a database.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-3E44E073-E1C3-4F04-9F3A-6B98D1A5FB49__BGBGDDCG">Example 4-9</a> shows how to export all of the TDE master encryption keys of the database to a file called <code class="codeph">export.exp</code>. The TDE master encryption keys in the file are encrypted using the secret <code class="codeph">my_secret</code>.</p>
<div class="example" id="GUID-3E44E073-E1C3-4F04-9F3A-6B98D1A5FB49__BGBGDDCG">
<p class="titleinexample">Example 4-9 Exporting All of the TDE Master Encryption Keys of the Database</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT EXPORT ENCRYPTION KEYS WITH SECRET &#34;my_secret&#34; TO
&#39;/etc/TDE/export.exp&#39; IDENTIFIED BY password;

keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10427"></a>
<div class="props_rev_3"><a id="GUID-E72639A8-43B7-4EAC-B0F9-85DF4A714E3A"></a>
<h4 class="sect4">About Importing TDE Master Encryption Keys</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT IMPORT</code> statement can import exported TDE master encryption keys from a key export file into a target keystore.</p>
<p>You cannot re-import TDE master encryption keys that have already been imported.</p>
<p>In a consolidated database, you can import the keys from within a PDB for a PDB to be plugged. See <a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-3592D355-F190-4A6F-BF1D-00ABCC0E02BE" title="To export or import TDE master encryption keys for a PDB, you use the ADMINISTER KEY MANAGEMENT EXPORT and ADMINISTER KEY MANAGEMENT IMPORT statements.">Exporting and Importing TDE Master Encryption Keys for a PDB</a> for information about exporting keys in a PDB.</p>
</div>
</div>
<a id="ASOAG10525"></a>
<div class="props_rev_3"><a id="GUID-76D1E67E-DC61-42B5-A8BF-8CA420307B52"></a>
<h4 class="sect4">Importing a TDE Master Encryption Key</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement with the <code class="codeph">IMPORT [ENCRYPTION] KEYS WITH SECRET</code> clause can import a TDE master encryption key.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or <code class="codeph">SYSKM</code> privilege.</p>
<p>In a multitenant environment, log in to the root. The following command logs user <code class="codeph">c##sec_admin</code> into the root.</p>
<pre dir="ltr">sqlplus c##sec_admin as syskm
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>If necessary, open the keystore.</p>
<p>See <a href="configuring-transparent-data-encryption.htm#GUID-37296947-18DB-4CFA-A112-794A55E942E2" title="Depending on the type of keystore you create, you must manually open the keystore before you can use it.">Step 3: Open the Software Keystore</a> for information about opening a keystore.</p>
</li>
<li>
<p>Run the following SQL statement:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT IMPORT [ENCRYPTION] KEYS 
WITH SECRET &#34;<span class="italic">import_secret</span>&#34;  FROM &#39;<span class="italic">file_name</span>&#39; | FROM &#39;<span class="italic">file_name</span>&#39; 
IDENTIFIED BY [EXTERNAL STORE | <span class="italic">keystore_password</span>] 
[WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">import_secret</code></span> is the same password that was used to encrypt the keys during the export operation. Enclose this secret in double quotation marks (&#34; &#34;), or you can omit the quotation marks if the secret has no spaces.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">file_name</code></span> is the complete path and name of the file from which the keys need to be imported. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><code class="codeph">IDENTIFIED BY</code> can be one of the following settings:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">EXTERNAL STORE</code> uses the keystore password stored in the external store to perform the keystore operation.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">software_keystore_password</code></span> is the password of the software keystore where the keys are being imported.</p>
</li>
</ul>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> must be used in case the target keystore was not backed up before the import operation. <span class="italic"><code class="codeph">backup_identifier</code></span> is an optional string that you can provide to identify the keystore backup. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10428"></a><a id="ASOAG10526"></a>
<div class="props_rev_3"><a id="GUID-0096C965-552F-4BB9-8B42-32D446D91887"></a>
<h4 class="sect4">Example: Importing a TDE Master Encryption Key</h4>
<div>
<p>You can use the <span class="apiname">ADMINISTER KEY MANAGEMENT IMPORT KEYS</span> SQL statement to import a TDE master encryption key.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-0096C965-552F-4BB9-8B42-32D446D91887__CIHEAHBC">Example 4-10</a> shows how to import the TDE master encryption key identifiers that are stored in the file <code class="codeph">export.exp</code> and encrypted with the secret <code class="codeph">my_secret</code>.</p>
<div class="example" id="GUID-0096C965-552F-4BB9-8B42-32D446D91887__CIHEAHBC">
<p class="titleinexample">Example 4-10 Importing TDE Master Encryption Key Identifiers from an Export File</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT IMPORT KEYS WITH SECRET &#34;my_secret&#34; 
FROM &#39;/etc/TDE/export.exp&#39; IDENTIFIED BY <span class="italic">password</span> WITH BACKUP;

keystore altered.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10527"></a>
<div class="props_rev_3"><a id="GUID-3988C759-E1DA-4385-91B9-A8F1215128B4"></a>
<h4 class="sect4">How Keystore Merge Differs from TDE Master Encryption Key Export or Import</h4>
<div>
<p>The keystore merge operation differs from the TDE master encryption key export and import operations.</p>
<p>Even though both the <code class="codeph">ADMINISTER KEY MANAGEMENT MERGE</code> statement and the <code class="codeph">ADMINISTER KEY MANAGEMENT EXPORT</code> and <code class="codeph">IMPORT</code> statements eventually move the TDE master encryption keys from one keystore to the next, there are differences in how these two statements function.</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">MERGE</code> statement merges two keystores whereas the <code class="codeph">EXPORT</code> and <code class="codeph">IMPORT</code> statements export the keys to a file or import the keys from a file. The keystore is different from the export file, and the two cannot be used interchangeably. The export file is not a keystore and cannot be configured to be used with a database as a keystore. Similarly, the <code class="codeph">IMPORT</code> statement cannot extract the TDE master encryption keys from the keystore.</p>
</li>
<li>
<p>The <code class="codeph">MERGE</code> statement merges all of the TDE master encryption keys of the specified keystores where as the <code class="codeph">EXPORT</code> and <code class="codeph">IMPORT</code> statements can be selective.</p>
</li>
<li>
<p>The <code class="codeph">EXPORT</code> and <code class="codeph">IMPORT</code> statements require the user to provide both a location (<code class="codeph">filepath</code>) and the file name of the export file, whereas the <code class="codeph">MERGE</code> statement only takes in the location of the keystores.</p>
</li>
<li>
<p>The file name of the keystores is fixed and is determined by the <code class="codeph">MERGE</code> operation and can be either <code class="codeph">ewallet.p12</code> or <code class="codeph">cwallet.sso</code>. The file names for the export files used in the <code class="codeph">EXPORT</code> the <code class="codeph">IMPORT</code> statements are specified by the user.</p>
</li>
<li>
<p>The keystores on Automatic Storage Management (ASM) disk groups or regular file systems can be merged with <code class="codeph">MERGE</code> statements. The export files used in the <code class="codeph">EXPORT</code> and the <code class="codeph">IMPORT</code> statements can only be a regular operating system file and cannot be located on an ASM disk group.</p>
</li>
<li>
<p>The keystores merged using the <code class="codeph">MERGE</code> statement do not need to be configured or in use with the database. The <code class="codeph">EXPORT</code> statement can only export the keys from a keystore that is configured and in use with the database and is also open when the export is done. The <code class="codeph">IMPORT</code> statement can only import the keys into a keystore that is open, configured, and in use with the database.</p>
</li>
<li>
<p>The <code class="codeph">MERGE</code> statement never modifies the metadata associated with the TDE master encryption keys. The <code class="codeph">EXPORT</code> and <code class="codeph">IMPORT</code> operations can modify the metadata of the TDE master encryption keys when required, such as during a PDB plug operation.</p>
</li>
</ul>
</div>
</div>
</div>
<a id="ASOAG10608"></a>
<div class="props_rev_3"><a id="GUID-48512BB6-C588-4704-B2BD-22606C0F05BC"></a>
<h3 class="sect3">Management of TDE Master Encryption Keys Using Oracle Key Vault</h3>
<div>
<p>You can use Oracle Key Vault to manage and share TDE master encryption keys across an enterprise.</p>
<p>Oracle Key Vault securely stores the keys in a central repository, along with other security objects such as credential files and Java keystores, and enables you to share these objects with other TDE-enabled databases.</p>
<div class="infoboxnotealso" id="GUID-48512BB6-C588-4704-B2BD-22606C0F05BC__GUID-40ACCD79-8233-4D3A-973A-6454161A76CA">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-83DE1475-04DD-4B85-9CFA-D00AB0013EC8" title="You can use Oracle Key Vault to migrate both software and hardware keystores to and from Oracle Key Vault. This enables you to manage the keystores centrally, and then share the keystores as necessary with other TDE-enabled databases in your enterprise.">Migration of Keystores to and from Oracle Key Vault</a> for additional benefits of using Oracle Key Vault</p>
</li>
<li>
<p><a class="olink OKVAG10693" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OKVAG10693"><span><cite>Oracle Key Vault Administrator&#39;s Guide</cite></span></a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<a id="ASOAG10398"></a>
<div class="props_rev_3"><a id="GUID-FF270B27-A456-477A-81E0-50E74926A810"></a>
<h2 class="sect2">Storing Secrets Used by Oracle Database</h2>
<div>
<p>Secrets are data that support internal Oracle Database features and enable external clients such as Oracle GoldenGate to be integrated into the database.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-F35ACC55-A567-4CB8-9B13-B62F67F3DAB8" title="Keystores can store secrets that support internal Oracle Database features and integrate external clients such as Oracle GoldenGate.">About Storing Oracle Database Secrets in a Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-8C994DBB-1804-48AD-9C9F-03359C73E4C9" title="The ADMINISTER KEY MANAGEMENT ADD SECRET|UPDATE SECRET|DELETE CLIENT statements can add secrets, update secrets, and delete secrets from a keystore.">Storage of Oracle Database Secrets in a Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-A00025BA-1DAE-4E3C-BB28-AFC1ECF16425" title="The ADMINISTER KEY MANAGEMENT ADD SECRET statement can add an HSM password to a software keystore.">Example: Adding an HSM Password to a Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-111BF673-5DD1-4FA1-8DE0-3F63DAA8B479" title="The ADMINISTER KEY MANAGEMENT UPDATE SECRET statement can change an HSM password that is stored as a secret in a software keystore.">Example: Changing an HSM Password That Is Stored as a Secret in a Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-647817C3-E465-4B4C-A78A-DBC377272CCE" title="The ADMINISTER KEY MANAGEMENT DELETE SECRET statement can delete HSM passwords that are stored as secrets in a software keystore.">Example: Deleting an HSM Password That Is Stored as a Secret in a Software Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-D20146E5-E2B4-40D6-B503-189211FBD874" title="The ADMINISTER KEY MANAGEMENT ADD SECRET|UPDATE SECRET|DELETE CLIENT statements can add, update, and delete secrets.">Storage of Oracle Database Secrets in a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-780B5AFA-9353-479E-9462-A7EE078CE59F" title="The ADMINISTER KEY MANAGEMENT ADD SECRET statement can add an Oracle Database secret to a hardware keystore.">Example: Adding an Oracle Database Secret to a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-917EC3B1-BAE5-4F29-8DCF-FA8CDA0E8C49" title="The ADMINISTER KEY MANAGEMENT MANAGEMENT UPDATE SECRET statement can change an Oracle Database secret in a hardware keystore.">Example: Changing an Oracle Database Secret in a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-259B198F-E8CB-4134-8139-916500215955" title="The ADMINISTER KEY MANAGEMENT DELETE SECRET FOR CLIENT statement can delete an Oracle Database secret that is in a hardware keystore.">Example: Deleting an Oracle Database Secret in a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1BD98DB6-696B-4653-A8AC-B24EDE3BAE0D" title="A hardware security module can be configured to use the auto-login capability.">Configuring Auto-Login Hardware Security Modules</a></p>
</li>
</ul>
</div>
<a id="ASOAG10399"></a>
<div class="props_rev_3"><a id="GUID-F35ACC55-A567-4CB8-9B13-B62F67F3DAB8"></a>
<h3 class="sect3">About Storing Oracle Database Secrets in a Keystore</h3>
<div>
<p>Keystores can store secrets that support internal Oracle Database features and integrate external clients such as Oracle GoldenGate.</p>
<p>The secret key must be a string adhering to Oracle identifier rules. You can add, update, or delete a client secret in an existing keystore. The Oracle GoldenGate Extract process must have data encryption keys to decrypt the data that is in data files and in <code class="codeph">REDO</code> or <code class="codeph">UNDO</code> logs. Keys are encrypted with shared secrets when you share the keys between an Oracle database and an Oracle GoldenGate client. The software keystore stores the shared secrets.</p>
<p>Depending on your site&#39;s requirements, you may require automated open keystore operations even when a hardware security module is configured. For this reason, the hardware security module password can be stored in a software auto-login keystore, which enables the auto-login capability for the hardware security module. The Oracle Database side can also store the credentials for the database to log in to an external storage server in the software keystore.</p>
<p>You can store Oracle Database secrets in both software keystores and hardware keystores:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Software keystores:</span> You can store secrets in software password-based, auto-login, and local auto-login software keystores. If you want to store secrets in an auto-login (or auto-login local) keystore, then note the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>If the software auto-login keystore is in the same location as its corresponding password-based software keystore, then the secrets are added automatically.</p>
</li>
<li>
<p>If the software auto-login keystore is in a different location from its corresponding password-based software keystore, then you must create the auto-login keystore again from the password-based keystore, and keep the two keystores in synchronization.</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">Hardware keystores:</span> You can store secrets in standard hardware security modules.</p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-F35ACC55-A567-4CB8-9B13-B62F67F3DAB8__GUID-1051FA9F-4160-403D-A05B-11B91CABB1EE">
<p class="notep1">See Also:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-D20146E5-E2B4-40D6-B503-189211FBD874" title="The ADMINISTER KEY MANAGEMENT ADD SECRET|UPDATE SECRET|DELETE CLIENT statements can add, update, and delete secrets.">Storage of Oracle Database Secrets in a Hardware Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1BD98DB6-696B-4653-A8AC-B24EDE3BAE0D" title="A hardware security module can be configured to use the auto-login capability.">Configuring Auto-Login Hardware Security Modules</a></p>
</li>
</ul>
</div>
</div>
</div>
<a id="ASOAG10400"></a>
<div class="props_rev_3"><a id="GUID-8C994DBB-1804-48AD-9C9F-03359C73E4C9"></a>
<h3 class="sect3">Storage of Oracle Database Secrets in a Software Keystore</h3>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT ADD SECRET|UPDATE SECRET|DELETE CLIENT</code> statements can add secrets, update secrets, and delete secrets from a keystore.</p>
<p>As with all of the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statements, you must have the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or the <code class="codeph">SYSKM</code> administrative privilege. In a multitenant environment, run the statement in the root.</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Adding a secret:</span> Use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT
ADD SECRET &#39;<span class="italic">secret</span>&#39; FOR CLIENT &#39;<span class="italic">client_identifier</span>&#39; [USING TAG &#39;<span class="italic">tag</span>&#39;]
IDENTIFIED BY <span class="italic">keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;];
</pre></li>
<li>
<p><span class="bold">Updating a secret:</span> Use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT
UPDATE SECRET &#39;<span class="italic">secret</span>&#39; FOR CLIENT &#39;<span class="italic">client_identifier</span>&#39; [USING TAG &#39;<span class="italic">tag</span>&#39;]
IDENTIFIED BY <span class="italic">keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;];
</pre></li>
<li>
<p><span class="bold">Deleting a secret:</span> Use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT
DELETE SECRET FOR CLIENT &#39;<span class="italic">client_identifier</span>&#39; 
IDENTIFIED BY <span class="italic">keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;];
</pre></li>
</ul>
<p>In all of these statements, the specification is as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">secret</code></span> is the client secret key to be stored, updated, or deleted. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;) or omit the quotation marks if the secret has no spaces.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">client_identifier</code></span> is an alphanumeric string used to identify the secret key. <span class="italic"><code class="codeph">client_identifier</code></span> does not have a default value. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is an optional, user-defined description for the secret key to be stored. You can use <span class="italic"><code class="codeph">tag</code></span> with the <code class="codeph">ADD</code> and <code class="codeph">UPDATE</code> operations. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;). This tag appears in the <code class="codeph">SECRET_TAG</code> column of the <code class="codeph">V$CLIENT_SECRETS</code> view. See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EBBA92B5-E5D0-43F5-BF55-3B44367F6105" title="Custom TDE master encryption key attributes enable you to defined attributes that are specific to your needs.">Creating Custom TDE Master Encryption Key Attributes for Reporting Purposes</a> for more information about tags.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is the password for the keystore.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> is required in case the keystore was not backed up before the <code class="codeph">ADD</code>, <code class="codeph">UPDATE</code>, or <code class="codeph">DELETE</code> operation. <span class="italic"><code class="codeph">backup_identifier</code></span> is an optional user-defined description for the backup. Enclose <span class="italic"><code class="codeph">backup_identifier</code></span> in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10401"></a><a id="ASOAG10528"></a>
<div class="props_rev_3"><a id="GUID-A00025BA-1DAE-4E3C-BB28-AFC1ECF16425"></a>
<h3 class="sect3">Example: Adding an HSM Password to a Software Keystore</h3>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT ADD SECRET</span> statement can add an HSM password to a software keystore.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-A00025BA-1DAE-4E3C-BB28-AFC1ECF16425__CIHJBCFE">Example 4-11</a> shows how to add a hardware security module (HSM) password as a secret to a software keystore.</p>
<div class="example" id="GUID-A00025BA-1DAE-4E3C-BB28-AFC1ECF16425__CIHJBCFE">
<p class="titleinexample">Example 4-11 Adding an Oracle Database Secret to a Software Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT 
ADD SECRET &#39;psmith:<span class="italic">password</span>&#39; FOR CLIENT &#39;HSM_PASSWORD&#39; 
USING TAG &#39;HSM credentials&#39; IDENTIFIED BY <span class="italic">password</span> WITH BACKUP;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10430"></a>
<div class="props_rev_3"><a id="GUID-111BF673-5DD1-4FA1-8DE0-3F63DAA8B479"></a>
<h3 class="sect3">Example: Changing an HSM Password That Is Stored as a Secret in a Software Keystore</h3>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT UPDATE SECRET</span> statement can change an HSM password that is stored as a secret in a software keystore.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-111BF673-5DD1-4FA1-8DE0-3F63DAA8B479__CIHJCFCI">Example 4-12</a> shows how to change an HSM password that is stored as a secret in a software keystore.</p>
<div class="example" id="GUID-111BF673-5DD1-4FA1-8DE0-3F63DAA8B479__CIHJCFCI">
<p class="titleinexample">Example 4-12 Changing an Oracle Database Secret to a Software Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT
UPDATE SECRET <span class="italic">admin_password</span> FOR CLIENT &#39;HSM_PASSWORD&#39; 
USING TAG &#39;<span class="italic">new_host_credentials</span>&#39; IDENTIFIED BY <span class="italic">software_keytore_password</span>;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10431"></a>
<div class="props_rev_3"><a id="GUID-647817C3-E465-4B4C-A78A-DBC377272CCE"></a>
<h3 class="sect3">Example: Deleting an HSM Password That Is Stored as a Secret in a Software Keystore</h3>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT DELETE SECRET</span> statement can delete HSM passwords that are stored as secrets in a software keystore.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-647817C3-E465-4B4C-A78A-DBC377272CCE__CIHEEJDB">Example 4-13</a> shows how to delete an HSM password that is stored as a secret in the software keystore.</p>
<div class="example" id="GUID-647817C3-E465-4B4C-A78A-DBC377272CCE__CIHEEJDB">
<p class="titleinexample">Example 4-13 Deleting an Oracle Database Secret in a Software Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT 
DELETE SECRET FOR CLIENT &#39;HSM_PASSWORD&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10403"></a>
<div class="props_rev_3"><a id="GUID-D20146E5-E2B4-40D6-B503-189211FBD874"></a>
<h3 class="sect3">Storage of Oracle Database Secrets in a Hardware Keystore</h3>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT ADD SECRET|UPDATE SECRET|DELETE CLIENT</code> statements can add, update, and delete secrets.</p>
<p>As with all <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statements, you must have the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> or the <code class="codeph">SYSKM</code> administrative privilege. In a multitenant environment, run the statement in the root.</p>
<div class="infobox-note" id="GUID-D20146E5-E2B4-40D6-B503-189211FBD874__GUID-6246DD1A-2CC4-4D27-A85C-27A3F31F3C1C">
<p class="notep1">Note:</p>
<p>Before you attempt to add a secret to a hardware security module, ensure that it has PDCS#11 data object support.</p>
</div>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Adding a secret:</span> Use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ADD SECRET &#39;<span class="italic">secret</span>&#39; 
FOR CLIENT &#39;<span class="italic">client_identifier</span>&#39; [USING TAG &#39;<span class="italic">tag</span>&#39;] 
IDENTIFIED BY &#34;<span class="italic">user_id:password</span>&#34;;
</pre></li>
<li>
<p><span class="bold">Updating a secret:</span> Use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT UPDATE SECRET &#39;<span class="italic">secret</span>&#39; 
FOR CLIENT &#39;<span class="italic">client_identifier</span>&#39; [USING TAG &#39;<span class="italic">tag</span>&#39;] 
IDENTIFIED BY &#34;<span class="italic">user_id:password</span>&#34;;
</pre></li>
<li>
<p><span class="bold">Deleting a secret:</span> Use the following syntax:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT DELETE SECRET FOR CLIENT &#39;<span class="italic">client_identifier</span>&#39; 
IDENTIFIED BY &#34;<span class="italic">user_id:password</span>&#34;;
</pre></li>
</ul>
<p>In all of these statements, the specification as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">secret</code></span> is the client secret key to be stored, updated, or deleted. Enclose this setting in double quotation marks (&#39;&nbsp;&#39;) or omit the quotation marks if the secret has no spaces.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">client_identifier</code></span> is an alphanumeric string used to identify the secret key. <span class="italic"><code class="codeph">client_identifier</code></span> does not have a default value. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is an optional, user-defined description for the secret key to be stored. You can use <span class="italic"><code class="codeph">tag</code></span> with the <code class="codeph">ADD</code> and <code class="codeph">UPDATE</code> operations. Enclose this setting in single quotation marks (&#39; &#39;). This tag appears in the <code class="codeph">SECRET_TAG</code> column of the <code class="codeph">V$CLIENT_SECRETS</code> view. See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EBBA92B5-E5D0-43F5-BF55-3B44367F6105" title="Custom TDE master encryption key attributes enable you to defined attributes that are specific to your needs.">Creating Custom TDE Master Encryption Key Attributes for Reporting Purposes</a> for more information about tags.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">user_id:password</code></span> is the password for the hardware keystore. Separate the <span class="italic"><code class="codeph">user_id</code></span> and the <span class="italic"><code class="codeph">password</code></span> with a colon, and enclose this setting in double quotation marks (&#34; &#34;).</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10432"></a><a id="ASOAG10529"></a>
<div class="props_rev_3"><a id="GUID-780B5AFA-9353-479E-9462-A7EE078CE59F"></a>
<h3 class="sect3">Example: Adding an Oracle Database Secret to a Hardware Keystore</h3>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT ADD SECRET</span> statement can add an Oracle Database secret to a hardware keystore.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-780B5AFA-9353-479E-9462-A7EE078CE59F__CIHFCIFC">Example 4-14</a> shows how to add a password for a user to a hardware keystore.</p>
<div class="example" id="GUID-780B5AFA-9353-479E-9462-A7EE078CE59F__CIHFCIFC">
<p class="titleinexample">Example 4-14 Adding an Oracle Database Secret to a Hardware Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ADD SECRET &#39;<span class="italic">password</span>&#39; 
FOR CLIENT &#39;admin@myhost&#39; USING TAG &#39;myhost admin credentials&#39; 
IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10433"></a>
<div class="props_rev_3"><a id="GUID-917EC3B1-BAE5-4F29-8DCF-FA8CDA0E8C49"></a>
<h3 class="sect3">Example: Changing an Oracle Database Secret in a Hardware Keystore</h3>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT MANAGEMENT UPDATE SECRET</span> statement can change an Oracle Database secret in a hardware keystore.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-917EC3B1-BAE5-4F29-8DCF-FA8CDA0E8C49__CIHBADJF">Example 4-15</a> shows how to change a password that is stored as a secret in a hardware keystore.</p>
<div class="example" id="GUID-917EC3B1-BAE5-4F29-8DCF-FA8CDA0E8C49__CIHBADJF">
<p class="titleinexample">Example 4-15 Changing an Oracle Database Secret in a Hardware Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT MANAGEMENT UPDATE SECRET &#39;<span class="italic">password2</span>&#39; 
FOR CLIENT &#39;admin@myhost&#39; USING TAG &#39;New host credentials&#39; 
IDENTIFIED BY &#34;psmith:password&#34;;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10434"></a>
<div class="props_rev_3"><a id="GUID-259B198F-E8CB-4134-8139-916500215955"></a>
<h3 class="sect3">Example: Deleting an Oracle Database Secret in a Hardware Keystore</h3>
<div>
<p>The <span class="apiname">ADMINISTER KEY MANAGEMENT DELETE SECRET FOR CLIENT</span> statement can delete an Oracle Database secret that is in a hardware keystore.</p>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-259B198F-E8CB-4134-8139-916500215955__CIHEEACE">Example 4-16</a> shows how to delete a hardware security module password that is stored as a secret in the hardware keystore.</p>
<div class="example" id="GUID-259B198F-E8CB-4134-8139-916500215955__CIHEEACE">
<p class="titleinexample">Example 4-16 Deleting an Oracle Database Secret in a Hardware Keystore</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT DELETE SECRET FOR CLIENT &#39;admin@myhost&#39; 
IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="ASOAG10435"></a>
<div class="props_rev_3"><a id="GUID-1BD98DB6-696B-4653-A8AC-B24EDE3BAE0D"></a>
<h3 class="sect3">Configuring Auto-Login Hardware Security Modules</h3>
<div>
<p>A hardware security module can be configured to use the auto-login capability.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-D7ACB0B7-CA85-4F72-B29E-2E283409546F" title="An auto-login hardware security module stores the hardware security module credentials in an auto-login keystore.">About Configuring Auto-Login Hardware Security Modules</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1E8CD504-A87D-4690-8076-B2F1BA8EC645" title="The ADMINISTER KEY MANAGEMENT statement configures an auto-login hardware security module.">Configuring an Auto-Login Hardware Security Module</a></p>
</li>
</ul>
</div>
<a id="ASOAG10530"></a>
<div class="props_rev_3"><a id="GUID-D7ACB0B7-CA85-4F72-B29E-2E283409546F"></a>
<h4 class="sect4">About Configuring Auto-Login Hardware Security Modules</h4>
<div>
<p>An auto-login hardware security module stores the hardware security module credentials in an auto-login keystore.</p>
<p>This configuration reduces the security of the system as a whole. However, this configuration does support unmanned or automated operations and is useful in deployments where automatic re-login of the hardware security module is necessary.</p>
<p>Be aware that executing the query <code class="codeph">SELECT * FROM V$ENCRYPTION_WALLET</code> will automatically open an auto-login hardware security module. For example, suppose you have an auto-login hardware security module configured. If you close the keystore and query the <code class="codeph">V$ENCRYPTION_WALLET</code> view, then the output will indicate that a keystore is open. This is because <code class="codeph">V$ENCRYPTION_WALLET</code> opened up the auto-login hardware and then displayed the status of the auto-login keystore.</p>
<p>To enable the auto-login capability for a hardware security module, you must store the hardware security module credentials in the hardware keystore.</p>
</div>
</div>
<a id="ASOAG10531"></a>
<div class="props_rev_3"><a id="GUID-1E8CD504-A87D-4690-8076-B2F1BA8EC645"></a>
<h4 class="sect4">Configuring an Auto-Login Hardware Security Module</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement configures an auto-login hardware security module.</p>
<div class="section">
<ol>
<li>
<p>Ensure that you configured the TDE hardware keystore. using <a href="configuring-transparent-data-encryption.htm#GUID-753C4808-CC51-4DA1-A5C3-980417FDAB14" title="A hardware keystore resides in a hardware security module (HSM), which is designed to store encryption keys.">Configuring a Hardware Keystore</a>.</p>
</li>
<li>
<p>Close the hardware security module if it is open. (You can check the status of whether a keystore is open or closed by querying the <code class="codeph">STATUS</code> column of the <code class="codeph">V$ENCRYPTION_WALLET</code> view.)</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;
</pre>
<p>See <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-C8CF91A0-9EF9-4479-880D-1D8C2FBE05B2" title="To close a hardware keystore, you must use the ADMINISTER KEY MANAGEMENT statement with the SET KEYSTORE CLOSE clause.">Closing a Hardware Keystore</a> for more information.</p>
</li>
<li id="GUID-1E8CD504-A87D-4690-8076-B2F1BA8EC645__BGBDIAAD">
<p>If you have not migrated from a software keystore, then create the software keystore with the hardware keystore password in the appropriate location (for example, <code class="codeph">/etc/ORACLE/WALLETS/orcl</code>).</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEYSTORE &#39;/etc/ORACLE/WALLETS/orcl&#39; 
IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;
</pre></li>
<li id="GUID-1E8CD504-A87D-4690-8076-B2F1BA8EC645__BGBEECCF">
<p>If you have migrated and are using an auto-login software keystore in a specific location (for example, <code class="codeph">/etc/ORACLE/WALLETS/HSM</code>), then create the software password keystore with the hardware keystore password from the auto-login keystore.</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE KEYSTORE &#39;/etc/ORACLE/WALLETS/orcl&#39; IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34;;

ADMINISTER KEY MANAGEMENT 
MERGE KEYSTORE &#39;/etc/ORACLE/WALLETS/HSM&#39; <span class="italic">-- Example keystore path</span>
INTO EXISTING KEYSTORE &#39;/etc/ORACLE/WALLETS/HSM&#39; <span class="italic">-- Example keystore location</span>
IDENTIFIED BY &#34;psmith:<span class="italic">password</span>&#34; WITH BACKUP;
</pre>
<p>The location of the keystore for the <code class="codeph">ADMINISTER KEY MANAGEMENT</code> merge statement does not need to be the location of the keystore in use.</p>
</li>
<li>
<p>Reconfigure the <code class="codeph">sqlnet.ora</code> file and add the keystore location of the software keystore created in Step <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1E8CD504-A87D-4690-8076-B2F1BA8EC645__BGBDIAAD">3</a> or Step <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-1E8CD504-A87D-4690-8076-B2F1BA8EC645__BGBEECCF">4</a> to the <code class="codeph">DIRECTORY</code> setting of the <code class="codeph">ENCRYPTION_WALLET_LOCATION</code> setting.</p>
<p>For example:</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION=
 (SOURCE=(METHOD=FILE)(METHOD_DATA=
   (DIRECTORY=/etc/ORACLE/WALLETS/orcl)))
</pre>
<p><a href="configuring-transparent-data-encryption.htm#GUID-DF9504EF-BA08-4585-895D-2E5F4BA30E50" title="Oracle Database checks the sqlnet.ora file for the directory location of the keystore, whether it is a software keystore, a hardware module security (HSM) keystore, or an Oracle Key Vault keystore.">About the Keystore Location in the sqlnet.ora File</a> provides more information about how Oracle Database finds the keystore location.</p>
</li>
<li>
<p>Reconnect to the database, or log out and then log back in again, so that the change that you made in the previous step takes effect.</p>
<p>For example:</p>
<pre dir="ltr">CONNECT psmith/AS SYSKM
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Open the software keystore.</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY <span class="italic">software_keystore_password</span>;
</pre></li>
<li>
<p>Add or update the secret in the software keystore.</p>
<p>The secret is the hardware security module password and the client is the <code class="codeph">HSM_PASSWORD</code>. <code class="codeph">HSM_PASSWORD</code> is an Oracle-defined client name that is used to represent the HSM password as a secret in the software keystore.</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ADD SECRET &#34;<span class="italic">user_id</span>:<span class="italic">password</span>&#34; 
FOR CLIENT &#34;HSM_PASSWORD&#34; IDENTIFIED BY <span class="italic">software_keystore_</span><span class="italic">password</span> 
WITH BACKUP;
</pre></li>
<li>
<p>Close the software keystore.</p>
<p>For example:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT SET KEYSTORE CLOSE IDENTIFIED BY <span class="italic">software_keystore_</span><span class="italic">password</span>;
</pre></li>
<li>
<p>Create (or re-create) the auto-login keystore.</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT CREATE AUTO_LOGIN KEYSTORE 
FROM KEYSTORE &#39;/etc/ORACLE/WALLETS/orcl/hsm&#39; <span class="italic">-- Keystore location</span>
IDENTIFIED BY <span class="italic">software_keystore_password</span>; 
</pre></li>
<li>
<p>Update the <code class="codeph">sqlnet.ora</code> file to use the hardware security module location.</p>
<p>For example:</p>
<pre dir="ltr">ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(METHOD=HSM)(METHOD_DATA=
    (DIRECTORY=/etc/ORACLE/WALLETS/orcl)))
</pre></li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p>At this stage, the next time that a TDE operation executes, the hardware security module auto-login keystore opens automatically.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
<a id="ASOAG10338"></a>
<div class="props_rev_3"><a id="GUID-FBAC7644-B19F-4899-8FA0-0C487CABF368"></a>
<h2 class="sect2">Storing Oracle GoldenGate Secrets in a Keystore</h2>
<div>
<p>You can store Oracle GoldenGate secrets in Transparent Data Encryption keystores.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EEF80967-1671-465F-A13D-69C1CB676B39" title="You can use a keystore to store secret keys for tools and external clients such as Oracle GoldenGate.">About Storing Oracle GoldenGate Secrets in Keystores</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-69D83D36-8922-48FE-870C-F9EFCBEDDB24" title="Ensure that you meet the requirements for Oracle GoldenGate Extract to support Transparent Data Encryption capture.">Oracle GoldenGate Extract Classic Capture Mode TDE Requirements</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-D4E24734-07A9-4861-9948-E072D327238C" title="To configure Transparent Data Encryption keystore support for Oracle GoldenGate, you must decide on a shared secret for the keystore, configure the Oracle database, store the shared secret in the keystore, and then set the shared secret in the extract process.">Configuring TDE Keystore Support for Oracle GoldenGate</a></p>
</li>
</ul>
<div class="infoboxnotealso" id="GUID-FBAC7644-B19F-4899-8FA0-0C487CABF368__GUID-898EF685-4F69-4AA6-BB23-CA5D48CF2911">
<p class="notep1">See Also:</p>
<p><a class="olink OKVAG10845" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E50529-01&amp;id=OKVAG10845"><span class="italic">Oracle Key Vault Administrator&#39;s Guide</span></a> about how to use TDE with Oracle GoldenGate in an Oracle Key Vault environment</p>
</div>
</div>
<a id="ASOAG10385"></a>
<div class="props_rev_3"><a id="GUID-EEF80967-1671-465F-A13D-69C1CB676B39"></a>
<h3 class="sect3">About Storing Oracle GoldenGate Secrets in Keystores</h3>
<div>
<p>You can use a keystore to store secret keys for tools and external clients such as Oracle GoldenGate.</p>
<p>The secret key must be a string adhering to Oracle identifier rules. You can add, update, or delete a client secret in an existing keystore. This section describes how to capture Transparent Data Encryption encrypted data in the Oracle GoldenGate Extract (Extract) process using classic capture mode.</p>
<p>TDE support when Extract is in classic capture mode requires the exchange of the following keys:</p>
<ul style="list-style-type: disc;">
<li>
<p>TDE support for Oracle GoldenGate in the classic capture mode of the Extract process requires that an Oracle database and the Extract process share the secret to encrypt sensitive information being exchanged. The shared secret is stored securely in the Oracle database and Oracle GoldenGate domains. The shared secret is stored in the software keystore or the HSM as the database secret.</p>
</li>
<li>
<p>The decryption key is a password known as the shared secret that is stored securely in the Oracle database and Oracle GoldenGate domains. Only a party that has possession of the shared secret can decrypt the table and redo log keys.</p>
</li>
</ul>
<p>After you configure the shared secret, Oracle GoldenGate Extract uses the shared secret to decrypt the data. Oracle GoldenGate Extract does not handle the TDE master encryption key itself, nor is it aware of the keystore password. The TDE master encryption key and password remain within the Oracle database configuration.</p>
<p>Oracle GoldenGate Extract only writes the decrypted data to the Oracle GoldenGate trail file, which Oracle GoldenGate persists during transit. You can protect this file using your site&#39;s operating system standard security protocols, as well as the Oracle GoldenGate AES encryption options. Oracle GoldenGate does not write the encrypted data to a discard file (specified with the <code class="codeph">DISCARDFILE</code> parameter). The word <code class="codeph">ENCRYPTED</code> will be written to any discard file that is in use.</p>
<p>Oracle GoldenGate does require that the keystore be open when processing encrypted data. There is no performance effect of Oracle GoldenGate feature on the TDE operations.</p>
</div>
</div>
<a id="ASOAG10386"></a>
<div class="props_rev_3"><a id="GUID-69D83D36-8922-48FE-870C-F9EFCBEDDB24"></a>
<h3 class="sect3">Oracle GoldenGate Extract Classic Capture Mode TDE Requirements</h3>
<div>
<p>Ensure that you meet the requirements for Oracle GoldenGate Extract to support Transparent Data Encryption capture.</p>
<p>The requirements are as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>To maintain high security standards, ensure that the Oracle GoldenGate Extract process runs as part of the Oracle user (the user that runs the Oracle database). That way, the keys are protected in memory by the same privileges as the Oracle user.</p>
</li>
<li>
<p>Run the Oracle GoldenGate Extract process on the same computer as the Oracle database installation.</p>
</li>
</ul>
</div>
</div>
<a id="ASOAG10387"></a>
<div class="props_rev_3"><a id="GUID-D4E24734-07A9-4861-9948-E072D327238C"></a>
<h3 class="sect3">Configuring TDE Keystore Support for Oracle GoldenGate</h3>
<div>
<p>To configure Transparent Data Encryption keystore support for Oracle GoldenGate, you must decide on a shared secret for the keystore, configure the Oracle database, store the shared secret in the keystore, and then set the shared secret in the extract process.</p>
<p>Topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-57DCFB1D-9244-4FA1-8FBA-009969D5F861" title="A shared secret for a keystore is a password.">Step 1: Decide on a Shared Secret for the Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-35602580-D58B-48D6-B1F0-FBEBF24E5071" title="The DBMS_INTERNAL_CLKM PL/SQL package enables you to configure TDE support for Oracle GoldenGate.">Step 2: Configure Oracle Database for TDE Support for Oracle GoldenGate</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-901DF9D1-DDDC-4B07-9802-6E11B63E577F" title="The ADMINISTER KEY MANAGEMENT statement can store a TDE GoldenGate shared secret in a keystore.">Step 3: Store the TDE GoldenGate Shared Secret in the Keystore</a></p>
</li>
<li>
<p><a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-42B72C81-F22F-4063-BFD0-9E5F22C9B325" title="The GoldenGate Software Command Interface (GGSCI) utility set the TDE Oracle GoldenGate shared secret in the extract process.">Step 4: Set the TDE Oracle GoldenGate Shared Secret in the Extract Process</a></p>
</li>
</ul>
</div>
<a id="ASOAG10388"></a>
<div class="props_rev_3"><a id="GUID-57DCFB1D-9244-4FA1-8FBA-009969D5F861"></a>
<h4 class="sect4">Step 1: Decide on a Shared Secret for the Keystore</h4>
<div>
<p>A shared secret for a keystore is a password.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Decide on a shared secret that meets or exceeds Oracle Database password standards.</p>
</li>
</ul>
<p>Do not share this password with any user other than trusted administrators who are responsible for configuring Transparent Data Encryption to work with Oracle GoldenGate Extract.</p>
<div class="infoboxnotealso" id="GUID-57DCFB1D-9244-4FA1-8FBA-009969D5F861__GUID-54397DB6-BE67-4D97-A15C-2529C6D1BD14">
<p class="notep1">See Also:</p>
<p><a class="olink DBSEG10005" target="_blank" href="../DBSEG/guidelines.htm#DBSEG10005"><span><cite>Oracle Database Security Guide</cite></span></a> for guidelines on creating secure passwords</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10389"></a>
<div class="props_rev_3"><a id="GUID-35602580-D58B-48D6-B1F0-FBEBF24E5071"></a>
<h4 class="sect4">Step 2: Configure Oracle Database for TDE Support for Oracle GoldenGate</h4>
<div>
<p>The <code class="codeph">DBMS_INTERNAL_CLKM</code> PL/SQL package enables you to configure TDE support for Oracle GoldenGate.</p>
<div class="section">
<ol>
<li>
<p>Log in to the database instance as user <code class="codeph">SYS</code> with the <code class="codeph">SYSDBA</code> administrative privilege.</p>
<p>For example</p>
<pre dir="ltr">sqlplus sys as sysdba
Enter password: <span class="italic">password</span>
Connected.
</pre></li>
<li>
<p>In a multitenant environment, connect to the appropriate PDB.</p>
<p>For example:</p>
<pre dir="ltr">CONNECT SYS@hrpdb AS SYSDBA
Enter password: <span class="italic">password</span>
</pre>
<p>To find the available PDBs, query the <code class="codeph">DBA_PDBS</code> data dictionary view. To check the current PDB, run the <code class="codeph">show con_name</code> command.</p>
</li>
<li>
<p>Load the Oracle Database-supplied <code class="codeph">DBMS_INTERNAL_CLKM</code> PL/SQL package.</p>
<p>For example:</p>
<pre dir="ltr">@?/app/oracle/product/12.1/rdbms/admin/prvtclkm.plb
</pre>
<p>The <code class="codeph">prvtclkm.plb</code> file also enables Oracle GoldenGate to extract encrypted data from an Oracle database.</p>
</li>
<li>
<p>Grant the <code class="codeph">EXECUTE</code> privilege on the <code class="codeph">DBMS_INTERNAL_CLKM</code> PL/SQL package to the Oracle GoldenGate Extract database user.</p>
<p>For example:</p>
<pre dir="ltr">GRANT EXECUTE ON DBMS_INTERNAL_CLKM TO psmith;
</pre>
<p>This procedure enables the Oracle database and Oracle GoldenGate Extract to exchange information.</p>
</li>
<li>
<p>Exit SQL*Plus.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10390"></a>
<div class="props_rev_3"><a id="GUID-901DF9D1-DDDC-4B07-9802-6E11B63E577F"></a>
<h4 class="sect4">Step 3: Store the TDE GoldenGate Shared Secret in the Keystore</h4>
<div>
<p>The <code class="codeph">ADMINISTER KEY MANAGEMENT</code> statement can store a TDE GoldenGate shared secret in a keystore.</p>
<div class="section">
<ol>
<li>
<p>Ensure that you have configured the TDE software or hardware keystore, based on the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-1FA85E9E-5666-4CF3-A3C7-1F8A9230B0C9" title="A software keystore is a container for the TDE master encryption key, and it resides in the software file system.">Configuring a Software Keystore</a></p>
</li>
<li>
<p><a href="configuring-transparent-data-encryption.htm#GUID-753C4808-CC51-4DA1-A5C3-980417FDAB14" title="A hardware keystore resides in a hardware security module (HSM), which is designed to store encryption keys.">Configuring a Hardware Keystore</a></p>
</li>
</ul>
</li>
<li>
<p>Set the Oracle GoldenGate-Transparent Data Encryption key in the keystore.</p>
<p>The syntax is as follows:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ADD|UPDATE|DELETE SECRET &#39;<span class="italic">secret</span>&#39; 
FOR CLIENT &#39;<span class="italic">secret_identifier</span>&#39; [USING TAG &#39;<span class="italic">tag</span>&#39;] 
IDENTIFIED BY <span class="italic">keystore_password</span> [WITH BACKUP [USING &#39;<span class="italic">backup_identifier</span>&#39;]];
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">secret</code></span> is the client secret key to be stored, updated, or deleted. Enclose this setting in single quotation marks (&#39; &nbsp;&#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">secret_identifier</code></span> is an alphanumeric string used to identify the secret key. <span class="italic"><code class="codeph">secret_identifier</code></span> does not have a default value. Enclose this setting in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
<li>
<p><span class="italic"><code class="codeph">tag</code></span> is an optional, user-defined description for the secret key to be stored. <span class="italic"><code class="codeph">tag</code></span> can be used with the <code class="codeph">ADD</code> and <code class="codeph">UPDATE</code> operations. Enclose this setting in single quotation marks (&#39; &#39;). This tag appears in the <code class="codeph">SECRET_TAG</code> column of the <code class="codeph">V$CLIENT_SECRETS</code> view. <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-EBBA92B5-E5D0-43F5-BF55-3B44367F6105" title="Custom TDE master encryption key attributes enable you to defined attributes that are specific to your needs.">Creating Custom TDE Master Encryption Key Attributes for Reporting Purposes</a> provides more information about tags.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">keystore_password</code></span> is the password for the keystore that is configured.</p>
</li>
<li>
<p><code class="codeph">WITH BACKUP</code> is required in case the keystore was not backed up before the <code class="codeph">ADD</code>, <code class="codeph">UPDATE</code> or <code class="codeph">DELETE</code> operation. <span class="italic"><code class="codeph">backup_identifier</code></span> is an optional user-defined description for the backup. Enclose <span class="italic"><code class="codeph">backup_identifier</code></span> in single quotation marks (&#39;&nbsp;&#39;).</p>
</li>
</ul>
<p>The following example adds a secret key to the keystore and creates a backup in the same directory as the keystore:</p>
<pre dir="ltr">ADMINISTER KEY MANAGEMENT ADD SECRET &#39;some_secret&#39; 
FOR CLIENT &#39;ORACLE_GG&#39; USING TAG &#39;GoldenGate Secret&#39; 
IDENTIFIED BY <span class="italic">password</span> WITH BACKUP USING &#39;GG backup&#39;;
</pre></li>
<li>
<p>Verify the entry that you just created.</p>
<p>For example:</p>
<pre dir="ltr">SELECT CLIENT, SECRET_TAG FROM V$CLIENT_SECRETS WHERE CLIENT = &#39;ORACLEGG&#39;;

CLIENT   SECRET_TAG
-------- ------------------------------------------
ORACLEGG some_secret
</pre></li>
<li>
<p>Switch the log files.</p>
<pre dir="ltr">CONNECT / AS SYSDBA

ALTER SYSTEM SWITCH LOGFILE;
</pre>
<p><a class="olink ADMIN11325" target="_blank" href="../ADMIN/onlineredo.htm#ADMIN11325"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></a> provides more information about switching log files.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infoboxnotealso" id="GUID-901DF9D1-DDDC-4B07-9802-6E11B63E577F__GUID-20328BEC-86B7-42AF-A171-1B5966366287">
<p class="notep1">See Also:</p>
<p><a href="using-transparent-data-encryption-with-other-oracle-features.htm#GUID-68EE178A-6B6C-497A-B720-052FB23B5794" title="Oracle Real Application Clusters (Oracle RAC) nodes can share software keystores. Hardware security module keystores must be shared by using a network connection. You can store software keystores on non-shared file systems in Oracle RAC.">How Transparent Data Encryption Works with Oracle Real Application Clusters</a> if you are having problems using this procedure in an Oracle Real Application Clusters environment</p>
</div>
</div>
<!-- class="section" --></div>
</div>
<a id="ASOAG10391"></a>
<div class="props_rev_3"><a id="GUID-42B72C81-F22F-4063-BFD0-9E5F22C9B325"></a>
<h4 class="sect4">Step 4: Set the TDE Oracle GoldenGate Shared Secret in the Extract Process</h4>
<div>
<p>The GoldenGate Software Command Interface (GGSCI) utility set the TDE Oracle GoldenGate shared secret in the extract process.</p>
<div class="section">
<ol>
<li>
<p>Start the GGSCI utility.</p>
<p>For example:</p>
<pre dir="ltr">ggsci
</pre></li>
<li>
<p>In the GGSCI utility, run the <code class="codeph">ENCRYPT PASSWORD</code> command to encrypt the shared secret so that it is obfuscated within the Oracle GoldenGate Extract parameter file.</p>
<pre dir="ltr">ENCRYPT PASSWORD <span class="italic">shared_secret algorithm</span> ENCRYPTKEY <span class="italic">keyname</span>
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">shared_secret</code></span> is the clear-text shared secret that you created in <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-57DCFB1D-9244-4FA1-8FBA-009969D5F861" title="A shared secret for a keystore is a password.">Step 1: Decide on a Shared Secret for the Keystore</a>. This setting is case sensitive.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">algorithm</code></span> is one of the following values to specify AES encryption:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">AES128</code></p>
</li>
<li>
<p><code class="codeph">AES192</code></p>
</li>
<li>
<p><code class="codeph">AES256</code></p>
</li>
</ul>
</li>
<li>
<p><span class="italic"><code class="codeph">keyname</code></span> is the logical name of the encryption key in the <code class="codeph">ENCKEYS</code> lookup file. Oracle GoldenGate uses this name to look up the actual key in the <code class="codeph">ENCKEYS</code> file.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">ENCRYPT PASSWORD <span class="italic">password</span> AES256 ENCRYPTKEY mykey1
</pre></li>
<li>
<p>In the Oracle GoldenGate Extract parameter file, set the <code class="codeph">DBOPTIONS</code> parameter with the <code class="codeph">DECRYPTPASSWORD</code> option.</p>
<p>As input, supply the encrypted shared secret and the Oracle GoldenGate-generated or user-defined decryption key.</p>
<pre dir="ltr">DBOPTIONS DECRYPTPASSWORD <span class="italic">shared_secret</span> <span class="italic">algorithm</span> ENCRYPTKEY <span class="italic">keyname</span>
</pre>
<p>In this specification:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="italic"><code class="codeph">shared_secret</code></span> is the clear-text shared secret that you created in <a href="managing-keystore-and-tde-master-encryption-key.htm#GUID-57DCFB1D-9244-4FA1-8FBA-009969D5F861" title="A shared secret for a keystore is a password.">Step 1: Decide on a Shared Secret for the Keystore</a>. This setting is case sensitive.</p>
</li>
<li>
<p><span class="italic"><code class="codeph">algorithm</code></span> is one of the following values to specify AES encryption:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">AES128</code></p>
</li>
<li>
<p><code class="codeph">AES192</code></p>
</li>
<li>
<p><code class="codeph">AES256</code></p>
</li>
</ul>
</li>
<li>
<p><span class="italic"><code class="codeph">keyname</code></span> is the logical name of the encryption key in the <code class="codeph">ENCKEYS</code> lookup file.</p>
<p>For example:</p>
<pre dir="ltr">DBOPTIONS DECRYPTPASSWORD AACAAAAAAAAAAAIALCKDZIRHOJBHOJUH AES256 ENCRYPTKEY mykey1
</pre></li>
</ul>
</li>
</ol>
</div>
<!-- class="section" --></div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment5372">
<tr>
<td class="cellalignment5379">
<table class="cellalignment5377">
<tr>
<td class="cellalignment5376"><a href="configuring-transparent-data-encryption.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5376"><a href="general-considerations-of-using-transparent-data-encryption.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment5381">
<table class="cellalignment5375">
<tr>
<td class="cellalignment5376"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5376"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment5376"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5376"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment5376"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment5376"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>