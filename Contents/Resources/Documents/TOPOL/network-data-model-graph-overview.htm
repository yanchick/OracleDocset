<!DOCTYPE html><html lang="en-US"><head>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"/>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="UTF-8"/>
<a class="dashingAutolink" name="autolink-107384"></a><a class="dashAnchor" name="//apple_ref/cpp/Package/Network%20Data%20Model%20Graph%20Overview"></a><title>Network Data Model Graph Overview</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)"/>
<meta name="keywords" content="Network Data Model Graph, overview, steps for using, concepts, nodes, definition, vertex (node), links, undirected, directed, direction, undirected links, directed links, undirected links, inbound links, outbound links, network elements, paths, relationship to paths, cost, minimum cost, minimum cost path, duration, state, state of, active nodes, active links, type, link or node type, temporary links, temporary nodes, temporary paths, temporary, reachable nodes, reachable, reaching nodes, reaching, degree, of a node, degree, in-degree, inbound links, out-degree, outbound links, minimum cost spanning tree, spanning tree, partitioned network, networks, partitioned, load on demand analysis, partition BLOBs, partition cache, user-defined data, subpaths, subpaths, reference path, features, in network applications, feature layers, feature layer types, feature elements, feature types, multimodal networks, temporal modeling and analysis for networks, hierarchical, hierarchy, network, network constraints, constraints, network analysis, using the load on demand approach, partitions, using for editing and analysis, load on demand, using for editing and analysis, network editing, using partitioning and load on demand, generating and loading from, caching, cache, partition, link levels, precomputed analysis results, tables for, node table, link table, path table, path-link table, subpath table, subpath table, partition table, partition table, connected component table, node hierarchy table, node level table, feature table, feature element relationships table, feature hierarchy table, application programming interface (API), API, Network Data Model Graph, Java client interface for Network Data Model Graph (sdonm), sdonm Java client interface, XML interface for Network Data Model Graph, demo files, examples"/>
<meta name="dcterms.created" content="2017-03-12T16:47:56Z"/>
<meta name="robots" content="all"/>
<meta name="dcterms.title" content="Spatial and Graph Topology Data Model and Network Data Model Graph Developer&#39;s Guide"/>
<meta name="dcterms.identifier" content="E53120-04"/>
<meta name="dcterms.isVersionOf" content="TOPOL"/>
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved."/>
<link rel="Start" href="../index.htm" title="Home" type="text/html"/>
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html"/>

<script type="application/javascript" src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript" src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html"/>
<link rel="Index" href="index.htm" title="Index" type="text/html"/>
<link rel="Prev" href="network-data-model.htm" title="Previous" type="text/html"/>
<link rel="Next" href="SDO_NET-reference.htm" title="Next" type="text/html"/>
<link rel="alternate" href="E53120-04.pdf" title="PDF version" type="application/pdf"/>
<link rel="schema.dcterms" href="http://purl.org/dc/terms/"/>
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/header.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/footer.css"/>
<link rel="stylesheet" type="text/css" href="../dcommon/css/fonts.css"/>
<link rel="stylesheet" href="../dcommon/css/foundation.css"/>
<link rel="stylesheet" href="../dcommon/css/codemirror.css"/>
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css"/>
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css"/>
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="/s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet" href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7" type="text/css" media="screen"/>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-D34F1A0C-4D9B-4185-B965-43B218D3F382"></a> <span id="PAGE" style="display:none;">13/15</span> <!-- End Header -->
<a id="TOPOL700"></a>
<h1 id="TOPOL-GUID-D34F1A0C-4D9B-4185-B965-43B218D3F382" class="sect1"><span class="enumeration_chapter">5</span> Network Data Model Graph Overview</h1>
<div>
<p>This chapter explains the concepts and operations related to the network data model for representing capabilities or objects that are modeled as nodes and links (vertices and edges) in a graph. This model is called the Oracle Spatial and Graph Network Data Model Graph feature, or simply Network Data Model Graph. This chapter assumes that you are familiar with the main Oracle Spatial and Graph concepts, data types, and operations, as documented in <a class="olink SPATL" target="_blank" href="../SPATL/toc.htm"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a>.</p>
<p>Although this chapter discusses some network-related terms as they relate to Oracle Spatial and Graph, it assumes that you are familiar with basic network data modeling concepts.</p>
<p>This chapter contains the following major sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-3D943949-5DA2-4225-9EA5-9496399646F5">Introduction to Network Modeling</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-E088F1BF-6F15-495F-9732-C8A62649607B">Main Steps in Using the Network Data Model Graph</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-99FBD672-441B-4660-90ED-A11BA249AD5A">Network Applications</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-7B80A118-F2A5-44D5-92F5-24033B6BD84F">Network User Data</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-7F09B637-DBC2-43FA-BF29-C32656EADEE4">Feature Modeling</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-2A71EBFE-F28F-4A87-9F49-4E7674A08C08">Network Constraints</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6">Network Analysis Using Load on Demand</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-368DCA87-F688-40FC-8B47-E5AA8BCA083F">Network Data Model Graph Tables</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-08FC9575-4397-4A50-9401-44F48F78E00D">Network Data Model Graph Metadata Views</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-B16D53F5-7E65-487D-98E9-8A606F457C82">Network Data Model Graph Application Programming Interface</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-96C6EB60-4CC0-4016-8190-40115606CF6F">Cross-Schema Network Access</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-F343E028-D514-4783-B6DC-50E6118BBE7A">Network Examples</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-F95D47AF-2C71-46E8-8974-0820924585AB">README File for Spatial and Graph and Related Features</a></p>
</li>
</ul>
</div>
<a id="TOPOL889"></a><a id="TOPOL888"></a>
<div class="props_rev_3"><a id="GUID-3D943949-5DA2-4225-9EA5-9496399646F5"></a>
<h2 id="TOPOL-GUID-3D943949-5DA2-4225-9EA5-9496399646F5" class="sect2">Introduction to Network Modeling</h2>
<div>
<p>In many applications, capabilities or objects are modeled as nodes and links in a network. The network model contains logical information such as connectivity relationships among nodes and links, directions of links, and costs of nodes and links. With logical network information, you can analyze a network and answer questions, many of them related to path computing and tracing. For example, for a biochemical pathway, you can find all possible reaction paths between two chemical compounds; or for a road network, you can find the following information:</p>
<ul style="list-style-type: disc;">
<li>
<p>What is the shortest (distance) or fastest (travel time) path between two cities?</p>
</li>
<li>
<p>What is the closest hotel to a specific airport, and how can I get there?</p>
</li>
</ul>
<p>In addition to logical network information, spatial information such as node locations and link geometries can be associated with the network. This information can help you to model the logical information (such as the cost of a route, because its physical length can be directly computed from its spatial representation).</p>
<p>The Spatial and Graph Network Data Model Graph feature can be used for large, complex networks. For example, <a href="network-data-model-graph-overview.htm#GUID-3D943949-5DA2-4225-9EA5-9496399646F5__CIHJIIID">Figure 5-1</a> shows San Francisco and links, which have been defined using the Network Data Model Graph feature, displayed in a demo web-based application for network analysis. (You can install this demo using the NDM tutorial described in <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>.)</p>
<div class="figure" id="GUID-3D943949-5DA2-4225-9EA5-9496399646F5__CIHJIIID">
<p class="titleinfigure">Figure 5-1 San Francisco Nodes and Links</p>
<img width="1463" height="858" src="img/GUID-3A11547F-7034-4042-B3E2-0C64BC370FB5-default.gif" alt="Description of Figure 5-1 follows" title="Description of Figure 5-1 follows"/><br/>
<a href="img_text/GUID-3A11547F-7034-4042-B3E2-0C64BC370FB5-default.htm">Description of &#34;Figure 5-1 San Francisco Nodes and Links&#34;</a></div>
<!-- class="figure" -->
<p>The generic data model and network analysis capability can model and analyze many kinds of network applications in addition to traditional geographical information systems (GIS). For example, in biochemistry, applications may need to model reaction pathway networks for living organisms; and in the pharmaceutical industry, applications that model the drug discovery process may need to model protein-protein interaction.</p>
<p>The network modeling capabilities of Spatial and Graph include schema objects and an application programming interface (API). The schema objects include metadata and network tables. The API includes a server-side PL/SQL API (the SDO_NET package) for creating and managing networks in the database, and a middle-tier (or client-side) Java API for network editing and analysis.</p>
</div>
</div>
<a id="TOPOL890"></a>
<div class="props_rev_3"><a id="GUID-E088F1BF-6F15-495F-9732-C8A62649607B"></a>
<h2 id="TOPOL-GUID-E088F1BF-6F15-495F-9732-C8A62649607B" class="sect2">Main Steps in Using the Network Data Model Graph</h2>
<div>
<p>This section summarizes the main steps for working with the Network Data Model Graph feature in Oracle Spatial and Graph. It refers to important concepts, structures, and operations that are described in detail in other sections.</p>
<p>There are two basic approaches to creating a network:</p>
<ul style="list-style-type: disc;">
<li>
<p>Let Spatial and Graph perform most operations, using procedures with names in the form CREATE_<span class="italic">&lt;network-type&gt;</span>_NETWORK. (See <a href="network-data-model-graph-overview.htm#GUID-77CB5649-E32F-433E-B931-85DF518B552A">Letting Spatial Perform Most Operations</a>.)</p>
</li>
<li>
<p>Perform the operations yourself: create the necessary network tables and update the network metadata. (See <a href="network-data-model-graph-overview.htm#GUID-388593FD-7799-440A-9BAC-5E939BCCDCB5">Performing the Operations Yourself</a>.)</p>
</li>
</ul>
<p>With each approach, you must insert the network data into the network tables. You can then use the Network Data Model Graph PL/SQL and Java application programming interfaces (APIs) to update the network and perform other operations. (The PL/SQL and Java APIs are described in <a href="network-data-model-graph-overview.htm#GUID-B16D53F5-7E65-487D-98E9-8A606F457C82">Network Data Model Graph Application Programming Interface</a>.)</p>
</div>
<a id="TOPOL891"></a>
<div class="props_rev_3"><a id="GUID-77CB5649-E32F-433E-B931-85DF518B552A"></a>
<h3 id="TOPOL-GUID-77CB5649-E32F-433E-B931-85DF518B552A" class="sect3">Letting Spatial Perform Most Operations</h3>
<div>
<div class="section">
<p>To create a network by letting Spatial and Graph perform most of the necessary operations, follow these steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Create the network using a procedure with a name in the form CREATE_<span class="italic">&lt;network-type&gt;</span>_NETWORK, where <span class="italic">&lt;network-type&gt;</span> reflects the type of network that you want to create:</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p><a href="SDO_NET-reference.htm#GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0">SDO_NET.CREATE_SDO_NETWORK</a> for a spatial network with non-LRS SDO_GEOMETRY objects</p>
</li>
<li>
<p><a href="SDO_NET-reference.htm#GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883">SDO_NET.CREATE_LRS_NETWORK</a> for a spatial network with LRS SDO_GEOMETRY objects</p>
</li>
<li>
<p><a href="SDO_NET-reference.htm#GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9">SDO_NET.CREATE_TOPO_NETWORK</a> for a spatial network with topology geometry (SDO_TOPO_GEOMETRY) objects</p>
</li>
<li>
<p><a href="SDO_NET-reference.htm#GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E">SDO_NET.CREATE_LOGICAL_NETWORK</a> for a logical network that does not contain spatial information</p>
</li>
</ul>
<p>Each of these procedures creates the necessary Network Data Model Graph tables (described in <a href="network-data-model-graph-overview.htm#GUID-368DCA87-F688-40FC-8B47-E5AA8BCA083F">Network Data Model Graph Tables</a>) and inserts a row with the appropriate network metadata information into the xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>Each procedure has two formats: one format creates all Network Data Model Graph tables using default names for the tables and certain columns, and other format lets you specify names for the tables and certain columns. The default names for the Network Data Model Graph tables are <span class="italic">&lt;network-name&gt;</span>_NODE$, <span class="italic">&lt;network-name&gt;</span>_LINK$, <span class="italic">&lt;network-name&gt;</span>_PATH$, and <span class="italic">&lt;network-name&gt;</span>_PLINK$. The default name for cost columns in the Network Data Model Graph tables is COST, and the default name for geometry columns is GEOMETRY.</p>
</div>
</li>
<li class="stepexpand"><span>Insert data into the node and link tables, and if necessary into the path and path-link tables. (The node, link, path, and path-link tables are described in <a href="network-data-model-graph-overview.htm#GUID-368DCA87-F688-40FC-8B47-E5AA8BCA083F">Network Data Model Graph Tables</a>.)</span></li>
<li class="stepexpand"><span>Validate the network, using the <a href="SDO_NET-reference.htm#GUID-51950D89-3315-4F81-B0AC-6E20C9F35760">SDO_NET.VALIDATE_NETWORK</a> function.</span></li>
<li class="stepexpand"><span>For a spatial (SDO or LRS) network, insert the appropriate information into the USER_SDO_GEOM_METADATA view, and create spatial indexes on the geometry columns.</span>
<div>
<p>If you plan to use a view as a node, link, or path table, you must specify the view name for the TABLE_NAME column value when you insert information about the node, link, or path table in the USER_SDO_GEOM_METADATA view.</p>
</div>
</li>
</ol>
</div>
</div>
<a id="TOPOL892"></a>
<div class="props_rev_3"><a id="GUID-388593FD-7799-440A-9BAC-5E939BCCDCB5"></a>
<h3 id="TOPOL-GUID-388593FD-7799-440A-9BAC-5E939BCCDCB5" class="sect3">Performing the Operations Yourself</h3>
<div>
<div class="section">
<p>To create a network by performing the necessary operations yourself, follow these steps:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Create the node table, using the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a> procedure. (The node table is described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.)</span></li>
<li class="stepexpand"><span>Insert data into the node table.</span></li>
<li class="stepexpand"><span>Create the link table, using the <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a> procedure. (The link table is described in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>).</span></li>
<li class="stepexpand"><span>Insert data into the link table.</span></li>
<li class="stepexpand"><span>Optionally, create the path table, using the <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a> procedure. (The path table is described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>).</span></li>
<li class="stepexpand"><span>If you created the path table, create the path-link table, using the <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedure. (The path-link table is described in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>).</span></li>
<li class="stepexpand"><span>If you created the path table and if you want to create paths, insert data into the table.</span></li>
<li class="stepexpand"><span>If you inserted data into the path table, insert the appropriate rows into the path-link table.</span></li>
<li class="stepexpand"><span>Insert a row into the USER_SDO_NETWORK_METADATA view with information about the network. (The USER_SDO_NETWORK_METADATA view is described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>.)</span>
<div>
<p>If you plan to use a view as a node, link, path, or path-link table, you must specify the view name for the relevant columns when you insert information about the network in the USER_SDO_NETWORK_METADATA view.</p>
</div>
</li>
<li class="stepexpand"><span>For a spatial (SDO or LRS) network, insert the appropriate information into the USER_SDO_GEOM_METADATA view, and create spatial indexes on the geometry columns.</span>
<div>
<p>If you plan to use a view as a node, link, or path table, you must specify the view name for the TABLE_NAME column value when you insert information about the node, link, or path table in the USER_SDO_GEOM_METADATA view.</p>
</div>
</li>
<li class="stepexpand"><span>Validate the network, using the <a href="SDO_NET-reference.htm#GUID-51950D89-3315-4F81-B0AC-6E20C9F35760">SDO_NET.VALIDATE_NETWORK</a> function.</span></li>
</ol>
<div class="section">
<p>You can change the sequence of some of these steps. For example, you can create both the node and link tables first, and then insert data into each one; and you can insert the row into the USER_SDO_NETWORK_METADATA view before you create the node and link tables.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="TOPOL893"></a>
<div class="props_rev_3"><a id="GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C"></a>
<h2 id="TOPOL-GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C" class="sect2">Network Data Model Graph Concepts</h2>
<div>
<p>A network is a type of mathematical graph that captures relationships between objects using connectivity. The connectivity may or may not be based on spatial proximity. For example, if two towns are on opposite sides of a lake, the shortest path based on spatial proximity (a straight line across the middle of the lake) is not relevant if you want to drive from one town to the other. Instead, to find the shortest driving distance, you need connectivity information about roads and intersections and about the &#34;cost&#34; of individual links.</p>
<p>A network consists of a set of nodes and links. Each link (sometimes also called an edge or a segment) specifies two nodes.</p>
<p><a id="d23349e613" class="indexterm-anchor"></a><a id="d23349e617" class="indexterm-anchor"></a><a id="d23349e621" class="indexterm-anchor"></a><a id="d23349e623" class="indexterm-anchor"></a>A network can be <span class="bold">directed</span> (that is, by default, the start and end nodes determine link direction) or <span class="bold">undirected</span> (that is, links can be traversed in either direction).</p>
<p>The following are some key terms related to the Network Data Model Graph: feature</p>
<ul style="list-style-type: disc;">
<li>
<p>A <span class="bold">node</span>, also called a vertex, is a point where links can join each other. An <a id="d23349e641" class="indexterm-anchor"></a><a id="d23349e645" class="indexterm-anchor"></a><span class="bold">isolated node</span> is a node that is not included in any links. (A non-isolated node will become isolated if all links that include that node are deleted.)</p>
</li>
<li>
<p>A <span class="bold">link</span> represents a relationship between two nodes. Within a directed network, any link can be <span class="bold">undirected</span> (that is, able to be traversed either from the start node to the end node or from the end node to the start node) or <span class="bold">directed</span> (that is, able to be traversed only from the start node to the end node). Within an undirected network, all links are undirected.</p>
</li>
<li>
<p>A <span class="bold">network element</span> is a node or a link.</p>
</li>
<li>
<p>A <span class="bold">path</span> is an alternating sequence of nodes and links, beginning and ending with nodes, and usually with no nodes and links appearing more than once. (Repeating nodes and links within a path are permitted, but are rare in most network applications.)</p>
</li>
<li>
<p>A <span class="bold">subpath</span> is a partial path along a path, created either as a result of a network analysis operation or explicitly by a user. Subpaths are explained and illustrated in <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D">Subpaths</a>.</p>
</li>
<li>
<p>A <a id="d23349e689" class="indexterm-anchor"></a><a id="d23349e691" class="indexterm-anchor"></a><span class="bold">logical network</span> contains connectivity information but no geometric information. This is the model used for network analysis. A logical network can be treated as a directed graph or undirected graph, depending on the application.</p>
</li>
<li>
<p>A <a id="d23349e701" class="indexterm-anchor"></a><a id="d23349e703" class="indexterm-anchor"></a><a id="d23349e707" class="indexterm-anchor"></a><a id="d23349e709" class="indexterm-anchor"></a><a id="d23349e711" class="indexterm-anchor"></a><span class="bold">spatial network</span> contains both connectivity information and geometric information. In a spatial network, the nodes and links are SDO_GEOMETRY geometry objects without LRS information (an <span class="bold">SDO network</span>) or with LRS information (an <span class="bold">LRS network</span>), or SDO_TOPO_GEOMETRY objects (a <span class="bold">topology geometry network</span>).</p>
<p>In an LRS network, each node includes a geometry ID value and a measure value, and each link includes a geometry ID value and start and end measure values; and the geometry ID value in each case refers to an SDO_GEOMETRY object with LRS information. A spatial network can be directed or undirected, depending on the application.</p>
</li>
<li>
<p>A <a id="d23349e731" class="indexterm-anchor"></a><span class="bold">feature</span> is an object of interest in a network application that is associated with a node or link. Features and feature layer types are explained in <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B">Features and Feature Layers</a></p>
</li>
<li>
<p><span class="bold">Cost</span> is a non-negative numeric attribute that can be associated with links or nodes for computing the <span class="bold">minimum cost path</span>, which is the path that has the minimum total cost from a start node to an end node. You can specify a single cost factor, such as driving time or driving distance for links, in the network metadata, and network analytical functions that examine cost will use this specified cost factor.</p>
</li>
<li>
<p><span class="bold">Duration</span> is a non-negative numeric attribute that can be associated with links or nodes to specify a duration value for the link or node. The duration value can indicate a number of minutes or any other user-determined significance. You can specify a single duration factor, such as driving time for links, in the network metadata; however, if you use duration instead of cost to indicate elapsed time, network analytical functions that examine cost will not consider the specified duration factor.</p>
</li>
<li>
<p><span class="bold">State</span> is a string attribute, either <code class="codeph">ACTIVE</code> or <code class="codeph">INACTIVE</code>, that is associated with links or nodes to specify whether or not a link or node will be considered by network analysis functions. For example, if the state of a node is <code class="codeph">INACTIVE</code>, any links from or to that node are ignored in the computation of the shortest path between two nodes. The state is <code class="codeph">ACTIVE</code> by default when a link or node is created, but you can set the state <code class="codeph">INACTIVE</code>.</p>
</li>
<li>
<p><span class="bold">Type</span> is a string attribute that can be associated with links or nodes to specify a user-defined value for the type of a link or a node.</p>
</li>
<li>
<p><span class="bold">Temporary</span> links, nodes, and paths exist only in a network memory object, and are not written to the database when the network memory object is written. For example, during a network analysis and editing session you might create temporary nodes to represent street addresses for shortest-path computations, but not save these temporary nodes when you save the results of editing operations.</p>
</li>
<li>
<p><span class="bold">Reachable nodes</span> are all nodes that can be reached from a given node. <span class="bold">Reaching nodes</span> are all nodes that can reach a given node.</p>
</li>
<li>
<p>The <span class="bold">degree</span> of a node is the number of links to (that is, incident upon) the node. The <span class="bold">in-degree</span> is the number of inbound links, and the <span class="bold">out-degree</span> is the number of outbound links.</p>
</li>
<li>
<p>A <a id="d23349e808" class="indexterm-anchor"></a><span class="bold">connected component</span> is a group of network nodes that are directly or indirectly connected. If node A can reach node B, they must belong to the same connected component. If two nodes are not connected, it is concluded that there is no possible path between them. This information can be used as a filter to avoid unnecessary path computations.</p>
</li>
<li>
<p>A <a id="d23349e818" class="indexterm-anchor"></a><span class="bold">spanning tree</span> of a connected graph is a tree (that is, a graph with no cycles) that connects all nodes of the graph. (The directions of links are ignored in a spanning tree.) The <span class="bold">minimum cost spanning tree</span> is the spanning tree that connects all nodes and has the minimum total cost.</p>
</li>
<li>
<p>A <span class="bold">partitioned network</span> is a network that contains multiple partitions. Partitioning a large network enables only the necessary partitions to be loaded on demand into memory, thus providing better overall performance.</p>
<p>Network partitions are sub-networks, each covering a subset of nodes and links of the entire network. Network partitions are the basic processing units for load on demand analysis. They are created by assigning every node in the network to only one partition ID. Network partition information is stored in a partition table.</p>
</li>
<li>
<p><span class="bold">Load on demand</span> (load on demand analysis) is an approach that divides large networks into manageable partitions and only loads needed partitions during analysis, thus removing memory limitation as a consideration and providing better overall performance.</p>
</li>
<li>
<p><span class="bold">Partition BLOBs</span> are binary representations for network partitions. They provide faster partition loading time. They are stored in a partition BLOB table.</p>
</li>
<li>
<p>The load on demand <span class="bold">partition cache</span> is an in-memory placeholder for network partitions loaded into memory during network analysis. You can configure the partition cache.</p>
</li>
<li>
<p><span class="bold">User-defined data</span> is the information (not related to connectivity) that users want to associate with a network representation. User-defined data can be defined at the node, link, path, and subpath level, and is stored in columns in the node, link, path, and subpath tables.</p>
</li>
</ul>
</div>
<a id="TOPOL895"></a><a id="TOPOL894"></a>
<div class="props_rev_3"><a id="GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D"></a>
<h3 id="TOPOL-GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D" class="sect3">Subpaths</h3>
<div>
<p>A <span class="bold">subpath</span> is a partial path along a path, created either as a result of a network analysis operation or explicitly by a user. The start and end points of a subpath are defined as link indexes and the percentage of the distance from the previous node in the path, as shown in <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a>.</p>
<div class="figure" id="GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">
<p class="titleinfigure">Figure 5-2 Path and Subpaths</p>
<img width="507" height="136" src="img/GUID-C3754046-4BA0-4B9E-98A9-54BA63ED2D20-default.gif" alt="Description of Figure 5-2 follows" title="Description of Figure 5-2 follows"/><br/>
<a href="img_text/GUID-C3754046-4BA0-4B9E-98A9-54BA63ED2D20-print.htm">Description of &#34;Figure 5-2 Path and Subpaths&#34;</a></div>
<!-- class="figure" -->
<p>A subpath refers to an existing path (the <span class="bold">reference path</span>) using the following parameters:</p>
<ul style="list-style-type: disc;">
<li>
<p>Reference path ID: the path ID of the reference path.</p>
</li>
<li>
<p>Start link index: the start link index on the reference path. (Link index 0 refers to the link between the first and second nodes on the path.) In <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a>, link index 0 is the start link index.</p>
</li>
<li>
<p>Start percentage: the percentage of the distance along the start link for the start node of the subpath. In <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a>, the subpath starts at 65 percent of the distance between the start and end of link index 0.</p>
</li>
<li>
<p>End link index: the end link index on the reference path. In <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a>, link index 6 is the end link index.</p>
</li>
<li>
<p>End percentage: the percentage of the distance along the end link for the end node of the subpath. In <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a>, the subpath ends at 50 percent of the distance between the start and end of link index 6.</p>
</li>
</ul>
</div>
</div>
<a id="TOPOL1066"></a><a id="TOPOL1067"></a><a id="TOPOL1065"></a>
<div class="props_rev_3"><a id="GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B"></a>
<h3 id="TOPOL-GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B" class="sect3">Features and Feature Layers</h3>
<div>
<p>A <span class="bold">feature</span> is an object of interest in a network application that is associated with a node or link. For example, in a transportation network, features include exits and intersections (mapped to nodes), and highways and streets (mapped to links).</p>
<p>A feature consists of one or more feature elements. A <span class="bold">feature element</span> is a point or line along the network. If it is a point, it can lie on a node or along a line; if it is a line, it can be a full link or a partial link.</p>
<p>Depending on the types of feature elements in the feature, a feature can have any of the <span class="bold">feature types</span> shown in <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHFJFII" title="Feature types: numbers, names, and explanations">Table 5-1</a>.</p>
<div class="tblformal" id="GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHFJFII">
<p class="titleintable">Table 5-1 Feature Types</p>
<table class="cellalignment113" title="Feature Types" summary="Feature types: numbers, names, and explanations">
<thead>
<tr class="cellalignment107">
<th class="cellalignment115" id="d23349e1013">Type Number</th>
<th class="cellalignment128" id="d23349e1016">Type Name</th>
<th class="cellalignment129" id="d23349e1019">Feature Elements Consist of:</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1024" headers="d23349e1013">
<p>1</p>
</td>
<td class="cellalignment130" headers="d23349e1024 d23349e1016">
<p>SDO_NET.FEAT_TYPE_PON</p>
</td>
<td class="cellalignment131" headers="d23349e1024 d23349e1019">
<p>A single point on a node</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1034" headers="d23349e1013">
<p>2</p>
</td>
<td class="cellalignment130" headers="d23349e1034 d23349e1016">
<p>SDO_NET.FEAT_TYPE_POL</p>
</td>
<td class="cellalignment131" headers="d23349e1034 d23349e1019">
<p>A single point on a link</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1044" headers="d23349e1013">
<p>3</p>
</td>
<td class="cellalignment130" headers="d23349e1044 d23349e1016">
<p>SDO_NET.FEAT_TYPE_POINT</p>
</td>
<td class="cellalignment131" headers="d23349e1044 d23349e1019">
<p>A single point, but whether it is on a node or a link is unknown</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1054" headers="d23349e1013">
<p>4</p>
</td>
<td class="cellalignment130" headers="d23349e1054 d23349e1016">
<p>SDO_NET.FEAT_TYPE_LINE</p>
</td>
<td class="cellalignment131" headers="d23349e1054 d23349e1019">
<p>A single line</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1064" headers="d23349e1013">
<p>5</p>
</td>
<td class="cellalignment130" headers="d23349e1064 d23349e1016">
<p>SDO_NET.FEAT_TYPE_MPON</p>
</td>
<td class="cellalignment131" headers="d23349e1064 d23349e1019">
<p>One or more points on one or more nodes</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1074" headers="d23349e1013">
<p>6</p>
</td>
<td class="cellalignment130" headers="d23349e1074 d23349e1016">
<p>SDO_NET.FEAT_TYPE_MPOL</p>
</td>
<td class="cellalignment131" headers="d23349e1074 d23349e1019">
<p>One or more points on one or more links</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1084" headers="d23349e1013">
<p>7</p>
</td>
<td class="cellalignment130" headers="d23349e1084 d23349e1016">
<p>SDO_NET.FEAT_TYPE_MPOINT</p>
</td>
<td class="cellalignment131" headers="d23349e1084 d23349e1019">
<p>One or more points, but the points can be on nodes or links (or a combination)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1094" headers="d23349e1013">
<p>8</p>
</td>
<td class="cellalignment130" headers="d23349e1094 d23349e1016">
<p>SDO_NET.FEAT_TYPE_MLINE</p>
</td>
<td class="cellalignment131" headers="d23349e1094 d23349e1019">
<p>One or more lines</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment118" id="d23349e1104" headers="d23349e1013">
<p>9</p>
</td>
<td class="cellalignment130" headers="d23349e1104 d23349e1016">
<p>SDO_NET.FEAT_TYPE_COLL</p>
</td>
<td class="cellalignment131" headers="d23349e1104 d23349e1019">
<p>A collection of both points and lines, or the types of the feature elements are unknown</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>A <span class="bold">feature layer</span> corresponds to a table containing features that have the same set of attributes. For example, in a roads network, there may be separate feature layers for restaurants and hotels (and perhaps other feature layers for other kinds of things of interest to travelers).</p>
<p>Depending on the types of features in the feature layer, a feature layer can have any of the <span class="bold">feature layer types</span> shown in <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHCJFEE" title="Feature layer types: numbers and explanations">Table 5-2</a>, which maps each feature layer type to the associated feature type or types from <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHFJFII" title="Feature types: numbers, names, and explanations">Table 5-1</a>.</p>
<div class="tblformal" id="GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHCJFEE">
<p class="titleintable">Table 5-2 Feature Layer Types</p>
<table class="cellalignment113" title="Feature Layer Types" summary="Feature layer types: numbers and explanations">
<thead>
<tr class="cellalignment107">
<th class="cellalignment132" id="d23349e1143">Layer Type Number</th>
<th class="cellalignment133" id="d23349e1146">Features in the Layer Are of (type from ):</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1156" headers="d23349e1143">
<p>1</p>
</td>
<td class="cellalignment135" headers="d23349e1156 d23349e1146">
<p>Type 1 (SDO_NET.FEAT_TYPE_PON)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1163" headers="d23349e1143">
<p>2</p>
</td>
<td class="cellalignment135" headers="d23349e1163 d23349e1146">
<p>Type 2 (SDO_NET.FEAT_TYPE_POL)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1170" headers="d23349e1143">
<p>3</p>
</td>
<td class="cellalignment135" headers="d23349e1170 d23349e1146">
<p>Type 3 (SDO_NET.FEAT_TYPE_POINT)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1177" headers="d23349e1143">
<p>4</p>
</td>
<td class="cellalignment135" headers="d23349e1177 d23349e1146">
<p>Type 4 (SDO_NET.FEAT_TYPE_LINE)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1184" headers="d23349e1143">
<p>5</p>
</td>
<td class="cellalignment135" headers="d23349e1184 d23349e1146">
<p>Type 5 (SDO_NET.FEAT_TYPE_MPON) or 1 (SDO_NET.FEAT_TYPE_PON)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1191" headers="d23349e1143">
<p>6</p>
</td>
<td class="cellalignment135" headers="d23349e1191 d23349e1146">
<p>Type 6 (SDO_NET.FEAT_TYPE_MPOL) or 2 (SDO_NET.FEAT_TYPE_POL)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1198" headers="d23349e1143">
<p>7</p>
</td>
<td class="cellalignment135" headers="d23349e1198 d23349e1146">
<p>Type 1, 2, 3, 5, 6, or 7</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1205" headers="d23349e1143">
<p>8</p>
</td>
<td class="cellalignment135" headers="d23349e1205 d23349e1146">
<p>Type 8 (SDO_NET.FEAT_TYPE_MLINE) or 4 (SDO_NET.FEAT_TYPE_LINE)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment134" id="d23349e1212" headers="d23349e1143">
<p>9</p>
</td>
<td class="cellalignment135" headers="d23349e1212 d23349e1146">
<p>Potentially a mixture of any number of feature types</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p><a id="d23349e1219" class="indexterm-anchor"></a>A <span class="bold">parent feature</span> consists of features from one or more feature layers. For example, in an electrical network, <span class="italic">substation</span> is a parent feature for the feature layers for all its associated parts, such as <span class="italic">joints</span>, <span class="italic">switches</span>, and <span class="italic">cables</span>.</p>
</div>
</div>
</div>
<a id="TOPOL896"></a>
<div class="props_rev_3"><a id="GUID-99FBD672-441B-4660-90ED-A11BA249AD5A"></a>
<h2 id="TOPOL-GUID-99FBD672-441B-4660-90ED-A11BA249AD5A" class="sect2">Network Applications</h2>
<div>
<p>Networks are used in applications to find how different objects are connected to each other. The connectivity is often expressed in terms of adjacency and path relationships. Two nodes are adjacent if they are connected by a link. There are often several paths between any two given nodes, and you may want to find the path with the minimum cost.</p>
<p>This section describes some typical examples of different kinds of network applications.</p>
</div>
<a id="TOPOL897"></a>
<div class="props_rev_3"><a id="GUID-5DC20922-6766-4153-A7F4-63820435F2A5"></a>
<h3 id="TOPOL-GUID-5DC20922-6766-4153-A7F4-63820435F2A5" class="sect3">Road Network Example</h3>
<div>
<p>In a typical road network, the intersections of roads are nodes and the road segments between two intersections are links. The spatial representation of a road is not inherently related to the nodes and links in the network. For example, a shape point in the spatial representation of a road (reflecting a sharp turn in the road) is not a node in the network if that shape point is not associated with an intersection; and a single spatial object may make up several links in a network (such as a straight segment intersected by three crossing roads). An important operation with a road network is to find the path from a start point to an end point, minimizing either the travel time or distance. There may be additional constraints on the path computation, such as having the path go through a particular landmark or avoid a particular intersection.</p>
</div>
</div>
<a id="TOPOL898"></a>
<div class="props_rev_3"><a id="GUID-A4231899-00D9-4FAC-9E7E-32F8C5135DFE"></a>
<h3 id="TOPOL-GUID-A4231899-00D9-4FAC-9E7E-32F8C5135DFE" class="sect3">Subway (Train) Network Example</h3>
<div>
<p>The subway network of any major city is probably best modeled as a logical network, assuming that precise spatial representation of the stops and track lines is unimportant. In such a network, all stops on the system constitute the nodes of the network, and a link is the connection between two stops if a train travels directly between these two stops. Important operations with a train network include finding all stations that can be reached from a specified station, finding the number of stops between two specified stations, and finding the travel time between two stations.</p>
</div>
</div>
<a id="TOPOL1068"></a>
<div class="props_rev_3"><a id="GUID-0C2DA8C4-B883-4C18-90B4-D45297DA64EE"></a>
<h3 id="TOPOL-GUID-0C2DA8C4-B883-4C18-90B4-D45297DA64EE" class="sect3">Multimodal Network and Temporal Examples</h3>
<div>
<p>Multimodal networks are networks that consist of multiple modes, such as a network consisting of driving and walking routes. They are usually modeled as individual networks (of the specific mode) and are treated as an aggregate network so that routes of single mode as well as multiple modes can be represented and computed. In general, multimodal networks are &#34;connected&#34; by schedules of different modes, and in such cases they are also <span class="italic">temporal</span> networks. An example is to compute an itinerary with walking to nearest bus stop, taking the fastest bus route, getting off at the stop that is closest to the destination, then walking to your destination. You could also add modes like driving or flight to be taken into consideration.</p>
<p><span class="bold">Temporal</span> modeling and analysis adds a temporal (time) dimension to network modeling and analysis. The time factor provides cost and/or constraints on top of static (non-temporal) networks. An example is to consider traffic patterns (time-dependent travel time costs) instead of static travel-time costs.</p>
<p>Many metropolitan transportation networks consist of multiple modes such as buses, subways, and commuter rail lines, where transfers across modes are possible (for example, from a bus to the subway). Each transportation mode has a component network within the larger transportation network. The component networks can be modeled using nodes and links, and the transfers across modes can be modeled as links that connect the stops where transfers are possible.</p>
<p>An important feature of such multimodal transportation networks is their schedule-based operation. When performing common network operations such as computing the fastest route from a start point to an end point, the schedule information and possible transfers across modes must be considered. The schedule information at stops can be represented as user-defined data at the nodes representing these stops. Examples of operations that use schedule information in a multimodal network are (A) finding the fastest route (minimum travel time) from a start point to an end point for a specified start time, and (B) finding the latest departure time at a start point to reach an end point by a specified arrival time.</p>
</div>
</div>
<a id="TOPOL899"></a>
<div class="props_rev_3"><a id="GUID-12B1B3F6-F55E-46F2-8719-3D6E4015ABA2"></a>
<h3 id="TOPOL-GUID-12B1B3F6-F55E-46F2-8719-3D6E4015ABA2" class="sect3">Utility Network Example</h3>
<div>
<p>Utility networks, such as power line or cable networks, must often be configured to minimize the cost. An important operation with a utility network is to determine the connections among nodes, using minimum cost spanning tree algorithms, to provide the required quality of service at the minimum cost. Another important operation is reachability analysis, so that, for example, if a station in a water network is shut down, you know which areas will be affected.</p>
</div>
</div>
<a id="TOPOL900"></a>
<div class="props_rev_3"><a id="GUID-49E14A74-9D22-46B5-B597-E41257F28279"></a>
<h3 id="TOPOL-GUID-49E14A74-9D22-46B5-B597-E41257F28279" class="sect3">Biochemical Network Example</h3>
<div>
<p>Biochemical processes can be modeled as biochemical networks to represent reactions and regulations in living organisms. For example, metabolic pathways are networks involved in enzymatic reactions, while regulatory pathways represent protein-protein interactions. In this example, a pathway is a network; genes, proteins, and chemical compounds are nodes; and reactions among nodes are links. Important operations for a biochemical network include computing paths and the degrees of nodes.</p>
</div>
</div>
</div>
<a id="TOPOL902"></a><a id="TOPOL901"></a>
<div class="props_rev_3"><a id="GUID-9DAFED69-BD14-4375-B053-4879F50D54CB"></a>
<h2 id="TOPOL-GUID-9DAFED69-BD14-4375-B053-4879F50D54CB" class="sect2">Network Hierarchy</h2>
<div>
<p>Some network applications require representations at different levels of abstraction. For example, two major processes might be represented as nodes with a link between them at the highest level of abstraction, and each major process might have several subordinate processes that are represented as nodes and links at the next level down.</p>
<p>A <span class="bold">network hierarchy</span> enables you to represent a network with multiple levels of abstraction by assigning a hierarchy level to each node. (Links are not assigned a hierarchy level, and links can be between nodes in the same hierarchy level or in different levels.) The lowest (most detailed) level in the hierarchy is level 1, and successive higher levels are numbered 2, 3, and so on.</p>
<p><a id="d23349e1444" class="indexterm-anchor"></a><a id="d23349e1446" class="indexterm-anchor"></a><a id="d23349e1448" class="indexterm-anchor"></a>Nodes at adjacent levels of a network hierarchy have parent-child relationships. Each node at the higher level can be the <span class="bold">parent node</span> for one or more nodes at the lower level. Each node at the lower level can be a <span class="bold">child node</span> of one node at the higher level. <span class="bold">Sibling nodes</span> are nodes that have the same parent node.</p>
<p>Links can also have parent-child relationships. However, because links are not assigned to a hierarchy level, there is not necessarily a relationship between link parent-child relationships and network hierarchy levels. <a id="d23349e1462" class="indexterm-anchor"></a><span class="bold">Sibling links</span> are links that have the same parent link.</p>
<p><a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB__CIHJJIEJ">Figure 5-3</a> shows a simple hierarchical network, in which there are two levels.</p>
<div class="figure" id="GUID-9DAFED69-BD14-4375-B053-4879F50D54CB__CIHJJIEJ">
<p class="titleinfigure">Figure 5-3 Network Hierarchy</p>
<img width="459" height="280" src="img/GUID-752A4D14-25A1-4BAD-A039-AB09B7F8F1C4-default.gif" alt="Description of Figure 5-3 follows" title="Description of Figure 5-3 follows"/><br/>
<a href="img_text/GUID-752A4D14-25A1-4BAD-A039-AB09B7F8F1C4-print.htm">Description of &#34;Figure 5-3 Network Hierarchy&#34;</a></div>
<!-- class="figure" -->
<p>As shown in <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB__CIHJJIEJ">Figure 5-3</a>:</p>
<ul style="list-style-type: disc;">
<li>
<p>The top level (level 2) contains two nodes. Each node is the parent node of several nodes in the bottom level. The link between the nodes in the top level is the parent link of two links between nodes in the bottom level.</p>
</li>
<li>
<p>The bottom level (level 1) shows the nodes that make up each node in the top level. It also shows the links between nodes that are child nodes of each parent node in the top level, and two links between nodes that have different parent nodes.</p>
</li>
<li>
<p>The links between nodes in the bottom level that have different parent nodes are shown with dark connecting lines. These links are child links of the single link between the nodes in the top level in the hierarchy. (However, these two links in the bottom level could also be defined as not being child links of any parent link between nodes in a higher level.)</p>
</li>
<li>
<p>The parent-child relationships between each parent node and link and its child nodes and links are shown with dashed lines with arrowheads at both ends.</p>
</li>
</ul>
<p>Although it is not shown in <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB__CIHJJIEJ">Figure 5-3</a>, links can cross hierarchy levels. For example, a link could be defined between a node in the top level and any node in the bottom level. In this case, there would not be a parent-child relationship between the links.</p>
<p>Given certain grouping of nodes in a network, a parent network can be defined. The group IDs in the child network are used as node IDs in the parent network. The aggregated links between groups in the child network represent the links in the parent network, with arbitrary link IDs assigned.</p>
<p>A network can have multiple ways of grouping its nodes based on different criteria; therefore, it can have multiple parent networks. In addition, nodes in a parent network can be further grouped to form a higher-level parent network. For example, in a social network, members can be grouped by city, profession, income, or other criteria. Members grouped by city, for example, can be further grouped into higher-level county, state, or country networks.</p>
<p>The parent-child network relationship is defined through the CHILD_NETWORK and HIERARCHY_TABLE_NAME columns in the network metadata.</p>
<div class="infobox-note" id="GUID-9DAFED69-BD14-4375-B053-4879F50D54CB__GUID-576D17EC-0385-4796-84A0-60445B4F36DF">
<p class="notep1">Note:</p>
<p>Do not confuse a hierarchical network with<a id="d23349e1506" class="indexterm-anchor"></a> a <span class="bold">multilevel network</span>, which is a network with multiple link levels. A multilevel network does <span class="italic">not necessarily</span> have parent-child relationships between nodes; that is, a multilevel network may also be a hierarchical network or may also <span class="italic">not</span> be a hierarchical network. In a multilevel network, a higher-level network (such as level 2) is just a subnetwork of a lower-level network (such as level 1), with link levels greater than or equal to the higher-level link.</p>
</div>
</div>
</div>
<a id="TOPOL1069"></a>
<div class="props_rev_3"><a id="GUID-7B80A118-F2A5-44D5-92F5-24033B6BD84F"></a>
<h2 id="TOPOL-GUID-7B80A118-F2A5-44D5-92F5-24033B6BD84F" class="sect2">Network User Data</h2>
<div>
<p>For user data defined through the <span class="italic">xxx</span>_SDO_NETWORK_USER_DATA views, the default user data I/O implementation (<code class="codeph">LODUserDataIOSDO</code>) is used to access the user data during network analysis. However, some user data is not included in the node or link table, and thus cannot be registered through xxx_SDO_NETWORK_USER_DATA views. For such user data, users must provide their own custom implementation of the user data I/O interface. A typical way of implementing a custom data I/O interface is to generate BLOBs corresponding to node and link user data, one BLOB for each partition, and then retrieve user data information from the BLOBs during network analysis.</p>
<p>Network Data Model Graph also allows you to associate multiple categories of user-defined data (categorized user data) with a single network. For example, in a multimodal network, if you need to associate driving-related attributes (such as speed limit) with a link in addition to the link&#39;s multimodal attributes, user-defined data can be organized in two categories, one for driving-related attributes and the other for multimodal attributes.</p>
<p>This section contains the following subsections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-FDC07D60-ECD0-4980-9B38-49BD6B579F09">User-Defined Data Example (PL/SQL and Java)</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-CA4752AD-AEC6-4BD6-A24D-C64BCB810687">User-Defined Data Example (Custom User Data I/O Implementation)</a></p>
</li>
</ul>
</div>
<a id="TOPOL1130"></a><a id="TOPOL1129"></a>
<div class="props_rev_3"><a id="GUID-FDC07D60-ECD0-4980-9B38-49BD6B579F09"></a>
<h3 id="TOPOL-GUID-FDC07D60-ECD0-4980-9B38-49BD6B579F09" class="sect3">User-Defined Data Example (PL/SQL and Java)</h3>
<div>
<p>This section presents an example of using network user-defined data, which is the information (not related to connectivity) that users want to associate with a network representation. The USER_SDO_NETWORK_USER_DATA and ALL_SDO_ NETWORK_USER_DATA metadata views (described in <a href="network-data-model-graph-overview.htm#GUID-89558452-B759-4ECF-96B1-CA29DAE6EE5F">xxx_SDO_NETWORK_USER_DATA Views</a>) contain information about user-defined data.</p>
<p>To use user-defined data, you must set the USER_DEFINED_DATA column value to <code class="codeph">Y</code> in the appropriate <span class="italic">xxx</span>_SDO_NETWORK_METADATA views (described in Section <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p><a href="network-data-model-graph-overview.htm#GUID-FDC07D60-ECD0-4980-9B38-49BD6B579F09__CIHJFHHG">Example 5-1</a> inserts link-related user-defined data into the network metadata.</p>
<div class="example" id="GUID-FDC07D60-ECD0-4980-9B38-49BD6B579F09__CIHJFHHG">
<p class="titleinexample">Example 5-1 Inserting User-Defined Data into Network Metadata</p>
<pre dir="ltr">-- Insert link user data named &#39;interaction&#39; of
-- type varchar2 (50) in network &#39;bi_test&#39;.
--&#39;interaction&#39; is a column of type varchar2(50) in the link table of network &#39;bi_
test&#39;.
insert into user_sdo_network_user_data (network, table_type, data_name, data_type, data_length, category_id) 
                  values (&#39;bi_test&#39;, &#39;LINK&#39;, &#39;interaction&#39;, &#39;VARCHAR2&#39;, 50, 0) ;
-- insert link user data named &#39;PROB&#39; of type Number.
--&#39;PROB&#39; is a column of type NUMBER in the link table of network &#39;bi_test&#39;.
insert into user_sdo_network_user_data (network, table_type, data_name, data_type, category_id)
                  values (&#39;bi_test&#39;,&#39;LINK&#39;,&#39;PROB&#39;,&#39;NUMBER&#39;, 0) ;
 
After a network or network partition is loaded, user-defined data is available in Java representations. You can access user-defined data through the getCategorizedUserData and setCategorizedUserData methods for the Node, Link, Path, and SubPath interfaces. For example:
 
<span class="italic">//The user data index is the sequence number of a user data within a category sorted by data name.</span>
 
int interactionUserDataIndex = 0;
int probUserDataIndex = 1;
 
String interaction = (String)link.getCategorizedUserData().getUserData(0).
                                get(interactionUseDataIndex);
 
double prob = ((Double)link.getCategorizedUserData().getUserData(0).
                       get(probUserdataIndex)).doubleValue();
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TOPOL1132"></a><a id="TOPOL1131"></a>
<div class="props_rev_3"><a id="GUID-CA4752AD-AEC6-4BD6-A24D-C64BCB810687"></a>
<h3 id="TOPOL-GUID-CA4752AD-AEC6-4BD6-A24D-C64BCB810687" class="sect3">User-Defined Data Example (Custom User Data I/O Implementation)</h3>
<div>
<p>This section presents an example of a custom user data I/O implementation (nondefault implementation) of the <code class="codeph">LODUserDataIO</code> interface. In <a href="network-data-model-graph-overview.htm#GUID-CA4752AD-AEC6-4BD6-A24D-C64BCB810687__CIHEJAID">Example 5-2</a>, user data associated with links is written to BLOBs (one BLOB per partition) and read from BLOBs during analysis. It is assumed that the user-defined data BLOB for multimodal data for each partition has the partition ID and number of links associated with the partition, followed by <span class="italic">&lt;Link ID, link route ID&gt;</span> for each link.</p>
<div class="example" id="GUID-CA4752AD-AEC6-4BD6-A24D-C64BCB810687__CIHEJAID">
<p class="titleinexample">Example 5-2 Implementation of writeUserData method of LODUserDataIO</p>
<pre dir="ltr">//Method getLinksInPartition(partitionId) computes a vector that
// consists of  the ID and the route ID of each link associated with a partition
// with ID = partitionId
LinkVector = getLinksInPartition(partitionId);

ObjectOutputStream dout = null;

//Insert an empty blob for the partition with ID = partition_id
String insertStr = &#34;INSERT INTO &#34; + MULTIMODAL_USER_DATA +
                             &#34; (partition_id, blob) &#34; + &#34; VALUES &#34; + &#34; (?, EMPTY_LOB())&#34; ;

PreparedStatement stmt = conn.prepareStatement(insertStr);
stmt.setInt(1,partitionId);
int n = stmt.executeUpdate();
stmt.close();

//lock the row for blob update
 String lockRowStr = &#34;SELECT blob FROM &#34; + MULTIMODAL_USER_DATA +
                                  &#34; WHERE partition_id = ? &#34; + &#34; FOR UPDATE&#34;;
 stmt = conn.prepareStatement(lockRowStr);
 stmt.setInt(1,partitionId);
 ResultSet rs = stmt.executeQuery();

 rs.next();
oracle.sql.BLOB userDataBlob = (oracle.sql.BLOB) rs.getBlob(1);
stmt.close();

 OutputStream blobOut = ((oracle.sql.BLOB) userDataBlob).setBinaryStream(1);
 dout = new ObjectOutputStream(blobOut);

 //write partition ID
 dout.writeInt(partitionId);
 int numLinks = linkVector.size()

  for (int i=0; i&lt;linkVector.size(); i++) {
        //MultimodalLink is a class with variables link ID and route ID
        MultimodalLink link = (MultimodalLink) linkVector.elementAt(i);
         //write link ID 
        dout.writeLong(link.getLinkId());

        // write route ID into file
        dout.writeInt(link.getRouteId());
   }
   dout.close();
    blobOut.close();
    rs.close();
</pre>
<p>The subsections that follow describe the implementations of the <code class="codeph">writeUserData</code> and <code class="codeph">readUserData</code> methods of the <code class="codeph">LODUserDataIO</code> interface.</p>
</div>
<!-- class="example" --></div>
<a id="TOPOL1133"></a>
<div class="props_rev_3"><a id="GUID-27908A63-B060-4E31-AA80-DF3E986809CC"></a>
<h4 id="TOPOL-GUID-27908A63-B060-4E31-AA80-DF3E986809CC" class="sect4">Implementation of writeUserData method of LODUserDataIO</h4>
<div>
<p>In the implementation of the writeUserData method of LODUserDataIO, the user-defined data BLOB table name is assumed to be MULTIMODAL_USER_DATA.</p>
<pre dir="ltr">//Method getLinksInPartition(partitionId) computes a vector that
// consists of  the ID and the route ID of each link associated with a partition
// with ID = partitionId
LinkVector = getLinksInPartition(partitionId);

ObjectOutputStream dout = null;

//Insert an empty blob for the partition with ID = partition_id
String insertStr = &#34;INSERT INTO &#34; + MULTIMODAL_USER_DATA +
                      &#34; (partition_id, blob) &#34; + &#34; VALUES &#34; + &#34; (?, EMPTY_BLOB())&#34; ;

PreparedStatement stmt = conn.prepareStatement(insertStr);
stmt.setInt(1,partitionId);
int n = stmt.executeUpdate();
stmt.close();

//lock the row for blob update
 String lockRowStr = &#34;SELECT blob FROM &#34; + MULTIMODAL_USER_DATA +
                                  &#34; WHERE partition_id = ? &#34; + &#34; FOR UPDATE&#34;;
 stmt = conn.prepareStatement(lockRowStr);
 stmt.setInt(1,partitionId);
 ResultSet rs = stmt.executeQuery();

 rs.next();
oracle.sql.BLOB userDataBlob = (oracle.sql.BLOB) rs.getBlob(1);
stmt.close();

 OutputStream blobOut = ((oracle.sql.BLOB) userDataBlob).setBinaryStream(1);
 dout = new ObjectOutputStream(blobOut);

 //write partition ID
 dout.writeInt(partitionId);
 int numLinks = linkVector.size()

  for (int i=0; i&lt;linkVector.size(); i++) {
        //MultimodalLink is a class with variables link ID and route ID
        MultimodalLink link = (MultimodalLink) linkVector.elementAt(i);
         //write link ID 
        dout.writeLong(link.getLinkId());

        // write route ID into file
        dout.writeInt(link.getRouteId());
   }
   dout.close();
    blobOut.close();
    rs.close();
</pre></div>
</div>
<a id="TOPOL1134"></a>
<div class="props_rev_3"><a id="GUID-6FD0633C-185C-4004-8FD3-FA22676B8D56"></a>
<h4 id="TOPOL-GUID-6FD0633C-185C-4004-8FD3-FA22676B8D56" class="sect4">Implementation of readUserData method of LODUserDataIO</h4>
<div>
<p>The user-defined data is accessed through the <code class="codeph">getCategorizedUserData</code> and <code class="codeph">setCategorizedUserData</code> methods for the <code class="codeph">Node</code>, <code class="codeph">Link</code>, <code class="codeph">Path</code>, and <code class="codeph">SubPath</code> interfaces and <code class="codeph">getUserData</code> and <code class="codeph">setUserData</code> methods of the <code class="codeph">CategorizedUserData</code> interface.</p>
<pre dir="ltr">//Read the blob for the required partition from the user data blob table
// In this example,
// MULTIMODAL_USER_DATA  is the name of user &ndash;defined data blob table
BLOB multimodalBlob = null;
String queryStr = &#34;SELECT blob FROM &#34; + MULTIMODAL_USER_DATA                                
                             &#34; WHERE partition_id = ?&#34;;
PreparedStatement stmt = conn.prepareStatement(queryStr);
stmt.setInt(1,partitionId);
ResultSet rs = stmt.executeQuery();
if (rs.next())   {
     multimodalBlob = (oracle.sql.BLOB)rs.getBlob(1);
}
 
// Materialize the blob value as an input stream        
InputStream is = multimodalBlob.getBinaryStream();
 
//Create an ObjectInputStream that reads from the InputStream is
ObjectInputStream ois = new ObjectInputStream(is);
 
//Read the values of partition ID and number of links from the blob
int partitionId = ois.readInt();
int numLinks = ois.readInt();
 
for (int i=0; i&lt;numLinks; i++)  {
 
    //Read link ID and route ID for each link
     long linkId = ois.readLong();
     int routeId = ois.readInt();
 
     //MultimodalLinkUserData is an implementation of NDM LOD UserData interface
     //Implementation is provided at the end of the example 
     linkUserData = new MultimodalLinkUserData(routeId);
 
     //Get the link object corresponding to the link ID
     LogicalNetLink link = partition.getLink(linkId);
 
     //Get the (categorized) user data associated with the link. 
     CategorizedUserData cud = link.getCategorizedUserData();
    
     // If the link does not have categorized user data associated with it,
     // initialize it to linkUserData
     // Else, set the user data for category USER_DATA_MULTIMODAL 
     // to linkUserData 
     if (cud == null) {
            UserData [] userDataArray = {linkUserData};
            cud = new CategorizedUserDataImpl(userDataArray);
             link.setCategorizedUserData(cud);
     }
     else {                   
            cud.setUserData(USER_DATA_MULTIMODAL,linkUserData);
     }
}
</pre>
<p>The following segment shows how to read the user-defined data, specifically the route ID associated with a link during analysis.</p>
<pre dir="ltr">//info is an instance of LODAnalysisInfo 
LogicalLink currentLink = info.getCurrentLink();
 
//Read the user-defined data (in this case, route ID) 
int linkRouteId   = (Integer)currentLink.getCategorizedUserData().
                           getUserData(USER_DATA_MULTIMODAL).                                      
                           get(INDEX_LINK_ROUTEID);
        
 
Implementation of MultimodalLinkUserData :
 
class MultimodalLinkUserData implements UserData
{
    private int routeId;
 
    protected MultimodalLinkUserData(int routeId)
   {
        this.routeId = routeId;
   }
 
  public Object get(int index)
  {
    switch(index)
    {
         case INDEX_LINK_ROUTEID:
              return routeId;
    }
    return null;
  }
 
  public void set(int index, Object userData)
  {
    switch(index)
    {
         case INDEX_LINK_ROUTEID:
            this.routeId = (Integer) userData;
    }
  }
 
  public int getNumberOfUserData()
  {
       return 1;
  }
 
  public Object clone()
{
    return new MultimodalLinkUserData(routeId);
  }
}
</pre></div>
</div>
</div>
</div>
<a id="TOPOL1070"></a>
<div class="props_rev_3"><a id="GUID-7F09B637-DBC2-43FA-BF29-C32656EADEE4"></a>
<h2 id="TOPOL-GUID-7F09B637-DBC2-43FA-BF29-C32656EADEE4" class="sect2">Feature Modeling</h2>
<div>
<p>You can model objects of interest on the network as features. A feature consists of one or many feature elements. A feature element can be a point, a link, or a partial link along the network. You can define feature layers on top of a network. For example, restaurants and hotels can each be defined as a feature layer on a road network, and switches can be defined as a feature layer on an electrical network.</p>
<p>The following are the typical steps for using feature modeling.</p>
<ol>
<li>
<p>Create a feature layer.</p>
<p>For example, the points of interest (POIs) on a road network can be modeled as features. Each type of POI (hotels, restaurants, hospitals, schools, and so on) corresponds to one feature layer. The following example adds a feature layer for hotels:</p>
<pre dir="ltr">sdo_net.add_feature_layer(
   &#39;US_ROAD_NETWORK&#39;, --network name
   &#39;HOTEL&#39;,           --feature layer name
   2,                 --feature layer type: point on link
   &#39;HOTEL_TAB&#39;,       --feature table or view name
   &#39;HOTEL_NET_REL&#39;,   --relation table or view name
   null);             --hierarchy table or view name
</pre></li>
<li>
<p>Register feature user data, if any application-specific feature attributes are potentially useful in feature analysis.</p>
<p>Feature user data is registered by adding an entry in the XXX_SDO_NETWORK_USER_DATA view, just like registering the user data for network nodes or links, except that the TABLE_TYPE column is set to the name of the feature table. The following example adds hotel name as user data for hotel features:</p>
<pre dir="ltr">INSERT INTO USER_SDO_NETWORK_USER_DATA(
   network, table_type, data_name, data_type, category_id)
VALUES(
   &#39;US_ROAD_NETWORK&#39;,  --network name
   &#39;HOTEL_TAB&#39;,                --feature table or view name
   &#39;NAME&#39;,             --user data name, i.e., name of the user data column
   &#39;VARCHAR2&#39;,         --user data type
   3);                 --user data category
</pre></li>
<li>
<p>Add, update, or delete features on the feature layer.</p>
<p>If the content of feature tables, feature element relationship table, and feature hierarchy table (all described in <a href="network-data-model-graph-overview.htm#GUID-35322E5A-1564-4DA5-BCF5-04D569373F99">Feature Layer Tables</a>) -- or any combination of these tables -- is managed by the data provider, then you can skip this step. Otherwise, you can call procedures in the SDO_NET package, such as ADD_FEATURE, UPDATE_FEATURE, DELETE_FEATURES, to add, update or delete features in a feature layer. (The SDO_NET subprograms are described in <a href="SDO_NET-reference.htm#GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E">SDO_NET Package Subprograms</a>.)</p>
</li>
<li>
<p>Perform feature analysis using <code class="codeph">NetworkAnalyst</code>. The feature analysis functions include:</p>
<ul style="list-style-type: disc;">
<li>
<p>Shortest paths between features</p>
</li>
<li>
<p>Nearest (reaching) features</p>
</li>
<li>
<p>Within (reaching) cost features</p>
</li>
</ul>
</li>
</ol>
</div>
<a id="TOPOL1071"></a>
<div class="props_rev_3"><a id="GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9"></a>
<h3 id="TOPOL-GUID-B1591F19-ECB1-4166-B8D5-FAD902FBBEE9" class="sect3">Data Types Used for Feature Modeling</h3>
<div>
<p>This section describes the following PL/SQL data types that are used for parameters and return values of some SDO_NET package subprograms related to feature modeling:</p>
<ul style="list-style-type: disc;">
<li>
<p>SDO_NET_FEAT_ELEM_ARRAY</p>
</li>
<li>
<p>SDO_NET_FEAT_ELEM</p>
</li>
<li>
<p>SDO_NET_LAYER_FEAT_ARRAY</p>
</li>
<li>
<p>SDO_NET_LAYER_FEAT</p>
</li>
<li>
<p>SDO_NETWORK_NVP_TAB</p>
</li>
<li>
<p>SDO_NETWORK_NVP</p>
</li>
</ul>
<p><a id="d23349e1863" class="indexterm-anchor"></a><a id="d23349e1865" class="indexterm-anchor"></a><span class="bold">SDO_NET_FEAT_ELEM_ARRAY</span> is defined as <code class="codeph">VARRAY(1024) OF MDSYS.SDO_NET_FEAT_ELEM</code>.</p>
<p><span class="bold">SDO_NET_FEAT_ELEM</span> is defined as:</p>
<pre dir="ltr">FEAT_ELEM_TYPE    NUMBER
NET_ELEM_ID       NUMBER
START_PERCENTAGE  NUMBER
END_PERCENTAGE    NUMBER
</pre>
<p><a id="d23349e1880" class="indexterm-anchor"></a><a id="d23349e1882" class="indexterm-anchor"></a><span class="bold">SDO_NET_LAYER_FEAT_ARRAY</span> is defined as <code class="codeph">VARRAY(1024) OF MDSYS.SDO_NET_LAYER_FEAT</code>.</p>
<p><span class="bold">SDO_NET_LAYER_FEAT</span> is defined as:</p>
<pre dir="ltr">FEATURE_LAYER_ID  NUMBER
FEATURE_ID        NUMBER
</pre>
<p><a id="d23349e1897" class="indexterm-anchor"></a><a id="d23349e1899" class="indexterm-anchor"></a><span class="bold">SDO_NETWORK_NVP_TAB</span> is defined as <code class="codeph">TABLE OF MDSYS.SDO_NETWORK_NVP</code>.</p>
<p><span class="bold">SDO_NETWORK_NVP</span> is defined as:</p>
<pre dir="ltr">NAME   VARCHAR2(128)
VALUE  VARCHAR2(1024)
</pre></div>
</div>
</div>
<a id="TOPOL903"></a>
<div class="props_rev_3"><a id="GUID-2A71EBFE-F28F-4A87-9F49-4E7674A08C08"></a>
<h2 id="TOPOL-GUID-2A71EBFE-F28F-4A87-9F49-4E7674A08C08" class="sect2">Network Constraints</h2>
<div>
<p><span class="bold">Network constraints</span> are restrictions defined on network analysis computations. For example, a network constraint might list a series of prohibited turns in a roads network due to one-way streets and &#34;No Left Turn&#34; signs, with each prohibited turn represented as a pair of links (a start link and an end link onto which a turn cannot be made from the start link). As another example, a network constraint might require that driving routes must not include toll roads or must not include expressways.</p>
<p>To create a network constraint, you must create a Java class that implements the constraint, and you must register the constraint by using the <a href="SDO_NET-reference.htm#GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9">SDO_NET.REGISTER_CONSTRAINT</a> procedure. To apply a network constraint to a network analysis operation, you must specify that constraint.</p>
<p>Examples of Java classes to implement network constraints are provided in the Network Data Model Graph demo files, which are described in <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>. For example, the <code class="codeph">ProhibitedTurns.java</code> file creates a network constraint that defines a series of prohibited turns, and it then returns the shortest path between two nodes, first without applying the constraint and then applying the constraint.</p>
</div>
</div>
<a id="TOPOL708"></a>
<div class="props_rev_3"><a id="GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6"></a>
<h2 id="TOPOL-GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6" class="sect2">Network Analysis Using Load on Demand</h2>
<div>
<p><span class="bold">Load on demand</span> means that during network analysis, a network partition is not loaded into memory until the analysis has reached this partition while exploring the network. With load on demand, Oracle Spatial and Graph performs most partitioning and loading operations automatically, and this usually results in more efficient memory utilization with very large networks.</p>
<p>Load on demand analysis involves the following major steps: network creation, network partition, partition cache configuration, and network analysis.</p>
<ol>
<li>
<p>Create the network, using one of the approaches described in <a href="network-data-model-graph-overview.htm#GUID-E088F1BF-6F15-495F-9732-C8A62649607B">Main Steps in Using the Network Data Model Graph</a>.</p>
</li>
<li>
<p>Partition the network using the <a href="SDO_NET-reference.htm#GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0">SDO_NET.SPATIAL_PARTITION</a> procedure, as explained in <a href="network-data-model-graph-overview.htm#GUID-919C34DF-8F63-4016-A537-0696DD3C158F">Partitioning a Network</a>.</p>
</li>
<li>
<p>Optionally, generate partition BLOBs, as explained in <a href="network-data-model-graph-overview.htm#GUID-3B1A0C55-C9CF-4482-BD59-6D72F479E009">Generating Partition BLOBs</a>.</p>
</li>
<li>
<p>Configure the load on demand environment, including the partition cache, as explained in <a href="network-data-model-graph-overview.htm#GUID-9B22A6DF-E326-462E-AD23-F6D0A1F62B9C">Configuring the Partition Cache</a>.</p>
</li>
<li>
<p>Analyze the network, as explained in <a href="network-data-model-graph-overview.htm#GUID-09904CFD-3D01-4510-A97A-D8DC6D724988">Analyzing the Network</a>.</p>
</li>
</ol>
<div class="infobox-note" id="GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6__GUID-5B9A89E5-249B-4409-964D-C94598BBBEA5">
<p class="notep1">Note:</p>
<p>Load on demand analysis also works with nonpartitioned networks by treating the entire network as one partition. For a small network, there may be no performance benefit in partitioning it, in which case you can skip the partitioning but still use load on demand APIs.</p>
</div>
<p>For examples of performing load on demand network analysis and configuring the partition cache, see <a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A">Partitioning and Load on Demand Analysis Examples (PL/SQL_ XML_ and Java)</a>.</p>
<p>Additional examples of partitioning and load on demand analysis are included on the Oracle Database Examples media (see <a class="olink EXMPL" target="_blank" href="../EXMPL/toc.htm"><span class="italic">Oracle Database Examples Installation Guide</span></a>). For more information about Network Data Model Graph example and demo files, see <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>.</p>
</div>
<a id="TOPOL904"></a>
<div class="props_rev_3"><a id="GUID-919C34DF-8F63-4016-A537-0696DD3C158F"></a>
<h3 id="TOPOL-GUID-919C34DF-8F63-4016-A537-0696DD3C158F" class="sect3">Partitioning a Network</h3>
<div>
<p>You can partition a network using the <a href="SDO_NET-reference.htm#GUID-EE17EF34-B664-4EEA-8F77-2C4A5A379EA0">SDO_NET.SPATIAL_PARTITION</a> procedure, specifying the maximum number of nodes in each partition. The partition result is stored in a partition table, which is automatically generated, and partition metadata information is inserted into the network metadata. (As an alternative to using the procedure, you can partition a network by creating and populating a partition table.) You can use other SDO_NET subprograms to query the partitioning metadata.</p>
<p>A good partition strategy is to minimize the number of links between partitions, which reduces the number of partitions that need to be loaded and the probable number of times that the same partitions need to be reloaded. Moreover, partitions that are too small require excessive loading and unloading of partitions during analysis.</p>
<p>The recommended maximum number of nodes per partition, assuming 1 GB of memory, is between 5,000 and 10,000. You can tune the number and see what is best for your applications, considering the available memory, type of analysis, and network size. You should also consider configuring the partition caching size.</p>
</div>
</div>
<a id="TOPOL905"></a>
<div class="props_rev_3"><a id="GUID-3B1A0C55-C9CF-4482-BD59-6D72F479E009"></a>
<h3 id="TOPOL-GUID-3B1A0C55-C9CF-4482-BD59-6D72F479E009" class="sect3">Generating Partition BLOBs</h3>
<div>
<p>To enhance the performance of network loading, you can optionally store partitions as BLOBs in a network partition BLOB table. This information needs to be stored in the network metadata view in order to take advantage of faster partition loading time. Note that if a network or partition information is updated, the partition BLOBs need to be regenerated as well.</p>
<p>A <span class="bold">partition BLOB</span> is a binary stream of data containing the network partition information, such as number of nodes, number of links, properties of each node, properties of each link, and so on. If a partition BLOB exists, Spatial and Graph uses it to read information during the load operation, rather than performing time-consuming database queries.</p>
<p>To generate partition BLOBs, use the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure. The partition BLOBs and their metadata are stored in the partition BLOB table, which is described in <a href="network-data-model-graph-overview.htm#GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE">Partition BLOB Table</a>.</p>
</div>
</div>
<a id="TOPOL906"></a>
<div class="props_rev_3"><a id="GUID-9B22A6DF-E326-462E-AD23-F6D0A1F62B9C"></a>
<h3 id="TOPOL-GUID-9B22A6DF-E326-462E-AD23-F6D0A1F62B9C" class="sect3">Configuring the Partition Cache</h3>
<div>
<p>Before you perform network analysis, you can configure the network partition cache to optimize performance, by modifying an XML configuration file to override the default configuration. You can specify the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Cache size: the maximum number of nodes in partition cache</p>
</li>
<li>
<p>Partitions source: from network tables or partition BLOBs</p>
</li>
<li>
<p><a id="d23349e2190" class="indexterm-anchor"></a><a id="d23349e2192" class="indexterm-anchor"></a>Resident partitions: IDs of partitions that will not be flushed out of the cache, but will stay in memory once they are loaded</p>
</li>
<li>
<p>Cache flushing policy: class name of the <code class="codeph">CachingHandler</code> implementation</p>
<p>The default caching policy is <code class="codeph">LeastRecentlyUsed</code>, which flushes out the oldest partition out of memory when the cache is full. You can specify other caching policies by implementing the <code class="codeph">CachingHandler</code> interface.</p>
</li>
</ul>
<p>A copy of the default load on demand configuration file is included in the supplementary documentation, described in <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>.</p>
</div>
</div>
<a id="TOPOL907"></a>
<div class="props_rev_3"><a id="GUID-09904CFD-3D01-4510-A97A-D8DC6D724988"></a>
<h3 id="TOPOL-GUID-09904CFD-3D01-4510-A97A-D8DC6D724988" class="sect3">Analyzing the Network</h3>
<div>
<p>After you have created and partitioned the network, and optionally configured the partition cache, you can issue analysis queries. Analysis results are returned in Java representation or XML responses, depending on whether you used the Java or XML API. For details, see the load on demand (LOD) Javadoc and XML schemas (the latter described in <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>).</p>
<p>You can write the analysis results to the database using the load on demand Java API.</p>
</div>
</div>
<a id="TOPOL908"></a>
<div class="props_rev_3"><a id="GUID-913AD671-89D4-4CDF-8E16-9CE2C1581B0B"></a>
<h3 id="TOPOL-GUID-913AD671-89D4-4CDF-8E16-9CE2C1581B0B" class="sect3">Using Link Levels for Priority Modeling</h3>
<div>
<p>Although the load on demand approach reduces the effect of memory limitations in analyzing large networks, analysis operations still can sometimes be very slow. For example, shortest path analysis of two nodes diagonally across the entire network is likely to require traversing almost every link in the network, and this will take a significant amount of time for a network with more than, for example, two million nodes.</p>
<p>To further reduce network analysis time, you can perform analysis on different link levels. <span class="bold">Link level</span> is a positive integer assigned to a link indicating the level of preference of this link. The higher the link level, the higher the preference. For example, a road network may consist of two link levels, level 1 for local roads and level 2 for highways. During network analysis, highways are preferred to local roads, and the minimum link level is 1. (If no link level is assigned to a link, the default link level of 1 is used for the link.)</p>
<p>Link levels have an implicit inheritance property, which means that a network at higher link levels must be a subnetwork of a network at a lower link level. That is, link level 2 is a subnetwork of link level 1, link level 3 is a subnetwork of link level 2, and so on.</p>
<p>You can specify a link level when you load a network or a partition, which causes links at that level and higher levels to be loaded. Using the road network example, with link level 1 for local roads and link level 2 for highways, specifying link level 1 on a load operation loads links at link levels 1 and 2 (that is, local roads and highways), but specifying link level 2 on a load operation loads only the highways links. If you wanted to perform analysis using only highways links, you could optimize the performance by specifying link level 2 for the load operation.</p>
</div>
</div>
<a id="TOPOL909"></a>
<div class="props_rev_3"><a id="GUID-FDF32B55-1871-4782-9126-44FA016EEE15"></a>
<h3 id="TOPOL-GUID-FDF32B55-1871-4782-9126-44FA016EEE15" class="sect3">Precomputed Analysis Results</h3>
<div>
<p>Some analysis operations, such as connected component analysis, can be time consuming. To improve runtime performance, you can call the <a href="SDO_NET-reference.htm#GUID-182C0834-3676-481C-94D4-B6242DE39311">SDO_NET.FIND_CONNECTED_COMPONENTS</a> procedure, which computes the connected components in the network and stores the results in the connected component table, which is described <a href="network-data-model-graph-overview.htm#GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8">Connected Component Table</a>.</p>
<p>At runtime, before calling shortest path analysis or reachability analysis, you can check whether the nodes of interest belong to the same connected component by querying the connected component table. If precomputed component information does not exist, it may take a long time for shortest path and reachability analysis to discover that two nodes are, in fact, not connected.</p>
</div>
</div>
</div>
<a id="TOPOL912"></a>
<div class="props_rev_3"><a id="GUID-368DCA87-F688-40FC-8B47-E5AA8BCA083F"></a>
<h2 id="TOPOL-GUID-368DCA87-F688-40FC-8B47-E5AA8BCA083F" class="sect2">Network Data Model Graph Tables</h2>
<div>
<p>The connectivity information for a spatial network is stored in two tables: a node table and a link table. In addition, path information can be stored in a path table and a path-link table. You can have Spatial and Graph create these tables automatically when you create the network using a CREATE_<span class="italic">&lt;network-type&gt;</span>_NETWORK procedure; or you can create these tables using the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a>, <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures.</p>
<p>These tables contain columns with predefined names, and you must not change any of the predefined column names; however, you can add columns to the tables by using the ALTER TABLE statement with the ADD COLUMN clause. For example, although each link and path table is created with a single COST column, you can create additional columns and associate them with other comparable attributes. Thus, to assign a driving time, scenic appeal rating, and a danger rating to each link, you could use the COST column for driving time, add columns for SCENIC_APPEAL and DANGER to the link table, and populate all three columns with values to be interpreted by applications.</p>
<p><a id="d23349e2375" class="indexterm-anchor"></a>The following considerations apply to schema, table, and column names that are stored in any Oracle Spatial and Graph metadata views. For example, these considerations apply to the names of node, link, path, and path-link tables, and to the names of any columns in these tables that are stored in the network metadata views described in <a href="network-data-model-graph-overview.htm#GUID-08FC9575-4397-4A50-9401-44F48F78E00D">Network Data Model Graph Metadata Views</a>.</p>
<ul style="list-style-type: disc;">
<li>
<p>The name must contain only letters, numbers, and underscores. For example, the name cannot contain a space ( ), an apostrophe (<code class="codeph">&#39;</code>), a quotation mark (<code class="codeph">&#34;</code>), or a comma (<code class="codeph">,</code>).</p>
</li>
<li>
<p>All letters in the names are converted to uppercase before the names are stored in metadata views or before the tables are accessed. This conversion also applies to any schema name specified with the table name.</p>
</li>
</ul>
</div>
<a id="TOPOL1072"></a>
<div class="props_rev_3"><a id="GUID-5B21AFC3-2440-40DB-8CEB-E83F1B95D415"></a>
<h3 id="TOPOL-GUID-5B21AFC3-2440-40DB-8CEB-E83F1B95D415" class="sect3">Network Layer Tables</h3>
<div>
<p>The metadata tables in this section are not related to feature modeling.</p>
</div>
<a id="TOPOL914"></a><a id="TOPOL913"></a>
<div class="props_rev_3"><a id="GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C"></a>
<h4 id="TOPOL-GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C" class="sect4">Node Table</h4>
<div>
<p>Each network has a node table that can contain the columns described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C__CIHJHEGB" title="Node Table Columns">Table 5-3</a>. (The specific columns depend on the network type and whether the network is hierarchical or not.)</p>
<div class="tblformal" id="GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C__CIHJHEGB">
<p class="titleintable">Table 5-3 Node Table Columns</p>
<table class="cellalignment113" title="Node Table Columns" summary="Node Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment136" id="d23349e2474">Column Name</th>
<th class="cellalignment136" id="d23349e2477">Data Type</th>
<th class="cellalignment137" id="d23349e2480">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2485" headers="d23349e2474">
<p>NODE_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2485 d23349e2477">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2485 d23349e2480">
<p>ID number that uniquely identifies this node within the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2495" headers="d23349e2474">
<p>NODE_NAME</p>
</td>
<td class="cellalignment138" headers="d23349e2495 d23349e2477">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment139" headers="d23349e2495 d23349e2480">
<p>Name of the node</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2505" headers="d23349e2474">
<p>NODE_TYPE</p>
</td>
<td class="cellalignment138" headers="d23349e2505 d23349e2477">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment139" headers="d23349e2505 d23349e2480">
<p>User-defined string to identify the node type</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2515" headers="d23349e2474">
<p><a id="d23349e2517" class="indexterm-anchor"></a>ACTIVE</p>
</td>
<td class="cellalignment138" headers="d23349e2515 d23349e2477">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment139" headers="d23349e2515 d23349e2480">
<p>Contains <code class="codeph">Y</code> if the node is active (visible in the network), or <code class="codeph">N</code> if the node is not active.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2535" headers="d23349e2474">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2535 d23349e2477">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2535 d23349e2480">
<p>(Not used. Instead, node and partition relationships are stored in the partition table, which is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2549" headers="d23349e2474">
<p><span class="italic">&lt;node_geometry_column&gt;</span>, or GEOM_ID and MEASURE</p>
</td>
<td class="cellalignment138" headers="d23349e2549 d23349e2477">
<p>SDO_GEOMETRY, or SDO_TOPO_GEOMETRY, or NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2549 d23349e2480">
<p>For a spatial (SDO, non-LRS) network, the SDO_GEOMETRY object associated with the node</p>
<p>For a spatial topology network, the SDO_TOPO_GEOMETRY object associated with the node</p>
<p>For a spatial LRS network, GEOM_ID and MEASURE column values (both of type NUMBER) for the geometry objects associated with the node</p>
<p>For a logical network, this column is not used.</p>
<p>For a spatial SDO or topology network, the actual column name is either a default name or what you specified as the <code class="codeph">geom_column</code> parameter value in the call to the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2576" headers="d23349e2474">
<p><span class="italic">&lt;node_cost_column&gt;</span></p>
</td>
<td class="cellalignment138" headers="d23349e2576 d23349e2477">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2576 d23349e2480">
<p>Cost value to be associated with the node, for use by applications that use the network. The actual column name is either a default name or what you specified as the <code class="codeph">cost_column</code> parameter value in the call to the <a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a> procedure. The cost value can represent anything you want, for example, the toll to be paid at a toll booth.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2594" headers="d23349e2474">
<p>HIERARCHY_LEVEL</p>
</td>
<td class="cellalignment138" headers="d23349e2594 d23349e2477">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2594 d23349e2480">
<p>For hierarchical networks only: number indicating the level in the network hierarchy for this node. (<a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a> explains network hierarchy.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2608" headers="d23349e2474">
<p>PARENT_NODE_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2608 d23349e2477">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2608 d23349e2480">
<p>For hierarchical networks only: node ID of the parent node of this node. (<a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a> explains network hierarchy.)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL916"></a><a id="TOPOL915"></a>
<div class="props_rev_3"><a id="GUID-848CA619-6BD6-4C1F-8235-8747074ED40D"></a>
<h4 id="TOPOL-GUID-848CA619-6BD6-4C1F-8235-8747074ED40D" class="sect4">Link Table</h4>
<div>
<p>Each network has a link table that contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D__CIHJCABE" title="Link Table Columns">Table 5-4</a>.</p>
<div class="tblformal" id="GUID-848CA619-6BD6-4C1F-8235-8747074ED40D__CIHJCABE">
<p class="titleintable">Table 5-4 Link Table Columns</p>
<table class="cellalignment113" title="Link Table Columns" summary="Link Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment136" id="d23349e2668">Column Name</th>
<th class="cellalignment136" id="d23349e2671">Data Type</th>
<th class="cellalignment137" id="d23349e2674">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2679" headers="d23349e2668">
<p>LINK_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2679 d23349e2671">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2679 d23349e2674">
<p>ID number that uniquely identifies this link within the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2689" headers="d23349e2668">
<p>LINK_NAME</p>
</td>
<td class="cellalignment138" headers="d23349e2689 d23349e2671">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment139" headers="d23349e2689 d23349e2674">
<p>Name of the link</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2699" headers="d23349e2668">
<p>START_NODE_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2699 d23349e2671">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2699 d23349e2674">
<p>Node ID of the node that starts the link</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2709" headers="d23349e2668">
<p>END_NODE_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2709 d23349e2671">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2709 d23349e2674">
<p>Node ID of the node that ends the link</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2719" headers="d23349e2668">
<p>LINK_TYPE</p>
</td>
<td class="cellalignment138" headers="d23349e2719 d23349e2671">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment139" headers="d23349e2719 d23349e2674">
<p>User-defined string to identify the link type</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2729" headers="d23349e2668">
<p><a id="d23349e2731" class="indexterm-anchor"></a>ACTIVE</p>
</td>
<td class="cellalignment138" headers="d23349e2729 d23349e2671">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment139" headers="d23349e2729 d23349e2674">
<p>Contains <code class="codeph">Y</code> if the link is active (visible in the network), or <code class="codeph">N</code> if the link is not active.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2749" headers="d23349e2668">
<p>LINK_LEVEL</p>
</td>
<td class="cellalignment138" headers="d23349e2749 d23349e2671">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2749 d23349e2674">
<p>Priority level for the link; used for network analysis, so that links with higher priority levels can be considered first in computing a path</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2759" headers="d23349e2668">
<p><span class="italic">&lt;link_geometry_column&gt;</span>; or GEOM_ID, START_MEASURE, and END_MEASURE</p>
</td>
<td class="cellalignment138" headers="d23349e2759 d23349e2671">
<p>SDO_GEOMETRY, or SDO_TOPO_GEOMETRY, or NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2759 d23349e2674">
<p>For a spatial (SDO, non-LRS) network, the SDO_GEOMETRY object associated with the link</p>
<p>For a spatial topology network, the SDO_TOPO_GEOMETRY object associated with the link</p>
<p>For a spatial LRS network, GEOM_ID, START_MEASURE, and END_MEASURE column values (all of type NUMBER) for the geometry objects associated with the link</p>
<p>For a logical network, this column is not used.</p>
<p>For a spatial SDO or topology network, the actual column name is either a default name or what you specified as the <code class="codeph">geom_column</code> parameter value in the call to the <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2786" headers="d23349e2668">
<p><span class="italic">&lt;link_cost_column&gt;</span></p>
</td>
<td class="cellalignment138" headers="d23349e2786 d23349e2671">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2786 d23349e2674">
<p>Cost value to be associated with the link, for use by applications that use the network. The actual column name is either a default name or what you specified as the <code class="codeph">cost_column</code> parameter value in the call to the <a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a> procedure. The cost value can represent anything you want, for example, the estimated driving time for the link.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2804" headers="d23349e2668">
<p>PARENT_LINK_ID</p>
</td>
<td class="cellalignment138" headers="d23349e2804 d23349e2671">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e2804 d23349e2674">
<p>For hierarchical networks only: link ID of the parent link of this link. (<a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a> explains parent-child relationships in a network hierarchy.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e2818" headers="d23349e2668">
<p>BIDIRECTED</p>
</td>
<td class="cellalignment138" headers="d23349e2818 d23349e2671">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment139" headers="d23349e2818 d23349e2674">
<p>For directed networks only: contains <code class="codeph">Y</code> if the link is undirected (that is, can be traversed either from the start node to the end node or from the end node to the start node), or <code class="codeph">N</code> if the link is directed (in one direction only, from the start node to the end node).</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL918"></a><a id="TOPOL917"></a>
<div class="props_rev_3"><a id="GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659"></a>
<h4 id="TOPOL-GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659" class="sect4">Path Table</h4>
<div>
<p>Each network can have a path table. A path is an ordered sequence of links, and is usually created as a result of network analysis. A path table provides a way to store the result of this analysis. For each path table, you must create an associated path-link table (described in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>). Each path table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659__CIHFAECF" title="Path Table Columns">Table 5-5</a>.</p>
<div class="tblformal" id="GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659__CIHFAECF">
<p class="titleintable">Table 5-5 Path Table Columns</p>
<table class="cellalignment113" title="Path Table Columns" summary="Path Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e2885">Column Name</th>
<th class="cellalignment114" id="d23349e2888">Data Type</th>
<th class="cellalignment114" id="d23349e2891">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2896" headers="d23349e2885">
<p>PATH_ID</p>
</td>
<td class="cellalignment107" headers="d23349e2896 d23349e2888">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e2896 d23349e2891">
<p>ID number that uniquely identifies this path within the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2906" headers="d23349e2885">
<p>PATH_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e2906 d23349e2888">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e2906 d23349e2891">
<p>Name of the path</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2916" headers="d23349e2885">
<p>PATH_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e2916 d23349e2888">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment107" headers="d23349e2916 d23349e2891">
<p>User-defined string to identify the path type</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2926" headers="d23349e2885">
<p>START_NODE_ID</p>
</td>
<td class="cellalignment107" headers="d23349e2926 d23349e2888">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e2926 d23349e2891">
<p>Node ID of the node that starts the first link in the path</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2936" headers="d23349e2885">
<p>END_NODE_ID</p>
</td>
<td class="cellalignment107" headers="d23349e2936 d23349e2888">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e2936 d23349e2891">
<p>Node ID of the node that ends the last link in the path</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2946" headers="d23349e2885">
<p>COST</p>
</td>
<td class="cellalignment107" headers="d23349e2946 d23349e2888">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e2946 d23349e2891">
<p>Cost value to be associated with the path, for use by applications that use the network. The cost value can represent anything you want, for example, the estimated driving time for the path.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2956" headers="d23349e2885">
<p>SIMPLE</p>
</td>
<td class="cellalignment107" headers="d23349e2956 d23349e2888">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment107" headers="d23349e2956 d23349e2891">
<p><a id="d23349e2964" class="indexterm-anchor"></a><a id="d23349e2966" class="indexterm-anchor"></a><a id="d23349e2968" class="indexterm-anchor"></a><a id="d23349e2972" class="indexterm-anchor"></a>Contains <code class="codeph">Y</code> if the path is a simple path, or <code class="codeph">N</code> if the path is a complex path. In a simple path, the links form an ordered list that can be traversed from the start node to the end node with each link visited once. In a complex path, there are multiple options for going from the start node to the end node.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e2984" headers="d23349e2885">
<p><span class="italic">&lt;path_geometry_column&gt;</span></p>
</td>
<td class="cellalignment107" headers="d23349e2984 d23349e2888">
<p>SDO_GEOMETRY</p>
</td>
<td class="cellalignment107" headers="d23349e2984 d23349e2891">
<p>For all network types except logical, the geometry object associated with the path. The actual column name is either a default name or what you specified as the <code class="codeph">geom_column</code> parameter value in the call to the <a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a> procedure.</p>
<p>For a logical network, this column is not used.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL920"></a><a id="TOPOL919"></a>
<div class="props_rev_3"><a id="GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8"></a>
<h4 id="TOPOL-GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8" class="sect4">Path-Link Table</h4>
<div>
<p>For each path table (described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>), you must create a path-link table. Each row in the path-link table uniquely identifies a link within a path in a network; that is, each combination of PATH_ID, LINK_ID, and SEQ_NO values must be unique within the network. The order of rows in the path-link table is not significant. Each path-link table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8__CIHCFEJA" title="Path-Link Table Columns">Table 5-6</a>.</p>
<div class="tblformal" id="GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8__CIHCFEJA">
<p class="titleintable">Table 5-6 Path-Link Table Columns</p>
<table class="cellalignment113" title="Path-Link Table Columns" summary="Path-Link Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3054">Column Name</th>
<th class="cellalignment114" id="d23349e3057">Data Type</th>
<th class="cellalignment114" id="d23349e3060">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3065" headers="d23349e3054">
<p>PATH_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3065 d23349e3057">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3065 d23349e3060">
<p>ID number of the path in the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3075" headers="d23349e3054">
<p>LINK_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3075 d23349e3057">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3075 d23349e3060">
<p>ID number of the link in the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3085" headers="d23349e3054">
<p>SEQ_NO</p>
</td>
<td class="cellalignment107" headers="d23349e3085 d23349e3057">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3085 d23349e3060">
<p>Unique sequence number of the link in the path. (The sequence numbers start at 1.) Sequence numbers allow paths to contain repeating nodes and links.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL922"></a><a id="TOPOL921"></a>
<div class="props_rev_3"><a id="GUID-62718510-3BB9-4959-B2E6-4495DFF125E9"></a>
<h4 id="TOPOL-GUID-62718510-3BB9-4959-B2E6-4495DFF125E9" class="sect4">Subpath Table</h4>
<div>
<p>Each path can have one or more associated subpaths, and information about all subpaths in a network is stored in the subpath table. A subpath is a partial path along a path, as explained in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>. The subpath table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9__CIHCBGDC" title="Subpath Table Columns">Table 5-7</a>.</p>
<div class="tblformal" id="GUID-62718510-3BB9-4959-B2E6-4495DFF125E9__CIHCBGDC">
<p class="titleintable">Table 5-7 Subpath Table Columns</p>
<table class="cellalignment113" title="Subpath Table Columns" summary="Subpath Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3149">Column Name</th>
<th class="cellalignment114" id="d23349e3152">Data Type</th>
<th class="cellalignment114" id="d23349e3155">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3160" headers="d23349e3149">
<p>SUBPATH_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3160 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3160 d23349e3155">
<p>ID number that uniquely identifies this subpath within the reference path</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3170" headers="d23349e3149">
<p>SUBPATH_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e3170 d23349e3152">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e3170 d23349e3155">
<p>Name of the subpath</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3180" headers="d23349e3149">
<p>SUBPATH_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e3180 d23349e3152">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment107" headers="d23349e3180 d23349e3155">
<p>User-defined string to identify the subpath type</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3190" headers="d23349e3149">
<p>REFERENCE_PATH_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3190 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3190 d23349e3155">
<p>Path ID number of the path that contains this subpath</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3200" headers="d23349e3149">
<p>START_LINK_INDEX</p>
</td>
<td class="cellalignment107" headers="d23349e3200 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3200 d23349e3155">
<p>Link ID of the link used to define the start of the subpath. For example, in <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a> in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>, the START_LINK_INDEX is 0, and the START_PERCENTAGE is 0.65.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3216" headers="d23349e3149">
<p>END_LINK_INDEX</p>
</td>
<td class="cellalignment107" headers="d23349e3216 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3216 d23349e3155">
<p>Link ID of the link used to define the end of the subpath. For example, in <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a> in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>, the END_LINK_INDEX is 6, and the END_PERCENTAGE is 0.5.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3232" headers="d23349e3149">
<p>START_PERCENTAGE</p>
</td>
<td class="cellalignment107" headers="d23349e3232 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3232 d23349e3155">
<p>Percentage of the distance between START_LINK_INDEX and the next link in the path, representing the start point of the subpath. Can be a positive or negative number. For example, in <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a> in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>, the START_LINK_INDEX is 0, and the START_PERCENTAGE is 0.65. (&#34;Percentage&#34; values in this case are expressed as between 0 and 1.0, so 0.65 is 65 percent.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3248" headers="d23349e3149">
<p>END_PERCENTAGE</p>
</td>
<td class="cellalignment107" headers="d23349e3248 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3248 d23349e3155">
<p>Percentage of the distance between END_LINK_INDEX and the next link in the path, representing the end point of the subpath. Can be a positive or negative number. For example, in <a href="network-data-model-graph-overview.htm#GUID-E00ACA48-D4C2-4192-870D-ACF1B5DD5E5D__CIHDJIGI">Figure 5-2</a> in <a href="network-data-model-graph-overview.htm#GUID-4D127E98-2856-4C90-9FE0-BCA156E39C7C">Network Data Model Graph Concepts</a>, the END_LINK_INDEX is 6, and the END_PERCENTAGE is 0.5. (&#34;Percentage&#34; values in this case are expressed as between 0 and 1.0, so 0.5 is 50 percent.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3264" headers="d23349e3149">
<p>COST</p>
</td>
<td class="cellalignment107" headers="d23349e3264 d23349e3152">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3264 d23349e3155">
<p>Cost value to be associated with the subpath, for use by applications that use the network. The cost value can represent anything you want, for example, the estimated driving time for the path.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3274" headers="d23349e3149">
<p><span>GEOM</span></p>
</td>
<td class="cellalignment107" headers="d23349e3274 d23349e3152">
<p>SDO_GEOMETRY</p>
</td>
<td class="cellalignment107" headers="d23349e3274 d23349e3155">
<p>For all network types except logical, the geometry object associated with the subpath. The actual column name is either a default name or what you specified as the <code class="codeph">geom_column</code> parameter value in the call to the <a href="SDO_NET-reference.htm#GUID-03A58B2C-8B3F-4BD5-9A3D-7448B30DBC7D">SDO_NET.CREATE_SUBPATH_TABLE</a> procedure.</p>
<p>For a logical network, this column is not used.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL924"></a><a id="TOPOL923"></a>
<div class="props_rev_3"><a id="GUID-5F93389F-642E-41E2-A722-7074EB052131"></a>
<h4 id="TOPOL-GUID-5F93389F-642E-41E2-A722-7074EB052131" class="sect4">Partition Table</h4>
<div>
<p>Each partitioned network has a partition table. For information about partitioned networks, see <a href="network-data-model-graph-overview.htm#GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6">Network Analysis Using Load on Demand</a>. Each partition table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131__CIHEHHEI" title="Partition Table Columns">Table 5-8</a>.</p>
<div class="tblformal" id="GUID-5F93389F-642E-41E2-A722-7074EB052131__CIHEHHEI">
<p class="titleintable">Table 5-8 Partition Table Columns</p>
<table class="cellalignment113" title="Partition Table Columns" summary="Partition Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3349">Column Name</th>
<th class="cellalignment114" id="d23349e3352">Data Type</th>
<th class="cellalignment114" id="d23349e3355">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3360" headers="d23349e3349">
<p>NODE_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3360 d23349e3352">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3360 d23349e3355">
<p>ID number of the node</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3370" headers="d23349e3349">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3370 d23349e3352">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3370 d23349e3355">
<p>ID number of the partition. Must be unique within the network.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3380" headers="d23349e3349">
<p>LINK_LEVEL</p>
</td>
<td class="cellalignment107" headers="d23349e3380 d23349e3352">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3380 d23349e3355">
<p>Link level (Link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL926"></a><a id="TOPOL925"></a>
<div class="props_rev_3"><a id="GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE"></a>
<h4 id="TOPOL-GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE" class="sect4">Partition BLOB Table</h4>
<div>
<p>Each partitioned network can have a partition BLOB table, which stores binary large object (BLOB) representations for each combination of link level and partition ID in the network. Having BLOB representations of partitions enables better performance for network load on demand analysis operations. To create the partition BLOB table, use the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, where you specify the partition BLOB table name as one of the parameters. For information about partitioned networks, see <a href="network-data-model-graph-overview.htm#GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6">Network Analysis Using Load on Demand</a>.</p>
<div class="infobox-note" id="GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE__GUID-9BEE379B-932F-4A54-AF69-7B6E9767EC95">
<p class="notep1">Note:</p>
<p>You should never directly modify the partition BLOB table. This table is automatically updated as a result of calls to the <a href="SDO_NET-reference.htm#GUID-C90ADE79-BBA7-4709-9178-BFF038A799BA">SDO_NET.GENERATE_PARTITION_BLOBS</a> and <a href="SDO_NET-reference.htm#GUID-4FA24762-D067-4A7F-9130-E054B6486CF9">SDO_NET.GENERATE_PARTITION_BLOB</a> procedures.</p>
</div>
<p>Each partition table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE__CIHFEBBE" title="Partition BLOB Table Columns">Table 5-9</a>.</p>
<div class="tblformal" id="GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE__CIHFEBBE">
<p class="titleintable">Table 5-9 Partition BLOB Table Columns</p>
<table class="cellalignment113" title="Partition BLOB Table Columns" summary="Partition BLOB Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3461">Column Name</th>
<th class="cellalignment114" id="d23349e3464">Data Type</th>
<th class="cellalignment114" id="d23349e3467">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3472" headers="d23349e3461">
<p>LINK_LEVEL</p>
</td>
<td class="cellalignment107" headers="d23349e3472 d23349e3464">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e3472 d23349e3467">
<p>Link level (Link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3482" headers="d23349e3461">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3482 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3482 d23349e3467">
<p>ID number of the partition</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3492" headers="d23349e3461">
<p>BLOB</p>
</td>
<td class="cellalignment107" headers="d23349e3492 d23349e3464">
<p>BLOB</p>
</td>
<td class="cellalignment107" headers="d23349e3492 d23349e3467">
<p>Binary large object (BLOB) representing the specified link level within the specified partition</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3502" headers="d23349e3461">
<p>NUM_INODES</p>
</td>
<td class="cellalignment107" headers="d23349e3502 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3502 d23349e3467">
<p>Number of internal nodes in the BLOB (that is, total number of nodes in the BLOB)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3512" headers="d23349e3461">
<p>NUM_ENODES</p>
</td>
<td class="cellalignment107" headers="d23349e3512 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3512 d23349e3467">
<p>Number of external nodes. An external node is a node that is outside the BLOB, but is one end of a link in which the other node is inside the BLOB.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3522" headers="d23349e3461">
<p>NUM_ILINKS</p>
</td>
<td class="cellalignment107" headers="d23349e3522 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3522 d23349e3467">
<p>Number of internal links in the BLOB (that is, links completely inside the BLOB)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3532" headers="d23349e3461">
<p>NUM_ELINKS</p>
</td>
<td class="cellalignment107" headers="d23349e3532 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3532 d23349e3467">
<p>Number of external links. An external link is a link in which one node is internal (inside the BLOB) and one node is external (outside the BLOB).</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3542" headers="d23349e3461">
<p>NUM_INLINKS</p>
</td>
<td class="cellalignment107" headers="d23349e3542 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3542 d23349e3467">
<p>Number of incoming links. An incoming link is an external link in which the start node is outside the BLOB and the end node is inside the BLOB.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3552" headers="d23349e3461">
<p>NUM_OUTLINKS</p>
</td>
<td class="cellalignment107" headers="d23349e3552 d23349e3464">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3552 d23349e3467">
<p>Number of outgoing links. An outgoing link is an external link in which the start node is inside the BLOB and the end node is outside the BLOB.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3562" headers="d23349e3461">
<p>USER_DATA_INCLUDED</p>
</td>
<td class="cellalignment107" headers="d23349e3562 d23349e3464">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment107" headers="d23349e3562 d23349e3467">
<p>Contains <code class="codeph">Y</code> if the BLOB can include user data, or <code class="codeph">N</code> if the BLOB cannot include user data.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL928"></a><a id="TOPOL927"></a>
<div class="props_rev_3"><a id="GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8"></a>
<h4 id="TOPOL-GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8" class="sect4">Connected Component Table</h4>
<div>
<p>Each network can have a connected component table, which stores the component ID for each node. Nodes of the same connected component have the same component ID. Having this information in the table enables better performance for many network analysis operations. To create the connected component table, and to update the contents of the table at any time afterwards, use the <a href="SDO_NET-reference.htm#GUID-182C0834-3676-481C-94D4-B6242DE39311">SDO_NET.FIND_CONNECTED_COMPONENTS</a> procedure, where you specify the connected component table name as one of the parameters. For more information about using the precomputed information about connected components, see <a href="network-data-model-graph-overview.htm#GUID-FDF32B55-1871-4782-9126-44FA016EEE15">Precomputed Analysis Results</a>.</p>
<p>Each connected component table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8__CIHJGGDE" title="Connected Component Table Columns">Table 5-10</a>.</p>
<div class="tblformal" id="GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8__CIHJGGDE">
<p class="titleintable">Table 5-10 Connected Component Table Columns</p>
<table class="cellalignment113" title="Connected Component Table Columns" summary="Connected Component Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3634">Column Name</th>
<th class="cellalignment114" id="d23349e3637">Data Type</th>
<th class="cellalignment114" id="d23349e3640">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3645" headers="d23349e3634">
<p>LINK_LEVEL</p>
</td>
<td class="cellalignment107" headers="d23349e3645 d23349e3637">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3645 d23349e3640">
<p>Link level of the component assignment. (Link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3655" headers="d23349e3634">
<p>NODE_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3655 d23349e3637">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3655 d23349e3640">
<p>ID number of the node from which to compute all other components that are reachable.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3665" headers="d23349e3634">
<p>COMPONENT_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3665 d23349e3637">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3665 d23349e3640">
<p>ID number of a component that is reachable from the specified node.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL1074"></a><a id="TOPOL1073"></a>
<div class="props_rev_3"><a id="GUID-0D2F6509-0537-406B-9A40-5EEE4FBB1E9B"></a>
<h4 id="TOPOL-GUID-0D2F6509-0537-406B-9A40-5EEE4FBB1E9B" class="sect4">Node Hierarchy Table (Optional)</h4>
<div>
<p>Each network can have a node hierarchy table, which stores parent-child relationships if the network has a hierarchy (explained in <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>).</p>
<p>If the node hierarchy table exists, it contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-0D2F6509-0537-406B-9A40-5EEE4FBB1E9B__CIHBHFGE" title="Node Hierarchy Table Columns">Table 5-11</a>.</p>
<div class="tblformal" id="GUID-0D2F6509-0537-406B-9A40-5EEE4FBB1E9B__CIHBHFGE">
<p class="titleintable">Table 5-11 Node Hierarchy Table Columns</p>
<table class="cellalignment113" title="Node Hierarchy Table Columns" summary="Node Hierarchy Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3728">Column Name</th>
<th class="cellalignment114" id="d23349e3731">Data Type</th>
<th class="cellalignment114" id="d23349e3734">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3739" headers="d23349e3728">
<p>PARENT_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3739 d23349e3731">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3739 d23349e3734">
<p>Parent node ID, that is, the node ID in the parent network, or the group, cluster, or partition ID in the child network.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3749" headers="d23349e3728">
<p>CHILD_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3749 d23349e3731">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3749 d23349e3734">
<p>Child ID, that is, the node ID in the child network.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3759" headers="d23349e3728">
<p>LINK_LEVEL</p>
</td>
<td class="cellalignment107" headers="d23349e3759 d23349e3731">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3759 d23349e3734">
<p>Link level on which the parent-child relationship is defined. A network on a higher link level is a subnetwork of that on a lower link level. A network on link level <span class="italic">n</span> consists of only links with link level greater than or equal to <span class="italic">n</span>.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL1128"></a><a id="TOPOL1127"></a>
<div class="props_rev_3"><a id="GUID-040531CD-DE4F-4323-B6A7-89D257AD367D"></a>
<h4 id="TOPOL-GUID-040531CD-DE4F-4323-B6A7-89D257AD367D" class="sect4">Node Level Table (Optional)</h4>
<div>
<p>Each network can have a node level table, which stores information on the maximum link level for each higher level node (that is, a node whose maximum link level is greater than 1). The node level table is only useful for multilevel networks; it makes loading partitions from node and link tables faster.</p>
<p>If the node level table exists, it contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-040531CD-DE4F-4323-B6A7-89D257AD367D__CIHCCHHI" title="Node Hierarchy Table Columns">Table 5-12</a>.</p>
<div class="tblformal" id="GUID-040531CD-DE4F-4323-B6A7-89D257AD367D__CIHCCHHI">
<p class="titleintable">Table 5-12 Node Level Table Columns</p>
<table class="cellalignment113" title="Node Level Table Columns" summary="Node Hierarchy Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e3823">Column Name</th>
<th class="cellalignment114" id="d23349e3826">Data Type</th>
<th class="cellalignment114" id="d23349e3829">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3834" headers="d23349e3823">
<p>NODE_ID</p>
</td>
<td class="cellalignment107" headers="d23349e3834 d23349e3826">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3834 d23349e3829">
<p>ID of a node whose maximum link level is greater than 1</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e3844" headers="d23349e3823">
<p>LINK_LEVEL</p>
</td>
<td class="cellalignment107" headers="d23349e3844 d23349e3826">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e3844 d23349e3829">
<p>Maximum link level to which the node is connected.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<a id="TOPOL1075"></a>
<div class="props_rev_3"><a id="GUID-35322E5A-1564-4DA5-BCF5-04D569373F99"></a>
<h3 id="TOPOL-GUID-35322E5A-1564-4DA5-BCF5-04D569373F99" class="sect3">Feature Layer Tables</h3>
<div>
<p>The tables in this section are related to feature modeling (see <a href="network-data-model-graph-overview.htm#GUID-7F09B637-DBC2-43FA-BF29-C32656EADEE4">Feature Modeling</a>). These tables are used to describe each registered feature layer.</p>
<p>In most applications, the tables containing feature entity information, feature to network relationships, or feature hierarchy relationships already exist, although the table schema may be different from that of the NDM tables. In such cases, you can create views to map the existing table schema to the NDM table schema.</p>
</div>
<a id="TOPOL1077"></a><a id="TOPOL1076"></a>
<div class="props_rev_3"><a id="GUID-4ACCA853-2ADB-4D5E-B788-119031842B3A"></a>
<h4 id="TOPOL-GUID-4ACCA853-2ADB-4D5E-B788-119031842B3A" class="sect4">Feature Table</h4>
<div>
<p>A feature table contains feature entity information. Each feature table must contain a FEATURE_ID column. Other feature attributes that are potentially useful during feature analysis can be registered as user data.</p>
<p>Each feature table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-4ACCA853-2ADB-4D5E-B788-119031842B3A__CIHFEIJD" title="Feature Table Columns">Table 5-13</a>.</p>
<div class="tblformal" id="GUID-4ACCA853-2ADB-4D5E-B788-119031842B3A__CIHFEIJD">
<p class="titleintable">Table 5-13 Feature Table Columns</p>
<table class="cellalignment113" title="Feature Table Columns" summary="Feature Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment136" id="d23349e3932">Column Name</th>
<th class="cellalignment136" id="d23349e3935">Data Type</th>
<th class="cellalignment137" id="d23349e3938">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e3943" headers="d23349e3932">
<p>FEATURE_ID</p>
</td>
<td class="cellalignment138" headers="d23349e3943 d23349e3935">
<p>NUMBER</p>
</td>
<td class="cellalignment139" headers="d23349e3943 d23349e3938">
<p>ID of the feature.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment138" id="d23349e3953" headers="d23349e3932">
<p>(Additional columns as needed)</p>
</td>
<td class="cellalignment138" headers="d23349e3953 d23349e3935">
<p>(As appropriate)</p>
</td>
<td class="cellalignment139" headers="d23349e3953 d23349e3938">
<p>(Other feature attributes that are potentially useful during feature analysis)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL1079"></a><a id="TOPOL1078"></a>
<div class="props_rev_3"><a id="GUID-1057580C-AD10-4FFB-91B8-9B6E2DE08E22"></a>
<h4 id="TOPOL-GUID-1057580C-AD10-4FFB-91B8-9B6E2DE08E22" class="sect4">Feature Element Relationships Table</h4>
<div>
<p>The feature element relationships table contains information about the relationships between feature elements and network elements (nodes and links).</p>
<p>The feature element relationships table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-1057580C-AD10-4FFB-91B8-9B6E2DE08E22__CIHHDECC" title="Feature Element Relationships Table Columns">Table 5-14</a>.</p>
<div class="tblformal" id="GUID-1057580C-AD10-4FFB-91B8-9B6E2DE08E22__CIHHDECC">
<p class="titleintable">Table 5-14 Feature Element Relationships Table Columns</p>
<table class="cellalignment113" title="Feature Element Relationships Table Columns" summary="Feature Element Relationships Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e4011">Column Name</th>
<th class="cellalignment114" id="d23349e4014">Data Type</th>
<th class="cellalignment114" id="d23349e4017">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4022" headers="d23349e4011">
<p>FEATURE_ID</p>
</td>
<td class="cellalignment107" headers="d23349e4022 d23349e4014">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4022 d23349e4017">
<p>ID of the feature.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4032" headers="d23349e4011">
<p>FEAT_ELEM_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e4032 d23349e4014">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4032 d23349e4017">
<p>Feature element type. One of the following: 1 for SDO_NET. FEAT_ELEM_TYPE_PON (point on node) ; 2 for SDO_NET. FEAT_ELEM_TYPE_POL (point on link); 3 for SDO_NET. FEAT_ELEM_TYPE_LINE (line).</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4042" headers="d23349e4011">
<p>NET_ELEM_ID</p>
</td>
<td class="cellalignment107" headers="d23349e4042 d23349e4014">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4042 d23349e4017">
<p>ID of the network element (node or link) associated with this feature element.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4052" headers="d23349e4011">
<p>START_PERCENTAGE</p>
</td>
<td class="cellalignment107" headers="d23349e4052 d23349e4014">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4052 d23349e4017">
<p>Start percentage along NET_ELEM_ID for this feature element (ignored for point on node feature elements).</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4062" headers="d23349e4011">
<p>END_PERCENTAGE</p>
</td>
<td class="cellalignment107" headers="d23349e4062 d23349e4014">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4062 d23349e4017">
<p>End percentage along NET_ELEM_ID for this feature element (ignored for point on node and point on line feature elements).</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4072" headers="d23349e4011">
<p>SEQUENCE</p>
</td>
<td class="cellalignment107" headers="d23349e4072 d23349e4014">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4072 d23349e4017">
<p>Sequence number of the feature element.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL1081"></a><a id="TOPOL1080"></a>
<div class="props_rev_3"><a id="GUID-7F12FED5-612B-473B-94A6-FCFD80A0DC0C"></a>
<h4 id="TOPOL-GUID-7F12FED5-612B-473B-94A6-FCFD80A0DC0C" class="sect4">Feature Hierarchy Table</h4>
<div>
<p>The feature hierarchy table contains feature hierarchy information. Child features can belong to different feature layers.</p>
<p>The feature hierarchy table contains the columns described in <a href="network-data-model-graph-overview.htm#GUID-7F12FED5-612B-473B-94A6-FCFD80A0DC0C__CIHCEJBE" title="Feature Hierarchy Table Columns">Table 5-15</a>.</p>
<div class="tblformal" id="GUID-7F12FED5-612B-473B-94A6-FCFD80A0DC0C__CIHCEJBE">
<p class="titleintable">Table 5-15 Feature Hierarchy Table Columns</p>
<table class="cellalignment113" title="Feature Hierarchy Table Columns" summary="Feature Hierarchy Table Columns">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e4131">Column Name</th>
<th class="cellalignment114" id="d23349e4134">Data Type</th>
<th class="cellalignment114" id="d23349e4137">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4142" headers="d23349e4131">
<p>PARENT_ID</p>
</td>
<td class="cellalignment107" headers="d23349e4142 d23349e4134">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4142 d23349e4137">
<p>ID of the parent feature.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4152" headers="d23349e4131">
<p>CHILD_LAYER_ID</p>
</td>
<td class="cellalignment107" headers="d23349e4152 d23349e4134">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4152 d23349e4137">
<p>Feature layer ID of the child feature.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4162" headers="d23349e4131">
<p>CHILD_ID</p>
</td>
<td class="cellalignment107" headers="d23349e4162 d23349e4134">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4162 d23349e4137">
<p>ID of the child feature.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4172" headers="d23349e4131">
<p>SEQUENCE</p>
</td>
<td class="cellalignment107" headers="d23349e4172 d23349e4134">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4172 d23349e4137">
<p>Sequence number of the child feature.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
</div>
<a id="TOPOL929"></a>
<div class="props_rev_3"><a id="GUID-08FC9575-4397-4A50-9401-44F48F78E00D"></a>
<h2 id="TOPOL-GUID-08FC9575-4397-4A50-9401-44F48F78E00D" class="sect2">Network Data Model Graph Metadata Views</h2>
<div>
<p>There is a set of network metadata views for each schema (user): xxx_SDO_NETWORK_METADATA, where <span class="italic">xxx</span> can be USER or ALL. These views are created by Spatial and Graph.</p>
</div>
<a id="TOPOL931"></a><a id="TOPOL930"></a>
<div class="props_rev_3"><a id="GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF"></a>
<h3 id="TOPOL-GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF" class="sect3">xxx_SDO_NETWORK_METADATA Views</h3>
<div>
<div class="section">
<p>The following views contain information about networks:</p>
<ul style="list-style-type: disc;">
<li>
<p><a id="d23349e4237" class="indexterm-anchor"></a>USER_SDO_NETWORK_METADATA contains information about all networks owned by the user.</p>
</li>
<li>
<p><a id="d23349e4242" class="indexterm-anchor"></a>ALL_SDO_NETWORK_METADATA contains information about all networks on which the user has SELECT permission.</p>
</li>
</ul>
<p>If you create a network using one of the CREATE_<span class="italic">&lt;network-type&gt;</span>_NETWORK procedures, the information in these views is automatically updated to reflect the new network; otherwise, you must insert information about the network into the USER_SDO_NETWORK_METADATA view.</p>
<p>The USER_SDO_NETWORK_METADATA and ALL_SDO_NETWORK_METADATA views contain the same columns, as shown <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC" title="Columns in the xxx_SDO_NETWORK_METADATA Views">Table 5-16</a>, except that the USER_SDO_NETWORK_METADATA view does not contain the OWNER column. (The columns are listed in their order in the view definition.)</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF__CIHFCDFC">
<p class="titleintable">Table 5-16 Columns in the xxx_SDO_NETWORK_METADATA Views</p>
<table class="cellalignment113" title="Columns in the xxx_SDO_NETWORK_METADATA Views" summary="Columns in the xxx_SDO_NETWORK_METADATA Views">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e4268">Column Name</th>
<th class="cellalignment114" id="d23349e4271">Data Type</th>
<th class="cellalignment114" id="d23349e4274">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4279" headers="d23349e4268">
<p>OWNER</p>
</td>
<td class="cellalignment107" headers="d23349e4279 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4279 d23349e4274">
<p>Owner of the network (ALL_SDO_NETWORK_METADATA view only)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4289" headers="d23349e4268">
<p>NETWORK</p>
</td>
<td class="cellalignment107" headers="d23349e4289 d23349e4271">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment107" headers="d23349e4289 d23349e4274">
<p>Name of the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4299" headers="d23349e4268">
<p>NETWORK_ID</p>
</td>
<td class="cellalignment107" headers="d23349e4299 d23349e4271">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4299 d23349e4274">
<p>ID number of the network; assigned by Spatial and Graph</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4309" headers="d23349e4268">
<p>NETWORK_CATEGORY</p>
</td>
<td class="cellalignment107" headers="d23349e4309 d23349e4271">
<p>VARCHAR2(12)</p>
</td>
<td class="cellalignment107" headers="d23349e4309 d23349e4274">
<p>Contains <code class="codeph">SPATIAL</code> if the network nodes and links are associated with spatial geometries; contains <code class="codeph">LOGICAL</code> if the network nodes and links are not associated with spatial geometries. A value of <code class="codeph">LOGICAL</code> causes the Network Data Model Graph PL/SQL and Java APIs to ignore any spatial attributes of nodes, links, and paths.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4328" headers="d23349e4268">
<p>GEOMETRY_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e4328 d23349e4271">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment107" headers="d23349e4328 d23349e4274">
<p>If <code class="codeph">NETWORK_CATEGORY</code> is <code class="codeph">SPATI</code><code class="codeph">AL</code>, contains a value indicating the geometry type of nodes and links: <code class="codeph">SDO_GEOMETRY</code> for non-LRS SDO_GEOMETRY objects, <code class="codeph">LRS_GEOMETRY</code> for LRS SDO_GEOMETRY objects, <code class="codeph">TOPO_GEOMETRY</code> for SDO_TOPO_GEOMETRY objects.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4355" headers="d23349e4268">
<p>NETWORK_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e4355 d23349e4271">
<p>VARCHAR2(24)</p>
</td>
<td class="cellalignment107" headers="d23349e4355 d23349e4274">
<p>User-defined string to identify the network type.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4365" headers="d23349e4268">
<p>NO_OF_HIERARCHY_LEVELS</p>
</td>
<td class="cellalignment107" headers="d23349e4365 d23349e4271">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4365 d23349e4274">
<p>Number of levels in the network hierarchy. Contains 1 if there is no hierarchy. (See <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a> for information about network hierarchy.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4379" headers="d23349e4268">
<p>NO_OF_PARTITIONS</p>
</td>
<td class="cellalignment107" headers="d23349e4379 d23349e4271">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e4379 d23349e4274">
<p>(Not currently used)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4389" headers="d23349e4268">
<p>LRS_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4389 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4389 d23349e4274">
<p>If <code class="codeph">GEOMETRY_TYPE</code> is <code class="codeph">SDO_GEOMETRY</code>, contains the name of the table containing geometries associated with nodes.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4405" headers="d23349e4268">
<p>LRS_GEOM_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4405 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4405 d23349e4274">
<p>If <code class="codeph">LRS_TABLE_NAME</code> contains a table name, identifies the geometry column in that table.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4418" headers="d23349e4268">
<p>NODE_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4418 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4418 d23349e4274">
<p>If <code class="codeph">GEOMETRY_TYPE</code> is <code class="codeph">SDO_GEOMETRY</code>, contains the name of the table containing geometries associated with nodes. (The node table is described in <a href="network-data-model-graph-overview.htm#GUID-4F402831-2776-4ECE-A7EF-0589251AAA7C">Node Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4439" headers="d23349e4268">
<p>NODE_GEOM_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4439 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4439 d23349e4274">
<p>If <code class="codeph">NODE_TABLE_NAME</code> contains a table name, identifies the geometry column in that table.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4452" headers="d23349e4268">
<p><a id="d23349e4454" class="indexterm-anchor"></a>NODE_COST_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4452 d23349e4271">
<p>VARCHAR2(1024)</p>
</td>
<td class="cellalignment107" headers="d23349e4452 d23349e4274">
<p>If <code class="codeph">NODE_TABLE_NAME</code> contains a table name, identifies the cost column in that table, or a PL/SQL function to compute the cost value.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4469" headers="d23349e4268">
<p>NODE_PARTITION_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4469 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4469 d23349e4274">
<p>(Not currently used).</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4479" headers="d23349e4268">
<p><a id="d23349e4481" class="indexterm-anchor"></a>NODE_DURATION_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4479 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4479 d23349e4274">
<p>If <code class="codeph">NODE_TABLE_NAME</code> contains a table name, identifies the optional duration column in that table. This column can contain a numeric value that has any user-defined significance, such as a number of minutes associated with the node.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4496" headers="d23349e4268">
<p>LINK_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4496 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4496 d23349e4274">
<p>If <code class="codeph">GEOMETRY_TYPE</code> is <code class="codeph">SDO_GEOMETRY</code>, contains the name of the table containing geometries associated with links. (The link table is described in <a href="network-data-model-graph-overview.htm#GUID-848CA619-6BD6-4C1F-8235-8747074ED40D">Link Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4516" headers="d23349e4268">
<p>LINK_GEOM_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4516 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4516 d23349e4274">
<p>If <code class="codeph">LINK_TABLE_NAME</code> contains a table name, identifies the geometry column in that table.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4529" headers="d23349e4268">
<p>LINK_DIRECTION</p>
</td>
<td class="cellalignment107" headers="d23349e4529 d23349e4271">
<p>VARCHAR2(12)</p>
</td>
<td class="cellalignment107" headers="d23349e4529 d23349e4274">
<p>Contains a value indicating the type for all links in the network: <code class="codeph">UNDIRECTED</code> or <code class="codeph">DIRECTED</code>.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4545" headers="d23349e4268">
<p><a id="d23349e4547" class="indexterm-anchor"></a>LINK_COST_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4545 d23349e4271">
<p>VARCHAR2(1024)</p>
</td>
<td class="cellalignment107" headers="d23349e4545 d23349e4274">
<p>If <code class="codeph">LINK_TABLE_NAME</code> contains a table name, identifies the optional numeric column containing a cost value for each link, or a PL/SQL function to compute the cost value.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4562" headers="d23349e4268">
<p>LINK_PARTITION_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4562 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4562 d23349e4274">
<p>(Not currently used)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4572" headers="d23349e4268">
<p><a id="d23349e4574" class="indexterm-anchor"></a>LINK_DURATION_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4572 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4572 d23349e4274">
<p>If <code class="codeph">LINK_TABLE_NAME</code> contains a table name, identifies the optional duration column in that table. This column can contain a numeric value that has any user-defined significance, such as a number of minutes associated with the link.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4589" headers="d23349e4268">
<p>PATH_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4589 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4589 d23349e4274">
<p>Contains the name of an optional table containing information about paths. (The path table is described in <a href="network-data-model-graph-overview.htm#GUID-8DB6F4A4-F044-4051-B6AC-7671CC5A5659">Path Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4604" headers="d23349e4268">
<p>PATH_GEOM_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4604 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4604 d23349e4274">
<p>If <code class="codeph">PATH_TABLE_NAME</code> is associated with a spatial network, identifies the geometry column in that table.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4617" headers="d23349e4268">
<p>PATH_LINK_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4617 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4617 d23349e4274">
<p>Contains the name of an optional table containing information about links for each path. (The path-link table is described in <a href="network-data-model-graph-overview.htm#GUID-1DB7E538-3363-4AE8-8998-57D371AA2BD8">Path-Link Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4631" headers="d23349e4268">
<p>SUBPATH_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4631 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4631 d23349e4274">
<p>Contains the name of an optional table containing information about subpaths. (The subpath table is described in <a href="network-data-model-graph-overview.htm#GUID-62718510-3BB9-4959-B2E6-4495DFF125E9">Subpath Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4645" headers="d23349e4268">
<p>SUBPATH_GEOM_COLUMN</p>
</td>
<td class="cellalignment107" headers="d23349e4645 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4645 d23349e4274">
<p>If <code class="codeph">SUBPATH_TABLE_NAME</code> is associated with a spatial network, identifies the geometry column in that table.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4658" headers="d23349e4268">
<p>PARTITION_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4658 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4658 d23349e4274">
<p>For a partitioned network: the name of the partition table. (The partition table is described in <a href="network-data-model-graph-overview.htm#GUID-5F93389F-642E-41E2-A722-7074EB052131">Partition Table</a>.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4672" headers="d23349e4268">
<p>PARTITION_BLOB_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4672 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4672 d23349e4274">
<p>For a partitioned network for which any partition BLOBs have been generated: the name of the partition BLOB table. (The partition BLOB table is described in <a href="network-data-model-graph-overview.htm#GUID-A2D0F3B6-2B2F-41B2-97F3-ED849E6DD2CE">Partition BLOB Table</a>.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4686" headers="d23349e4268">
<p>COMPONENT_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4686 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4686 d23349e4274">
<p>The name of the table containing information about precomputed connected components, as explained in <a href="network-data-model-graph-overview.htm#GUID-FDF32B55-1871-4782-9126-44FA016EEE15">Precomputed Analysis Results</a>. (The connected component table is described in <a href="network-data-model-graph-overview.htm#GUID-1953FCFA-F074-42F9-9522-9AE93A16E0E8">Connected Component Table</a>.)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4704" headers="d23349e4268">
<p>NODE_LEVEL_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4704 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4704 d23349e4274">
<p>The name of the table containing information about node levels in a multilevel network. Specify this table as the <code class="codeph">node_level_table_name</code> parameter with the <a href="SDO_NET-reference.htm#GUID-984BFE64-B82A-46A9-9BC2-8706F5D54706">SDO_NET.GENERATE_NODE_LEVELS</a> procedure.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4721" headers="d23349e4268">
<p>TOPOLOGY</p>
</td>
<td class="cellalignment107" headers="d23349e4721 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4721 d23349e4274">
<p>For a spatial network containing SDO_TOPO_GEOMETRY objects (creating using the <a href="SDO_NET-reference.htm#GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9">SDO_NET.CREATE_TOPO_NETWORK</a> procedure), contains the name of the topology.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4735" headers="d23349e4268">
<p>USER_DEFINED_DATA</p>
</td>
<td class="cellalignment107" headers="d23349e4735 d23349e4271">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment107" headers="d23349e4735 d23349e4274">
<p>Contains Y if the network contains user-defined data; contains N if the network does not contain user-defined data.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4745" headers="d23349e4268">
<p>EXTERNAL_REFERENCES</p>
</td>
<td class="cellalignment107" headers="d23349e4745 d23349e4271">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment107" headers="d23349e4745 d23349e4274">
<p>(Not currently used)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4756" headers="d23349e4268">
<p>CHILD_NETWORK</p>
</td>
<td class="cellalignment107" headers="d23349e4756 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4756 d23349e4274">
<p>Name of the child network, if a network hierarchy is involved.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4766" headers="d23349e4268">
<p>HIERARCHY_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4766 d23349e4271">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4766 d23349e4274">
<p>Name of the hierarchy table, if a network hierarchy is involved.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL933"></a><a id="TOPOL932"></a>
<div class="props_rev_3"><a id="GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89"></a>
<h3 id="TOPOL-GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89" class="sect3">xxx_SDO_NETWORK_CONSTRAINTS Views</h3>
<div>
<div class="section">
<p>The following views contain information about network constraints (described in <a href="network-data-model-graph-overview.htm#GUID-2A71EBFE-F28F-4A87-9F49-4E7674A08C08">Network Constraints</a>):</p>
<ul style="list-style-type: disc;">
<li>
<p><a id="d23349e4808" class="indexterm-anchor"></a><a id="d23349e4810" class="indexterm-anchor"></a>USER_SDO_NETWORK_CONSTRAINTS contains information about all network constraints owned by the user.</p>
</li>
<li>
<p><a id="d23349e4817" class="indexterm-anchor"></a><a id="d23349e4819" class="indexterm-anchor"></a>ALL_SDO_NETWORK_CONSTRAINTS contains information about all network constraints on which the user has SELECT permission.</p>
</li>
</ul>
<p>These views are automatically maintained by the <a href="SDO_NET-reference.htm#GUID-47B852BA-EAFC-453F-85F1-20A7DCF541D9">SDO_NET.REGISTER_CONSTRAINT</a> and <a href="SDO_NET-reference.htm#GUID-EF58A78E-E396-4ECE-87C7-85FF82C8BE2A">SDO_NET.DEREGISTER_CONSTRAINT</a> procedures. You should not directly modify the contents of these views.</p>
<p>The USER_SDO_NETWORK_CONSTRAINTS and ALL_SDO_NETWORK_CONSTRAINTS views contain the same columns, as shown <a href="network-data-model-graph-overview.htm#GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89__CIHFAHFE" title="Columns in the xxx_SDO_NETWORK_CONSTRAINTS Views">Table 5-17</a>, except that the USER_SDO_NETWORK_CONSTRAINTS view does not contain the OWNER column. (The columns are listed in their order in the view definition.)</p>
</div>
<!-- class="section" -->
<div class="tblformal" id="GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89__CIHFAHFE">
<p class="titleintable">Table 5-17 Columns in the xxx_SDO_NETWORK_CONSTRAINTS Views</p>
<table class="cellalignment113" title="Columns in the xxx_SDO_NETWORK_CONSTRAINTS Views" summary="Columns in the xxx_SDO_NETWORK_CONSTRAINTS Views">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e4852">Column Name</th>
<th class="cellalignment114" id="d23349e4855">Data Type</th>
<th class="cellalignment114" id="d23349e4858">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4863" headers="d23349e4852">
<p>OWNER</p>
</td>
<td class="cellalignment107" headers="d23349e4863 d23349e4855">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4863 d23349e4858">
<p>Owner of the network constraint (ALL_SDO_NETWORK_CONSTRAINTS view only)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4873" headers="d23349e4852">
<p>CONSTRAINT</p>
</td>
<td class="cellalignment107" headers="d23349e4873 d23349e4855">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4873 d23349e4858">
<p>Name of the network constraint</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4883" headers="d23349e4852">
<p>DESCRIPTION</p>
</td>
<td class="cellalignment107" headers="d23349e4883 d23349e4855">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment107" headers="d23349e4883 d23349e4858">
<p>Descriptive information about the network constraint, such as its purpose and any usage notes</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4893" headers="d23349e4852">
<p>CLASS_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e4893 d23349e4855">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment107" headers="d23349e4893 d23349e4858">
<p>Name of the Java class that implements the network constraint</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4903" headers="d23349e4852">
<p>CLASS</p>
</td>
<td class="cellalignment107" headers="d23349e4903 d23349e4855">
<p>BINARY FILE LOB</p>
</td>
<td class="cellalignment107" headers="d23349e4903 d23349e4858">
<p>The Java class that implements the network constraint</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<a id="TOPOL935"></a><a id="TOPOL934"></a>
<div class="props_rev_3"><a id="GUID-89558452-B759-4ECF-96B1-CA29DAE6EE5F"></a>
<h3 id="TOPOL-GUID-89558452-B759-4ECF-96B1-CA29DAE6EE5F" class="sect3">xxx_SDO_NETWORK_USER_DATA Views</h3>
<div>
<p>The following views contain information about network user-defined data, which is the information (not related to connectivity) that users want to associate with a network representation:</p>
<ul style="list-style-type: disc;">
<li>
<p><a id="d23349e4941" class="indexterm-anchor"></a><a id="d23349e4943" class="indexterm-anchor"></a>USER_SDO_NETWORK_USER_DATA contains information about all network user-defined data owned by the user.</p>
</li>
<li>
<p><a id="d23349e4950" class="indexterm-anchor"></a><a id="d23349e4952" class="indexterm-anchor"></a>ALL_SDO_NETWORK_USER_DATA contains information about all network user-defined data on which the user has SELECT permission.</p>
</li>
</ul>
<p>The USER_SDO_NETWORK_USER_DATA and ALL_SDO_NETWORK_USER_DATA views contain the same columns, as shown <a href="network-data-model-graph-overview.htm#GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89__CIHFAHFE" title="Columns in the xxx_SDO_NETWORK_CONSTRAINTS Views">Table 5-17</a>, except that the USER_SDO_NETWORK_USER_DATA view does not contain the OWNER column. (The columns are listed in their order in the view definition.)</p>
<div class="tblformal" id="GUID-89558452-B759-4ECF-96B1-CA29DAE6EE5F__GUID-E4A7CAA6-4712-446D-A259-929008354108">
<p class="titleintable">Table 5-18 Columns in the xxx_SDO_NETWORK_USER_DATA Views</p>
<table class="cellalignment113" title="Columns in the xxx_SDO_NETWORK_USER_DATA Views" summary="Columns in the xxx_SDO_NETWORK_USER_DATA Views">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e4975">Column Name</th>
<th class="cellalignment114" id="d23349e4978">Data Type</th>
<th class="cellalignment114" id="d23349e4981">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4986" headers="d23349e4975">
<p>OWNER</p>
</td>
<td class="cellalignment107" headers="d23349e4986 d23349e4978">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4986 d23349e4981">
<p>Owner of the network constraint (ALL_SDO_NETWORK_USER_DATA view only)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e4996" headers="d23349e4975">
<p>NETWORK</p>
</td>
<td class="cellalignment107" headers="d23349e4996 d23349e4978">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e4996 d23349e4981">
<p>Name of the network</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5006" headers="d23349e4975">
<p>TABLE_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e5006 d23349e4978">
<p>VARCHAR2(12)</p>
</td>
<td class="cellalignment107" headers="d23349e5006 d23349e4981">
<p>Type of the table containing the user-defined data: <code class="codeph">NODE</code>, <code class="codeph">LINK</code>, <code class="codeph">PATH</code>, or <code class="codeph">SUBPATH</code></p>
<p>If feature user data is registered through the xxx_SDO_USER_NETWORK_USER_DATA views. TABLE_TYPE is set to the name of the feature table.</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5029" headers="d23349e4975">
<p>DATA_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e5029 d23349e4978">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5029 d23349e4981">
<p>Name of column containing the user-defined data</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5039" headers="d23349e4975">
<p>DATA_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e5039 d23349e4978">
<p>VARCHAR2(12)</p>
</td>
<td class="cellalignment107" headers="d23349e5039 d23349e4981">
<p>Data type of the user-defined data: <code class="codeph">VARCHAR2</code>, <code class="codeph">INTEGER</code>, <code class="codeph">NUMBER</code>, <code class="codeph">DATE</code>, <code class="codeph">TIMESTAMP</code>, or <code class="codeph">SDO_GEOMETRY</code></p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5067" headers="d23349e4975">
<p>DATA_LENGTH</p>
</td>
<td class="cellalignment107" headers="d23349e5067 d23349e4978">
<p>NUMBER(38)</p>
</td>
<td class="cellalignment107" headers="d23349e5067 d23349e4981">
<p>If DATA_TYPE is <code class="codeph">VARCHAR2</code>, the length of the user-defined data</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5080" headers="d23349e4975">
<p>CATEGORY_ID</p>
</td>
<td class="cellalignment107" headers="d23349e5080 d23349e4978">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e5080 d23349e4981">
<p>User data category ID (non-negative number, default 0). The category ID allows for grouping of user data for different applications. Category 0 is reserved for general-purpose user data that is useful for all applications. User data for different purposes can be grouped into different categories, so that during network analysis, only the relevant user data categories are loaded into memory, reducing memory consumption at runtime.</p>
<p>For example, for a road network, category 0 user data can include the speed limit and function class of links, and the x, y coordinates of nodes; trucking-related user data might belong to category 1; and traffic-related user data might belong to category 2.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>To use user-defined data, you must set the USER_DEFINED_DATA column value to <code class="codeph">Y</code> in the appropriate xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>For an example of using user-defined data, see <a href="network-data-model-graph-overview.htm#GUID-21E1DBEB-308E-436F-9D7B-588E1003285E">User-Defined Data Examples (PL/SQL and Java)</a>.</p>
<p>For user data defined through the xxx_SDO_NETWORK_USER_DATA views, the default user data I/O implementation (<code class="codeph">LODUserDataIOSDO</code>) is used to access the user data during network analysis. However, some user data is not included in the node or link table, and thus cannot be registered through xxx_SDO_NETWORK_USER_DATA views. For such user data, you must provide your own implementation of the user data I/O interface. A typical way of implementing a custom user data I/O interface is to generate BLOBs corresponding to node and link user data , one BLOB for each partition, and then retrieve user data information from the BLOBs during network analysis.</p>
<p>You can also associate multiple categories of user-defined data (categorized user data) with a single network. For example, in a multimodal network (described in <a href="network-data-model-graph-overview.htm#GUID-0C2DA8C4-B883-4C18-90B4-D45297DA64EE">Multimodal Network and Temporal Examples</a>), if you must associate driving-related attributes (such as speed limit) with a link in addition to the link&#39;s multimodal attributes, you can organize user-defined data in two categories: one for driving-related attributes and the other for multimodal attributes.</p>
</div>
</div>
<a id="TOPOL1083"></a><a id="TOPOL1082"></a>
<div class="props_rev_3"><a id="GUID-DE5380CC-9141-4FEB-B34A-C8AF45F8E069"></a>
<h3 id="TOPOL-GUID-DE5380CC-9141-4FEB-B34A-C8AF45F8E069" class="sect3">xxx_SDO_NETWORK_FEATURE Views</h3>
<div>
<p>The following views contain information about network feature layers (described in <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B">Features and Feature Layers</a>):</p>
<ul style="list-style-type: disc;">
<li>
<p><a id="d23349e5149" class="indexterm-anchor"></a><a id="d23349e5151" class="indexterm-anchor"></a>USER_SDO_NETWORK_FEATURE contains information about all network feature layers owned by the user.</p>
</li>
<li>
<p><a id="d23349e5158" class="indexterm-anchor"></a><a id="d23349e5160" class="indexterm-anchor"></a>ALL_SDO_NETWORK_FEATURE contains information about all network feature layers on which the user has SELECT permission.</p>
</li>
</ul>
<p>The USER_SDO_NETWORK_FEATURE and ALL_SDO_NETWORK_FEATURE views contain the same columns, as shown <a href="network-data-model-graph-overview.htm#GUID-D5D47648-FCF7-46A9-9047-F6E70F616C89__CIHFAHFE" title="Columns in the xxx_SDO_NETWORK_CONSTRAINTS Views">Table 5-17</a>, except that the USER_SDO_NETWORK_FEATURE view does not contain the OWNER column. (The columns are listed in their order in the view definition.)</p>
<div class="tblformal" id="GUID-DE5380CC-9141-4FEB-B34A-C8AF45F8E069__CIHCJGCI">
<p class="titleintable">Table 5-19 Columns in the xxx_SDO_NETWORK_FEATURE Views</p>
<table class="cellalignment113" title="Columns in the xxx_SDO_NETWORK_FEATURE Views" summary="Columns in the xxx_SDO_NETWORK_FEATURE Views">
<thead>
<tr class="cellalignment107">
<th class="cellalignment114" id="d23349e5183">Column Name</th>
<th class="cellalignment114" id="d23349e5186">Data Type</th>
<th class="cellalignment114" id="d23349e5189">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5194" headers="d23349e5183">
<p>OWNER</p>
</td>
<td class="cellalignment107" headers="d23349e5194 d23349e5186">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5194 d23349e5189">
<p>Owner of the network feature layer (ALL_SDO_NETWORK_FEATURE view only)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5204" headers="d23349e5183">
<p>NETWORK</p>
</td>
<td class="cellalignment107" headers="d23349e5204 d23349e5186">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5204 d23349e5189">
<p>Name of the network on which the feature layer is defined</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5214" headers="d23349e5183">
<p>FEATURE_LAYER_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e5214 d23349e5186">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5214 d23349e5189">
<p>Name of the feature layer</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5224" headers="d23349e5183">
<p>FEATURE_LAYER_ID</p>
</td>
<td class="cellalignment107" headers="d23349e5224 d23349e5186">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e5224 d23349e5189">
<p>ID of the feature layer (assigned by Oracle Spatial and Graph)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5234" headers="d23349e5183">
<p>FEATURE_LAYER_TYPE</p>
</td>
<td class="cellalignment107" headers="d23349e5234 d23349e5186">
<p>NUMBER</p>
</td>
<td class="cellalignment107" headers="d23349e5234 d23349e5189">
<p>Type of the feature layer (see <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B__CIHCJFEE" title="Feature layer types: numbers and explanations">Table 5-2</a> in <a href="network-data-model-graph-overview.htm#GUID-558FCF41-3BCE-4D41-BFBE-91F7F9D6A18B">Features and Feature Layers</a>)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5253" headers="d23349e5183">
<p>FEATURE_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e5253 d23349e5186">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5253 d23349e5189">
<p>Name of the feature table (see <a href="network-data-model-graph-overview.htm#GUID-4ACCA853-2ADB-4D5E-B788-119031842B3A">Feature Table</a>)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5267" headers="d23349e5183">
<p>RELATION_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e5267 d23349e5186">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5267 d23349e5189">
<p>Name of the feature element relationships table, which maps feature elements with network elements (nodes and links) (see <a href="network-data-model-graph-overview.htm#GUID-1057580C-AD10-4FFB-91B8-9B6E2DE08E22">Feature Element Relationships Table</a>)</p>
</td>
</tr>
<tr class="cellalignment107">
<td class="cellalignment107" id="d23349e5281" headers="d23349e5183">
<p>HIERRCHY_TABLE_NAME</p>
</td>
<td class="cellalignment107" headers="d23349e5281 d23349e5186">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment107" headers="d23349e5281 d23349e5189">
<p>Name of the feature hierarchy table, which defines parent-child relationships between features (see <a href="network-data-model-graph-overview.htm#GUID-7F12FED5-612B-473B-94A6-FCFD80A0DC0C">Feature Hierarchy Table</a>)</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>To use user-defined data, you must set the USER_DEFINED_DATA column value to <code class="codeph">Y</code> in the appropriate xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<p>For an example of using user-defined data, see <a href="network-data-model-graph-overview.htm#GUID-21E1DBEB-308E-436F-9D7B-588E1003285E">User-Defined Data Examples (PL/SQL and Java)</a>.</p>
<p>For user data defined through the xxx_SDO_NETWORK_USER_DATA views, the default user data I/O implementation (<code class="codeph">LODUserDataIOSDO</code>) is used to access the user data during network analysis. However, some user data is not included in the node or link table, and thus cannot be registered through xxx_SDO_NETWORK_USER_DATA views. For such user data, you must provide your own implementation of the user data I/O interface. A typical way of implementing a custom user data I/O interface is to generate BLOBs corresponding to node and link user data , one BLOB for each partition, and then retrieve user data information from the BLOBs during network analysis.</p>
<p>You can also associate multiple categories of user-defined data (categorized user data) with a single network. For example, in a multimodal network (described in <a href="network-data-model-graph-overview.htm#GUID-0C2DA8C4-B883-4C18-90B4-D45297DA64EE">Multimodal Network and Temporal Examples</a>), if you must associate driving-related attributes (such as speed limit) with a link in addition to the link&#39;s multimodal attributes, you can organize user-defined data in two categories: one for driving-related attributes and the other for multimodal attributes.</p>
</div>
</div>
</div>
<a id="TOPOL936"></a>
<div class="props_rev_3"><a id="GUID-B16D53F5-7E65-487D-98E9-8A606F457C82"></a>
<h2 id="TOPOL-GUID-B16D53F5-7E65-487D-98E9-8A606F457C82" class="sect2">Network Data Model Graph Application Programming Interface</h2>
<div>
<p>The Oracle Spatial and Graph Network Data Model Graph feature includes two client application programming interfaces (APIs): a PL/SQL interface provided by the SDO_NET package and a Java interface. Both interfaces let you create and update network data, and the Java interface lets you perform network analysis. It is recommended that you use only PL/SQL or SQL to populate network tables and to create indexes, and that you mainly use Java for application development.</p>
<p><a id="d23349e5356" class="indexterm-anchor"></a><a id="d23349e5362" class="indexterm-anchor"></a><a id="d23349e5368" class="indexterm-anchor"></a><a id="d23349e5374" class="indexterm-anchor"></a>The following performance considerations apply to the PL/SQL and Java APIs:</p>
<ul style="list-style-type: disc;">
<li>
<p>If you plan to analyze or edit only nonspatial aspects of a spatial network, you can get better performance by setting the NETWORK_CATEGORY column value to <code class="codeph">LOGICAL</code> in the USER_SDO_NETWORK_METADATA view (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>) before performing the analysis or editing, and then changing the value back to <code class="codeph">SPATIAL</code> afterward.</p>
<p>For example, you could use this technique when finding the shortest path between two nodes, because the shortest-path computation considers cost values. However, you could not use this technique when setting the spatial geometry object or the end measure value for a link.</p>
</li>
<li>
<p>If you do not plan to modify any network objects (that is, if you plan to perform only network analysis operations or to retrieve network information), you can get better performance by creating the network memory object as read-only (that is, by specifying that updates are not allowed).</p>
</li>
</ul>
</div>
<a id="TOPOL937"></a>
<div class="props_rev_3"><a id="GUID-981BD798-73F0-43D3-842B-0D5B2983B0DC"></a>
<h3 id="TOPOL-GUID-981BD798-73F0-43D3-842B-0D5B2983B0DC" class="sect3">Network Data Model Graph PL/SQL Interface</h3>
<div>
<p>The SDO_NET package provides subprograms for creating, accessing, and managing networks on a database server. <a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__CIHGEADB">Example 5-5</a> in <a href="network-data-model-graph-overview.htm#GUID-F343E028-D514-4783-B6DC-50E6118BBE7A">Network Examples</a> shows the use of SDO_NET functions and procedures.</p>
<p>The SDO_NET subprograms can be grouped into the following logical categories:</p>
<ul style="list-style-type: disc;">
<li>
<p>Creating networks:</p>
<p><a href="SDO_NET-reference.htm#GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0">SDO_NET.CREATE_SDO_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-E27DEE9F-7704-4860-8FD2-6E0BE1D1A883">SDO_NET.CREATE_LRS_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-DC364605-B313-46D7-BDA4-56EF00F3D2D9">SDO_NET.CREATE_TOPO_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E">SDO_NET.CREATE_LOGICAL_NETWORK</a></p>
</li>
<li>
<p>Copying and deleting networks:</p>
<p><a href="SDO_NET-reference.htm#GUID-2CA5EFF3-299F-465C-BBA4-4E6B20729561">SDO_NET.COPY_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-44F7A137-CD75-4F58-91DA-5234BB94258E">SDO_NET.DROP_NETWORK</a></p>
</li>
<li>
<p>Creating network tables:</p>
<p><a href="SDO_NET-reference.htm#GUID-3A7D9D56-788A-45E2-95E9-955001874C15">SDO_NET.CREATE_NODE_TABLE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-297C93AF-B817-4B50-A734-08F9B45D2373">SDO_NET.CREATE_LINK_TABLE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-90AC8B52-9AA6-4642-BE66-F3C042F80F82">SDO_NET.CREATE_PATH_TABLE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-E86FA69D-8D36-4CBC-B8C6-1EC7839FE8F1">SDO_NET.CREATE_PATH_LINK_TABLE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-A7F99E37-9154-4BF3-853D-D0130539918F">SDO_NET.CREATE_LRS_TABLE</a></p>
</li>
<li>
<p>Validating network objects:</p>
<p><a href="SDO_NET-reference.htm#GUID-51950D89-3315-4F81-B0AC-6E20C9F35760">SDO_NET.VALIDATE_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-E9EB102A-3D4A-4EB4-874F-435C0A11EA25">SDO_NET.VALIDATE_NODE_SCHEMA</a></p>
<p><a href="SDO_NET-reference.htm#GUID-942F2D79-2AAE-4D9F-B261-6352552C6494">SDO_NET.VALIDATE_LINK_SCHEMA</a></p>
<p><a href="SDO_NET-reference.htm#GUID-00421EF7-A0DF-4DEC-B5B8-F6E708D37BD0">SDO_NET.VALIDATE_PATH_SCHEMA</a></p>
<p><a href="SDO_NET-reference.htm#GUID-42A925E7-D0A9-4A06-8902-C47641B43B6F">SDO_NET.VALIDATE_LRS_SCHEMA</a></p>
</li>
<li>
<p>Retrieving information (getting information about the network, checking for a characteristic):</p>
<p><a href="SDO_NET-reference.htm#GUID-2C3E2AE5-0665-4794-A638-190FFD4C491F">SDO_NET.GET_CHILD_LINKS</a></p>
<p><a href="SDO_NET-reference.htm#GUID-4DB5CE11-58D0-4EFC-AB0F-EBD216A95179">SDO_NET.GET_CHILD_NODES</a></p>
<p><a href="SDO_NET-reference.htm#GUID-F026934C-BBAD-4DD0-AA9B-CB75F62824A7">SDO_NET.GET_GEOMETRY_TYPE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-11C3B54A-FECE-4CD1-9CBF-CF58A3C58B81">SDO_NET.GET_IN_LINKS</a></p>
<p><a href="SDO_NET-reference.htm#GUID-BA9DBB12-870A-49DC-A453-C4A3CC23A47A">SDO_NET.GET_LINK_COST_COLUMN</a></p>
<p><a href="SDO_NET-reference.htm#GUID-B02ABFAE-6E41-40DD-96C3-1430431A3628">SDO_NET.GET_LINK_DIRECTION</a></p>
<p><a href="SDO_NET-reference.htm#GUID-8A62B7E8-B4DC-44A1-87C9-F104B14F0EB0">SDO_NET.GET_LINK_GEOM_COLUMN</a></p>
<p><a href="SDO_NET-reference.htm#GUID-C03A2CB3-608E-457E-AE27-C1B0FC831334">SDO_NET.GET_LINK_GEOMETRY</a></p>
<p><a href="SDO_NET-reference.htm#GUID-90BB51B2-785F-4686-88DC-A1A870C2C6A1">SDO_NET.GET_LINK_TABLE_NAME</a></p>
<p><a href="SDO_NET-reference.htm#GUID-025726A9-D218-4CC9-9CC6-3A9F362276C1">SDO_NET.GET_LRS_GEOM_COLUMN</a></p>
<p><a href="SDO_NET-reference.htm#GUID-161F62AA-71C9-46C6-AA42-3308A066088D">SDO_NET.GET_LRS_LINK_GEOMETRY</a></p>
<p><a href="SDO_NET-reference.htm#GUID-C7C27026-B4E3-49AB-9E21-5C106A754581">SDO_NET.GET_LRS_NODE_GEOMETRY</a></p>
<p><a href="SDO_NET-reference.htm#GUID-40AF9128-C73C-4E86-AE56-EFDB2C1CB902">SDO_NET.GET_LRS_TABLE_NAME</a></p>
<p><a href="SDO_NET-reference.htm#GUID-AD966353-D72B-4654-AA2B-F6B8F0A71AF2">SDO_NET.GET_NETWORK_TYPE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-6DC960EA-F33E-4BEC-8B78-728B2AA721E7">SDO_NET.GET_NO_OF_HIERARCHY_LEVELS</a></p>
<p><a href="SDO_NET-reference.htm#GUID-90A3BD3E-2BCB-46DA-97DC-2229B6B4B433">SDO_NET.GET_NO_OF_LINKS</a></p>
<p><a href="SDO_NET-reference.htm#GUID-9CDF4F97-CC62-4E4F-8021-89C32FC7A044">SDO_NET.GET_NO_OF_NODES</a></p>
<p><a href="SDO_NET-reference.htm#GUID-FAC36387-5349-402D-93E4-237482C6715F">SDO_NET.GET_NODE_DEGREE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-A8A4471C-451B-4B33-B897-40DB36A15807">SDO_NET.GET_NODE_GEOM_COLUMN</a></p>
<p><a href="SDO_NET-reference.htm#GUID-27E651E9-9AE2-47DB-9E4E-B5F58BAA3370">SDO_NET.GET_NODE_GEOMETRY</a></p>
<p><a href="SDO_NET-reference.htm#GUID-9D7D843A-1B4D-47C4-B6E3-A661D1CC4A80">SDO_NET.GET_NODE_IN_DEGREE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-D01DE109-3132-461F-B149-D758B5C27533">SDO_NET.GET_NODE_OUT_DEGREE</a></p>
<p><a href="SDO_NET-reference.htm#GUID-1BCFC341-E6D5-4B46-866B-C4EADF2D2A07">SDO_NET.GET_NODE_TABLE_NAME</a></p>
<p><a href="SDO_NET-reference.htm#GUID-29C8D8C1-FC89-4588-8BFC-3B05A9E67424">SDO_NET.GET_OUT_LINKS</a></p>
<p><a href="SDO_NET-reference.htm#GUID-2170120A-8CC8-4CA1-B5DD-4247F353756E">SDO_NET.GET_PATH_GEOM_COLUMN</a></p>
<p><a href="SDO_NET-reference.htm#GUID-A23EE992-4911-4B59-9133-68DA4BAD6B01">SDO_NET.GET_PATH_TABLE_NAME</a></p>
<p><a href="SDO_NET-reference.htm#GUID-66B9C387-6C85-4FA2-AD76-6D70C4638E8E">SDO_NET.IS_HIERARCHICAL</a></p>
<p><a href="SDO_NET-reference.htm#GUID-433364BB-483C-4E58-AB8D-650D586E7CD5">SDO_NET.IS_LOGICAL</a></p>
<p><a href="SDO_NET-reference.htm#GUID-3CCB0128-38C2-4A3E-A9A5-68FB7692D2B3">SDO_NET.IS_SPATIAL</a></p>
<p><a href="SDO_NET-reference.htm#GUID-D9D699B0-85D2-4FBA-8692-004E9BE7CAAD">SDO_NET.LRS_GEOMETRY_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-0B4B2626-D76D-4F2E-9AF7-CC7C191285AF">SDO_NET.NETWORK_EXISTS</a></p>
<p><a href="SDO_NET-reference.htm#GUID-0AA23C2F-9C0D-4A29-B252-6045A76FA8DB">SDO_NET.SDO_GEOMETRY_NETWORK</a></p>
<p><a href="SDO_NET-reference.htm#GUID-F4D25C0D-8CC0-4683-92FA-8568A1CC98B3">SDO_NET.TOPO_GEOMETRY_NETWORK</a></p>
</li>
</ul>
<p>For reference information about each SDO_NET function and procedure, see <a href="SDO_NET-reference.htm#GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E">SDO_NET Package Subprograms</a>.</p>
</div>
</div>
<a id="TOPOL938"></a>
<div class="props_rev_3"><a id="GUID-6DA19DAE-83EB-45DE-ADC4-4536D975D27F"></a>
<h3 id="TOPOL-GUID-6DA19DAE-83EB-45DE-ADC4-4536D975D27F" class="sect3">Network Data Model Graph Java Interface</h3>
<div>
<p>The Network Data Model Graph feature includes the load on demand Java interface. Complete reference information about this interface is provided in <a class="olink SPAJV" target="_blank" href="../SPAJV/toc.htm"><span class="italic">Oracle Spatial and Graph Java API Reference</span></a>. The classes of the load on demand Java interface are in the <code class="codeph">oracle.spatial.network.lod</code> package and its subpackages.</p>
<p>The Spatial and Graph Java class libraries are in .jar files under the <code class="codeph">&lt;ORACLE_HOME&gt;/md/jlib/</code> directory.</p>
</div>
<a id="TOPOL939"></a>
<div class="props_rev_3"><a id="GUID-B39AA858-5051-440F-AD9C-55D7EF07DB55"></a>
<h4 id="TOPOL-GUID-B39AA858-5051-440F-AD9C-55D7EF07DB55" class="sect4">Network Metadata and Data Management</h4>
<div>
<p>You can use the Java API to perform network metadata and data management operations such as the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Insert, delete, and modify node and link data</p>
</li>
<li>
<p>Load a network from a database</p>
</li>
<li>
<p>Store a network in a database</p>
</li>
<li>
<p>Store network metadata in a database</p>
</li>
<li>
<p>Modify network metadata attributes</p>
</li>
</ul>
</div>
</div>
<a id="TOPOL941"></a>
<div class="props_rev_3"><a id="GUID-2F217CDE-466C-4168-98A0-6DD56AE16F62"></a>
<h4 id="TOPOL-GUID-2F217CDE-466C-4168-98A0-6DD56AE16F62" class="sect4">Network Analysis Using the Load on Demand Approach</h4>
<div>
<p>You can use the <code class="codeph">oracle.spatial.network.lod.NetworkAnalyst</code> class to perform network analysis operations, such as the following, using the load on demand approach:</p>
<ul style="list-style-type: disc;">
<li>
<p>Shortest path: typical transitive closure problems in graph theory. Given a start and an end node, find the shortest path.</p>
</li>
<li>
<p>Reachability: Given a node, find all nodes that can reach that node, or find all nodes that can be reached by that node.</p>
</li>
<li>
<p>Within-cost analysis: Given a target node and a cost, find all nodes that can be reached by the target node within the given cost.</p>
</li>
<li>
<p>Nearest-neighbors analysis: Given a target node and number of neighbors, find the neighbor nodes and their costs to go to the given target node.</p>
</li>
<li>
<p>Dynamic data input: Create and use a <code class="codeph">NetworkUpdate</code> object with network update information.</p>
</li>
<li>
<p>User-defined link and node cost calculators: Define the method for computing the cost of a link or a node.</p>
</li>
</ul>
</div>
</div>
</div>
<a id="TOPOL1084"></a>
<div class="props_rev_3"><a id="GUID-5FC8CA0D-AEA9-4540-B5C5-211DBEC2CA55"></a>
<h3 id="TOPOL-GUID-5FC8CA0D-AEA9-4540-B5C5-211DBEC2CA55" class="sect3">Network Data Model Graph XML Interface</h3>
<div>
<p>You can use the Network Data Model Graph XML API to perform network analysis. Web service requests are supported through Oracle Spatial and Graph web services, which are described in <a class="olink SPATL420" target="_blank" href="../SPATL/web-feature-service-wfs-support.htm#SPATL420"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a>.</p>
<p>HTTP requests can be sent to the web service from Java, PLSQL, or .NET programs or simply from a HTML form. The <a href="SDO_NET-reference.htm#GUID-C56A6A64-9AE0-400F-BC7E-2EB8FA2EF965">SDO_NET.POST_XML</a> function (described in <a href="SDO_NET-reference.htm#GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E">SDO_NET Package Subprograms</a>) enables PL/SQL users to call the web service.</p>
<p>The XML schema of the Network Data Model Graph XML API is described in the following: <code class="codeph">$ORACLE_HOME/md/doc/sdondmxml.zip</code></p>
</div>
<a id="TOPOL1085"></a>
<div class="props_rev_3"><a id="GUID-D6E50F8E-2D79-4FF5-9D3D-9D36DCA34B83"></a>
<h4 id="TOPOL-GUID-D6E50F8E-2D79-4FF5-9D3D-9D36DCA34B83" class="sect4">User-Specified Implementations</h4>
<div>
<p>The XML API can take user-specified constraints, cost calculators, or even network analysis algorithm settings, by letting you specify the Java class that implements the LOD interfaces. For any implementation that requires input parameters, such as truck weight or height in a trucking constraint implementation, the Java class must implement the <code class="codeph">oracle.spatial.network.lod.XMLConfigurable</code> interface, that is, it must implement the following two methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">void init(Element parameter);</code></p>
</li>
<li>
<p><code class="codeph">String getXMLSchema();</code></p>
</li>
</ul>
<p>The <code class="codeph">init</code> method lets you pass in the input parameter as an XML element, which must follow the schema returned from the <code class="codeph">getXMLSchema</code> method.</p>
<p>The following XML code segment is an example of how to configure the shortest path algorithm for a shortest path analysis request:</p>
<pre dir="ltr">&lt;startPoint&gt;
  &lt;nodeID&gt;123&lt;/nodeID&gt;
&lt;/startPoint&gt;
&lt;endPoint&gt;
  &lt;nodeID&gt;456&lt;/nodeID&gt;
&lt;/endPoint&gt;
&lt;shortestPathAlgorithm&gt;
  &lt;className&gt;oracle.spatial.network.lod.AStar&lt;/className&gt;
  &lt;parameters&gt;
    &lt;heuristicCostFunction&gt;
      &lt;className&gt;oracle.spatial.network.lod.GeodeticCostFunction&lt;/className&gt;
      &lt;parameters&gt;
        &lt;userDataCategory&gt;0&lt;/userDataCategory&gt;
        &lt;xCoordUserDataIndex&gt;0&lt;/xCoordUserDataIndex&gt;
        &lt;yCoordUserDataIndex&gt;1&lt;/yCoordUserDataIndex&gt;
      &lt;/parameters&gt;
    &lt;/heuristicCostFunction&gt;
    &lt;linkLevelSelector&gt;
      &lt;className&gt;oracle.spatial.network.lod.DynamicLinkLevelSelector&lt;/className&gt;
      &lt;parameters&gt;
        &lt;maxLinkLevel&gt;2&lt;/maxLinkLevel&gt;
        &lt;costThreshold linkLevel=&#34;1&#34;&gt;40000&lt;/costThreshold&gt;
        &lt;numHighLevelNeighbors&gt;8&lt;/numHighLevelNeighbors&gt;
        &lt;costMultiplier&gt;1.5&lt;/costMultiplier&gt;
        &lt;costFunction&gt;
          &lt;className&gt;oracle.spatial.network.lod.GeodeticCostFunction&lt;/className&gt;
          &lt;parameters&gt;
            &lt;userDataCategory&gt;0&lt;/userDataCategory&gt;
            &lt;xCoordUserDataIndex&gt;0&lt;/xCoordUserDataIndex&gt;
            &lt;yCoordUserDataIndex&gt;1&lt;/yCoordUserDataIndex&gt;
          &lt;/parameters&gt;
        &lt;/costFunction&gt;
      &lt;/parameters&gt;
    &lt;/linkLevelSelector&gt;
  &lt;/parameters&gt;
&lt;/shortestPathAlgorithm&gt;
</pre>
<p>More examples of the XML API are provided with the NDM tutorial (see <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>).</p>
</div>
</div>
</div>
</div>
<a id="TOPOL942"></a>
<div class="props_rev_3"><a id="GUID-96C6EB60-4CC0-4016-8190-40115606CF6F"></a>
<h2 id="TOPOL-GUID-96C6EB60-4CC0-4016-8190-40115606CF6F" class="sect2">Cross-Schema Network Access</h2>
<div>
<p>If database users other than the network owner need to read a network into memory, you need to do one of the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>For each non-owner user, qualify the network tables with the schema of the network owner in the USER_SDO_NETWORK_METADATA view, as explained in <a href="network-data-model-graph-overview.htm#GUID-6EB3A331-78FB-40ED-AC06-863C9445B4AD">Cross-Schema Access by Specifying Owner in Network Metadata</a>.</p>
</li>
<li>
<p>For each non-owner user, create views on the Network Data Model Graph tables and update the USER_SDO_NETWORK_METADATA view, as explained in <a href="network-data-model-graph-overview.htm#GUID-840FB4A3-6F0A-4FEA-BF4F-E0E351E2B854">Cross-Schema Access by Using Views</a>.</p>
</li>
</ul>
<p>The second approach requires the extra step of creating views, but the views provide you with flexibility in controlling the parts of the network that are accessible. Each view can provide access to all of the network, or it can use a WHERE clause to provide access to just one or more parts (for example, <code class="codeph">WHERE STATE_CODE=&#39;NY&#39;</code> to restrict the view users to rows for New York) .</p>
<p>Consider the following example scenario:</p>
<ul style="list-style-type: disc;">
<li>
<p>User1 creates (and thus owns) Network1.</p>
</li>
<li>
<p>User2 attempts to call the SDO_NET_MEM.NETWORK_MANAGER.READ_NETWORK procedure to read Network1, but receives an error. The error occurs even though User2 has the appropriate privileges on the Network Data Model Graph tables for Network1.</p>
</li>
</ul>
<p>To work around this problem, you must use the approach in either <a href="network-data-model-graph-overview.htm#GUID-6EB3A331-78FB-40ED-AC06-863C9445B4AD">Cross-Schema Access by Specifying Owner in Network Metadata</a> or <a href="network-data-model-graph-overview.htm#GUID-840FB4A3-6F0A-4FEA-BF4F-E0E351E2B854">Cross-Schema Access by Using Views</a>.</p>
</div>
<a id="TOPOL943"></a>
<div class="props_rev_3"><a id="GUID-6EB3A331-78FB-40ED-AC06-863C9445B4AD"></a>
<h3 id="TOPOL-GUID-6EB3A331-78FB-40ED-AC06-863C9445B4AD" class="sect3">Cross-Schema Access by Specifying Owner in Network Metadata</h3>
<div>
<p>To enable a non-owner user (with suitable privileges) to access a network, you can specify the network owner in the network metadata. For each non-owner user that will be permitted to access the network, follow these steps:</p>
<ol>
<li>
<p>Ensure that the user has SELECT or READ privilege access to the necessary Network Data Model Graph tables. If the user does not have this access, connect as the network owner and grant it. For example, connect as User1 and execute the following statements:</p>
<pre dir="ltr">GRANT select ON network1_node$ TO user2;
GRANT select ON network1_link$ TO user2;
GRANT select ON network1_path$ TO user2;
GRANT select ON network1_plink$ TO user2;
</pre></li>
<li>
<p>Connect as the non-owner user. For example, connect as User2.</p>
</li>
<li>
<p>Use the schema name of the network owner to qualify the Network Data Model Graph tables for the network in the USER_SDO_NETWORK_METADATA view (explained in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>). For example, if the network is not already defined in this view, enter the following while connected as User2:</p>
<pre dir="ltr">INSERT INTO user_sdo_network_metadata 
  (network, network_category, geometry_type, 
   node_table_name,node_geom_column,
   link_table_name, link_geom_column, link_direction,
   path_table_name, path_geom_column,
   path_link_table_name)
VALUES
  (&#39;NETWORK1&#39;,&#39;SPATIAL&#39;, &#39;SDO_GEOMETRY&#39;,
   &#39;USER1.NETWORK1_NODE$&#39;, &#39;GEOMETRY&#39;,
   &#39;USER1.NETWORK1_LINK$&#39;, &#39;GEOMETRY&#39;, &#39;DIRECTED&#39;,
   &#39;USER1.NETWORK1_PATH$&#39;, &#39;GEOMETRY&#39;,
   &#39;USER1.NETWORK1_PLINK$&#39;);
</pre>
<p>If the network is already defined in this view, update the definition to qualify each table name with the schema name. For example:</p>
<pre dir="ltr">UPDATE USER_SDO_NETWORK_METADATA
  SET node_table_name = &#39;USER1.NETWORK1_NODE$&#39;,
      link_table_name = &#39;USER1.NETWORK1_LINK$&#39;,
      path_table_name = &#39;USER1.NETWORK1_PATH$&#39;,
      path_link_table_name = &#39;USER1.NETWORK1_PLINK$&#39;
  WHERE network = &#39;NETWORK1&#39;;
</pre></li>
</ol>
<p>In this scenario, User2 can now read NETWORK1 into memory.</p>
</div>
</div>
<a id="TOPOL944"></a>
<div class="props_rev_3"><a id="GUID-840FB4A3-6F0A-4FEA-BF4F-E0E351E2B854"></a>
<h3 id="TOPOL-GUID-840FB4A3-6F0A-4FEA-BF4F-E0E351E2B854" class="sect3">Cross-Schema Access by Using Views</h3>
<div>
<p>To enable a non-owner user (with suitable privileges) to access a network, or specific parts of a network, you can create views. For each non-owner user that will be permitted to access the network, follow these steps:</p>
<ol>
<li>
<p>Ensure that the user has SELECT or READ privilege access to the necessary Network Data Model Graph tables. If the user does not have this access, connect as the network owner and grant it. For example, connect as User1 and execute the following statements:</p>
<pre dir="ltr">GRANT select ON network1_node$ TO user2;
GRANT select ON network1_link$ TO user2;
GRANT select ON network1_path$ TO user2;
GRANT select ON network1_plink$ TO user2;
</pre></li>
<li>
<p>Connect as the non-owner user. For example, connect as User2.</p>
</li>
<li>
<p>Create a view on each of the necessary Network Data Model Graph nodes, with each view selecting all columns in the associated table. Qualify the table name with the schema name of the network owner. For example, while connected as User2:</p>
<pre dir="ltr">CREATE VIEW network1_node$ AS select * from user1.network1_node$;
CREATE VIEW network1_link$ AS select * from user1.network1_link$;
CREATE VIEW network1_path$ AS select * from user1.network1_path$;
CREATE VIEW network1_plink$ AS select * from user1.network1_plink$;
</pre>
<div class="infobox-note" id="GUID-840FB4A3-6F0A-4FEA-BF4F-E0E351E2B854__GUID-6908791C-FBAB-4212-AA1D-609101F3F63B">
<p class="notep1">Note:</p>
<p>Although this example shows views that include all data in the underlying tables, you can restrict the parts of the network that are available by using a WHERE clause in each view definition (for example, <code class="codeph">WHERE STATE_CODE=&#39;NY&#39;</code>).</p>
</div>
</li>
<li>
<p>Add a row specifying the newly created views to the USER_SDO_NETWORK_METADATA view (explained in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>). For example, while connected as User2:</p>
<pre dir="ltr">INSERT INTO user_sdo_network_metadata 
  (network, network_category, geometry_type, 
   node_table_name,node_geom_column,
   link_table_name, link_geom_column, link_direction,
   path_table_name, path_geom_column,
   path_link_table_name)
VALUES
  (&#39;NETWORK1&#39;,&#39;SPATIAL&#39;, &#39;SDO_GEOMETRY&#39;,
   &#39;NETWORK1_NODE$&#39;, &#39;GEOMETRY&#39;,
   &#39;NETWORK1_LINK$&#39;, &#39;GEOMETRY&#39;, &#39;DIRECTED&#39;,
   &#39;NETWORK1_PATH$&#39;, &#39;GEOMETRY&#39;,
   &#39;NETWORK1_PLINK$&#39;);
</pre></li>
</ol>
<p>In this scenario, User2 can now read into memory those parts of NETWORK1 that are available through the views that were created.</p>
</div>
</div>
</div>
<a id="TOPOL712"></a>
<div class="props_rev_3"><a id="GUID-F343E028-D514-4783-B6DC-50E6118BBE7A"></a>
<h2 id="TOPOL-GUID-F343E028-D514-4783-B6DC-50E6118BBE7A" class="sect2">Network Examples</h2>
<div>
<p><a id="d23349e6074" class="indexterm-anchor"></a><a id="d23349e6078" class="indexterm-anchor"></a><a id="d23349e6082" class="indexterm-anchor"></a>This section presents several Network Data Model Graph examples. Most are simplified examples. All examples use the PL/SQL API, and some also use other APIs. This section includes the following subsections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91">Simple Spatial (SDO) Network Example (PL/SQL)</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB">Simple Logical Network Example (PL/SQL)</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1">Spatial (LRS) Network Example (PL/SQL)</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E">Logical Hierarchical Network Example (PL/SQL)</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A">Partitioning and Load on Demand Analysis Examples (PL/SQL_ XML_ and Java)</a></p>
</li>
<li>
<p><a href="network-data-model-graph-overview.htm#GUID-21E1DBEB-308E-436F-9D7B-588E1003285E">User-Defined Data Examples (PL/SQL and Java)</a></p>
</li>
</ul>
<p>The examples refer to concepts that are explained in this chapter, and they use PL/SQL functions and procedures documented in <a href="SDO_NET-reference.htm#GUID-1AE39EF8-CE36-4EC4-99D8-8678818E6E5E">SDO_NET Package Subprograms</a>.</p>
</div>
<a id="TOPOL946"></a><a id="TOPOL947"></a><a id="TOPOL945"></a>
<div class="props_rev_3"><a id="GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91"></a>
<h3 id="TOPOL-GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91" class="sect3">Simple Spatial (SDO) Network Example (PL/SQL)</h3>
<div>
<p>This section presents an example of a very simple spatial (SDO, not LRS) network that contains three nodes and a link between each node. The network is illustrated in <a href="network-data-model-graph-overview.htm#GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91__CIHECIDG">Figure 5-4</a>.</p>
<div class="figure" id="GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91__CIHECIDG">
<p class="titleinfigure">Figure 5-4 Simple Spatial (SDO) Network</p>
<img width="297" height="122" src="img/GUID-71E05239-7884-4FE4-8015-A07F39B6497F-default.gif" alt="Description of Figure 5-4 follows" title="Description of Figure 5-4 follows"/><br/>
<a href="img_text/GUID-71E05239-7884-4FE4-8015-A07F39B6497F-print.htm">Description of &#34;Figure 5-4 Simple Spatial (SDO) Network&#34;</a></div>
<!-- class="figure" -->
<p>As shown in <a href="network-data-model-graph-overview.htm#GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91__CIHECIDG">Figure 5-4</a>, node <code class="codeph">N1</code> is at point 1,1, node <code class="codeph">N2</code> is at point 15,1, and node <code class="codeph">N3</code> is at point 9,4. Link <code class="codeph">L1</code> is a straight line connecting nodes <code class="codeph">N1</code> and <code class="codeph">N2</code>, link <code class="codeph">L2</code> is a straight line connecting nodes <code class="codeph">N2</code> and <code class="codeph">N3</code>, and link <code class="codeph">L3</code> is a straight line connecting nodes <code class="codeph">N3</code> and <code class="codeph">N1</code>. There are no other nodes or shape points on any of the links.</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91__CIHBAFID">Example 5-3</a> does the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>In a call to the <a href="SDO_NET-reference.htm#GUID-AA9BB0EB-AF18-4765-A6BF-E6FD2E247AE0">SDO_NET.CREATE_SDO_NETWORK</a> procedure, creates the <code class="codeph">SDO_NET1</code> directed network; creates the SDO_NET1_NODE$, SDO_NET1_LINK$, SDO_NET1_PATH$, and SDO_NET1_PLINK$ tables; and updates the xxx_SDO_NETWORK_METADATA views. All geometry columns are named GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
</li>
<li>
<p>Populates the node, link, path, and path-link tables. It inserts three rows into the node table, three rows into the link table, two rows into the path table, and four rows into the path-link table.</p>
</li>
<li>
<p>Updates the Oracle Spatial and Graph metadata, and creates spatial indexes on the GEOMETRY columns of the node and link tables. (These actions are not specifically related to network management, but that are necessary if applications are to benefit from spatial indexing on these geometry columns.)</p>
</li>
</ul>
<p><a href="network-data-model-graph-overview.htm#GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91__CIHBAFID">Example 5-3</a> does not show the use of many SDO_NET functions and procedures; these are included in <a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__CIHGEADB">Example 5-5</a> in <a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1">Spatial (LRS) Network Example (PL/SQL)</a>.</p>
<div class="example" id="GUID-BE3DED28-F97F-4AB5-9F2D-60C9CEE66E91__CIHBAFID">
<p class="titleinexample">Example 5-3 Simple Spatial (SDO) Network Example (PL/SQL)</p>
<pre dir="ltr">-- Create the SDO_NET1 directed network. Also creates the SDO_NET1_NODE$, 
-- SDO_NET1_LINK$, SDO_NET1_PATH$, SDO_NET1_PLINK$ tables, and updates 
-- USER_SDO_NETWORK_METADATA. All geometry columns are named GEOMETRY. 
-- Both the node and link tables contain a cost column named COST. 
EXECUTE SDO_NET.CREATE_SDO_NETWORK(&#39;SDO_NET1&#39;, 1, TRUE, TRUE);
 
-- Populate the SDO_NET1_NODE$ table.
-- N1
INSERT INTO sdo_net1_node$ (node_id, node_name, active, geometry, cost)
  VALUES(1, &#39;N1&#39;, &#39;Y&#39;,
    SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(1,1,NULL), NULL, NULL),
    5);
-- N2
INSERT INTO sdo_net1_node$ (node_id, node_name, active, geometry, cost)
  VALUES(2, &#39;N2&#39;, &#39;Y&#39;,
    SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(15,1,NULL), NULL, NULL),
    8);
-- N3
INSERT INTO sdo_net1_node$ (node_id, node_name, active, geometry, cost)
  VALUES(3, &#39;N3&#39;, &#39;Y&#39;,
    SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(9,4,NULL), NULL, NULL),
    4);
 
-- Populate the SDO_NET1_LINK$ table.
-- L1
INSERT INTO sdo_net1_link$ (link_id, link_name, start_node_id, end_node_id,
     active, geometry, cost, bidirected)
  VALUES(1, &#39;L1&#39;, 1, 2, &#39;Y&#39;,
    SDO_GEOMETRY(2002, NULL, NULL, 
      SDO_ELEM_INFO_ARRAY(1,2,1), 
        SDO_ORDINATE_ARRAY(1,1, 15,1)),
    14, &#39;Y&#39;);
-- L2
INSERT INTO sdo_net1_link$ (link_id, link_name, start_node_id, end_node_id,
     active, geometry, cost, bidirected)
   VALUES(2, &#39;L2&#39;, 2, 3, &#39;Y&#39;,
    SDO_GEOMETRY(2002, NULL, NULL, 
      SDO_ELEM_INFO_ARRAY(1,2,1), 
        SDO_ORDINATE_ARRAY(15,1, 9,4)),
    10, &#39;Y&#39;);
-- L3
INSERT INTO sdo_net1_link$ (link_id, link_name, start_node_id, end_node_id,
     active, geometry, cost, bidirected)
  VALUES(3, &#39;L3&#39;, 3, 1, &#39;Y&#39;,
    SDO_GEOMETRY(2002, NULL, NULL, 
      SDO_ELEM_INFO_ARRAY(1,2,1), 
        SDO_ORDINATE_ARRAY(9,4, 1,1)),
    10, &#39;Y&#39;);
 
-- Do not populate the SDO_NET1_PATH$ and SDO_NET1_PLINK$ tables now.
-- Do this only when you need to create any paths.
 
---------------------------------------------------------------------------
-- REMAINING STEPS NEEDED TO USE SPATIAL INDEXES --
---------------------------------------------------------------------------
-- Update the USER_SDO_GEOM_METADATA view. This is required before the
-- spatial index can be created. Do this only once for each layer
-- (that is, table-column combination).

INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
  VALUES (
    &#39;SDO_NET1_NODE$&#39;,
    &#39;GEOMETRY&#39;,
    SDO_DIM_ARRAY(   -- 20X20 grid
      SDO_DIM_ELEMENT(&#39;X&#39;, 0, 20, 0.005),
      SDO_DIM_ELEMENT(&#39;Y&#39;, 0, 20, 0.005)
       ),
    NULL   -- SRID (spatial reference system, also called coordinate system)
  );
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
  VALUES (
    &#39;SDO_NET1_LINK$&#39;,
    &#39;GEOMETRY&#39;,
    SDO_DIM_ARRAY(   -- 20X20 grid
      SDO_DIM_ELEMENT(&#39;X&#39;, 0, 20, 0.005),
      SDO_DIM_ELEMENT(&#39;Y&#39;, 0, 20, 0.005)
       ),
    NULL   -- SRID (spatial reference system, also called coordinate system)
  );
 
-- Create the spatial indexes
CREATE INDEX sdo_net1_nodes_idx ON sdo_net1_node$(geometry)
  INDEXTYPE IS MDSYS.SPATIAL_INDEX;
CREATE INDEX sdo_net1_links_idx ON sdo_net1_link$(geometry)
  INDEXTYPE IS MDSYS.SPATIAL_INDEX;
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TOPOL949"></a><a id="TOPOL950"></a><a id="TOPOL948"></a>
<div class="props_rev_3"><a id="GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB"></a>
<h3 id="TOPOL-GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB" class="sect3">Simple Logical Network Example (PL/SQL)</h3>
<div>
<p>This section presents an example of a very simple logical network that contains three nodes and a link between the nodes. The network is illustrated in <a href="network-data-model-graph-overview.htm#GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB__CIHGJJDF">Figure 5-5</a>.</p>
<div class="figure" id="GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB__CIHGJJDF">
<p class="titleinfigure">Figure 5-5 Simple Logical Network</p>
<img width="267" height="78" src="img/GUID-53C3DF69-ADDB-4EB4-88B5-DE9F53553D46-default.gif" alt="Description of Figure 5-5 follows" title="Description of Figure 5-5 follows"/><br/>
<a href="img_text/GUID-53C3DF69-ADDB-4EB4-88B5-DE9F53553D46-print.htm">Description of &#34;Figure 5-5 Simple Logical Network&#34;</a></div>
<!-- class="figure" -->
<p>As shown in <a href="network-data-model-graph-overview.htm#GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB__CIHGJJDF">Figure 5-5</a>, link <code class="codeph">L1</code> is a straight line connecting nodes <code class="codeph">N1</code> and <code class="codeph">N2</code>, link <code class="codeph">L2</code> is a straight line connecting nodes <code class="codeph">N2</code> and <code class="codeph">N3</code>, and link <code class="codeph">L3</code> is a straight line connecting nodes <code class="codeph">N3</code> and <code class="codeph">N1</code>. There are no other nodes on any of the links.</p>
<p><a href="network-data-model-graph-overview.htm#GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB__CIHJFFJA">Example 5-4</a> calls the <a href="SDO_NET-reference.htm#GUID-D828A58B-4DFD-4B28-B502-8080B342AC0E">SDO_NET.CREATE_LOGICAL_NETWORK</a> procedure, which does the following: creates the <code class="codeph">LOG_NET1</code> directed network; creates the LOG_NET1_NODE$, LOG_NET1_LINK$, LOG_NET1_PATH$, and LOG_NET1_PLINK$ tables; and updates the xxx_SDO_NETWORK_METADATA views. Both the node and link tables contain a cost column named COST. (Because this is a logical network, there are no geometry columns.) The example also populates the node and link tables.</p>
<p><a href="network-data-model-graph-overview.htm#GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB__CIHJFFJA">Example 5-4</a> does not show the use of many SDO_NET functions and procedures; these are included in the logical hierarchical network example (<a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHCJAIG">Example 5-6</a>) in <a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E">Logical Hierarchical Network Example (PL/SQL)</a>.</p>
<div class="example" id="GUID-C31E7708-32C9-4CFB-A41A-8743A1EB25CB__CIHJFFJA">
<p class="titleinexample">Example 5-4 Simple Logical Network Example (PL/SQL)</p>
<pre dir="ltr">-- Creates the LOG_NET1 directed logical network. Also creates the
-- LOG_NET1_NODE$, LOG_NET1_LINK$, LOG_NET1_PATH$,
-- and LOG_NET1_PLINK$ tables, and updates USER_SDO_NETWORK_METADATA.
-- Both the node and link tables contain a cost column named COST. 
EXECUTE SDO_NET.CREATE_LOGICAL_NETWORK(&#39;LOG_NET1&#39;, 1, TRUE, TRUE);
 
-- Populate the LOG_NET1_NODE$ table.
-- N1
INSERT INTO log_net1_node$ (node_id, node_name, active, cost)
  VALUES (1, &#39;N1&#39;, &#39;Y&#39;, 2);
-- N2
INSERT INTO log_net1_node$ (node_id, node_name, active, cost)
  VALUES (2, &#39;N2&#39;, &#39;Y&#39;, 3);
-- N3
INSERT INTO log_net1_node$ (node_id, node_name, active, cost)
  VALUES (3, &#39;N3&#39;, &#39;Y&#39;, 2);
 
-- Populate the LOG_NET1_LINK$ table.
-- L1
INSERT INTO log_net1_link$ (link_id, link_name, start_node_id, end_node_id,
     active, link_level, cost)
  VALUES (1, &#39;L1&#39;, 1, 2, &#39;Y&#39;, 1, 10);
-- L2
INSERT INTO log_net1_link$ (link_id, link_name, start_node_id, end_node_id,
     active, link_level, cost)
  VALUES (2, &#39;L2&#39;, 2, 3, &#39;Y&#39;, 1, 7);
-- L3
INSERT INTO log_net1_link$ (link_id, link_name, start_node_id, end_node_id,
     active, link_level, cost)
  VALUES (3, &#39;L3&#39;, 3, 1, &#39;Y&#39;, 1, 8);
 
-- Do not populate the LOG_NET1_PATH$ and LOG_NET1_PLINK$ tables now.
-- Do this only when you need to create any paths.
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TOPOL952"></a><a id="TOPOL953"></a><a id="TOPOL951"></a>
<div class="props_rev_3"><a id="GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1"></a>
<h3 id="TOPOL-GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1" class="sect3">Spatial (LRS) Network Example (PL/SQL)</h3>
<div>
<p>This section presents an example of a spatial (LRS) network that uses the roads (routes) illustrated in <a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__i888413">Figure 5-6</a>. Each road is built from individual line segments (associated with links) taken from one or more road segment geometries, which are also shown in the figure.</p>
<div class="figure" id="GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__i888413">
<p class="titleinfigure">Figure 5-6 Roads and Road Segments for Spatial (LRS) Network Example</p>
<img width="566" height="303" src="img/GUID-32A64E44-2278-4832-8BFC-3FFF66FA7CB1-default.gif" alt="Description of Figure 5-6 follows" title="Description of Figure 5-6 follows"/><br/>
<a href="img_text/GUID-32A64E44-2278-4832-8BFC-3FFF66FA7CB1-print.htm">Description of &#34;Figure 5-6 Roads and Road Segments for Spatial (LRS) Network Example&#34;</a></div>
<!-- class="figure" -->
<p>As shown in <a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__i888413">Figure 5-6</a>:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">Route1</code> starts at point 2,2 and ends at point 5,14. It has the following nodes: <code class="codeph">N1</code>, <code class="codeph">N2</code>, <code class="codeph">N3</code>, <code class="codeph">N4</code>, <code class="codeph">N5</code>, <code class="codeph">N6</code>, and <code class="codeph">N7</code>. It has the following links: <code class="codeph">R1L1</code>, <code class="codeph">R1L2</code>, <code class="codeph">R1L3</code>, <code class="codeph">R1L4</code>, <code class="codeph">R1L5</code>, and <code class="codeph">R1L6</code>.</p>
</li>
<li>
<p><code class="codeph">Route2</code> starts at point 8,4 and ends at point 8,13. It has the following nodes: <code class="codeph">N3</code>, <code class="codeph">N6</code>, and <code class="codeph">N8</code>. It has the following links: <code class="codeph">R2L1</code> and <code class="codeph">R2L2</code>.</p>
</li>
<li>
<p><code class="codeph">Route3</code> starts at point 12,10 and ends at point 5,14. It has the following nodes: <code class="codeph">N5</code>, <code class="codeph">N8</code>, and <code class="codeph">N7</code>. It has the following links: <code class="codeph">R3L1</code> and <code class="codeph">R3L2</code>.</p>
</li>
<li>
<p>The four road segment geometries are shown individually on the right side of the figure. (The points on each segment are labeled with their associated node names, to clarify how each segment geometry fits into the illustration on the left side.)</p>
</li>
</ul>
<p><a href="network-data-model-graph-overview.htm#GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__CIHGEADB">Example 5-5</a> does the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Creates a table to hold the road segment geometries.</p>
</li>
<li>
<p>Inserts four road segment geometries into the table.</p>
</li>
<li>
<p>Inserts the spatial metadata into the USER_SDO_GEOM_METADATA view.</p>
</li>
<li>
<p>Creates a spatial index on the geometry column in the ROAD_SEGMENTS table.</p>
</li>
<li>
<p>Creates and populates the node table.</p>
</li>
<li>
<p>Creates and populates the link table.</p>
</li>
<li>
<p>Creates and populates the path table and path-link table, for possible future use. (Before an application can use paths, you must populate these two tables.)</p>
</li>
<li>
<p>Inserts network metadata into the USER_SDO_NETWORK_METADATA view.</p>
</li>
</ul>
<div class="example" id="GUID-02B4BA07-FD12-4A9A-AC63-A000E667B5D1__CIHGEADB">
<p class="titleinexample">Example 5-5 Spatial (LRS) Network Example (PL/SQL)</p>
<pre dir="ltr">---------------------------------------------------------------------------
-- CREATE AND POPULATE TABLE --
---------------------------------------------------------------------------
-- Create a table for road segments. Use LRS.
CREATE TABLE road_segments (
  segment_id  NUMBER PRIMARY KEY,
  segment_name  VARCHAR2(32),
  segment_geom  SDO_GEOMETRY, 
  geom_id NUMBER);
 
-- Populate the table with road segments.
INSERT INTO road_segments VALUES(
  1,
  &#39;Segment1&#39;,
  SDO_GEOMETRY(
    3302,  -- line string, 3 dimensions (X,Y,M), 3rd is measure dimension
    NULL,
    NULL,
    SDO_ELEM_INFO_ARRAY(1,2,1), -- one line string, straight segments
    SDO_ORDINATE_ARRAY(
      2,2,0,   -- Starting point - Node1; 0 is measure from start.
      2,4,2,   -- Node2; 2 is measure from start. 
      8,4,8,   -- Node3; 8 is measure from start. 
      12,4,12) -- Node4; 12 is measure from start. 
  ), 1001
);
 
INSERT INTO road_segments VALUES(
  2,
  &#39;Segment2&#39;,
  SDO_GEOMETRY(
    3302,  -- line string, 3 dimensions (X,Y,M), 3rd is measure dimension
    NULL,
    NULL,
    SDO_ELEM_INFO_ARRAY(1,2,1), -- one line string, straight segments
    SDO_ORDINATE_ARRAY(
      8,4,0,   -- Node3; 0 is measure from start. 
      8,10,6,  -- Node6; 6 is measure from start. 
      8,13,9)  -- Ending point - Node8; 9 is measure from start.
  ), 1002
);
 
INSERT INTO road_segments VALUES(
  3,
  &#39;Segment3&#39;,
  SDO_GEOMETRY(
    3302,  -- line string, 3 dimensions (X,Y,M), 3rd is measure dimension
    NULL,
    NULL,
    SDO_ELEM_INFO_ARRAY(1,2,1), -- one line string, straight segments
    SDO_ORDINATE_ARRAY(
      12,4,0,     -- Node4; 0 is measure from start.
      12,10,6,    -- Node5; 6 is measure from start. 
      8,13,11,    -- Node8; 11 is measure from start. 
      5,14,14.16) -- Ending point - Node7; 14.16 is measure from start.
  ), 1003
);
 
INSERT INTO road_segments VALUES(
  4,
  &#39;Segment4&#39;,
  SDO_GEOMETRY(
    3302,  -- line string, 3 dimensions (X,Y,M), 3rd is measure dimension
    NULL,
    NULL,
    SDO_ELEM_INFO_ARRAY(1,2,1), -- one line string, straight segments
    SDO_ORDINATE_ARRAY(
      12,10,0, -- Node5; 0 is measure from start.
      8,10,4,  -- Node6; 4 is measure from start.  
      5,14,9)  -- Ending point - Node7; 9 is measure from start.
  ), 1004
);
 
---------------------------------------------------------------------------
-- UPDATE THE SPATIAL METADATA --
---------------------------------------------------------------------------
-- Update the USER_SDO_GEOM_METADATA view. This is required before the
-- spatial index can be created. Do this only once for each layer
-- (that is, table-column combination; here: road_segment and segment_geom).
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
  VALUES (
  &#39;ROAD_SEGMENTS&#39;,
  &#39;SEGMENT_GEOM&#39;,
  SDO_DIM_ARRAY(   -- 20X20 grid
    SDO_DIM_ELEMENT(&#39;X&#39;, 0, 20, 0.005),
    SDO_DIM_ELEMENT(&#39;Y&#39;, 0, 20, 0.005),
    SDO_DIM_ELEMENT(&#39;M&#39;, 0, 20, 0.005) -- Measure dimension
     ),
  NULL   -- SRID (spatial reference system, also called coordinate system)
);
 
-------------------------------------------------------------------
-- CREATE THE SPATIAL INDEX --
-------------------------------------------------------------------
CREATE INDEX road_segments_idx ON road_segments(segment_geom)
  INDEXTYPE IS MDSYS.SPATIAL_INDEX;
  
--------------------------------
-- USE SDO_NET SUBPROGRAMS
--------------------------------
 
-- This procedure does not use the CREATE_LRS_NETWORK procedure. Instead,
-- the user creates the network tables and populates the network metadata view.
-- Basic steps:
-- 1. Create and populate the node table.
-- 2. Create and populate the link table.
-- 3. Create the path table and paths and links table (for possible 
--    future use, before which they will need to be populated).
-- 4. Populate the network metadata (USER_SDO_NETWORK_METADATA).
--    Note: Can be done before or after Steps 1-3.
-- 5. Use various SDO_NET functions and procedures.
 
-- 1. Create and populate the node table.
EXECUTE SDO_NET.CREATE_NODE_TABLE(&#39;ROADS_NODES&#39;, &#39;LRS_GEOMETRY&#39;, &#39;NODE_GEOMETRY&#39;, &#39;COST&#39;, 1);
 
-- Populate the node table.
 
-- N1
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure) 
  VALUES (1, &#39;N1&#39;, &#39;Y&#39;, 1001, 0);
 
-- N2
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (2, &#39;N2&#39;, &#39;Y&#39;, 1001, 2);
 
-- N3
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (3, &#39;N3&#39;, &#39;Y&#39;, 1001, 8);
 
-- N4
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (4, &#39;N4&#39;, &#39;Y&#39;, 1001, 12);
 
-- N5
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (5, &#39;N5&#39;, &#39;Y&#39;, 1004, 0);
 
-- N6
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (6, &#39;N6&#39;, &#39;Y&#39;, 1002, 6);
 
-- N7
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (7, &#39;N7&#39;, &#39;Y&#39;, 1004, 9);
 
-- N8
INSERT INTO roads_nodes (node_id, node_name, active, geom_id, measure)
  VALUES (8, &#39;N8&#39;, &#39;Y&#39;, 1002, 9);
 
-- 2. Create and populate the link table.
EXECUTE SDO_NET.CREATE_LINK_TABLE(&#39;ROADS_LINKS&#39;, &#39;LRS_GEOMETRY&#39;, &#39;LINK_GEOMETRY&#39;, &#39;COST&#39;, 1);
 
-- Populate the link table.
 
-- Route1, Link1
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active, 
   cost, geom_id, start_measure, end_measure)
VALUES (101, &#39;R1L1&#39;, 1, 2, &#39;Y&#39;, 3, 1001, 0, 2);
 
-- Route1, Link2
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active, 
   cost, geom_id, start_measure, end_measure)
VALUES (102, &#39;R1L2&#39;, 2, 3, &#39;Y&#39;, 15, 1001, 2, 8);
 
 -- Route1, Link3
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (103, &#39;R1L3&#39;, 3, 4, &#39;Y&#39;, 10, 1001, 8, 12);
 
-- Route1, Link4
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (104, &#39;R1L4&#39;, 4, 5, &#39;Y&#39;, 15, 1003, 0, 6);
 
-- Route1, Link5
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (105, &#39;R1L5&#39;, 5, 6, &#39;Y&#39;, 10, 1004, 0, 4);
 
-- Route1, Link6
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (106, &#39;R1L6&#39;, 6, 7, &#39;Y&#39;, 7, 1004, 4, 9);
 
-- Route2, Link1 (cost = 30, a slow drive)
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (201, &#39;R2L1&#39;, 3, 6, &#39;Y&#39;, 30, 1002, 0, 6);
 
-- Route2, Link2
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (202, &#39;R2L2&#39;, 6, 8, &#39;Y&#39;, 5, 1002, 6, 9);
 
-- Route3, Link1
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (301, &#39;R3L1&#39;, 5, 8, &#39;Y&#39;, 5, 1003, 6, 11);
 
-- Route3, Link2
INSERT INTO roads_links (link_id, link_name, start_node_id, end_node_id, active,
   cost, geom_id, start_measure, end_measure)
VALUES (302, &#39;R3L2&#39;, 8, 7, &#39;Y&#39;, 5, 1003, 11, 14.16);
 
-- 3. Create the path table (to store created paths) and the path-link 
--    table (to store links for each path) for possible future use,
--    before which they will need to be populated.
EXECUTE SDO_NET.CREATE_PATH_TABLE(&#39;ROADS_PATHS&#39;, &#39;PATH_GEOMETRY&#39;);
EXECUTE SDO_NET.CREATE_PATH_LINK_TABLE(&#39;ROADS_PATHS_LINKS&#39;);
 
-- 4. Populate the network metadata (USER_SDO_NETWORK_METADATA).
 
INSERT INTO user_sdo_network_metadata 
    (NETWORK,
     NETWORK_CATEGORY,
     GEOMETRY_TYPE,
     NETWORK_TYPE,
     NO_OF_HIERARCHY_LEVELS,
     NO_OF_PARTITIONS,
     LRS_TABLE_NAME,
     LRS_GEOM_COLUMN,
     NODE_TABLE_NAME,
     NODE_GEOM_COLUMN,
     NODE_COST_COLUMN,
     LINK_TABLE_NAME,
     LINK_GEOM_COLUMN,
     LINK_DIRECTION,
     LINK_COST_COLUMN,
     PATH_TABLE_NAME,
     PATH_GEOM_COLUMN,
     PATH_LINK_TABLE_NAME)
  VALUES (
    &#39;ROADS_NETWORK&#39;,  -- Network name
    &#39;SPATIAL&#39;,  -- Network category
    &#39;LRS_GEOMETRY&#39;,  -- Geometry type
    &#39;Roadways&#39;,  -- Network type (user-defined)
    1,  -- No. of levels in hierarchy
    1,  -- No. of partitions
    &#39;ROAD_SEGMENTS&#39;,   -- LRS table name
    &#39;SEGMENT_GEOM&#39; ,  -- LRS geometry column
    &#39;ROADS_NODES&#39;,  -- Node table name
    &#39;NODE_GEOMETRY&#39;,  -- Node geometry column
    &#39;COST&#39;,  -- Node cost column
    &#39;ROADS_LINKS&#39;,  -- Link table name
    &#39;LINK_GEOMETRY&#39;,  -- Link geometry column
    &#39;DIRECTED&#39;,  -- Link direction
    &#39;COST&#39;,  -- Link cost column
    &#39;ROADS_PATHS&#39;,  -- Path table name
    &#39;PATH_GEOMETRY&#39;,  -- Path geometry column
    &#39;ROADS_PATHS_LINKS&#39;  -- Paths and links table
    );
 
-- 5. Use various SDO_NET functions and procedures.
 
-- Validate the network.
SELECT SDO_NET.VALIDATE_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
-- Validate parts or aspects of the network.
SELECT SDO_NET.VALIDATE_LINK_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.VALIDATE_LRS_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.VALIDATE_NODE_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.VALIDATE_PATH_SCHEMA(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
-- Retrieve various information (GET_xxx and some other functions).
SELECT SDO_NET.GET_CHILD_LINKS(&#39;ROADS_NETWORK&#39;, 101) FROM DUAL;
SELECT SDO_NET.GET_CHILD_NODES(&#39;ROADS_NETWORK&#39;, 1) FROM DUAL;
SELECT SDO_NET.GET_GEOMETRY_TYPE(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_IN_LINKS(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_INVALID_LINKS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_INVALID_NODES(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_INVALID_PATHS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_ISOLATED_NODES(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LINK_COST_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LINK_DIRECTION(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LINK_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LINK_GEOMETRY(&#39;ROADS_NETWORK&#39;, 103) FROM DUAL;
SELECT SDO_NET.GET_LINK_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LRS_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LRS_LINK_GEOMETRY(&#39;ROADS_NETWORK&#39;, 103) FROM DUAL;
SELECT SDO_NET.GET_LRS_NODE_GEOMETRY(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_LRS_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NETWORK_CATEGORY(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NETWORK_ID(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NETWORK_NAME(3) FROM DUAL;
SELECT SDO_NET.GET_NETWORK_TYPE(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NO_OF_HIERARCHY_LEVELS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NO_OF_LINKS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NO_OF_NODES(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NODE_DEGREE(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_NODE_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NODE_GEOMETRY(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_NODE_IN_DEGREE(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_NODE_OUT_DEGREE(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_NODE_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NODE_COST_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NODE_HIERARCHY_LEVEL(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_OUT_LINKS(&#39;ROADS_NETWORK&#39;, 3) FROM DUAL;
SELECT SDO_NET.GET_PATH_GEOM_COLUMN(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_PATH_TABLE_NAME(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_COMPLEX(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_HIERARCHICAL(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_LOGICAL(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_SIMPLE(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_SPATIAL(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.LRS_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.NETWORK_EXISTS(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.SDO_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.TOPO_GEOMETRY_NETWORK(&#39;ROADS_NETWORK&#39;) FROM DUAL;
 
-- Copy a network.
EXECUTE SDO_NET.COPY_NETWORK(&#39;ROADS_NETWORK&#39;, &#39;ROADS_NETWORK2&#39;);
 
-- Create a trigger.
EXECUTE SDO_NET.CREATE_DELETE_TRIGGER(&#39;ROADS_NETWORK&#39;);
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TOPOL955"></a><a id="TOPOL956"></a><a id="TOPOL954"></a>
<div class="props_rev_3"><a id="GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E"></a>
<h3 id="TOPOL-GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E" class="sect3">Logical Hierarchical Network Example (PL/SQL)</h3>
<div>
<p>This section presents an example of a logical network that contains the nodes and links illustrated in <a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHICBBJ">Figure 5-7</a>. Because it is a logical network, there are no spatial geometries associated with it. (<a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHICBBJ">Figure 5-7</a> is essentially the same as <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB__CIHJJIEJ">Figure 5-3</a> in <a href="network-data-model-graph-overview.htm#GUID-9DAFED69-BD14-4375-B053-4879F50D54CB">Network Hierarchy</a>, but with the nodes and links labeled.)</p>
<div class="figure" id="GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHICBBJ">
<p class="titleinfigure">Figure 5-7 Nodes and Links for Logical Network Example</p>
<img width="459" height="280" src="img/GUID-0509097C-0674-4B73-A8FF-9817C26DC379-default.gif" alt="Description of Figure 5-7 follows" title="Description of Figure 5-7 follows"/><br/>
<a href="img_text/GUID-0509097C-0674-4B73-A8FF-9817C26DC379-print.htm">Description of &#34;Figure 5-7 Nodes and Links for Logical Network Example&#34;</a></div>
<!-- class="figure" -->
<p>As shown in <a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHICBBJ">Figure 5-7</a>:</p>
<ul style="list-style-type: disc;">
<li>
<p>The network is hierarchical, with two levels. The top level (level 2) consists of two nodes (<code class="codeph">HN1</code> and <code class="codeph">HN2</code>), and the remaining nodes and links are in the bottom level (level 1) of the hierarchy.</p>
</li>
<li>
<p>Each node in level 1 is a child node of one of the nodes in level 2. Node <code class="codeph">HN1</code> has the following child nodes: <code class="codeph">N1</code>, <code class="codeph">N2</code>, <code class="codeph">N3</code>, <code class="codeph">N4</code>, <code class="codeph">N5</code>, and <code class="codeph">N6</code>. Node <code class="codeph">HN2</code> has the following child nodes: <code class="codeph">N7</code>, <code class="codeph">N8</code>, <code class="codeph">N9</code>, <code class="codeph">N10</code>, <code class="codeph">N11</code>, <code class="codeph">N12</code>, <code class="codeph">N13</code>, and <code class="codeph">N14</code>.</p>
</li>
<li>
<p>One link (<code class="codeph">HN1HN2</code>) links nodes <code class="codeph">HN1</code> and <code class="codeph">HN2</code>, and two links (<code class="codeph">N5N8</code> and <code class="codeph">N6N7</code>) are child links of parent link <code class="codeph">HN1HN2</code>. Note, however, that links are not associated with a specific network hierarchy level.</p>
</li>
</ul>
<p><a href="network-data-model-graph-overview.htm#GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHCJAIG">Example 5-6</a> does the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Creates and populates the node table.</p>
</li>
<li>
<p>Creates and populates the link table.</p>
</li>
<li>
<p>Creates and populates the path table and path-link table, for possible future use. (Before an application can use paths, you must populate these two tables.)</p>
</li>
<li>
<p>Inserts network metadata into the USER_SDO_NETWORK_METADATA view.</p>
</li>
<li>
<p>Uses various SDO_NET functions and procedures.</p>
</li>
</ul>
<div class="example" id="GUID-A25099D7-26CC-4EA1-836F-87DFE15EF12E__CIHCJAIG">
<p class="titleinexample">Example 5-6 Logical Network Example (PL/SQL)</p>
<pre dir="ltr">-- Basic steps:
-- 1. Create and populate the node table.
-- 2. Create and populate the link table.
-- 3. Create the path table and paths and links table (for possible 
--    future use, before which they will need to be populated).
-- 4. Populate the network metadata (USER_SDO_NETWORK_METADATA).
--    Note: Can be done before or after Steps 1-3.
-- 5. Use various SDO_NET functions and procedures.
 
-- 1. Create and populate the node table.
EXECUTE SDO_NET.CREATE_NODE_TABLE(&#39;XYZ_NODES&#39;, NULL, NULL, NULL, 2);
 
-- Populate the node table, starting with the highest level in the hierarchy.
 
-- HN1 (Hierarchy level=2, highest in this network)
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level)
  VALUES (1, &#39;HN1&#39;, &#39;Y&#39;, 2);
 
-- HN2 (Hierarchy level=2, highest in this network)
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level)
  VALUES (2, &#39;HN2&#39;, &#39;Y&#39;, 2);
 
-- N1 (Hierarchy level 1, parent node ID = 1 for N1 through N6)
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (101, &#39;N1&#39;, &#39;Y&#39;, 1, 1);
 
-- N2 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (102, &#39;N2&#39;, &#39;Y&#39;, 1, 1);
 
-- N3 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (103, &#39;N3&#39;, &#39;Y&#39;, 1, 1);
 
-- N4 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (104, &#39;N4&#39;, &#39;Y&#39;, 1, 1);
 
-- N5 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (105, &#39;N5&#39;, &#39;Y&#39;, 1, 1);
 
-- N6 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (106, &#39;N6&#39;, &#39;Y&#39;, 1, 1);
 
-- N7 (Hierarchy level 1, parent node ID = 2 for N7 through N14)
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (107, &#39;N7&#39;, &#39;Y&#39;, 1, 2);
 
-- N8 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (108, &#39;N8&#39;, &#39;Y&#39;, 1, 2);
 
-- N9 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (109, &#39;N9&#39;, &#39;Y&#39;, 1, 2);
 
-- N10 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (110, &#39;N10&#39;, &#39;Y&#39;, 1, 2);
 
-- N11 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (111, &#39;N11&#39;, &#39;Y&#39;, 1, 2);
 
-- N12 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (112, &#39;N12&#39;, &#39;Y&#39;, 1, 2);
 
-- N13 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (113, &#39;N13&#39;, &#39;Y&#39;, 1, 2);
 
-- N14 
INSERT INTO xyz_nodes (node_id, node_name, active, hierarchy_level, 
     parent_node_id)
  VALUES (114, &#39;N14&#39;, &#39;Y&#39;, 1, 2);
 
-- 2. Create and populate the link table.
EXECUTE SDO_NET.CREATE_LINK_TABLE(&#39;XYZ_LINKS&#39;, NULL, NULL, &#39;COST&#39;, 2);
 
-- Populate the link table.
 
-- HN1HN2 (single link in highest hierarchy level: link level = 2)
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level)
  VALUES (1001, &#39;HN1HN2&#39;, 1, 2, &#39;Y&#39;, 2);
 
-- For remaining links, link level = 1 and cost (10, 20, or 30) varies among links.
-- N1N2
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1101, &#39;N1N2&#39;, 101, 102, &#39;Y&#39;, 1, 10);
 
-- N1N3
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1102, &#39;N1N3&#39;, 101, 103, &#39;Y&#39;, 1, 20);
 
-- N2N3
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1103, &#39;N2N3&#39;, 102, 103, &#39;Y&#39;, 1, 30);
 
-- N3N4
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1104, &#39;N3N4&#39;, 103, 104, &#39;Y&#39;, 1, 10);
 
-- N4N5
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1105, &#39;N4N5&#39;, 104, 105, &#39;Y&#39;, 1, 20);
 
-- N4N6
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1106, &#39;N4N6&#39;, 104, 106, &#39;Y&#39;, 1, 30);
 
-- N5N6
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1107, &#39;N5N6&#39;, 105, 106, &#39;Y&#39;, 1, 10);
 
-- N5N8 (child of the higher-level link: parent ID = 1001)
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost, parent_link_id)
  VALUES (1108, &#39;N5N8&#39;, 105, 108, &#39;Y&#39;, 1, 20, 1001);
 
-- N6N7 (child of the higher-level link: parent ID = 1001)
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost, parent_link_id)
  VALUES (1109, &#39;N6N7&#39;, 106, 107, &#39;Y&#39;, 1, 30, 1001);
 
-- N7N8
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1110, &#39;N7N8&#39;, 107, 108, &#39;Y&#39;, 1, 10);
 
-- N7N9
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1111, &#39;N7N9&#39;, 107, 109, &#39;Y&#39;, 1, 20);
 
-- N8N9
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1112, &#39;N8N9&#39;, 108, 109, &#39;Y&#39;, 1, 30);
 
-- N9N10
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1113, &#39;N9N10&#39;, 109, 110, &#39;Y&#39;, 1, 30);
 
-- N9N13
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1114, &#39;N9N13&#39;, 109, 113, &#39;Y&#39;, 1, 10);
 
-- N10N11
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1115, &#39;N10N11&#39;, 110, 111, &#39;Y&#39;, 1, 20);
 
-- N11N12
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1116, &#39;N11N12&#39;, 111, 112, &#39;Y&#39;, 1, 30);
 
-- N12N13
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1117, &#39;N12N13&#39;, 112, 113, &#39;Y&#39;, 1, 10);
 
-- N12N14
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1118, &#39;N12N14&#39;, 112, 114, &#39;Y&#39;, 1, 20);
 
-- N13N14
INSERT INTO xyz_links (link_id, link_name, start_node_id, end_node_id, active, 
     link_level, cost)
  VALUES (1119, &#39;N13N14&#39;, 113, 114, &#39;Y&#39;, 1, 30);
 
-- 3. Create the path table (to store created paths) and the path-link 
--    table (to store links for each path) for possible future use,
--    before which they will need to be populated.
EXECUTE SDO_NET.CREATE_PATH_TABLE(&#39;XYZ_PATHS&#39;, NULL);
EXECUTE SDO_NET.CREATE_PATH_LINK_TABLE(&#39;XYZ_PATHS_LINKS&#39;);
 
-- 4. Populate the network metadata (USER_SDO_NETWORK_METADATA).
 
INSERT INTO user_sdo_network_metadata 
    (NETWORK,
     NETWORK_CATEGORY,
     NO_OF_HIERARCHY_LEVELS,
     NO_OF_PARTITIONS,
     NODE_TABLE_NAME,
     LINK_TABLE_NAME,
     LINK_DIRECTION,
     LINK_COST_COLUMN,
     PATH_TABLE_NAME,
     PATH_LINK_TABLE_NAME)
  VALUES (
    &#39;XYZ_NETWORK&#39;,  -- Network name
    &#39;LOGICAL&#39;,   -- Network category
    2,  -- No. of levels in hierarchy
    1,  -- No. of partitions
    &#39;XYZ_NODES&#39;,  -- Node table name
    &#39;XYZ_LINKS&#39;,  -- Link table name
    &#39;BIDIRECTED&#39;,  -- Link direction
    &#39;COST&#39;,  -- Link cost column
    &#39;XYZ_PATHS&#39;,  -- Path table name
    &#39;XYZ_PATHS_LINKS&#39;  -- Path-link table name
  );
 
-- 5. Use various SDO_NET functions and procedures.
 
-- Validate the network.
SELECT SDO_NET.VALIDATE_NETWORK(&#39;XYZ_NETWORK&#39;) FROM DUAL;
 
-- Validate parts or aspects of the network.
SELECT SDO_NET.VALIDATE_LINK_SCHEMA(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.VALIDATE_LRS_SCHEMA(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.VALIDATE_NODE_SCHEMA(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.VALIDATE_PATH_SCHEMA(&#39;XYZ_NETWORK&#39;) FROM DUAL;
 
-- Retrieve various information (GET_xxx and some other functions).
SELECT SDO_NET.GET_CHILD_LINKS(&#39;XYZ_NETWORK&#39;, 1001) FROM DUAL;
SELECT SDO_NET.GET_CHILD_NODES(&#39;XYZ_NETWORK&#39;, 1) FROM DUAL;
SELECT SDO_NET.GET_CHILD_NODES(&#39;XYZ_NETWORK&#39;, 2) FROM DUAL;
SELECT SDO_NET.GET_IN_LINKS(&#39;XYZ_NETWORK&#39;, 104) FROM DUAL;
SELECT SDO_NET.GET_LINK_COST_COLUMN(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LINK_DIRECTION(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_LINK_TABLE_NAME(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NETWORK_TYPE(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NO_OF_HIERARCHY_LEVELS(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NO_OF_LINKS(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NO_OF_NODES(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.GET_NODE_DEGREE(&#39;XYZ_NETWORK&#39;, 104) FROM DUAL;
SELECT SDO_NET.GET_NODE_IN_DEGREE(&#39;XYZ_NETWORK&#39;, 104) FROM DUAL;
SELECT SDO_NET.GET_NODE_OUT_DEGREE(&#39;XYZ_NETWORK&#39;, 104) FROM DUAL;
SELECT SDO_NET.GET_OUT_LINKS(&#39;XYZ_NETWORK&#39;, 104) FROM DUAL;
SELECT SDO_NET.GET_PATH_TABLE_NAME(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_HIERARCHICAL(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_LOGICAL(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.IS_SPATIAL(&#39;XYZ_NETWORK&#39;) FROM DUAL;
SELECT SDO_NET.NETWORK_EXISTS(&#39;XYZ_NETWORK&#39;) FROM DUAL;
 
-- Copy a network.
EXECUTE SDO_NET.COPY_NETWORK(&#39;XYZ_NETWORK&#39;, &#39;XYZ_NETWORK2&#39;);
 
-- Create a trigger.
EXECUTE SDO_NET.CREATE_DELETE_TRIGGER(&#39;XYZ_NETWORK&#39;);
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TOPOL958"></a><a id="TOPOL959"></a><a id="TOPOL960"></a><a id="TOPOL961"></a><a id="TOPOL962"></a><a id="TOPOL963"></a><a id="TOPOL964"></a><a id="TOPOL965"></a><a id="TOPOL957"></a>
<div class="props_rev_3"><a id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A"></a>
<h3 id="TOPOL-GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A" class="sect3">Partitioning and Load on Demand Analysis Examples (PL/SQL, XML, and Java)</h3>
<div>
<p>This section presents examples of partitioning a network, including related operations, and performing load on demand network analysis. The examples illustrate concepts and techniques explained in <a href="network-data-model-graph-overview.htm#GUID-718EB9E1-3ED8-4CA0-B098-1ED8EC6D07B6">Network Analysis Using Load on Demand</a>.</p>
<p>Additional examples of using load on demand analysis with partitioned networks are included in the demo files, described in <a href="network-data-model-graph-overview.htm#GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039">Network Data Model Graph Tutorial and Other Resources</a>.</p>
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHGIFCH">
<p class="titleinexample">Example 5-7 Partitioning a Spatial Network</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHGIFCH">Example 5-7</a> partitions a spatial network named <code class="codeph">NYC_NET</code>. (Assume that this network already exists and its metadata, node, and link tables are populated.)</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHGIFCH">Example 5-7</a> and <a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHGGFAD">Example 5-8</a> generate the necessary partition tables for the <code class="codeph">NYC_NET</code> network. After executing these examples, you can check the .log file for the current status or any errors encountered during partitioning or BLOB generation.</p>
<pre dir="ltr">exec sdo_net.spatial_partition(
  network-&gt;&#39;NYC_NET&#39;, -- network name
  partition_table_name-&gt;&#39;NYC_PART$&#39;, -- partition table name
  max_num_nodes-&gt;5000, -- max. number of nodes per partition
  log_loc-&gt;&#39;MDDIR&#39;, -- partition log directory
  log_file-&gt;&#39;nyc_part.log&#39;, --partition log file name
  open_mode-&gt;&#39;w&#39;, -- partition log file open mode
  link_level-&gt;1); -- link level
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHGGFAD">
<p class="titleinexample">Example 5-8 Generating Partition BLOBs</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHGGFAD">Example 5-8</a> generates partition BLOBs for the network.</p>
<pre dir="ltr">exec sdo_net.generate_partition_blobs(
  network-&gt;&#39;NYC_NET&#39;, ,-- network name
  link_level -&gt;1, -- link level
  partition_blob_table_name-&gt;&#39;NYC_PBLOB$&#39;, -- partition blob table name
  includeUserdata-&gt;FALSE, -- include user data in partition blobs?
  log_loc-&gt;&#39;MYDIR&#39;,  -- partition log directory
  log_file-&gt;&#39;nyc_part.log&#39;, --partition log file name
  open_mode-&gt;&#39;a&#39;); -- partition log file open mode
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHHGJHI">
<p class="titleinexample">Example 5-9 Configuring the Load on Demand Environment, Including Partition Cache</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHHGJHI">Example 5-9</a> shows the XML for configuring the load on demand environment, including the partition cache.</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34; ?&gt;
&lt;LODConfigs xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;
            xmlns =&#34;http://xmlns.oracle.com/spatial/network&#34;
            version = &#34;12.1&#34;&gt;      
&lt;!--The new xml configuration schema takes the version number. If the version attribute is missing, then we assume it is 11.2 or lower. --&gt;
<span class="bold">&lt;!-- default configuration for networks not configured --&gt;</span>
  &lt;LODConfig globalNetworkName=&#34;$DEFAULT$&#34; networkName=&#34;$DEFAULT$&#34;&gt;
    &lt;networkIO&gt;
      &lt;geometryTolerance&gt;0.000001&lt;/geometryTolerance&gt;
      &lt;readPartitionFromBlob&gt;false&lt;/readPartitionFromBlob&gt;
      &lt;partitionBlobTranslator&gt;
        &lt;className&gt;oracle.spatial.network.lod.PartitionBlobTranslator11gR2&lt;/className&gt;
        &lt;parameters&gt;&lt;/parameters&gt;
      &lt;/partitionBlobTranslator&gt;
      &lt;userDataIO categoryId=&#34;0&#34;&gt;
        &lt;className&gt;oracle.spatial.network.lod.LODUserDataIOSDO&lt;/className&gt;
        &lt;parameters&gt;&lt;/parameters&gt;
      &lt;/userDataIO&gt;
      &lt;cachingPolicy linkLevel=&#34;1&#34;&gt;
        &lt;maxNodes&gt;500000&lt;/maxNodes&gt;
        &lt;residentPartitions&gt;&lt;/residentPartitions&gt;
        &lt;flushRule&gt;
          &lt;className&gt;oracle.spatial.network.lod.LRUCachingHandler&lt;/className&gt;
          &lt;parameters&gt;&lt;/parameters&gt;
        &lt;/flushRule&gt;
      &lt;/cachingPolicy&gt;
    &lt;/networkIO&gt;
    &lt;networkAnalysis&gt;
      &lt;linkLevelSelector&gt;
        &lt;className&gt;oracle.spatial.network.lod.DummyLinkLevelSelector&lt;/className&gt;
        &lt;parameters&gt;&lt;/parameters&gt;
      &lt;/linkLevelSelector&gt;
      &lt;withinCostPolygonTolerance&gt;0.05&lt;/withinCostPolygonTolerance&gt;
    &lt;/networkAnalysis&gt;
  &lt;/LODConfig&gt;
  &lt;LODConfig globalNetworkName=&#34;SAMPLE_NETWORK&#34; networkName=&#34;SAMPLE_NETWORK&#34;&gt;
    &lt;networkIO&gt;
      &lt;geometryTolerance&gt;0.000001&lt;/geometryTolerance&gt;
      &lt;readPartitionFromBlob&gt;true&lt;/readPartitionFromBlob&gt;
      &lt;partitionBlobTranslator&gt;
        &lt;className&gt;oracle.spatial.router.ndm.RouterPartitionBlobTranslator11gR2&lt;/className&gt;
        &lt;parameters&gt;&lt;/parameters&gt;
      &lt;/partitionBlobTranslator&gt;
      &lt;userDataIO categoryId=&#34;0&#34;&gt;
        &lt;className&gt;oracle.spatial.network.lod.LODUserDataIOSDO&lt;/className&gt;
        &lt;parameters&gt;&lt;/parameters&gt;
      &lt;/userDataIO&gt;
      &lt;userDataIO categoryId=&#34;1&#34;&gt;
        &lt;className&gt;oracle.spatial.router.ndm.RouterUserDataIO&lt;/className&gt;
        &lt;parameters&gt;&lt;/parameters&gt;
      &lt;/userDataIO&gt;
      &lt;cachingPolicy linkLevel=&#34;1&#34;&gt;
        &lt;maxNodes&gt;200000&lt;/maxNodes&gt;
        &lt;residentPartitions&gt;&lt;/residentPartitions&gt;
        &lt;flushRule&gt;
          &lt;className&gt;oracle.spatial.network.lod.LRUCachingHandler&lt;/className&gt;
          &lt;parameters&gt;&lt;/parameters&gt;
        &lt;/flushRule&gt;
      &lt;/cachingPolicy&gt;
      &lt;cachingPolicy linkLevel=&#34;2&#34;&gt;
        &lt;maxNodes&gt;800000&lt;/maxNodes&gt;
        &lt;residentPartitions&gt;0&lt;/residentPartitions&gt;
        &lt;flushRule&gt;
          &lt;className&gt;oracle.spatial.network.lod.LRUCachingHandler&lt;/className&gt;
          &lt;parameters&gt;&lt;/parameters&gt;
        &lt;/flushRule&gt;
      &lt;/cachingPolicy&gt;
    &lt;/networkIO&gt;
    &lt;networkAnalysis&gt;
    &lt;/networkAnalysis&gt;
  &lt;/LODConfig&gt;
&lt;/LODConfigs&gt;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHFCGDC">
<p class="titleinexample">Example 5-10 Reloading the Load on Demand Configuration (Java API)</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHFCGDC">Example 5-10</a> and <a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHFFBHD">Example 5-11</a> show the Java and PL/SQL APIs, respectively, for reloading the load on demand configuration.</p>
<pre dir="ltr">InputStream config = ClassLoader.getSystemResourceAsStream(
                     &#34;netlodcfg.xml&#34;);
LODNetworkManager.getConfigManager().loadConfig(config);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHFFBHD">
<p class="titleinexample">Example 5-11 Reloading the Load on Demand Configuration (PL/SQL API)</p>
<pre dir="ltr">EXECUTE SDO_NET.LOAD_CONFIG(&#39;WORK_DIR&#39;, &#39;netlodcfg.xml&#39;);
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHEAJCA">
<p class="titleinexample">Example 5-12 Getting Estimated Partition Size</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHEAJCA">Example 5-12</a> returns the estimated size in bytes for a specified network partition.</p>
<pre dir="ltr">SELECT SDO_NET.GET_PARTITION_SIZE (
  NETWORK-&gt;&#39;NYC_NET&#39;,
  PARTITION_ID-&gt;1,
  LINK_LEVEL -&gt;1,
  INCLUDE_USER_DATA-&gt;&#39;FALSE&#39;,
  INCLUDE_SPATIAL_DATA-&gt;&#39;TRUE&#39;) FROM DUAL;
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHHFDFG">
<p class="titleinexample">Example 5-13 Network Analysis: Shortest Path (LOD Java API)</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHHFDFG">Example 5-13</a> uses the load on demand Java API (oracle.spatial.network.lod) to issue a shortest-path query on a network.</p>
<pre dir="ltr">Connection conn = LODNetworkManager.getConnection(dbUrl, dbUser, dbPassword);
// get LOD network IO Adapter
String networkName = &#34;NYC_NET&#34;;
NetworkIO reader = LODNetworkManager.getCachedNetworkIO(conn, networkName, networkName, null);
// get analysis module
NetworkAnalyst analyst = LODNetworkManager.getNetworkAnalyst(reader);
// compute the shortest path
LogicalSubPath path = analyst.shortestPathDijkstra(new PointOnNet(startNodeId),
      new PointOnNet(endNodeId), null);
// print path result
PrintUtility.print(System.out, path, false, 0, 0);
. . .
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHHGGBF">
<p class="titleinexample">Example 5-14 Network Analysis: Shortest Path (XML API)</p>
<p><a href="network-data-model-graph-overview.htm#GUID-BB6D95E2-96A1-4AC9-9203-72EBDE69833A__CIHHGGBF">Example 5-14</a> uses the XML API (oracle.spatial.network.xml) to issue a shortest-path query on a network. It includes the request and the response.</p>
<pre dir="ltr">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
<span class="bold">&lt;ndm:networkAnalysisRequest</span>
    xmlns:ndm=&#34;http://xmlns.oracle.com/spatial/network&#34;
    xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;
    xmlns:gml=&#34;http://www.opengis.net/gml&#34;&gt;
  &lt;ndm:networkName&gt;NYC_NET&lt;/ndm:networkName&gt;
  &lt;ndm:shortestPath&gt;
    &lt;ndm:startPoint&gt;
      &lt;ndm:nodeID&gt;65&lt;/ndm:nodeID&gt;
    &lt;/ndm:startPoint&gt;
    &lt;ndm:endPoint&gt;
      &lt;ndm:nodeID&gt;115&lt;/ndm:nodeID&gt;
    &lt;/ndm:endPoint&gt;
    &lt;ndm:subPathRequestParameter&gt;
      &lt;ndm:isFullPath&gt; true &lt;/ndm:isFullPath&gt;
      &lt;ndm:startLinkIndex&gt; true &lt;/ndm:startLinkIndex&gt;
      &lt;ndm:startPercentage&gt; true &lt;/ndm:startPercentage&gt;
      &lt;ndm:endLinkIndex&gt; true &lt;/ndm:endLinkIndex&gt;
      &lt;ndm:endPercentage&gt; true &lt;/ndm:endPercentage&gt;
      &lt;ndm:geometry&gt;false&lt;/ndm:geometry&gt;
    &lt;ndm:pathRequestParameter&gt;
      &lt;ndm:cost&gt; true &lt;/ndm:cost&gt;
      &lt;ndm:isSimple&gt; true &lt;/ndm:isSimple&gt;
      &lt;ndm:startNodeID&gt;true&lt;/ndm:startNodeID&gt;
      &lt;ndm:endNodeID&gt;true&lt;/ndm:endNodeID&gt;
      &lt;ndm:noOfLinks&gt;true&lt;/ndm:noOfLinks&gt;
      &lt;ndm:linksRequestParameter&gt;
        &lt;ndm:onlyLinkID&gt;true&lt;/ndm:onlyLinkID&gt;
      &lt;/ndm:linksRequestParameter&gt;
      &lt;ndm:nodesRequestParameter&gt;
        &lt;ndm:onlyNodeID&gt;true&lt;/ndm:onlyNodeID&gt;
      &lt;/ndm:nodesRequestParameter&gt;
      &lt;ndm:geometry&gt;true&lt;/ndm:geometry&gt;
    &lt;/ndm:pathRequestParameter&gt;
    &lt;/ndm:subPathRequestParameter&gt;
  &lt;/ndm:shortestPath&gt;
<span class="bold">&lt;/ndm:networkAnalysisRequest&gt;</span>
 
&lt;?xml version = &#39;1.0&#39; encoding = &#39;UTF-8&#39;?&gt;
<span class="bold">&lt;ndm:networkAnalysisResponse</span> xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; xmlns:ndm=&#34;http://xmlns.oracle.com/spatial/network&#34; xmlns:gml=&#34;http://www.opengis.net/gml&#34;&gt;
  &lt;ndm:networkName&gt;NYC_NET&lt;/ndm:networkName&gt;
  &lt;ndm:shortestPath&gt;
    &lt;ndm:subPathResponse&gt;
      &lt;ndm:isFullPath&gt;true&lt;/ndm:isFullPath&gt;
      &lt;ndm:startLinkIndex&gt;0&lt;/ndm:startLinkIndex&gt;
      &lt;ndm:startPercentage&gt;0.0&lt;/ndm:startPercentage&gt;
      &lt;ndm:endLinkIndex&gt;17&lt;/ndm:endLinkIndex&gt;
      &lt;ndm:endPercentage&gt;1.0&lt;/ndm:endPercentage&gt;
      &lt;ndm:pathResponse&gt;
        &lt;ndm:cost&gt;6173.212694405703&lt;/ndm:cost&gt;
        &lt;ndm:isSimple&gt;true&lt;/ndm:isSimple&gt;
        &lt;ndm:startNodeID&gt;65&lt;/ndm:startNodeID&gt;
        &lt;ndm:endNodeID&gt;115&lt;/ndm:endNodeID&gt;
        &lt;ndm:noOfLinks&gt;18&lt;/ndm:noOfLinks&gt;
        &lt;ndm:linkIDs&gt;145477046 145477044 145477042 145477039 145476926 145476930 145480892 145480891 145476873 145476871 145477023 145489019 145489020 145476851 145488986 145488987 145476913 145476905         
        &lt;/ndm:linkIDs&gt;
        &lt;ndm:nodeIDs&gt;65 64 60 57 58 61 71 70 73 87 97 95 91 101 102 104 117 120 115 
        &lt;/ndm:nodeIDs&gt;
        &lt;ndm:geometry&gt;
          &lt;gml:LineString&gt;
            &lt;gml:coordinates&gt;-71.707462,43.555262 -71.707521,43.555601&hellip;
            &lt;/gml:coordinates&gt;
          &lt;/gml:LineString&gt;
        &lt;/ndm:geometry&gt;
      &lt;/ndm:pathResponse&gt;
    &lt;/ndm:subPathResponse&gt;
  &lt;/ndm:shortestPath&gt;
<span class="bold">&lt;/ndm:networkAnalysisResponse&gt;</span>
</pre></div>
<!-- class="example" --></div>
</div>
<a id="TOPOL967"></a><a id="TOPOL1086"></a><a id="TOPOL1087"></a><a id="TOPOL966"></a>
<div class="props_rev_3"><a id="GUID-21E1DBEB-308E-436F-9D7B-588E1003285E"></a>
<h3 id="TOPOL-GUID-21E1DBEB-308E-436F-9D7B-588E1003285E" class="sect3">User-Defined Data Examples (PL/SQL and Java)</h3>
<div>
<p>This section presents examples of using network user-defined data, which is the information (not related to connectivity) that users want to associate with a network representation. The USER_SDO_NETWORK_USER_DATA and ALL_SDO_NETWORK_USER_DATA metadata views (described in <a href="network-data-model-graph-overview.htm#GUID-89558452-B759-4ECF-96B1-CA29DAE6EE5F">xxx_SDO_NETWORK_USER_DATA Views</a>) contain information about user-defined data.</p>
<p>To use user-defined data, you must set the USER_DEFINED_DATA column value to <code class="codeph">Y</code> in the appropriate xxx_SDO_NETWORK_METADATA views (described in <a href="network-data-model-graph-overview.htm#GUID-1A68FE59-47F0-4583-9D0B-F81D4EC136DF">xxx_SDO_NETWORK_METADATA Views</a>).</p>
<div class="example" id="GUID-21E1DBEB-308E-436F-9D7B-588E1003285E__CIHEDJIC">
<p class="titleinexample">Example 5-15 Inserting User-Defined Data into Network Metadata</p>
<p><a href="network-data-model-graph-overview.htm#GUID-21E1DBEB-308E-436F-9D7B-588E1003285E__CIHEDJIC">Example 5-15</a> uses the PL/SQL API to insert link-related user-defined data into the network metadata.</p>
<pre dir="ltr">-- Insert link user data named &#39;interaction&#39; of
-- type varchar2 (50) in network &#39;bi_test&#39;.
--&#39;interaction&#39; is a column of type varchar2(50) in the link table of network &#39;bi_
test&#39;.
insert into user_sdo_network_user_data 
         (network,table_type, data_name, data_type, data_length, category_id) 
          values (&#39;bi_test&#39;, &#39;LINK&#39;, &#39;interaction&#39;, &#39;VARCHAR2&#39;, 50, 0) ;
-- insert link user data named &#39;PROB&#39; of type Number.
--&#39;PROB&#39; is a column of type NUMBER in the link table of network &#39;bi_test&#39;.
insert into user_sdo_network_user_data 
         (network,table_type,data_name,data_type, category_id)
          values (&#39;bi_test&#39;,&#39;LINK&#39;,&#39;PROB&#39;,&#39;NUMBER&#39;, 0) ;
</pre>
<p>After a network or network partition is loaded, user-defined data is available in Java representations. You can access user-defined data through the <code class="codeph">getCategorizedUserData</code> and <code class="codeph">setCategorizedUserData</code> methods for the <code class="codeph">Node</code>, <code class="codeph">Link</code>, <code class="codeph">Path</code>, and <code class="codeph">SubPath</code> interfaces. For example:</p>
<pre dir="ltr">// The user data index is the sequence number of a user data within a category
// sorted by data name.
 
int interactionUserDataIndex = 0;
int probUserDataIndex = 1;
 
String interaction = (String)link.getCategorizedUserData().getUserData(0).
                     get(interactionUseDataIndex);
 
double prob = ((Double)link.getCategorizedUserData().getUserData(0).
              get(probUserdataIndex)).doubleValue();
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-21E1DBEB-308E-436F-9D7B-588E1003285E__CIHGAICA">
<p class="titleinexample">Example 5-16 Implementation of writeUserData method of LODUserDataIO Interface</p>
<p><a href="network-data-model-graph-overview.htm#GUID-21E1DBEB-308E-436F-9D7B-588E1003285E__CIHGAICA">Example 5-16</a> uses the Java API for a custom user data I/O implementation (non-default implementation) of the <code class="codeph">LODUserDataIO</code> interface. User data associated to links is written to BLOBs (one BLOB per partition) and read from BLOBs during analysis. In this example it is assumed that:</p>
<ul style="list-style-type: disc;">
<li>
<p>The user-defined data BLOB for multimodal data for each partition has the partition ID and number of links associated with the partition followed by &lt;Link ID, link route ID&gt; for each link</p>
</li>
<li>
<p>The user-defined data BLOB table name is MULTIMODAL_USER_DATA</p>
</li>
</ul>
<pre dir="ltr"> //Method getLinksInPartition(partitionId) computes a vector that
 // consists of  the ID and the route ID of each link associated with a partition
 // with ID = partitionId
 LinkVector = getLinksInPartition(partitionId);
 
 ObjectOutputStream dout = null;
 
 //Insert an empty blob for the partition with ID = partition_id
 String insertStr = &#34;INSERT INTO &#34; + MULTIMODAL_USER_DATA +
                              &#34; (partition_id, blob) &#34; + &#34; VALUES &#34; + &#34; (?, EMPTY_BLOB())&#34; ;
 
 PreparedStatement stmt = conn.prepareStatement(insertStr);
 stmt.setInt(1,partitionId);
 int n = stmt.executeUpdate();
 stmt.close();
 
 //lock the row for blob update
  String lockRowStr = &#34;SELECT blob FROM &#34; + MULTIMODAL_USER_DATA +
                                   &#34; WHERE partition_id = ? &#34; + &#34; FOR UPDATE&#34;;
  stmt = conn.prepareStatement(lockRowStr);
  stmt.setInt(1,partitionId);
  ResultSet rs = stmt.executeQuery();
 
  rs.next();
 oracle.sql.BLOB userDataBlob = (oracle.sql.BLOB) rs.getBlob(1);
 stmt.close();
 
  OutputStream blobOut = ((oracle.sql.BLOB) userDataBlob).setBinaryStream(1);
  dout = new ObjectOutputStream(blobOut);
 
  //write partition ID
  dout.writeInt(partitionId);
  int numLinks = linkVector.size()
 
   for (int i=0; i&lt;linkVector.size(); i++) {
         //MultimodalLink is a class with variables link ID and route ID
         MultimodalLink link = (MultimodalLink) linkVector.elementAt(i);
          //write link ID 
         dout.writeLong(link.getLinkId());
 
         // write route ID into file
         dout.writeInt(link.getRouteId());
    }
    dout.close();
     blobOut.close();
     rs.close();
</pre></div>
<!-- class="example" -->
<div class="example" id="GUID-21E1DBEB-308E-436F-9D7B-588E1003285E__CIHHACII">
<p class="titleinexample">Example 5-17 Implementation of readUserData method of LODUserDataIO Interface</p>
<p>In <a href="network-data-model-graph-overview.htm#GUID-21E1DBEB-308E-436F-9D7B-588E1003285E__CIHHACII">Example 5-17</a>, the user-defined data is accessed through the <code class="codeph">getCategorizedUserData</code> and <code class="codeph">setCategorizedUserData</code> methods for the <code class="codeph">Node</code>, <code class="codeph">Link</code>, <code class="codeph">Path</code>, and <code class="codeph">SubPath</code> interfaces and the <code class="codeph">getUserData</code> and <code class="codeph">setUserData</code> methods of the <code class="codeph">CategorizedUserData</code> interface.</p>
<pre dir="ltr">//Read the blob for the required partition from the user data blob table
// In this example,
// MULTIMODAL_USER_DATA  is the name of user &ndash;defined data blob table
BLOB multimodalBlob = null;
String queryStr = &#34;SELECT blob FROM &#34; + MULTIMODAL_USER_DATA                                
                             &#34; WHERE partition_id = ?&#34;;
PreparedStatement stmt = conn.prepareStatement(queryStr);
stmt.setInt(1,partitionId);
ResultSet rs = stmt.executeQuery();
if (rs.next())   {
     multimodalBlob = (oracle.sql.BLOB)rs.getBlob(1);
}
 
// Materialize the blob value as an input stream        
InputStream is = multimodalBlob.getBinaryStream();
 
//Create an ObjectInputStream that reads from the InputStream is
ObjectInputStream ois = new ObjectInputStream(is);
 
//Read the values of partition ID and number of links from the blob
int partitionId = ois.readInt();
int numLinks = ois.readInt();
 
for (int i=0; i&lt;numLinks; i++)  {
 
    //Read link ID and route ID for each link
     long linkId = ois.readLong();
     int routeId = ois.readInt();
 
     //MultimodalLinkUserData is an implementation of NDM LOD UserData interface
     //Implementation is provided at the end of the example 
     linkUserData = new MultimodalLinkUserData(routeId);
 
     //Get the link object corresponding to the link ID
     LogicalNetLink link = partition.getLink(linkId);
 
     //Get the (categorized) user data associated with the link. 
     CategorizedUserData cud = link.getCategorizedUserData();
    
     // If the link does not have categorized user data associated with it,
     // initialize it to linkUserData
     // Else, set the user data for category USER_DATA_MULTIMODAL 
     // to linkUserData 
     if (cud == null) {
            UserData [] userDataArray = {linkUserData};
            cud = new CategorizedUserDataImpl(userDataArray);
             link.setCategorizedUserData(cud);
     }
     else {                   
            cud.setUserData(USER_DATA_MULTIMODAL,linkUserData);
     }
}
</pre>
<p>The following example shows how to read the user-defined data, namely the route ID associated with a link during analysis:</p>
<pre dir="ltr">//info is an instance of LODAnalysisInfo 
LogicalLink currentLink = info.getCurrentLink();
 
//Read the user-defined data (in this case, route ID) 
int linkRouteId   = (Integer)currentLink.getCategorizedUserData().
                           getUserData(USER_DATA_MULTIMODAL).                                      
                           get(INDEX_LINK_ROUTEID);
</pre>
<p>The implementation of the <code class="codeph">MultimodalLinkUserData</code> interface is as follows:</p>
<pre dir="ltr">class MultimodalLinkUserData implements UserData
{
    private int routeId;
 
    protected MultimodalLinkUserData(int routeId)
   {
        this.routeId = routeId;
   }
 
  public Object get(int index)
  {
    switch(index)
    {
         case INDEX_LINK_ROUTEID:
              return routeId;
    }
    return null;
  }
 
  public void set(int index, Object userData)
  {
    switch(index)
    {
         case INDEX_LINK_ROUTEID:
            this.routeId = (Integer) userData;
    }
  }
 
  public int getNumberOfUserData()
  {
       return 1;
  }
 
  public Object clone()
{
    return new MultimodalLinkUserData(routeId);
  }
}
</pre></div>
<!-- class="example" --></div>
</div>
</div>
<a id="TOPOL713"></a>
<div class="props_rev_3"><a id="GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039"></a>
<h2 id="TOPOL-GUID-525D85C3-2E61-429F-ACF2-BB3BAE57C039" class="sect2">Network Data Model Graph Tutorial and Other Resources</h2>
<div>
<p><a href="http://www.oracle.com/technetwork/database-options/spatialandgraph/" target="_blank"><code class="codeph">http://www.oracle.com/technetwork/database-options/spatialandgraph</code></a> on the Oracle Technology Network provides links to valuable resources to help you get started with Oracle Spatial and Graph technologies, including the Network Data Model Graph. The Network Data Model Graph resources include the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>A <span class="bold">Network Data Model Graph tutorial</span> (<code class="codeph">ndm_tutorial.zip</code> on <a href="http://www.oracle.com/technetwork/indexes/samplecode/spatial-1433316.html" target="_blank"><code class="codeph">http://www.oracle.com/technetwork/indexes/samplecode/spatial-1433316.html</code></a>) outlines the steps to set up and configure a network, and to conduct the analysis. It also includes sample code and a web application that demonstrates how to use Oracle Maps to display analysis results.</p>
</li>
<li>
<p>An <span class="bold">NDM white paper</span> (&#34;A Load-On-Demand Approach to Handling Large Networks in the Oracle Spatial and Graph Network Data Model Graph&#34;) provides detailed explanations and examples.</p>
</li>
</ul>
</div>
</div>
<a id="TOPOL971"></a>
<div class="props_rev_3"><a id="GUID-F95D47AF-2C71-46E8-8974-0820924585AB"></a>
<h2 id="TOPOL-GUID-F95D47AF-2C71-46E8-8974-0820924585AB" class="sect2">README File for Spatial and Graph and Related Features</h2>
<div>
<p><a id="d23349e6990" class="indexterm-anchor"></a>A <code class="codeph">README.txt</code> file supplements the information in the following manuals: <a class="olink SPATL" target="_blank" href="../SPATL/toc.htm"><span class="italic">Oracle Spatial and Graph Developer&#39;s Guide</span></a>, <a class="olink GEORS" target="_blank" href="../GEORS/toc.htm"><span class="italic">Oracle Spatial and Graph GeoRaster Developer&#39;s Guide</span></a>, and <span class="italic">Oracle Spatial and Graph Topology Data Model and Network Data Model Graph Developer&#39;s Guide</span> (this manual). This file is located at:</p>
<pre dir="ltr"><span class="italic">$ORACLE_HOME</span>/md/doc/README.txt
</pre></div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment106">
<tr>
<td class="cellalignment121">
<table class="cellalignment111">
<tr>
<td class="cellalignment110"><a href="network-data-model.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment110"><a href="SDO_NET-reference.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment123">
<table class="cellalignment109">
<tr>
<td class="cellalignment110"><a href="../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment110"><a href="../nav/portal_booklist.htm"><img width="24" height="24" src="../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment110"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment110"><a href="index.htm"><img width="24" height="24" src="../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment110"><a href="../nav/mindx.htm"><img width="24" height="24" src="../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment110"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>


</body></html>